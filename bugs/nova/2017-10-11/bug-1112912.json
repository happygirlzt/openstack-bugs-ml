{
    "status": "Fix Released", 
    "last_updated": "2014-05-18 05:26:18.395853+00:00", 
    "description": "This bug report is from the discussion of\nhttps://review.openstack.org/#/c/19126/17/nova/virt/libvirt/vif.py\n\nI'm going to file this as a bug for tracking issue\n\nThe patch introduces get_firewall_required function.\nBut the patch checks only conf file.\nThis should use quantum VIF parameter.\nhttps://github.com/openstack/quantum/blob/master/quantum/plugins/openvswitch/ovs_quantum_plugin.py#L513", 
    "tags": [
        "sg-fw"
    ], 
    "importance": "High", 
    "heat": 108, 
    "link": "https://bugs.launchpad.net/nova/+bug/1112912", 
    "owner": "https://api.launchpad.net/1.0/~nati-ueno", 
    "id": 1112912, 
    "index": 950, 
    "created": "2013-02-01 21:38:37.383141+00:00", 
    "title": "get_firewall_required should use VIF parameter from neutron", 
    "comments": [
        {
            "content": "This bug report is from the discussion of \nhttps://review.openstack.org/#/c/19126/17/nova/virt/libvirt/vif\n\nI'm going to file this as a bug for tracking issue\n\nThe patch introduces get_firewall_required function. \nBut the patch checks only conf file.\nThis should use quantum VIF parameter.\nhttps://github.com/openstack/quantum/blob/master/quantum/plugins/openvswitch/ovs_quantum_plugin.py#L513", 
            "date_created": "2013-02-01 21:38:37.383141+00:00", 
            "author": "https://api.launchpad.net/1.0/~nati-ueno"
        }, 
        {
            "content": "assigning to nachi in quantum project, as this is a dependency for getting his quantum change in.  \n\nreal work will be done in nova. ", 
            "date_created": "2013-02-04 20:42:05.120781+00:00", 
            "author": "https://api.launchpad.net/1.0/~danwent"
        }, 
        {
            "content": "Akihiro and Dan and Me discussed about the quantum side spec.\nThe conclusion is following.\n\nvif_require_iptables \nvif_prevent_spoofing \nvif_require_securitygroup\n\nNote:\n why vif_ is needed?  <- it is because the subnect ( nova or quantum ) is confusing no\n why just firewalling is not sufficient <- in nova, spoofing and securitygroup is different function, so we need to specify it.\n", 
            "date_created": "2013-02-14 01:53:25.716405+00:00", 
            "author": "https://api.launchpad.net/1.0/~nati-ueno"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/21946", 
            "date_created": "2013-02-14 05:43:57.701473+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "@nachi: can you describe the intended semantics of each of those 3 options.", 
            "date_created": "2013-02-15 11:41:28.374550+00:00", 
            "author": "https://api.launchpad.net/1.0/~berrange"
        }, 
        {
            "content": "Three parameters have the following meaning.\n- vif_require_securitygroup : If True, Quantum does not provide security group feature and Nova requires to provide security group feature.\n- vif_prevent_spoofing : If True, Nova requires to setup IP/MAC spoofing filters (Quantum does not provide it). get_firewall_required() in libvirt/vif.py is expected to return True.\n- vif_require_iptables : If True, Nova needs to make sure iptables works. If a bridge is OVS, hybrid vif plugging needs to be setup.  There is no relation between this value and whether Quantum or Nova provides security group.\n", 
            "date_created": "2013-02-17 06:47:38.596289+00:00", 
            "author": "https://api.launchpad.net/1.0/~amotoki"
        }, 
        {
            "content": "During reading nova/virt/libvirt code, I noticed that even if vif_require_securitygroup is passed from Quantum there is nothing \nnova libvirt VIF driver can do. We need to configure firewall_driver in nova.conf.\nWhat do you think nova is expected to do when vif_require_securitygroup is passed from Quantum?\nIMO, to make this parameter work, we need to change the codes outside vif plugging.\n\nIn addition, libvirt nwfilter setup-ed by Nova defines two types of provider rules:\n(a) rules to allow DHCP/RA packets and (b) rules to prevent IP/MAC spoofing.\nWhat do you think about the relationship between vif_* parameters and the above nwfilter rules?\n", 
            "date_created": "2013-02-17 06:54:13.239965+00:00", 
            "author": "https://api.launchpad.net/1.0/~amotoki"
        }, 
        {
            "content": "Hi Akihito , Daniel\n\n@Daniel, \nWe changed the paramter little bit\n\nvif_security: {\nrequire_securitygroup : boolean #If True, Quantum does not provide security group feature and Nova requires to provide security group feature,\nprevent_spoofing :boolean # If True, Nova requires to setup IP/MAC spoofing filters (Quantum does not provide it). get_firewall_required() in libvirt/vif.py is expected to return True,\nrequire_iptables : boolean # If True, Nova needs to make sure iptables works. If a bridge is \n}\n\n@Akihiro\nI agree with you. May be this dynamic configuration may not be in G.\nHowever we should have the function, so IMO it good to update Quantum side first.\n( or may be, we should wait to add the parameter )\n\nIMO prevent_spoofing is for both of (a) rules to allow DHCP/RA packets and (b) rules to prevent IP/MAC spoofing.\nThe reason is allowing only quantum's DHCP/RA server is for dhcp/RA spoofing. so IMO, both of (a) and (b) is for preventing spoofing.\n", 
            "date_created": "2013-02-17 21:57:03.447801+00:00", 
            "author": "https://api.launchpad.net/1.0/~nati-ueno"
        }, 
        {
            "content": "@Nachi\nThanks for the clarification of the scope. I agree with you.\nIn G release, it sounds reasonable to configure libvirt firewall driver to NoopFirewall by manual.", 
            "date_created": "2013-02-18 09:10:06.604758+00:00", 
            "author": "https://api.launchpad.net/1.0/~amotoki"
        }, 
        {
            "content": "> During reading nova/virt/libvirt code, I noticed that even if vif_require_securitygroup is passed from Quantum there is nothing\n> nova libvirt VIF driver can do. We need to configure firewall_driver in nova.conf.\n\nYes, the current static configuration of firewall driver in Nova is fundamentally flawed. We need to remove that static configuration parameter and have the VIF driver dynamically decide on which firewall impl to use. At this point, we'll have to wait for the Havana release to make such a change though.", 
            "date_created": "2013-02-18 10:23:05.415457+00:00", 
            "author": "https://api.launchpad.net/1.0/~berrange"
        }, 
        {
            "content": "Looking at these parameters:\n\nvif_security: {\nrequire_securitygroup : boolean #If True, Quantum does not provide security group feature and Nova requires to provide security group feature,\nprevent_spoofing :boolean # If True, Nova requires to setup IP/MAC spoofing filters (Quantum does not provide it). get_firewall_required() in libvirt/vif.py is expected to return True,\nrequire_iptables : boolean # If True, Nova needs to make sure iptables works. If a bridge is\n}\n\nI think the first two parameters should be inverted. ie rather than telling Nova what todo, they should describe what Quantum has done. I'd also suggest having separate params for IP & MAC spoofing (even if Quantum does provide both at the same time). eg I'd prefer to see something like this:\n\nvif_security {\n   has_securitygroup: boolean. True if Quantum has provided a security group.\n   has_ip_spoofing: boolean. True if Quantum has enabled IP spoofing protection.\n   has_mac_spoofing: boolean. True if Quantum has enabled MAC spoofing protection\n  require_iptables: boolean. True if Quantum requires support for iptables\n}\n", 
            "date_created": "2013-02-18 10:28:16.840485+00:00", 
            "author": "https://api.launchpad.net/1.0/~berrange"
        }, 
        {
            "content": "I'm fine with splitting mac + IP spoofing.  \n\nI think the main goal here is that it should always be unambiguous what is expected of the Nova virt layer.  I don't really care how things are worded as long as that is the case.\n\nMy concern with wording things in terms of quantum is that just because quantum does or does not do something, it may not be unambiguous what what nova should do.  Imagine a special use case of Quantum + Nova where no firewalling should be performed, hence, the quantum plugin does not support security groups. It then passes back has_securitygroup : false.  However, this does not mean that it wants Nova to do security groups... quite the opposite, it doesn't want ANYONE to do security groups.  If quantum passes back exactly what it wants Nova to do, we don't have a problem, as quantum could just tell Nova to not do security groups, and also not do security groups itself.  ", 
            "date_created": "2013-02-18 23:26:31.079915+00:00", 
            "author": "https://api.launchpad.net/1.0/~danwent"
        }, 
        {
            "content": "@dan: so the issue is really who is in charge of defining the overall policy for VIF network setup. \n\nMy mindset in comment #10 is that Quantum is providing a mechanism for creating VIFs, while Nova is providing the policy for configuring them with the guest, and as such Nova decides whether firewalling is required or not. So the scenario you describe is not an issue in this POV. \n\nFrom your description it seems you believe Quantum is in charge of policy for how the VIF is configured & thus making the decision about whether firewalling is required or not, and Nova is only providing the mechanism.\n\nIMHO it doesn't make sense for Quantum to be the thing declaring that a VM should have completely unfiltered network access. This is a decision for Nova to make, since it is in charge of VM managmeent & policy. Quantum is merely providing a way to connect a VM to a physical network", 
            "date_created": "2013-02-19 10:10:05.798691+00:00", 
            "author": "https://api.launchpad.net/1.0/~berrange"
        }, 
        {
            "content": "Ok, now understand where you are coming from better.  Well, at least we've gotten to the essence of the question :) \n\nMy understanding of your main goal was to eliminate the need for configuration variables in nova + quantum to be manually in sync, which to me implies that one entity would have to decide the desired state, and push it to the others.  Since we are talking about aspects of network filtering, my thinking is that the network service would own the decision, pushing this information to Nova.  \n\nA key question here is which service \"owns\" network filtering policy, given that it is technically possible to implement filtering in both systems.  Having it owned in two places doesn't make sense to me, since the policies could conflict unless manually synced.  The reality is that Nova was originally designed in the absence of a network service, and thus took on certain network capabilities initially.  We've moved functionality like security groups, floating IPs, etc. to Quantum, though we will not yet remove these capabilities from Nova for obvious backward compat reasons.  As a result, it seems reasonable that when quantum is in use, the user has decided that quantum owns the definition of network behavior.  ", 
            "date_created": "2013-02-19 16:50:50.162126+00:00", 
            "author": "https://api.launchpad.net/1.0/~danwent"
        }, 
        {
            "content": "so we move this to the grizzly-rc1?\nI feel we need to still spec discussion here.\n", 
            "date_created": "2013-02-19 22:48:22.535549+00:00", 
            "author": "https://api.launchpad.net/1.0/~nati-ueno"
        }, 
        {
            "content": "@dan: i guess the Nova admin is still getting to choose which security filter is applied to each VM, so in that sense Nova is still in charge of overall functional policy. As such I'm ok with the naming proposal in comment #7, if we split the MAC & IP spoofing to separate parameters.", 
            "date_created": "2013-02-20 11:22:53.580873+00:00", 
            "author": "https://api.launchpad.net/1.0/~berrange"
        }, 
        {
            "content": "Hi folks\n\nMay be we should add dhcp stuff also.\nplease check this one\n\nvif_security: {\nrequire_securitygroup : boolean #If True, Quantum does not provide security group feature and Nova requires to provide security group feature,\nprevent_ip_spoofing :boolean # If True, Nova requires to setup IP spoofing filters (Quantum does not provide it). \nprevent_mac_spoofing :boolean # If True, Nova requires to setup MAC spoofing filters (Quantum does not provide it). \nprevent_dhcp_spoofing :boolean # If True, Nova requires to setup MAC spoofing filters (Quantum does not provide it).get_firewall_required() in libvirt/vif.py is expected to return True,\nrequire_iptables : boolean # If True, Nova needs to make sure iptables works. If a bridge is\n}", 
            "date_created": "2013-02-25 22:33:29.279885+00:00", 
            "author": "https://api.launchpad.net/1.0/~nati-ueno"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/44596", 
            "date_created": "2013-08-31 17:03:12.582538+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "As reported in bug 1252620, hybrid VIF driver no longer exists in Nova and Neutron security group with OVS agent does not work.\n\nWe need to address this issue ASAP.\nML2 with OVS agent is the reference implementation, so I believe it is critical.", 
            "date_created": "2013-11-19 11:27:55.891252+00:00", 
            "author": "https://api.launchpad.net/1.0/~amotoki"
        }, 
        {
            "content": "The issue was introduced with this commit: http://github.com/openstack-dev/devstack/commit/1143f7e45fd2760b8d5fecc8fbd598078ba92fd3\n\nwhich uncovered that the hybrid plugging strategy is relying on get_firewall_required which just return a conf variable for nova.\n\nCurrently all neutron tests are running without security groups enforced, and all people using devstack with ml2/ovs/lb plugins are basically just unable to use security groups with default settings.", 
            "date_created": "2013-11-20 14:05:33.971411+00:00", 
            "author": "https://api.launchpad.net/1.0/~salvatore-orlando"
        }, 
        {
            "content": "@salvatore, yes, per the TODO item in the code that get_firewall_required method was known to need more work. It was/is blocked on Neutron being able to provide suitable metadata when plugging the VIF. Unfortunately it seems the changeset fixing the neutron side of things in comment #17 has been abandoned.", 
            "date_created": "2013-11-20 14:31:35.070177+00:00", 
            "author": "https://api.launchpad.net/1.0/~berrange"
        }, 
        {
            "content": "@nati-ueno - you can use this unmerged test to check rules are enforced.\njust remove the line ignoring negative connectivity test\nhttps://review.openstack.org/#/c/55101/", 
            "date_created": "2013-11-20 14:37:52.625900+00:00", 
            "author": "https://api.launchpad.net/1.0/~yfried"
        }, 
        {
            "content": "It looks like we should fix this ASAP\nI'll work on this issue tomorrow.\n\nAlso, we should have negative test (ping should fail under the security group policy applied) in the gating\n", 
            "date_created": "2013-11-21 07:27:08.404050+00:00", 
            "author": "https://api.launchpad.net/1.0/~nati-ueno"
        }, 
        {
            "content": "@nachi, the patch I posted contains negative tests but can't be merged until bug is fixed", 
            "date_created": "2013-11-25 04:12:49.094197+00:00", 
            "author": "https://api.launchpad.net/1.0/~yfried"
        }, 
        {
            "content": "This is neutron side patch\nhttps://review.openstack.org/#/c/21946/", 
            "date_created": "2013-12-16 21:24:29.944148+00:00", 
            "author": "https://api.launchpad.net/1.0/~nati-ueno"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/67281", 
            "date_created": "2014-01-16 19:51:53.908115+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/72452", 
            "date_created": "2014-02-10 19:14:39.032807+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/72452\nCommitted: https://git.openstack.org/cgit/openstack/neutron/commit/?id=be8a06894390af032e8e0aea2108da4780678cc7\nSubmitter: Jenkins\nBranch:    master\n\ncommit be8a06894390af032e8e0aea2108da4780678cc7\nAuthor: Bob Kukura <email address hidden>\nDate:   Mon Feb 3 23:18:44 2014 -0500\n\n    Replace binding:capabilities with binding:vif_details\n    \n    In addition to binding:vif_type, the neutron core plugin needs to\n    supply various information to nova's VIF driver, such as VIF security\n    details and PCI details when SR-IOV is being used. This information is\n    read-only, requires admin privileges, and is not intended for normal\n    users. Rather than add separate mechanisms throughout the stack for\n    each such requirement, the binding:capabilities port attibute, which\n    is a dictionary and is not currently not used by nova, is renamed to\n    binding:vif_details to serve as a general-purpose mechanism for\n    supplying binding-specific details to the VIF driver.\n    \n    This patch does not remove or replace the CAP_PORT_FILTER boolean\n    previously used in binding:capabilities. A separate patch should\n    implement the specific key/value pairs carried by binding:vif_details\n    to implement VIF security. Another patch will implement the key/value\n    pairs needed for SR-IOV.\n    \n    The ML2 plugin now allows the bound mechanism driver to supply the\n    binding:vif_details dictionary content, instead of just the\n    CAP_PORT_FILTER boolean previously carried by the binding:capabilities\n    attribute.\n    \n    DocImpact: Need to update portbinding extension API, but no impact on\n    user or administrator documentation.\n    \n    Implements: blueprint vif-details\n    Related-Bug: 1112912\n    Change-Id: I34be746fcfa73c70f72b4f9add8eff3ac88c723f\n", 
            "date_created": "2014-02-24 14:57:31.802009+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/67281\nCommitted: https://git.openstack.org/cgit/openstack/neutron/commit/?id=f87e7d964c19cc2be33226df66f0c823af993d49\nSubmitter: Jenkins\nBranch:    master\n\ncommit f87e7d964c19cc2be33226df66f0c823af993d49\nAuthor: Nachi Ueno <email address hidden>\nDate:   Thu Jan 16 10:54:26 2014 -0800\n\n    Add enable_security_group option\n    \n    Using noop driver to disable security group is confusing.\n    In this commit, we introduce enable_security_group in server side.\n    \n    DocImpact\n    UpgradeImpact\n    \n    Implements bp: security-group-config-cleanup\n    Related-Bug: 1112912\n    Change-Id: Ice44a4e2a519c64e613eeb24372de46726473339\n", 
            "date_created": "2014-03-22 02:15:57.941430+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "the nova part will be addressed by \n\nhttps://bugs.launchpad.net/neutron/+bug/1297469", 
            "date_created": "2014-03-25 22:03:03.867115+00:00", 
            "author": "https://api.launchpad.net/1.0/~tjones-i"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/83280", 
            "date_created": "2014-03-27 02:58:29.341348+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/83292", 
            "date_created": "2014-03-27 05:10:22.341626+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Change combining neutron, nova, and tempest with the negative security group check tested as a devstack patch here: https://review.openstack.org/#/c/83281/", 
            "date_created": "2014-03-27 06:24:08.063486+00:00", 
            "author": "https://api.launchpad.net/1.0/~kevinbenton"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/83280\nCommitted: https://git.openstack.org/cgit/openstack/neutron/commit/?id=8c42ba115b58cc2c7486be9fee89e1facedb5f76\nSubmitter: Jenkins\nBranch:    master\n\ncommit 8c42ba115b58cc2c7486be9fee89e1facedb5f76\nAuthor: Kevin Benton <email address hidden>\nDate:   Thu Mar 27 02:40:12 2014 +0000\n\n    Adds OVS_HYBRID_PLUG flag to portbindings\n    \n    Adds a flag to the ML2, openvswitch, and BigSwitch\n    plugins to inform nova that the OVS hybrid plugging\n    strategy should be used.\n    \n    Closes-Bug: #1112912\n    Change-Id: If004db60e084f4cea095ca9ecccb0537240d4183\n", 
            "date_created": "2014-03-27 09:34:46.250503+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "nova patch: https://review.openstack.org/#/c/83190/", 
            "date_created": "2014-03-27 20:34:42.482022+00:00", 
            "author": "https://api.launchpad.net/1.0/~russellb"
        }, 
        {
            "content": "Is this exploitable?", 
            "date_created": "2014-03-28 16:57:16.182325+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "For information on what was affected. This would only be for deployments using ML2, neutron security groups, and the LibvirtGenericVIFDriver nova vif driver.\n\nThis does not affect LibvirtHybridOVSBridgeDriver based nova deployments. The LibvirtHybridOVSBridgeDriver was not removed until Icehouse.", 
            "date_created": "2014-03-31 18:37:45.871062+00:00", 
            "author": "https://api.launchpad.net/1.0/~kevinbenton"
        }, 
        {
            "content": "Is the Fix available in latest Havana maintenance release or should we wait till Icehouse release?\n", 
            "date_created": "2014-04-04 18:00:48.332919+00:00", 
            "author": "https://api.launchpad.net/1.0/~pjshankarganesh"
        }, 
        {
            "content": "This is only fixed in Icehouse release candidate 1 as far as I can tell. I'm still trying to get a handle on whether it's actually an exploitable security vulnerability in Havana warranting an advisory--it was opened during the Grizzly development cycle, but Thierry only just switched it to be a security bug a week ago so we could probe the risk exposure on it.", 
            "date_created": "2014-04-04 18:39:59.658507+00:00", 
            "author": "https://api.launchpad.net/1.0/~fungi"
        }, 
        {
            "content": "This bug only affects Icehouse release. so no need to backport for previous one.", 
            "date_created": "2014-04-04 18:47:02.611702+00:00", 
            "author": "https://api.launchpad.net/1.0/~nati-ueno"
        }, 
        {
            "content": "Great--thanks Nachi!", 
            "date_created": "2014-04-04 19:59:10.669947+00:00", 
            "author": "https://api.launchpad.net/1.0/~fungi"
        }, 
        {
            "content": "tempest change: https://review.openstack.org/#/c/62702/", 
            "date_created": "2014-05-18 05:26:01.428111+00:00", 
            "author": "https://api.launchpad.net/1.0/~afazekas"
        }
    ]
}