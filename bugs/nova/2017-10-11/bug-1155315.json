{
    "status": "Fix Released", 
    "last_updated": "2013-04-11 19:55:17.657353+00:00", 
    "description": "Repro steps:\n\nAttempt to attach volume to an in use device\n$ nova volume-attach bar c3e6b09b-88c8-4fb3-a115-b5921eb0b6f0 /dev/vda\nERROR: The supplied device path (/dev/vda) is in use. (HTTP 400) (Request-ID: req-d2cfbc33-dbfc-4034-82f0-85b5de3e3fa7)\n\nExceptions are correct but we get a large traceback in the logs:\n\n2013-03-14 13:25:24.996 DEBUG nova.api.openstack.wsgi [req-d2cfbc33-dbfc-4034-82f0-85b5de3e3fa7 demo demo] API request failed, fault raised to the top of the stack. Detailed stacktrace The supplied device path (/dev/vda) is in use.\nTraceback (most recent call last):\n\n\u00a0\u00a0File \"/opt/stack/nova/nova/openstack/common/rpc/amqp.py\", line 430, in _process_data\n\u00a0\u00a0\u00a0\u00a0rval = self.proxy.dispatch(ctxt, version, method, **args)\n\n\u00a0\u00a0File \"/opt/stack/nova/nova/openstack/common/rpc/dispatcher.py\", line 133, in dispatch\n\u00a0\u00a0\u00a0\u00a0return getattr(proxyobj, method)(ctxt, **kwargs)\n\n\u00a0\u00a0File \"/opt/stack/nova/nova/exception.py\", line 117, in wrapped\n\u00a0\u00a0\u00a0\u00a0temp_level, payload)\n\n\u00a0\u00a0File \"/usr/lib/python2.7/contextlib.py\", line 24, in __exit__\n\u00a0\u00a0\u00a0\u00a0self.gen.next()\n\n\u00a0\u00a0File \"/opt/stack/nova/nova/exception.py\", line 94, in wrapped\n\u00a0\u00a0\u00a0\u00a0return f(self, context, *args, **kw)\n\n\u00a0\u00a0File \"/opt/stack/nova/nova/compute/manager.py\", line 206, in decorated_function\n\u00a0\u00a0\u00a0\u00a0pass\n\n\u00a0\u00a0File \"/usr/lib/python2.7/contextlib.py\", line 24, in __exit__\n\u00a0\u00a0\u00a0\u00a0self.gen.next()\n\n\u00a0\u00a0File \"/opt/stack/nova/nova/compute/manager.py\", line 192, in decorated_function\n\u00a0\u00a0\u00a0\u00a0return function(self, context, *args, **kwargs)\n\n\u00a0\u00a0File \"/opt/stack/nova/nova/compute/manager.py\", line 234, in decorated_function\n\u00a0\u00a0\u00a0\u00a0e, sys.exc_info())\n\n\u00a0\u00a0File \"/usr/lib/python2.7/contextlib.py\", line 24, in __exit__\n\u00a0\u00a0\u00a0\u00a0self.gen.next()\n\n\u00a0\u00a0File \"/opt/stack/nova/nova/compute/manager.py\", line 221, in decorated_function\n\u00a0\u00a0\u00a0\u00a0return function(self, context, *args, **kwargs)\n\n\u00a0\u00a0File \"/opt/stack/nova/nova/compute/manager.py\", line 2757, in reserve_block_device_name\n\u00a0\u00a0\u00a0\u00a0return do_reserve()\n\n\u00a0\u00a0File \"/opt/stack/nova/nova/openstack/common/lockutils.py\", line 242, in inner\n\u00a0\u00a0\u00a0\u00a0retval = f(*args, **kwargs)\n\n\u00a0\u00a0File \"/opt/stack/nova/nova/compute/manager.py\", line 2746, in do_reserve\n\u00a0\u00a0\u00a0\u00a0context, instance, bdms, device)\n\n\u00a0\u00a0File \"/opt/stack/nova/nova/compute/utils.py\", line 164, in get_device_name_for_instance\n\u00a0\u00a0\u00a0\u00a0raise exception.DevicePathInUse(path=device)\n\nDevicePathInUse: The supplied device path (/dev/vda) is in use.\n\nThese exceptions are expected so there is no need for traceback.", 
    "tags": [], 
    "importance": "Medium", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1155315", 
    "owner": "https://api.launchpad.net/1.0/~vishvananda", 
    "id": 1155315, 
    "index": 3288, 
    "created": "2013-03-14 20:27:38.588720+00:00", 
    "title": "Expected exception on volume attach leaves traceback in the logs.", 
    "comments": [
        {
            "content": "Repro steps:\n\nAttempt to attach volume to an in use device\n$ nova volume-attach bar c3e6b09b-88c8-4fb3-a115-b5921eb0b6f0 foo\nERROR: The supplied device path (foo) is invalid. (HTTP 400) (Request-ID: req-3d84b73e-d7de-4d17-975c-2fda515b3206)\n\n(or)\n\nAttempt to attach volume to an invalid device\n$ nova volume-attach bar c3e6b09b-88c8-4fb3-a115-b5921eb0b6f0 /dev/vda\nERROR: The supplied device path (/dev/vda) is in use. (HTTP 400) (Request-ID: req-d2cfbc33-dbfc-4034-82f0-85b5de3e3fa7)\n\nExceptions are correct but we get a large traceback in the logs:\n\n2013-03-14 13:25:24.996 DEBUG nova.api.openstack.wsgi [req-d2cfbc33-dbfc-4034-82f0-85b5de3e3fa7 demo demo] API request failed, fault raised to the top of the stack. Detailed stacktrace The supplied device path (/dev/vda) is in use.\nTraceback (most recent call last):\n\n  File \"/opt/stack/nova/nova/openstack/common/rpc/amqp.py\", line 430, in _process_data\n    rval = self.proxy.dispatch(ctxt, version, method, **args)\n\n  File \"/opt/stack/nova/nova/openstack/common/rpc/dispatcher.py\", line 133, in dispatch\n    return getattr(proxyobj, method)(ctxt, **kwargs)\n\n  File \"/opt/stack/nova/nova/exception.py\", line 117, in wrapped\n    temp_level, payload)\n\n  File \"/usr/lib/python2.7/contextlib.py\", line 24, in __exit__\n    self.gen.next()\n\n  File \"/opt/stack/nova/nova/exception.py\", line 94, in wrapped\n    return f(self, context, *args, **kw)\n\n  File \"/opt/stack/nova/nova/compute/manager.py\", line 206, in decorated_function\n    pass\n\n  File \"/usr/lib/python2.7/contextlib.py\", line 24, in __exit__\n    self.gen.next()\n\n  File \"/opt/stack/nova/nova/compute/manager.py\", line 192, in decorated_function\n    return function(self, context, *args, **kwargs)\n\n  File \"/opt/stack/nova/nova/compute/manager.py\", line 234, in decorated_function\n    e, sys.exc_info())\n\n  File \"/usr/lib/python2.7/contextlib.py\", line 24, in __exit__\n    self.gen.next()\n\n  File \"/opt/stack/nova/nova/compute/manager.py\", line 221, in decorated_function\n    return function(self, context, *args, **kwargs)\n\n  File \"/opt/stack/nova/nova/compute/manager.py\", line 2757, in reserve_block_device_name\n    return do_reserve()\n\n  File \"/opt/stack/nova/nova/openstack/common/lockutils.py\", line 242, in inner\n    retval = f(*args, **kwargs)\n\n  File \"/opt/stack/nova/nova/compute/manager.py\", line 2746, in do_reserve\n    context, instance, bdms, device)\n\n  File \"/opt/stack/nova/nova/compute/utils.py\", line 164, in get_device_name_for_instance\n    raise exception.DevicePathInUse(path=device)\n\nDevicePathInUse: The supplied device path (/dev/vda) is in use.\n\nThese exceptions are expected so there is no need for traceback.", 
            "date_created": "2013-03-14 20:27:38.588720+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/24475", 
            "date_created": "2013-03-14 20:54:20.848825+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: stable/folsom\nReview: https://review.openstack.org/24476", 
            "date_created": "2013-03-14 20:56:52.993860+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/24475\nCommitted: http://github.com/openstack/nova/commit/d63bd8d692a9eb16caa818101cdbb3358f6b4681\nSubmitter: Jenkins\nBranch:    master\n\ncommit d63bd8d692a9eb16caa818101cdbb3358f6b4681\nAuthor: Vishvananda Ishaya <email address hidden>\nDate:   Thu Mar 14 13:47:42 2013 -0700\n\n    Don't include traceback when wrapping exceptions\n    \n    The fix in fa52cb09b2270876c9d9a03106f961be6c9db834 strips tracebacks\n    from exceptions when returning them to the user, but it still spams\n    the log with a long traceback. We shouldn't be including the traceback\n    when we wrap the exception in the first place. Instead we just\n    include the message.\n    \n    It also updates the error code to 409 for device in use since this\n    is actually a conflict.\n    \n    Fix for:\n    \n      bug 1155315\n      bug 1103324\n      bug 1092610\n    \n    Change-Id: I95019a3022eb52e0335c455009c13fe229475d03\n", 
            "date_created": "2013-03-14 22:58:53.287788+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/24476\nCommitted: http://github.com/openstack/nova/commit/524a5a3dc89331649bf89ab442d0295f45dcae3f\nSubmitter: Jenkins\nBranch:    stable/folsom\n\ncommit 524a5a3dc89331649bf89ab442d0295f45dcae3f\nAuthor: Vishvananda Ishaya <email address hidden>\nDate:   Thu Mar 14 13:47:42 2013 -0700\n\n    Don't include traceback when wrapping exceptions\n    \n    The fix in fa52cb09b2270876c9d9a03106f961be6c9db834 strips tracebacks\n    from exceptions when returning them to the user, but it still spams\n    the log with a long traceback. We shouldn't be including the traceback\n    when we wrap the exception in the first place. Instead we just\n    include the message.\n    \n    It also updates the error code to 409 for device in use since this\n    is actually a conflict.\n    \n    Fix for:\n    \n      bug 1155315\n      bug 1103324\n      bug 1092610\n    \n    Change-Id: I95019a3022eb52e0335c455009c13fe229475d03\n    (cherry picked from commit d63bd8d692a9eb16caa818101cdbb3358f6b4681)\n", 
            "date_created": "2013-03-26 07:51:15.018502+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}