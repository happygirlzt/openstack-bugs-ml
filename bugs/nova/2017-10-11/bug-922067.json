{
    "status": "Opinion", 
    "last_updated": "2013-03-08 19:36:49.640541+00:00", 
    "description": "i tested starting nova-api with wrong credentials for RabbitMQ. service started without problems. the first errors regarding failed connections to the RabbitMQ service came up after trying to start a new instance. other operations, like listing instances, seems to work without RabbitMQ.\n\ni think all necessary connections to external services should be checked during the starting procedure of a service and not initial before the first use of the external service. \n\nfor example after scheduling the creation of a new instance i can see the error in the logs, i have to fix nova.conf and afterward i have to restart the nova-api service. but looks like the scheduled instance is stucked after the restart of nova-api (now with working RabbitMQ credentials), the instance is in state \"scheduling\" forever (maybe that's a second bug, not sure about that).", 
    "tags": [], 
    "importance": "Wishlist", 
    "heat": 10, 
    "link": "https://bugs.launchpad.net/nova/+bug/922067", 
    "owner": "None", 
    "id": 922067, 
    "index": 1193, 
    "created": "2012-01-26 13:16:00.126801+00:00", 
    "title": "connection to RabbitMQ should be created directly after start of services", 
    "comments": [
        {
            "content": "i tested starting nova-api with wrong credentials for RabbitMQ. service started without problems. the first errors regarding failed connections to the RabbitMQ service came up after trying to start a new instance. other operations, like listing instances, seems to work without RabbitMQ.\n\ni think all necessary connections to external services should be checked during the starting procedure of a service and not initial before the first use of the external service. \n\nfor example after scheduling the creation of a new instance i can see the error in the logs, i have to fix nova.conf and afterward i have to restart the nova-api service. but looks like the scheduled instance is stucked after the restart of nova-api (now with working RabbitMQ credentials), the instance is in state \"scheduling\" forever (maybe that's a second bug, not sure about that).", 
            "date_created": "2012-01-26 13:16:00.126801+00:00", 
            "author": "https://api.launchpad.net/1.0/~berendt"
        }, 
        {
            "content": "This could be very frustrating. However, I'm not certain we can check *all* of our connections up front. Additionally, who's to say that if something like glance is down, that we won't start nova-api? Or even if the scheduler is down? Maybe the only connection we should be checking here is the rabbitmq server and nothing else.", 
            "date_created": "2012-01-27 17:20:10.369426+00:00", 
            "author": "https://api.launchpad.net/1.0/~bcwaldon"
        }, 
        {
            "content": "I think the service should start, even if one component is not working. But it would be nice if there is a error message during the starting process highlighting that a external service was not available during the start up.\n\nAlso I think the problem is not that a external service is down, the problem is if a service uses a wrong configuration of an external service and I have to fix it later I'll first note it after starting the first action using the external service.\n\nI think no high impact for productive environments, it's just uncomfortable to setup a testing or development environment and to not have a status after a service startup if all should be working fine.\n\nAt least the connection to the queueing service and to the database service should be checked, I think both are essential for a working nova service (database service only if used by the specific nova service). All other service can be done without (big) problems.", 
            "date_created": "2012-01-27 17:40:12.665272+00:00", 
            "author": "https://api.launchpad.net/1.0/~berendt"
        }, 
        {
            "content": "The only workers that doesn't create queues on boot is nova-api.  The other workers will error if they start up and can't connect to rabbit.  So we could do this by just making nova-api connect to rabbit.  It might be nice to implement this by giving all of the services a ping-> pong.  Then nova-api can just ping all of the expected components and print a warning for any that it can't find.\n\nOn Jan 27, 2012, at 9:40 AM, Christian Berendt wrote:\n\n> I think the service should start, even if one component is not working.\n> But it would be nice if there is a error message during the starting\n> process highlighting that a external service was not available during\n> the start up.\n> \n> Also I think the problem is not that a external service is down, the\n> problem is if a service uses a wrong configuration of an external\n> service and I have to fix it later I'll first note it after starting the\n> first action using the external service.\n> \n> I think no high impact for productive environments, it's just\n> uncomfortable to setup a testing or development environment and to not\n> have a status after a service startup if all should be working fine.\n> \n> At least the connection to the queueing service and to the database\n> service should be checked, I think both are essential for a working nova\n> service (database service only if used by the specific nova service).\n> All other service can be done without (big) problems.\n> \n> -- \n> You received this bug notification because you are subscribed to\n> OpenStack Compute (nova).\n> https://bugs.launchpad.net/bugs/922067\n> \n> Title:\n>  connection to RabbitMQ should be created directly after start of\n>  services\n> \n> Status in OpenStack Compute (Nova):\n>  Confirmed\n> \n> Bug description:\n>  i tested starting nova-api with wrong credentials for RabbitMQ.\n>  service started without problems. the first errors regarding failed\n>  connections to the RabbitMQ service came up after trying to start a\n>  new instance. other operations, like listing instances, seems to work\n>  without RabbitMQ.\n> \n>  i think all necessary connections to external services should be\n>  checked during the starting procedure of a service and not initial\n>  before the first use of the external service.\n> \n>  for example after scheduling the creation of a new instance i can see\n>  the error in the logs, i have to fix nova.conf and afterward i have to\n>  restart the nova-api service. but looks like the scheduled instance is\n>  stucked after the restart of nova-api (now with working RabbitMQ\n>  credentials), the instance is in state \"scheduling\" forever (maybe\n>  that's a second bug, not sure about that).\n> \n> To manage notifications about this bug go to:\n> https://bugs.launchpad.net/nova/+bug/922067/+subscriptions\n\n", 
            "date_created": "2012-01-27 18:36:17+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "I think the current behavior isn't that bad.  Every other service connects to the message broker on startup because that's when it needs it.  nova-api will connect only when needed, since not all requests require it.  Nova is going to be completely busted if it's not up, so it's pretty hard to miss and should be monitored for anyway.\n\nIt's been over a year since this was filed, so I'm going to move into the older queue of requests (Opinion / Wishlist) in case someone would like to pick it up later.", 
            "date_created": "2013-03-08 19:36:40.416660+00:00", 
            "author": "https://api.launchpad.net/1.0/~russellb"
        }
    ]
}