{
    "status": "Triaged", 
    "last_updated": "2017-06-23 16:26:31.045979+00:00", 
    "description": "now the migration status in nova is hard-code.\n\nThey are defined arbitrary.  \nSuch as, we need a \"cancelled\" status, then we defined it where where want.\n\n1. firstly \nthis is not a good program style. \n\n2. this is error prone. \nsuch as we need a list of in-progress status migrations.\nwe need to do the follow command to summarize all migration status firstly.\nthis is easy to missing some status. \n\n$ git grep \"mig.*status\"\n......\nnova/compute/api.py:        migration.status = 'confirming'\nnova/compute/api.py:        mig.status = 'finished'\nnova/compute/api.py:        if migration.status != 'running':\nnova/compute/api.py:                                                  state=migration.status,\nnova/compute/manager.py:                # decorated function, migration status should be set to\nnova/compute/manager.py:                # 'error', without checking current migration status.\nnova/compute/manager.py:                    status = migration.status\nnova/compute/manager.py:                migration.status = 'error'\n......", 
    "tags": [
        "live-migration", 
        "refactor"
    ], 
    "importance": "Low", 
    "heat": 12, 
    "link": "https://bugs.launchpad.net/nova/+bug/1549558", 
    "owner": "None", 
    "id": 1549558, 
    "index": 690, 
    "created": "2016-02-25 01:33:49.742161+00:00", 
    "title": "centralize all migration status together", 
    "comments": [
        {
            "content": "now the migration status in nova is hard-code.\n\nThey are defined arbitrary.  \nSuch as, we need a \"cancelled\" status, then we defined it where where want.\n\n1. firstly \nthis is not a good program style. \n\n2. this is error prone. \nsuch as we need a list of in-progress status migrations.\nwe need to do the follow command to summarize all migration status firstly.\nthis is easy to missing some status. \n\n$ git grep \"mig.*status\"\n......\nnova/compute/api.py:        migration.status = 'confirming'\nnova/compute/api.py:        mig.status = 'finished'\nnova/compute/api.py:        if migration.status != 'running':\nnova/compute/api.py:                                                  state=migration.status,\nnova/compute/manager.py:                # decorated function, migration status should be set to\nnova/compute/manager.py:                # 'error', without checking current migration status.\nnova/compute/manager.py:                    status = migration.status\nnova/compute/manager.py:                migration.status = 'error'\n......", 
            "date_created": "2016-02-25 01:33:49.742161+00:00", 
            "author": "https://api.launchpad.net/1.0/~shaohef"
        }, 
        {
            "content": "we need to clean up these migration status.\n\nan ideal solution\n\nwe define a new file such as  status.py\n\ndef class MigeationStatus(Object):\n       ERROR='error'\n       RUNNING=\"running\"\n.......\n\nThis is just a simple.\n\n\nThen clean up all files using migration.status hard code.\n\n$ git grep \"mig.*status\" | grep .py |awk '{print $1}' |sort | uniq\nnova/api/openstack/compute/server_migrations.py:\nnova/compute/api.py:\nnova/compute/manager.py:\nnova/compute/resource_tracker.py:\nnova/conductor/manager.py:\nnova/conductor/tasks/live_migrate.py:\nnova/db/api.py:\nnova/db/api.py:def\nnova/db/sqlalchemy/api.py:def\nnova/db/sqlalchemy/migrate_repo/versions/216_havana.py:\nnova/db/sqlalchemy/models.py:\nnova/objects/migration.py:\nnova/tests/functional/api_sample_tests/test_server_migrations.py:\nnova/tests/unit/api/openstack/compute/test_server_migrations.py:\nnova/tests/unit/compute/test_compute.py:\nnova/tests/unit/compute/test_compute_api.py:\nnova/tests/unit/compute/test_compute_mgr.py:\nnova/tests/unit/compute/test_resource_tracker.py:\nnova/tests/unit/conductor/tasks/test_live_migrate.py:\nnova/tests/unit/conductor/test_conductor.py:\nnova/tests/unit/db/test_db_api.py:\nnova/tests/unit/objects/test_migration.py:\nnova/virt/libvirt/driver.py:\n\n", 
            "date_created": "2016-02-25 01:43:01.128606+00:00", 
            "author": "https://api.launchpad.net/1.0/~shaohef"
        }, 
        {
            "content": "If done, this should be like nova/compute files arch.py, task_states.py, vm_states.py", 
            "date_created": "2016-02-25 01:53:17.896902+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "well, an enum field in the object makes good sense to me.", 
            "date_created": "2016-02-25 09:36:47.379600+00:00", 
            "author": "https://api.launchpad.net/1.0/~johngarbutt"
        }, 
        {
            "content": "Shaohef,\nAre you working on the fix? Please change status to Inprogress if you are, otherwise change Assigned to ->nobody.", 
            "date_created": "2016-04-18 15:28:26.510897+00:00", 
            "author": "https://api.launchpad.net/1.0/~sarafraj-singh"
        }
    ]
}