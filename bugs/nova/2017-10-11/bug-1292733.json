{
    "status": "Fix Released", 
    "last_updated": "2015-04-30 09:14:42.658020+00:00", 
    "description": "During instance spawn, Ironic attempts to unplug any plugged VIFs from ports associated with an instance.  If there are no associated VIFs to unplug, instance spawn fails with a nova-compute errror:\n\n2014-03-14 21:15:35.907 16640 TRACE nova.openstack.common.loopingcall HTTPBadRequest: Couldn't apply patch '[{'path': '/extra/vif_port_id', 'op': 'remove'}]'. Reason: u'vif_port_id'\n\nThe driver should be only attempt to unplug VIFs from ports that actually have them associated.", 
    "tags": [
        "ironic"
    ], 
    "importance": "Low", 
    "heat": 12, 
    "link": "https://bugs.launchpad.net/nova/+bug/1292733", 
    "owner": "https://api.launchpad.net/1.0/~lucasagomes", 
    "id": 1292733, 
    "index": 6102, 
    "created": "2014-03-14 22:54:54.855908+00:00", 
    "title": "Ironic: unplugging of instance VIFs fails if no VIFs associated with port", 
    "comments": [
        {
            "content": "During instance spawn, Ironic attempts to unplug any plugged VIFs from ports associated with an instance.  If there are no associated VIFs to unplug, instance spawn fails with a nova-compute errror:\n\n2014-03-14 21:15:35.907 16640 TRACE nova.openstack.common.loopingcall HTTPBadRequest: Couldn't apply patch '[{'path': '/extra/vif_port_id', 'op': 'remove'}]'. Reason: u'vif_port_id'\n\nThe driver should be only attempt to unplug VIFs from ports that actually have them associated.", 
            "date_created": "2014-03-14 22:54:54.855908+00:00", 
            "author": "https://api.launchpad.net/1.0/~gandelman-a"
        }, 
        {
            "content": "2014-07-07 01:50:46.181 5764 TRACE nova.openstack.common.loopingcall BadRequest: Couldn't apply patch '[{'path': '/extra/vif_port_id', 'op': 'remove'}]'. Reason: can't remove non-existent object 'vif_port_id' (HTTP 400)\n\ntada, just triggered this :)\n\n2014-07-07 01:50:46.181 5764 ERROR nova.openstack.common.loopingcall [-] in fixed duration looping call\n2014-07-07 01:50:46.181 5764 TRACE nova.openstack.common.loopingcall Traceback (most recent call last):\n2014-07-07 01:50:46.181 5764 TRACE nova.openstack.common.loopingcall   File \"/opt/stack/venvs/nova/local/lib/python2.7/site-packages/nova/openstack/common/loopingcall.py\", line 76, in _inner\n2014-07-07 01:50:46.181 5764 TRACE nova.openstack.common.loopingcall     self.f(*self.args, **self.kw)\n2014-07-07 01:50:46.181 5764 TRACE nova.openstack.common.loopingcall   File \"/opt/stack/venvs/nova/local/lib/python2.7/site-packages/ironic/nova/virt/ironic/driver.py\", line 169, in _request_api\n2014-07-07 01:50:46.181 5764 TRACE nova.openstack.common.loopingcall     func(*args)\n2014-07-07 01:50:46.181 5764 TRACE nova.openstack.common.loopingcall   File \"/opt/stack/venvs/nova/local/lib/python2.7/site-packages/ironicclient/v1/port.py\", line 57, in update\n2014-07-07 01:50:46.181 5764 TRACE nova.openstack.common.loopingcall     return self._update(self._path(port_id), patch)\n2014-07-07 01:50:46.181 5764 TRACE nova.openstack.common.loopingcall   File \"/opt/stack/venvs/nova/local/lib/python2.7/site-packages/ironicclient/common/base.py\", line 68, in _update\n2014-07-07 01:50:46.181 5764 TRACE nova.openstack.common.loopingcall     resp, body = self.api.json_request(method, url, body=body)\n2014-07-07 01:50:46.181 5764 TRACE nova.openstack.common.loopingcall   File \"/opt/stack/venvs/nova/local/lib/python2.7/site-packages/ironicclient/common/http.py\", line 186, in json_request\n2014-07-07 01:50:46.181 5764 TRACE nova.openstack.common.loopingcall     resp, body_iter = self._http_request(url, method, **kwargs)\n2014-07-07 01:50:46.181 5764 TRACE nova.openstack.common.loopingcall   File \"/opt/stack/venvs/nova/local/lib/python2.7/site-packages/ironicclient/common/http.py\", line 169, in _http_request\n2014-07-07 01:50:46.181 5764 TRACE nova.openstack.common.loopingcall     error_json.get('debuginfo'), method, url)\n2014-07-07 01:50:46.181 5764 TRACE nova.openstack.common.loopingcall BadRequest: Couldn't apply patch '[{'path': '/extra/vif_port_id', 'op': 'remove'}]'. Reason: can't remove non-existent object 'vif_port_id' (HTTP 400)\n2014-07-07 01:50:46.181 5764 TRACE nova.openstack.common.loopingcall\n", 
            "date_created": "2014-07-07 02:17:30.640049+00:00", 
            "author": "https://api.launchpad.net/1.0/~lifeless"
        }, 
        {
            "content": "Though I'll note I triggered it on delete.", 
            "date_created": "2014-07-07 02:17:48.827114+00:00", 
            "author": "https://api.launchpad.net/1.0/~lifeless"
        }, 
        {
            "content": "The fix is quite simply but we need to wait until J3 ends because the fix affects the driver and it's right now being reviewing by the nova team", 
            "date_created": "2014-09-01 15:21:19.175283+00:00", 
            "author": "https://api.launchpad.net/1.0/~lucasagomes"
        }, 
        {
            "content": "The driver is now in nova, so the fix should go there", 
            "date_created": "2014-09-26 11:15:02.210156+00:00", 
            "author": "https://api.launchpad.net/1.0/~lucasagomes"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/124394", 
            "date_created": "2014-09-26 12:57:29.960544+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/124394\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=d3acac0f5bffca59441d9a4a12c89db1d45ec4cf\nSubmitter: Jenkins\nBranch:    master\n\ncommit d3acac0f5bffca59441d9a4a12c89db1d45ec4cf\nAuthor: Lucas Alvares Gomes <email address hidden>\nDate:   Fri Sep 26 13:53:44 2014 +0100\n\n    Ironic: Do not try to unplug VIF if not associated\n    \n    During instance spawn, Ironic attempts to unplug any plugged VIFs from\n    ports associated with an instance. If there are no associated VIFs\n    to unplug, this would raise an exeception that would be logged into\n    n-cpu. This patch fix that behavior by making the driver check if the\n    port has an VIF associated with it before trying to remove it.\n    \n    Change-Id: I5608b9eec625452edda9a0c9eb366ece2a95800f\n    Closes-Bug: #1292733\n", 
            "date_created": "2014-10-06 19:18:40.176347+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}