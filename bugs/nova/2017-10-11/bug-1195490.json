{
    "status": "Fix Released", 
    "last_updated": "2014-03-30 16:00:07.762090+00:00", 
    "description": "Steps to reproduce:\n\n- create a port with quantum port-create\n- boot a VM passing the port id\n- the VM goes in Error state (you may inject a fault into nova-compute to see this)\n- Boom, your port is gone!\n\nThis happens on trunk", 
    "tags": [], 
    "importance": "Medium", 
    "heat": 8, 
    "link": "https://bugs.launchpad.net/nova/+bug/1195490", 
    "owner": "https://api.launchpad.net/1.0/~armando-migliaccio", 
    "id": 1195490, 
    "index": 3465, 
    "created": "2013-06-27 22:45:13.084632+00:00", 
    "title": "port disappears if the instance goes in error", 
    "comments": [
        {
            "content": "Steps to reproduce:\n\n- create a port with quantum port-create\n- boot a VM passing the port id\n- the VM goes in Error state\n- Boom, your port is gone!\n\nThis happens on trunk", 
            "date_created": "2013-06-27 22:45:13.084632+00:00", 
            "author": "https://api.launchpad.net/1.0/~armando-migliaccio"
        }, 
        {
            "content": "I think we will have to add a new field into port to show if it is created by nova or not.\nI suggest to do it in the extension portbinding extension.", 
            "date_created": "2013-06-27 23:54:04.951018+00:00", 
            "author": "https://api.launchpad.net/1.0/~gongysh"
        }, 
        {
            "content": "I thought about it, and adding metadata (i.e. bindings) to ports can turn out to be useful in a number of contexts, like the ones reported here:\n\nhttps://bugs.launchpad.net/neutron/+bug/1158684\nhttps://answers.launchpad.net/nova/+question/230868\n\nHowever, in this specific case where the compute node fails to spawn an instance, it is enough to allow the compute clean-up logic to dispose of the port only if it was not created explicitly (as in I don't see the need to use the port binding extension).\n\nSo IMO, I could address this one in a small, fairly contained patch, and deal with the others in the way you suggested.\n\nThoughts?", 
            "date_created": "2013-06-28 14:48:33.798728+00:00", 
            "author": "https://api.launchpad.net/1.0/~armando-migliaccio"
        }, 
        {
            "content": "is it worth backporting it?", 
            "date_created": "2013-07-16 18:43:37.347667+00:00", 
            "author": "https://api.launchpad.net/1.0/~armando-migliaccio"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/36354\nCommitted: http://github.com/openstack/nova/commit/a141206e9dfd31955b9b31d9e5a7f73bbd8510ca\nSubmitter: Jenkins\nBranch:    master\n\ncommit a141206e9dfd31955b9b31d9e5a7f73bbd8510ca\nAuthor: armando-migliaccio <email address hidden>\nDate:   Mon Jul 8 19:47:34 2013 -0700\n\n    Avoid deleting user-provided Neutron ports if VM spawn fails\n    \n    If the VM boot fails, resources like Neutron ports are destroyed.\n    This is particularly bad if the failure is transient and a\n    rescheduling attempt is made. In this case the port no longer exist\n    and the failure becomes self-inflicted. To avoid this, during the\n    deletion of VM resources, we look at the requested_networks passed\n    by the user: if they contain port ids, we skip the destruction.\n    \n    An optional parameter is added to RPC method deallocate_for_instance.\n    RPC Network API is bumped to 1.10 to reflect this change, but the\n    change is backward compatible.\n    \n    Fixes bug #1195490\n    \n    Change-Id: Iade232267c58ae2cf3966829e660d3298070a3bf\n", 
            "date_created": "2013-07-16 19:40:03.722564+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}