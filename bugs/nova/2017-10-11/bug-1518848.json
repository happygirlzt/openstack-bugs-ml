{
    "status": "Fix Released", 
    "last_updated": "2016-01-21 13:43:23.434531+00:00", 
    "description": "CONF.reclaim_instance_interval  is interval in seconds for reclaiming deleted instances.  It should takes effect only when value is greater than 0.    current if we set it with -1 for example .  It will pass the check of ' if CONF.reclaim_instance_interval:' and do a soft_delete.   See https://github.com/openstack/nova/blob/master/nova/api/openstack/compute/servers.py#L752\n\u00a0\u00a0\u00a0\u00a0def _delete(self, context, req, instance_uuid):\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0authorize(context, action='delete')\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0instance = self._get_server(context, req, instance_uuid)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if CONF.reclaim_instance_interval:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0try:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0self.compute_api.soft_delete(context, instance)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0except exception.InstanceInvalidState:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0# Note(yufang521247): instance which has never been active\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0# is not allowed to be soft_deleted. Thus we have to call\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0# delete() to clean up the instance.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0self.compute_api.delete(context, instance)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0else:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0self.compute_api.delete(context, instance)\n\nWe do reclaim instance in  https://github.com/openstack/nova/blob/master/nova/compute/manager.py#L6192\n\u00a0\u00a0\u00a0\u00a0def _reclaim_queued_deletes(self, context):\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"\"\"Reclaim instances that are queued for deletion.\"\"\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0interval = CONF.reclaim_instance_interval\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if interval <= 0:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0LOG.debug(\"CONF.reclaim_instance_interval <= 0, skipping...\")\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return\n\nThat means we never have chance to clean up a soft deleted instance and release the quota.", 
    "tags": [], 
    "importance": "Undecided", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1518848", 
    "owner": "https://api.launchpad.net/1.0/~glongwave", 
    "id": 1518848, 
    "index": 5859, 
    "created": "2015-11-23 06:06:29.235170+00:00", 
    "title": "set reclaim_instance_interval < 0, never delete instance completely.", 
    "comments": [
        {
            "content": "\nCONF.reclaim_instance_interval  is interval in seconds for reclaiming deleted instances.  It should takes effect only when value is greater than 0.    current if we set it with -1 for example .  It will pass the check of ' if CONF.reclaim_instance_interval:' and do a soft_delete.   See https://github.com/openstack/nova/blob/master/nova/api/openstack/compute/servers.py#L752\n    def _delete(self, context, req, instance_uuid):\n        authorize(context, action='delete')\n        instance = self._get_server(context, req, instance_uuid)\n        if CONF.reclaim_instance_interval:\n            try:\n                self.compute_api.soft_delete(context, instance)\n            except exception.InstanceInvalidState:\n                # Note(yufang521247): instance which has never been active\n                # is not allowed to be soft_deleted. Thus we have to call\n                # delete() to clean up the instance.\n                self.compute_api.delete(context, instance)\n        else:\n            self.compute_api.delete(context, instance)\n\nWe do reclaim instance in  https://github.com/openstack/nova/blob/master/nova/compute/manager.py#L6192\n    def _reclaim_queued_deletes(self, context):\n        \"\"\"Reclaim instances that are queued for deletion.\"\"\"\n        interval = CONF.reclaim_instance_interval\n        if interval <= 0:\n            LOG.debug(\"CONF.reclaim_instance_interval <= 0, skipping...\")\n            return\n\n\nThat means we never have chance to clean up a soft instance adn release the quota.", 
            "date_created": "2015-11-23 06:06:29.235170+00:00", 
            "author": "https://api.launchpad.net/1.0/~glongwave"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/248539", 
            "date_created": "2015-11-23 06:23:29.344837+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/248539\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=f3a2f8fc1048a70426b44e614790c2d8db431bbc\nSubmitter: Jenkins\nBranch:    master\n\ncommit f3a2f8fc1048a70426b44e614790c2d8db431bbc\nAuthor: ChangBo Guo(gcb) <email address hidden>\nDate:   Mon Nov 23 14:16:23 2015 +0800\n\n    Fix reclaim_instance_interval < 0 never delete instance completely\n    \n    CONF.reclaim_instance_interval is interval in seconds for reclaiming\n    deleted instances. It should take effect only when value is greater\n    than 0. But current when set it with -1 for example, it will pass check\n    if we should soft delete an instance, but can't pass check whether should\n    clean soft deleted instance, then never have chance to clean up a soft deleted\n    instance and release the quota.\n    This commit sets CONF.reclaim_instance_interval's minimum value to 0.\n    \n    Closes-Bug: #1518848\n    \n    Change-Id: Idd8faad1a40f8898a9471504e664c3676b1b0e06\n", 
            "date_created": "2016-01-05 11:02:47.151107+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/nova 13.0.0.0b2 development milestone.", 
            "date_created": "2016-01-21 13:43:21.377918+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }
    ]
}