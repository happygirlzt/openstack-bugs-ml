{
    "status": "Expired", 
    "last_updated": "2016-07-05 09:44:16.688581+00:00", 
    "description": "instance migration action shouldn't be allowed when there are existed VNC sessions .\nwhen doing a migration, all vnc tokens will become invalid from the source server. this breaks the existed VNC session.", 
    "tags": [
        "console"
    ], 
    "importance": "Undecided", 
    "heat": 26, 
    "link": "https://bugs.launchpad.net/nova/+bug/1240584", 
    "owner": "None", 
    "id": 1240584, 
    "index": 4195, 
    "created": "2013-10-16 15:52:53.049009+00:00", 
    "title": "instance migration action shouldn't be allowed when there are existed VNC sessions", 
    "comments": [
        {
            "content": "instance migration action shouldn't be allowed when there are existed VNC sessions .\nwhen doing a migration, all vnc tokens will become invalid from the source server. this breaks the existed VNC session.", 
            "date_created": "2013-10-16 15:52:53.049009+00:00", 
            "author": "https://api.launchpad.net/1.0/~heut2008"
        }, 
        {
            "content": "I can reproduce this with a libvirt/kvm migration. The problem is that the vnc connection is handled by the qemu-kvm process. The migration takes care of migrating guest state but the vnc service is provided by the host. Since this is an admin initiated action I think we should probably fix this.\n\nI guess you could, in the libvirt/kvm case, check and see if the process has an ESTABLISHED tcp connection. If there is one that is ESTABLISHED then we can die with an error like \"There's someone using VNC\". Note that this condition should be ignored in the evacuate case. We really aren't trying to be nice, we think hardware is going to fail or something so we want to move everyone off at emergency speed.\n\nI know you can do this with ss in linux land, not sure about windows. More specifically, the tcp_diag module in the linux kernel is the one you need to ask. Alternatively you can consult /proc/net/tcp, but that is a quadratic lookup so use with care.", 
            "date_created": "2014-02-12 03:18:56.752455+00:00", 
            "author": "https://api.launchpad.net/1.0/~geekinutah"
        }, 
        {
            "content": "Possible Solution:\nA new parameter \"force\" will be added to the existing live migration api, if it's set to False and user is connected to the VNC console, it won't live migrate that vm.\n\nIf \"force\" parameter is set to True then even if user is connected to VNC console, live migration will be performed.\n\nTo detect whether users are connected to the vnc console or not, we can check if the vnc port is opened on the compute node where the vm is running using following command.\n\nsudo netstat -pnt | awk '{print $4}' | egrep '^127.0.0.1:5900$\u2019\n127.0.0.1 : vncserver_listen parameter from nova.conf\n5900: graphics port either for spice or vnc.", 
            "date_created": "2014-03-17 06:13:47.903515+00:00", 
            "author": "https://api.launchpad.net/1.0/~abhishek-kekane"
        }, 
        {
            "content": "\nThis is an automated cleanup. This bug report has been closed because it\nis older than 18 months and there is no open code change to fix this.\nAfter this time it is unlikely that the circumstances which lead to\nthe observed issue can be reproduced.\n\nIf you can reproduce the bug, please:\n* reopen the bug report (set to status \"New\")\n* AND add the detailed steps to reproduce the issue (if applicable)\n* AND leave a comment \"CONFIRMED FOR: <RELEASE_NAME>\"\n  Only still supported release names are valid (LIBERTY, MITAKA, OCATA, NEWTON).\n  Valid example: CONFIRMED FOR: LIBERTY\n", 
            "date_created": "2016-07-05 09:44:16.183831+00:00", 
            "author": "https://api.launchpad.net/1.0/~mzoeller"
        }
    ]
}