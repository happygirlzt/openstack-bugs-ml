{
    "status": "Fix Released", 
    "last_updated": "2011-09-22 12:52:47.291085+00:00", 
    "description": "This is just from reading code, so I could be wrong.\nHowever, in _prepare_xml_info() of  nova/virt/libvirt/connection.py  you have:\n        if FLAGS.use_cow_images:\n            driver_type = 'qcow2'\n        else:\n            driver_type = 'raw'\n\nIt seems that that will be wrong in the case that the image uploaded is qcow2.\n\n_cache_image will have done a 'cp' of the original image, and thus the image will still be in qcow format.\n\nI've not verified whether or not libvirt/kvm care, or if this is only grammatical.", 
    "tags": [], 
    "importance": "Low", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/837102", 
    "owner": "None", 
    "id": 837102, 
    "index": 5163, 
    "created": "2011-08-30 00:44:28.367689+00:00", 
    "title": "nova writes libvirt xml 'driver_type' based only on FLAGS.use_cow_images", 
    "comments": [
        {
            "content": "This is just from reading code, so I could be wrong.\nHowever, in _prepare_xml_info() of  nova/virt/libvirt/connection.py  you have:\n        if FLAGS.use_cow_images:\n            driver_type = 'qcow2'\n        else:\n            driver_type = 'raw'\n\nIt seems that that will be wrong in the case that the image uploaded is qcow2.\n\n_cache_image will have done a 'cp' of the original image, and thus the image will still be in qcow format.\n\nI've not verified whether or not libvirt/kvm care, or if this is only grammatical.", 
            "date_created": "2011-08-30 00:44:28.367689+00:00", 
            "author": "https://api.launchpad.net/1.0/~smoser"
        }, 
        {
            "content": "This is true, however uploading a qcow2 works fine so I assume that libvirt is smart enough to load it correctly anyway.", 
            "date_created": "2011-08-30 03:29:24+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "On Tue, 30 Aug 2011, Vish Ishaya wrote:\n\n> This is true, however uploading a qcow2 works fine so I assume that\n> libvirt is smart enough to load it correctly anyway.\n\nHave you tried uploading a qcow2 without LFAGS.use_cow_images  ?\n\nAlso, i'm not certain but looking at bug 470636 (comment 18 and 19) it\nseems that this will be an issue with libvirt's apparmor support.\n\nScott\n", 
            "date_created": "2011-08-30 13:50:43+00:00", 
            "author": "https://api.launchpad.net/1.0/~smoser"
        }, 
        {
            "content": "\nOn Aug 30, 2011, at 6:50 AM, Scott Moser wrote:\n\n> Have you tried uploading a qcow2 without LFAGS.use_cow_images  ?\n\nNo, I haven't tried that, good point.\n> \n> Also, i'm not certain but looking at bug 470636 (comment 18 and 19) it\n> seems that this will be an issue with libvirt's apparmor support.\n\nYes, we should probably attempt to determine the type of the image and change the xml to match.\n\n> \n> Scott\n> \n\n", 
            "date_created": "2011-08-30 16:48:42+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "OK.\n  I verified that the following fails\n - $ grep cow bin/nova.conf \n   --use_cow_images=false\n - $ wget http://images.ansolabs.com/tty.tgz\n - $ tar -xvzf tty.tgz\n - $ qemu-img convert ami-tty/image -O qcow2 ami-tty/image-qcow.img\n - $ cloud-publish-image x86_64 ami-tty/image-qcow.img demo\n - $ euca-run-instances ami-0000002f --key mykey\n - there is nothing in the console looking at the console , looking at the vnc console, shows 'no bootable device'\n \nWhat this means is that if you upload a qcow image, but have turned off use_qcow_images (default is on) then your instances will not boot.  I would suspect that most \"real world\" installations will have use_qcow_images=false in flags as the run time path will be faster for raw disk imags than qcow.\n\nI've also verified that I was wrong in suspecting that apparmour would be the issue.  Apparmour doesn't affect this because the image booted would never be a qcow backed image (as it would be a copy of the uploaded image since use_qcow_images=false).  However, it seems that kvm intelligently respects the argument that is passed to it via libvirt.  for reference, that looks Note the 'format=raw' (like): \n\n  -drive file=<path>,if=none,id=drive-virtio-disk0,boot=on,format=raw \n  -device virtio-blk-pci,bus=pci.0,addr=0x4,drive=drive-virtio-disk0,id=virtio-disk0\n\nSo, this is a real issue.\n", 
            "date_created": "2011-09-18 16:35:02.718430+00:00", 
            "author": "https://api.launchpad.net/1.0/~smoser"
        }, 
        {
            "content": "My test that I did in comment 2 above was wrong, as I did not register a kernel/ramdisk with this image.\nI've re-tested with something like:\n  cloud-publish-image x86_64 md-raw/image-root.img smdemo-raw \\\n     --kernel-file md-raw/image-kernel.img --ramdisk-file md-raw/image-ramdisk.img  -v\nand\n  cloud-publish-image x86_64 md/image-root-qcow.img smdemo \\\n    --kernel-file md/image-kernel.img --ramdisk-file md/image-ramdisk.img  -v\n\nusing the qcow image, I actually fail with a 'badness occurred in ramdisk'  which makes no sense to me, but it failed none the less.\n\n", 
            "date_created": "2011-09-19 01:37:42.701927+00:00", 
            "author": "https://api.launchpad.net/1.0/~smoser"
        }
    ]
}