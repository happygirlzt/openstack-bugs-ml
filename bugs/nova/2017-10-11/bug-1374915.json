{
    "status": "Fix Released", 
    "last_updated": "2015-04-30 09:19:49.838980+00:00", 
    "description": "When mount volume with nfs backend to instance, it would be failed.\n\n        if options is not None:\n            nfs_cmd.extend(options.split(' '))\n\nWe find when \"options\" is a blank string like \"\" wloud generate a part in final cmd as \"u''\". The final cmd seems like \n\n[u'mount', u'-t', u'nfs', u'', u'***', u'***']\n\nAnd this cmd made the operation of mounting fail.\n\nWe have fixed this bug by simply changing the if statement as follow:\n\n        if options:\n            nfs_cmd.extend(options.split(' '))", 
    "tags": [
        "nfs", 
        "volume"
    ], 
    "importance": "Undecided", 
    "heat": 14, 
    "link": "https://bugs.launchpad.net/nova/+bug/1374915", 
    "owner": "https://api.launchpad.net/1.0/~warp-kawada", 
    "id": 1374915, 
    "index": 5183, 
    "created": "2014-09-28 07:06:36.636226+00:00", 
    "title": "mount nfs volume failed with 'options' is a blank string", 
    "comments": [
        {
            "content": "When mount volume with nfs backend to instance, it would be failed.\n\n        if options is not None:\n            nfs_cmd.extend(options.split(' '))\n\nWe find when \"options\" is a blank string like \"\" wloud generate a part in final cmd as \"u''\". The final cmd seems like \n\n[u'mount', u'-t', u'nfs', u'', u'***', u'***']\n\nAnd this cmd made the operation of mounting fail.\n\nWe have fixed this bug by simply changing the if statement as follow:\n\n        if options:\n            nfs_cmd.extend(options.split(' '))", 
            "date_created": "2014-09-28 07:06:36.636226+00:00", 
            "author": "https://api.launchpad.net/1.0/~tpiperatgod"
        }, 
        {
            "content": "And the exception is a Mount Usage error.", 
            "date_created": "2014-09-28 07:09:02.764317+00:00", 
            "author": "https://api.launchpad.net/1.0/~tpiperatgod"
        }, 
        {
            "content": "Please provide the error that you got, e.g. cinder-api.log and cinder-volume.log, as well as the nova.conf and cinder.conf file that you used.  I have used NFS for the past several weeks and have not observed what you mentioned.", 
            "date_created": "2014-09-28 13:39:05.233376+00:00", 
            "author": "https://api.launchpad.net/1.0/~thang-pham"
        }, 
        {
            "content": "Hi, I'm sorry i have no log file and config file current.\nMay be you could just set the value of \"options\" to be a blank string in the program to recur this problem.", 
            "date_created": "2014-09-29 01:12:25.506074+00:00", 
            "author": "https://api.launchpad.net/1.0/~tpiperatgod"
        }, 
        {
            "content": "This is a critical BUG.\n\nnfs mount volume attach fails always.\nCause is because blank is in the cmd.  (ephem said).\n\n--- a/virt/libvirt/volume.py\n+++ b/virt/libvirt/volume.py\n@@ -707,11 +707,16 @@ class LibvirtNFSVolumeDriver(LibvirtBaseVolumeDriver):\n         # Construct the NFS mount command.\n         nfs_cmd = ['mount', '-t', 'nfs']\n         if CONF.libvirt.nfs_mount_options is not None:\n+            utils.my_logger(\"libvirt options:[%s] is\" % CONF.libvirt.nfs_mount_options)\n             nfs_cmd.extend(['-o', CONF.libvirt.nfs_mount_options])\n-        if options is not None:\n+#        if options is not None:\n+        if options != '':    # Y.kawada\n+            utils.my_logger(\"def options:<%s>\" % options)\n+            utils.my_logger(\"def options type:<%s>\" % type(options))\n\nthis options type is type:<<type 'unicode'>>,  not 'None'.\nabove codes work correctly.\n\n\nerror log is:\n\n Running cmd (subprocess): sudo nova-rootwrap /etc/nova/rootwrap.conf mount -t nfs  172.21.16.33:/volumes/pool1/vol1/volume-fa602cec-\n5418-42c3-8344-71cdbaf86e33 /var/lib/nova/mnt/d8b3618b6946bb9e162741588f0cd99a execute /usr/lib/python2.7/site-packages/nova/openstack/common/processutils.py:161\n2014-11-25 15:51:07.388 27540 DEBUG nova.openstack.common.processutils [req-6f984608-a3e8-410c-be33-9fb9d4b6ae14 None] p_cmd:['sudo', 'nova-rootwrap', '/etc/nova/rootwrap.conf', 'mount', '-t', 'nfs', '', '172.21.16.33:/volumes/pool1/vol1/volume-fa602c\nec-5418-42c3-8344-71cdbaf86e33', '/var/lib/nova/mnt/d8b3618b6946bb9e162741588f0cd99a']  prefn:<function _subprocess_setup at 0x1f24aa0>  shell:False execute /usr/lib/python2.7/site-packages/nova/openstack/common/processutils.py:171\n2014-11-25 15:51:07.396 27540 DEBUG nova.openstack.common.processutils [req-6f984608-a3e8-410c-be33-9fb9d4b6ae14 None] pro_in:None execute /usr/lib/python2.7/site-packages/nova/openstack/common/processutils.py:184\n2014-11-25 15:51:07.397 27540 DEBUG nova.openstack.common.processutils [req-6f984608-a3e8-410c-be33-9fb9d4b6ae14 None] pro_comm 2 execute /usr/lib/python2.7/site-packages/nova/openstack/common/processutils.py:190\n2014-11-25 15:51:07.397 27540 DEBUG nova.openstack.common.processutils [req-6f984608-a3e8-410c-be33-9fb9d4b6ae14 None] s_smd:sudo nova-rootwrap /etc/nova/rootwrap.conf mount -t nfs  172.21.16.33:/volumes/pool1/vol1/volume-fa602cec-5418-42c3-8344-71cdb\naf86e33 /var/lib/nova/mnt/d8b3618b6946bb9e162741588f0cd99a execute /usr/lib/python2.7/site-packages/nova/openstack/common/processutils.py:191\n2014-11-25 15:51:07.453 27540 DEBUG nova.openstack.common.processutils [req-6f984608-a3e8-410c-be33-9fb9d4b6ae14 None] Result was 1 execute /usr/lib/python2.7/site-packages/nova/openstack/common/processutils.py:200\n2014-11-25 15:51:07.453 27540 ERROR nova.virt.block_device [req-6f984608-a3e8-410c-be33-9fb9d4b6ae14 None] [instance: 58a69940-fbcc-494f-aa97-4aa506952524] Driver failed to attach volume fa602cec-5418-42c3-8344-71cdbaf86e33 at /dev/vdb\n2014-11-25 15:51:07.453 27540 TRACE nova.virt.block_device [instance: 58a69940-fbcc-494f-aa97-4aa506952524] Traceback (most recent call last):\n2014-11-25 15:51:07.453 27540 TRACE nova.virt.block_device [instance: 58a69940-fbcc-494f-aa97-4aa506952524]   File \"/usr/lib/python2.7/site-packages/nova/virt/block_device.py\", line 252, in attach\n2014-11-25 15:51:07.453 27540 TRACE nova.virt.block_device [instance: 58a69940-fbcc-494f-aa97-4aa506952524]     device_type=self['device_type'], encryption=encryption)\n2014-11-25 15:51:07.453 27540 TRACE nova.virt.block_device [instance: 58a69940-fbcc-494f-aa97-4aa506952524]   File \"/usr/lib/python2.7/site-packages/nova/virt/libvirt/driver.py\", line 1383, in attach_volume\n2014-11-25 15:51:07.453 27540 TRACE nova.virt.block_device [instance: 58a69940-fbcc-494f-aa97-4aa506952524]     conf = self._connect_volume(connection_info, disk_info)\n2014-11-25 15:51:07.453 27540 TRACE nova.virt.block_device [instance: 58a69940-fbcc-494f-aa97-4aa506952524]   File \"/usr/lib/python2.7/site-packages/nova/virt/libvirt/driver.py\", line 1330, in _connect_volume\n2014-11-25 15:51:07.453 27540 TRACE nova.virt.block_device [instance: 58a69940-fbcc-494f-aa97-4aa506952524]     return driver.connect_volume(connection_info, disk_info)\n2014-11-25 15:51:07.453 27540 TRACE nova.virt.block_device [instance: 58a69940-fbcc-494f-aa97-4aa506952524]   File \"/usr/lib/python2.7/site-packages/nova/virt/libvirt/volume.py\", line 673, in connect_volume\n2014-11-25 15:51:07.453 27540 TRACE nova.virt.block_device [instance: 58a69940-fbcc-494f-aa97-4aa506952524]     self._ensure_mounted(connection_info['data']['export'], options)\n2014-11-25 15:51:07.453 27540 TRACE nova.virt.block_device [instance: 58a69940-fbcc-494f-aa97-4aa506952524]   File \"/usr/lib/python2.7/site-packages/nova/virt/libvirt/volume.py\", line 700, in _ensure_mounted\n2014-11-25 15:51:07.453 27540 TRACE nova.virt.block_device [instance: 58a69940-fbcc-494f-aa97-4aa506952524]     self._mount_nfs(mount_path, nfs_export, options, ensure=True)\n2014-11-25 15:51:07.453 27540 TRACE nova.virt.block_device [instance: 58a69940-fbcc-494f-aa97-4aa506952524]   File \"/usr/lib/python2.7/site-packages/nova/virt/libvirt/volume.py\", line 720, in _mount_nfs\n2014-11-25 15:51:07.453 27540 TRACE nova.virt.block_device [instance: 58a69940-fbcc-494f-aa97-4aa506952524]     utils.execute(*nfs_cmd, run_as_root=True)\n2014-11-25 15:51:07.453 27540 TRACE nova.virt.block_device [instance: 58a69940-fbcc-494f-aa97-4aa506952524]   File \"/usr/lib/python2.7/site-packages/nova/utils.py\", line 174, in execute\n2014-11-25 15:51:07.453 27540 TRACE nova.virt.block_device [instance: 58a69940-fbcc-494f-aa97-4aa506952524]     return processutils.execute(*cmd, **kwargs)\n2014-11-25 15:51:07.453 27540 TRACE nova.virt.block_device [instance: 58a69940-fbcc-494f-aa97-4aa506952524]   File \"/usr/lib/python2.7/site-packages/nova/openstack/common/processutils.py\", line 208, in execute\n2014-11-25 15:51:07.453 27540 TRACE nova.virt.block_device [instance: 58a69940-fbcc-494f-aa97-4aa506952524]     cmd=sanitized_cmd)\n2014-11-25 15:51:07.453 27540 TRACE nova.virt.block_device [instance: 58a69940-fbcc-494f-aa97-4aa506952524] ProcessExecutionError: Unexpected error while running command.\n2014-11-25 15:51:07.453 27540 TRACE nova.virt.block_device [instance: 58a69940-fbcc-494f-aa97-4aa506952524] Command: sudo nova-rootwrap /etc/nova/rootwrap.conf mount -t nfs  172.21.16.33:/volumes/pool1/vol1/volume-fa602cec-5418-42c3-8344-71cdbaf86e33\n/var/lib/nova/mnt/d8b3618b6946bb9e162741588f0cd99a\n2014-11-25 15:51:07.453 27540 TRACE nova.virt.block_device [instance: 58a69940-fbcc-494f-aa97-4aa506952524] Exit code: 1\n2014-11-25 15:51:07.453 27540 TRACE nova.virt.block_device [instance: 58a69940-fbcc-494f-aa97-4aa506952524] Stdout: u''\n2014-11-25 15:51:07.453 27540 TRACE nova.virt.block_device [instance: 58a69940-fbcc-494f-aa97-4aa506952524] Stderr: u\"\\nUsage:\\n mount [-lhV]\\n mount -a [options]\\n mount [options] [--source] <source> | [--target] <directory>\\n mount [options] <source\n> <directory>\\n mount <operation> <mountpoint> [<target>]\\n\\nOptions:\\n -a, --all               mount all filesystems mentioned in fstab\\n -c, --no-canonicalize   don't canonicalize paths\\n -f, --fake              dry run; skip the mount(2) syscall\\n\n-F, --fork              fork off for each device (use with -a)\\n -T, --fstab <path>      alternative file to /etc/fstab\\n -h, --help              display this help text and exit\\n -i, --internal-only     don't call the mount.<type> helpers\\n -l, --sho\nw-labels       lists all mounts with LABELs\\n -n, --no-mtab           don't write to /etc/mtab\\n -o, --options <list>    comma-separated list of mount options\\n -O, --test-opts <list>  limit the set of filesystems (use with -a)\\n -r, --read-only\n   mount the filesystem read-only (same as -o ro)\\n -t, --types <list>      limit the set of filesystem types\\n     --source <src>      explicitly specifies source (path, label, uuid)\\n     --target <target>   explicitly specifies mountpoint\\n -v, --v\nerbose           say what is being done\\n -V, --version           display version information and exit\\n -w, --rw, --read-write  mount the filesystem read-write (default)\\n\\n -h, --help     display this help and exit\\n -V, --version  output version in\nformation and exit\\n\\nSource:\\n -L, --label <label>     synonym for LABEL=<label>\\n -U, --uuid <uuid>       synonym for UUID=<uuid>\\n LABEL=<label>           specifies device by filesystem label\\n UUID=<uuid>             specifies device by filesystem\n UUID\\n PARTLABEL=<label>       specifies device by partition label\\n PARTUUID=<uuid>         specifies device by partition UUID\\n <device>                specifies device by path\\n <directory>             mountpoint for bind mounts (see --bind/rbind)\n\\n <file>                  regular file for loopdev setup\\n\\nOperations:\\n -B, --bind              mount a subtree somewhere else (same as -o bind)\\n -M, --move              move a subtree to some other place\\n -R, --rbind             mount a subtree\nand all submounts somewhere else\\n --make-shared           mark a subtree as shared\\n --make-slave            mark a subtree as slave\\n --make-private          mark a subtree as private\\n --make-unbindable       mark a subtree as unbindable\\n --make-r\nshared          recursively mark a whole subtree as shared\\n --make-rslave           recursively mark a whole subtree as slave\\n --make-rprivate         recursively mark a whole subtree as private\\n --make-runbindable      recursively mark a whole sub\ntree as unbindable\\n\\nFor more details see mount(8).\\n\"\n", 
            "date_created": "2014-11-25 07:16:06.731847+00:00", 
            "author": "https://api.launchpad.net/1.0/~warp-kawada"
        }, 
        {
            "content": "Thanks for Yukihiro KAWADA, the solution seems more complete.", 
            "date_created": "2014-11-26 01:46:49.336477+00:00", 
            "author": "https://api.launchpad.net/1.0/~tpiperatgod"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/138004", 
            "date_created": "2014-12-01 06:37:57.598853+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/138004\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=6f2325921443197b277e92e8531e811727db7201\nSubmitter: Jenkins\nBranch:    master\n\ncommit 6f2325921443197b277e92e8531e811727db7201\nAuthor: Yukihiro KAWADA <email address hidden>\nDate:   Mon Dec 1 15:36:59 2014 +0900\n\n    This patch fixes the check that 'options' object is empty correctly.\n    \n    'options' object type is 'unicode',it might be None or empty in here.\n    So, useless blank be added to the argument of the mount command.\n    After all, execute/processutils process will fail in the current situation.\n    \n    Change-Id: I45dcacd6499c3d4e0d26c0e2ee46b7f7d149f803\n    Closes-Bug: #1374915\n", 
            "date_created": "2015-01-20 15:59:27.912647+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Change abandoned by Sean Dague (<email address hidden>) on branch: master\nReview: https://review.openstack.org/137272\nReason: This review is > 4 weeks without comment, and failed Jenkins the last time it was checked. We are abandoning this for now. Feel free to reactivate the review by pressing the restore button and leaving a 'recheck' comment to get fresh test results.", 
            "date_created": "2015-01-23 15:27:37.790990+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}