{
    "status": "Fix Released", 
    "last_updated": "2015-03-30 12:34:58.257394+00:00", 
    "description": "The libvirt driver currently ignores the `image_meta` field passed in on the rescue method and instead uses it's driver-specific 'rescue_image_id` flag or the instance's current image.\n\nWe should probably two things here to make this code more similar across hypervisors:\n\n1. We should add a generic `default_rescue_image_id` flag that can specific default rescue images for any driver. This would obsolete the libvirt specific flag.\n\n2. We should modify the libvirt `rescue` code to respect the `image_meta` passed in, delegating the logic of which image to use for rescue to the compute manager.", 
    "tags": [
        "baremetal"
    ], 
    "importance": "Wishlist", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1078080", 
    "owner": "None", 
    "id": 1078080, 
    "index": 1302, 
    "created": "2012-11-12 20:21:34.004380+00:00", 
    "title": "libvirt rescue doesn't respect image_meta passed in", 
    "comments": [
        {
            "content": "The libvirt driver currently ignores the `image_meta` field passed in on the rescue method and instead uses it's driver-specific 'rescue_image_id` flag or the instance's current image.\n\nWe should probably two things here to make this code more similar across hypervisors:\n\n1. We should add a generic `default_rescue_image_id` flag that can specific default rescue images for any driver. This would obsolete the libvirt specific flag.\n\n2. We should modify the libvirt `rescue` code to respect the `image_meta` passed in, delegating the logic of which image to use for rescue to the compute manager.", 
            "date_created": "2012-11-12 20:21:34.004380+00:00", 
            "author": "https://api.launchpad.net/1.0/~rconradharris"
        }, 
        {
            "content": "I like image_meta handling. The rescue image id is legacy and I don't think anyone uses it so i vote for deprecating it.", 
            "date_created": "2012-11-14 00:07:18.433836+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "I am planning to add support for rescue to the baremetal driver. It looks like the suggested fix would address the concerns I was beginning to have as I read through the rescue code in virt/driver.py, so I'll tackle this.", 
            "date_created": "2013-03-07 10:27:34.181335+00:00", 
            "author": "https://api.launchpad.net/1.0/~devananda"
        }, 
        {
            "content": "this would be a good feature for baremetal (but it's lack isn't exactly a bug). It doesn't apply to Ironic, at least not yet, which is where I'm going to be focusing development efforts.", 
            "date_created": "2013-05-09 21:09:29.395280+00:00", 
            "author": "https://api.launchpad.net/1.0/~devananda"
        }, 
        {
            "content": "Looks fixed in code:\n\nlibvirt/driver.py\n\n    def rescue(self, context, instance, network_info, image_meta,\n               rescue_password):\n        \"\"\"Loads a VM using rescue images.\n\n        A rescue is normally performed when something goes wrong with the\n        primary images and data needs to be corrected/recovered. Rescuing\n        should not edit or over-ride the original image, only allow for\n        data recovery.\n\n        \"\"\"\n        instance_dir = libvirt_utils.get_instance_path(instance)\n        unrescue_xml = self._get_existing_domain_xml(instance, network_info)\n        unrescue_xml_path = os.path.join(instance_dir, 'unrescue.xml')\n        libvirt_utils.write_to_file(unrescue_xml_path, unrescue_xml)\n\n        if image_meta is not None:\n            rescue_image_id = image_meta.get('id')\n        else:\n            rescue_image_id = None", 
            "date_created": "2015-03-30 12:34:57.499153+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }
    ]
}