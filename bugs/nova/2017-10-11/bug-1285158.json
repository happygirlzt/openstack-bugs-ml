{
    "status": "Fix Released", 
    "last_updated": "2014-09-22 22:24:03.591928+00:00", 
    "description": "An instance that fails to spawn (say due to corrupt image download) on a compute node will call 'deallocate_for_instance' but does not update the database to remove the networking information.\n\nfrom compute manager log for instance failing to spawn:\nAUDIT nova.compute.manager [req-165b21e5-f727-4d2e-98f3-1a5f0039595e 10546644733724 10540146451709] [instance: 6b28052e-3488-404d-9626-bb42f51ae98f] Starting instance...\n...\nAUDIT nova.compute.claims [req-165b21e5-f727-4d2e-98f3-1a5f0039595e 10546644733724 10540146451709] [instance: 6b28052e-3488-404d-9626-bb42f51ae98f] Claim successful\n...\nDEBUG nova.network.neutronv2.api [-] [instance: 6b28052e-3488-404d-9626-bb42f51ae98f] Successfully created port: 38b34c17-e228-4d79-9248-c642a42959a8 _create_port /usr/lib/python2.7/dist-packages/nova/network/neutronv2/api.py:172\n...\n2014-02-11 13:20:25.257 24500 DEBUG nova.network.api [-] Updating cache with info: [VIF({'ovs_interfaceid': None, 'network': Network({'bridge': None, 'subnets': [Subnet({'ips': [FixedIP({'meta': {}, 'version': 4, 'type': 'fixed', 'floating_ips': [], 'address': u'10.100.0.2'})], 'version': 4, 'meta': {'dhcp_server': u'10.100.0.3'}, 'dns': [], 'routes': [], 'cidr': u'10.100.0.0/16', 'gateway': IP({'meta': {}, 'version': 4, 'type': 'gateway', 'address': u'10.100.0.1'})})], 'meta': {'injected': False, 'tenant_id': u'10540146451709'}, 'id': u'09030eb3-bca3-4df4-a5f9-721b6bd5d599', 'label': u'private'}), 'devname': u'tap38b34c17-e2', 'qbh_params': None, 'meta': {}, 'address': u'fa:16:3e:22:7c:aa', 'type': u'other', 'id': u'38b34c17-e228-4d79-9248-c642a42959a8', 'qbg_params': None})] update_instance_cache_with_nw_info /usr/lib/python2.7/dist-packages/nova/network/api.py:72\n...\nERROR nova.compute.manager [req-165b21e5-f727-4d2e-98f3-1a5f0039595e 10546644733724 10540146451709] [instance: 6b28052e-3488-404d-9626-bb42f51ae98f] Instance failed to spawn\nTRACE nova.compute.manager [instance: 6b28052e-3488-404d-9626-bb42f51ae98f] IOError: [Errno 32] Corrupt image download. Checksum was 65327d2b03e53805a3354233b09aee62 expected 82d98abd651173e8c3e74b02d811f8a1\nAUDIT nova.compute.manager [req-165b21e5-f727-4d2e-98f3-1a5f0039595e 10546644733724 10540146451709] [instance: 6b28052e-3488-404d-9626-bb42f51ae98f] Terminating instance\nDEBUG nova.compute.manager [req-165b21e5-f727-4d2e-98f3-1a5f0039595e 10546644733724 10540146451709] [instance: 6b28052e-3488-404d-9626-bb42f51ae98f] Deallocating network for instance _deallocate_network /usr/lib/python2.7/dist-packages/nova/compute/manager.py:1518\n\n\n\nWhen the instance successfully spawns on another compute node\nAUDIT nova.compute.manager [req-165b21e5-f727-4d2e-98f3-1a5f0039595e 10546644733724 10540146451709] [instance: 6b28052e-3488-404d-9626-bb42f51ae98f] Starting instance...\n...\nAUDIT nova.compute.claims [req-165b21e5-f727-4d2e-98f3-1a5f0039595e 10546644733724 10540146451709] [instance: 6b28052e-3488-404d-9626-bb42f51ae98f] Claim successful\n...\nDEBUG nova.network.neutronv2.api [-] [instance: 6b28052e-3488-404d-9626-bb42f51ae98f] Successfully created port: 59f61b81-3314-4bdd-b455-2611af6653c2 _create_port /usr/lib/python2.7/dist-packages/nova/network/neutronv2/api.py:172\n...\n2014-02-11 13:21:20.491 63160 DEBUG nova.network.api [-] Updating cache with info: [VIF({'ovs_interfaceid': None, 'network': Network({'bridge': None, 'subnets': [Subnet({'ips': [FixedIP({'meta': {}, 'version': 4, 'type': u'fixed', 'floating_ips': [], 'address': u'10.100.0.2'})], 'version': 4, 'meta': {u'dhcp_server': u'10.100.0.3'}, 'dns': [], 'routes': [], 'cidr': u'10.100.0.0/16', 'gateway': IP({'meta': {}, 'version': 4, 'type': u'gateway', 'address': u'10.100.0.1'})})], 'meta': {u'injected': False, u'tenant_id': u'10540146451709'}, 'id': u'09030eb3-bca3-4df4-a5f9-721b6bd5d599', 'label': u'private'}), 'devname': u'tap38b34c17-e2', 'qbh_params': None, 'meta': {}, 'address': u'fa:16:3e:22:7c:aa', 'type': u'other', 'id': u'38b34c17-e228-4d79-9248-c642a42959a8', 'qbg_params': None}), VIF({'ovs_interfaceid': None, 'network': Network({'bridge': None, 'subnets': [Subnet({'ips': [FixedIP({'meta': {}, 'version': 4, 'type': 'fixed', 'floating_ips': [], 'address': u'10.100.0.4'})], 'version': 4, 'meta': {'dhcp_server': u'10.100.0.3'}, 'dns': [], 'routes': [], 'cidr': u'10.100.0.0/16', 'gateway': IP({'meta': {}, 'version': 4, 'type': 'gateway', 'address': u'10.100.0.1'})})], 'meta': {'injected': False, 'tenant_id': u'10540146451709'}, 'id': u'09030eb3-bca3-4df4-a5f9-721b6bd5d599', 'label': u'private'}), 'devname': u'tap59f61b81-33', 'qbh_params': None, 'meta': {}, 'address': u'fa:16:3e:51:5d:bf', 'type': u'other', 'id': u'59f61b81-3314-4bdd-b455-2611af6653c2', 'qbg_params': None})] update_instance_cache_with_nw_info /usr/lib/python2.7/dist-packages/nova/network/api.py:72\n\nSo what we are seeing here is that the fixed IP address (10.100.0.2) allocated during the spawn of the instance\non the first compute node still exists when the port is allocated on the second compute node. Even though there was a succesful call to deallocate?\nLeading to the allocation of multiple fixed IP's.\n\n - the association of a floating IP to the fixed IP fails with:\n\nWARNING nova.api.openstack.compute.contrib.floating_ips [req-994a5ce9-fc42-4328-9eac-a05096fa25c3 10546644733724 10540146451709] multiple fixed_ips exist, using the first: 10.100.0.2\nERROR nova.api.openstack.compute.contrib.floating_ips [req-994a5ce9-fc42-4328-9eac-a05096fa25c3 10546644733724 10540146451709] Error. Unable to associate floating ip\nTRACE nova.api.openstack.compute.contrib.floating_ips Traceback (most recent call last):\nTRACE nova.api.openstack.compute.contrib.floating_ips   File \"/usr/lib/python2.7/dist-packages/nova/api/openstack/compute/contrib/floating_ips.py\", line 255, in _add_floating_ip\nTRACE nova.api.openstack.compute.contrib.floating_ips     fixed_address=fixed_address)\nTRACE nova.api.openstack.compute.contrib.floating_ips   File \"/usr/lib/python2.7/dist-packages/nova/network/api.py\", line 50, in wrapper\nTRACE nova.api.openstack.compute.contrib.floating_ips     res = f(self, context, *args, **kwargs)\nnova.api.openstack.compute.contrib.floating_ips   File \"/usr/lib/python2.7/dist-packages/nova/network/neutronv2/api.py\", line 649, in associate_floating_ip\nnova.api.openstack.compute.contrib.floating_ips     fixed_address)\nnova.api.openstack.compute.contrib.floating_ips   File \"/usr/lib/python2.7/dist-packages/nova/network/neutronv2/api.py\", line 634, in _get_port_id_by_fixed_address\nTRACE nova.api.openstack.compute.contrib.floating_ips     raise exception.FixedIpNotFoundForAddress(address=address)\nTRACE nova.api.openstack.compute.contrib.floating_ips FixedIpNotFoundForAddress: Fixed ip not found for address 10.100.0.2.\n\nLooking through the code, it seems that the call to _deallocate_network only removes the network allocation from the neutron side. It does not then update the database to reflect the deallocation.", 
    "tags": [
        "icehouse-rc-potential", 
        "in-stable-havana", 
        "network"
    ], 
    "importance": "Medium", 
    "heat": 8, 
    "link": "https://bugs.launchpad.net/nova/+bug/1285158", 
    "owner": "https://api.launchpad.net/1.0/~arosen", 
    "id": 1285158, 
    "index": 3810, 
    "created": "2014-02-26 13:31:59.180559+00:00", 
    "title": "deallocating network not updating database", 
    "comments": [
        {
            "content": "An instance that fails to spawn (say due to corrupt image download) on a compute node will call 'deallocate_for_instance' but does not update the database to remove the networking information.\n\nfrom compute manager log for instance failing to spawn:\nAUDIT nova.compute.manager [req-165b21e5-f727-4d2e-98f3-1a5f0039595e 10546644733724 10540146451709] [instance: 6b28052e-3488-404d-9626-bb42f51ae98f] Starting instance...\n...\nAUDIT nova.compute.claims [req-165b21e5-f727-4d2e-98f3-1a5f0039595e 10546644733724 10540146451709] [instance: 6b28052e-3488-404d-9626-bb42f51ae98f] Claim successful\n...\nDEBUG nova.network.neutronv2.api [-] [instance: 6b28052e-3488-404d-9626-bb42f51ae98f] Successfully created port: 38b34c17-e228-4d79-9248-c642a42959a8 _create_port /usr/lib/python2.7/dist-packages/nova/network/neutronv2/api.py:172\n...\n2014-02-11 13:20:25.257 24500 DEBUG nova.network.api [-] Updating cache with info: [VIF({'ovs_interfaceid': None, 'network': Network({'bridge': None, 'subnets': [Subnet({'ips': [FixedIP({'meta': {}, 'version': 4, 'type': 'fixed', 'floating_ips': [], 'address': u'10.100.0.2'})], 'version': 4, 'meta': {'dhcp_server': u'10.100.0.3'}, 'dns': [], 'routes': [], 'cidr': u'10.100.0.0/16', 'gateway': IP({'meta': {}, 'version': 4, 'type': 'gateway', 'address': u'10.100.0.1'})})], 'meta': {'injected': False, 'tenant_id': u'10540146451709'}, 'id': u'09030eb3-bca3-4df4-a5f9-721b6bd5d599', 'label': u'private'}), 'devname': u'tap38b34c17-e2', 'qbh_params': None, 'meta': {}, 'address': u'fa:16:3e:22:7c:aa', 'type': u'other', 'id': u'38b34c17-e228-4d79-9248-c642a42959a8', 'qbg_params': None})] update_instance_cache_with_nw_info /usr/lib/python2.7/dist-packages/nova/network/api.py:72\n...\nERROR nova.compute.manager [req-165b21e5-f727-4d2e-98f3-1a5f0039595e 10546644733724 10540146451709] [instance: 6b28052e-3488-404d-9626-bb42f51ae98f] Instance failed to spawn\nTRACE nova.compute.manager [instance: 6b28052e-3488-404d-9626-bb42f51ae98f] IOError: [Errno 32] Corrupt image download. Checksum was 65327d2b03e53805a3354233b09aee62 expected 82d98abd651173e8c3e74b02d811f8a1\nAUDIT nova.compute.manager [req-165b21e5-f727-4d2e-98f3-1a5f0039595e 10546644733724 10540146451709] [instance: 6b28052e-3488-404d-9626-bb42f51ae98f] Terminating instance\nDEBUG nova.compute.manager [req-165b21e5-f727-4d2e-98f3-1a5f0039595e 10546644733724 10540146451709] [instance: 6b28052e-3488-404d-9626-bb42f51ae98f] Deallocating network for instance _deallocate_network /usr/lib/python2.7/dist-packages/nova/compute/manager.py:1518\n\n\n\nWhen the instance successfully spawns on another compute node\nAUDIT nova.compute.manager [req-165b21e5-f727-4d2e-98f3-1a5f0039595e 10546644733724 10540146451709] [instance: 6b28052e-3488-404d-9626-bb42f51ae98f] Starting instance...\n...\nAUDIT nova.compute.claims [req-165b21e5-f727-4d2e-98f3-1a5f0039595e 10546644733724 10540146451709] [instance: 6b28052e-3488-404d-9626-bb42f51ae98f] Claim successful\n...\nDEBUG nova.network.neutronv2.api [-] [instance: 6b28052e-3488-404d-9626-bb42f51ae98f] Successfully created port: 59f61b81-3314-4bdd-b455-2611af6653c2 _create_port /usr/lib/python2.7/dist-packages/nova/network/neutronv2/api.py:172\n...\n2014-02-11 13:21:20.491 63160 DEBUG nova.network.api [-] Updating cache with info: [VIF({'ovs_interfaceid': None, 'network': Network({'bridge': None, 'subnets': [Subnet({'ips': [FixedIP({'meta': {}, 'version': 4, 'type': u'fixed', 'floating_ips': [], 'address': u'10.100.0.2'})], 'version': 4, 'meta': {u'dhcp_server': u'10.100.0.3'}, 'dns': [], 'routes': [], 'cidr': u'10.100.0.0/16', 'gateway': IP({'meta': {}, 'version': 4, 'type': u'gateway', 'address': u'10.100.0.1'})})], 'meta': {u'injected': False, u'tenant_id': u'10540146451709'}, 'id': u'09030eb3-bca3-4df4-a5f9-721b6bd5d599', 'label': u'private'}), 'devname': u'tap38b34c17-e2', 'qbh_params': None, 'meta': {}, 'address': u'fa:16:3e:22:7c:aa', 'type': u'other', 'id': u'38b34c17-e228-4d79-9248-c642a42959a8', 'qbg_params': None}), VIF({'ovs_interfaceid': None, 'network': Network({'bridge': None, 'subnets': [Subnet({'ips': [FixedIP({'meta': {}, 'version': 4, 'type': 'fixed', 'floating_ips': [], 'address': u'10.100.0.4'})], 'version': 4, 'meta': {'dhcp_server': u'10.100.0.3'}, 'dns': [], 'routes': [], 'cidr': u'10.100.0.0/16', 'gateway': IP({'meta': {}, 'version': 4, 'type': 'gateway', 'address': u'10.100.0.1'})})], 'meta': {'injected': False, 'tenant_id': u'10540146451709'}, 'id': u'09030eb3-bca3-4df4-a5f9-721b6bd5d599', 'label': u'private'}), 'devname': u'tap59f61b81-33', 'qbh_params': None, 'meta': {}, 'address': u'fa:16:3e:51:5d:bf', 'type': u'other', 'id': u'59f61b81-3314-4bdd-b455-2611af6653c2', 'qbg_params': None})] update_instance_cache_with_nw_info /usr/lib/python2.7/dist-packages/nova/network/api.py:72\n\nSo what we are seeing here is that the fixed IP address (10.100.0.2) allocated during the spawn of the instance\non the first compute node still exists when the port is allocated on the second compute node. Even though there was a succesful call to deallocate?\nLeading to the allocation of multiple fixed IP's.\n\n - the association of a floating IP to the fixed IP fails with:\n\nWARNING nova.api.openstack.compute.contrib.floating_ips [req-994a5ce9-fc42-4328-9eac-a05096fa25c3 10546644733724 10540146451709] multiple fixed_ips exist, using the first: 10.100.0.2\nERROR nova.api.openstack.compute.contrib.floating_ips [req-994a5ce9-fc42-4328-9eac-a05096fa25c3 10546644733724 10540146451709] Error. Unable to associate floating ip\nTRACE nova.api.openstack.compute.contrib.floating_ips Traceback (most recent call last):\nTRACE nova.api.openstack.compute.contrib.floating_ips   File \"/usr/lib/python2.7/dist-packages/nova/api/openstack/compute/contrib/floating_ips.py\", line 255, in _add_floating_ip\nTRACE nova.api.openstack.compute.contrib.floating_ips     fixed_address=fixed_address)\nTRACE nova.api.openstack.compute.contrib.floating_ips   File \"/usr/lib/python2.7/dist-packages/nova/network/api.py\", line 50, in wrapper\nTRACE nova.api.openstack.compute.contrib.floating_ips     res = f(self, context, *args, **kwargs)\nnova.api.openstack.compute.contrib.floating_ips   File \"/usr/lib/python2.7/dist-packages/nova/network/neutronv2/api.py\", line 649, in associate_floating_ip\nnova.api.openstack.compute.contrib.floating_ips     fixed_address)\nnova.api.openstack.compute.contrib.floating_ips   File \"/usr/lib/python2.7/dist-packages/nova/network/neutronv2/api.py\", line 634, in _get_port_id_by_fixed_address\nTRACE nova.api.openstack.compute.contrib.floating_ips     raise exception.FixedIpNotFoundForAddress(address=address)\nTRACE nova.api.openstack.compute.contrib.floating_ips FixedIpNotFoundForAddress: Fixed ip not found for address 10.100.0.2.\n\nLooking through the code, it seems that the call to _deallocate_network only removes the network allocation from the neutron side. It does not then update the database to reflect the deallocation.", 
            "date_created": "2014-02-26 13:31:59.180559+00:00", 
            "author": "https://api.launchpad.net/1.0/~moorryan"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/77802", 
            "date_created": "2014-03-04 07:05:00.387995+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/77802\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=3538a9cd06e1e46ec5698edf4018c8d3075b619b\nSubmitter: Jenkins\nBranch:    master\n\ncommit 3538a9cd06e1e46ec5698edf4018c8d3075b619b\nAuthor: Aaron Rosen <email address hidden>\nDate:   Mon Mar 3 22:55:35 2014 -0800\n\n    network_info cache should be cleared before being rescheduled\n    \n    If an instance fails to boot due to a non-networking error the instance\n    then gets rescheduled and launched on another compute node. In these cases\n    deallocate_for_instance() is called which deletes the network ports\n    allocated though the info_cache for the instance is never cleared. This patch\n    adds a call to update_instance_cache_with_nw_info() which causes the cache\n    to get cleared out. Note: the cache is only cleared if the instance hasn't\n    been marked for deletion. This is due to how instance_info_cache_update()\n    is implemented.\n    \n    Change-Id: If967884c9a6276f5949a7a04b597cedcce12ba09\n    Closes-bug: #1285158\n", 
            "date_created": "2014-03-24 14:13:01.547508+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: stable/havana\nReview: https://review.openstack.org/84583", 
            "date_created": "2014-04-01 23:21:07.631815+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/84583\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=4f262692cef46f2a7f78f3491c31bd5bf245de00\nSubmitter: Jenkins\nBranch:    stable/havana\n\ncommit 4f262692cef46f2a7f78f3491c31bd5bf245de00\nAuthor: Aaron Rosen <email address hidden>\nDate:   Mon Mar 3 22:55:35 2014 -0800\n\n    network_info cache should be cleared before being rescheduled\n    \n    If an instance fails to boot due to a non-networking error the instance\n    then gets rescheduled and launched on another compute node. In these cases\n    deallocate_for_instance() is called which deletes the network ports\n    allocated though the info_cache for the instance is never cleared. This patch\n    adds a call to update_instance_cache_with_nw_info() which causes the cache\n    to get cleared out. Note: the cache is only cleared if the instance hasn't\n    been marked for deletion. This is due to how instance_info_cache_update()\n    is implemented.\n    \n    Change-Id: If967884c9a6276f5949a7a04b597cedcce12ba09\n    Closes-bug: #1285158\n    (cherry picked from commit 3538a9cd06e1e46ec5698edf4018c8d3075b619b)\n", 
            "date_created": "2014-04-15 13:43:17.639069+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}