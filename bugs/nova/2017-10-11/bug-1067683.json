{
    "status": "Fix Released", 
    "last_updated": "2013-04-04 11:01:34.332134+00:00", 
    "description": "Now, when unique constraint error occured, sqlalchemy.exc.IntegrityError is raised without entering through the else branch if statement.\nException eventually receive nova.exception.DBError, because it is rapped in get_session() of nova/db/sqlalchemy/session.py\n\ndef save(self, session=None):\n\u00a0\u00a0\u00a0\u00a0\"\"\"Save this object.\"\"\"\n\u00a0\u00a0\u00a0\u00a0if not session:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0session = get_session()\n\u00a0\u00a0\u00a0\u00a0session.add(self)\n\u00a0\u00a0\u00a0\u00a0try:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0session.flush()\n\u00a0\u00a0\u00a0\u00a0except IntegrityError, e:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if str(e).endswith('is not unique'):\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0raise exception.Duplicate(str(e))\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0else:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0raise\n\n[error log]\n\n======================================================================\nFAIL: test_session_flush_on_integrity_violation()\n----------------------------------------------------------------------\nTraceback (most recent call last):\n\u00a0\u00a0File \"/opt/stack/tempest/tempest/manual_tests/negative_st/test_negative_sqlalchemy.py\", line 159, in test_session_flush_on_integrity_violation\n\u00a0\u00a0\u00a0\u00a0self.assertEqual(exception.Duplicate, inner_ex.__class__)\nAssertionError: <class 'nova.exception.Duplicate'> != <class 'sqlalchemy.exc.IntegrityError'>\n-------------------- >> begin captured logging << --------------------\ntempest.config: INFO: Using tempest config file /opt/stack/tempest/etc/tempest.conf\nnova.exception: ERROR: DB exception wrapped.\nTraceback (most recent call last):\n\u00a0\u00a0File \"/opt/stack/nova/nova/exception.py\", line 68, in _wrap\n\u00a0\u00a0\u00a0\u00a0return f(*args, **kwargs)\n\u00a0\u00a0File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/session.py\", line 1547, in flush\n\u00a0\u00a0\u00a0\u00a0self._flush(objects)\n\u00a0\u00a0File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/session.py\", line 1616, in _flush\n\u00a0\u00a0\u00a0\u00a0flush_context.execute()\n\u00a0\u00a0File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/unitofwork.py\", line 328, in execute\n\u00a0\u00a0\u00a0\u00a0rec.execute(self)\n\u00a0\u00a0File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/unitofwork.py\", line 472, in execute\n\u00a0\u00a0\u00a0\u00a0uow\n\u00a0\u00a0File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/mapper.py\", line 2264, in _save_obj\n\u00a0\u00a0\u00a0\u00a0execute(statement, multiparams)\n\u00a0\u00a0File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 1405, in execute\n\u00a0\u00a0\u00a0\u00a0params)\n\u00a0\u00a0File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 1538, in _execute_clauseelement\n\u00a0\u00a0\u00a0\u00a0compiled_sql, distilled_params\n\u00a0\u00a0File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 1646, in _execute_context\n\u00a0\u00a0\u00a0\u00a0context)\n\u00a0\u00a0File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 1639, in _execute_context\n\u00a0\u00a0\u00a0\u00a0context)\n\u00a0\u00a0File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/default.py\", line 330, in do_execute\n\u00a0\u00a0\u00a0\u00a0cursor.execute(statement, parameters)\n\u00a0\u00a0File \"/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py\", line 174, in execute\n\u00a0\u00a0\u00a0\u00a0self.errorhandler(self, exc, value)\n\u00a0\u00a0File \"/usr/lib/python2.7/dist-packages/MySQLdb/connections.py\", line 36, in defaulterrorhandler\n\u00a0\u00a0\u00a0\u00a0raise errorclass, errorvalue\nIntegrityError: (IntegrityError) (1062, \"Duplicate entry '9' for key 'PRIMARY'\") 'INSERT INTO services (created_at,\nupdated_at, deleted_at, deleted, id, host, `binary`, topic, report_count, disabled, availability_zone) VALUES (%s,\n%s, %s, %s, %s, %s, %s, %s, %s, %s, %s)' (datetime.datetime(2012, 9, 13, 2, 16, 22, 105645), None, None, 0, 9L,\nNone, None, None, 0, 0, 'nova')\n\nReason of bug seems to be to coming out of sqlarchemy error without being rapped in a nova.\nI think should return nova.exception.Duplicate.", 
    "tags": [
        "db"
    ], 
    "importance": "High", 
    "heat": 12, 
    "link": "https://bugs.launchpad.net/nova/+bug/1067683", 
    "owner": "https://api.launchpad.net/1.0/~boris-42", 
    "id": 1067683, 
    "index": 853, 
    "created": "2012-10-17 10:33:10.208875+00:00", 
    "title": "When unique constraint error occured, exception of  NovaBase.save() raising cause is sqlalchemy.exc.IntegrityError. ", 
    "comments": [
        {
            "content": "\nNow, when unique constraint error occured, sqlalchemy.exc.IntegrityError is raised without entering through the \n\nelse branch if statement.\nException eventually receive nova.exception.DBError, because it is rapped in get_session() of \n\nnova/db/sqlalchemy/session.py\n\ndef save(self, session=None):\n    \"\"\"Save this object.\"\"\"\n    if not session:\n        session = get_session()\n    session.add(self)\n    try:\n        session.flush()\n    except IntegrityError, e:\n        if str(e).endswith('is not unique'):\n            raise exception.Duplicate(str(e))\n        else:\n            raise\n\n\n\u3010error log\u3011\n\n======================================================================\nFAIL: test_session_flush_on_integrity_violation()\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/opt/stack/tempest/tempest/manual_tests/negative_st/test_negative_sqlalchemy.py\", line 159, in \n\ntest_session_flush_on_integrity_violation\n    self.assertEqual(exception.Duplicate, inner_ex.__class__)\nAssertionError: <class 'nova.exception.Duplicate'> != <class 'sqlalchemy.exc.IntegrityError'>\n-------------------- >> begin captured logging << --------------------\ntempest.config: INFO: Using tempest config file /opt/stack/tempest/etc/tempest.conf\nnova.exception: ERROR: DB exception wrapped.\nTraceback (most recent call last):\n  File \"/opt/stack/nova/nova/exception.py\", line 68, in _wrap\n    return f(*args, **kwargs)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/session.py\", line 1547, in flush\n    self._flush(objects)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/session.py\", line 1616, in _flush\n    flush_context.execute()\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/unitofwork.py\", line 328, in execute\n    rec.execute(self)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/unitofwork.py\", line 472, in execute\n    uow\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/mapper.py\", line 2264, in _save_obj\n    execute(statement, multiparams)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 1405, in execute\n    params)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 1538, in _execute_clauseelement\n    compiled_sql, distilled_params\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 1646, in _execute_context\n    context)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 1639, in _execute_context\n    context)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/default.py\", line 330, in do_execute\n    cursor.execute(statement, parameters)\n  File \"/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py\", line 174, in execute\n    self.errorhandler(self, exc, value)\n  File \"/usr/lib/python2.7/dist-packages/MySQLdb/connections.py\", line 36, in defaulterrorhandler\n    raise errorclass, errorvalue\nIntegrityError: (IntegrityError) (1062, \"Duplicate entry '9' for key 'PRIMARY'\") 'INSERT INTO services (created_at, \n\nupdated_at, deleted_at, deleted, id, host, `binary`, topic, report_count, disabled, availability_zone) VALUES (%s, \n\n%s, %s, %s, %s, %s, %s, %s, %s, %s, %s)' (datetime.datetime(2012, 9, 13, 2, 16, 22, 105645), None, None, 0, 9L, \n\nNone, None, None, 0, 0, 'nova')\n\nReason of bug seems to be to coming out of sqlarchemy error without being rapped in a nova.\nI think should return nova.exception.Duplicate.", 
            "date_created": "2012-10-17 10:33:10.208875+00:00", 
            "author": "https://api.launchpad.net/1.0/~r-sekine"
        }, 
        {
            "content": "Which version is this with?", 
            "date_created": "2012-11-14 20:09:18.690652+00:00", 
            "author": "https://api.launchpad.net/1.0/~zulcss"
        }, 
        {
            "content": "master and stable/folsom\nhttps://github.com/openstack/nova/blob/stable/folsom/nova/db/sqlalchemy/models.py", 
            "date_created": "2012-11-15 01:59:20.507693+00:00", 
            "author": "https://api.launchpad.net/1.0/~r-sekine"
        }, 
        {
            "content": "This was fixed in master:\n\nhttps://review.openstack.org/#/c/16339/\n\nneeds a backport.", 
            "date_created": "2013-02-27 00:32:04.944180+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "Fix proposed to branch: stable/folsom\nReview: https://review.openstack.org/23051", 
            "date_created": "2013-02-27 00:39:16.747077+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}