{
    "status": "Invalid", 
    "last_updated": "2016-04-29 04:18:39.377990+00:00", 
    "description": "I'm not sure exactly where this is coming from yet, but Nova is issuing a \"ROLLBACK\" to MySQL after nearly every SELECT statement, even though I think the connection should be autocommit mode. This is unnecessary and wastes time (network roundtrip) and resources (database CPU cycles).\n\nI suspect this is getting generated by sqlalchemy when ever a connection is handed back to the pool, since the number of rollbacks roughly coincides with the number of \"select 1\" statements that I see in the logs. Those are issued by the MySQLPingListener when a connection is taken out of the pool.\n\nI opened a bug already for the unnecessary \"select 1\" statements, but I'm opening this as a separate bug. If someone finds a way to fix both at once, that'd be great.", 
    "tags": [
        "db"
    ], 
    "importance": "Low", 
    "heat": 22, 
    "link": "https://bugs.launchpad.net/nova/+bug/1007038", 
    "owner": "None", 
    "id": 1007038, 
    "index": 5474, 
    "created": "2012-05-31 17:53:21.470461+00:00", 
    "title": "Nova is issuing unnecessary ROLLBACK statements to MySQL", 
    "comments": [
        {
            "content": "I'm not sure exactly where this is coming from yet, but Nova is issuing a \"ROLLBACK\" to MySQL after nearly every SELECT statement, even though I think the connection should be autocommit mode. This is unnecessary and wastes time (network roundtrip) and resources (database CPU cycles).\n\nI suspect this is getting generated by sqlalchemy when ever a connection is handed back to the pool, since the number of rollbacks roughly coincides with the number of \"select 1\" statements that I see in the logs. Those are issued by the MySQLPingListener when a connection is taken out of the pool.\n\nI opened a bug already for the unnecessary \"select 1\" statements, but I'm opening this as a separate bug. If someone finds a way to fix both at once, that'd be great.", 
            "date_created": "2012-05-31 17:53:21.470461+00:00", 
            "author": "https://api.launchpad.net/1.0/~devananda"
        }, 
        {
            "content": "Attaching a sample of query log showing the \"rollback\" statements. For reference, here are the query counts in the sample. This was taken with long_query_time=0, in devstack, during a call to \"nova add-floating-ip\".\n\ngrep -c '# Query_time: ' log-sample.floating-ip-create.log\n35\ngrep -ciP '^INSERT|^UPDATE|^DELETE' log-sample.floating-ip-create.log \n1\ngrep -ciP '^SELECT [^1]' log-sample.floating-ip-create.log \n11\ngrep -cP '^rollback' log-sample.floating-ip-create.log \n11\n", 
            "date_created": "2012-05-31 17:56:32.656882+00:00", 
            "author": "https://api.launchpad.net/1.0/~devananda"
        }, 
        {
            "content": "Found the source of this. It is coming from SQLAlchemy. It also affects keystone (and probably anything else using SQLalchemy).\n\nhttp://docs.sqlalchemy.org/en/rel_0_7/core/pooling.html?highlight=reset_on_return#api-documentation-available-pool-implementations\n\nDisabling pool_reset_on_return does indeed stop the ROLLBACK statements, but reveals another issue. Some areas in the Nova code are starting transactions, not changing any rows, and then not closing the transaction. This can be seen in \"SHOW INNODB STATUS\\G\" output as entries like the one below. In production, this could be bad, since long transactions tie up database resources. On the other hand, it is likely that this wouldn't be a problem in a high-traffic environment where the connections get re-used very quickly.\n\n---TRANSACTION 0 1471743, ACTIVE 1801 sec, process no 18808, OS thread id 139970159761152\nMySQL thread id 58, query id 13983 localhost stack  \nTrx read view will not see trx with id >= 0 1471744, sees < 0 1471708 \n\n\nFor reference, here's the change to disable reset_on_return:\n\n--- a/nova/db/sqlalchemy/session.py\n+++ b/nova/db/sqlalchemy/session.py\n@@ -101,6 +101,7 @@ def get_engine():\n             \"pool_recycle\": FLAGS.sql_idle_timeout,\n             \"echo\": False,\n             'convert_unicode': True,\n+            'pool_reset_on_return': False,\n         }\n", 
            "date_created": "2012-05-31 19:34:33.862009+00:00", 
            "author": "https://api.launchpad.net/1.0/~devananda"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/10797", 
            "date_created": "2012-08-03 21:47:44.401444+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "So after digging into this again, I feel it isn't safe to fix this right now.\n\nThe issue is that, without the pool_reset_on_return flag, Nova is leaving dangling transactions open. I initially thought this would be OK, but it is definitely _not_ok_, and even devstack/exercise.sh blows up. Not only do some parts of the code fail to close their transaction, but other areas also fail to start a new transaction -- instead getting the context of some other random old transaction. This results in unpredictable errors. Here's an example:\n\nnova/network/manager.py\n\n1233     def allocate_fixed_ip(self, context, instance_id, network, **kwargs):\n...\n1255             get_vif = self.db.virtual_interface_get_by_instance_and_network\n1256             vif = get_vif(context, instance_ref['uuid'], network['id'])\n1257             values = {'allocated': True,\n1258                       'virtual_interface_id': vif['id']}\n\nIn my tests, devstack/exercises/floating_ips.sh will randomly fail, but when it fails it is always here. The error is:\n    'NoneType' object has no attribute '__getitem__'\n\nI believe the cause of this is that the database session which gets used by virtual_interface_get_by_instance_and_network() has a pre-existing transactional context, and is seeing an older version of the database than the caller. In my tests, the age of this transaction was often > 10 seconds old by the time it was actually used. In that older context, the requested record did not exist, so no rows are returned by the query. \n\nSo, IMHO, disabling pool_reset_on_return is dangerous until all the Nova DB code handles transactions consistently; it needs to all be auto_commit, or all open and close transactions, but right now there is a mixture.", 
            "date_created": "2012-08-24 16:55:21.694037+00:00", 
            "author": "https://api.launchpad.net/1.0/~devananda"
        }, 
        {
            "content": "[Expired for oslo.db because there has been no activity for 60 days.]", 
            "date_created": "2016-04-29 04:18:35.625775+00:00", 
            "author": "https://api.launchpad.net/1.0/~janitor"
        }
    ]
}