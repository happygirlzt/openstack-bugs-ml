{
    "status": "Fix Released", 
    "last_updated": "2012-04-05 09:50:14.874606+00:00", 
    "description": "If a volume is created using the euca api,\n                     then a snapshot is created from the volume\n                     then the volume is deleted\nthe snapshot cannot now be deleted. If the user tries\nto delete the snapshot it ends up in the state 'error_deleting'\nand remains in the system.\n\nThe following sequence of euca commands illustrates the problem\n\n$ euca-create-volume -s 1 -z nova\nVOLUME\tvol-0000007c\t1\tcreating (bocktest, None, None, None)\t2011-11-10T17:36:41Z\n# euca-create-snapshot vol-0000007c\nSNAPSHOT\tsnap-00000018\tvol-0000007c\tcreating\t2011-11-10T17:37:33Z\t0%\n# euca-delete-volume vol-0000007c# euca-delete-volume vol-0000007c\nVOLUME\tvol-0000007c\n# euca-delete-snapshot snap-00000018\nSNAPSHOT\tsnap-00000018\n# euca-describe-snapshots \nSNAPSHOT\tsnap-00000018\tvol-0000007c\terror_deleting\t2011-11-10T17:37:33Z\t100%\n# euca-delete-snapshot snap-00000018\nTraceback (most recent call last):\n  File \"/usr/bin/euca-delete-snapshot\", line 110, in <module>\n    main()\n  File \"/usr/bin/euca-delete-snapshot\", line 101, in main\n    return_code = euca_conn.delete_snapshot(snapshot_id)\n  File \"/usr/lib/pymodules/python2.7/boto/ec2/connection.py\", line 1112, in delete_snapshot\n    return self.get_status('DeleteSnapshot', params)\n  File \"/usr/lib/pymodules/python2.7/boto/connection.py\", line 648, in get_status\n    raise self.ResponseError(response.status, response.reason, body)\nboto.exception.EC2ResponseError: EC2ResponseError: 400 Bad Request\n<?xml version=\"1.0\"?>\n<Response><Errors><Error><Code>ApiError</Code><Message>Snapshot status must be available</Message></Error></Errors><RequestID>286ce49b-3c6d-4dcb-8130-52afe8b9ba94</RequestID></Response>", 
    "tags": [
        "in-stable-diablo"
    ], 
    "importance": "Undecided", 
    "heat": 14, 
    "link": "https://bugs.launchpad.net/nova/+bug/888649", 
    "owner": "https://api.launchpad.net/1.0/~oliver-leahy-l", 
    "id": 888649, 
    "index": 2373, 
    "created": "2011-11-10 17:43:59.680131+00:00", 
    "title": "Snapshots left in undeletable state", 
    "comments": [
        {
            "content": "If a volume is created using the euca api,\n                     then a snapshot is created from the volume\n                     then the volume is deleted\nthe snapshot cannot now be deleted. If the user tries\nto delete the snapshot it ends up in the state 'error_deleting'\nand remains in the system.\n\nThe following sequence of euca commands illustrates the problem\n\n$ euca-create-volume -s 1 -z nova\nVOLUME\tvol-0000007c\t1\tcreating (bocktest, None, None, None)\t2011-11-10T17:36:41Z\n# euca-create-snapshot vol-0000007c\nSNAPSHOT\tsnap-00000018\tvol-0000007c\tcreating\t2011-11-10T17:37:33Z\t0%\n# euca-delete-volume vol-0000007c# euca-delete-volume vol-0000007c\nVOLUME\tvol-0000007c\n# euca-delete-snapshot snap-00000018\nSNAPSHOT\tsnap-00000018\n# euca-describe-snapshots \nSNAPSHOT\tsnap-00000018\tvol-0000007c\terror_deleting\t2011-11-10T17:37:33Z\t100%\n# euca-delete-snapshot snap-00000018\nTraceback (most recent call last):\n  File \"/usr/bin/euca-delete-snapshot\", line 110, in <module>\n    main()\n  File \"/usr/bin/euca-delete-snapshot\", line 101, in main\n    return_code = euca_conn.delete_snapshot(snapshot_id)\n  File \"/usr/lib/pymodules/python2.7/boto/ec2/connection.py\", line 1112, in delete_snapshot\n    return self.get_status('DeleteSnapshot', params)\n  File \"/usr/lib/pymodules/python2.7/boto/connection.py\", line 648, in get_status\n    raise self.ResponseError(response.status, response.reason, body)\nboto.exception.EC2ResponseError: EC2ResponseError: 400 Bad Request\n<?xml version=\"1.0\"?>\n<Response><Errors><Error><Code>ApiError</Code><Message>Snapshot status must be available</Message></Error></Errors><RequestID>286ce49b-3c6d-4dcb-8130-52afe8b9ba94</RequestID></Response>", 
            "date_created": "2011-11-10 17:43:59.680131+00:00", 
            "author": "https://api.launchpad.net/1.0/~oliver-leahy-l"
        }, 
        {
            "content": "What volume driver do you use? Can you post nova-volume logs related to this bug?", 
            "date_created": "2011-11-14 19:05:23.118967+00:00", 
            "author": "https://api.launchpad.net/1.0/~yorik-sar"
        }, 
        {
            "content": "On Thu, Nov 10, 2011 at 05:43:59PM -0000, Ollie Leahy wrote:\n> $ euca-create-volume -s 1 -z nova\n> VOLUME\tvol-0000007c\t1\tcreating (bocktest, None, None, None)\t2011-11-10T17:36:41Z\n> # euca-create-snapshot vol-0000007c\n> SNAPSHOT\tsnap-00000018\tvol-0000007c\tcreating\t2011-11-10T17:37:33Z\t0%\n> # euca-delete-volume vol-0000007c# euca-delete-volume vol-0000007c\n> VOLUME\tvol-0000007c\n\nThis volume in LVM with snapshot shouldn't be deleted\nwith VolumeIsBusy exception.\n(At least it's my intension of VolumeDriver::delete_volume() with lvdisplay)\nCan you please track down why it can be deleted?\n\nIf this volume in LVM is deleted, the all of derived snapshots are\ndeleted at the same time. So the following lvremove for snapshot\nwould fail. It explains the below behavior.\n\nthanks,\n-- \nyamahata\n", 
            "date_created": "2011-11-14 19:05:41+00:00", 
            "author": "https://api.launchpad.net/1.0/~yamahata"
        }, 
        {
            "content": "    I'm mostly using our own driver, but for the logs attached I'm using the \r\n    default driver (nova.volume.driver.ISCSIDriver, I believe)\r\n\r\n    When I went back and looked at the behavior of the default driver I saw \r\n    that it's slightly different to the behavior I described in the bug report, \r\n    though it's still broken, I think.\r\n\r\n    If I create a volume, then create a snapshot from the volume, and then try \r\n    to delete the base volume, nova-volumes attempts to delete the volume, but \r\n    fails and the volume is left in the stat 'error-deleting'\r\n\r\n    In fact I can subsequently delete the snapsnot, but I can't delete the \r\n    volume.\r\n\r\n# euca-create-volume -s 1 -z nova\r\nVOLUME  vol-0000009d    1   creating (bocktest, None, None, None)   2011-11-15T12:53:25Z\r\n# euca-create-snapshot vol-0000009d\r\nSNAPSHOT    snap-00000022   vol-0000009d    creating    2011-11-15T12:53:46Z    0%\r\n# euca-delete-volume vol-0000009d\r\nVOLUME  vol-0000009d\r\n\r\n# euca-describe-volumes \r\nVOLUME  vol-0000009d     1      nova    error_deleting (bocktest, #########, None, None)    2011-11-15T12:53:25Z\r\n\r\n    \r\n# euca-delete-volume vol-0000009d\r\nApiError: Volume status must be available\r\n\r\n-----Original Message-----\r\nFrom: <email address hidden> [mailto:<email address hidden>] On Behalf Of Yuriy Taraday\r\nSent: 14 November 2011 19:05\r\nTo: Leahy, Oliver\r\nSubject: [Bug 888649] Re: Snapshots left in undeletable state\r\n\r\nWhat volume driver do you use? Can you post nova-volume logs related to\r\nthis bug?\r\n\r\n-- \r\nYou received this bug notification because you are subscribed to the bug\r\nreport.\r\nhttps://bugs.launchpad.net/bugs/888649\r\n\r\nTitle:\r\n  Snapshots left in undeletable state\r\n\r\nStatus in OpenStack Compute (Nova):\r\n  New\r\n\r\nBug description:\r\n  If a volume is created using the euca api,\r\n                       then a snapshot is created from the volume\r\n                       then the volume is deleted\r\n  the snapshot cannot now be deleted. If the user tries\r\n  to delete the snapshot it ends up in the state 'error_deleting'\r\n  and remains in the system.\r\n\r\n  The following sequence of euca commands illustrates the problem\r\n\r\n  $ euca-create-volume -s 1 -z nova\r\n  VOLUME\tvol-0000007c\t1\tcreating (bocktest, None, None, None)\t2011-11-10T17:36:41Z\r\n  # euca-create-snapshot vol-0000007c\r\n  SNAPSHOT\tsnap-00000018\tvol-0000007c\tcreating\t2011-11-10T17:37:33Z\t0%\r\n  # euca-delete-volume vol-0000007c# euca-delete-volume vol-0000007c\r\n  VOLUME\tvol-0000007c\r\n  # euca-delete-snapshot snap-00000018\r\n  SNAPSHOT\tsnap-00000018\r\n  # euca-describe-snapshots \r\n  SNAPSHOT\tsnap-00000018\tvol-0000007c\terror_deleting\t2011-11-10T17:37:33Z\t100%\r\n  # euca-delete-snapshot snap-00000018\r\n  Traceback (most recent call last):\r\n    File \"/usr/bin/euca-delete-snapshot\", line 110, in <module>\r\n      main()\r\n    File \"/usr/bin/euca-delete-snapshot\", line 101, in main\r\n      return_code = euca_conn.delete_snapshot(snapshot_id)\r\n    File \"/usr/lib/pymodules/python2.7/boto/ec2/connection.py\", line 1112, in delete_snapshot\r\n      return self.get_status('DeleteSnapshot', params)\r\n    File \"/usr/lib/pymodules/python2.7/boto/connection.py\", line 648, in get_status\r\n      raise self.ResponseError(response.status, response.reason, body)\r\n  boto.exception.EC2ResponseError: EC2ResponseError: 400 Bad Request\r\n  <?xml version=\"1.0\"?>\r\n  <Response><Errors><Error><Code>ApiError</Code><Message>Snapshot status must be available</Message></Error></Errors><RequestID>286ce49b-3c6d-4dcb-8130-52afe8b9ba94</RequestID></Response>\r\n\r\nTo manage notifications about this bug go to:\r\nhttps://bugs.launchpad.net/nova/+bug/888649/+subscriptions\r\n", 
            "date_created": "2011-11-15 14:28:02+00:00", 
            "author": "https://api.launchpad.net/1.0/~oliver-leahy-l"
        }, 
        {
            "content": "On my installation I can delete a volume that is referenced by a \r\nsnapshot. I will try to understand why this is so and get back to \r\nyou.\r\n\r\nThough as I said in my previous message the behavior of the LVM based \r\ndriver is different to the behavior I described in my original bug \r\nreport.\r\n\r\n\r\nRegards,\r\nOllie\r\n\r\n-----Original Message-----\r\nFrom: <email address hidden> [mailto:<email address hidden>] On Behalf Of Isaku Yamahata\r\nSent: 14 November 2011 19:06\r\nTo: Leahy, Oliver\r\nSubject: Re: [Bug 888649] [NEW] Snapshots left in undeletable state\r\n\r\nOn Thu, Nov 10, 2011 at 05:43:59PM -0000, Ollie Leahy wrote:\r\n> $ euca-create-volume -s 1 -z nova\r\n> VOLUME\tvol-0000007c\t1\tcreating (bocktest, None, None, None)\t2011-11-10T17:36:41Z\r\n> # euca-create-snapshot vol-0000007c\r\n> SNAPSHOT\tsnap-00000018\tvol-0000007c\tcreating\t2011-11-10T17:37:33Z\t0%\r\n> # euca-delete-volume vol-0000007c# euca-delete-volume vol-0000007c\r\n> VOLUME\tvol-0000007c\r\n\r\nThis volume in LVM with snapshot shouldn't be deleted\r\nwith VolumeIsBusy exception.\r\n(At least it's my intension of VolumeDriver::delete_volume() with lvdisplay)\r\nCan you please track down why it can be deleted?\r\n\r\nIf this volume in LVM is deleted, the all of derived snapshots are\r\ndeleted at the same time. So the following lvremove for snapshot\r\nwould fail. It explains the below behavior.\r\n\r\nthanks,\r\n-- \r\nyamahata\r\n\r\n-- \r\nYou received this bug notification because you are subscribed to the bug\r\nreport.\r\nhttps://bugs.launchpad.net/bugs/888649\r\n\r\nTitle:\r\n  Snapshots left in undeletable state\r\n\r\nStatus in OpenStack Compute (Nova):\r\n  New\r\n\r\nBug description:\r\n  If a volume is created using the euca api,\r\n                       then a snapshot is created from the volume\r\n                       then the volume is deleted\r\n  the snapshot cannot now be deleted. If the user tries\r\n  to delete the snapshot it ends up in the state 'error_deleting'\r\n  and remains in the system.\r\n\r\n  The following sequence of euca commands illustrates the problem\r\n\r\n  $ euca-create-volume -s 1 -z nova\r\n  VOLUME\tvol-0000007c\t1\tcreating (bocktest, None, None, None)\t2011-11-10T17:36:41Z\r\n  # euca-create-snapshot vol-0000007c\r\n  SNAPSHOT\tsnap-00000018\tvol-0000007c\tcreating\t2011-11-10T17:37:33Z\t0%\r\n  # euca-delete-volume vol-0000007c# euca-delete-volume vol-0000007c\r\n  VOLUME\tvol-0000007c\r\n  # euca-delete-snapshot snap-00000018\r\n  SNAPSHOT\tsnap-00000018\r\n  # euca-describe-snapshots \r\n  SNAPSHOT\tsnap-00000018\tvol-0000007c\terror_deleting\t2011-11-10T17:37:33Z\t100%\r\n  # euca-delete-snapshot snap-00000018\r\n  Traceback (most recent call last):\r\n    File \"/usr/bin/euca-delete-snapshot\", line 110, in <module>\r\n      main()\r\n    File \"/usr/bin/euca-delete-snapshot\", line 101, in main\r\n      return_code = euca_conn.delete_snapshot(snapshot_id)\r\n    File \"/usr/lib/pymodules/python2.7/boto/ec2/connection.py\", line 1112, in delete_snapshot\r\n      return self.get_status('DeleteSnapshot', params)\r\n    File \"/usr/lib/pymodules/python2.7/boto/connection.py\", line 648, in get_status\r\n      raise self.ResponseError(response.status, response.reason, body)\r\n  boto.exception.EC2ResponseError: EC2ResponseError: 400 Bad Request\r\n  <?xml version=\"1.0\"?>\r\n  <Response><Errors><Error><Code>ApiError</Code><Message>Snapshot status must be available</Message></Error></Errors><RequestID>286ce49b-3c6d-4dcb-8130-52afe8b9ba94</RequestID></Response>\r\n\r\nTo manage notifications about this bug go to:\r\nhttps://bugs.launchpad.net/nova/+bug/888649/+subscriptions\r\n", 
            "date_created": "2011-11-15 14:35:15+00:00", 
            "author": "https://api.launchpad.net/1.0/~oliver-leahy-l"
        }, 
        {
            "content": "\n   Update to describe exact behavior for LVM based driver\n\n    I'm mostly using our own driver in these tests, but I went through the test again using the\n    default driver (nova.volume.driver.ISCSIDriver, I believe)\n\n    The behavior of the default driver is  slightly different to the behavior I described in the\n    original bug report, though it's still broken, I think.\n\n    If I create a volume, then create a snapshot from the volume, and then try\n    to delete the base volume, nova-volumes attempts to delete the volume, but\n    fails and the volume is left in the stat 'error-deleting'\n\n    In fact I can subsequently delete the snapsnot, but I can't delete the\n    volume.\n\n\n# euca-create-volume -s 1 -z nova\nVOLUME  vol-0000009d    1   creating (bocktest, None, None, None)   2011-11-15T12:53:25Z\n# euca-create-snapshot vol-0000009d\nSNAPSHOT    snap-00000022   vol-0000009d    creating    2011-11-15T12:53:46Z    0%\n# euca-delete-volume vol-0000009d\nVOLUME  vol-0000009d\n\n# euca-describe-volumes\nVOLUME  vol-00000099     1      nova    error (bocktest, stratus10, hostname, None) 2011-11-15T11:37:21Z\nVOLUME  vol-0000009a     1      nova    error_deleting (bocktest, hostname, None, None)    2011-11-15T11:50:06Z\nVOLUME  vol-0000009d     1      nova    error_deleting (bocktest, hostname, None, None)    2011-11-15T12:53:25Z\n\n\n# euca-delete-volume vol-0000009d\nApiError: Volume status must be available\n", 
            "date_created": "2011-11-15 14:50:34.615473+00:00", 
            "author": "https://api.launchpad.net/1.0/~oliver-leahy-l"
        }, 
        {
            "content": "\r\n    I've tracked down the source of the problem deleting volumes that are \r\n    referenced by snapshots using nova.volume.ISCSIDriver.\r\n\r\n    When the driver detects that the volume is busy then the delete_volume() \r\n    method in the VolumeDriver class in nova/volume/driver.py raises a \r\n    VolumeIsBusy exception with a keyword arg.  However, the VolumeIsBusy \r\n    exception is derived from Error in nova/exception.py and neither \r\n    VolumeIsBusy nor Error accept keyword parameters. This means that an \r\n    unexpected keyword exception is raised, which the driver doesn't expect so \r\n    it sets the status of the volume to 'error-deleting' and stops. See the log \r\n    fragment below.\r\n\r\n\r\n    Deleting volumes works if I change nova/exception.py so that the \r\n    exception VolumeIsBusy derives from NovaException instead of Error.  \r\n    NovaException can handle keyword arguments, so VolumeDrive.delete_volume() \r\n    sees the exception is expects (VolumeIsBusy) and it can handle the \r\n    situation correctly.\r\n\r\n    Any opinions on whether this is the 'correct' way to fix this problem?\r\n\r\n    regards,\r\n    Ollie\r\n\r\n\r\n    \r\n\r\n\r\n\r\n2011-11-16 11:06:46,211 DEBUG nova.utils [-] Running cmd (subprocess): sudo lvdisplay --noheading -C -o Attr nova-volumes/volume-000000a4 from (pid=6234) execute /usr/lib/python2.7/dist-packages/nova/utils.py:165\r\n2011-11-16 11:06:46,271 ERROR nova.volume.manager [-] driver raised exception <__init__() got an unexpected keyword argument 'volume_name'>\r\n2011-11-16 11:06:46,296 ERROR nova.rpc [-] Exception during message handling\r\n(nova.rpc): TRACE: Traceback (most recent call last):\r\n(nova.rpc): TRACE:   File \"/usr/lib/python2.7/dist-packages/nova/rpc/impl_kombu.py\", line 620, in _process_data\r\n(nova.rpc): TRACE:     rval = node_func(context=ctxt, **node_args)\r\n(nova.rpc): TRACE:   File \"/usr/lib/python2.7/dist-packages/nova/volume/manager.py\", line 189, in delete_volume\r\n(nova.rpc): TRACE:     raise\r\n(nova.rpc): TRACE: TypeError: exceptions must be old-style classes or derived from BaseException, not NoneType\r\n(nova.rpc): TRACE:\r\n\r\n\r\n# diff -c /usr/share/pyshared/nova/exception.py{,.backup}\r\n*** /usr/share/pyshared/nova/exception.py   2011-11-16 11:46:31.000000000 +0000\r\n--- /usr/share/pyshared/nova/exception.py.backup    2011-11-16 11:39:04.000000000 +0000\r\n***************\r\n*** 370,376 ****\r\n      message = _(\"Snapshot %(snapshot_id)s could not be found.\")\r\n  \r\n  \r\n! class VolumeIsBusy(NovaException):\r\n      message = _(\"deleting volume %(volume_name)s that has snapshot\")\r\n  \r\n  \r\n--- 370,376 ----\r\n      message = _(\"Snapshot %(snapshot_id)s could not be found.\")\r\n  \r\n  \r\n! class VolumeIsBusy(Error):\r\n      message = _(\"deleting volume %(volume_name)s that has snapshot\")\r\n  \r\n\r\n\r\n-----Original Message-----\r\nFrom: Leahy, Oliver \r\nSent: 15 November 2011 14:35\r\nTo: 'Bug 888649'\r\nSubject: RE: [Bug 888649] [NEW] Snapshots left in undeletable state\r\n\r\nOn my installation I can delete a volume that is referenced by a \r\nsnapshot. I will try to understand why this is so and get back to \r\nyou.\r\n\r\nThough as I said in my previous message the behavior of the LVM based \r\ndriver is different to the behavior I described in my original bug \r\nreport.\r\n\r\n\r\nRegards,\r\nOllie\r\n\r\n-----Original Message-----\r\nFrom: <email address hidden> [mailto:<email address hidden>] On Behalf Of Isaku Yamahata\r\nSent: 14 November 2011 19:06\r\nTo: Leahy, Oliver\r\nSubject: Re: [Bug 888649] [NEW] Snapshots left in undeletable state\r\n\r\nOn Thu, Nov 10, 2011 at 05:43:59PM -0000, Ollie Leahy wrote:\r\n> $ euca-create-volume -s 1 -z nova\r\n> VOLUME\tvol-0000007c\t1\tcreating (bocktest, None, None, None)\t2011-11-10T17:36:41Z\r\n> # euca-create-snapshot vol-0000007c\r\n> SNAPSHOT\tsnap-00000018\tvol-0000007c\tcreating\t2011-11-10T17:37:33Z\t0%\r\n> # euca-delete-volume vol-0000007c# euca-delete-volume vol-0000007c\r\n> VOLUME\tvol-0000007c\r\n\r\nThis volume in LVM with snapshot shouldn't be deleted\r\nwith VolumeIsBusy exception.\r\n(At least it's my intension of VolumeDriver::delete_volume() with lvdisplay)\r\nCan you please track down why it can be deleted?\r\n\r\nIf this volume in LVM is deleted, the all of derived snapshots are\r\ndeleted at the same time. So the following lvremove for snapshot\r\nwould fail. It explains the below behavior.\r\n\r\nthanks,\r\n-- \r\nyamahata\r\n\r\n-- \r\nYou received this bug notification because you are subscribed to the bug\r\nreport.\r\nhttps://bugs.launchpad.net/bugs/888649\r\n\r\nTitle:\r\n  Snapshots left in undeletable state\r\n\r\nStatus in OpenStack Compute (Nova):\r\n  New\r\n\r\nBug description:\r\n  If a volume is created using the euca api,\r\n                       then a snapshot is created from the volume\r\n                       then the volume is deleted\r\n  the snapshot cannot now be deleted. If the user tries\r\n  to delete the snapshot it ends up in the state 'error_deleting'\r\n  and remains in the system.\r\n\r\n  The following sequence of euca commands illustrates the problem\r\n\r\n  $ euca-create-volume -s 1 -z nova\r\n  VOLUME\tvol-0000007c\t1\tcreating (bocktest, None, None, None)\t2011-11-10T17:36:41Z\r\n  # euca-create-snapshot vol-0000007c\r\n  SNAPSHOT\tsnap-00000018\tvol-0000007c\tcreating\t2011-11-10T17:37:33Z\t0%\r\n  # euca-delete-volume vol-0000007c# euca-delete-volume vol-0000007c\r\n  VOLUME\tvol-0000007c\r\n  # euca-delete-snapshot snap-00000018\r\n  SNAPSHOT\tsnap-00000018\r\n  # euca-describe-snapshots \r\n  SNAPSHOT\tsnap-00000018\tvol-0000007c\terror_deleting\t2011-11-10T17:37:33Z\t100%\r\n  # euca-delete-snapshot snap-00000018\r\n  Traceback (most recent call last):\r\n    File \"/usr/bin/euca-delete-snapshot\", line 110, in <module>\r\n      main()\r\n    File \"/usr/bin/euca-delete-snapshot\", line 101, in main\r\n      return_code = euca_conn.delete_snapshot(snapshot_id)\r\n    File \"/usr/lib/pymodules/python2.7/boto/ec2/connection.py\", line 1112, in delete_snapshot\r\n      return self.get_status('DeleteSnapshot', params)\r\n    File \"/usr/lib/pymodules/python2.7/boto/connection.py\", line 648, in get_status\r\n      raise self.ResponseError(response.status, response.reason, body)\r\n  boto.exception.EC2ResponseError: EC2ResponseError: 400 Bad Request\r\n  <?xml version=\"1.0\"?>\r\n  <Response><Errors><Error><Code>ApiError</Code><Message>Snapshot status must be available</Message></Error></Errors><RequestID>286ce49b-3c6d-4dcb-8130-52afe8b9ba94</RequestID></Response>\r\n\r\nTo manage notifications about this bug go to:\r\nhttps://bugs.launchpad.net/nova/+bug/888649/+subscriptions\r\n", 
            "date_created": "2011-11-16 14:46:07+00:00", 
            "author": "https://api.launchpad.net/1.0/~oliver-leahy-l"
        }, 
        {
            "content": "Things shouldn't be derived from Error, that is for sure.\n\nCan you verify that it actually works as expected with the change?\n\nVish\n\nOn Nov 16, 2011, at 6:46 AM, Ollie Leahy wrote:\n\n> I've tracked down the source of the problem deleting volumes that are \n>    referenced by snapshots using nova.volume.ISCSIDriver.\n> \n>    When the driver detects that the volume is busy then the delete_volume() \n>    method in the VolumeDriver class in nova/volume/driver.py raises a \n>    VolumeIsBusy exception with a keyword arg.  However, the VolumeIsBusy \n>    exception is derived from Error in nova/exception.py and neither \n>    VolumeIsBusy nor Error accept keyword parameters. This means that an \n>    unexpected keyword exception is raised, which the driver doesn't expect so \n>    it sets the status of the volume to 'error-deleting' and stops. See the log \n>    fragment below.\n> \n> \n>    Deleting volumes works if I change nova/exception.py so that the \n>    exception VolumeIsBusy derives from NovaException instead of Error.  \n>    NovaException can handle keyword arguments, so VolumeDrive.delete_volume() \n>    sees the exception is expects (VolumeIsBusy) and it can handle the \n>    situation correctly.\n> \n>    Any opinions on whether this is the 'correct' way to fix this\n> problem?\n> \n>    regards,\n>    Ollie\n> \n> \n> \n> \n> \n> 2011-11-16 11:06:46,211 DEBUG nova.utils [-] Running cmd (subprocess): sudo lvdisplay --noheading -C -o Attr nova-volumes/volume-000000a4 from (pid=6234) execute /usr/lib/python2.7/dist-packages/nova/utils.py:165\n> 2011-11-16 11:06:46,271 ERROR nova.volume.manager [-] driver raised exception <__init__() got an unexpected keyword argument 'volume_name'>\n> 2011-11-16 11:06:46,296 ERROR nova.rpc [-] Exception during message handling\n> (nova.rpc): TRACE: Traceback (most recent call last):\n> (nova.rpc): TRACE:   File \"/usr/lib/python2.7/dist-packages/nova/rpc/impl_kombu.py\", line 620, in _process_data\n> (nova.rpc): TRACE:     rval = node_func(context=ctxt, **node_args)\n> (nova.rpc): TRACE:   File \"/usr/lib/python2.7/dist-packages/nova/volume/manager.py\", line 189, in delete_volume\n> (nova.rpc): TRACE:     raise\n> (nova.rpc): TRACE: TypeError: exceptions must be old-style classes or derived from BaseException, not NoneType\n> (nova.rpc): TRACE:\n> \n> \n> # diff -c /usr/share/pyshared/nova/exception.py{,.backup}\n> *** /usr/share/pyshared/nova/exception.py   2011-11-16 11:46:31.000000000 +0000\n> --- /usr/share/pyshared/nova/exception.py.backup    2011-11-16 11:39:04.000000000 +0000\n> ***************\n> *** 370,376 ****\n>      message = _(\"Snapshot %(snapshot_id)s could not be found.\")\n> \n> \n> ! class VolumeIsBusy(NovaException):\n>      message = _(\"deleting volume %(volume_name)s that has snapshot\")\n> \n> \n> --- 370,376 ----\n>      message = _(\"Snapshot %(snapshot_id)s could not be found.\")\n> \n> \n> ! class VolumeIsBusy(Error):\n>      message = _(\"deleting volume %(volume_name)s that has snapshot\")\n> \n> \n> \n> -----Original Message-----\n> From: Leahy, Oliver \n> Sent: 15 November 2011 14:35\n> To: 'Bug 888649'\n> Subject: RE: [Bug 888649] [NEW] Snapshots left in undeletable state\n> \n> On my installation I can delete a volume that is referenced by a \n> snapshot. I will try to understand why this is so and get back to \n> you.\n> \n> Though as I said in my previous message the behavior of the LVM based \n> driver is different to the behavior I described in my original bug \n> report.\n> \n> \n> Regards,\n> Ollie\n> \n> -----Original Message-----\n> From: <email address hidden> [mailto:<email address hidden>] On Behalf Of Isaku Yamahata\n> Sent: 14 November 2011 19:06\n> To: Leahy, Oliver\n> Subject: Re: [Bug 888649] [NEW] Snapshots left in undeletable state\n> \n> On Thu, Nov 10, 2011 at 05:43:59PM -0000, Ollie Leahy wrote:\n>> $ euca-create-volume -s 1 -z nova\n>> VOLUME\tvol-0000007c\t1\tcreating (bocktest, None, None, None)\t2011-11-10T17:36:41Z\n>> # euca-create-snapshot vol-0000007c\n>> SNAPSHOT\tsnap-00000018\tvol-0000007c\tcreating\t2011-11-10T17:37:33Z\t0%\n>> # euca-delete-volume vol-0000007c# euca-delete-volume vol-0000007c\n>> VOLUME\tvol-0000007c\n> \n> This volume in LVM with snapshot shouldn't be deleted\n> with VolumeIsBusy exception.\n> (At least it's my intension of VolumeDriver::delete_volume() with lvdisplay)\n> Can you please track down why it can be deleted?\n> \n> If this volume in LVM is deleted, the all of derived snapshots are\n> deleted at the same time. So the following lvremove for snapshot\n> would fail. It explains the below behavior.\n> \n> thanks,\n> -- \n> yamahata\n> \n> -- \n> You received this bug notification because you are subscribed to the bug\n> report.\n> https://bugs.launchpad.net/bugs/888649\n> \n> Title:\n>  Snapshots left in undeletable state\n> \n> Status in OpenStack Compute (Nova):\n>  New\n> \n> Bug description:\n>  If a volume is created using the euca api,\n>                       then a snapshot is created from the volume\n>                       then the volume is deleted\n>  the snapshot cannot now be deleted. If the user tries\n>  to delete the snapshot it ends up in the state 'error_deleting'\n>  and remains in the system.\n> \n>  The following sequence of euca commands illustrates the problem\n> \n>  $ euca-create-volume -s 1 -z nova\n>  VOLUME\tvol-0000007c\t1\tcreating (bocktest, None, None, None)\t2011-11-10T17:36:41Z\n>  # euca-create-snapshot vol-0000007c\n>  SNAPSHOT\tsnap-00000018\tvol-0000007c\tcreating\t2011-11-10T17:37:33Z\t0%\n>  # euca-delete-volume vol-0000007c# euca-delete-volume vol-0000007c\n>  VOLUME\tvol-0000007c\n>  # euca-delete-snapshot snap-00000018\n>  SNAPSHOT\tsnap-00000018\n>  # euca-describe-snapshots \n>  SNAPSHOT\tsnap-00000018\tvol-0000007c\terror_deleting\t2011-11-10T17:37:33Z\t100%\n>  # euca-delete-snapshot snap-00000018\n>  Traceback (most recent call last):\n>    File \"/usr/bin/euca-delete-snapshot\", line 110, in <module>\n>      main()\n>    File \"/usr/bin/euca-delete-snapshot\", line 101, in main\n>      return_code = euca_conn.delete_snapshot(snapshot_id)\n>    File \"/usr/lib/pymodules/python2.7/boto/ec2/connection.py\", line 1112, in delete_snapshot\n>      return self.get_status('DeleteSnapshot', params)\n>    File \"/usr/lib/pymodules/python2.7/boto/connection.py\", line 648, in get_status\n>      raise self.ResponseError(response.status, response.reason, body)\n>  boto.exception.EC2ResponseError: EC2ResponseError: 400 Bad Request\n>  <?xml version=\"1.0\"?>\n>  <Response><Errors><Error><Code>ApiError</Code><Message>Snapshot status must be available</Message></Error></Errors><RequestID>286ce49b-3c6d-4dcb-8130-52afe8b9ba94</RequestID></Response>\n> \n> To manage notifications about this bug go to:\n> https://bugs.launchpad.net/nova/+bug/888649/+subscriptions\n> \n> -- \n> You received this bug notification because you are subscribed to\n> OpenStack Compute (nova).\n> https://bugs.launchpad.net/bugs/888649\n> \n> Title:\n>  Snapshots left in undeletable state\n> \n> Status in OpenStack Compute (Nova):\n>  New\n> \n> Bug description:\n>  If a volume is created using the euca api,\n>                       then a snapshot is created from the volume\n>                       then the volume is deleted\n>  the snapshot cannot now be deleted. If the user tries\n>  to delete the snapshot it ends up in the state 'error_deleting'\n>  and remains in the system.\n> \n>  The following sequence of euca commands illustrates the problem\n> \n>  $ euca-create-volume -s 1 -z nova\n>  VOLUME\tvol-0000007c\t1\tcreating (bocktest, None, None, None)\t2011-11-10T17:36:41Z\n>  # euca-create-snapshot vol-0000007c\n>  SNAPSHOT\tsnap-00000018\tvol-0000007c\tcreating\t2011-11-10T17:37:33Z\t0%\n>  # euca-delete-volume vol-0000007c# euca-delete-volume vol-0000007c\n>  VOLUME\tvol-0000007c\n>  # euca-delete-snapshot snap-00000018\n>  SNAPSHOT\tsnap-00000018\n>  # euca-describe-snapshots \n>  SNAPSHOT\tsnap-00000018\tvol-0000007c\terror_deleting\t2011-11-10T17:37:33Z\t100%\n>  # euca-delete-snapshot snap-00000018\n>  Traceback (most recent call last):\n>    File \"/usr/bin/euca-delete-snapshot\", line 110, in <module>\n>      main()\n>    File \"/usr/bin/euca-delete-snapshot\", line 101, in main\n>      return_code = euca_conn.delete_snapshot(snapshot_id)\n>    File \"/usr/lib/pymodules/python2.7/boto/ec2/connection.py\", line 1112, in delete_snapshot\n>      return self.get_status('DeleteSnapshot', params)\n>    File \"/usr/lib/pymodules/python2.7/boto/connection.py\", line 648, in get_status\n>      raise self.ResponseError(response.status, response.reason, body)\n>  boto.exception.EC2ResponseError: EC2ResponseError: 400 Bad Request\n>  <?xml version=\"1.0\"?>\n>  <Response><Errors><Error><Code>ApiError</Code><Message>Snapshot status must be available</Message></Error></Errors><RequestID>286ce49b-3c6d-4dcb-8130-52afe8b9ba94</RequestID></Response>\n> \n> To manage notifications about this bug go to:\n> https://bugs.launchpad.net/nova/+bug/888649/+subscriptions\n\n", 
            "date_created": "2011-11-16 18:40:41+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "Yes, when I make that change the operations I'm doing work as expected.\nThat is, when I try to delete a volume that is referenced by a snapshot,\nthe volume driver detects that the volume is busy and leaves it in the\n'available' state. I can continue to use the volume and the snapshot, \nand I can subsequently delete the snapshot and then the volume.\n\nThe only observation I have is that euca-delete-volume returns success\nwhen I try to delete the volume referenced by a snapshot. We think this \nis acceptable.\n\nIn fact, I think that it's not possible to pass an error status back \nfrom the nova-volume driver, through nova-api to the cli. So the only \nway an error status could be returned to the CLI is if nova-api detected \nthe busy condition and didn't sent the request to nova-volume in the \ncase where the volume is being referenced.\n\nBut, we would not like nova-api to stop the delete request being sent to\nthe driver. Because we are developing a nova-volume driver that will\nsupport the deleting volumes that are referenced by snapshots. We see\nvalid use cases for this and expect that other development groups would\ntoo.\n", 
            "date_created": "2011-11-17 14:41:04.173710+00:00", 
            "author": "https://api.launchpad.net/1.0/~oliver-leahy-l"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/1900\nCommitted: http://github.com/openstack/nova/commit/e0ef89f091a77a25fa9bcfd466159e101cb42c56\nSubmitter: Jenkins\nBranch:    master\n\n status fixcommitted\n done\n\ncommit e0ef89f091a77a25fa9bcfd466159e101cb42c56\nAuthor: Ollie Leahy <email address hidden>\nDate:   Thu Nov 24 15:56:08 2011 +0000\n\n    Fixes bug 888649\n    \n    Change exception.VolumeIsBusy to derive from NovaException instead of\n    Error, so that an 'unexpected keyword' exception is not thrown when\n    the exception is raised with keyword parameters.\n    \n    Add unit test to confirm that the 'unexpected keyword' exception is not\n    thrown when the exception is raised by nova.volume.driver.VolumeDriver\n    \n    Responded to reviewer observations, fix pep8 errors in tset_volume.py,\n    added email address to Authors file.\n    \n    Change-Id: I15464cb0cf72a2c71f430e4c8c5c2b27cd4e2ef9\n", 
            "date_created": "2011-11-28 16:57:11+00:00", 
            "author": "https://api.launchpad.net/1.0/~openstack-gerrit"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/2185\nCommitted: http://github.com/openstack/nova/commit/5d319531552689e4842a84adce01c81899cdfb17\nSubmitter: Jenkins\nBranch:    stable/diablo\n\ncommit 5d319531552689e4842a84adce01c81899cdfb17\nAuthor: Ollie Leahy <email address hidden>\nDate:   Thu Nov 24 15:56:08 2011 +0000\n\n    Fixes bug 888649\n    \n    Change exception.VolumeIsBusy to derive from NovaException instead of\n    Error, so that an 'unexpected keyword' exception is not thrown when\n    the exception is raised with keyword parameters.\n    \n    Add unit test to confirm that the 'unexpected keyword' exception is not\n    thrown when the exception is raised by nova.volume.driver.VolumeDriver\n    \n    Responded to reviewer observations, fix pep8 errors in tset_volume.py,\n    added email address to Authors file.\n    \n    (cherry picked from commit e0ef89f091a77a25fa9bcfd466159e101cb42c56)\n    \n    Change-Id: I15464cb0cf72a2c71f430e4c8c5c2b27cd4e2ef9\n", 
            "date_created": "2011-12-21 13:08:25.500412+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}