{
    "status": "Fix Released", 
    "last_updated": "2013-12-10 22:41:39.513811+00:00", 
    "description": "The scheduler's host_manager tries to cache capacity changes in between resource tracker updates on the compute side.  It uses its cache while each compute_node['updated_at'] is older than the scheduler cache.\n\nIt's possible that under failure scenarios that this cache is updated to use a resource that is never committed on the compute side.  It's also possible due to a race condition that the scheduler updates its cache at nearly the same time the compute manager does.\n\nThere's a periodic task that runs on compute nodes that constantly updates the compute_node's entry to make sure used resources are in sync with the DB.\nHowever, when there's no differences, despite calling compute_node_update(), 'updated_at' does not get updated in the DB.  This can result in the scheduler forever having an incorrect view of resources as it never sees a newer 'updated_at' in the compute_node entry.", 
    "tags": [], 
    "importance": "High", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1153778", 
    "owner": "https://api.launchpad.net/1.0/~cbehrens", 
    "id": 1153778, 
    "index": 1011, 
    "created": "2013-03-11 21:00:08.105111+00:00", 
    "title": "compute node update available resources should always update updated_at", 
    "comments": [
        {
            "content": "It seems that compute_node_update() (or any DB API call that does an update) when there's no differences in data... doesn't result in updated_at updated on the DB server.\n\nThe scheduler's host_manager tries to cache capacity changes in between resource tracker updates on the compute side.  It's possible that under failure scenarios that this cache is updated to use a resource that is never committed on the compute side.  If the compute node sits for a while with no changes, the scheduler has an out-of-sync view of the compute node.\n\nBy forcing the periodic task that syncs resources in the compute manager to ALWAYS update updated_at (even if there's no changes), this will invalidate the scheduler's (possibly bad) cache.", 
            "date_created": "2013-03-11 21:00:08.105111+00:00", 
            "author": "https://api.launchpad.net/1.0/~cbehrens"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/24118", 
            "date_created": "2013-03-11 21:05:14.384225+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/24118\nCommitted: http://github.com/openstack/nova/commit/f398b9e195cda582bad57396b097dec274384c07\nSubmitter: Jenkins\nBranch:    master\n\ncommit f398b9e195cda582bad57396b097dec274384c07\nAuthor: Chris Behrens <email address hidden>\nDate:   Mon Mar 11 14:02:30 2013 -0700\n\n    Force resource updates to update updated_at\n    \n    When there's no changes in resources, compute_node_update (and other\n    DB update calls) won't modify 'updated_at'.\n    \n    'updated_at' is what is used to invalidate the cache in the scheduler's\n    host_manager.  Because of a race with the compute manager, the scheduler\n    could be out of sync with the compute_nodes table but have a newer time\n    on its cache.\n    \n    By always updating 'updated_at' on resource updates, the periodic task\n    will be sure to invalidate any bad cache the scheduler has.\n    \n    Fixes bug 1153778\n    \n    Change-Id: I19b51a5b84f472cd0f4de6460a4edb540cc62da2\n", 
            "date_created": "2013-03-12 18:50:26.645757+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/33853\nCommitted: http://github.com/openstack/nova/commit/0ed62fb7affbda4a701c2175e95aa6f92038604c\nSubmitter: Jenkins\nBranch:    master\n\ncommit 0ed62fb7affbda4a701c2175e95aa6f92038604c\nAuthor: Peter Feiner <email address hidden>\nDate:   Wed Jun 19 21:14:43 2013 +0000\n\n    db.compute_node_update: ignore values['update_at']\n    \n    When individual instances are updated (e.g., during spawn and\n    terminate), ResourceTracker (in nova.compute.resource_tracker)  calls\n    compute_node_update with values=self.compute_node. Since\n    self.compute_node is an instance of ComputeNode that was retrieved\n    from the database, it has updated_at set. Since updated_at is in\n    values, sqlalchemy doesn't automatically change the record's\n    updated_at column (see\n    nova.openstack.common.db.sqlalchemy.models.TimestampMixin). Moreover,\n    since updated_at is set to the last value's updated_at, updated_at\n    effectively doesn't change until values without updated_at are sent,\n    which only happens during the periodic task that calls\n    ResourceTracker.update_available_resources.\n    \n    Nova-scheduler relies on ComputeNode.updated_at to keep its model of\n    available resources up-to-date. In particular, nova-scheduler doesn't\n    play a role in instance termination, so it doesn't account for freed\n    resources until ComputeNode.updated_at changes. Thus, between\n    nova-compute's periodic calls to\n    ResourceTracker.update_available_resources, nova-scheduler's model of\n    available resources monotonically decreases. If, for example, a node\n    has resources for 10 instances, and you manage to boot 10, terminate\n    10, then attempt to boot another before the end of the period,\n    nova-scheduler won't schedule the new instance on the vacant node.\n    \n    Fixes bug #1194900.\n    \n    Note that f398b9e195cda582bad57396b097dec274384c07 fixed a separate\n    issue (bug #1153778) related to ComputeNode.update_at being stale.\n    \n    Change-Id: Ifd1e56edfd811241816970715071876857de80d3\n", 
            "date_created": "2013-06-28 18:52:25.738014+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "related bug 1194900", 
            "date_created": "2013-12-10 22:41:38.329468+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }
    ]
}