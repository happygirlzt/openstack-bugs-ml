{
    "status": "Fix Released", 
    "last_updated": "2011-04-15 08:37:51.335645+00:00", 
    "description": "We should only be verbose if we're requested to be verbose :)", 
    "tags": [], 
    "importance": "Low", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/725349", 
    "owner": "https://api.launchpad.net/1.0/~klmitch", 
    "id": 725349, 
    "index": 5008, 
    "created": "2011-02-25 23:55:19.276632+00:00", 
    "title": "NovaLogger.exception() should not dump a stack trace unless --verbose is specified", 
    "comments": [
        {
            "content": "We should only be verbose if we're requested to be verbose :)", 
            "date_created": "2011-02-25 23:55:19.276632+00:00", 
            "author": "https://api.launchpad.net/1.0/~klmitch"
        }, 
        {
            "content": "This is probably low priority or wishlist, but it's still a nice little task for me to pick off :)", 
            "date_created": "2011-02-26 00:05:46.900067+00:00", 
            "author": "https://api.launchpad.net/1.0/~klmitch"
        }, 
        {
            "content": "Suggestion:\n\nYou can probably just modify handle_exception in log.py\n\nVish\n\nOn Feb 25, 2011, at 4:05 PM, Kevin L. Mitchell wrote:\n\n> This is probably low priority or wishlist, but it's still a nice little\n> task for me to pick off :)\n> \n> ** Changed in: nova\n>     Assignee: (unassigned) => Kevin L. Mitchell (klmitch)\n> \n> -- \n> You received this bug notification because you are a member of Nova Bug\n> Team, which is subscribed to OpenStack Compute (nova).\n> https://bugs.launchpad.net/bugs/725349\n> \n> Title:\n>  NovaLogger.exception() should not dump a stack trace unless --verbose\n>  is specified\n> \n> Status in OpenStack Compute (Nova):\n>  New\n> \n> Bug description:\n>  We should only be verbose if we're requested to be verbose :)\n\n", 
            "date_created": "2011-02-26 00:21:47+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "2011/2/26 Kevin L. Mitchell <email address hidden>:\n> We should only be verbose if we're requested to be verbose :)\n\nA stack trace doesn't sound like debug info to me. It sounds like\nsomething I'd output with LOG.error, so this would never get filtered.\n\nDo you have an example of a stack trace you feel is just noise that\nshould be filtered out?\n\n-- \nSoren Hansen \u00a0 \u00a0 \u00a0 \u00a0| http://linux2go.dk/\nUbuntu Developer \u00a0 \u00a0| http://www.ubuntu.com/\nOpenStack Developer | http://www.openstack.org/\n", 
            "date_created": "2011-03-01 20:21:01+00:00", 
            "author": "https://api.launchpad.net/1.0/~soren"
        }, 
        {
            "content": "A stack trace is debugging information, pure and simple.  Users (e.g., Nova admins) as a rule don't have the tools or knowledge to interpret the stack trace.  Now, for most exceptions, obviously, the thing to do is email the stack trace to the developers.  However, there are some exceptions which are not errors the developers can do anything about--things like not being able to reach the database server, for instance, which I can't figure out a way to do without violating abstraction boundaries.  In those cases, the stack traces are noise for *both* developers *and* users.\n\nThe idea here is that, in the normal case where a user has set up Nova, the log files contain only the actual exception information, minus stack traces.  That exception information can be useful to the user (\"Hmmm, can't reach my database server, I wonder why?\").  If they run across an actual Nova bug, on the other hand, they re-start the appropriate Nova service with --verbose, replicate the bug, then attach the stack trace.\n\nThis idea/bug, by the way, came out of a conversation vishy and I had regarding stack traces in the case that the AMQP server could not be reached.  In that case, it was easy to intercept the exception without violating abstraction boundaries (in fact, the exception was already being caught and the connection was being retried), but it was almost impossible to determine, from the log, what was happening because of the noise from the stack traces.  I made the same point to him (\"stack traces are for developers!\"), and he made a comment to the effect that perhaps we could suppress stack traces unless --verbose was specified.  As it turns out, this was the only way I could see to fix a similar noise issue related to the database server being unreachable.", 
            "date_created": "2011-03-07 18:09:35.378562+00:00", 
            "author": "https://api.launchpad.net/1.0/~klmitch"
        }, 
        {
            "content": "2011/3/7 Kevin L. Mitchell <email address hidden>:\n> The idea here is that, in the normal case where a user has set up\n> Nova, the log files contain only the actual exception information,\n> minus stack traces. \u00a0That exception information can be useful to the\n> user (\"Hmmm, can't reach my database server, I wonder why?\"). \u00a0If they\n> run across an actual Nova bug, on the other hand, they re-start the\n> appropriate Nova service with --verbose, replicate the bug, then\n> attach the stack trace.\n\nIf all you get in the log file is \"An exception occurred\" or perhaps \"A\nKeyError exception occurred\", I seriously doubt you'll be able to guess\nwhat triggered it so that you can reproduce it. Even with the stack\ntrace, it can be hard enough.\n\nCan you give me an example of a stack trace that you feel should be\nremoved and what exactly you'd log instead?\n\nI actually think it's extremely useful to be able to leave out --verbose\nto avoid the debug information when everything is working fine, but\nstill get the stack trace if something actually goes wrong.\n\n-- \nSoren Hansen \u00a0 \u00a0 \u00a0 \u00a0| http://linux2go.dk/\nUbuntu Developer \u00a0 \u00a0| http://www.ubuntu.com/\nOpenStack Developer | http://www.openstack.org/\n", 
            "date_created": "2011-03-07 22:08:58+00:00", 
            "author": "https://api.launchpad.net/1.0/~soren"
        }, 
        {
            "content": "On Mon, 2011-03-07 at 22:08 +0000, Soren Hansen wrote:\n> If all you get in the log file is \"An exception occurred\" or perhaps \"A\n> KeyError exception occurred\", I seriously doubt you'll be able to guess\n> what triggered it so that you can reproduce it. Even with the stack\n> trace, it can be hard enough.\n\nI never said you only get \"An exception occurred\".  The exception is\nstill printed out in its entirety; the only thing that's omitted is all\nthe lines that begin with \"TRACE:\" (or whatever you've configured).  In\nfact, the exception information ends up being printed twice,\ncurrently--once as part of the ERROR message, then again at the end of\nthe TRACE, and its rendered identically in both places.\n\n> Can you give me an example of a stack trace that you feel should be\n> removed and what exactly you'd log instead?\n\nSee bug 715620.  I cannot find a way to catch that exception without\neither violating an abstraction boundary (trying to catch the specific\nDB exception which itself isn't very specific) or casting far too wide a\nnet (catching a whole bunch of exceptions, some of which indicate\nconfiguration problems for which a trace is noise, and some of which\ncould indicate software errors, for which a trace might be useful).  My\npatch corrects the issue, in that it prints out the exception message;\nif the SQL connection can't be reached, that is easy to see.\n\n> I actually think it's extremely useful to be able to leave out --verbose\n> to avoid the debug information when everything is working fine, but\n> still get the stack trace if something actually goes wrong.\n\nTo my mind, stack traces *are* debug information.  We could add\n--stacktraces/--nostacktraces, I suppose, but it would have to default\nto being off...\n-- \nKevin L. Mitchell <email address hidden>\n", 
            "date_created": "2011-03-07 22:56:56+00:00", 
            "author": "https://api.launchpad.net/1.0/~klmitch"
        }
    ]
}