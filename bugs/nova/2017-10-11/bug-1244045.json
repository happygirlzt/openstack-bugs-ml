{
    "status": "Invalid", 
    "last_updated": "2013-10-24 20:59:28.392715+00:00", 
    "description": "Currently, the resource tracker get the free memory from virt driver.\n\nIn libvirt environment, if the below hypervisor is not Xen, it will use  memory summary of 'MemFree:', 'Buffers:' and Cached:'\" for calculation. However, this is not correct.\n\nI'd give an example below, the environment is a devstack environment, with host has 8G RAM. Ubuntu 12.04 host with swap disabled (enable swap should not impact this).\n\n1) Create two flavor, test with 4G memory, and mtest with 2G memory.\n\n2) Create 3 instance, 2 for test flavor, 1 for mtest flavor. The 3 instance can be created successfully.\n\n3) In each guest, execute followed program, which is mainly allocate memory and populate it.\n#include <stdlib.h>\n\nint main() {\n\u00a0\u00a0\u00a0\u00a0int *p;\n\u00a0\u00a0\u00a0\u00a0while(1) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int inc=1024*1024*sizeof(char);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0p=(int*) calloc(1,inc);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if(!p) break;\n\u00a0\u00a0\u00a0\u00a0}\n}\n\n4) After sometime, in my test environment, two guest has been killed because of host OOM.\n\nThis is sure to not be good. I don't know why this problem is not reported before.\n\nThe reason for this issue is, the KVM allocate guest memory as a progressive method:\na) when guest started, qemu will malloc() for the virtual address ranges for the guest.\nb) When guest access the memory, the memory will be populated as needed.\n\nThus when we create instance, there is not much memory access thus from host point of view, still a lot of memory existed. However, once guest begin access the memory as in step 3), host will out of memory.\n\nThanks\n--jyh", 
    "tags": [], 
    "importance": "Undecided", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1244045", 
    "owner": "None", 
    "id": 1244045, 
    "index": 4226, 
    "created": "2013-10-24 05:07:07.507630+00:00", 
    "title": "Memory calculation is not accurate for KVM hypervisor ", 
    "comments": [
        {
            "content": "Currently, the resource tracker get the free memory from virt driver. \n\nIn libvirt environment, if the below hypervisor is not Xen, it will use  memory summary of 'MemFree:', 'Buffers:' and Cached:'\" for calculation. However, this is not correct.\n\nI'd give an example below, the environment is a devstack environment, with host has 8G RAM. Ubuntu 12.04 host with swap disabled (enable swap should not impact this).\n\n1) Create two flavor, test with 4G memory, and mtest with 2G memory.\n\n2) Create 3 instance, 2 for test flavor, 1 for mtest flavor. The 3 instance can be created successfully.\n\n3) In each guest, execute followed program, which is mainly allocate memory and populate it.\n#include <stdlib.h>\n\nint main() {\n    int *p;\n    while(1) {\n        int inc=1024*1024*sizeof(char);\n        p=(int*) calloc(1,inc);\n        if(!p) break;\n    }\n}\n\n4) After sometime, in my test environment, two guest has been killed because of host OOM.\n\nThis is sure to not be true. I don't know why this problem is not reported before.\n\nThe reason for this issue is, the KVM allocate guest memory as a progressive method:\na) when guest started, qemu will malloc() for the virtual address ranges for the guest.\nb) When guest access the memory, the memory will be populated as needed.\n\nThus when we create instance, there is not much memory access thus from host point of view, still a lot of memory existed. However, once guest begin access the memory as in step 3), host will out of memory.\n\nThanks\n--jyh", 
            "date_created": "2013-10-24 05:07:07.507630+00:00", 
            "author": "https://api.launchpad.net/1.0/~yunhong-jiang"
        }
    ]
}