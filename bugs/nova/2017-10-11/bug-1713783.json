{
    "status": "Fix Released", 
    "last_updated": "2017-09-25 14:27:45.415359+00:00", 
    "description": "Description\n===========\nIn case of a failed evacuation attempt the status of the migration is 'accepted' instead of 'failed' so when source compute is recovered the compute manager tries to delete the instance from the source host. However a secondary fault prevents deleting the allocation in placement so the actual deletion of the instance fails as well.\n\nSteps to reproduce\n==================\nThe following functional test reproduces the bug: https://review.openstack.org/#/c/498482/\nWhat it does: initiate evacuation when no valid host is available and evacuation fails, but nova manager still tries to delete the instance.\nLogs:\n\n\u00a0\u00a0\u00a0\u00a02017-08-29 19:11:15,751 ERROR [oslo_messaging.rpc.server] Exception during message handling\n\u00a0\u00a0\u00a0\u00a0NoValidHost: No valid host was found. There are not enough hosts available.\n\u00a0\u00a0\u00a0\u00a02017-08-29 19:11:16,103 INFO [nova.tests.functional.test_servers] Running periodic for compute1 (host1)\n\u00a0\u00a0\u00a0\u00a02017-08-29 19:11:16,115 INFO [nova.api.openstack.placement.requestlog] 127.0.0.1 \"GET /placement/resource_providers/4e8e23ff-0c52-4cf7-8356-d9fa88536316/aggregates\" status: 200 len: 18 microversion: 1.1\n\u00a0\u00a0\u00a0\u00a02017-08-29 19:11:16,120 INFO [nova.api.openstack.placement.requestlog] 127.0.0.1 \"GET /placement/resource_providers/4e8e23ff-0c52-4cf7-8356-d9fa88536316/inventories\" status: 200 len: 401 microversion: 1.0\n\u00a0\u00a0\u00a0\u00a02017-08-29 19:11:16,131 INFO [nova.api.openstack.placement.requestlog] 127.0.0.1 \"GET /placement/resource_providers/4e8e23ff-0c52-4cf7-8356-d9fa88536316/allocations\" status: 200 len: 152 microversion: 1.0\n\u00a0\u00a0\u00a0\u00a02017-08-29 19:11:16,138 INFO [nova.compute.resource_tracker] Final resource view: name=host1 phys_ram=8192MB used_ram=1024MB phys_disk=1028GB used_disk=1GB total_vcpus=10 used_vcpus=1 pci_stats=[]\n\u00a0\u00a0\u00a0\u00a02017-08-29 19:11:16,146 INFO [nova.api.openstack.placement.requestlog] 127.0.0.1 \"GET /placement/resource_providers/4e8e23ff-0c52-4cf7-8356-d9fa88536316/aggregates\" status: 200 len: 18 microversion: 1.1\n\u00a0\u00a0\u00a0\u00a02017-08-29 19:11:16,151 INFO [nova.api.openstack.placement.requestlog] 127.0.0.1 \"GET /placement/resource_providers/4e8e23ff-0c52-4cf7-8356-d9fa88536316/inventories\" status: 200 len: 401 microversion: 1.0\n\u00a0\u00a0\u00a0\u00a02017-08-29 19:11:16,152 INFO [nova.tests.functional.test_servers] Running periodic for compute2 (host2)\n\u00a0\u00a0\u00a0\u00a02017-08-29 19:11:16,163 INFO [nova.api.openstack.placement.requestlog] 127.0.0.1 \"GET /placement/resource_providers/531b1ce8-def1-455d-95b3-4140665d956f/aggregates\" status: 200 len: 18 microversion: 1.1\n\u00a0\u00a0\u00a0\u00a02017-08-29 19:11:16,168 INFO [nova.api.openstack.placement.requestlog] 127.0.0.1 \"GET /placement/resource_providers/531b1ce8-def1-455d-95b3-4140665d956f/inventories\" status: 200 len: 401 microversion: 1.0\n\u00a0\u00a0\u00a0\u00a02017-08-29 19:11:16,176 INFO [nova.api.openstack.placement.requestlog] 127.0.0.1 \"GET /placement/resource_providers/531b1ce8-def1-455d-95b3-4140665d956f/allocations\" status: 200 len: 54 microversion: 1.0\n\u00a0\u00a0\u00a0\u00a02017-08-29 19:11:16,184 INFO [nova.compute.resource_tracker] Final resource view: name=host2 phys_ram=8192MB used_ram=512MB phys_disk=1028GB used_disk=0GB total_vcpus=10 used_vcpus=0 pci_stats=[]\n\u00a0\u00a0\u00a0\u00a02017-08-29 19:11:16,192 INFO [nova.api.openstack.placement.requestlog] 127.0.0.1 \"GET /placement/resource_providers/531b1ce8-def1-455d-95b3-4140665d956f/aggregates\" status: 200 len: 18 microversion: 1.1\n\u00a0\u00a0\u00a0\u00a02017-08-29 19:11:16,197 INFO [nova.api.openstack.placement.requestlog] 127.0.0.1 \"GET /placement/resource_providers/531b1ce8-def1-455d-95b3-4140665d956f/inventories\" status: 200 len: 401 microversion: 1.0\n\u00a0\u00a0\u00a0\u00a02017-08-29 19:11:16,198 INFO [nova.tests.functional.test_servers] Finished with periodics\n\u00a0\u00a0\u00a0\u00a02017-08-29 19:11:16,255 INFO [nova.api.openstack.requestlog] 127.0.0.1 \"GET /v2.1/6f70656e737461636b20342065766572/servers/5058200c-478e-4449-88c1-906fdd572662\" status: 200 len: 1875 microversion: 2.53 time: 0.056198\n\u00a0\u00a0\u00a0\u00a02017-08-29 19:11:16,262 INFO [nova.api.openstack.requestlog] 127.0.0.1 \"GET /v2.1/6f70656e737461636b20342065766572/os-migrations\" status: 200 len: 373 microversion: 2.53 time: 0.004618\n\u00a0\u00a0\u00a0\u00a02017-08-29 19:11:16,280 INFO [nova.api.openstack.requestlog] 127.0.0.1 \"PUT /v2.1/6f70656e737461636b20342065766572/os-services/c269bc74-4720-4de4-a6e5-889080b892a0\" status: 200 len: 245 microversion: 2.53 time: 0.016442\n\u00a0\u00a0\u00a0\u00a02017-08-29 19:11:16,281 INFO [nova.service] Starting compute node (version 16.0.0)\n\u00a0\u00a0\u00a0\u00a02017-08-29 19:11:16,296 INFO [nova.compute.manager] Deleting instance as it has been evacuated from this host", 
    "tags": [
        "evacuate", 
        "in-stable-pike", 
        "placement", 
        "security"
    ], 
    "importance": "High", 
    "heat": 8, 
    "link": "https://bugs.launchpad.net/nova/+bug/1713783", 
    "owner": "https://api.launchpad.net/1.0/~elod-illes", 
    "id": 1713783, 
    "index": 2139, 
    "created": "2017-08-29 17:17:15.506661+00:00", 
    "title": "After failed evacuation the recovered source compute tries to delete the instance", 
    "comments": [
        {
            "content": "Description\n===========\nIn case of a failed evacuation attempt the status of the migration is 'accepted' instead of 'failed' so the manager tries to delete the instance.\n\n\nSteps to reproduce\n==================\nThe following functional test reproduces the bug: https://review.openstack.org/#/c/498482/\nWhat it does: initiate evacuation when no valid host is available and evacuation fails, but nova manager still tries to delete the instance.\nLogs:\n\n    2017-08-29 19:11:15,751 ERROR [oslo_messaging.rpc.server] Exception during message handling\n    NoValidHost: No valid host was found. There are not enough hosts available.\n    2017-08-29 19:11:16,103 INFO [nova.tests.functional.test_servers] Running periodic for compute1 (host1)\n    2017-08-29 19:11:16,115 INFO [nova.api.openstack.placement.requestlog] 127.0.0.1 \"GET /placement/resource_providers/4e8e23ff-0c52-4cf7-8356-d9fa88536316/aggregates\" status: 200 len: 18 microversion: 1.1\n    2017-08-29 19:11:16,120 INFO [nova.api.openstack.placement.requestlog] 127.0.0.1 \"GET /placement/resource_providers/4e8e23ff-0c52-4cf7-8356-d9fa88536316/inventories\" status: 200 len: 401 microversion: 1.0\n    2017-08-29 19:11:16,131 INFO [nova.api.openstack.placement.requestlog] 127.0.0.1 \"GET /placement/resource_providers/4e8e23ff-0c52-4cf7-8356-d9fa88536316/allocations\" status: 200 len: 152 microversion: 1.0\n    2017-08-29 19:11:16,138 INFO [nova.compute.resource_tracker] Final resource view: name=host1 phys_ram=8192MB used_ram=1024MB phys_disk=1028GB used_disk=1GB total_vcpus=10 used_vcpus=1 pci_stats=[]\n    2017-08-29 19:11:16,146 INFO [nova.api.openstack.placement.requestlog] 127.0.0.1 \"GET /placement/resource_providers/4e8e23ff-0c52-4cf7-8356-d9fa88536316/aggregates\" status: 200 len: 18 microversion: 1.1\n    2017-08-29 19:11:16,151 INFO [nova.api.openstack.placement.requestlog] 127.0.0.1 \"GET /placement/resource_providers/4e8e23ff-0c52-4cf7-8356-d9fa88536316/inventories\" status: 200 len: 401 microversion: 1.0\n    2017-08-29 19:11:16,152 INFO [nova.tests.functional.test_servers] Running periodic for compute2 (host2)\n    2017-08-29 19:11:16,163 INFO [nova.api.openstack.placement.requestlog] 127.0.0.1 \"GET /placement/resource_providers/531b1ce8-def1-455d-95b3-4140665d956f/aggregates\" status: 200 len: 18 microversion: 1.1\n    2017-08-29 19:11:16,168 INFO [nova.api.openstack.placement.requestlog] 127.0.0.1 \"GET /placement/resource_providers/531b1ce8-def1-455d-95b3-4140665d956f/inventories\" status: 200 len: 401 microversion: 1.0\n    2017-08-29 19:11:16,176 INFO [nova.api.openstack.placement.requestlog] 127.0.0.1 \"GET /placement/resource_providers/531b1ce8-def1-455d-95b3-4140665d956f/allocations\" status: 200 len: 54 microversion: 1.0\n    2017-08-29 19:11:16,184 INFO [nova.compute.resource_tracker] Final resource view: name=host2 phys_ram=8192MB used_ram=512MB phys_disk=1028GB used_disk=0GB total_vcpus=10 used_vcpus=0 pci_stats=[]\n    2017-08-29 19:11:16,192 INFO [nova.api.openstack.placement.requestlog] 127.0.0.1 \"GET /placement/resource_providers/531b1ce8-def1-455d-95b3-4140665d956f/aggregates\" status: 200 len: 18 microversion: 1.1\n    2017-08-29 19:11:16,197 INFO [nova.api.openstack.placement.requestlog] 127.0.0.1 \"GET /placement/resource_providers/531b1ce8-def1-455d-95b3-4140665d956f/inventories\" status: 200 len: 401 microversion: 1.0\n    2017-08-29 19:11:16,198 INFO [nova.tests.functional.test_servers] Finished with periodics\n    2017-08-29 19:11:16,255 INFO [nova.api.openstack.requestlog] 127.0.0.1 \"GET /v2.1/6f70656e737461636b20342065766572/servers/5058200c-478e-4449-88c1-906fdd572662\" status: 200 len: 1875 microversion: 2.53 time: 0.056198\n    2017-08-29 19:11:16,262 INFO [nova.api.openstack.requestlog] 127.0.0.1 \"GET /v2.1/6f70656e737461636b20342065766572/os-migrations\" status: 200 len: 373 microversion: 2.53 time: 0.004618\n    2017-08-29 19:11:16,280 INFO [nova.api.openstack.requestlog] 127.0.0.1 \"PUT /v2.1/6f70656e737461636b20342065766572/os-services/c269bc74-4720-4de4-a6e5-889080b892a0\" status: 200 len: 245 microversion: 2.53 time: 0.016442\n    2017-08-29 19:11:16,281 INFO [nova.service] Starting compute node (version 16.0.0)\n    2017-08-29 19:11:16,296 INFO [nova.compute.manager] Deleting instance as it has been evacuated from this host", 
            "date_created": "2017-08-29 17:17:15.506661+00:00", 
            "author": "https://api.launchpad.net/1.0/~elod-illes"
        }, 
        {
            "content": "A regression test was pushed for this bug https://review.openstack.org/#/c/498482/. (It seems that the automatic linking doesn't work in later patch sets)", 
            "date_created": "2017-08-31 10:24:47.618133+00:00", 
            "author": "https://api.launchpad.net/1.0/~balazs-gibizer"
        }, 
        {
            "content": "Somewhere in the evacuate cleanup flow on the source host once it comes back up, we should be comparing local instances and their instance.host to the current host and if they are the same, we shouldn't consider them evacuated. I don't see that happening anywhere though.", 
            "date_created": "2017-08-31 12:33:14.921558+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "https://review.openstack.org/#/c/491808/ could be a related recent regression, but I'm not sure yet.", 
            "date_created": "2017-08-31 12:33:40.608336+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "I'm also not sure why the _destroy_evacuated_instances method in the ComputeManager is including 'accepted' migrations, since that is set in the API when the migration record is created and doesn't mean the migration is done.\n\nLooking at the functional recreate patch https://review.openstack.org/#/c/498482/, one way this could happen is that conductor fails to find a host and the migration record is never set to failed or error. It still seems odd that we don't filter the instance.host != self.host in the compute _destroy_evacuated_instances method.", 
            "date_created": "2017-08-31 12:44:09.169034+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "It looks like the _destroy_evacuated_instances method in the compute manager has always filtered migrations on the 'accepted' status since originally this code was just meant to cleanup local resources once an evacuation from the source host has started, which is fine. The problem is with removing the source node allocations if the evacuation failed, but if it failed in the conductor, we can fix that here:\n\nhttps://review.openstack.org/#/c/499237/\n\nIf it failed in the destination compute service, the migration status should be set to 'failed' and the migration filter in _destroy_evacuated_instances would filter it out.", 
            "date_created": "2017-08-31 13:09:37.298932+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "We should backport this as it actually leads to deleting things in the source node...", 
            "date_created": "2017-08-31 13:10:31.717949+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "I've marked this as a potential security issue. If conductor fails to find a host for the evacuation, the migration record status is left in 'accepted' state and the compute service on the source node, if brought back up, will delete the guest from the source node because of this method pulling in 'accepted' state migration records:\n\nhttps://github.com/openstack/nova/blob/16.0.0.0rc2/nova/compute/manager.py#L624\n\nThe guest is destroyed here:\n\nhttps://github.com/openstack/nova/blob/16.0.0.0rc2/nova/compute/manager.py#L668\n\nAnd this code goes back to at least Newton.", 
            "date_created": "2017-08-31 13:14:05.860943+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "We could maybe argue that if the source node is down, the guest is already down, but it's at least not deleted.\n\nAlso note that by default, evacuate is an admin-only operation, but is configurable via policy.", 
            "date_created": "2017-08-31 13:15:48.774004+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "I'm really not clear why this is a security issue.\n\nWe're talking about evacuation, which is an admin action.\n\nAnd the potential issue is the delete of a guest incorrectly.\n\nRegular users can't trigger this (unless the admin gave them pretty broad privs, which have way other security issues). They aren't getting access to sensitive information. The worst case is a loss of information. Which in a cloud environment is not super unexpected. ", 
            "date_created": "2017-08-31 13:17:46.785777+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "I tend to agree with Sean, admin action based security issue are usually classed as type C1 (Not a vulnerability, just a bug with (some) security implications) according to VMT's taxonomy.\n\nI've subscribed nova-coresec to double check the impact.", 
            "date_created": "2017-08-31 14:51:23.977605+00:00", 
            "author": "https://api.launchpad.net/1.0/~tristan-cacqueray"
        }, 
        {
            "content": "OK after talking with a few people we can mark this as public again.", 
            "date_created": "2017-08-31 18:31:48.169692+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Agreeing with Tristan et al, and adding the \"security\" bug tag to indicate it's a hardening opportunity (C1).", 
            "date_created": "2017-08-31 19:04:14.675541+00:00", 
            "author": "https://api.launchpad.net/1.0/~fungi"
        }, 
        {
            "content": "Related fix proposed to branch: master\nReview: https://review.openstack.org/500057", 
            "date_created": "2017-09-01 13:47:20.414197+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/500057\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=5687c170ea003aafa2720fb00af9d84836bb41df\nSubmitter: Jenkins\nBranch:    master\n\ncommit 5687c170ea003aafa2720fb00af9d84836bb41df\nAuthor: El\u0151d Ill\u00e9s <email address hidden>\nDate:   Fri Sep 1 15:36:20 2017 +0200\n\n    Functional test for regression bug #1713783\n    \n    Add functional test for evacuation, when no valid host available.\n    Migration should end up in 'error' state.\n    \n    Change-Id: I1adc20f2a5261e6906a18b9aee5cd2c8ecf0cf4d\n    Related-bug: #1713783\n", 
            "date_created": "2017-09-01 16:45:09.615960+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Related fix proposed to branch: master\nReview: https://review.openstack.org/500144", 
            "date_created": "2017-09-01 17:58:46.040129+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Related fix proposed to branch: stable/pike\nReview: https://review.openstack.org/504943", 
            "date_created": "2017-09-18 13:37:45.430434+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/499237\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=a8ebf5f1aac080854704e27146e8c98b053c6224\nSubmitter: Jenkins\nBranch:    master\n\ncommit a8ebf5f1aac080854704e27146e8c98b053c6224\nAuthor: El\u0151d Ill\u00e9s <email address hidden>\nDate:   Wed Aug 30 16:54:36 2017 +0200\n\n    Set error state after failed evacuation\n    \n    When evacuation fails with NoValidHost, the migration status remains\n    'accepted' instead of 'error'. This causes problem in case the compute\n    service starts up again and looks for evacuations with status 'accepted',\n    as it then removes the local instances for those evacuations even though\n    the instance was never actually evacuated to another host.\n    \n    Change-Id: I06d78c744fa75ae5f34c5cfa76bc3c9460767b84\n    Closes-Bug: #1713783\n", 
            "date_created": "2017-09-18 14:50:56.062211+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: stable/pike\nReview: https://review.openstack.org/504979", 
            "date_created": "2017-09-19 00:14:18.265207+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/504943\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=e87d9f51abea0b1c97628ef02435157da4b334ec\nSubmitter: Jenkins\nBranch:    stable/pike\n\ncommit e87d9f51abea0b1c97628ef02435157da4b334ec\nAuthor: El\u0151d Ill\u00e9s <email address hidden>\nDate:   Fri Sep 1 15:36:20 2017 +0200\n\n    Functional test for regression bug #1713783\n    \n    Add functional test for evacuation, when no valid host available.\n    Migration should end up in 'error' state.\n    \n    Change-Id: I1adc20f2a5261e6906a18b9aee5cd2c8ecf0cf4d\n    Related-bug: #1713783\n    (cherry picked from commit 5687c170ea003aafa2720fb00af9d84836bb41df)\n", 
            "date_created": "2017-09-19 02:58:54.240517+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Related fix proposed to branch: stable/ocata\nReview: https://review.openstack.org/505160", 
            "date_created": "2017-09-19 10:40:23.072841+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/504979\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=a3f286f43d866cd343d26d9bafadecab1c225e4b\nSubmitter: Jenkins\nBranch:    stable/pike\n\ncommit a3f286f43d866cd343d26d9bafadecab1c225e4b\nAuthor: El\u0151d Ill\u00e9s <email address hidden>\nDate:   Wed Aug 30 16:54:36 2017 +0200\n\n    Set error state after failed evacuation\n    \n    When evacuation fails with NoValidHost, the migration status remains\n    'accepted' instead of 'error'. This causes problem in case the compute\n    service starts up again and looks for evacuations with status 'accepted',\n    as it then removes the local instances for those evacuations even though\n    the instance was never actually evacuated to another host.\n    \n    Change-Id: I06d78c744fa75ae5f34c5cfa76bc3c9460767b84\n    Closes-Bug: #1713783\n    (cherry picked from commit a8ebf5f1aac080854704e27146e8c98b053c6224)\n", 
            "date_created": "2017-09-19 16:03:17.408028+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/500144\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=aec81e7d98c1ca082abd157dab5cc83b5bedfd89\nSubmitter: Jenkins\nBranch:    master\n\ncommit aec81e7d98c1ca082abd157dab5cc83b5bedfd89\nAuthor: Matt Riedemann <email address hidden>\nDate:   Fri Sep 1 13:56:38 2017 -0400\n\n    Update docs for _destroy_evacuated_instances\n    \n    The docstring on this method no longer reflects reality,\n    and hasn't since we started filtering on migration records\n    starting back in Liberty. This change updates the docstring\n    for what the method actually does now, and also includes a\n    comment about why we include 'accepted' but not yet complete\n    migrations when looking for things to remove from this source\n    node.\n    \n    Change-Id: Ia0c67aeffe41e133de9dee5080be9c5ec1739aa6\n    Related-Bug: #1713783\n", 
            "date_created": "2017-09-20 14:55:28.692474+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/nova 16.0.1 release.", 
            "date_created": "2017-09-25 14:27:43.786583+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}