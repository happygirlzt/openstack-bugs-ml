{
    "status": "New", 
    "last_updated": "2017-09-26 01:46:18.354703+00:00", 
    "description": "I have setup a fresh HA deployment of OpenStack Pike on Ubuntu 16.04. I recognized in the logs that Nova fails during vm creation with the following exception:\n\n2017-09-11 09:31:28.909 5604 ERROR nova.api.openstack.identity [req-6efab9e1-78f5-4e85-8247-686ff4f3568c dddfba8e02f746799a6408a523e6cd25 ed2d2efd86dd40e7a45491d8502318d3 - default default] Unable to contact keystone to verify project_id: SSLError: SSL exception connecting to https://os-cloud.mycompany.com:5000/v3/projects/ed2d2efd86dd40e7a45491d8502318d3: (\"bad handshake: Error([('SSL routines', 'ssl3_get_server_certificate', 'certificate verify failed')],)\",)\n2017-09-11 09:31:28.909 5604 ERROR nova.api.openstack.identity Traceback (most recent call last):\n2017-09-11 09:31:28.909 5604 ERROR nova.api.openstack.identity   File \"/usr/lib/python2.7/dist-packages/nova/api/openstack/identity.py\", line 42, in verify_project_id\n2017-09-11 09:31:28.909 5604 ERROR nova.api.openstack.identity     raise_exc=False)\n2017-09-11 09:31:28.909 5604 ERROR nova.api.openstack.identity   File \"/usr/lib/python2.7/dist-packages/keystoneauth1/session.py\", line 845, in get\n2017-09-11 09:31:28.909 5604 ERROR nova.api.openstack.identity     return self.request(url, 'GET', **kwargs)\n2017-09-11 09:31:28.909 5604 ERROR nova.api.openstack.identity   File \"/usr/lib/python2.7/dist-packages/positional/__init__.py\", line 101, in inner\n2017-09-11 09:31:28.909 5604 ERROR nova.api.openstack.identity     return wrapped(*args, **kwargs)\n2017-09-11 09:31:28.909 5604 ERROR nova.api.openstack.identity   File \"/usr/lib/python2.7/dist-packages/keystoneauth1/session.py\", line 703, in request\n2017-09-11 09:31:28.909 5604 ERROR nova.api.openstack.identity     resp = send(**kwargs)\n2017-09-11 09:31:28.909 5604 ERROR nova.api.openstack.identity   File \"/usr/lib/python2.7/dist-packages/keystoneauth1/session.py\", line 765, in _send_request\n2017-09-11 09:31:28.909 5604 ERROR nova.api.openstack.identity     raise exceptions.SSLError(msg)\n2017-09-11 09:31:28.909 5604 ERROR nova.api.openstack.identity SSLError: SSL exception connecting to https://os-cloud.mycompany.com:5000/v3/projects/ed2d2efd86dd40e7a45491d8502318d3: (\"bad handshake: Error([('SSL routines', 'ssl3_get_server_certificate', 'certificate verify failed')],)\",)\n2017-09-11 09:31:28.909 5604 ERROR nova.api.openstack.identity\n\nKeystone's public endpoint should only visible to external clients. All internal OpenStack services should use the internalURL for authentication purposes. I think my configuration is correct. The \"auth_url\" point to Keystone's internal URL, whereas \"auth_uri\" points to Keystone's public endpoint. I want to avoid https based communication for my internal cloud services.\n\n$ openstack endpoint list | grep keystone\n| 00a22bfee72141ddadacd0e357161075 | RegionOne | keystone     | identity        | True    | internal  | http://os-identity.mycompany.com:5000/v3                        |\n| 7178e534cb4e4c5e9a67066ff3e9c433 | RegionOne | keystone     | identity        | True    | public    | https://os-cloud.mycompany.com:5000/v3                          |\n| f5ed3bba70274d7fa03f2ceaab96c3c9 | RegionOne | keystone     | identity        | True    | admin     | http://os-identity.mycompany.com:35357/v3                       |\n\n################\nnova.conf\n################\n...\n[keystone_authtoken]\nauth_type = password\nauth_uri = http://os-cloud.mycompany.com:5000\nauth_url = http://os-identity:35357\nmemcached_servers = os-memcache:11211\npassword = novapass\nproject_domain_name = default\nproject_name = service\nuser_domain_name = default\nusername = nova\n...\n\nCan someone please have a look?", 
    "tags": [], 
    "importance": "Undecided", 
    "heat": 10, 
    "link": "https://bugs.launchpad.net/nova/+bug/1716344", 
    "owner": "None", 
    "id": 1716344, 
    "index": 7030, 
    "created": "2017-09-11 08:40:40.951420+00:00", 
    "title": "Nova-API uses Keystone's public endpoint for project id verification", 
    "comments": [
        {
            "content": "I have setup a fresh HA deployment of OpenStack Pike on Ubuntu 16.04. I recognized in the logs that Nova sometimes fails during vm creation with the following exception:\n\n2017-09-11 09:31:28.909 5604 ERROR nova.api.openstack.identity [req-6efab9e1-78f5-4e85-8247-686ff4f3568c dddfba8e02f746799a6408a523e6cd25 ed2d2efd86dd40e7a45491d8502318d3 - default default] Unable to contact keystone to verify project_id: SSLError: SSL exception connecting to https://os-cloud.materna.com:5000/v3/projects/ed2d2efd86dd40e7a45491d8502318d3: (\"bad handshake: Error([('SSL routines', 'ssl3_get_server_certificate', 'certificate verify failed')],)\",)\n2017-09-11 09:31:28.909 5604 ERROR nova.api.openstack.identity Traceback (most recent call last):\n2017-09-11 09:31:28.909 5604 ERROR nova.api.openstack.identity   File \"/usr/lib/python2.7/dist-packages/nova/api/openstack/identity.py\", line 42, in verify_project_id\n2017-09-11 09:31:28.909 5604 ERROR nova.api.openstack.identity     raise_exc=False)\n2017-09-11 09:31:28.909 5604 ERROR nova.api.openstack.identity   File \"/usr/lib/python2.7/dist-packages/keystoneauth1/session.py\", line 845, in get\n2017-09-11 09:31:28.909 5604 ERROR nova.api.openstack.identity     return self.request(url, 'GET', **kwargs)\n2017-09-11 09:31:28.909 5604 ERROR nova.api.openstack.identity   File \"/usr/lib/python2.7/dist-packages/positional/__init__.py\", line 101, in inner\n2017-09-11 09:31:28.909 5604 ERROR nova.api.openstack.identity     return wrapped(*args, **kwargs)\n2017-09-11 09:31:28.909 5604 ERROR nova.api.openstack.identity   File \"/usr/lib/python2.7/dist-packages/keystoneauth1/session.py\", line 703, in request\n2017-09-11 09:31:28.909 5604 ERROR nova.api.openstack.identity     resp = send(**kwargs)\n2017-09-11 09:31:28.909 5604 ERROR nova.api.openstack.identity   File \"/usr/lib/python2.7/dist-packages/keystoneauth1/session.py\", line 765, in _send_request\n2017-09-11 09:31:28.909 5604 ERROR nova.api.openstack.identity     raise exceptions.SSLError(msg)\n2017-09-11 09:31:28.909 5604 ERROR nova.api.openstack.identity SSLError: SSL exception connecting to https://os-cloud.materna.com:5000/v3/projects/ed2d2efd86dd40e7a45491d8502318d3: (\"bad handshake: Error([('SSL routines', 'ssl3_get_server_certificate', 'certificate verify failed')],)\",)\n2017-09-11 09:31:28.909 5604 ERROR nova.api.openstack.identity \n\nKeystone's public endpoint should only visible to external clients. All internal OpenStack services should use the internalURL for authentication purposes. I think my configuration is correct. The \"auth_url\" point to Keystone's internal URL, whereas \"auth_uri\" points to Keystone's public endpoint. The strange thing is, that sometimes after a service restart, Nova uses the Keystone's internal URL and sometimes the Keystone's public URL. I want to avoid https based communication for the internal cloud services.\n\n$ openstack endpoint list | grep keystone\n| 00a22bfee72141ddadacd0e357161075 | RegionOne | keystone     | identity        | True    | internal  | http://os-identity.materna.com:5000/v3                        |\n| 7178e534cb4e4c5e9a67066ff3e9c433 | RegionOne | keystone     | identity        | True    | public    | https://os-cloud.materna.com:5000/v3                          |\n| f5ed3bba70274d7fa03f2ceaab96c3c9 | RegionOne | keystone     | identity        | True    | admin     | http://os-identity.materna.com:35357/v3                       |\n\n################\nnova.conf\n################\n...\n[keystone_authtoken]\nauth_type = password\nauth_uri = http://os-cloud.materna.com:5000\nauth_url = http://os-identity:35357\nmemcached_servers = os-memcache:11211\npassword = novapass\nproject_domain_name = default\nproject_name = service\nuser_domain_name = default\nusername = nova\n...\n\nUsing the option \"insecure = True\" is a workaround to avoid that Nova sometimes fails when the service uses Keystone's public https endpoint.\n\nCan someone please have a look?", 
            "date_created": "2017-09-11 08:40:40.951420+00:00", 
            "author": "https://api.launchpad.net/1.0/~cfiehe"
        }, 
        {
            "content": "It took some time to narrow down the problem. The issue was introduced with the Pike release, where project id verification for flavor access and quota modification got added.\n\nThe problem is caused by class \"nova/api/openstack/identity.py\" (line 37-42):\n...\nresp = sess.get('/projects/%s' % project_id,\n                endpoint_filter={\n                    'service_type': 'identity',\n                    'version': (3, 0)\n                },\n                raise_exc=False)\n...\nKeystone's endpoint is retrieved from the service catalog without any configuration option which interface to use. The session calls the method \"get_endpoint(...)\" of the authentication plugin \"_ContextAuthPlugin\" provided by \"nova/context.py\" which forwards the call to the method \"url_for\" of \"keystoneauth/keystoneauth1/access/service_catalog.py\" where the default value \"public\" for the \"interface\" parameter gets applied.\n\nTo solve this, we must add a configuration option and tell nova which interface to use for looking up the \"identity\" service type from the service catalog.\n\nIs there really no other way possible to retrieve the endpoint of the identity service?", 
            "date_created": "2017-09-13 08:21:30.261502+00:00", 
            "author": "https://api.launchpad.net/1.0/~cfiehe"
        }, 
        {
            "content": "With an additional dependency to \"keystoneclient\", we are able to get ride of the problem. This requires a small code modification of the class \"nova/api/openstack/identity.py\":\n\nfrom keystoneauth1 import session\nfrom keystoneclient.v3 import client\nfrom keystoneclient import exceptions as ks_exc\nfrom oslo_log import log as logging\nimport webob\n\nfrom nova.i18n import _\n\nLOG = logging.getLogger(__name__)\n\n\ndef verify_project_id(context, project_id):\n    \"\"\"verify that a project_id exists.\n\n    This attempts to verify that a project id exists. If it does not,\n    an HTTPBadRequest is emitted.\n\n    \"\"\"\n    auth = context.get_auth_plugin()\n    sess = session.Session(auth=auth)\n    keystone = client.Client(session=sess)\n    try:\n        project = keystone.projects.get(project_id)\n    except ks_exc.ClientException as e:\n        if e.http_status == 404:\n            raise webob.exc.HTTPBadRequest(\n                explanation=_(\"Project ID %s is not a valid project.\") %\n                project_id)\n        elif e.http_status == 403:\n            # we don't have enough permission to verify this, so default\n            # to \"it's ok\".\n            LOG.info(\n                \"Insufficient permissions for user %(user)s to verify \"\n                \"existence of project_id %(pid)s\",\n                {\"user\": context.user_id, \"pid\": project_id})\n        else:\n            LOG.warning(\n                \"Unexpected response from keystone trying to \"\n                \"verify project_id %(pid)s - resp: %(code)s %(content)s\",\n                {\"pid\": project_id,\n                 \"code\": resp.status_code,\n                 \"content\": resp.content})\n            # realize we did something wrong, but move on with a warning\n\nAny comments?\n", 
            "date_created": "2017-09-13 10:18:01.744097+00:00", 
            "author": "https://api.launchpad.net/1.0/~cfiehe"
        }, 
        {
            "content": "is this duplicate to  https://bugs.launchpad.net/nova/+bug/1704798 ?\n", 
            "date_created": "2017-09-26 01:46:17.145603+00:00", 
            "author": "https://api.launchpad.net/1.0/~jichenjc"
        }
    ]
}