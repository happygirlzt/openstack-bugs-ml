{
    "status": "Won't Fix", 
    "last_updated": "2016-04-12 11:15:01.359642+00:00", 
    "description": "While running a script which:\n\n1) creates a project\n2) creates a user in that project\n3) creates a flavor\n4) tweaks some nova and neutron quotas for that project\n5) switches to that project\n6) creates an image\n7) tweaks some security group rules\n8) creates a network/subnet/router tuple\n9) creates a port\n10) creates a floating IP with that port id\nand finally\n11) nova boots with that port, image (by name) and flavor (again by name)\n\nonce one gets above 1000 iterations, the nova boot will start to fail from time to time with messages like:\n\nERROR (CommandError): No flavor with a name or ID of 'uberplay1053' exists.\n\nIt isn't every nova boot past the 1000th flavor:\n\nERROR (CommandError): No flavor with a name or ID of 'uberplay1053' exists.\nERROR (CommandError): No flavor with a name or ID of 'uberplay1055' exists.\nERROR (CommandError): No flavor with a name or ID of 'uberplay1062' exists.\nERROR (CommandError): No flavor with a name or ID of 'uberplay1064' exists.\n...\nERROR (CommandError): No flavor with a name or ID of 'uberplay1312' exists.\nERROR (CommandError): No flavor with a name or ID of 'uberplay1316' exists.\nERROR (CommandError): No flavor with a name or ID of 'uberplay1319' exists.\nERROR (CommandError): No flavor with a name or ID of 'uberplay1321' exists.\n\nThe \"holes\" in that sequence are good - those instances booted and were accessible just fine.  The flavors themselves are there - they can be seen via nova flavor-show <UUID>.\n\nThis is with Liberty.  There were 6 flavors already defined before the script was started.  \"uberplay1053\" was the first failure, counting in that sequence started at 0.  \n\nI will (attempt to) attach the script shortly.\n\n~/rjones2$ nova --version\n2.30.3\n\nNeutron networking with OVS.  Instances using local storage not Cinder.  Glance using Swift for image storage.", 
    "tags": [
        "api", 
        "flavors", 
        "stress", 
        "testing"
    ], 
    "importance": "Undecided", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1567114", 
    "owner": "None", 
    "id": 1567114, 
    "index": 6143, 
    "created": "2016-04-06 22:42:33.022961+00:00", 
    "title": "nova boot specifying flavor by name fails intermittently past 1000 flavors", 
    "comments": [
        {
            "content": "While running a script which:\n\n1) creates a project\n2) creates a user in that project\n3) creates a flavor\n4) tweaks some nova and neutron quotas for that project\n5) switches to that project\n6) creates an image\n7) tweaks some security group rules\n8) creates a network/subnet/router tuple\n9) creates a port\n10) creates a floating IP with that port id\nand finally\n11) nova boots with that port, image (by name) and flavor (again by name)\n\nonce one gets above 1000 iterations, the nova boot will start to fail from time to time with messages like:\n\nERROR (CommandError): No flavor with a name or ID of 'uberplay1053' exists.\n\nIt isn't every nova boot past the 1000th flavor:\n\nERROR (CommandError): No flavor with a name or ID of 'uberplay1053' exists.\nERROR (CommandError): No flavor with a name or ID of 'uberplay1055' exists.\nERROR (CommandError): No flavor with a name or ID of 'uberplay1062' exists.\nERROR (CommandError): No flavor with a name or ID of 'uberplay1064' exists.\n...\nERROR (CommandError): No flavor with a name or ID of 'uberplay1312' exists.\nERROR (CommandError): No flavor with a name or ID of 'uberplay1316' exists.\nERROR (CommandError): No flavor with a name or ID of 'uberplay1319' exists.\nERROR (CommandError): No flavor with a name or ID of 'uberplay1321' exists.\n\nThe \"holes\" in that sequence are good - those instances booted and were accessible just fine.  The flavors themselves are there - they can be seen via nova flavor-show <UUID>.\n\nThis is with Liberty.  There were 6 flavors already defined before the script was started.  \"uberplay1053\" was the first failure, counting in that sequence started at 0.  \n\nI will (attempt to) attach the script shortly.\n\n~/rjones2$ nova --version\n2.30.3\n\nNeutron networking with OVS.  Instances using local storage not Cinder.  Glance using Swift for image storage.", 
            "date_created": "2016-04-06 22:42:33.022961+00:00", 
            "author": "https://api.launchpad.net/1.0/~perfgeek"
        }, 
        {
            "content": "", 
            "date_created": "2016-04-06 22:44:59.443677+00:00", 
            "author": "https://api.launchpad.net/1.0/~perfgeek"
        }, 
        {
            "content": "The nova version appears to be 12.0.3.", 
            "date_created": "2016-04-06 23:41:50.425104+00:00", 
            "author": "https://api.launchpad.net/1.0/~perfgeek"
        }, 
        {
            "content": "Hmm, are there any errors in the nova-api logs?", 
            "date_created": "2016-04-07 00:39:19.451002+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "To be clear, when you're getting the flavor not found errors, are those boot requests passing or failing? When calling nova boot with the --flavor the CLI looks up the flavor by name and if it can't find it it should fail the nova boot command.", 
            "date_created": "2016-04-07 00:58:09.397955+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "I think what might be happening is CONF.osapi_max_limit defaults to 1000 and that's the default limit when listing flavors.  When you just pass the flavor name, novaclient is trying to lookup the flavor, which in this case is doing an index request to the nova API. What I'm not sure about is if it's hitting a limit and not actually using the filter, i.e. if there are already 1000 flavors in the database and you're searching for a flavor by name after those 1000, is it returning the first 1000 and not actually applying the name filter?\n\nWhen you run this, can you add the --debug option to the nova boot command since that should show the flavor request/response details and that would be helpful when it fails.", 
            "date_created": "2016-04-07 01:08:13.293279+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "BTW, I think saving the id returned from nova flavor-create and then using that would probably get around this since then we wouldn't have to do the lookup by name, you might see if that resolves the issue. It's not a fix for the bug, but it'd be interesting to know if it fixes it.", 
            "date_created": "2016-04-07 01:09:07.201041+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Yup, the problem is the name isn't passed to the server for filtering, you can recreate this with just a simple devstack setup and the default flavors. In this case I'm just doing:\n\nnova --debug flavor-show m1.tiny\n\nHere are the details:\n\n1. Make a request to the server to get the flavor by the name, this fails with a 404 since the API expects the flavor id.\n\nDEBUG (session:248) REQ: curl -g -i -X GET http://9.5.124.163:8774/v2.1/a1c6a5d891d1420abec0227f651b74c9/flavors/m1.tiny -H \"User-Agent: python-novaclient\" -H \"Accept: application/json\" -H \"X-OpenStack-Nova-API-Version: 2.25\" -H \"X-Auth-Token: {SHA1}e2866846f66ec299de60b3ebf17d931e7b9b9579\"\nDEBUG (connectionpool:387) \"GET /v2.1/a1c6a5d891d1420abec0227f651b74c9/flavors/m1.tiny HTTP/1.1\" 404 80\nDEBUG (session:277) RESP: [404] Content-Length: 80 X-Compute-Request-Id: req-537e7042-8626-485d-afb3-deb172b370d0 Vary: X-OpenStack-Nova-API-Version Connection: keep-alive X-Openstack-Nova-Api-Version: 2.25 Date: Thu, 07 Apr 2016 01:10:24 GMT Content-Type: application/json; charset=UTF-8\nRESP BODY: {\"itemNotFound\": {\"message\": \"Flavor m1.tiny could not be found.\", \"code\": 404}}\n\n2. Now do a listing of the flavors, this is just passing is_public=None, it's not passing the name as a search filter. This returns all of the flavors.\n\nDEBUG (session:248) REQ: curl -g -i -X GET http://9.5.124.163:8774/v2.1/a1c6a5d891d1420abec0227f651b74c9/flavors?is_public=None -H \"User-Agent: python-novaclient\" -H \"Accept: application/json\" -H \"X-OpenStack-Nova-API-Version: 2.25\" -H \"X-Auth-Token: {SHA1}e2866846f66ec299de60b3ebf17d931e7b9b9579\"\nDEBUG (connectionpool:387) \"GET /v2.1/a1c6a5d891d1420abec0227f651b74c9/flavors?is_public=None HTTP/1.1\" 200 1720\nDEBUG (session:277) RESP: [200] Content-Length: 1720 X-Compute-Request-Id: req-5ea197c2-1441-4e42-8c9f-3d2b70fa1abe Vary: X-OpenStack-Nova-API-Version Connection: keep-alive X-Openstack-Nova-Api-Version: 2.25 Date: Thu, 07 Apr 2016 01:10:25 GMT Content-Type: application/json\nRESP BODY: {\"flavors\": [{\"id\": \"1\", \"links\": [{\"href\": \"http://9.5.124.163:8774/v2.1/a1c6a5d891d1420abec0227f651b74c9/flavors/1\", \"rel\": \"self\"}, {\"href\": \"http://9.5.124.163:8774/a1c6a5d891d1420abec0227f651b74c9/flavors/1\", \"rel\": \"bookmark\"}], \"name\": \"m1.tiny\"}, {\"id\": \"2\", \"links\": [{\"href\": \"http://9.5.124.163:8774/v2.1/a1c6a5d891d1420abec0227f651b74c9/flavors/2\", \"rel\": \"self\"}, {\"href\": \"http://9.5.124.163:8774/a1c6a5d891d1420abec0227f651b74c9/flavors/2\", \"rel\": \"bookmark\"}], \"name\": \"m1.small\"}, {\"id\": \"3\", \"links\": [{\"href\": \"http://9.5.124.163:8774/v2.1/a1c6a5d891d1420abec0227f651b74c9/flavors/3\", \"rel\": \"self\"}, {\"href\": \"http://9.5.124.163:8774/a1c6a5d891d1420abec0227f651b74c9/flavors/3\", \"rel\": \"bookmark\"}], \"name\": \"m1.medium\"}, {\"id\": \"4\", \"links\": [{\"href\": \"http://9.5.124.163:8774/v2.1/a1c6a5d891d1420abec0227f651b74c9/flavors/4\", \"rel\": \"self\"}, {\"href\": \"http://9.5.124.163:8774/a1c6a5d891d1420abec0227f651b74c9/flavors/4\", \"rel\": \"bookmark\"}], \"name\": \"m1.large\"}, {\"id\": \"42\", \"links\": [{\"href\": \"http://9.5.124.163:8774/v2.1/a1c6a5d891d1420abec0227f651b74c9/flavors/42\", \"rel\": \"self\"}, {\"href\": \"http://9.5.124.163:8774/a1c6a5d891d1420abec0227f651b74c9/flavors/42\", \"rel\": \"bookmark\"}], \"name\": \"m1.nano\"}, {\"id\": \"5\", \"links\": [{\"href\": \"http://9.5.124.163:8774/v2.1/a1c6a5d891d1420abec0227f651b74c9/flavors/5\", \"rel\": \"self\"}, {\"href\": \"http://9.5.124.163:8774/a1c6a5d891d1420abec0227f651b74c9/flavors/5\", \"rel\": \"bookmark\"}], \"name\": \"m1.xlarge\"}, {\"id\": \"84\", \"links\": [{\"href\": \"http://9.5.124.163:8774/v2.1/a1c6a5d891d1420abec0227f651b74c9/flavors/84\", \"rel\": \"self\"}, {\"href\": \"http://9.5.124.163:8774/a1c6a5d891d1420abec0227f651b74c9/flavors/84\", \"rel\": \"bookmark\"}], \"name\": \"m1.micro\"}]}\n\n3. The novaclient code had the list of flavors and then matched the one with the 'name' attribute and value being 'm1.tiny' so it then used that one to get the id (1 in this case) to make the flavor-get request again, this time with the id which then gets the response back we were looking for and it displays the flavor.\n\nDEBUG (session:248) REQ: curl -g -i -X GET http://9.5.124.163:8774/v2.1/a1c6a5d891d1420abec0227f651b74c9/flavors/1 -H \"User-Agent: python-novaclient\" -H \"Accept: application/json\" -H \"X-OpenStack-Nova-API-Version: 2.25\" -H \"X-Auth-Token: {SHA1}e2866846f66ec299de60b3ebf17d931e7b9b9579\"\nDEBUG (connectionpool:387) \"GET /v2.1/a1c6a5d891d1420abec0227f651b74c9/flavors/1 HTTP/1.1\" 200 422\nDEBUG (session:277) RESP: [200] Content-Length: 422 X-Compute-Request-Id: req-446b0bbc-1f95-471f-821a-3c1fdc141b3b Vary: X-OpenStack-Nova-API-Version Connection: keep-alive X-Openstack-Nova-Api-Version: 2.25 Date: Thu, 07 Apr 2016 01:10:25 GMT Content-Type: application/json\nRESP BODY: {\"flavor\": {\"name\": \"m1.tiny\", \"links\": [{\"href\": \"http://9.5.124.163:8774/v2.1/a1c6a5d891d1420abec0227f651b74c9/flavors/1\", \"rel\": \"self\"}, {\"href\": \"http://9.5.124.163:8774/a1c6a5d891d1420abec0227f651b74c9/flavors/1\", \"rel\": \"bookmark\"}], \"ram\": 512, \"OS-FLV-DISABLED:disabled\": false, \"vcpus\": 1, \"swap\": \"\", \"os-flavor-access:is_public\": true, \"rxtx_factor\": 1.0, \"OS-FLV-EXT-DATA:ephemeral\": 0, \"disk\": 1, \"id\": \"1\"}}\n\n\n---\n\nSo the search filtering in novaclient is pretty broken when you're just searching by name. We only get lucky when there are <1000 records in the table we're searching on since we get the whole list back.  The CONF.osapi_max_limit is what's pushing this over the top in this stress test scenario and why it starts failing after 1000.", 
            "date_created": "2016-04-07 01:16:09.725318+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "This is the code in novaclient that is doing the filtering logic when listing resources:\n\nhttps://github.com/openstack/python-novaclient/blob/0634a38cdcb756199160aa1e476c8212c7145250/novaclient/base.py#L395", 
            "date_created": "2016-04-07 01:17:38.151688+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Dropping to medium severity since you can use the flavor id to get around the listing/filtering issue.", 
            "date_created": "2016-04-07 01:22:30.544157+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "It actually looks like this is a limitation in the flavors API in nova, you can't filter on name:\n\nhttps://github.com/openstack/nova/blob/347ebb20e3217c2f8abf261622ba420c9fd077bd/nova/api/openstack/compute/flavors.py#L78\n\nWe'd have to update the API to do this, and at least for this case it's probably not going to happen, since most deployments probably don't have 1000+ flavors to pick from.", 
            "date_created": "2016-04-07 01:45:19.083007+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "I'm going to say we're not going to fix this in the flavors API to filter by name. I don't honestly see a reason to support filtering 1000+ flavors by name which requires the API change (with a microversion) to do this properly, when you can just use the flavor id that was provided when creating the flavor to pass on the boot CLI.", 
            "date_created": "2016-04-07 01:48:14.858887+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "The boot requests themselves fail.\n\nAdmittedly, 1000 or more flavors seems unlikely, but then customers can want the damnedest things.  At this point I've not heard of one asking for it, the test I was running was as much seeking to stay ahead of the game as anything else.\n\nRelying on keeping track of the flavor's UUID is going to be brittle - particularly if as it seems one cannot successfully do a nova flavor-list for more than 1000 flavors.  Once one has lost track of that UUID, how can one regain it?  And there is something of an inconsistency within nova here because nova image-list deals with > 1000 automagically (*), and for nova list one has the --limit option these days to deal with > 1000 instances (well, at least as admin)\n\nWhat remains perplexing to me is that not all nova boot commands issued after the 1000th flavor was created were unsuccessful in looking up the flavor by name.\n\n*) And it would seem that nova boot was fine with looking up images > 1000 by name - unless the flavor lookup errors were masking what would have been a later image lookup failure.", 
            "date_created": "2016-04-07 16:49:41.446154+00:00", 
            "author": "https://api.launchpad.net/1.0/~perfgeek"
        }, 
        {
            "content": "As the use case is unlikely I am with Matt in thinking that it is probably not worth to get a new API version for this, what we could do is to add a new nova-manage command for getting the flavor details filtered by flavor-name?\n", 
            "date_created": "2016-04-12 11:15:00.651118+00:00", 
            "author": "https://api.launchpad.net/1.0/~andrea-rosa-m"
        }
    ]
}