{
    "status": "Fix Released", 
    "last_updated": "2016-02-25 03:13:05.846114+00:00", 
    "description": "Environment: Openstack Juno. (Same code in the master as well).\nPhysical machine doesn't have continuous blocks of cpu in online state.\nOnline pCPUs are: 4,8 and 12.\nvcpu pinning is enabled via the vcpu_pin_set attribute in /etc/nova/nova.conf\nvcpu_pin_set=\"4,8,12\"\nThe nova code in /nova/virt/libvirt/driver.py inside get_vcpu_total() is checking the length of available_ids from the nova.conf as:\n\nif available_ids[-1] >= total_pcpus:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0raise exception.Invalid(_(\"Invalid vcpu_pin_set config, \"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"out of hypervisor cpu range.\"))\n\navailable_ids in this case contains [4,8,12].\nThe total pcpus count given by libvirt is 3 (number of on-line pcpus).\nHence the above check fails since it determines the total available CPUs as 12.\n\nNova should not expect the online CPUs to be continuous numbers always.\nFiling a bug to address this.", 
    "tags": [
        "libvirt"
    ], 
    "importance": "Low", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1442546", 
    "owner": "https://api.launchpad.net/1.0/~sbiswas7", 
    "id": 1442546, 
    "index": 412, 
    "created": "2015-04-10 09:39:46.951012+00:00", 
    "title": "Nova compute should work for non-continous pCPUs with vcpu pinning enabled.", 
    "comments": [
        {
            "content": "Environment: Openstack Juno. (Same code in the master as well).\nPhysical machine doesn't have continuous blocks of cpu in online state. \nOnline pCPUs are: 4,8 and 12.\nvcpu pinning is enabled via the vcpu_pin_set attribute in /etc/nova/nova.conf\nvcpu_pin_set=\"4,8,12\"\nThe nova code in /nova/virt/libvirt/driver.py inside get_vcpu_total() is checking the length of available_ids from the nova.conf as:\n\nif available_ids[-1] >= total_pcpus:\n            raise exception.Invalid(_(\"Invalid vcpu_pin_set config, \"\n                                      \"out of hypervisor cpu range.\"))\n\navailable_ids in this case contains [4,8,12]. \nThe total pcpus count given by libvirt is 3 (number of on-line pcpus).\nHence the above check fails since it determines the total available CPUs as 12.\n\nThe available_ids[-1] can be replaced by len(available_ids) for this to work.\nNova should not expect the online CPUs to be continuous numbers always.\nFiling a bug to address this.", 
            "date_created": "2015-04-10 09:39:46.951012+00:00", 
            "author": "https://api.launchpad.net/1.0/~sbiswas7"
        }, 
        {
            "content": "Also figured out that the present check is like this:\n\nsorted(available_ids)[-1] >= total_pcpus\n\nThis allows us to detect the out of range pCPUs correctly. \nFor example if the range specified in the conf file is 0-16 and the total pcpus are only 10, then we would detect that as a invalid config. So the fix should be to retain this out of range behavior but the total_pcpus check needs to be improved.\nWorking on the same.", 
            "date_created": "2015-04-10 10:15:46.545436+00:00", 
            "author": "https://api.launchpad.net/1.0/~sbiswas7"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/173187", 
            "date_created": "2015-04-14 06:48:58.478767+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/173187\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=bead2f51f8ad651cc46f8436cb1b0c3f8a7c93a9\nSubmitter: Jenkins\nBranch:    master\n\ncommit bead2f51f8ad651cc46f8436cb1b0c3f8a7c93a9\nAuthor: Sudipta Biswas <email address hidden>\nDate:   Tue Apr 14 12:11:31 2015 +0530\n\n    libvirt: Allow discrete online pCPUs for pinning\n    \n    Currently, the check for cpu pinning is a little broad and\n    it doesn't allow pinning for discrete online pcpu sets if the\n    cpuset ID exceeds the total number of online pcpus.\n    \n    The fix is for NUMA topology enabled hosts, where the list of\n    online pcpus are obtained and compared with the list of IDs which\n    are requested as a part of cpu pinning. If the IDs form a subset\n    of the total online pcpus on the host, pinning is allowed.\n    If not, old behavior is retained.\n    \n    Change-Id: I8cbd938f99e1eae9eeaa3bb27f492c95734bbfab\n    Closes-Bug: #1442546\n", 
            "date_created": "2015-04-23 13:49:32.074685+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Removed the juno-backport-potential tag as well Juno is closed\nRemoved the kilo-backport-potential tag as this is a low priority bug that affected a narrow use case within the community and doesn't meet the stable criteria for \"Phase II\" support\n", 
            "date_created": "2016-02-25 03:13:05.208598+00:00", 
            "author": "https://api.launchpad.net/1.0/~o-tony"
        }
    ]
}