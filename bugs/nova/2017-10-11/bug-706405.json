{
    "status": "Fix Released", 
    "last_updated": "2011-04-15 08:36:10.898732+00:00", 
    "description": "SQLAlchemy doesn't appear to be re-establishing the connection to the database automatically if the connection drops/times-out for whatever reason.\n\nThis causes a MySQL Gone Away error to be generated.\n\nhttp://paste.openstack.org/show/545/", 
    "tags": [
        "away", 
        "database", 
        "gone", 
        "mysql"
    ], 
    "importance": "Medium", 
    "heat": 8, 
    "link": "https://bugs.launchpad.net/nova/+bug/706405", 
    "owner": "https://api.launchpad.net/1.0/~rconradharris", 
    "id": 706405, 
    "index": 2251, 
    "created": "2011-01-22 20:51:02.448104+00:00", 
    "title": "MySQL Gone Away Generated", 
    "comments": [
        {
            "content": "SQLAlchemy doesn't appear to be re-establishing the connection to the database automatically if the connection drops/times-out for whatever reason.\n\nThis causes a MySQL Gone Away error to be generated.\n\nhttp://paste.openstack.org/show/545/", 
            "date_created": "2011-01-22 20:51:02.448104+00:00", 
            "author": "https://api.launchpad.net/1.0/~rconradharris"
        }, 
        {
            "content": "Using pool_recycle was supposed to make sure we refresh the connection before MySQL expires it... but that does not cover MySQL connection drops.\n\nMaybe our general use of expire_on_commit=False inhibits proper connection recycling ?", 
            "date_created": "2011-01-24 16:21:52.419248+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "I also thought we had a fix for this, perhaps the db mingration merge caused a regression.\n\nVish\n\nOn Jan 24, 2011, at 8:21 AM, Thierry Carrez wrote:\n\n> Using pool_recycle was supposed to make sure we refresh the connection\n> before MySQL expires it... but that does not cover MySQL connection\n> drops.\n> \n> Maybe our general use of expire_on_commit=False inhibits proper\n> connection recycling ?\n> \n> -- \n> You received this bug notification because you are a member of Nova Bug\n> Team, which is subscribed to OpenStack Compute (nova).\n> https://bugs.launchpad.net/bugs/706405\n> \n> Title:\n>  MySQL Gone Away Generated\n> \n> Status in OpenStack Compute (Nova):\n>  New\n> \n> Bug description:\n>  SQLAlchemy doesn't appear to be re-establishing the connection to the\n>  database automatically if the connection drops/times-out for whatever\n>  reason.\n> \n>  This causes a MySQL Gone Away error to be generated.\n> \n>  http://paste.openstack.org/show/545/\n> \n> \n\n", 
            "date_created": "2011-01-24 18:04:45+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "Looks like we're getting this in our test lab as well.\n\n\nOn Jan 24, 2011, at 10:04 AM, Vish Ishaya wrote:\n\n> I also thought we had a fix for this, perhaps the db mingration merge\n> caused a regression.\n> \n> Vish\n> \n> On Jan 24, 2011, at 8:21 AM, Thierry Carrez wrote:\n> \n>> Using pool_recycle was supposed to make sure we refresh the connection\n>> before MySQL expires it... but that does not cover MySQL connection\n>> drops.\n>> \n>> Maybe our general use of expire_on_commit=False inhibits proper\n>> connection recycling ?\n>> \n>> -- \n>> You received this bug notification because you are a member of Nova Bug\n>> Team, which is subscribed to OpenStack Compute (nova).\n>> https://bugs.launchpad.net/bugs/706405\n>> \n>> Title:\n>> MySQL Gone Away Generated\n>> \n>> Status in OpenStack Compute (Nova):\n>> New\n>> \n>> Bug description:\n>> SQLAlchemy doesn't appear to be re-establishing the connection to the\n>> database automatically if the connection drops/times-out for whatever\n>> reason.\n>> \n>> This causes a MySQL Gone Away error to be generated.\n>> \n>> http://paste.openstack.org/show/545/\n>> \n>> \n> \n> -- \n> You received this bug notification because you are a member of Nova Bug\n> Team, which is subscribed to OpenStack Compute (nova).\n> https://bugs.launchpad.net/bugs/706405\n> \n> Title:\n>  MySQL Gone Away Generated\n> \n> Status in OpenStack Compute (Nova):\n>  New\n> \n> Bug description:\n>  SQLAlchemy doesn't appear to be re-establishing the connection to the\n>  database automatically if the connection drops/times-out for whatever\n>  reason.\n> \n>  This causes a MySQL Gone Away error to be generated.\n> \n>  http://paste.openstack.org/show/545/\n> \n> \n\n", 
            "date_created": "2011-01-24 18:21:56+00:00", 
            "author": "https://api.launchpad.net/1.0/~devcamcar"
        }, 
        {
            "content": "@Vish: we added pool_recycle to force connection recycling before MySQL timeouts unused connections. But here we are just talking about errors generated if for example you restart MySQL.\r\n\r\nIt does indeed generate \"MySQL Gone Away\" errors, but it also reestablishes connection as soon as the DB is available again, so setting importance to Medium.\r\n\r\nSomeone knowing SQLAlchemy better than I do should look into this. Apparently the way we use it prevents the pool mechanism from working correctly (connections are not returned to the pool afaict). We use autocommit=true, but also session.begin() which inhibits autocommit behavior (so maybe some session.commit() are missing).", 
            "date_created": "2011-01-25 14:01:12.868157+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "Apparently MySQL gone away does not actually cause a retry.  We can protect ourselves somewhat using the strategy here:\n\nhttp://<email address hidden>/msg15079.html\n\nI don't know the implications of having the server completely go down in this situation.\n\nWe can probably also catch the db errors in a wrapper (like i do here: https://code.launchpad.net/~vishvananda/nova/friendly-db) and retry a number of times, or automatically disable the service and keep trying to reconnect every x minutes.\n\nIt definitely isn't a trivial fix though, so this will probably have to happen in Cactus.\n\nVish\n\nOn Jan 25, 2011, at 6:01 AM, Thierry Carrez wrote:\n\n> @Vish: we added pool_recycle to force connection recycling before MySQL\n> timeouts unused connections. But here we are just talking about errors\n> generated if for example you restart MySQL.\n> \n> It does indeed generate \"MySQL Gone Away\" errors, but it also\n> reestablishes connection as soon as the DB is available again, so\n> setting importance to Medium.\n> \n> Someone knowing SQLAlchemy better than I do should look into this.\n> Apparently the way we use it prevents the pool mechanism from working\n> correctly (connections are not returned to the pool afaict). We use\n> autocommit=true, but also session.begin() which inhibits autocommit\n> behavior (so maybe some session.commit() are missing).\n> \n> ** Changed in: nova\n>   Importance: Undecided => Medium\n> \n> ** Changed in: nova\n>       Status: New => Confirmed\n> \n> -- \n> You received this bug notification because you are a member of Nova Bug\n> Team, which is subscribed to OpenStack Compute (nova).\n> https://bugs.launchpad.net/bugs/706405\n> \n> Title:\n>  MySQL Gone Away Generated\n> \n> Status in OpenStack Compute (Nova):\n>  Confirmed\n> \n> Bug description:\n>  SQLAlchemy doesn't appear to be re-establishing the connection to the\n>  database automatically if the connection drops/times-out for whatever\n>  reason.\n> \n>  This causes a MySQL Gone Away error to be generated.\n> \n>  http://paste.openstack.org/show/545/\n> \n> \n\n", 
            "date_created": "2011-01-25 18:23:18+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "Figured out what's going on here.\n\nOur flag which controls SQLAlchemy's pool_recycle feature, `sql_idle_timeout`, was defined as a string not an integer.\n\nSince integers always compare as less than strings (in Python), this makes the timeout in-effect infinite.", 
            "date_created": "2011-02-10 19:44:56.963591+00:00", 
            "author": "https://api.launchpad.net/1.0/~rconradharris"
        }
    ]
}