{
    "status": "Fix Released", 
    "last_updated": "2013-10-17 12:06:10.619193+00:00", 
    "description": "Bug in Nova \u2013 the code filters the result by tenant_id although neutron will also do so by itself. In Neutron, if the credentials are for an Admin, than the filter is elevated to return the lits of all networks which is extactly what we would like to get for Service VMs.\n\nOriginal Function:\nhttps://github.com/openstack/nova/blob/master/nova/network/neutronv2/api.py#L118\nProposed Fix:\n    def _get_available_networks(self, context, project_id,\n                                net_ids=None):\n        \"\"\"Return a network list available for the tenant.\n        The list contains networks owned by the tenant and public networks.\n        If net_ids specified, it returns all network that the user\n        Is eligible to see also filtered by networks with requested IDs only.\n        \"\"\"\n        neutron = neutronv2.get_client(context)\n \n        # If user has specified to attach an instance only to specific\n        # networks, add them to **search_opts\n        # This usually happens when creating a VM and specifying\n        # that it should connect to specific networks.\n        # In this case we rely on neutron to do the correct filtering by tenant\n        # if it is a non-admin tenant.\n        # If it is an admin-tenant, neutron will elevate and return all networks\n        # which then get filtered by net_ids\n        if net_ids:\n            search_opts = {'id': net_ids}\n            nets = neutron.list_networks(**search_opts).get('networks', [])\n        else:\n            # (1) Retrieve non-public network list owned by the tenant.\n            search_opts = {'shared': False, 'tenant_id': project_id}\n            nets = neutron.list_networks(**search_opts).get('networks', [])\n            # (2) Retrieve public network list.\n            search_opts = {'shared': True}\n            nets += neutron.list_networks(**search_opts).get('networks', [])\n \n        _ensure_requested_network_ordering(\n            lambda x: x['id'],\n            nets,\n            net_ids)\n \n        return nets", 
    "tags": [], 
    "importance": "Critical", 
    "heat": 8, 
    "link": "https://bugs.launchpad.net/nova/+bug/1221320", 
    "owner": "https://api.launchpad.net/1.0/~garyk", 
    "id": 1221320, 
    "index": 153, 
    "created": "2013-09-05 16:18:20.532659+00:00", 
    "title": "'Service VM' - _get_available_networks  does extra filtering", 
    "comments": [
        {
            "content": "Bug in Nova \u2013 the code filters the result by tenant_id although neutron will also do so by itself. In Neutron, if the credentials are for an Admin, than the filter is elevated to return the lits of all networks which is extactly what we would like to get for Service VMs.\n\nOriginal Function:\nhttps://github.com/openstack/nova/blob/master/nova/network/neutronv2/api.py#L118\nProposed Fix:\n    def _get_available_networks(self, context, project_id,\n                                net_ids=None):\n        \"\"\"Return a network list available for the tenant.\n        The list contains networks owned by the tenant and public networks.\n        If net_ids specified, it returns all network that the user\n        Is eligible to see also filtered by networks with requested IDs only.\n        \"\"\"\n        neutron = neutronv2.get_client(context)\n \n        # If user has specified to attach an instance only to specific\n        # networks, add them to **search_opts\n        # This usually happens when creating a VM and specifying\n        # that it should connect to specific networks.\n        # In this case we rely on neutron to do the correct filtering by tenant\n        # if it is a non-admin tenant.\n        # If it is an admin-tenant, neutron will elevate and return all networks\n        # which then get filtered by net_ids\n        if net_ids:\n            search_opts = {'id': net_ids}\n            nets = neutron.list_networks(**search_opts).get('networks', [])\n        else:\n            # (1) Retrieve non-public network list owned by the tenant.\n            search_opts = {'shared': False, 'tenant_id': project_id}\n            nets = neutron.list_networks(**search_opts).get('networks', [])\n            # (2) Retrieve public network list.\n            search_opts = {'shared': True}\n            nets += neutron.list_networks(**search_opts).get('networks', [])\n \n        _ensure_requested_network_ordering(\n            lambda x: x['id'],\n            nets,\n            net_ids)\n \n        return nets", 
            "date_created": "2013-09-05 16:18:20.532659+00:00", 
            "author": "https://api.launchpad.net/1.0/~avishayb"
        }, 
        {
            "content": "This bug is a \"show stopper\" for Radware LBaaS driver", 
            "date_created": "2013-09-09 10:48:10.332964+00:00", 
            "author": "https://api.launchpad.net/1.0/~avishayb"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/45691", 
            "date_created": "2013-09-09 14:24:31.623069+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/45691\nCommitted: http://github.com/openstack/nova/commit/8d985b826b459335ab89fef69c132470af066daf\nSubmitter: Jenkins\nBranch:    master\n\ncommit 8d985b826b459335ab89fef69c132470af066daf\nAuthor: Gary Kotton <email address hidden>\nDate:   Mon Sep 9 04:59:27 2013 -0700\n\n    Only return requested network ID's\n    \n    Only return the requested network ID's and not all of the\n    public networks. This will also include 'shared' networks.\n    \n    Fixes bug 1221320\n    \n    Change-Id: I21ba4586c6e431b0dd1a87a9e5e493fae1b08357\n", 
            "date_created": "2013-09-17 15:58:19.333398+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}