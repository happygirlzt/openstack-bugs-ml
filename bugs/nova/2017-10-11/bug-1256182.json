{
    "status": "Invalid", 
    "last_updated": "2014-09-18 23:35:58.519153+00:00", 
    "description": "test_associate_ip_to_server_without_passing_floating_ip and test_associate_nonexistant_floating_ip in tempest/api/compute/floating_ips/test_floating_ips_actions.py failed.\n\nThe openstack will return code 400 bad request when execute these cases, while the cases use not found(404) to do assertion:\n    @attr(type=['negative', 'gate'])\n    def test_associate_ip_to_server_without_passing_floating_ip(self):\n        # Negative test:Association of empty floating IP to specific server\n        # should raise NotFound exception\n        self.assertRaises(exceptions.NotFound,\n                          self.client.associate_floating_ip_to_server,\n                          '', self.server_id)\n\n----------------------------------------------------------------------\n_StringException: pythonlogging:'': {{{\n2013-11-28 09:11:15,651 Request: POST http://192.168.4.5:8774/v2/a3654af9cfbd4cde86aa963710054727/servers/1df5edf9-7376-4b58-9b79-c8f90415df8b/action\n2013-11-28 09:11:15,653 Request Headers: {'Content-Type': 'application/json', 'Accept': 'application/json', 'X-Auth-Token': '<Token omitted>'}\n2013-11-28 09:11:15,655 Request Body: {\"addFloatingIp\": {\"address\": \"\"}}\n2013-11-28 09:11:15,778 Response Status: 400\n2013-11-28 09:11:15,779 Nova request id: req-d1300fe2-b94f-41af-85ca-6038a2c18621\n2013-11-28 09:11:15,781 Response Headers: {'content-length': '96', 'date': 'Thu, 28 Nov 2013 15:11:15 GMT', 'content-type': 'application/json; charset=UTF-8', 'connection': 'close'}\n2013-11-28 09:11:15,782 Response Body: {\"badRequest\": {\"message\": \"NV-676D697 No nw_info cache associated with instance\", \"code\": 400}}\n}}}\n\nTraceback (most recent call last):\n  File \"/tmp/tempest/tempest/tempest/api/compute/floating_ips/test_floating_ips_actions.py\", line 182, in test_associate_ip_to_server_without_passing_floating_ip\n    '', self.server_id)\n  File \"/usr/lib/python2.6/site-packages/testtools/testcase.py\", line 394, in assertRaises\n    self.assertThat(our_callable, matcher)\n  File \"/usr/lib/python2.6/site-packages/testtools/testcase.py\", line 406, in assertThat\n    mismatch = matcher.match(matchee)\n  File \"/usr/lib/python2.6/site-packages/testtools/matchers/_exception.py\", line 99, in match\n    mismatch = self.exception_matcher.match(exc_info)\n  File \"/usr/lib/python2.6/site-packages/testtools/matchers/_higherorder.py\", line 61, in match\n    mismatch = matcher.match(matchee)\n  File \"/usr/lib/python2.6/site-packages/testtools/testcase.py\", line 386, in match\n    reraise(*matchee)\n  File \"/usr/lib/python2.6/site-packages/testtools/matchers/_exception.py\", line 92, in match\n    result = matchee()\n  File \"/usr/lib/python2.6/site-packages/testtools/testcase.py\", line 883, in __call__\n    return self._callable_object(*self._args, **self._kwargs)\n  File \"/tmp/tempest/tempest/tempest/services/compute/json/floating_ips_client.py\", line 75, in associate_floating_ip_to_server\n    resp, body = self.post(url, post_body, self.headers)\n  File \"/tmp/tempest/tempest/tempest/common/rest_client.py\", line 302, in post\n    return self.request('POST', url, headers, body)\n  File \"/tmp/tempest/tempest/tempest/common/rest_client.py\", line 436, in request\n    resp, resp_body)\n  File \"/tmp/tempest/tempest/tempest/common/rest_client.py\", line 486, in _error_checker\n    raise exceptions.BadRequest(resp_body)\nBadRequest: Bad request\nDetails: {u'badRequest': {u'message': u'NV-676D697 No nw_info cache associated with instance', u'code': 400}}\n\n\n\n@attr(type=['negative', 'gate'])\n    def test_dissociate_nonexistant_floating_ip(self):\n        # Negative test:Dissociation of a non existent floating IP should fail\n        # Dissociating non existent floating IP\n        self.assertRaises(exceptions.NotFound,\n                          self.client.disassociate_floating_ip_from_server,\n                          \"0.0.0.0\", self.server_id)\n\n----------------------------------------------------------------------\n_StringException: pythonlogging:'': {{{\n2013-11-28 09:11:16,037 Request: POST http://192.168.4.5:8774/v2/a3654af9cfbd4cde86aa963710054727/servers/1df5edf9-7376-4b58-9b79-c8f90415df8b/action\n2013-11-28 09:11:16,038 Request Headers: {'Content-Type': 'application/json', 'Accept': 'application/json', 'X-Auth-Token': '<Token omitted>'}\n2013-11-28 09:11:16,040 Request Body: {\"addFloatingIp\": {\"address\": \"0.0.0.0\"}}\n2013-11-28 09:11:16,147 Response Status: 400\n2013-11-28 09:11:16,149 Nova request id: req-96de6b94-bbb0-494e-9f4a-bbfeea9188e2\n2013-11-28 09:11:16,151 Response Headers: {'content-length': '96', 'date': 'Thu, 28 Nov 2013 15:11:16 GMT', 'content-type': 'application/json; charset=UTF-8', 'connection': 'close'}\n2013-11-28 09:11:16,152 Response Body: {\"badRequest\": {\"message\": \"NV-676D697 No nw_info cache associated with instance\", \"code\": 400}}\n}}}\n\nTraceback (most recent call last):\n  File \"/tmp/tempest/tempest/tempest/api/compute/floating_ips/test_floating_ips_actions.py\", line 134, in test_associate_nonexistant_floating_ip\n    \"0.0.0.0\", self.server_id)\n  File \"/usr/lib/python2.6/site-packages/testtools/testcase.py\", line 394, in assertRaises\n    self.assertThat(our_callable, matcher)\n  File \"/usr/lib/python2.6/site-packages/testtools/testcase.py\", line 406, in assertThat\n    mismatch = matcher.match(matchee)\n  File \"/usr/lib/python2.6/site-packages/testtools/matchers/_exception.py\", line 99, in match\n    mismatch = self.exception_matcher.match(exc_info)\n  File \"/usr/lib/python2.6/site-packages/testtools/matchers/_higherorder.py\", line 61, in match\n    mismatch = matcher.match(matchee)\n  File \"/usr/lib/python2.6/site-packages/testtools/testcase.py\", line 386, in match\n    reraise(*matchee)\n  File \"/usr/lib/python2.6/site-packages/testtools/matchers/_exception.py\", line 92, in match\n    result = matchee()\n  File \"/usr/lib/python2.6/site-packages/testtools/testcase.py\", line 883, in __call__\n    return self._callable_object(*self._args, **self._kwargs)\n  File \"/tmp/tempest/tempest/tempest/services/compute/json/floating_ips_client.py\", line 75, in associate_floating_ip_to_server\n    resp, body = self.post(url, post_body, self.headers)\n  File \"/tmp/tempest/tempest/tempest/common/rest_client.py\", line 302, in post\n    return self.request('POST', url, headers, body)\n  File \"/tmp/tempest/tempest/tempest/common/rest_client.py\", line 436, in request\n    resp, resp_body)\n  File \"/tmp/tempest/tempest/tempest/common/rest_client.py\", line 486, in _error_checker\n    raise exceptions.BadRequest(resp_body)\nBadRequest: Bad request\nDetails: {u'badRequest': {u'message': u'NV-676D697 No nw_info cache associated with instance', u'code': 400}}", 
    "tags": [
        "api", 
        "network", 
        "testing"
    ], 
    "importance": "Undecided", 
    "heat": 8, 
    "link": "https://bugs.launchpad.net/nova/+bug/1256182", 
    "owner": "None", 
    "id": 1256182, 
    "index": 4340, 
    "created": "2013-11-29 02:54:43.278529+00:00", 
    "title": "test_associate_ip_to_server_without_passing_floating_ip failed due to invalid assertion", 
    "comments": [
        {
            "content": "test_associate_ip_to_server_without_passing_floating_ip and test_associate_nonexistant_floating_ip in tempest/api/compute/floating_ips/test_floating_ips_actions.py failed.\n\nThe openstack will return code 400 bad request when execute these cases, while the cases use not found(404) to do assertion:\n    @attr(type=['negative', 'gate'])\n    def test_associate_ip_to_server_without_passing_floating_ip(self):\n        # Negative test:Association of empty floating IP to specific server\n        # should raise NotFound exception\n        self.assertRaises(exceptions.NotFound,\n                          self.client.associate_floating_ip_to_server,\n                          '', self.server_id)\n\n----------------------------------------------------------------------\n_StringException: pythonlogging:'': {{{\n2013-11-28 09:11:15,651 Request: POST http://192.168.4.5:8774/v2/a3654af9cfbd4cde86aa963710054727/servers/1df5edf9-7376-4b58-9b79-c8f90415df8b/action\n2013-11-28 09:11:15,653 Request Headers: {'Content-Type': 'application/json', 'Accept': 'application/json', 'X-Auth-Token': '<Token omitted>'}\n2013-11-28 09:11:15,655 Request Body: {\"addFloatingIp\": {\"address\": \"\"}}\n2013-11-28 09:11:15,778 Response Status: 400\n2013-11-28 09:11:15,779 Nova request id: req-d1300fe2-b94f-41af-85ca-6038a2c18621\n2013-11-28 09:11:15,781 Response Headers: {'content-length': '96', 'date': 'Thu, 28 Nov 2013 15:11:15 GMT', 'content-type': 'application/json; charset=UTF-8', 'connection': 'close'}\n2013-11-28 09:11:15,782 Response Body: {\"badRequest\": {\"message\": \"NV-676D697 No nw_info cache associated with instance\", \"code\": 400}}\n}}}\n\nTraceback (most recent call last):\n  File \"/tmp/tempest/tempest/tempest/api/compute/floating_ips/test_floating_ips_actions.py\", line 182, in test_associate_ip_to_server_without_passing_floating_ip\n    '', self.server_id)\n  File \"/usr/lib/python2.6/site-packages/testtools/testcase.py\", line 394, in assertRaises\n    self.assertThat(our_callable, matcher)\n  File \"/usr/lib/python2.6/site-packages/testtools/testcase.py\", line 406, in assertThat\n    mismatch = matcher.match(matchee)\n  File \"/usr/lib/python2.6/site-packages/testtools/matchers/_exception.py\", line 99, in match\n    mismatch = self.exception_matcher.match(exc_info)\n  File \"/usr/lib/python2.6/site-packages/testtools/matchers/_higherorder.py\", line 61, in match\n    mismatch = matcher.match(matchee)\n  File \"/usr/lib/python2.6/site-packages/testtools/testcase.py\", line 386, in match\n    reraise(*matchee)\n  File \"/usr/lib/python2.6/site-packages/testtools/matchers/_exception.py\", line 92, in match\n    result = matchee()\n  File \"/usr/lib/python2.6/site-packages/testtools/testcase.py\", line 883, in __call__\n    return self._callable_object(*self._args, **self._kwargs)\n  File \"/tmp/tempest/tempest/tempest/services/compute/json/floating_ips_client.py\", line 75, in associate_floating_ip_to_server\n    resp, body = self.post(url, post_body, self.headers)\n  File \"/tmp/tempest/tempest/tempest/common/rest_client.py\", line 302, in post\n    return self.request('POST', url, headers, body)\n  File \"/tmp/tempest/tempest/tempest/common/rest_client.py\", line 436, in request\n    resp, resp_body)\n  File \"/tmp/tempest/tempest/tempest/common/rest_client.py\", line 486, in _error_checker\n    raise exceptions.BadRequest(resp_body)\nBadRequest: Bad request\nDetails: {u'badRequest': {u'message': u'NV-676D697 No nw_info cache associated with instance', u'code': 400}}\n\n\n\n@attr(type=['negative', 'gate'])\n    def test_dissociate_nonexistant_floating_ip(self):\n        # Negative test:Dissociation of a non existent floating IP should fail\n        # Dissociating non existent floating IP\n        self.assertRaises(exceptions.NotFound,\n                          self.client.disassociate_floating_ip_from_server,\n                          \"0.0.0.0\", self.server_id)\n\n----------------------------------------------------------------------\n_StringException: pythonlogging:'': {{{\n2013-11-28 09:11:16,037 Request: POST http://192.168.4.5:8774/v2/a3654af9cfbd4cde86aa963710054727/servers/1df5edf9-7376-4b58-9b79-c8f90415df8b/action\n2013-11-28 09:11:16,038 Request Headers: {'Content-Type': 'application/json', 'Accept': 'application/json', 'X-Auth-Token': '<Token omitted>'}\n2013-11-28 09:11:16,040 Request Body: {\"addFloatingIp\": {\"address\": \"0.0.0.0\"}}\n2013-11-28 09:11:16,147 Response Status: 400\n2013-11-28 09:11:16,149 Nova request id: req-96de6b94-bbb0-494e-9f4a-bbfeea9188e2\n2013-11-28 09:11:16,151 Response Headers: {'content-length': '96', 'date': 'Thu, 28 Nov 2013 15:11:16 GMT', 'content-type': 'application/json; charset=UTF-8', 'connection': 'close'}\n2013-11-28 09:11:16,152 Response Body: {\"badRequest\": {\"message\": \"NV-676D697 No nw_info cache associated with instance\", \"code\": 400}}\n}}}\n\nTraceback (most recent call last):\n  File \"/tmp/tempest/tempest/tempest/api/compute/floating_ips/test_floating_ips_actions.py\", line 134, in test_associate_nonexistant_floating_ip\n    \"0.0.0.0\", self.server_id)\n  File \"/usr/lib/python2.6/site-packages/testtools/testcase.py\", line 394, in assertRaises\n    self.assertThat(our_callable, matcher)\n  File \"/usr/lib/python2.6/site-packages/testtools/testcase.py\", line 406, in assertThat\n    mismatch = matcher.match(matchee)\n  File \"/usr/lib/python2.6/site-packages/testtools/matchers/_exception.py\", line 99, in match\n    mismatch = self.exception_matcher.match(exc_info)\n  File \"/usr/lib/python2.6/site-packages/testtools/matchers/_higherorder.py\", line 61, in match\n    mismatch = matcher.match(matchee)\n  File \"/usr/lib/python2.6/site-packages/testtools/testcase.py\", line 386, in match\n    reraise(*matchee)\n  File \"/usr/lib/python2.6/site-packages/testtools/matchers/_exception.py\", line 92, in match\n    result = matchee()\n  File \"/usr/lib/python2.6/site-packages/testtools/testcase.py\", line 883, in __call__\n    return self._callable_object(*self._args, **self._kwargs)\n  File \"/tmp/tempest/tempest/tempest/services/compute/json/floating_ips_client.py\", line 75, in associate_floating_ip_to_server\n    resp, body = self.post(url, post_body, self.headers)\n  File \"/tmp/tempest/tempest/tempest/common/rest_client.py\", line 302, in post\n    return self.request('POST', url, headers, body)\n  File \"/tmp/tempest/tempest/tempest/common/rest_client.py\", line 436, in request\n    resp, resp_body)\n  File \"/tmp/tempest/tempest/tempest/common/rest_client.py\", line 486, in _error_checker\n    raise exceptions.BadRequest(resp_body)\nBadRequest: Bad request\nDetails: {u'badRequest': {u'message': u'NV-676D697 No nw_info cache associated with instance', u'code': 400}}", 
            "date_created": "2013-11-29 02:54:43.278529+00:00", 
            "author": "https://api.launchpad.net/1.0/~qhqiao"
        }, 
        {
            "content": "This actually seems like a nova bug", 
            "date_created": "2013-12-12 15:00:23.715050+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "So my guess here is nova-network raises a 404 but the neutronv2 API raises a 400.  Qiu Hua, I'm assuming you're using neutron, but which nova API?  V2 or V3?", 
            "date_created": "2014-01-27 21:39:31.632106+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Do you have the nova-compute and neutron-server logs when this fails?", 
            "date_created": "2014-01-27 21:47:36.734142+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Actually there is no v3 API for floating IPs, so this has to be v2 api for nova.  Looking at the nova-network and neutronv2 code, they both check for the floating IP on disassociate and handle/raise not found.\n\nIn the associate case, there is an explicit check for network info on the instance, which can result in \"No nw_info cache associated with instance\" here:\n\nhttps://github.com/openstack/nova/blob/master/nova/api/openstack/compute/contrib/floating_ips.py#L227\n\nIt'd be good to have the nova-api and nova-compute logs when this fails to confirm the traceback, can you provide those?", 
            "date_created": "2014-01-27 21:57:49.392302+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Yes Matt, you are right it used v2 API.\nCase test_associate_nonexistant_floating_ip passed on the latest build today, but I still can recreate the problem for test_associate_ip_to_server_without_passing_floating_ip.\nAttached the log.", 
            "date_created": "2014-01-28 05:52:13.124095+00:00", 
            "author": "https://api.launchpad.net/1.0/~qhqiao"
        }, 
        {
            "content": "long incomplete bug", 
            "date_created": "2014-09-18 23:35:56.613119+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }
    ]
}