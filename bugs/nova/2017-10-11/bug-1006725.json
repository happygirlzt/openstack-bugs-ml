{
    "status": "Invalid", 
    "last_updated": "2014-10-10 20:29:58.383005+00:00", 
    "description": "Our tempest tests that checks for 400 Bad Request return code fails with a ComputeFault instead.\n\nPass multi-byte character image name during Create Image\nActual Response Code: ComputeFault, 500 \nExpected Response Code: 400 Bad Request\n\n\nReturn an error if the server name has a multi-byte character ... FAIL\n\n======================================================================\nFAIL: Return an error if the server name has a multi-byte character\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/opt/stack/tempest/tests/test_images.py\", line 251, in test_create_image_specify_multibyte_character_server_name\n    self.fail(\"Should return 400 Bad Request if multi byte characters\"\nAssertionError: Should return 400 Bad Request if multi byte characters are used for image name\n-------------------- >> begin captured logging << --------------------\ntempest.config: INFO: Using tempest config file /opt/stack/tempest/etc/tempest.conf\ntempest.common.rest_client: ERROR: Request URL: http://10.2.3.164:8774/v2/1aeac1cfbfdd43c2845b2cb3a4f15790/images/24ceff93-1af3-41ab-802f-9fc4d8b90b69\ntempest.common.rest_client: ERROR: Request Body: None\ntempest.common.rest_client: ERROR: Response Headers: {'date': 'Thu, 31 May 2012 06:02:33 GMT', 'status': '404', 'content-length': '62', 'content-type': 'application/json; charset=UTF-8', 'x-compute-request-id': 'req-7a15d284-e934-47a1-87f4-7746e949c7a2'}\ntempest.common.rest_client: ERROR: Response Body: {\"itemNotFound\": {\"message\": \"Image not found.\", \"code\": 404}}\ntempest.common.rest_client: ERROR: Request URL: http://10.2.3.164:8774/v2/1aeac1cfbfdd43c2845b2cb3a4f15790/servers/ecb51dfb-493d-4ef8-9178-1adc3d96a04d/action\ntempest.common.rest_client: ERROR: Request Body: {\"createImage\": {\"name\": \"\\ufeff43802479847\"}}\ntempest.common.rest_client: ERROR: Response Headers: {'date': 'Thu, 31 May 2012 06:02:44 GMT', 'status': '500', 'content-length': '128', 'content-type': 'application/json; charset=UTF-8', 'x-compute-request-id': 'req-1a9505f5-4dfc-44e7-b04a-f8daec0f956e'}\ntempest.common.rest_client: ERROR: Response Body: {u'computeFault': {u'message': u'The server has either erred or is incapable of performing the requested operation.', u'code': 500}}\n--------------------- >> end captured logging << ---------------------", 
    "tags": [
        "ntt", 
        "tempest"
    ], 
    "importance": "High", 
    "heat": 12, 
    "link": "https://bugs.launchpad.net/nova/+bug/1006725", 
    "owner": "https://api.launchpad.net/1.0/~cyeoh-0", 
    "id": 1006725, 
    "index": 698, 
    "created": "2012-05-31 06:05:44.906019+00:00", 
    "title": "Nova allows creating an Image name with invalid utf8 (thus breaking tools further down the pipeline)", 
    "comments": [
        {
            "content": "Our tempest tests that checks for 400 Bad Request return code fails with a ComputeFault instead.\n\nPass multi-byte character image name during Create Image\nActual Response Code: ComputeFault, 500 \nExpected Response Code: 400 Bad Request\n\n\nReturn an error if the server name has a multi-byte character ... FAIL\n\n======================================================================\nFAIL: Return an error if the server name has a multi-byte character\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/opt/stack/tempest/tests/test_images.py\", line 251, in test_create_image_specify_multibyte_character_server_name\n    self.fail(\"Should return 400 Bad Request if multi byte characters\"\nAssertionError: Should return 400 Bad Request if multi byte characters are used for image name\n-------------------- >> begin captured logging << --------------------\ntempest.config: INFO: Using tempest config file /opt/stack/tempest/etc/tempest.conf\ntempest.common.rest_client: ERROR: Request URL: http://10.2.3.164:8774/v2/1aeac1cfbfdd43c2845b2cb3a4f15790/images/24ceff93-1af3-41ab-802f-9fc4d8b90b69\ntempest.common.rest_client: ERROR: Request Body: None\ntempest.common.rest_client: ERROR: Response Headers: {'date': 'Thu, 31 May 2012 06:02:33 GMT', 'status': '404', 'content-length': '62', 'content-type': 'application/json; charset=UTF-8', 'x-compute-request-id': 'req-7a15d284-e934-47a1-87f4-7746e949c7a2'}\ntempest.common.rest_client: ERROR: Response Body: {\"itemNotFound\": {\"message\": \"Image not found.\", \"code\": 404}}\ntempest.common.rest_client: ERROR: Request URL: http://10.2.3.164:8774/v2/1aeac1cfbfdd43c2845b2cb3a4f15790/servers/ecb51dfb-493d-4ef8-9178-1adc3d96a04d/action\ntempest.common.rest_client: ERROR: Request Body: {\"createImage\": {\"name\": \"\\ufeff43802479847\"}}\ntempest.common.rest_client: ERROR: Response Headers: {'date': 'Thu, 31 May 2012 06:02:44 GMT', 'status': '500', 'content-length': '128', 'content-type': 'application/json; charset=UTF-8', 'x-compute-request-id': 'req-1a9505f5-4dfc-44e7-b04a-f8daec0f956e'}\ntempest.common.rest_client: ERROR: Response Body: {u'computeFault': {u'message': u'The server has either erred or is incapable of performing the requested operation.', u'code': 500}}\n--------------------- >> end captured logging << ---------------------", 
            "date_created": "2012-05-31 06:05:44.906019+00:00", 
            "author": "https://api.launchpad.net/1.0/~rohitk"
        }, 
        {
            "content": "This bug doesn't make sense as this test case is invalid @ the first place. \n\nWe can always create a snapshot (image-create) with any string value. So this specific test case is invalid here. As long as mulitbye characters are included in a string it would create the images as shown below.\n\n\nxxxxx@xxxxx:/opt/stack/tempest$ nova image-list\n+--------------------------------------+---------------------------------+--------+--------------------------------------+\n| ID                                   | Name                            | Status | Server                               |\n+--------------------------------------+---------------------------------+--------+--------------------------------------+\n| 8163d097-d05b-44fc-9628-f33d0f22a6da | check-this-@-out\\xef\\xbb\\xbf    | ACTIVE | 21274a7e-df35-4698-87e9-4ee779a89098 |\n| 3afd61b7-117b-4ca8-9cbb-19d7e02e22fc | test-@@@11122nova image-list    | ACTIVE | 21274a7e-df35-4698-87e9-4ee779a89098 |\n\nSubmitting a patch to remove this test case from tempest.\n\n--prem", 
            "date_created": "2013-04-24 15:20:17.083811+00:00", 
            "author": "https://api.launchpad.net/1.0/~prem-karat"
        }, 
        {
            "content": "The error code now returned is MIsmatch error from assertRaises which when debugged showed that the snapshot was created successfully and the test case was expecting it to fail (its a negative test)\n\n--prem", 
            "date_created": "2013-04-24 15:22:00.265622+00:00", 
            "author": "https://api.launchpad.net/1.0/~prem-karat"
        }, 
        {
            "content": "If a try to run this test on a up o date ubuntu 12.10 I got\n\nERROR: tempest.api.compute.images.test_images_oneserver.ImagesOneServerTestXML.test_create_image_specify_multibyte_character_image_name[negative]\n----------------------------------------------------------------------\n_StringException: Traceback (most recent call last):\n  File \"/opt/stack/tempest/tempest/api/compute/images/test_images_oneserver.py\", line 72, in test_create_image_specify_multibyte_character_image_name\n    snapshot_name)\n  File \"/usr/local/lib/python2.7/dist-packages/testtools/testcase.py\", line 394, in assertRaises\n    self.assertThat(our_callable, matcher)\n  File \"/usr/local/lib/python2.7/dist-packages/testtools/testcase.py\", line 406, in assertThat\n    mismatch = matcher.match(matchee)\n  File \"/usr/local/lib/python2.7/dist-packages/testtools/matchers/_exception.py\", line 99, in match\n    mismatch = self.exception_matcher.match(exc_info)\n  File \"/usr/local/lib/python2.7/dist-packages/testtools/matchers/_higherorder.py\", line 61, in match\n    mismatch = matcher.match(matchee)\n  File \"/usr/local/lib/python2.7/dist-packages/testtools/testcase.py\", line 386, in match\n    reraise(*matchee)\n  File \"/usr/local/lib/python2.7/dist-packages/testtools/matchers/_exception.py\", line 92, in match\n    result = matchee()\n  File \"/usr/local/lib/python2.7/dist-packages/testtools/testcase.py\", line 867, in __call__\n    return self._callable_object(*self._args, **self._kwargs)\n  File \"/opt/stack/tempest/tempest/services/compute/xml/images_client.py\", line 105, in create_image\n    str(Document(post_body)), self.headers)\n  File \"/opt/stack/tempest/tempest/common/rest_client.py\", line 174, in post\n    return self.request('POST', url, headers, body)\n  File \"/opt/stack/tempest/tempest/common/rest_client.py\", line 289, in request\n    headers=headers, body=body)\n  File \"/opt/stack/tempest/tempest/common/rest_client.py\", line 272, in _request\n    headers=headers, body=body)\n  File \"/usr/lib/python2.7/dist-packages/httplib2/__init__.py\", line 1543, in request\n    (response, content) = self._request(conn, authority, uri, request_uri, method, body, headers, redirections, cachekey)\n  File \"/usr/lib/python2.7/dist-packages/httplib2/__init__.py\", line 1293, in _request\n    (response, content) = self._conn_request(conn, request_uri, method, body, headers)\n  File \"/usr/lib/python2.7/dist-packages/httplib2/__init__.py\", line 1230, in _conn_request\n    conn.request(method, request_uri, body, headers)\n  File \"/usr/lib/python2.7/httplib.py\", line 962, in request\n    self._send_request(method, url, body, headers)\n  File \"/usr/lib/python2.7/httplib.py\", line 996, in _send_request\n    self.endheaders(body)\n  File \"/usr/lib/python2.7/httplib.py\", line 958, in endheaders\n    self._send_output(message_body)\n  File \"/usr/lib/python2.7/httplib.py\", line 816, in _send_output\n    msg += message_body\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xef in position 58: ordinal not in range(128)\n ", 
            "date_created": "2013-05-24 15:13:08.438493+00:00", 
            "author": "https://api.launchpad.net/1.0/~jordan-pittier"
        }, 
        {
            "content": "I do not think it is good practice to allow invalid utf-8 sequences in any name.\nMost people expects valid UTF-8 names in xml and json rest API-s.\nIMHO the invalid UTF-8 names should be rejected by 400.\n\n(The test case in tempest is wrong now, but it can be fixed.)\n\nNow, I can can cause an internal server error in glance by an invalid name.\n\n", 
            "date_created": "2013-07-26 06:23:52.467905+00:00", 
            "author": "https://api.launchpad.net/1.0/~afazekas"
        }, 
        {
            "content": "Seems to work in the latest code in master.  Feel free to reopen if you think further changes are needed.\n\n[rbryant@devstack devstack(master)]$ nova image-create test \"\u0ca0_\u0cb0\u0cc3\"\n[rbryant@devstack devstack(master)]$ nova image-list\n+--------------------------------------+---------------------------------+--------+--------------------------------------+\n| ID                                   | Name                            | Status | Server                               |\n+--------------------------------------+---------------------------------+--------+--------------------------------------+\n| d7e2a05c-3dd9-49b1-9e35-e31805280ff4 | cirros-0.3.1-x86_64-uec         | ACTIVE |                                      |\n| 83cb17cc-5a7f-42bc-87c1-8c49100b2c93 | cirros-0.3.1-x86_64-uec-kernel  | ACTIVE |                                      |\n| db525ca4-0bc3-4229-8c4a-b23799475ead | cirros-0.3.1-x86_64-uec-ramdisk | ACTIVE |                                      |\n| fb8fe8d6-9934-474e-8ad6-61bc83d7e39f | \u0ca0_\u0cb0\u0cc3                            | ACTIVE | 70dabb27-e733-46ab-890a-f714d3bb504d |\n+--------------------------------------+---------------------------------+--------+--------------------------------------+\n\n\n[rbryant@devstack tempest(master)]$ nosetests -sv tempest.api.compute.images.test_images_oneserver.py:ImagesOneServerTestJSON.test_create_image_specify_multibyte_character_image_name\nnose.config: INFO: Ignoring files matching ['^\\\\.', '^_', '^setup\\\\.py$']\ntempest.api.compute.images.test_images_oneserver.ImagesOneServerTestJSON.test_create_image_specify_multibyte_character_image_name[gate,negative] ... ok\n\n----------------------------------------------------------------------\nRan 1 test in 53.895s\n\nOK\n\n\n[rbryant@devstack tempest(master)]$ git diff tempest/api/compute/\ndiff --git a/tempest/api/compute/images/test_images_oneserver.py b/tempest/api/compute/images/test_images_onese\nindex 06e9ab2..7d225e2 100644\n--- a/tempest/api/compute/images/test_images_oneserver.py\n+++ b/tempest/api/compute/images/test_images_oneserver.py\n@@ -64,14 +64,12 @@ class ImagesOneServerTestJSON(base.BaseComputeTest):\n                 cls.alt_manager = clients.AltManager()\n             cls.alt_client = cls.alt_manager.images_client\n \n-    @testtools.skip(\"Skipped until the Bug #1006725 is resolved.\")\n     @attr(type=['negative', 'gate'])\n     def test_create_image_specify_multibyte_character_image_name(self):\n         # Return an error if the image name has multi-byte characters\n         snapshot_name = rand_name('\\xef\\xbb\\xbf')\n-        self.assertRaises(exceptions.BadRequest,\n-                          self.client.create_image, self.server['id'],\n-                          snapshot_name)\n+        resp, body = self.client.create_image(self.server['id'], snapshot_name)\n+        self.assertEqual(202, resp.status)\n \n     @attr(type=['negative', 'gate'])\n     def test_create_image_specify_invalid_metadata(self):\n\n\n\n", 
            "date_created": "2013-09-17 19:32:58.294509+00:00", 
            "author": "https://api.launchpad.net/1.0/~russellb"
        }, 
        {
            "content": "Russell, if you've got the change to unskip the bug how about you push it out for review to close the tempest side.", 
            "date_created": "2013-09-17 20:57:56.515495+00:00", 
            "author": "https://api.launchpad.net/1.0/~treinish"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/61747", 
            "date_created": "2013-12-12 13:56:30.067247+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Definitely not fixed on the nova side. Attempts to unskip the bug generated issues.", 
            "date_created": "2013-12-12 15:47:34.798793+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "Related fix proposed to branch: master\nReview: https://review.openstack.org/62161", 
            "date_created": "2013-12-14 13:01:06.765196+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/61747\nCommitted: https://git.openstack.org/cgit/openstack/tempest/commit/?id=7eb1077ee7557bad88a4b2316eb8e8ef16cd328f\nSubmitter: Jenkins\nBranch:    master\n\ncommit 7eb1077ee7557bad88a4b2316eb8e8ef16cd328f\nAuthor: Sean Dague <email address hidden>\nDate:   Sat Dec 14 12:50:02 2013 +0000\n\n    provide a valid utf8 multibyte test for nova images\n    \n    this only works for json because getting our xml client to be\n    fully utf8 compliant would be *a ton* of work.\n    \n    Change-Id: I5e2f05274aaa6a2eb97b6206240ffd44e9f12526\n    Related-Bug: #1006725\n", 
            "date_created": "2013-12-18 07:18:42.058164+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/62161\nCommitted: https://git.openstack.org/cgit/openstack/tempest/commit/?id=4ff69bb44fbac177b4ed2649a3f045a81ff4b427\nSubmitter: Jenkins\nBranch:    master\n\ncommit 4ff69bb44fbac177b4ed2649a3f045a81ff4b427\nAuthor: Sean Dague <email address hidden>\nDate:   Sat Dec 14 12:52:24 2013 +0000\n\n    clean up invalid_multibyte test\n    \n    This cleans up the invalid_multibyte test to make it more clear\n    what it is trying to do, which is send an invalid utf8 sequence as\n    an image name (it should fail with a 400, it currently passes with\n    a 202).\n    \n    Change-Id: I58ad059a138ae96201bbf50df0c22bf259ae9716\n    Related-Bug: #1006725\n", 
            "date_created": "2013-12-18 07:19:02.497782+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "prem - are you still working this actively?  If not can you remove your name so others can pick it up?", 
            "date_created": "2014-06-23 17:17:34.454481+00:00", 
            "author": "https://api.launchpad.net/1.0/~tjones-i"
        }, 
        {
            "content": "I am still getting Tempest failures at this test.  It looks like this:\n\nFAIL: tempest.api.compute.images.test_images_oneserver.ImagesOneServerTestJSON.test_create_image_specify_multibyte_character_ima\\\nge_name[gate]\ntags: worker-0\n----------------------------------------------------------------------\nEmpty attachments:\n  stderr\n  stdout\n\npythonlogging:'': {{{\n2014-06-24 13:38:04,570 15948 INFO     [tempest.common.rest_client] Request (ImagesOneServerTestJSON:setUp): 200 GET http://10.1\\\n0.0.123:8774/v2/12ab086fc62d4e19bedabaf3039a18bc/servers/a75d561f-e527-4fe7-a9f7-c332274a00c3 0.215s\n2014-06-24 13:38:04,820 15948 INFO     [tempest.common.rest_client] Request (ImagesOneServerTestJSON:test_create_image_specify_m\\\nultibyte_character_image_name): 500 POST http://10.10.0.123:8774/v2/12ab086fc62d4e19bedabaf3039a18bc/servers/a75d561f-e527-4fe7-\\\na9f7-c332274a00c3/action 0.249s\n2014-06-24 13:38:05,054 15948 INFO     [tempest.common.rest_client] Request (ImagesOneServerTestJSON:tearDown): 200 GET http://1\\\n0.10.0.123:8774/v2/12ab086fc62d4e19bedabaf3039a18bc/servers/a75d561f-e527-4fe7-a9f7-c332274a00c3 0.232s\n}}}\n\nTraceback (most recent call last):\n  File \"tempest/api/compute/images/test_images_oneserver.py\", line 108, in test_create_image_specify_multibyte_character_image_n\\\name\n    resp, body = self.client.create_image(self.server_id, utf8_name)\n  File \"tempest/services/compute/json/images_client.py\", line 50, in create_image\n    post_body)\n  File \"tempest/common/rest_client.py\", line 218, in post\n    return self.request('POST', url, extra_headers, headers, body)\n  File \"tempest/common/rest_client.py\", line 430, in request\n    resp, resp_body)\n  File \"tempest/common/rest_client.py\", line 526, in _error_checker\n    raise exceptions.ServerFault(message)\nServerFault: Got server fault\nDetails: The server has either erred or is incapable of performing the requested operation.\n", 
            "date_created": "2014-06-24 13:51:41.764278+00:00", 
            "author": "https://api.launchpad.net/1.0/~mike-spreitzer"
        }, 
        {
            "content": "We are running this test in the gate, and not seeing it. Can you provide links to complete logs somewhere so we can figure out what's going on here?", 
            "date_created": "2014-09-03 11:59:04.228680+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "Related fix proposed to branch: master\nReview: https://review.openstack.org/121524", 
            "date_created": "2014-09-15 12:32:50.578357+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Change abandoned by Sean Dague (<email address hidden>) on branch: master\nReview: https://review.openstack.org/121524\nReason: still an issue", 
            "date_created": "2014-09-15 15:13:58.928127+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "I think the tempest test is bogus.\n\nFor starters the test name:\n\ninvalid_name = data_utils.rand_name(u'\\xc3\\x28')\n\nis a unicode  string, not utf-8.\n\n\"\\xc3\\x28\" is indeed an invalid utf-8 string but the tempest infrastructure prevents us from sending invalid utf-8 strings. At the lower levels a json.dumps is done on the post body. JSON represents strings as a sequence of unicode characters (http://tools.ietf.org/html/rfc4627.html). Therefore it attempts to convert utf-8 (which is the default encoding for dumps) to unicode characters and fails if it seens an invalid utf-8 string.\n\nYou can see this if you remove the u prefix from the tempest test which then makes it correctly pass an invalid utf-8 string.\n\nThe reason I believe the fundamental issue of sending an invalid utf-8 string is not actually valid is that we accept JSON on the nova API side. Again, JSON strings are just a sequence of unicode characters and we can always convert that to valid UTF-8. If the JSON string itself is not a sequence of unicode characters then the json decoding will fail in wsgi json deserialization and the user will be returned a 400. It is possible to directly inject an invalid utf-8 string in a unittest but that won't happen in real life with the json requests. Now it is probably possible to send an invalid utf-8 string via XML but we're not supporting that for long anyway.\n\nI'll propose a couple of patches:\n- remove the test_create_image_specify_multibyte_character_image_name tempest test\n- add a check in Nova so if a non valid multibyte utf-8 string is passed it rejects it.\n\nI did discover glance does 500 if you send it a unicode string which request a 4 byte utf-8 because thats all the mysql's utf8 supports (you need to use utf8mb4 instead). But I think that should be addressed separately. And the nova side fix will depend on what the glance team decides to do.\n\n\n", 
            "date_created": "2014-09-18 07:57:38.363615+00:00", 
            "author": "https://api.launchpad.net/1.0/~cyeoh-0"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/122361", 
            "date_created": "2014-09-18 08:54:42.460542+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Change abandoned by Christopher Yeoh (<email address hidden>) on branch: master\nReview: https://review.openstack.org/122361\nReason: Turns out the XML deserializer already looks for invalid utf8 sequences. So no work is required here.", 
            "date_created": "2014-09-19 04:13:18.225614+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "It turns out that both the JSON and XML deserializers in nova will detect invalid utf8 sequences so this bug is invalid. The only issue is on the tempest test side\n", 
            "date_created": "2014-09-19 04:14:39.876583+00:00", 
            "author": "https://api.launchpad.net/1.0/~cyeoh-0"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/122354\nCommitted: https://git.openstack.org/cgit/openstack/tempest/commit/?id=7a78cc8ecdade776bdb18f61b3fda8d9c4ae8c26\nSubmitter: Jenkins\nBranch:    master\n\ncommit 7a78cc8ecdade776bdb18f61b3fda8d9c4ae8c26\nAuthor: Chris Yeoh <email address hidden>\nDate:   Thu Sep 18 17:51:30 2014 +0930\n\n    Fixes image create utf-8 multibyte test\n    \n    Fixes test_create_image_specify_multibyte_character_image_name\n    so that it actually sends a UTF-8 multibyte character rather\n    than unicode. Also changes it to a 3 byte multibyte character\n    rather than a 4 byte multibyte character because glance currently\n    doesn't handle 4 byte utf-8 and will 500.\n    \n    Change-Id: I064b563024a090899a4adcbbd462a18c5450830c\n    Related-Bug: 1006725\n", 
            "date_created": "2014-10-10 20:29:57.482170+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}