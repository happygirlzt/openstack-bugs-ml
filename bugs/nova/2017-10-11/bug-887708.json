{
    "status": "Fix Released", 
    "last_updated": "2012-04-05 09:49:02.818906+00:00", 
    "description": "(nova.rpc): TRACE: Traceback (most recent call last):\n(nova.rpc): TRACE:   File \"/home/cbehrens/openstack/nova/nova.git/nova/rpc/impl_kombu.py\", line 620, in _process_data\n(nova.rpc): TRACE:     rval = node_func(context=ctxt, **node_args)\n(nova.rpc): TRACE:   File \"/home/cbehrens/openstack/nova/nova.git/nova/exception.py\", line 115, in wrapped \n(nova.rpc): TRACE:     return f(*args, **kw)\n(nova.rpc): TRACE:   File \"/home/cbehrens/openstack/nova/nova.git/nova/compute/manager.py\", line 495, in run_instance\n(nova.rpc): TRACE:     self._run_instance(context, instance_id, **kwargs)\n(nova.rpc): TRACE:   File \"/home/cbehrens/openstack/nova/nova.git/nova/compute/manager.py\", line 409, in _run_instance\n(nova.rpc): TRACE:     if instance['name'] in self.driver.list_instances():\n(nova.rpc): TRACE:   File \"/home/cbehrens/openstack/nova/nova.git/nova/virt/xenapi_conn.py\", line 191, in list_instances\n(nova.rpc): TRACE:     return self._vmops.list_instances()\n(nova.rpc): TRACE:   File \"/home/cbehrens/openstack/nova/nova.git/nova/virt/xenapi/vmops.py\", line 136, in list_instances\n(nova.rpc): TRACE:     vm_rec = self._session.call_xenapi(\"VM.get_record\", vm_ref)\n(nova.rpc): TRACE:   File \"/home/cbehrens/openstack/nova/nova.git/nova/virt/xenapi_conn.py\", line 482, in call_xenapi\n(nova.rpc): TRACE:     return tpool.execute(f, *args)\n(nova.rpc): TRACE:   File \"/usr/local/lib/python2.6/dist-packages/eventlet/tpool.py\", line 76, in tworker\n(nova.rpc): TRACE:     rv = meth(*args,**kwargs)\n(nova.rpc): TRACE:   File \"/usr/local/lib/python2.6/dist-packages/XenAPI.py\", line 229, in __call__\n(nova.rpc): TRACE:     return self.__send(self.__name, args)\n(nova.rpc): TRACE:   File \"/usr/local/lib/python2.6/dist-packages/XenAPI.py\", line 133, in xenapi_request\n(nova.rpc): TRACE:     result = _parse_result(getattr(self, methodname)(*full_params))\n(nova.rpc): TRACE:   File \"/usr/local/lib/python2.6/dist-packages/XenAPI.py\", line 203, in _parse_result\n(nova.rpc): TRACE:     raise Failure(result['ErrorDescription'])\n(nova.rpc): TRACE: Failure: ['HANDLE_INVALID', 'VM', 'OpaqueRef:be249227-83c4-ff6e-7d70-f1000a857548']\n(nova.rpc): TRACE:", 
    "tags": [
        "xenapi"
    ], 
    "importance": "Medium", 
    "heat": 10, 
    "link": "https://bugs.launchpad.net/nova/+bug/887708", 
    "owner": "https://api.launchpad.net/1.0/~johannes.erdfelt", 
    "id": 887708, 
    "index": 2633, 
    "created": "2011-11-08 18:26:57.959032+00:00", 
    "title": "xenapi returns HANDLE_INVALID randomly", 
    "comments": [
        {
            "content": "(nova.rpc): TRACE: Traceback (most recent call last):\n(nova.rpc): TRACE:   File \"/home/cbehrens/openstack/nova/nova.git/nova/rpc/impl_kombu.py\", line 620, in _process_data\n(nova.rpc): TRACE:     rval = node_func(context=ctxt, **node_args)\n(nova.rpc): TRACE:   File \"/home/cbehrens/openstack/nova/nova.git/nova/exception.py\", line 115, in wrapped \n(nova.rpc): TRACE:     return f(*args, **kw)\n(nova.rpc): TRACE:   File \"/home/cbehrens/openstack/nova/nova.git/nova/compute/manager.py\", line 495, in run_instance\n(nova.rpc): TRACE:     self._run_instance(context, instance_id, **kwargs)\n(nova.rpc): TRACE:   File \"/home/cbehrens/openstack/nova/nova.git/nova/compute/manager.py\", line 409, in _run_instance\n(nova.rpc): TRACE:     if instance['name'] in self.driver.list_instances():\n(nova.rpc): TRACE:   File \"/home/cbehrens/openstack/nova/nova.git/nova/virt/xenapi_conn.py\", line 191, in list_instances\n(nova.rpc): TRACE:     return self._vmops.list_instances()\n(nova.rpc): TRACE:   File \"/home/cbehrens/openstack/nova/nova.git/nova/virt/xenapi/vmops.py\", line 136, in list_instances\n(nova.rpc): TRACE:     vm_rec = self._session.call_xenapi(\"VM.get_record\", vm_ref)\n(nova.rpc): TRACE:   File \"/home/cbehrens/openstack/nova/nova.git/nova/virt/xenapi_conn.py\", line 482, in call_xenapi\n(nova.rpc): TRACE:     return tpool.execute(f, *args)\n(nova.rpc): TRACE:   File \"/usr/local/lib/python2.6/dist-packages/eventlet/tpool.py\", line 76, in tworker\n(nova.rpc): TRACE:     rv = meth(*args,**kwargs)\n(nova.rpc): TRACE:   File \"/usr/local/lib/python2.6/dist-packages/XenAPI.py\", line 229, in __call__\n(nova.rpc): TRACE:     return self.__send(self.__name, args)\n(nova.rpc): TRACE:   File \"/usr/local/lib/python2.6/dist-packages/XenAPI.py\", line 133, in xenapi_request\n(nova.rpc): TRACE:     result = _parse_result(getattr(self, methodname)(*full_params))\n(nova.rpc): TRACE:   File \"/usr/local/lib/python2.6/dist-packages/XenAPI.py\", line 203, in _parse_result\n(nova.rpc): TRACE:     raise Failure(result['ErrorDescription'])\n(nova.rpc): TRACE: Failure: ['HANDLE_INVALID', 'VM', 'OpaqueRef:be249227-83c4-ff6e-7d70-f1000a857548']\n(nova.rpc): TRACE:", 
            "date_created": "2011-11-08 18:26:57.959032+00:00", 
            "author": "https://api.launchpad.net/1.0/~cbehrens"
        }, 
        {
            "content": "Also:\n\nThe instance is left in 'BUILD' vm_state... it should go to ERROR when we get unexpected XenAPI responses/exceptions.", 
            "date_created": "2011-11-08 18:30:05.042067+00:00", 
            "author": "https://api.launchpad.net/1.0/~cbehrens"
        }, 
        {
            "content": "Can you attach the rest of the log for creating this instance?", 
            "date_created": "2011-11-08 22:08:31.118194+00:00", 
            "author": "https://api.launchpad.net/1.0/~johannes.erdfelt"
        }, 
        {
            "content": "There's really nothing before this regarding this instance.   However, there was a delete operation running at the same time that completed right before this trace.\n\nAttached is the most I could get out of my screen history buffer... but it does go back a ways, if it helps.  My logging was to stdout.\n", 
            "date_created": "2011-11-08 22:41:51.116015+00:00", 
            "author": "https://api.launchpad.net/1.0/~cbehrens"
        }, 
        {
            "content": "I've seen this a few times lately as well. It was always when I was deleting an instance. Looking at the code, it appears to be a race condition in nova/virt/xenapi/vmops.py:VMOps.list_instances.\n\nIt calls the XenAPI command VM.get_all and then calls VM.get_record on each of the returned VM refs. If an instance gets deleted between the VM.get_all command and the VM.get_record, then I could easily see a HANDLE_INVALID being returned.\n\nI think the code needs to be tolerant of HANDLE_INVALID exceptions and continue on, assuming we lost the race on that VM.", 
            "date_created": "2011-11-23 15:46:04.659149+00:00", 
            "author": "https://api.launchpad.net/1.0/~johannes.erdfelt"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/2151\nCommitted: http://github.com/openstack/nova/commit/fb27cc6979dcc8b4c0ac6595dae0c6e3e413e00f\nSubmitter: Jenkins\nBranch:    master\n\n status fixcommitted\n done\n\ncommit fb27cc6979dcc8b4c0ac6595dae0c6e3e413e00f\nAuthor: Johannes Erdfelt <email address hidden>\nDate:   Wed Dec 7 18:20:03 2011 +0000\n\n    Fix race condition in XenAPI when using <object>.get_all\n    \n    Fixes bug 887708\n    \n    There are a handful of places where <object>.get_all is followed by a\n    <object>.get_record calls that are potentially racey. This patch fixes\n    all of these cases to use common code that is tolerant of HANDLE_INVALID\n    errors that would be indicative of a race between get_all and delete\n    \n    Change-Id: Ib94adb6d21b6b55e7b26fc1da52ed46d9dba8275\n", 
            "date_created": "2011-12-07 22:12:25+00:00", 
            "author": "https://api.launchpad.net/1.0/~openstack-gerrit"
        }, 
        {
            "content": "Is this bug applicable to Diablo too? Anyone care to backport the fix, if so?", 
            "date_created": "2012-01-04 14:52:17.607192+00:00", 
            "author": "https://api.launchpad.net/1.0/~markmc"
        }, 
        {
            "content": "I'm pretty sure it is applicable to Diablo. It's been in nova for as long as I remember.", 
            "date_created": "2012-01-04 17:20:17.735092+00:00", 
            "author": "https://api.launchpad.net/1.0/~johannes.erdfelt"
        }, 
        {
            "content": "Yeah, this was fixed post-diablo.  Should probably be back-ported, but my team @ RAX probably won't have time in the next 2 weeks.", 
            "date_created": "2012-01-04 18:03:13.694819+00:00", 
            "author": "https://api.launchpad.net/1.0/~cbehrens"
        }
    ]
}