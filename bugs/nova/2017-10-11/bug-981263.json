{
    "status": "Invalid", 
    "last_updated": "2013-02-08 19:58:50.502686+00:00", 
    "description": "In certain cases Nova API should return instance flavors (instance_types) that are deleted.  Notably if there is an instance that is \"active\" and the flavor has been deleted, we need to pull the instance_type data down to ensure that we can apply network specifics attached to that instance_type on startup of nova-compute.\n\nThe second case that a deleted flavor should be returned is if the instance_type is being requested by ID, as IDs should not be reused.  This is important for Horizon to be able to properly retrieve \"instances\" for a given project (in Nova Dashboard and Syspanel Dashboard).\n\nExample traceback you can see if you delete a flavor and restart nova compute:\n\nresource: 'NoneType' object is not subscriptable\n2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi Traceback (most recent call last):\n2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi   File \"/opt/stack/nova/nova/api/openstack/wsgi.py\", line 851, in _process_stack\n2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi     action_result = self.dispatch(meth, request, action_args)\n2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi   File \"/opt/stack/nova/nova/api/openstack/wsgi.py\", line 926, in dispatch\n2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi     return method(req=request, **action_args)\n2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi   File \"/opt/stack/nova/nova/api/openstack/compute/servers.py\", line 382, in detail\n2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi     servers = self._get_servers(req, is_detail=True)\n2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi   File \"/opt/stack/nova/nova/api/openstack/compute/servers.py\", line 465, in _get_servers\n2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi     return self._view_builder.detail(req, limited_list)\n2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi   File \"/opt/stack/nova/nova/api/openstack/compute/views/servers.py\", line 123, in detail\n2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi     return self._list_view(self.show, request, instances)\n2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi   File \"/opt/stack/nova/nova/api/openstack/compute/views/servers.py\", line 127, in _list_view\n2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi     server_list = [func(request, server)[\"server\"] for server in servers]\n2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi   File \"/opt/stack/nova/nova/api/openstack/compute/views/servers.py\", line 61, in wrapped\n2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi     return func(self, request, instance)\n2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi   File \"/opt/stack/nova/nova/api/openstack/compute/views/servers.py\", line 97, in show\n2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi     \"flavor\": self._get_flavor(request, instance),\n2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi   File \"/opt/stack/nova/nova/api/openstack/compute/views/servers.py\", line 172, in _get_flavor\n2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi     flavor_id = instance[\"instance_type\"][\"flavorid\"]\n2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi TypeError: 'NoneType' object is not subscriptable", 
    "tags": [
        "flavors", 
        "nova-compute"
    ], 
    "importance": "Medium", 
    "heat": 14, 
    "link": "https://bugs.launchpad.net/nova/+bug/981263", 
    "owner": "None", 
    "id": 981263, 
    "index": 2864, 
    "created": "2012-04-13 23:43:36.577188+00:00", 
    "title": "Nova API should present deleted flavors (instance_types) in some cases", 
    "comments": [
        {
            "content": "In certain cases Nova API should return instance flavors (instance_types) that are deleted.  Notably if there is an instance that is \"active\" and the flavor has been deleted, we need to pull the instance_type data down to ensure that we can apply network specifics attached to that instance_type on startup of nova-compute.\n\nThe second case that a deleted flavor should be returned is if the instance_type is being requested by ID, as IDs should not be reused.  This is important for Horizon to be able to properly retrieve \"instances\" for a given project (in Nova Dashboard and Syspanel Dashboard).\n\nExample traceback you can see if you delete a flavor and restart nova compute:\n\nresource: 'NoneType' object is not subscriptable\n2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi Traceback (most recent call last):\n2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi   File \"/opt/stack/nova/nova/api/openstack/wsgi.py\", line 851, in _process_stack\n2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi     action_result = self.dispatch(meth, request, action_args)\n2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi   File \"/opt/stack/nova/nova/api/openstack/wsgi.py\", line 926, in dispatch\n2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi     return method(req=request, **action_args)\n2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi   File \"/opt/stack/nova/nova/api/openstack/compute/servers.py\", line 382, in detail\n2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi     servers = self._get_servers(req, is_detail=True)\n2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi   File \"/opt/stack/nova/nova/api/openstack/compute/servers.py\", line 465, in _get_servers\n2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi     return self._view_builder.detail(req, limited_list)\n2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi   File \"/opt/stack/nova/nova/api/openstack/compute/views/servers.py\", line 123, in detail\n2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi     return self._list_view(self.show, request, instances)\n2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi   File \"/opt/stack/nova/nova/api/openstack/compute/views/servers.py\", line 127, in _list_view\n2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi     server_list = [func(request, server)[\"server\"] for server in servers]\n2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi   File \"/opt/stack/nova/nova/api/openstack/compute/views/servers.py\", line 61, in wrapped\n2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi     return func(self, request, instance)\n2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi   File \"/opt/stack/nova/nova/api/openstack/compute/views/servers.py\", line 97, in show\n2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi     \"flavor\": self._get_flavor(request, instance),\n2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi   File \"/opt/stack/nova/nova/api/openstack/compute/views/servers.py\", line 172, in _get_flavor\n2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi     flavor_id = instance[\"instance_type\"][\"flavorid\"]\n2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi TypeError: 'NoneType' object is not subscriptable", 
            "date_created": "2012-04-13 23:43:36.577188+00:00", 
            "author": "https://api.launchpad.net/1.0/~mdrnstm"
        }, 
        {
            "content": "", 
            "date_created": "2012-04-13 23:43:36.577188+00:00", 
            "author": "https://api.launchpad.net/1.0/~mdrnstm"
        }, 
        {
            "content": "Thanks for the patch!  It needs to be submitted through gerrit, though.\n\nhttp://wiki.openstack.org/HowToContribute\n\nSee \"If you're a developer, start here:\"", 
            "date_created": "2012-04-21 12:26:35.965679+00:00", 
            "author": "https://api.launchpad.net/1.0/~russellb"
        }, 
        {
            "content": "Thanks for the info!  I have found that there are some other issues I\nam trying to solve before submitting to gerrit. I did sign the CLA so\nthat I can contribute it. Hopefully this week will make sense to\nsubmit it.\n\nActually, perhaps you have a bit of advice on this.  The fix in that\npatch makes it so that horizon cannot create new flavors (because of\nthe way it detects the \"highest\" number flavorId); when dealing with\nproblems like this that span projects with strange side effects, does\nit make sense to make the bug \"affect\" the other project and try and\nsubmit a patch for both (via gerrit) on the same bug?  I am trying to\nwade through the best practices of OpenStack for this type of stuff\nand any advice would be welcome!\n\nThanks!\nMorgan Fainberg\n\nSent from my iPad (please excuse any inane typos any autocorrect lameness)\n\nOn Apr 21, 2012, at 5:35, Russell Bryant <email address hidden> wrote:\n\n> Thanks for the patch!  It needs to be submitted through gerrit, though.\n>\n> http://wiki.openstack.org/HowToContribute\n>\n> See \"If you're a developer, start here:\"\n>\n> ** Changed in: nova\n>       Status: New => Triaged\n>\n> ** Changed in: nova\n>   Importance: Undecided => Medium\n>\n> --\n> You received this bug notification because you are subscribed to the bug\n> report.\n> https://bugs.launchpad.net/bugs/981263\n>\n> Title:\n>  Nova API should present deleted flavors (instance_types) in some cases\n>\n> Status in OpenStack Compute (Nova):\n>  Triaged\n>\n> Bug description:\n>  In certain cases Nova API should return instance flavors\n>  (instance_types) that are deleted.  Notably if there is an instance\n>  that is \"active\" and the flavor has been deleted, we need to pull the\n>  instance_type data down to ensure that we can apply network specifics\n>  attached to that instance_type on startup of nova-compute.\n>\n>  The second case that a deleted flavor should be returned is if the\n>  instance_type is being requested by ID, as IDs should not be reused.\n>  This is important for Horizon to be able to properly retrieve\n>  \"instances\" for a given project (in Nova Dashboard and Syspanel\n>  Dashboard).\n>\n>  Example traceback you can see if you delete a flavor and restart nova\n>  compute:\n>\n>  resource: 'NoneType' object is not subscriptable\n>  2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi Traceback (most recent call last):\n>  2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi   File \"/opt/stack/nova/nova/api/openstack/wsgi.py\", line 851, in _process_stack\n>  2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi     action_result = self.dispatch(meth, request, action_args)\n>  2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi   File \"/opt/stack/nova/nova/api/openstack/wsgi.py\", line 926, in dispatch\n>  2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi     return method(req=request, **action_args)\n>  2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi   File \"/opt/stack/nova/nova/api/openstack/compute/servers.py\", line 382, in detail\n>  2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi     servers = self._get_servers(req, is_detail=True)\n>  2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi   File \"/opt/stack/nova/nova/api/openstack/compute/servers.py\", line 465, in _get_servers\n>  2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi     return self._view_builder.detail(req, limited_list)\n>  2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi   File \"/opt/stack/nova/nova/api/openstack/compute/views/servers.py\", line 123, in detail\n>  2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi     return self._list_view(self.show, request, instances)\n>  2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi   File \"/opt/stack/nova/nova/api/openstack/compute/views/servers.py\", line 127, in _list_view\n>  2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi     server_list = [func(request, server)[\"server\"] for server in servers]\n>  2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi   File \"/opt/stack/nova/nova/api/openstack/compute/views/servers.py\", line 61, in wrapped\n>  2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi     return func(self, request, instance)\n>  2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi   File \"/opt/stack/nova/nova/api/openstack/compute/views/servers.py\", line 97, in show\n>  2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi     \"flavor\": self._get_flavor(request, instance),\n>  2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi   File \"/opt/stack/nova/nova/api/openstack/compute/views/servers.py\", line 172, in _get_flavor\n>  2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi     flavor_id = instance[\"instance_type\"][\"flavorid\"]\n>  2012-04-13 19:31:18 TRACE nova.api.openstack.wsgi TypeError: 'NoneType' object is not subscriptable\n>\n> To manage notifications about this bug go to:\n> https://bugs.launchpad.net/nova/+bug/981263/+subscriptions\n", 
            "date_created": "2012-04-21 16:15:22+00:00", 
            "author": "https://api.launchpad.net/1.0/~mdrnstm"
        }, 
        {
            "content": "I agree that we need access to deleted instance types internally (within Nova), but I don't want to expose them through the public API. flavor_id is designed to be reused, while instance_type_id is the autoincrement unique id used internally. We do have a uniqueness requirement on flavor_id when deleted=0, but other than that it shouldnt matter. \n\nIdeally we would treat flavors totally differently and simply apply the resources to an instance at boot, rather than preserving the tie to a separate table. Our current approach is very fragile and cumbersome.", 
            "date_created": "2012-04-23 17:21:20.294081+00:00", 
            "author": "https://api.launchpad.net/1.0/~bcwaldon"
        }, 
        {
            "content": "I would like to know what is the resolution of this bug. We are seeing an issue when horizon issues a flavor get() method, it returns the deleted instance of the flavor. Is that the intended behavior? \n\nOn the horizon side of things, when editing a flavor, it does the following:\n- Get the flavor data by using get() method for the flavor_id and populates the edit form (the flavor data may be stale)\n- On submit, it deletes the flavor_id and recreates a new flavor_id (max (flavor_ids) + 1) with the updates params\n\nThe problem is that if you have happen to edit the largest flavor id on horizon, you get the initial _data in the form filled with the details of the deleted flavor_id\n\nVinay", 
            "date_created": "2012-10-20 20:52:30.958194+00:00", 
            "author": "https://api.launchpad.net/1.0/~vbannai"
        }, 
        {
            "content": "Following is the observation currently after I setup devstack:\n\nrajalakshmi_ganesan@hsd000176:~$ nova flavor-create test-1 1234 512 1 1\n+------+--------+-----------+------+-----------+------+-------+-------------+-----------+-------------+\n| ID   | Name   | Memory_MB | Disk | Ephemeral | Swap | VCPUs | RXTX_Factor | Is_Public | extra_specs |\n+------+--------+-----------+------+-----------+------+-------+-------------+-----------+-------------+\n| 1234 | test-1 | 512       | 1    | 0         |      | 1     | 1.0         | True      | {}          |\n+------+--------+-----------+------+-----------+------+-------+-------------+-----------+-------------+\nrajalakshmi_ganesan@hsd000176:~$ nova flavor-list\n+------+-----------+-----------+------+-----------+------+-------+-------------+-----------+-------------+\n| ID   | Name      | Memory_MB | Disk | Ephemeral | Swap | VCPUs | RXTX_Factor | Is_Public | extra_specs |\n+------+-----------+-----------+------+-----------+------+-------+-------------+-----------+-------------+\n| 1    | m1.tiny   | 512       | 0    | 0         |      | 1     | 1.0         | True      | {}          |\n| 1234 | test-1    | 512       | 1    | 0         |      | 1     | 1.0         | True      | {}          |\n| 2    | m1.small  | 2048      | 20   | 0         |      | 1     | 1.0         | True      | {}          |\n| 3    | m1.medium | 4096      | 40   | 0         |      | 2     | 1.0         | True      | {}          |\n| 4    | m1.large  | 8192      | 80   | 0         |      | 4     | 1.0         | True      | {}          |\n| 5    | m1.xlarge | 16384     | 160  | 0         |      | 8     | 1.0         | True      | {}          |\n+------+-----------+-----------+------+-----------+------+-------+-------------+-----------+-------------+\nrajalakshmi_ganesan@hsd000176:~$ nova flavor-delete 1234\nrajalakshmi_ganesan@hsd000176:~$ nova flavor-list\n+----+-----------+-----------+------+-----------+------+-------+-------------+-----------+-------------+\n| ID | Name      | Memory_MB | Disk | Ephemeral | Swap | VCPUs | RXTX_Factor | Is_Public | extra_specs |\n+----+-----------+-----------+------+-----------+------+-------+-------------+-----------+-------------+\n| 1  | m1.tiny   | 512       | 0    | 0         |      | 1     | 1.0         | True      | {}          |\n| 2  | m1.small  | 2048      | 20   | 0         |      | 1     | 1.0         | True      | {}          |\n| 3  | m1.medium | 4096      | 40   | 0         |      | 2     | 1.0         | True      | {}          |\n| 4  | m1.large  | 8192      | 80   | 0         |      | 4     | 1.0         | True      | {}          |\n| 5  | m1.xlarge | 16384     | 160  | 0         |      | 8     | 1.0         | True      | {}          |\n+----+-----------+-----------+------+-----------+------+-------+-------------+-----------+-------------+\nrajalakshmi_ganesan@hsd000176:~$nova flavor-show 1234\n+----------------------------+--------+\n| Property                   | Value  |\n+----------------------------+--------+\n| OS-FLV-DISABLED:disabled   | False  |\n| OS-FLV-EXT-DATA:ephemeral  | 0      |\n| disk                       | 1      |\n| extra_specs                | {}     |\n| id                         | 1234   |\n| name                       | test-1 |\n| os-flavor-access:is_public | True   |\n| ram                        | 512    |\n| rxtx_factor                | 1.0    |\n| swap                       |        |\n| vcpus                      | 1      |\n+----------------------------+--------+\nrajalakshmi_ganesan@hsd000176:~$ \n\nScenario of \"GET by id\" call retuning 200 ok after deletion of flavor with that is seems to be a bug. As in the case of other resources like IMAGE, INSTANCE, FLOATING IP, SECURITY GROUP even when deleted flavor is tried to GET by id should return 404 error code that corresponds NotFound exception.", 
            "date_created": "2013-01-03 06:52:02.045872+00:00", 
            "author": "https://api.launchpad.net/1.0/~rajalakshmi-ganesan"
        }, 
        {
            "content": "This was fixed at some point, probably after several recent changes, and is no longer an issue according to the reporter.", 
            "date_created": "2013-02-08 19:58:45.776860+00:00", 
            "author": "https://api.launchpad.net/1.0/~danms"
        }
    ]
}