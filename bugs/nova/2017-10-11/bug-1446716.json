{
    "status": "In Progress", 
    "last_updated": "2017-02-06 01:42:38.464841+00:00", 
    "description": "In the nova scheduler (and nova-cells) the filters report debug level logging on what decisions each filter makes on the hosts(cells). The weighers, however, only give the combined weight after all have been applied. As an operator, I want to be able to see the weight each weigher contributes in the debug log so that I can troubleshoot scheduler problems better.", 
    "tags": [], 
    "importance": "Low", 
    "heat": 16, 
    "link": "https://bugs.launchpad.net/nova/+bug/1446716", 
    "owner": "https://api.launchpad.net/1.0/~pushkar-umaranikar", 
    "id": 1446716, 
    "index": 430, 
    "created": "2015-04-21 15:00:38.653707+00:00", 
    "title": "Scheduler weighers do not output individual weights to debug log", 
    "comments": [
        {
            "content": "In the nova scheduler (and nova-cells) the filters report debug level logging on what decisions each filter makes on the hosts(cells). The weighers, however, only give the combined weight after all have been applied. As an operator, I want to be able to see the weight each weigher contributes in the debug log so that I can troubleshoot scheduler problems better.", 
            "date_created": "2015-04-21 15:00:38.653707+00:00", 
            "author": "https://api.launchpad.net/1.0/~madasi"
        }, 
        {
            "content": "I would think it's not a bug , but it should be something we can add to help debug", 
            "date_created": "2015-04-21 15:51:44.774717+00:00", 
            "author": "https://api.launchpad.net/1.0/~jichenjc"
        }, 
        {
            "content": "Mark , any preference you want to add from operator perspective? thanks ", 
            "date_created": "2015-04-21 20:20:37.508098+00:00", 
            "author": "https://api.launchpad.net/1.0/~jichenjc"
        }, 
        {
            "content": "I spent some time looking at this, and I'm not sure it is possible to do from inside the weigher itself. The value the weigher returns gets normalized and then multiplied by weight_multiplier before being applied.  While you might be able to compensate for the multiplier, I don't know of a way to compensate for the normalizing inside the _weigh_object function.\n\nYou would almost have to add debug logging into the get_weighed_objects function of BaseWeightHandler in nova/weights.py, which is where the final weight is calculated, but it would need to know what individual weigher was being invoked for the debug message to be useful.\n\nCurious if anyone else sees a way to implement this type of debug logging instead.", 
            "date_created": "2015-07-24 23:11:43.724980+00:00", 
            "author": "https://api.launchpad.net/1.0/~madasi"
        }, 
        {
            "content": "Hi,\n\nI looked into the problem mentioned. I too had faced an issue with the debugging of individual weighers. I have discussed one possible way to go about this.\n\nThe hosts get their weighed values in \"get_weighed_objects\" function in the BaseWeightHandler class. It loops over every weigher and gets the weight of the hosts by calling the weigh_objects of every weigher. The weights that this returns is not normalized and so here we get values that are not in the range of 0-1 but instead raw values; like in the case of a ram weigher it returns the free ram there is in every host as the hosts weight. The normalize function is called after this to normalize the values and get values in the range of 0-1. The normalize method return an iterator, so we can log the weights of the hosts for every weigher in the loop that iterates over this iterator. The information that would be provided here would be  -  hostname , weigher class name , weight. \n\n\nLOG.debug statement would be:\n\nLOG.debug(\"host weight for every weigher : host : %(host)s , weigher : %(weigher)s , weight : %(weight)s\",{'host':weighed_objs[i].obj.host , 'weigher':weigher.__class__.__name__,'weight':weight})\n\nLogged statement would be like : \n2016-02-23 20:04:16.756 17566 DEBUG nova.weights [req-6127b8fe-39b9-4bbf-bd58-f844d15e32d8 da1f3a0a2427430e98c56a0ac582a09c 7fc5d929f6c542809b5220010e758d41 - - -] host weight for every weigher : host : localhost2.localdomain , weigher : RAMWeigher , weight : 1.0 get_weighed_objects /usr/lib/python2.7/site-packages/nova/weights.py:150\n ", 
            "date_created": "2016-02-23 14:39:48.479240+00:00", 
            "author": "https://api.launchpad.net/1.0/~dhvanan"
        }, 
        {
            "content": "Hi,\n\nI looked into the problem mentioned. I too had faced an issue with the debugging of individual weighers. I have discussed one possible way to go about this.\n\nThe hosts get their weighed values in \"get_weighed_objects\" function in the BaseWeightHandler class in the nova/weights.py file. It loops over every weigher and gets the weight of the hosts by calling the weigh_objects of every weigher. The weights that this returns is not normalized and so here we get values that are not in the range of 0-1 but instead raw values; like in the case of a ram weigher it returns the free ram there is in every host as the hosts weight. The normalize function is called after this to normalize the values and get values in the range of 0-1. The normalize method return an iterator, so we can log the weights of the hosts for every weigher in the loop that iterates over this iterator. The information that would be provided here would be - \"hostname , weigher class name , weight\" - for every host and weigher combination.\n\nLOG.debug statement would be:\n\nLOG.debug(\"host weight for every weigher : host : %(host)s , weigher : %(weigher)s , weight : %(weight)s\",{'host':weighed_objs[i].obj.host , 'weigher':weigher.__class__.__name__,'weight':weight})\n\nLogged statement would be like :\n host weight for every weigher : host : localhost2.localdomain , weigher : RAMWeigher , weight : 1.0 get_weighed_objects /usr/lib/python2.7/site-packages/nova/weights.py:135", 
            "date_created": "2016-02-23 14:48:41.618568+00:00", 
            "author": "https://api.launchpad.net/1.0/~dhvanan"
        }, 
        {
            "content": "Removing assignee due to lack of visible progress for a period of over one month.", 
            "date_created": "2016-08-17 03:38:52.560446+00:00", 
            "author": "https://api.launchpad.net/1.0/~mszankin"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/385636", 
            "date_created": "2016-10-12 22:24:43.012444+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Change abandoned by Michael Still (<email address hidden>) on branch: master\nReview: https://review.openstack.org/385636\nReason: This patch has been sitting unchanged for more than 12 weeks. I am therefore going to abandon it to keep the review queue sane. Please feel free to restore the change if you're still working on it.", 
            "date_created": "2017-02-06 01:42:37.046558+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}