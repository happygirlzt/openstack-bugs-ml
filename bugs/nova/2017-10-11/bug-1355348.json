{
    "status": "Fix Released", 
    "last_updated": "2014-10-16 08:57:27.307469+00:00", 
    "description": "This is happening with the xenapi driver, but it's possible that this can happen with others.  The sequence of events I'm witnessing is:\n\nAn attach_volume request is made and shortly after a terminate_instance request is made.\n\nFrom the attach_volume request the block device mapping has been updated, the volume has been connected to the hypervisor, but has not been attached to the instance.  The terminate request begins processing before the volume connection is attached to the instance so when it detaches volumes and their connections it misses the latest one that's still attaching.  This leads to a failure when asking Cinder to clean up the volume, such as:\n\n2014-08-06 20:30:14.324 30737 TRACE nova.compute.manager [instance: <uuid>] ClientException: DELETE on http://127.0.0.1/volumes/<uuid>/export?force=False returned '409' with 'Volume '<uuid>' is currently attached to '127.0.0.1'' (HTTP 409) (Request-ID: req-)\n\nAnd in turn, when the attach_volume tries to attach the volume to the instance it finds that the instance no longer exists due to the terminate request.  This leaves the instance undeletable and the volume stuck.\n\nHaving attach_volume share the instance lock with terminate_instance should resolve this.  Virt drivers may also want to try to cope with this internally and not rely on a lock.", 
    "tags": [], 
    "importance": "Undecided", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1355348", 
    "owner": "https://api.launchpad.net/1.0/~alaski", 
    "id": 1355348, 
    "index": 5063, 
    "created": "2014-08-11 18:12:15.983986+00:00", 
    "title": "Terminating an instance while attaching a volume leads to both actions failing", 
    "comments": [
        {
            "content": "This is happening with the xenapi driver, but it's possible that this can happen with others.  The sequence of events I'm witnessing is:\n\nAn attach_volume request is made and shortly after a terminate_instance request is made.\n\nFrom the attach_volume request the block device mapping has been updated, the volume has been connected to the hypervisor, but has not been attached to the instance.  The terminate request begins processing before the volume connection is attached to the instance so when it detaches volumes and their connections it misses the latest one that's still attaching.  This leads to a failure when asking Cinder to clean up the volume, such as:\n\n2014-08-06 20:30:14.324 30737 TRACE nova.compute.manager [instance: <uuid>] ClientException: DELETE on http://127.0.0.1/volumes/<uuid>/export?force=False returned '409' with 'Volume '<uuid>' is currently attached to '127.0.0.1'' (HTTP 409) (Request-ID: req-)\n\nAnd in turn, when the attach_volume tries to attach the volume to the instance it finds that the instance no longer exists due to the terminate request.  This leaves the instance undeletable and the volume stuck.\n\nHaving attach_volume share the instance lock with terminate_instance should resolve this.  Virt drivers may also want to try to cope with this internally and not rely on a lock.", 
            "date_created": "2014-08-11 18:12:15.983986+00:00", 
            "author": "https://api.launchpad.net/1.0/~alaski"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/113341", 
            "date_created": "2014-08-11 18:43:17.743977+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/113341\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=4c4dc3a6d331426e472e2dd1e9b0513da7cb7450\nSubmitter: Jenkins\nBranch:    master\n\ncommit 4c4dc3a6d331426e472e2dd1e9b0513da7cb7450\nAuthor: Andrew Laski <email address hidden>\nDate:   Mon Aug 11 14:36:30 2014 -0400\n\n    Lock attach_volume\n    \n    There are some issues with instance and volume cleanup when the volume\n    is not in a fully attached state so it will be safer to not attempt a\n    terminate_instance while there are attachments in progress.\n    \n    Change-Id: I4347794e51004a881bf4ef5ee30f65ac28773e51\n    Closes-Bug: #1355348\n", 
            "date_created": "2014-09-16 15:48:23.675366+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}