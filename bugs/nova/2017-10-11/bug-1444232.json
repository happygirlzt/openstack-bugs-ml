{
    "status": "Invalid", 
    "last_updated": "2015-05-11 13:55:03.196277+00:00", 
    "description": "when only using huge page parameter without numa to create vms, the current code can generate an instance numatopology with a numa cell.\n\nthe solution will filter some hosts which meet the\nneed of huge page but no numa.\n\nI think that binding the huge page with  numa so closely  is unreasonable.", 
    "tags": [], 
    "importance": "Low", 
    "heat": 8, 
    "link": "https://bugs.launchpad.net/nova/+bug/1444232", 
    "owner": "https://api.launchpad.net/1.0/~zhangchunlong1", 
    "id": 1444232, 
    "index": 419, 
    "created": "2015-04-15 02:29:21.404555+00:00", 
    "title": "Only using huge page may filter the usable host", 
    "comments": [
        {
            "content": "when only using huge page parameter without numa to create vms, the current code can generate \nan instance numatopology with a numa cell.\n\nthe solution will filter some hosts which meet the \nneed of huge page but no numa, which is unreasonable.", 
            "date_created": "2015-04-15 02:29:21.404555+00:00", 
            "author": "https://api.launchpad.net/1.0/~zhangchunlong1"
        }, 
        {
            "content": "Hmmm are you sure that this is correct - in the current libvirt implementation - even single node hosts will report a topology (with a single cell) so I am not sure this will filter any hosts out unless they are running a very old version of libvirt which would not support large pages anyway.", 
            "date_created": "2015-05-08 09:39:48.248762+00:00", 
            "author": "https://api.launchpad.net/1.0/~ndipanov"
        }, 
        {
            "content": "Yep, every single compute host should always be reporting at least a single NUMA node containing all CPUs/RAM, so if a guest has only requested hugepages, the NUMA logic shouldn't cause hosts to be filtered out. So I don't see any reason to separate numa/hugepage scheduling for that case", 
            "date_created": "2015-05-11 10:14:50.135884+00:00", 
            "author": "https://api.launchpad.net/1.0/~berrange"
        }, 
        {
            "content": "yeah, Daniel and Nikola, you are right. \nBefore, I find no numa in a host by the numactl --hardware, so I think that there may be no numa topo.\nI made the following test, and find that the libvirt return a numa even if the value from the numactl  is zero.\nthanks.\n\nroot@tralon-Vostro-1400:~# virsh --version\n1.2.2\nroot@tralon-Vostro-1400:~# numactl --hardware\navailable: 0 nodes ()\nroot@tralon-Vostro-1400:~# virsh capabilities\n<capabilities>\n\n  <host>\n    <uuid>44454c4c-3500-1039-8038-b4c04f433258</uuid>\n    <cpu>\n      <arch>i686</arch>\n      <model>n270</model>\n      <vendor>Intel</vendor>\n      <topology sockets='1' cores='2' threads='1'/>\n      <feature name='lahf_lm'/>\n      <feature name='lm'/>\n      <feature name='pdcm'/>\n      <feature name='xtpr'/>\n      <feature name='cx16'/>\n      <feature name='tm2'/>\n      <feature name='est'/>\n      <feature name='vmx'/>\n      <feature name='ds_cpl'/>\n      <feature name='dtes64'/>\n      <feature name='pbe'/>\n      <feature name='tm'/>\n      <feature name='ht'/>\n      <feature name='ss'/>\n      <feature name='acpi'/>\n      <feature name='ds'/>\n      <feature name='pse36'/>\n    </cpu>\n    <power_management>\n      <suspend_mem/>\n      <suspend_disk/>\n      <suspend_hybrid/>\n    </power_management>\n    <migration_features>\n      <live/>\n      <uri_transports>\n        <uri_transport>tcp</uri_transport>\n      </uri_transports>\n    </migration_features>\n    <topology>\n      <cells num='1'>\n        <cell id='0'>\n          <memory unit='KiB'>3106852</memory>\n          <cpus num='2'>\n            <cpu id='0' socket_id='0' core_id='0' siblings='0'/>\n            <cpu id='1' socket_id='0' core_id='1' siblings='1'/>\n          </cpus>\n        </cell>\n      </cells>\n    </topology>\n    <secmodel>\n      <model>apparmor</model>\n      <doi>0</doi>\n    </secmodel>\n    <secmodel>\n      <model>dac</model>\n      <doi>0</doi>\n      <baselabel type='kvm'>+117:+126</baselabel>\n      <baselabel type='qemu'>+117:+126</baselabel>\n    </secmodel>\n  </host>\n\n</capabilities>\n", 
            "date_created": "2015-05-11 13:54:44.609365+00:00", 
            "author": "https://api.launchpad.net/1.0/~zhangchunlong1"
        }
    ]
}