{
    "status": "Fix Released", 
    "last_updated": "2014-10-16 08:30:24.702283+00:00", 
    "description": "Tempest test test_list_servers_filter_by_zero_limit does a server list query with limit=0 which is OK with MySQL and PostgreSQL but not with DB2 since DB2's fetch-first clause doesn't support values < 1:\n\nhttp://pic.dhe.ibm.com/infocenter/db2luw/v10r5/topic/com.ibm.db2.luw.sql.ref.doc/doc/r0059212.html?resultof=%22%46%45%54%43%48%22%20%22%66%65%74%63%68%22%20%22%66%69%72%73%74%22%20\n\nFrom the DB2 doc:\n\n\"The fetch-first-clause lets the database manager know that the application does not want to retrieve more than integer rows, regardless of how many rows there might be in the result table when this clause is not specified. An attempt to fetch beyond integer rows is handled the same way as normal end of data (SQLSTATE 02000). The value of integer must be a positive integer (not zero).\"\n\nLooking at the Nova API paginate collections docs:\n\nhttp://docs.openstack.org/api/openstack-compute/2/content/Paginated_Collections-d1e664.html\n\nIt doesn't say anything about lower bounds validation, only that over limit is a 413 HTTP error response.  Otherwise the examples use limit=1.\n\nThere isn't really any point of allowing the query to get down into the DB API layer just to perform a query and then remove the results, so we should just detect limit == 0 in the nova API layer and just return an empty response.", 
    "tags": [
        "api", 
        "db2"
    ], 
    "importance": "Undecided", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1296929", 
    "owner": "https://api.launchpad.net/1.0/~mriedem", 
    "id": 1296929, 
    "index": 4677, 
    "created": "2014-03-24 20:07:46.880900+00:00", 
    "title": "test_list_servers_filter_by_zero_limit fails with DB2", 
    "comments": [
        {
            "content": "Tempest test test_list_servers_filter_by_zero_limit does a server list query with limit=0 which is OK with MySQL and PostgreSQL but not with DB2 since DB2's fetch-first clause doesn't support values < 1:\n\nhttp://pic.dhe.ibm.com/infocenter/db2luw/v10r5/topic/com.ibm.db2.luw.sql.ref.doc/doc/r0059212.html?resultof=%22%46%45%54%43%48%22%20%22%66%65%74%63%68%22%20%22%66%69%72%73%74%22%20\n\nFrom the DB2 doc:\n\n\"The fetch-first-clause lets the database manager know that the application does not want to retrieve more than integer rows, regardless of how many rows there might be in the result table when this clause is not specified. An attempt to fetch beyond integer rows is handled the same way as normal end of data (SQLSTATE 02000). The value of integer must be a positive integer (not zero).\"\n\nLooking at the Nova API paginate collections docs:\n\nhttp://docs.openstack.org/api/openstack-compute/2/content/Paginated_Collections-d1e664.html\n\nIt doesn't say anything about lower bounds validation, only that over limit is a 413 HTTP error response.  Otherwise the examples use limit=1.\n\nThere isn't really any point of allowing the query to get down into the DB API layer just to perform a query and then remove the results, so we should just detect limit == 0 in the nova API layer and just return an empty response.", 
            "date_created": "2014-03-24 20:07:46.880900+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Here is where nova API checks for request limit < 0:\n\nhttps://github.com/openstack/nova/blob/2014.1.b3/nova/api/openstack/common.py#L210\n\nand get_limit_and_marker is used by the servers API:\n\nhttps://github.com/openstack/nova/blob/2014.1.b3/nova/api/openstack/common.py#L222\n\nhttps://github.com/openstack/nova/blob/2014.1.b3/nova/api/openstack/compute/servers.py#L595\n\nSo it would be easy enough to just detect limit == 0 in the servers API (v2 and v3) and handle it there by returning instance_list = [].", 
            "date_created": "2014-03-24 20:31:47.826204+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/82697", 
            "date_created": "2014-03-25 02:45:01.091786+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/82697\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=d63a7012d221753de71dd2c3fd8c1dcde15a33c3\nSubmitter: Jenkins\nBranch:    master\n\ncommit d63a7012d221753de71dd2c3fd8c1dcde15a33c3\nAuthor: Matt Riedemann <email address hidden>\nDate:   Mon Mar 24 14:43:23 2014 -0700\n\n    Bypass the database if limit=0 for server-list requests\n    \n    Not all database engines handle fetching 0 rows the same and there isn't\n    really a point in going to the database to return nothing, so bypass the\n    DB query if limit=0.\n    \n    The Nova API is explicitly checking if limit >= 0 so we can't make any\n    changes there since they would be backwards incompatible, i.e. to start\n    enforcing limit > 0.\n    \n    Closes-Bug: #1296929\n    \n    Change-Id: Ib3d0318bec972af5f1f25202101e76066f930f34\n", 
            "date_created": "2014-04-14 20:30:20.877680+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}