{
    "status": "Fix Released", 
    "last_updated": "2016-10-18 17:01:42.820846+00:00", 
    "description": "If we had two volume, one is attached by a instance, and the other is still available.\nDue to https://bugs.launchpad.net/nova/+bug/1489744, those volumes will stay in wrong status.\nIt will swap successful after fix the issue.\nVolumes will be available and in-use status.\nBut when I try to swap in-use volume with other available volume.\nNova compute will throw following exception:\n\n2015-08-30 04:55:13.772 ERROR oslo_messaging.rpc.dispatcher [req-4d999362-7a13-4b43-8c6a-0d85f3b9aa5b admin admin] Exception during message handling: No volume Block Device Mapping with id cafc833a-8645-47db-b464-999142afa7be.\nTraceback (most recent call last):\n\n  File \"/opt/stack/nova/nova/conductor/manager.py\", line 443, in _object_dispatch\n    return getattr(target, method)(*args, **kwargs)\n\n  File \"/usr/local/lib/python2.7/dist-packages/oslo_versionedobjects/base.py\", line 169, in wrapper\n    result = fn(cls, context, *args, **kwargs)\n\n  File \"/opt/stack/nova/nova/objects/block_device.py\", line 204, in get_by_volume_id\n    raise exception.VolumeBDMNotFound(volume_id=volume_id)\n\nVolumeBDMNotFound: No volume Block Device Mapping with id cafc833a-8645-47db-b464-999142afa7be.\n\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher Traceback (most recent call last):\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/local/lib/python2.7/dist-packages/oslo_messaging/rpc/dispatcher.py\", line 142, in _dispatch_and_reply\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     executor_callback))\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/local/lib/python2.7/dist-packages/oslo_messaging/rpc/dispatcher.py\", line 186, in _dispatch\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     executor_callback)\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/local/lib/python2.7/dist-packages/oslo_messaging/rpc/dispatcher.py\", line 129, in _do_dispatch\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     result = func(ctxt, **new_args)\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/exception.py\", line 89, in wrapped\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     payload)\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/local/lib/python2.7/dist-packages/oslo_utils/excutils.py\", line 119, in __exit__\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     six.reraise(self.type_, self.value, self.tb)\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/exception.py\", line 72, in wrapped\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     return f(self, context, *args, **kw)\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/compute/manager.py\", line 345, in decorated_function\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     LOG.warning(msg, e, instance_uuid=instance_uuid)\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/local/lib/python2.7/dist-packages/oslo_utils/excutils.py\", line 119, in __exit__\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     six.reraise(self.type_, self.value, self.tb)\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/compute/manager.py\", line 316, in decorated_function\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     return function(self, context, *args, **kwargs)\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/compute/manager.py\", line 373, in decorated_function\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     kwargs['instance'], e, sys.exc_info())\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/local/lib/python2.7/dist-packages/oslo_utils/excutils.py\", line 119, in __exit__\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     six.reraise(self.type_, self.value, self.tb)\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/compute/manager.py\", line 361, in decorated_function\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     return function(self, context, *args, **kwargs)\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/compute/manager.py\", line 4706, in swap_volume\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     resize_to)\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/compute/manager.py\", line 4658, in _swap_volume\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     self.volume_api.unreserve_volume(context, new_volume_id)\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/local/lib/python2.7/dist-packages/oslo_utils/excutils.py\", line 119, in __exit__\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     six.reraise(self.type_, self.value, self.tb)\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/compute/manager.py\", line 4639, in _swap_volume\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     resize_to)\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 1217, in swap_volume\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     nova_context.get_admin_context(), volume_id)\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/local/lib/python2.7/dist-packages/oslo_versionedobjects/base.py\", line 167, in wrapper\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     args, kwargs)\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/conductor/rpcapi.py\", line 239, in object_class_action\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     objver=objver, args=args, kwargs=kwargs)\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/local/lib/python2.7/dist-packages/oslo_messaging/rpc/client.py\", line 158, in call\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     retry=self.retry)\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/local/lib/python2.7/dist-packages/oslo_messaging/transport.py\", line 90, in _send\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     timeout=timeout, retry=retry)\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/local/lib/python2.7/dist-packages/oslo_messaging/_drivers/amqpdriver.py\", line 431, in send\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     retry=retry)\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/local/lib/python2.7/dist-packages/oslo_messaging/_drivers/amqpdriver.py\", line 422, in _send\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     raise result\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher VolumeBDMNotFound_Remote: No volume Block Device Mapping with id cafc833a-8645-47db-b464-999142afa7be.\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher Traceback (most recent call last):\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher \n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/conductor/manager.py\", line 443, in _object_dispatch\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     return getattr(target, method)(*args, **kwargs)\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher \n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/local/lib/python2.7/dist-packages/oslo_versionedobjects/base.py\", line 169, in wrapper\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     result = fn(cls, context, *args, **kwargs)\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher \n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/objects/block_device.py\", line 204, in get_by_volume_id\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     raise exception.VolumeBDMNotFound(volume_id=volume_id)\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher \n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher VolumeBDMNotFound: No volume Block Device Mapping with id cafc833a-8645-47db-b464-999142afa7be.\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher \n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher \n\nIn first swap, nova will save serial with old volume id in block device mapping.\nTherefore nova will try to find block device mapping through old volume id at second swap.\nIt had been change to new volume id, so nova will raise no bdm not found.", 
    "tags": [
        "swap-disk", 
        "volumes"
    ], 
    "importance": "Low", 
    "heat": 28, 
    "link": "https://bugs.launchpad.net/nova/+bug/1490236", 
    "owner": "https://api.launchpad.net/1.0/~natsume-takashi", 
    "id": 1490236, 
    "index": 564, 
    "created": "2015-08-30 05:20:27.916636+00:00", 
    "title": "Swapping volume can't been swap again", 
    "comments": [
        {
            "content": "If we had two volume, one is attached by a instance, and the other is still available.\nDue to https://bugs.launchpad.net/nova/+bug/1489744, those volumes will stay in wrong status.\nIt will swap successful after fix the issue.\nVolumes will be available and in-use status.\nBut when I try to swap in-use volume with other available volume.\nNova compute will throw following exception:\n\n2015-08-30 04:55:13.772 ERROR oslo_messaging.rpc.dispatcher [req-4d999362-7a13-4b43-8c6a-0d85f3b9aa5b admin admin] Exception during message handling: No volume Block Device Mapping with id cafc833a-8645-47db-b464-999142afa7be.\nTraceback (most recent call last):\n\n  File \"/opt/stack/nova/nova/conductor/manager.py\", line 443, in _object_dispatch\n    return getattr(target, method)(*args, **kwargs)\n\n  File \"/usr/local/lib/python2.7/dist-packages/oslo_versionedobjects/base.py\", line 169, in wrapper\n    result = fn(cls, context, *args, **kwargs)\n\n  File \"/opt/stack/nova/nova/objects/block_device.py\", line 204, in get_by_volume_id\n    raise exception.VolumeBDMNotFound(volume_id=volume_id)\n\nVolumeBDMNotFound: No volume Block Device Mapping with id cafc833a-8645-47db-b464-999142afa7be.\n\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher Traceback (most recent call last):\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/local/lib/python2.7/dist-packages/oslo_messaging/rpc/dispatcher.py\", line 142, in _dispatch_and_reply\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     executor_callback))\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/local/lib/python2.7/dist-packages/oslo_messaging/rpc/dispatcher.py\", line 186, in _dispatch\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     executor_callback)\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/local/lib/python2.7/dist-packages/oslo_messaging/rpc/dispatcher.py\", line 129, in _do_dispatch\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     result = func(ctxt, **new_args)\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/exception.py\", line 89, in wrapped\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     payload)\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/local/lib/python2.7/dist-packages/oslo_utils/excutils.py\", line 119, in __exit__\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     six.reraise(self.type_, self.value, self.tb)\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/exception.py\", line 72, in wrapped\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     return f(self, context, *args, **kw)\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/compute/manager.py\", line 345, in decorated_function\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     LOG.warning(msg, e, instance_uuid=instance_uuid)\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/local/lib/python2.7/dist-packages/oslo_utils/excutils.py\", line 119, in __exit__\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     six.reraise(self.type_, self.value, self.tb)\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/compute/manager.py\", line 316, in decorated_function\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     return function(self, context, *args, **kwargs)\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/compute/manager.py\", line 373, in decorated_function\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     kwargs['instance'], e, sys.exc_info())\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/local/lib/python2.7/dist-packages/oslo_utils/excutils.py\", line 119, in __exit__\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     six.reraise(self.type_, self.value, self.tb)\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/compute/manager.py\", line 361, in decorated_function\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     return function(self, context, *args, **kwargs)\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/compute/manager.py\", line 4706, in swap_volume\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     resize_to)\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/compute/manager.py\", line 4658, in _swap_volume\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     self.volume_api.unreserve_volume(context, new_volume_id)\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/local/lib/python2.7/dist-packages/oslo_utils/excutils.py\", line 119, in __exit__\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     six.reraise(self.type_, self.value, self.tb)\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/compute/manager.py\", line 4639, in _swap_volume\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     resize_to)\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 1217, in swap_volume\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     nova_context.get_admin_context(), volume_id)\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/local/lib/python2.7/dist-packages/oslo_versionedobjects/base.py\", line 167, in wrapper\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     args, kwargs)\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/conductor/rpcapi.py\", line 239, in object_class_action\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     objver=objver, args=args, kwargs=kwargs)\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/local/lib/python2.7/dist-packages/oslo_messaging/rpc/client.py\", line 158, in call\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     retry=self.retry)\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/local/lib/python2.7/dist-packages/oslo_messaging/transport.py\", line 90, in _send\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     timeout=timeout, retry=retry)\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/local/lib/python2.7/dist-packages/oslo_messaging/_drivers/amqpdriver.py\", line 431, in send\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     retry=retry)\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/local/lib/python2.7/dist-packages/oslo_messaging/_drivers/amqpdriver.py\", line 422, in _send\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     raise result\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher VolumeBDMNotFound_Remote: No volume Block Device Mapping with id cafc833a-8645-47db-b464-999142afa7be.\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher Traceback (most recent call last):\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher \n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/conductor/manager.py\", line 443, in _object_dispatch\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     return getattr(target, method)(*args, **kwargs)\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher \n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/local/lib/python2.7/dist-packages/oslo_versionedobjects/base.py\", line 169, in wrapper\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     result = fn(cls, context, *args, **kwargs)\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher \n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/objects/block_device.py\", line 204, in get_by_volume_id\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher     raise exception.VolumeBDMNotFound(volume_id=volume_id)\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher \n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher VolumeBDMNotFound: No volume Block Device Mapping with id cafc833a-8645-47db-b464-999142afa7be.\n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher \n2015-08-30 04:55:13.772 TRACE oslo_messaging.rpc.dispatcher \n\nIn first swap, nova will save serial with old volume id in block device mapping.\nTherefore nova will try to find block device mapping through old volume id at second swap.\nIt had been change to new volume id, so nova will raise no bdm not found.", 
            "date_created": "2015-08-30 05:20:27.916636+00:00", 
            "author": "https://api.launchpad.net/1.0/~lyanchih"
        }, 
        {
            "content": "Hung,\n\nAre you still working on this bug?\nIf you are not, may I become the assignee?", 
            "date_created": "2015-12-04 05:35:11.154539+00:00", 
            "author": "https://api.launchpad.net/1.0/~natsume-takashi"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/257135", 
            "date_created": "2015-12-14 06:03:32.710559+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "@Takashi: It's been more than 60 days without any update. Are you still working on it?", 
            "date_created": "2016-07-06 20:04:51.355325+00:00", 
            "author": "https://api.launchpad.net/1.0/~sarafraj-singh"
        }, 
        {
            "content": "@Sarafraj: Yes.\nThe patch has already been pushed and needs to be reviewed.", 
            "date_created": "2016-07-08 01:20:40.248174+00:00", 
            "author": "https://api.launchpad.net/1.0/~natsume-takashi"
        }, 
        {
            "content": "Change abandoned by Matt Riedemann (<email address hidden>) on branch: master\nReview: https://review.openstack.org/304714", 
            "date_created": "2016-08-04 18:17:35.029791+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "I've marked this as low priority simply because it's a long standing latent bug and swap volume is and admin-only API that was written for volume migration/retype operations in cinder, it shouldn't even really exist as a nova API, but it predates the server external events API.", 
            "date_created": "2016-09-02 13:48:55.620654+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "To clarify the description of this bug, is this the recreate scenario:\n\n1. create a server, A\n2. create two volumes, X and Y\n3. attach volume X to server A\n4. swap volume from X to Y on server A\n5. swap volume from Y to X on server A\n\nIs that correct? The failure happens in step 5?", 
            "date_created": "2016-09-02 15:12:56.122274+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "OK I was able to recreate this at least with the steps in comment 7, the error is here:\n\nhttp://paste.openstack.org/show/566107/\n\nThese are the volumes when I tried swapping them the 2nd time:\n\nstack@newton:~$ cinder list\n+--------------------------------------+-----------+------+------+-------------+----------+--------------------------------------+\n|                  ID                  |   Status  | Name | Size | Volume Type | Bootable |             Attached to              |\n+--------------------------------------+-----------+------+------+-------------+----------+--------------------------------------+\n| 3ac8e20c-b821-43cf-b189-8baafbf09d69 |   in-use  | vol2 |  1   | lvmdriver-1 |  false   | f719dd72-23e1-497c-badd-da7f8fe28f12 |\n| 62ee56ef-5f01-43fc-b4de-176a2299ba56 | available | vol1 |  1   | lvmdriver-1 |  false   |                                      |\n+--------------------------------------+-----------+------+------+-------------+----------+--------------------------------------+\n\nThose were successfully swapped once, but then failed on the 2nd attempt to swap from vol2 to vol1.", 
            "date_created": "2016-09-02 15:32:44.676988+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/257135\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=be553fb15591c6fc212ef3a07c1dd1cbc43d6866\nSubmitter: Jenkins\nBranch:    master\n\ncommit be553fb15591c6fc212ef3a07c1dd1cbc43d6866\nAuthor: Takashi NATSUME <email address hidden>\nDate:   Thu Jun 9 13:01:51 2016 +0900\n\n    Set 'serial' to new volume ID in swap volumes\n    \n    In swap_volume method of nova/virt/libvirt/driver.py,\n    before BDM was got by using the instance's UUID and\n    'serial' of new connection_info as the volume ID,\n    and driver BDM was updated by using the BDM.\n    ('serial' has the volume ID information.)\n    But in _init_volume_connection method in ComputeManager class,\n    'serial' is passed from old connection_info to new connection_info.\n    \n    It works fine in the case that cinder initiates swapping volumes\n    because the ID of the attached volume isn't changed after\n    swapping volumes.\n    But in the case that nova initiates swapping volumes,\n    the ID of the attached volume is changed.\n    \n    So in the case that nova initiated swapping volumes,\n    after swap volume function was performed once,\n    BDM was got by wrong old volume id (serial)\n    when swap volume function was performed for the second time.\n    \n    So if 'serial' of new connection_info is None,\n    it is set to new volume ID.\n    And if cinder 'migrate_volume_completion' API returns\n    old volume ID (the case that cinder initiates swapping volumes),\n    the 'serial' of new connection_info is set to old volume ID.\n    If cinder 'migrate_volume_completion' API returns new volume ID\n    (the case that nova initiated swapping volumes),\n    the 'serial' is left as it is (new volume ID).\n    \n    Change-Id: I86b8fbb09b0f1ed4c667683de3827cd9b63bca7f\n    Closes-Bug: #1490236\n", 
            "date_created": "2016-09-12 11:00:49.873482+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: stable/mitaka\nReview: https://review.openstack.org/369116", 
            "date_created": "2016-09-13 01:47:10.581992+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Please note that the merged solution introduced an end-user regression on detaching volumes https://bugs.launchpad.net/nova/+bug/1625660\n\nRe: the original bug here, I reproduced the problem but I was able to workaround it by first detaching/attaching back the volume to the instance before swapping the volume so I think it's definitely not a huge priority.", 
            "date_created": "2016-09-20 15:13:27.371664+00:00", 
            "author": "https://api.launchpad.net/1.0/~sylvain-bauza"
        }, 
        {
            "content": "This issue was fixed in the openstack/nova 14.0.0.0rc1 release candidate.", 
            "date_created": "2016-09-26 20:14:02.351894+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Change abandoned by Matt Riedemann (<email address hidden>) on branch: stable/mitaka\nReview: https://review.openstack.org/369116", 
            "date_created": "2016-10-15 16:26:17.434017+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/nova 14.0.0.0rc1 release candidate.", 
            "date_created": "2016-10-18 17:01:42.106121+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}