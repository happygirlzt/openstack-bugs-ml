{
    "status": "Invalid", 
    "last_updated": "2014-12-18 18:14:29.706649+00:00", 
    "description": "When trying to live migrate a VM by calling the compute RPC API directly (i.e., not via the novaclient) coupled with the elevated admin context [1], the destination compute service tries to call glance to retrieve the image [2].  However, the destination compute service erroneously raises an exception [4].\n\nThis problem was introduced via the following patch:\nhttps://review.openstack.org/#/c/121692\n\nIt also appears that a similar problem exists within nova too [3].\n\n#############################################################\n\n[1]\nfrom nova import compute\nctxt = context.get_admin_context()\nself.compute_api = compute.API()\nself.compute_api.live_migrate(\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ctxt.elevated(), inst, False, False, host_dict)\n\n#############################################################\n\n[2]\ndef _create_glance_client(context, host, port, use_ssl, version=1):\n\u00a0\u00a0\u00a0\u00a0\"\"\"Instantiate a new glanceclient.Client object.\"\"\"\n\u00a0\u00a0\u00a0\u00a0params = {}\n\u00a0\u00a0\u00a0\u00a0if use_ssl:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0scheme = 'https'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0# https specific params\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0params['insecure'] = CONF.glance.api_insecure\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0params['ssl_compression'] = False\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if CONF.ssl.cert_file:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0params['cert_file'] = CONF.ssl.cert_file\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if CONF.ssl.key_file:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0params['key_file'] = CONF.ssl.key_file\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if CONF.ssl.ca_file:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0params['cacert'] = CONF.ssl.ca_file\n\u00a0\u00a0\u00a0\u00a0else:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0scheme = 'http'\n\n\u00a0\u00a0\u00a0\u00a0if CONF.auth_strategy == 'keystone':\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0# NOTE(isethi): Glanceclient <= 0.9.0.49 accepts only\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0# keyword 'token', but later versions accept both the\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0# header 'X-Auth-Token' and 'token'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0params['token'] = context.auth_token\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0params['identity_headers'] = generate_identity_headers(context)        <<<<<<<<<would return {'X-Auth-Token': None, ....}\n\u00a0\u00a0\u00a0\u00a0if utils.is_valid_ipv6(host):\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0# if so, it is ipv6 address, need to wrap it with '[]'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0host = '[%s]' % host\n\u00a0\u00a0\u00a0\u00a0endpoint = '%s://%s:%s' % (scheme, host, port)\n\u00a0\u00a0\u00a0\u00a0return glanceclient.Client(str(version), endpoint, **params)  <<<<<<<<<<<<<<<params=={'identity_headers':{{'X-Auth-Token': None, ....}}...}\n\n#############################################################\n\n[3]\nnovaclient.client.py:\n\u00a0\u00a0\u00a0\u00a0def http_log_req(self, method, url, kwargs):\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if not self.http_log_debug:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0string_parts = ['curl -i']\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if not kwargs.get('verify', True):\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0string_parts.append(' --insecure')\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0string_parts.append(\" '%s'\" % url)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0string_parts.append(' -X %s' % method)\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0headers = copy.deepcopy(kwargs['headers'])\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0self._redact(headers, ['X-Auth-Token'])                  >>>>>>>>>>>>>>>>>>>here\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0# because dict ordering changes from 2 to 3\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0keys = sorted(headers.keys())\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0for name in keys:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0value = headers[name]\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0header = ' -H \"%s: %s\"' % (name, value)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0string_parts.append(header)\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if 'data' in kwargs:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0data = json.loads(kwargs['data'])\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0self._redact(data, ['auth', 'passwordCredentials', 'password'])\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0string_parts.append(\" -d '%s'\" % json.dumps(data))\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0self._logger.debug(\"REQ: %s\" % \"\".join(string_parts))\n\n#############################################################\n\n[4]\n2014-10-14 00:42:10.699 31346 INFO nova.compute.manager [-] [instance: aa68237f-e669-4025-b16e-f4b50926f7a5] During the sync_power process the instance has moved from host cmo-comp5.ibm.com to host cmo-comp4.ibm.com\n2014-10-14 00:42:10.913 31346 INFO nova.compute.manager [req-7be58838-3ec2-43d4-afd1-23d6b3d5e3de None] [instance: aa68237f-e669-4025-b16e-f4b50926f7a5] Post operation of migration started\n2014-10-14 00:42:11.148 31346 ERROR oslo.messaging.rpc.dispatcher [req-7be58838-3ec2-43d4-afd1-23d6b3d5e3de ] Exception during message handling: 'NoneType' object has no attribute 'encode'\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher Traceback (most recent call last):\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.6/site-packages/oslo/messaging/rpc/dispatcher.py\", line 134, in _dispatch_and_reply\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher     incoming.message))\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.6/site-packages/oslo/messaging/rpc/dispatcher.py\", line 177, in _dispatch\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher     return self._do_dispatch(endpoint, method, ctxt, args)\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.6/site-packages/oslo/messaging/rpc/dispatcher.py\", line 123, in _do_dispatch\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher     result = getattr(endpoint, method)(ctxt, **new_args)\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.6/site-packages/nova/compute/manager.py\", line 418, in decorated_function\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher     return function(self, context, *args, **kwargs)\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.6/site-packages/nova/exception.py\", line 88, in wrapped\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher     payload)\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.6/site-packages/nova/openstack/common/excutils.py\", line 82, in __exit__\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher     six.reraise(self.type_, self.value, self.tb)\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.6/site-packages/nova/exception.py\", line 71, in wrapped\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher     return f(self, context, *args, **kw)\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.6/site-packages/nova/compute/manager.py\", line 330, in decorated_function\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher     kwargs['instance'], e, sys.exc_info())\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.6/site-packages/nova/openstack/common/excutils.py\", line 82, in __exit__\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher     six.reraise(self.type_, self.value, self.tb)\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.6/site-packages/nova/compute/manager.py\", line 318, in decorated_function\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher     return function(self, context, *args, **kwargs)\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.6/site-packages/nova/compute/manager.py\", line 5224, in post_live_migration_at_destination\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher     block_migration, block_device_info)\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.6/site-packages/nova/virt/libvirt/driver.py\", line 5635, in post_live_migration_at_destination\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher     write_to_disk=True)\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.6/site-packages/nova/virt/libvirt/driver.py\", line 4132, in _get_guest_xml\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher     context, self._image_api, image_ref, instance)\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.6/site-packages/nova/compute/utils.py\", line 242, in get_image_metadata\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher     image = image_api.get(context, image_id_or_uri)\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.6/site-packages/nova/image/api.py\", line 89, in get\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher     include_locations=include_locations)\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.6/site-packages/nova/image/glance.py\", line 311, in show\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher     _reraise_translated_image_exception(image_id)\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.6/site-packages/nova/image/glance.py\", line 309, in show\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher     image = self._client.call(context, version, 'get', image_id)\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.6/site-packages/nova/image/glance.py\", line 232, in call\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher     return getattr(client.images, method)(*args, **kwargs)\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.6/site-packages/glanceclient/v1/images.py\", line 126, in get\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher     % urlparse.quote(str(image_id)))\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.6/site-packages/glanceclient/common/http.py\", line 248, in head\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher     return self._request('HEAD', url, **kwargs)\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.6/site-packages/glanceclient/common/http.py\", line 192, in _request\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher     self.log_curl_request(method, conn_url, headers, data, kwargs)\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.6/site-packages/glanceclient/common/http.py\", line 99, in log_curl_request\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher     header = '-H \\'%s: %s\\'' % safe_header(key, value)\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.6/site-packages/glanceclient/common/utils.py\", line 394, in safe_header\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher     v = value.encode('utf-8')\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher AttributeError: 'NoneType' object has no attribute 'encode'\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher\n2014-10-14 00:42:11.152 31346 ERROR oslo.messaging._drivers.common [req-7be58838-3ec2-43d4-afd1-23d6b3d5e3de ] Returning exception 'NoneType' object has no attribute 'encode' to caller", 
    "tags": [], 
    "importance": "Undecided", 
    "heat": 12, 
    "link": "https://bugs.launchpad.net/nova/+bug/1381295", 
    "owner": "None", 
    "id": 1381295, 
    "index": 5213, 
    "created": "2014-10-15 02:21:20.552541+00:00", 
    "title": "safe_header raises AttributeError if X-Auth-Token is None", 
    "comments": [
        {
            "content": "when 3rd-party wants to live-migration a VM to a host by call compute API directly ( not by novaclient ) like code snippet 1 as below, the destination compute service would call glance to get image(refer to Code snippet 2 as below),  the destniation compute service would raise exception as Log snippet 1 as below, this is caused by patch https://review.openstack.org/#/c/121692/2. I think similar problem  exists in nova, too, refer to Code snippet 3.\n\nCode snippet 1\uff1a\nfrom nova import compute\nctxt = context.get_admin_context()\nself.compute_api = compute.API()\nself.compute_api.live_migrate(\n            ctxt.elevated(), inst, False, False, host_dict)\n\n\nCode snippet 2\uff1anova.image.glance.py:\ndef _create_glance_client(context, host, port, use_ssl, version=1):\n    \"\"\"Instantiate a new glanceclient.Client object.\"\"\"\n    params = {}\n    if use_ssl:\n        scheme = 'https'\n        # https specific params\n        params['insecure'] = CONF.glance.api_insecure\n        params['ssl_compression'] = False\n        if CONF.ssl.cert_file:\n            params['cert_file'] = CONF.ssl.cert_file\n        if CONF.ssl.key_file:\n            params['key_file'] = CONF.ssl.key_file\n        if CONF.ssl.ca_file:\n            params['cacert'] = CONF.ssl.ca_file\n    else:\n        scheme = 'http'\n\n    if CONF.auth_strategy == 'keystone':\n        # NOTE(isethi): Glanceclient <= 0.9.0.49 accepts only\n        # keyword 'token', but later versions accept both the\n        # header 'X-Auth-Token' and 'token'\n        params['token'] = context.auth_token\n        params['identity_headers'] = generate_identity_headers(context)        <<<<<<<<<would return {'X-Auth-Token': None, ....}\n    if utils.is_valid_ipv6(host):\n        # if so, it is ipv6 address, need to wrap it with '[]'\n        host = '[%s]' % host\n    endpoint = '%s://%s:%s' % (scheme, host, port)\n    return glanceclient.Client(str(version), endpoint, **params)  <<<<<<<<<<<<<<<params=={'identity_headers':{{'X-Auth-Token': None, ....}}...}\n\n Code snippet 3\uff1a\nnovaclient.client.py:\n    def http_log_req(self, method, url, kwargs):\n        if not self.http_log_debug:\n            return\n\n        string_parts = ['curl -i']\n\n        if not kwargs.get('verify', True):\n            string_parts.append(' --insecure')\n\n        string_parts.append(\" '%s'\" % url)\n        string_parts.append(' -X %s' % method)\n\n        headers = copy.deepcopy(kwargs['headers'])\n        self._redact(headers, ['X-Auth-Token'])                  >>>>>>>>>>>>>>>>>>>here\n        # because dict ordering changes from 2 to 3\n        keys = sorted(headers.keys())\n        for name in keys:\n            value = headers[name]\n            header = ' -H \"%s: %s\"' % (name, value)\n            string_parts.append(header)\n\n        if 'data' in kwargs:\n            data = json.loads(kwargs['data'])\n            self._redact(data, ['auth', 'passwordCredentials', 'password'])\n            string_parts.append(\" -d '%s'\" % json.dumps(data))\n        self._logger.debug(\"REQ: %s\" % \"\".join(string_parts))\n\n\nLog  snippet 1\uff1a\n2014-10-14 00:42:10.699 31346 INFO nova.compute.manager [-] [instance: aa68237f-e669-4025-b16e-f4b50926f7a5] During the sync_power process the instance has moved from host cmo-comp5.ibm.com to host cmo-comp4.ibm.com\n2014-10-14 00:42:10.913 31346 INFO nova.compute.manager [req-7be58838-3ec2-43d4-afd1-23d6b3d5e3de None] [instance: aa68237f-e669-4025-b16e-f4b50926f7a5] Post operation of migration started\n2014-10-14 00:42:11.148 31346 ERROR oslo.messaging.rpc.dispatcher [req-7be58838-3ec2-43d4-afd1-23d6b3d5e3de ] Exception during message handling: 'NoneType' object has no attribute 'encode'\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher Traceback (most recent call last):\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.6/site-packages/oslo/messaging/rpc/dispatcher.py\", line 134, in _dispatch_and_reply\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher     incoming.message))\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.6/site-packages/oslo/messaging/rpc/dispatcher.py\", line 177, in _dispatch\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher     return self._do_dispatch(endpoint, method, ctxt, args)\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.6/site-packages/oslo/messaging/rpc/dispatcher.py\", line 123, in _do_dispatch\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher     result = getattr(endpoint, method)(ctxt, **new_args)\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.6/site-packages/nova/compute/manager.py\", line 418, in decorated_function\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher     return function(self, context, *args, **kwargs)\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.6/site-packages/nova/exception.py\", line 88, in wrapped\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher     payload)\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.6/site-packages/nova/openstack/common/excutils.py\", line 82, in __exit__\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher     six.reraise(self.type_, self.value, self.tb)\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.6/site-packages/nova/exception.py\", line 71, in wrapped\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher     return f(self, context, *args, **kw)\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.6/site-packages/nova/compute/manager.py\", line 330, in decorated_function\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher     kwargs['instance'], e, sys.exc_info())\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.6/site-packages/nova/openstack/common/excutils.py\", line 82, in __exit__\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher     six.reraise(self.type_, self.value, self.tb)\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.6/site-packages/nova/compute/manager.py\", line 318, in decorated_function\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher     return function(self, context, *args, **kwargs)\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.6/site-packages/nova/compute/manager.py\", line 5224, in post_live_migration_at_destination\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher     block_migration, block_device_info)\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.6/site-packages/nova/virt/libvirt/driver.py\", line 5635, in post_live_migration_at_destination\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher     write_to_disk=True)\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.6/site-packages/nova/virt/libvirt/driver.py\", line 4132, in _get_guest_xml\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher     context, self._image_api, image_ref, instance)\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.6/site-packages/nova/compute/utils.py\", line 242, in get_image_metadata\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher     image = image_api.get(context, image_id_or_uri)\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.6/site-packages/nova/image/api.py\", line 89, in get\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher     include_locations=include_locations)\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.6/site-packages/nova/image/glance.py\", line 311, in show\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher     _reraise_translated_image_exception(image_id)\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.6/site-packages/nova/image/glance.py\", line 309, in show\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher     image = self._client.call(context, version, 'get', image_id)\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.6/site-packages/nova/image/glance.py\", line 232, in call\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher     return getattr(client.images, method)(*args, **kwargs)\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.6/site-packages/glanceclient/v1/images.py\", line 126, in get\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher     % urlparse.quote(str(image_id)))\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.6/site-packages/glanceclient/common/http.py\", line 248, in head\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher     return self._request('HEAD', url, **kwargs)\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.6/site-packages/glanceclient/common/http.py\", line 192, in _request\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher     self.log_curl_request(method, conn_url, headers, data, kwargs)\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.6/site-packages/glanceclient/common/http.py\", line 99, in log_curl_request\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher     header = '-H \\'%s: %s\\'' % safe_header(key, value)\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.6/site-packages/glanceclient/common/utils.py\", line 394, in safe_header\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher     v = value.encode('utf-8')\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher AttributeError: 'NoneType' object has no attribute 'encode'\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher\n2014-10-14 00:42:11.152 31346 ERROR oslo.messaging._drivers.common [req-7be58838-3ec2-43d4-afd1-23d6b3d5e3de ] Returning exception 'NoneType' object has no attribute 'encode' to caller", 
            "date_created": "2014-10-15 02:21:20.552541+00:00", 
            "author": "https://api.launchpad.net/1.0/~liuhoug"
        }, 
        {
            "content": "The nature of this bug report is unclear to me.  Are you adding out of tree code to the nova codebase (snippet 1) that is failing? How can I reproduce this bug?", 
            "date_created": "2014-10-15 20:22:04.520637+00:00", 
            "author": "https://api.launchpad.net/1.0/~jogo"
        }, 
        {
            "content": "this bug occurs when 3rd-party wants to live-migration a VM to a host by call compute API directly ( not by novaclient ) with context by context.get_admin_context().elevated,  the change below can simulate it.(restart conductor service after change nova/conductor/tasks/live_migrate.py and then do live-migration operation)\n\nnova/conductor/tasks/live_migrate.py:\n\nclass LiveMigrationTask(object):\n    def __init__(self, context, instance, destination,\n                 block_migration, disk_over_commit):\n\n        self.context = context\n        from nova import context\n        self.context = context.get_admin_context().elevated()            >>>>>>>>>>>add this  two line\n", 
            "date_created": "2014-10-16 02:45:40.871840+00:00", 
            "author": "https://api.launchpad.net/1.0/~liuhoug"
        }, 
        {
            "content": "when we try to call nova.compute.utils.get_image_metadata with context.get_admin_context(), it would raise excetption.\nrefer to https://review.openstack.org/#/c/101005/\n\nnova/compute/utils.py:\ndef get_image_metadata(context, image_api, image_id_or_uri, instance):\n    image_system_meta = {}\n    # In case of boot from volume, image_id_or_uri may be None\n    if image_id_or_uri is not None:\n        # If the base image is still available, get its metadata\n        try:\n            image = image_api.get(context, image_id_or_uri)\n        except (exception.ImageNotAuthorized,                     >>>>>>>>>>cannot get all exception\n                exception.ImageNotFound,\n                exception.Invalid) as e:\n            LOG.warning(_LW(\"Can't access image %(image_id)s: %(error)s\"),\n                        {\"image_id\": image_id_or_uri, \"error\": e},\n                        instance=instance)\n        else:\n            flavor = flavors.extract_flavor(instance)\n            image_system_meta = utils.get_system_metadata_from_image(image,\n                                                                     flavor)\n\n    # Get the system metadata from the instance\n    system_meta = utils.instance_sys_meta(instance)\n\n    # Merge the metadata from the instance with the image's, if any\n    system_meta.update(image_system_meta)\n\n    # Convert the system metadata to image metadata\n    return utils.get_image_from_system_metadata(system_meta)", 
            "date_created": "2014-10-16 03:24:21.799882+00:00", 
            "author": "https://api.launchpad.net/1.0/~liuhoug"
        }, 
        {
            "content": "I think  we should mask token  only  if the token value is string-like type for the robustness of the code.\nfor example in the file of https://review.openstack.org/#/c/121692/2/glanceclient/common/http.py,\n we should use code below to replace line 98, (the check is in need, as line 106 and 112 are)\n\nif not isinstance(value, six.string_types):\n    value = '*' * 3\t\t\nheader = '-H \\'%s: %s\\'' % safe_header(key, value)", 
            "date_created": "2014-10-16 08:45:23.670735+00:00", 
            "author": "https://api.launchpad.net/1.0/~liuhoug"
        }, 
        {
            "content": "jogo - I tried to update the description to make it a little more clear as I understood what was being suggested.  In a nutshell, it sounds like when using the RPC APIs, one can't call live migration using the admin context (even when elevated) without getting an encoding error.", 
            "date_created": "2014-10-17 03:58:19.512537+00:00", 
            "author": "https://api.launchpad.net/1.0/~jwcroppe"
        }, 
        {
            "content": "Is this a nova problem or a glanceclient problem?  Or both?", 
            "date_created": "2014-10-17 04:50:26.511724+00:00", 
            "author": "https://api.launchpad.net/1.0/~jwcroppe"
        }, 
        {
            "content": "Looping in glance-client team due to the snippet from [4] in the description:\n\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher File \"/usr/lib/python2.6/site-packages/glanceclient/common/utils.py\", line 394, in safe_header\n2014-10-14 00:42:11.148 31346 TRACE oslo.messaging.rpc.dispatcher v = value.encode('utf-8')\n\nThough, not sure if this is just due to nova not sending in the right details either...", 
            "date_created": "2014-10-17 06:24:55.065603+00:00", 
            "author": "https://api.launchpad.net/1.0/~jwcroppe"
        }, 
        {
            "content": "What's the key in the request header to glanceclient that has the null value, x-auth-token?  I see this change:\n\nhttps://review.openstack.org/#/c/121692/2/glanceclient/common/utils.py\n\nAnd in safe_header how it doesn't check if value is None, but what is the key?  Can you debug to the point of figuring what that header key is so we can figure out if nova is doing something incorrectly or what the bug in glanceclient is?", 
            "date_created": "2014-10-17 13:50:46.602834+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Assuming the null value is for the x-auth-token key, the glanceclient http connection doesn't enforce that auth token is set, it just tries to get it if provided and put's it in the header:\n\nhttp://git.openstack.org/cgit/openstack/python-glanceclient/tree/glanceclient/common/http.py?id=0.14.1#n52\n\nAnd in the nova.image.glance._create_glance_client code, if auth_strategy isn't keystone (which it is by default but I guess you could not use keystone), then the token isn't set on the client connection and if you're not using ssl that's how you could get into this state (since the glance client http connection isn't requiring an auth token):\n\nhttp://git.openstack.org/cgit/openstack/nova/tree/nova/image/glance.py?id=2014.2#n150\n\nIn this case, are you using auth_strategy=keystone in your nova.conf?  I guess it doesn't matter since we still have an exposure here, and we definitely don't test any non-keystone auth strategies in the community CI.", 
            "date_created": "2014-10-17 14:21:23.303662+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/129289", 
            "date_created": "2014-10-17 14:53:58.872617+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/129289\nCommitted: https://git.openstack.org/cgit/openstack/python-glanceclient/commit/?id=8c159a2eb4d61f2b9691fbfa1288bcda2156f3f1\nSubmitter: Jenkins\nBranch:    master\n\ncommit 8c159a2eb4d61f2b9691fbfa1288bcda2156f3f1\nAuthor: Matt Riedemann <email address hidden>\nDate:   Fri Oct 17 07:53:05 2014 -0700\n\n    Don't set X-Auth-Token key in http session header if no token provided\n    \n    Commit f980fc549247fa2deb87dfacebc6d8d13ccd45d1 changed how the\n    X-Auth-Token header was scrubbed when logging the request, but\n    effectively made the value required which can lead to an AttributeError\n    if the value for the header is None.\n    \n    The value can be None if you're using Nova but don't have Nova\n    configured with auth_strategy='keystone' (see\n    nova.image.glance._create_glance_client for details).\n    \n    This patch simply checks if the auth_token is set in the http client\n    object and if not, it doesn't set the X-Auth-Token key in the session\n    header.\n    \n    Closes-Bug: #1381295\n    \n    Change-Id: Ie285d5253df28a9f0f964147a53c99ceaa919c5c\n", 
            "date_created": "2014-11-20 09:53:55.660199+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}