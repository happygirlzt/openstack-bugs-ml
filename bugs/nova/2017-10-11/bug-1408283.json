{
    "status": "Expired", 
    "last_updated": "2016-07-05 09:56:14.855613+00:00", 
    "description": "Description of problem:  Ran #nova list --all-tenats as admin, figured I'd check nova list-secgroup on one of the instances. By chance the instance I chose happened to run under another tenant not admin's, critical for this bug, as if I'd have chosen an instance from admin tenant bug doesn't happen. \n\nAny way #nova list-secgroup only accepts instanceID not instanceName as mentioned on command's help,\n\n# nova list-secgroup tshefitest\nERROR: No server with a name or ID of 'tshefitest' exists.\n\nRunning same command with tshefitest instance's ID works fine\n\n# nova list-secgroup 23244bce-0232-45e6-9a1d-10e493593b7d\n+--------------------------------------+---------+-------------+\n| Id                                   | Name    | Description |\n+--------------------------------------+---------+-------------+\n| 442f555c-897b-4ad3-b46e-85c5e84ff47d | default | default     |\n+--------------------------------------+---------+-------------+\n\nIf however I do same test on an instance belonging to  admin tenant both paramaters  instanceName / instanceID work fine. \n\n\nVersion-Release number of selected component (if applicable):\nRHEL7 \npython-novaclient-2.17.0-2.el7ost.noarch\nHA deployment if it matters. \n\nSame happens on Juno as well\npython-novaclient-2.20.0-1.el7ost.noarch\n\n\nHow reproducible:\nEvery time\n\nSteps to Reproduce:\n1. Create a new user and tenant, admin user shouldn't be a member of this new tenant!  \n2. Create an instance under above tenant. \n3. Create another instance this time under admin tenant. \n4. under cli with admin credentials run  #nova list --all-tenants \n4. Notice name and instance id's for both instances. \n5. #nova list-secgroup instanceName of instance from step 2 -> you should get the error message. \n6. #nova list-secgroup instanceID of instance from step 2 will work as expected. \n\n7. Nova list-secgroup instanceName (or instanceID) from step3 both work fine. \n\nActual results:\nERROR: No server with a name or ID of 'tshefitest' exists.\n\nExpected results:\nIMHO if this command works fine with instanceID it should also work with instanceName even if instance isn't running under admin tenant. \n\nAdditional info:\nRunning with --debug  exposes this:\n\nDEBUG (shell:783) No server with a name or ID of 'tshefitest' exists.\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/site-packages/novaclient/shell.py\", line 780, in main\n    OpenStackComputeShell().main(map(strutils.safe_decode, sys.argv[1:]))\n  File \"/usr/lib/python2.7/site-packages/novaclient/shell.py\", line 716, in main\n    args.func(self.cs, args)\n  File \"/usr/lib/python2.7/site-packages/novaclient/v1_1/shell.py\", line 2018, in do_list_secgroup\n    server = _find_server(cs, args.server)\n  File \"/usr/lib/python2.7/site-packages/novaclient/v1_1/shell.py\", line 1549, in _find_server\n    return utils.find_resource(cs.servers, server)\n  File \"/usr/lib/python2.7/site-packages/novaclient/utils.py\", line 244, in find_resource\n    raise exceptions.CommandError(msg)\nCommandError: No server with a name or ID of 'tshefitest' exists.\nERROR: No server with a name or ID of 'tshefitest' exists.\n\nOn Juno same issue error:\n# nova list-secgroup tshefi1\nERROR (CommandError): No server with a name or ID of 'tshefi1' exists.", 
    "tags": [], 
    "importance": "Undecided", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1408283", 
    "owner": "None", 
    "id": 1408283, 
    "index": 5365, 
    "created": "2015-01-07 11:42:31.004335+00:00", 
    "title": "nova list-secgroup instanceName fails if instance isn't running under admin tenant", 
    "comments": [
        {
            "content": "Description of problem:  Ran #nova list --all-tenats as admin, figured I'd check nova list-secgroup on one of the instances. By chance the instance I chose happened to run under another tenant not admin's, critical for this bug, as if I'd have chosen an instance from admin tenant bug doesn't happen. \n\nAny way #nova list-secgroup only accepts instanceID not instanceName as mentioned on command's help,\n\n# nova list-secgroup tshefitest\nERROR: No server with a name or ID of 'tshefitest' exists.\n\nRunning same command with tshefitest instance's ID works fine\n\n# nova list-secgroup 23244bce-0232-45e6-9a1d-10e493593b7d\n+--------------------------------------+---------+-------------+\n| Id                                   | Name    | Description |\n+--------------------------------------+---------+-------------+\n| 442f555c-897b-4ad3-b46e-85c5e84ff47d | default | default     |\n+--------------------------------------+---------+-------------+\n\nIf however I do same test on an instance belonging to  admin tenant both paramaters  instanceName / instanceID work fine. \n\n\nVersion-Release number of selected component (if applicable):\nRHEL7 \npython-novaclient-2.17.0-2.el7ost.noarch\nHA deployment if it matters. \n\nSame happens on Juno as well\npython-novaclient-2.20.0-1.el7ost.noarch\n\n\nHow reproducible:\nEvery time\n\nSteps to Reproduce:\n1. Create a new user and tenant, admin user shouldn't be a member of this new tenant!  \n2. Create an instance under above tenant. \n3. Create another instance this time under admin tenant. \n4. under cli with admin credentials run  #nova list --all-tenants \n4. Notice name and instance id's for both instances. \n5. #nova list-secgroup instanceName of instance from step 2 -> you should get the error message. \n6. #nova list-secgroup instanceID of instance from step 2 will work as expected. \n\n7. Nova list-secgroup instanceName (or instanceID) from step3 both work fine. \n\nActual results:\nERROR: No server with a name or ID of 'tshefitest' exists.\n\nExpected results:\nIMHO if this command works fine with instanceID it should also work with instanceName even if instance isn't running under admin tenant. \n\nAdditional info:\nRunning with --debug  exposes this:\n\nDEBUG (shell:783) No server with a name or ID of 'tshefitest' exists.\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/site-packages/novaclient/shell.py\", line 780, in main\n    OpenStackComputeShell().main(map(strutils.safe_decode, sys.argv[1:]))\n  File \"/usr/lib/python2.7/site-packages/novaclient/shell.py\", line 716, in main\n    args.func(self.cs, args)\n  File \"/usr/lib/python2.7/site-packages/novaclient/v1_1/shell.py\", line 2018, in do_list_secgroup\n    server = _find_server(cs, args.server)\n  File \"/usr/lib/python2.7/site-packages/novaclient/v1_1/shell.py\", line 1549, in _find_server\n    return utils.find_resource(cs.servers, server)\n  File \"/usr/lib/python2.7/site-packages/novaclient/utils.py\", line 244, in find_resource\n    raise exceptions.CommandError(msg)\nCommandError: No server with a name or ID of 'tshefitest' exists.\nERROR: No server with a name or ID of 'tshefitest' exists.\n\nOn Juno same issue error:\n# nova list-secgroup tshefi1\nERROR (CommandError): No server with a name or ID of 'tshefi1' exists.", 
            "date_created": "2015-01-07 11:42:31.004335+00:00", 
            "author": "https://api.launchpad.net/1.0/~tshefi"
        }, 
        {
            "content": "\nThis is an automated cleanup. This bug report has been closed because it\nis older than 18 months and there is no open code change to fix this.\nAfter this time it is unlikely that the circumstances which lead to\nthe observed issue can be reproduced.\n\nIf you can reproduce the bug, please:\n* reopen the bug report (set to status \"New\")\n* AND add the detailed steps to reproduce the issue (if applicable)\n* AND leave a comment \"CONFIRMED FOR: <RELEASE_NAME>\"\n  Only still supported release names are valid (LIBERTY, MITAKA, OCATA, NEWTON).\n  Valid example: CONFIRMED FOR: LIBERTY\n", 
            "date_created": "2016-07-05 09:56:14.346273+00:00", 
            "author": "https://api.launchpad.net/1.0/~mzoeller"
        }
    ]
}