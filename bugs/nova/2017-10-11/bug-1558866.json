{
    "status": "Fix Released", 
    "last_updated": "2017-06-16 17:42:35.748523+00:00", 
    "description": "If an image is imported with an invalid Architecture, instances are unable to launch and cause a ValueError exception. This exception is only visible in logs and UI only tells user an exception occurred. Running Mirantis Openstack 8.0 (nova-api 2:12.0.0-1~u14.04+mos43)\n\n2016-03-18 01:13:35.846 28025 ERROR nova.api.openstack.extensions   File \"/usr/lib/python2.7/dist-packages/nova/objects/image_meta.py\", line 457, in from_dict\n2016-03-18 01:13:35.846 28025 ERROR nova.api.openstack.extensions     obj._set_attr_from_legacy_names(image_props)\n2016-03-18 01:13:35.846 28025 ERROR nova.api.openstack.extensions   File \"/usr/lib/python2.7/dist-packages/nova/objects/image_meta.py\", line 388, in _set_attr_from_legacy_names\n2016-03-18 01:13:35.846 28025 ERROR nova.api.openstack.extensions     setattr(self, new_key, image_props[legacy_key])\n2016-03-18 01:13:35.846 28025 ERROR nova.api.openstack.extensions   File \"/usr/lib/python2.7/dist-packages/oslo_versionedobjects/base.py\", line 72, in setter\n2016-03-18 01:13:35.846 28025 ERROR nova.api.openstack.extensions     field_value = field.coerce(self, name, value)\n2016-03-18 01:13:35.846 28025 ERROR nova.api.openstack.extensions   File \"/usr/lib/python2.7/dist-packages/oslo_versionedobjects/fields.py\", line 189, in coerce\n2016-03-18 01:13:35.846 28025 ERROR nova.api.openstack.extensions     return self._type.coerce(obj, attr, value)\n2016-03-18 01:13:35.846 28025 ERROR nova.api.openstack.extensions   File \"/usr/lib/python2.7/dist-packages/nova/objects/fields.py\", line 87, in coerce\n2016-03-18 01:13:35.846 28025 ERROR nova.api.openstack.extensions     raise ValueError(msg)\n2016-03-18 01:13:35.846 28025 ERROR nova.api.openstack.extensions ValueError: Architecture name 'x64' is not valid\n2016-03-18 01:13:35.846 28025 ERROR nova.api.openstack.extensions\n2016-03-18 01:13:35.848 28025 INFO nova.api.openstack.wsgi [req-f56ff830-6e2d-46ab-b1a3-50f021725374 813401d7df1d4ad68388dee16def6a6b 9e90e9d0bb8c43b3a6fa3d2b1fb08efa - - -] HTTP exception thrown: Unexpected API Error. Please report this at http://bugs.launchpad.net/nova/ and attach the Nova API log if possible.\n\nReproduce:\nImport image with architecture named 'x64' (or presumably anything, since it's a freeform input), try to launch instance of image.\n\nExpected Result:\nImage launches, or if it cannot and error is needed, error should tell user there is an invalid architecture. If architecture can only be chosen from limited options, it should probably be a combobox rather than a freeform input when creating a new image.\n\nActual Result:\nGeneric API exception. Image fails to launch.", 
    "tags": [
        "api", 
        "images", 
        "liberty-backport-potential", 
        "mitaka-backport-potential", 
        "unified-objects"
    ], 
    "importance": "Medium", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1558866", 
    "owner": "https://api.launchpad.net/1.0/~mriedem", 
    "id": 1558866, 
    "index": 4485, 
    "created": "2016-03-18 01:48:17.189549+00:00", 
    "title": "Architecture ValueError Uncaught API Exception", 
    "comments": [
        {
            "content": "If an image is imported with an invalid Architecture, instances are unable to launch and cause a ValueError exception. This exception is only visible in logs and UI only tells user an exception occurred. Running Mirantis Openstack 8.0 (nova-api 2:12.0.0-1~u14.04+mos43)\n\n2016-03-18 01:13:35.846 28025 ERROR nova.api.openstack.extensions   File \"/usr/lib/python2.7/dist-packages/nova/objects/image_meta.py\", line 457, in from_dict\n2016-03-18 01:13:35.846 28025 ERROR nova.api.openstack.extensions     obj._set_attr_from_legacy_names(image_props)\n2016-03-18 01:13:35.846 28025 ERROR nova.api.openstack.extensions   File \"/usr/lib/python2.7/dist-packages/nova/objects/image_meta.py\", line 388, in _set_attr_from_legacy_names\n2016-03-18 01:13:35.846 28025 ERROR nova.api.openstack.extensions     setattr(self, new_key, image_props[legacy_key])\n2016-03-18 01:13:35.846 28025 ERROR nova.api.openstack.extensions   File \"/usr/lib/python2.7/dist-packages/oslo_versionedobjects/base.py\", line 72, in setter\n2016-03-18 01:13:35.846 28025 ERROR nova.api.openstack.extensions     field_value = field.coerce(self, name, value)\n2016-03-18 01:13:35.846 28025 ERROR nova.api.openstack.extensions   File \"/usr/lib/python2.7/dist-packages/oslo_versionedobjects/fields.py\", line 189, in coerce\n2016-03-18 01:13:35.846 28025 ERROR nova.api.openstack.extensions     return self._type.coerce(obj, attr, value)\n2016-03-18 01:13:35.846 28025 ERROR nova.api.openstack.extensions   File \"/usr/lib/python2.7/dist-packages/nova/objects/fields.py\", line 87, in coerce\n2016-03-18 01:13:35.846 28025 ERROR nova.api.openstack.extensions     raise ValueError(msg)\n2016-03-18 01:13:35.846 28025 ERROR nova.api.openstack.extensions ValueError: Architecture name 'x64' is not valid\n2016-03-18 01:13:35.846 28025 ERROR nova.api.openstack.extensions\n2016-03-18 01:13:35.848 28025 INFO nova.api.openstack.wsgi [req-f56ff830-6e2d-46ab-b1a3-50f021725374 813401d7df1d4ad68388dee16def6a6b 9e90e9d0bb8c43b3a6fa3d2b1fb08efa - - -] HTTP exception thrown: Unexpected API Error. Please report this at http://bugs.launchpad.net/nova/ and attach the Nova API log if possible.\n\nReproduce:\nImport image with architecture named 'x64' (or presumably anything, since it's a freeform input), try to launch instance of image.\n\nExpected Result:\nImage launches, or if it cannot and error is needed, error should tell user there is an invalid architecture. If architecture can only be chosen from limited options, it should probably be a combobox rather than a freeform input when creating a new image.\n\nActual Result:\nGeneric API exception. Image fails to launch.", 
            "date_created": "2016-03-18 01:48:17.189549+00:00", 
            "author": "https://api.launchpad.net/1.0/~russell-holloway"
        }, 
        {
            "content": "I don't know what the Mirantis OpenStack UI is like, since that's a product, but to clarify something, do you already have an image with the invalid architecture uploaded to glance and you're trying to boot an instance from it? Or something else?", 
            "date_created": "2016-03-18 20:16:53.889177+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "The valid architectures for an image in nova are defined here:\n\nhttps://github.com/openstack/nova/blob/13.0.0.0rc1/nova/compute/arch.py#L72\n\nI've added Horizon to this bug report since Horizon could create a dropdown box using that list (although horizon might not be able to import that code and it's not available in the API/CLI, so it might just have to be copied into horizon and kept synchronized with nova).\n\nFor nova, we could do some image property validation for the architecture in the API so we could fail with a better error than what you get from the compute side when spawn fails.", 
            "date_created": "2016-03-21 16:21:23.186231+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/295395", 
            "date_created": "2016-03-21 16:34:21.305852+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "To clarify, I already had an image uploaded with invalid architecture, and then when user tries to launch it they get the above message. Since users can upload images and fill in architecture themselves, and may be less familiar with components under the hood, better validation or alerts for glance / nova / horizon could be useful, since it doesn't seem there is validation on any of these components for architecture which can ultimately lead to the issue.\n\nAs for Mirantis, it's a vendor distribution but just uses all the same open source components from the ecosystem but pin to specific versions of components that are supposed to be stable together supposedly. The UI is horizon.", 
            "date_created": "2016-03-21 17:04:24.544275+00:00", 
            "author": "https://api.launchpad.net/1.0/~russell-holloway"
        }, 
        {
            "content": "Russell, I have a fix up for the nova API validation part, I just need to write a functional test for it. If you could validate that patch resolves your issue it'd be helpful.", 
            "date_created": "2016-03-21 19:18:13.844021+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/295395\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=52b165bf1cf019353cd90b427ac3dd9991de48c7\nSubmitter: Jenkins\nBranch:    master\n\ncommit 52b165bf1cf019353cd90b427ac3dd9991de48c7\nAuthor: Matt Riedemann <email address hidden>\nDate:   Mon Mar 21 12:31:19 2016 -0400\n\n    Return 400 on boot for invalid image metadata\n    \n    Horizon allows a free-form input field for architecture\n    when creating an image. However, the architecture in\n    the image metadata is validated against nova.compute.arch.ALL\n    so when converting the image metadata in the compute API\n    boot validation, if we hit a ValueError we should raise\n    an appropriate exception so the REST API will return a 400\n    rather than a 500.\n    \n    Change-Id: Ib01b4b088fec065c671f83f5912e928b4d7fec71\n    Closes-Bug: #1558866\n", 
            "date_created": "2016-04-09 03:00:55.781037+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: stable/mitaka\nReview: https://review.openstack.org/303706", 
            "date_created": "2016-04-09 12:43:55.835641+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/303706\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=1397faaa041b2c73050bb6225e14f31f3dd4c826\nSubmitter: Jenkins\nBranch:    stable/mitaka\n\ncommit 1397faaa041b2c73050bb6225e14f31f3dd4c826\nAuthor: Matt Riedemann <email address hidden>\nDate:   Mon Mar 21 12:31:19 2016 -0400\n\n    Return 400 on boot for invalid image metadata\n    \n    Horizon allows a free-form input field for architecture\n    when creating an image. However, the architecture in\n    the image metadata is validated against nova.compute.arch.ALL\n    so when converting the image metadata in the compute API\n    boot validation, if we hit a ValueError we should raise\n    an appropriate exception so the REST API will return a 400\n    rather than a 500.\n    \n    Change-Id: Ib01b4b088fec065c671f83f5912e928b4d7fec71\n    Closes-Bug: #1558866\n    (cherry picked from commit 52b165bf1cf019353cd90b427ac3dd9991de48c7)\n", 
            "date_created": "2016-04-11 03:47:51.307000+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: stable/liberty\nReview: https://review.openstack.org/304750", 
            "date_created": "2016-04-12 16:23:43.801115+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/304750\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=4817f910bee28ba47abbcb3297bdafe3164de60e\nSubmitter: Jenkins\nBranch:    stable/liberty\n\ncommit 4817f910bee28ba47abbcb3297bdafe3164de60e\nAuthor: Matt Riedemann <email address hidden>\nDate:   Mon Mar 21 12:31:19 2016 -0400\n\n    Return 400 on boot for invalid image metadata\n    \n    Horizon allows a free-form input field for architecture\n    when creating an image. However, the architecture in\n    the image metadata is validated against nova.compute.arch.ALL\n    so when converting the image metadata in the compute API\n    boot validation, if we hit a ValueError we should raise\n    an appropriate exception so the REST API will return a 400\n    rather than a 500.\n    \n    Change-Id: Ib01b4b088fec065c671f83f5912e928b4d7fec71\n    Closes-Bug: #1558866\n    (cherry picked from commit 52b165bf1cf019353cd90b427ac3dd9991de48c7)\n", 
            "date_created": "2016-04-13 17:11:52.528849+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/nova 12.0.3 release.", 
            "date_created": "2016-04-14 12:29:01.341843+00:00", 
            "author": "https://api.launchpad.net/1.0/~dims-v"
        }, 
        {
            "content": "This issue was fixed in the openstack/nova 14.0.0.0b1 development milestone.", 
            "date_created": "2016-06-02 19:34:54.759234+00:00", 
            "author": "https://api.launchpad.net/1.0/~dims-v"
        }, 
        {
            "content": "This issue was fixed in the openstack/nova 13.1.0 release.", 
            "date_created": "2016-06-14 15:42:20.424204+00:00", 
            "author": "https://api.launchpad.net/1.0/~doug-hellmann"
        }
    ]
}