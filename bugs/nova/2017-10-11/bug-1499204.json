{
    "status": "Fix Released", 
    "last_updated": "2016-01-21 13:43:43.039605+00:00", 
    "description": "in pci utils the is_physical_function function check it based on existing virtfn* symbolic link. The check is incorrect because\nif the PF doen't enable SR-IOV meaning sriov_numvfs is set to zero there are no  virtfn* ljnks and the nova-compute recognize it as VF.\n\nsee: \nroot@r-ufm160:/opt/stack/logs# ls /sys/bus/pci/devices/0000\\:03\\:00.0/\nbroken_parity_status      d3cold_allowed   enable            iommu_group    modalias   pools      reset         sriov_numvfs      uevent\nclass                     device           infiniband        irq            msi_bus    power      resource      sriov_totalvfs    vendor\ncommands_cache            dma_mask_bits    infiniband_cm     local_cpulist  msi_irqs   real_miss  resource0     subsystem         vpd\nconfig                    driver           infiniband_mad    local_cpus     net        remove     resource0_wc  subsystem_device\nconsistent_dma_mask_bits  driver_override  infiniband_verbs  mlx5_num_vfs   numa_node  rescan     sriov         subsystem_vendor\nroot@r-ufm160:/opt/stack/logs# cat /sys/bus/pci/devices/0000\\:03\\:00.0/sriov_numvfs \n0\n\n\nroot@r-ufm160:/opt/stack/logs# echo 4 > /sys/bus/pci/devices/0000\\:03\\:00.0/sriov_numvfs\nroot@r-ufm160:/opt/stack/logs# ls /sys/bus/pci/devices/0000\\:03\\:00.0/\nbroken_parity_status      d3cold_allowed   enable            iommu_group    modalias   pools      reset         sriov_numvfs      uevent   virtfn3\nclass                     device           infiniband        irq            msi_bus    power      resource      sriov_totalvfs    vendor   vpd\ncommands_cache            dma_mask_bits    infiniband_cm     local_cpulist  msi_irqs   real_miss  resource0     subsystem         virtfn0\nconfig                    driver           infiniband_mad    local_cpus     net        remove     resource0_wc  subsystem_device  virtfn1\nconsistent_dma_mask_bits  driver_override  infiniband_verbs  mlx5_num_vfs   numa_node  rescan     sriov         subsystem_vendor  virtfn2", 
    "tags": [
        "passthrough", 
        "pci"
    ], 
    "importance": "Undecided", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1499204", 
    "owner": "https://api.launchpad.net/1.0/~moshele", 
    "id": 1499204, 
    "index": 5786, 
    "created": "2015-09-24 07:33:52.386152+00:00", 
    "title": "wrong check for physical function in pci utils", 
    "comments": [
        {
            "content": "in pci utils the is_physical_function function check it based on existing virtfn* symbolic link. The check is incorrect because\nif the PF doen't enable SR-IOV meaning sriov_numvfs is set to zero there are no  virtfn* ljnks and the nova-compute recognize it as VF.\n\nsee: \nroot@r-ufm160:/opt/stack/logs# ls /sys/bus/pci/devices/0000\\:03\\:00.0/\nbroken_parity_status      d3cold_allowed   enable            iommu_group    modalias   pools      reset         sriov_numvfs      uevent\nclass                     device           infiniband        irq            msi_bus    power      resource      sriov_totalvfs    vendor\ncommands_cache            dma_mask_bits    infiniband_cm     local_cpulist  msi_irqs   real_miss  resource0     subsystem         vpd\nconfig                    driver           infiniband_mad    local_cpus     net        remove     resource0_wc  subsystem_device\nconsistent_dma_mask_bits  driver_override  infiniband_verbs  mlx5_num_vfs   numa_node  rescan     sriov         subsystem_vendor\nroot@r-ufm160:/opt/stack/logs# cat /sys/bus/pci/devices/0000\\:03\\:00.0/sriov_numvfs \n0\n\n\nroot@r-ufm160:/opt/stack/logs# echo 4 > /sys/bus/pci/devices/0000\\:03\\:00.0/sriov_numvfs\nroot@r-ufm160:/opt/stack/logs# ls /sys/bus/pci/devices/0000\\:03\\:00.0/\nbroken_parity_status      d3cold_allowed   enable            iommu_group    modalias   pools      reset         sriov_numvfs      uevent   virtfn3\nclass                     device           infiniband        irq            msi_bus    power      resource      sriov_totalvfs    vendor   vpd\ncommands_cache            dma_mask_bits    infiniband_cm     local_cpulist  msi_irqs   real_miss  resource0     subsystem         virtfn0\nconfig                    driver           infiniband_mad    local_cpus     net        remove     resource0_wc  subsystem_device  virtfn1\nconsistent_dma_mask_bits  driver_override  infiniband_verbs  mlx5_num_vfs   numa_node  rescan     sriov         subsystem_vendor  virtfn2", 
            "date_created": "2015-09-24 07:33:52.386152+00:00", 
            "author": "https://api.launchpad.net/1.0/~moshele"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/227160", 
            "date_created": "2015-09-24 07:39:42.647211+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "", 
            "date_created": "2015-11-08 12:10:15.030136+00:00", 
            "author": "https://api.launchpad.net/1.0/~moshele"
        }, 
        {
            "content": "", 
            "date_created": "2015-11-08 12:10:28.621859+00:00", 
            "author": "https://api.launchpad.net/1.0/~moshele"
        }, 
        {
            "content": "I added the n-cpu.log and q-srv.log \nthe vm failed of vif bind error because nova-cmpute create port with  pci_vendor 15b3:1013 which is a pf and not a vf \n015-11-08 14:04:11.477 DEBUG neutron.plugins.ml2.drivers.mech_sriov.mech_driver.mech_driver [req-8dc2102e-df03-454a-a0e9-87ad58a7db56 neutron service] Unsupported pci_vendor 15b3:1013 _check_supported_pci_vendor_device /opt/stack/neutron/neutron/plugins/ml2/drivers/mech_sriov/mech_driver/mech_driver.py:171\n\nsee:\n03:00.0 Ethernet controller: Mellanox Technologies MT27700 Family [ConnectX-4]\n03:00.1 Ethernet controller: Mellanox Technologies MT27700 Family [ConnectX-4]\n03:00.2 Ethernet controller: Mellanox Technologies MT27700 Family [ConnectX-4 Virtual Function]\n03:00.3 Ethernet controller: Mellanox Technologies MT27700 Family [ConnectX-4 Virtual Function]\n03:00.4 Ethernet controller: Mellanox Technologies MT27700 Family [ConnectX-4 Virtual Function]\n03:00.5 Ethernet controller: Mellanox Technologies MT27700 Family [ConnectX-4 Virtual Function]\n\n\n03:00.0 0200: 15b3:1013                \n03:00.1 0200: 15b3:1013                \n03:00.2 0200: 15b3:1014                \n03:00.3 0200: 15b3:1014                \n03:00.4 0200: 15b3:1014                \n03:00.5 0200: 15b3:1014 ", 
            "date_created": "2015-11-08 12:13:46.946895+00:00", 
            "author": "https://api.launchpad.net/1.0/~moshele"
        }, 
        {
            "content": "\nthe is the pci_passthrough_whitelist in nova\npci_passthrough_whitelist = {\"address\":\"*:03:00.*\",\"physical_network\":\"physnet1\"}\n", 
            "date_created": "2015-11-08 12:14:18.970491+00:00", 
            "author": "https://api.launchpad.net/1.0/~moshele"
        }, 
        {
            "content": "I think that the whtelist is not defined properly. If the address \"*:03:00.*\" includes some PFs, then it shouldn't use \"*\" in the address.\n\nThe is_physical_funciton() won't be called for the above whitelist entry since the entry contains \"*\".\n\nCheck https://github.com/openstack/nova/blob/master/nova/pci/manager.py#L115 \nhttps://github.com/openstack/nova/blob/master/nova/virt/libvirt/driver.py#L4806\n\nAccording to the the whitelist entry, the PF will be covered by the entry, But the PF shouldn't be added by the caller from the above two references.", 
            "date_created": "2015-11-09 16:32:14.057295+00:00", 
            "author": "https://api.launchpad.net/1.0/~baoli"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/227160\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=2ba4644f91aa523c2a14e32a168b853cf0b8c4e1\nSubmitter: Jenkins\nBranch:    master\n\ncommit 2ba4644f91aa523c2a14e32a168b853cf0b8c4e1\nAuthor: Moshe Levi <email address hidden>\nDate:   Wed Sep 23 02:49:28 2015 +0300\n\n    libvirt: report pci Type-PF type even when VFs are disabled\n    \n    libvirt < 1.3 reports virt_functions capability only when pf has\n    VFs enabled. This workaround patch updates the is_physical_function\n    function to read the sriov_totalvfs if exists and check it is\n    greater than 0. The sriov_totalvfs is the number for the\n    maximum possible VF for this PF. _get_pcidev_info in libvirt driver\n    is updated to get the correct pci device type using this function.\n    \n    Closes-Bug: #1499204\n    Change-Id: I8990c36fb1d6c66093a465930ff3f0948dd64986\n", 
            "date_created": "2016-01-05 03:20:40.917873+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/nova 13.0.0.0b2 development milestone.", 
            "date_created": "2016-01-21 13:43:42.436581+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }
    ]
}