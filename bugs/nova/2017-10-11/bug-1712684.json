{
    "status": "Fix Released", 
    "last_updated": "2017-08-25 03:51:01.388926+00:00", 
    "description": "Based on code inspection and a discussion with mriedem on IRC, it appears that when deleting an instance in a pure-Pike cloud the allocations are not removed until the update_available_resource() periodic task calls ResourceTracker._update_usage_from_instances(), which calls _remove_deleted_instances_allocations().\n\nIn a mixed Ocata/Pike cloud the allocation will be freed up immediately when _update_usage_from_instance() calls self.reportclient.update_instance_allocation().\n\nIn the ServerMovingTests functional test we bypass this by forcing the periodic task to run before checking that the allocations have been removed.", 
    "tags": [
        "compute", 
        "pike-rc-potential", 
        "placement", 
        "scheduler"
    ], 
    "importance": "High", 
    "heat": 8, 
    "link": "https://bugs.launchpad.net/nova/+bug/1712684", 
    "owner": "https://api.launchpad.net/1.0/~mriedem", 
    "id": 1712684, 
    "index": 2132, 
    "created": "2017-08-23 21:05:52.816958+00:00", 
    "title": "allocations not immediately removed when instance is deleted", 
    "comments": [
        {
            "content": "Based on code inspection and a discussion with mriedem on IRC, it appears that when deleting an instance in a pure-Pike cloud the allocations are not removed until the update_available_resource() periodic task calls ResourceTracker._update_usage_from_instances(), which calls _remove_deleted_instances_allocations().\n\nIn a mixed Ocata/Pike cloud the allocation will be freed up immediately when _update_usage_from_instance() calls self.reportclient.update_instance_allocation().\n\nIn the ServerMovingTests functional test we bypass this by forcing the periodic task to run before checking that the allocations have been removed.", 
            "date_created": "2017-08-23 21:05:52.816958+00:00", 
            "author": "https://api.launchpad.net/1.0/~cbf123"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/496942", 
            "date_created": "2017-08-23 21:43:12.206570+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: stable/pike\nReview: https://review.openstack.org/496997", 
            "date_created": "2017-08-24 03:25:44.708650+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/496942\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=d6de0e57c21472b99cbe71ec62b3967ef7282dec\nSubmitter: Jenkins\nBranch:    master\n\ncommit d6de0e57c21472b99cbe71ec62b3967ef7282dec\nAuthor: Matt Riedemann <email address hidden>\nDate:   Wed Aug 23 17:39:51 2017 -0400\n\n    Delete instance allocations when the instance is deleted\n    \n    In a deployment that still has Ocata computes, the resource\n    tracker will delete the allocations for an instance when it\n    is deleted, but in an all-Pike+ computes deployment, the\n    allocations will only be removed for a deleted instance\n    during the update_available_resource periodic task.\n    \n    The capacity on the node should be freed as soon as the\n    instance is deleted, like when we shelve offload an\n    instance, so this does that.\n    \n    The ServerMovingTests functional tests were glossing over\n    this by forcing the run of the update_available_resource\n    periodic task code after the instance was deleted but\n    before checking the allocations were gone from Placement.\n    So this change removes that part of the tests to show\n    this fixes the problem.\n    \n    Change-Id: I0f57b4ba8e4c3931b70bd737de5b7c8ae47f033d\n    Closes-Bug: #1712684\n", 
            "date_created": "2017-08-24 03:29:56.830009+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/496997\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=1b2f3c7bb25667527e7e1d2afd84d5d5533e7751\nSubmitter: Jenkins\nBranch:    stable/pike\n\ncommit 1b2f3c7bb25667527e7e1d2afd84d5d5533e7751\nAuthor: Matt Riedemann <email address hidden>\nDate:   Wed Aug 23 17:39:51 2017 -0400\n\n    Delete instance allocations when the instance is deleted\n    \n    In a deployment that still has Ocata computes, the resource\n    tracker will delete the allocations for an instance when it\n    is deleted, but in an all-Pike+ computes deployment, the\n    allocations will only be removed for a deleted instance\n    during the update_available_resource periodic task.\n    \n    The capacity on the node should be freed as soon as the\n    instance is deleted, like when we shelve offload an\n    instance, so this does that.\n    \n    The ServerMovingTests functional tests were glossing over\n    this by forcing the run of the update_available_resource\n    periodic task code after the instance was deleted but\n    before checking the allocations were gone from Placement.\n    So this change removes that part of the tests to show\n    this fixes the problem.\n    \n    Change-Id: I0f57b4ba8e4c3931b70bd737de5b7c8ae47f033d\n    Closes-Bug: #1712684\n    (cherry picked from commit d6de0e57c21472b99cbe71ec62b3967ef7282dec)\n", 
            "date_created": "2017-08-24 16:11:03.196645+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/nova 16.0.0.0rc2 release candidate.", 
            "date_created": "2017-08-25 03:51:00.884577+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}