{
    "status": "Invalid", 
    "last_updated": "2010-10-25 20:49:27.013870+00:00", 
    "description": "It seems that both our use of Redis and Carrot (or py-amqplib) are suffering somewhat under Eventlet. This bug is about Redis:\n\nTrying something like this:\n$ euca-describe-instances & euca-describe-instances & euca-describe-instances & euca-describe-instances &\n\nCauses at least two (sometimes all) of these calls to fail with an HTTP 403 error from the API server. My analysis strongly suggested this to be due to multiple calls to Redis going through the same socket at the same time, making all of them fail.\n\nReplacing the Redis singleton with a class that just returns a fresh Redis connection each time fixes it, but may not be acceptable (When doing 200 concurrent requests I got a /lot/ of Redis connections at the same time).", 
    "tags": [], 
    "importance": "Low", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/649807", 
    "owner": "None", 
    "id": 649807, 
    "index": 4933, 
    "created": "2010-09-28 13:19:40.923276+00:00", 
    "title": "Redis concurrency problems in API server", 
    "comments": [
        {
            "content": "It seems that both our use of Redis and Carrot (or py-amqplib) are suffering somewhat under Eventlet. This bug is about Redis:\n\nTrying something like this:\n$ euca-describe-instances & euca-describe-instances & euca-describe-instances & euca-describe-instances &\n\nCauses at least two (sometimes all) of these calls to fail with an HTTP 403 error from the API server. My analysis strongly suggested this to be due to multiple calls to Redis going through the same socket at the same time, making all of them fail.\n\nReplacing the Redis singleton with a class that just returns a fresh Redis connection each time fixes it, but may not be acceptable (When doing 200 concurrent requests I got a /lot/ of Redis connections at the same time).", 
            "date_created": "2010-09-28 13:19:40.923276+00:00", 
            "author": "https://api.launchpad.net/1.0/~soren"
        }, 
        {
            "content": "We are running into this occasionally, but I suspect the AuthManager singleton, since we aren't using redis anymore.   I'll use your repro to see if i can stop the ldap version of the problem.  Is someone working on an implementation of an AuthDriver that doesn't use redis?\n\nOn Sep 28, 2010, at 6:19 AM, Soren Hansen wrote:\n\n> Public bug reported:\n> \n> It seems that both our use of Redis and Carrot (or py-amqplib) are\n> suffering somewhat under Eventlet. This bug is about Redis:\n> \n> Trying something like this:\n> $ euca-describe-instances & euca-describe-instances & euca-describe-instances & euca-describe-instances &\n> \n> Causes at least two (sometimes all) of these calls to fail with an HTTP\n> 403 error from the API server. My analysis strongly suggested this to be\n> due to multiple calls to Redis going through the same socket at the same\n> time, making all of them fail.\n> \n> Replacing the Redis singleton with a class that just returns a fresh\n> Redis connection each time fixes it, but may not be acceptable (When\n> doing 200 concurrent requests I got a /lot/ of Redis connections at the\n> same time).\n> \n> ** Affects: nova\n>     Importance: Undecided\n>         Status: New\n> \n> -- \n> Redis concurrency problems in API server\n> https://bugs.launchpad.net/bugs/649807\n> You received this bug notification because you are a member of Nova\n> Bugs, which is subscribed to OpenStack Compute (nova).\n> \n> Status in OpenStack Compute (Nova): New\n> \n> Bug description:\n> It seems that both our use of Redis and Carrot (or py-amqplib) are suffering somewhat under Eventlet. This bug is about Redis:\n> \n> Trying something like this:\n> $ euca-describe-instances & euca-describe-instances & euca-describe-instances & euca-describe-instances &\n> \n> Causes at least two (sometimes all) of these calls to fail with an HTTP 403 error from the API server. My analysis strongly suggested this to be due to multiple calls to Redis going through the same socket at the same time, making all of them fail.\n> \n> Replacing the Redis singleton with a class that just returns a fresh Redis connection each time fixes it, but may not be acceptable (When doing 200 concurrent requests I got a /lot/ of Redis connections at the same time).\n> \n> \n", 
            "date_created": "2010-09-28 15:40:58+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "Like I mentioned in the other bug, we'll want to pool and reuse the Redis connections between each request.", 
            "date_created": "2010-09-28 16:56:43.106924+00:00", 
            "author": "https://api.launchpad.net/1.0/~eday"
        }, 
        {
            "content": "Not sure this should be a High priority, as Redis should be entirely removed sometime this week...so setting back to Low.", 
            "date_created": "2010-10-05 19:21:15.480045+00:00", 
            "author": "https://api.launchpad.net/1.0/~jaypipes"
        }, 
        {
            "content": "Redis is no longer used, marking as invalid.", 
            "date_created": "2010-10-25 20:49:26.551153+00:00", 
            "author": "https://api.launchpad.net/1.0/~eday"
        }
    ]
}