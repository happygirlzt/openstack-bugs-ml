{
    "status": "Invalid", 
    "last_updated": "2013-01-22 11:02:35.894878+00:00", 
    "description": "It appears that nova.compute.resource_tracker.ResourceTracker is incorrectly updating the 'local_gb_used' attribute during the periodic resource updates. The _update_usage_from_instances method call overwrites the resources['local_gb_used'] value returned from the virt driver with a static value. It then adds to it any disk space allocated to instances on the host. This is potentially a problem in cases where the filesystem has space used by files other than the instances disks. In this case, the 'local_gb_used' attribute would be lower than it should be by the amount of disk space used by other items on disk.\n\nA quick fix for this would be to change _update_usage_from_instances to be something like the following code\n\nif 'local_gb_used' in resources:\n    resources['local_gb_used'] += CONF.reserved_host_disk_mb / 1024\nelse\n    resources['local_gb_used'] = CONF.reserved_host_disk_mb / 1024\n\nThis would increase the reported local_gb_used to include the disk space used reported by the filesystem. The downside is that it will double count some of the instances disk space since the allocated space for the instance would be added to the actual file space used. But its probably better to report a higher local_gb_used than a lower one.\n\nA proper fix would be to take the disk space used as reported by the filesystem, subtract the space currently being used by the instances disks, and then add space allocated for each instance. This would require additional work to determine the disk space currently being used by the instance disks and touch more than just the ResourceTracker.\n\nThis was discovered against folsom (commit 4bfc8f1165b05c2cc7c5506641b9b85fa8e1e144) when using devstack where the stack installation was on the root filesystem with many GB used by other items. From browsing the current master brach, it appears master would also be affected. Libvirt/qemu was the virt driver used.", 
    "tags": [], 
    "importance": "High", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1100447", 
    "owner": "None", 
    "id": 1100447, 
    "index": 930, 
    "created": "2013-01-16 20:15:50.270678+00:00", 
    "title": "compute ResourceTracker incorrectly updating local_gb_used", 
    "comments": [
        {
            "content": "It appears that nova.compute.resource_tracker.ResourceTracker is incorrectly updating the 'local_gb_used' attribute during the periodic resource updates. The _update_usage_from_instances method call overwrites the resources['local_gb_used'] value returned from the virt driver with a static value. It then adds to it any disk space allocated to instances on the host. This is potentially a problem in cases where the filesystem has space used by files other than the instances disks. In this case, the 'local_gb_used' attribute would be lower than it should be by the amount of disk space used by other items on disk.\n\nA quick fix for this would be to change _update_usage_from_instances to be something like the following code\n\nif 'local_gb_used' in resources:\n    resources['local_gb_used'] += CONF.reserved_host_disk_mb / 1024\nelse\n    resources['local_gb_used'] = CONF.reserved_host_disk_mb / 1024\n\nThis would increase the reported local_gb_used to include the disk space used reported by the filesystem. The downside is that it will double count some of the instances disk space since the allocated space for the instance would be added to the actual file space used. But its probably better to report a higher local_gb_used than a lower one.\n\nA proper fix would be to take the disk space used as reported by the filesystem, subtract the space currently being used by the instances disks, and then add space allocated for each instance. This would require additional work to determine the disk space currently being used by the instance disks and touch more than just the ResourceTracker.\n\nThis was discovered against folsom (commit 4bfc8f1165b05c2cc7c5506641b9b85fa8e1e144) when using devstack where the stack installation was on the root filesystem with many GB used by other items. From browsing the current master brach, it appears master would also be affected. Libvirt/qemu was the virt driver used.", 
            "date_created": "2013-01-16 20:15:50.270678+00:00", 
            "author": "https://api.launchpad.net/1.0/~mlovell"
        }, 
        {
            "content": "This code is actually intentional.  You'll see memory works the same way.  The purpose of the CONF item 'reserved_host_disk_mb' is to specify how much space you want to reserve for system or other files.\n\nWe cannot really use the driver information because it's always going to be stale.... unless we want to query the driver for it on every single build while we're inside the semaphore.  There's also issues in that we don't really know if the correct information that we need can be retrieved from every supported driver.\n\nDouble-counting disk space would not be a great thing here, either.  You end up with the same problem.  You can't build instances because you're \"out of room\" when you're not really out of room.\n\nIn a system where you have 1T of disk space and you want VMs to be able to use 750GB.... configure your reserve to be 250GB and don't allow your system files to grow beyond that size.", 
            "date_created": "2013-01-17 01:23:12.948383+00:00", 
            "author": "https://api.launchpad.net/1.0/~cbehrens"
        }
    ]
}