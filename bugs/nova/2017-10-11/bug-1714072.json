{
    "status": "Fix Released", 
    "last_updated": "2017-09-25 14:28:19.199379+00:00", 
    "description": "I hit this while writing a functional recreate test for bug 1713786 where the destination node during an evacuate doesn't have it's allocations created by the scheduler. When the source node comes up after the evacuation, it tries to remove the allocations on the source node, which is the only one because of bug 1713786, but that results in sending a request like this:\n\n2017-08-30 14:45:13,495 INFO [nova.scheduler.client.report] Sending updated allocation [{'resource_provider': {'uuid': '7ab9dab7-65c6-4961-9403-c8fc50dedb6b'}, 'resources': {}}] for instance dc8a686c-ad92-48f3-8594-d00c6e671a1c after removing resources for 7ab9dab7-65c6-4961-9403-c8fc50dedb6b.\n\nAnd you get this stacktrace in the Placement API:\n\n2017-08-30 14:45:13,502 ERROR [nova.api.openstack.placement.handler] Uncaught exception\n    Traceback (most recent call last):\n      File \"nova/api/openstack/placement/handler.py\", line 217, in __call__\n        return dispatch(environ, start_response, self._map)\n      File \"nova/api/openstack/placement/handler.py\", line 144, in dispatch\n        return handler(environ, start_response)\n      File \"/home/user/git/nova/.tox/functional/local/lib/python2.7/site-packages/webob/dec.py\", line 131, in __call__\n        resp = self.call_func(req, *args, **self.kwargs)\n      File \"nova/api/openstack/placement/wsgi_wrapper.py\", line 29, in call_func\n        super(PlacementWsgify, self).call_func(req, *args, **kwargs)\n      File \"/home/user/git/nova/.tox/functional/local/lib/python2.7/site-packages/webob/dec.py\", line 196, in call_func\n        return self.func(req, *args, **kwargs)\n      File \"nova/api/openstack/placement/microversion.py\", line 268, in decorated_func\n        return _find_method(f, version)(req, *args, **kwargs)\n      File \"nova/api/openstack/placement/util.py\", line 138, in decorated_function\n        return f(req)\n      File \"nova/api/openstack/placement/handlers/allocation.py\", line 286, in set_allocations\n        return _set_allocations(req, ALLOCATION_SCHEMA_V1_8)\n      File \"nova/api/openstack/placement/handlers/allocation.py\", line 252, in _set_allocations\n        allocations.create_all()\n      File \"nova/objects/resource_provider.py\", line 1877, in create_all\n        self._set_allocations(self._context, self.objects)\n      File \"/home/user/git/nova/.tox/functional/local/lib/python2.7/site-packages/oslo_db/api.py\", line 150, in wrapper\n        ectxt.value = e.inner_exc\n      File \"/home/user/git/nova/.tox/functional/local/lib/python2.7/site-packages/oslo_utils/excutils.py\", line 220, in __exit__\n        self.force_reraise()\n      File \"/home/user/git/nova/.tox/functional/local/lib/python2.7/site-packages/oslo_utils/excutils.py\", line 196, in force_reraise\n        six.reraise(self.type_, self.value, self.tb)\n      File \"/home/user/git/nova/.tox/functional/local/lib/python2.7/site-packages/oslo_db/api.py\", line 138, in wrapper\n        return f(*args, **kwargs)\n      File \"/home/user/git/nova/.tox/functional/local/lib/python2.7/site-packages/oslo_db/sqlalchemy/enginefacade.py\", line 979, in wrapper\n        return fn(*args, **kwargs)\n      File \"nova/objects/resource_provider.py\", line 1835, in _set_allocations\n        consumer_id = allocs[0].consumer_id\n    IndexError: list index out of range\n\n\nThe schema validation on PUT /allocations requires a minimum of one provider in the request, but it doesn't validate that there is at least one resource for that provider:\n\nhttps://github.com/openstack/nova/blob/da4083d7bc0a0c1272df35ecb12c4c2fd2102e21/nova/api/openstack/placement/handlers/allocation.py#L52-L61", 
    "tags": [
        "api", 
        "in-stable-pike", 
        "placement"
    ], 
    "importance": "Medium", 
    "heat": 8, 
    "link": "https://bugs.launchpad.net/nova/+bug/1714072", 
    "owner": "https://api.launchpad.net/1.0/~cdent", 
    "id": 1714072, 
    "index": 4893, 
    "created": "2017-08-30 18:53:09.637092+00:00", 
    "title": "PUT /allocations/{consumer_id} fails with a 500 if 'resources: {}'", 
    "comments": [
        {
            "content": "I hit this while writing a functional recreate test for bug 1713786 where the destination node during an evacuate doesn't have it's allocations created by the scheduler. When the source node comes up after the evacuation, it tries to remove the allocations on the source node, which is the only one because of bug 1713786, but that results in sending a request like this:\n\n2017-08-30 14:45:13,495 INFO [nova.scheduler.client.report] Sending updated allocation [{'resource_provider': {'uuid': '7ab9dab7-65c6-4961-9403-c8fc50dedb6b'}, 'resources': {}}] for instance dc8a686c-ad92-48f3-8594-d00c6e671a1c after removing resources for 7ab9dab7-65c6-4961-9403-c8fc50dedb6b.\n\nAnd you get this stacktrace in the Placement API:\n\n2017-08-30 14:45:13,502 ERROR [nova.api.openstack.placement.handler] Uncaught exception\n    Traceback (most recent call last):\n      File \"nova/api/openstack/placement/handler.py\", line 217, in __call__\n        return dispatch(environ, start_response, self._map)\n      File \"nova/api/openstack/placement/handler.py\", line 144, in dispatch\n        return handler(environ, start_response)\n      File \"/home/user/git/nova/.tox/functional/local/lib/python2.7/site-packages/webob/dec.py\", line 131, in __call__\n        resp = self.call_func(req, *args, **self.kwargs)\n      File \"nova/api/openstack/placement/wsgi_wrapper.py\", line 29, in call_func\n        super(PlacementWsgify, self).call_func(req, *args, **kwargs)\n      File \"/home/user/git/nova/.tox/functional/local/lib/python2.7/site-packages/webob/dec.py\", line 196, in call_func\n        return self.func(req, *args, **kwargs)\n      File \"nova/api/openstack/placement/microversion.py\", line 268, in decorated_func\n        return _find_method(f, version)(req, *args, **kwargs)\n      File \"nova/api/openstack/placement/util.py\", line 138, in decorated_function\n        return f(req)\n      File \"nova/api/openstack/placement/handlers/allocation.py\", line 286, in set_allocations\n        return _set_allocations(req, ALLOCATION_SCHEMA_V1_8)\n      File \"nova/api/openstack/placement/handlers/allocation.py\", line 252, in _set_allocations\n        allocations.create_all()\n      File \"nova/objects/resource_provider.py\", line 1877, in create_all\n        self._set_allocations(self._context, self.objects)\n      File \"/home/user/git/nova/.tox/functional/local/lib/python2.7/site-packages/oslo_db/api.py\", line 150, in wrapper\n        ectxt.value = e.inner_exc\n      File \"/home/user/git/nova/.tox/functional/local/lib/python2.7/site-packages/oslo_utils/excutils.py\", line 220, in __exit__\n        self.force_reraise()\n      File \"/home/user/git/nova/.tox/functional/local/lib/python2.7/site-packages/oslo_utils/excutils.py\", line 196, in force_reraise\n        six.reraise(self.type_, self.value, self.tb)\n      File \"/home/user/git/nova/.tox/functional/local/lib/python2.7/site-packages/oslo_db/api.py\", line 138, in wrapper\n        return f(*args, **kwargs)\n      File \"/home/user/git/nova/.tox/functional/local/lib/python2.7/site-packages/oslo_db/sqlalchemy/enginefacade.py\", line 979, in wrapper\n        return fn(*args, **kwargs)\n      File \"nova/objects/resource_provider.py\", line 1835, in _set_allocations\n        consumer_id = allocs[0].consumer_id\n    IndexError: list index out of range\n\n\nThe schema validation on PUT /allocations requires a minimum of one provider in the request, but it doesn't validate that there is at least one resource for that provider:\n\nhttps://github.com/openstack/nova/blob/da4083d7bc0a0c1272df35ecb12c4c2fd2102e21/nova/api/openstack/placement/handlers/allocation.py#L52-L61", 
            "date_created": "2017-08-30 18:53:09.637092+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "what should the outcome be here:\n\n* 400 you didn't follow the schema\n* 204 we erased allocations for that resource provider\n\n", 
            "date_created": "2017-08-30 18:54:42.577872+00:00", 
            "author": "https://api.launchpad.net/1.0/~cdent"
        }, 
        {
            "content": "I think 400. Since we said you have to provide at least one resource provider:\n\nhttps://review.openstack.org/#/c/490195/\n\nIt would be weird to say, OK you can set one provider but no resources. And if you don't want allocations for a given consumer on any provider, then DELETE /allocations/{consumer_id} is what you need.\n\n--\n\nAlso, I think we could use minProperties: 1 to fix this for the 'resources' key:\n\nhttp://json-schema.org/latest/json-schema-validation.html#rfc.section.6.16", 
            "date_created": "2017-08-30 18:57:42.724449+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Related fix proposed to branch: master\nReview: https://review.openstack.org/499269", 
            "date_created": "2017-08-30 19:34:01.823866+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/499270", 
            "date_created": "2017-08-30 19:34:15.822742+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/499269\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=ad2d3fc0f806f46382fa3c0a95c2a5d003d40736\nSubmitter: Jenkins\nBranch:    master\n\ncommit ad2d3fc0f806f46382fa3c0a95c2a5d003d40736\nAuthor: Chris Dent <email address hidden>\nDate:   Wed Aug 30 20:19:31 2017 +0100\n\n    [placement] Add test for empty resources in allocation\n    \n    If the resources object in an allocation request is an empty dict then\n    there will be a 500 deep in the belly of the AllocationList object\n    handling when it tries get a information. The patch demonstrates the bug\n    with a new gabbi test that verfies the 500. The next patch will fix it.\n    \n    Change-Id: I5ab417e39044af63fb9acb57c48c087ecf1e6f04\n    Related-Bug: #1714072\n", 
            "date_created": "2017-08-31 06:01:50.916026+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/499270\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=10f8a9aa127cfaecab368e26c3b896e203e301bc\nSubmitter: Jenkins\nBranch:    master\n\ncommit 10f8a9aa127cfaecab368e26c3b896e203e301bc\nAuthor: Chris Dent <email address hidden>\nDate:   Wed Aug 30 20:30:19 2017 +0100\n\n    [placement] Require at least one resource class in allocation\n    \n    If an allocation was made with an empty resources object, a 500 response\n    code would result. This change adjusts the schema to use minProperties\n    of 1 to say there must be at least one resource class and value pair in\n    the allocation. If there is not a 400 response is returned.\n    \n    As this is fixing 500 response to a useful error, no microversion is\n    required. A previous gabbi file which demonstrated the problem has been\n    updated to demonstrate that the problem has been fixed.\n    \n    Change-Id: I7d9c64c77586564fb3bdbe92c693bd2a1bc06f24\n    Closes-Bug: #1714072\n", 
            "date_created": "2017-08-31 07:00:57.027333+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Related fix proposed to branch: stable/pike\nReview: https://review.openstack.org/499615", 
            "date_created": "2017-08-31 14:23:08.774335+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: stable/pike\nReview: https://review.openstack.org/499616", 
            "date_created": "2017-08-31 14:23:23.380394+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/499615\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=334905a753c660c5f02ec6c03c427ebbbaf4b89a\nSubmitter: Jenkins\nBranch:    stable/pike\n\ncommit 334905a753c660c5f02ec6c03c427ebbbaf4b89a\nAuthor: Chris Dent <email address hidden>\nDate:   Wed Aug 30 20:19:31 2017 +0100\n\n    [placement] Add test for empty resources in allocation\n    \n    If the resources object in an allocation request is an empty dict then\n    there will be a 500 deep in the belly of the AllocationList object\n    handling when it tries get a information. The patch demonstrates the bug\n    with a new gabbi test that verfies the 500. The next patch will fix it.\n    \n    Change-Id: I5ab417e39044af63fb9acb57c48c087ecf1e6f04\n    Related-Bug: #1714072\n    (cherry picked from commit ad2d3fc0f806f46382fa3c0a95c2a5d003d40736)\n", 
            "date_created": "2017-09-15 18:04:52.425977+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/499616\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=2b82aa3a9978ecb31632fae6b400d7fe9137c01b\nSubmitter: Jenkins\nBranch:    stable/pike\n\ncommit 2b82aa3a9978ecb31632fae6b400d7fe9137c01b\nAuthor: Chris Dent <email address hidden>\nDate:   Wed Aug 30 20:30:19 2017 +0100\n\n    [placement] Require at least one resource class in allocation\n    \n    If an allocation was made with an empty resources object, a 500 response\n    code would result. This change adjusts the schema to use minProperties\n    of 1 to say there must be at least one resource class and value pair in\n    the allocation. If there is not a 400 response is returned.\n    \n    As this is fixing 500 response to a useful error, no microversion is\n    required. A previous gabbi file which demonstrated the problem has been\n    updated to demonstrate that the problem has been fixed.\n    \n    Change-Id: I7d9c64c77586564fb3bdbe92c693bd2a1bc06f24\n    Closes-Bug: #1714072\n    (cherry picked from commit 10f8a9aa127cfaecab368e26c3b896e203e301bc)\n", 
            "date_created": "2017-09-15 18:05:14.006147+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/nova 16.0.1 release.", 
            "date_created": "2017-09-25 14:28:18.087718+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}