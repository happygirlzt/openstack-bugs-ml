{
    "status": "Fix Released", 
    "last_updated": "2013-04-11 19:55:11.422853+00:00", 
    "description": "Allocate a floating IP when no floating IPs available, although HTTP code is correct, \nexception message with stack information is responsed which may be not friendly.\n\n{\n    \"itemNotFound\": {\n        \"code\": 404,\n        \"message\": \"NoMoreFloatingIps_Remote: Zero floating ips available.\\nTraceback (most recent call last):\\n\\n  File \\\"path/nova/openstack/common/rpc/amqp.py\\\", line 275, in _process_data\\n    rval = self.proxy.dispatch(ctxt, version, method, **args)\\n\\n  File \\\"path/nova/openstack/common/rpc/dispatcher.py\\\", line 145, in dispatch\\n    return getattr(proxyobj, method)(ctxt, **kwargs)\\n\\n  File \\\"path/nova/network/manager.py\\\", line 279, in wrapped\\n    return func(self, context, *args, **kwargs)\\n\\n  File \\\"path/nova/network/manager.py\\\", line 481, in allocate_floating_ip\\n    QUOTAS.rollback(context, reservations)\\n\\n  File \\\"/usr/lib/python2.7/contextlib.py\\\", line 24, in __exit__\\n    self.gen.next()\\n\\n  File \\\"path/nova/network/manager.py\\\", line 468, in allocate_floating_ip\\n    pool)\\n\\n  File \\\"path/nova/db/api.py\\\", line 277, in floating_ip_allocate_address\\n    return IMPL.floating_ip_allocate_address(context, project_id, pool)\\n\\n  File \\\"path/nova/db/sqlalchemy/api.py\\\", line 131, in wrapper\\n    return f(*args, **kwargs)\\n\\n  File \\\"path/nova/db/sqlalchemy/api.py\\\", line 744, in floating_ip_allocate_address\\n    raise exception.NoMoreFloatingIps()\\n\\nNoMoreFloatingIps: Zero floating ips available.\\n\"\n    }\n}\n\nThe problem also meet when FloatingIpLimitExceeded raised.\n\n{\n    \"overLimit\": {\n        \"code\": 413,\n        \"message\": \"FloatingIpLimitExceeded_Remote: Maximum number of floating ips exceeded\\nTraceback (most recent call last):\\n\\n  File \\\"path/nova/openstack/common/rpc/amqp.py\\\", line 275, in _process_data\\n    rval = self.proxy.dispatch(ctxt, version, method, **args)\\n\\n  File \\\"path/nova/openstack/common/rpc/dispatcher.py\\\", line 145, in dispatch\\n    return getattr(proxyobj, method)(ctxt, **kwargs)\\n\\n  File \\\"path/nova/network/manager.py\\\", line 279, in wrapped\\n    return func(self, context, *args, **kwargs)\\n\\n  File \\\"path/nova/network/manager.py\\\", line 463, in allocate_floating_ip\\n    raise exception.FloatingIpLimitExceeded()\\n\\nFloatingIpLimitExceeded: Maximum number of floating ips exceeded\\n\",\n        \"retryAfter\": 0\n    }\n}", 
    "tags": [], 
    "importance": "Undecided", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1103324", 
    "owner": "https://api.launchpad.net/1.0/~dims-v", 
    "id": 1103324, 
    "index": 3343, 
    "created": "2013-01-23 04:49:07.475222+00:00", 
    "title": "NoMoreFloatingIps with stack information responsed", 
    "comments": [
        {
            "content": "Allocate a floating IP when no floating IPs available, although HTTP code is correct, \nexception message with stack information is responsed which may be not friendly.\n\n{\n    \"itemNotFound\": {\n        \"code\": 404,\n        \"message\": \"NoMoreFloatingIps_Remote: Zero floating ips available.\\nTraceback (most recent call last):\\n\\n  File \\\"path/nova/openstack/common/rpc/amqp.py\\\", line 275, in _process_data\\n    rval = self.proxy.dispatch(ctxt, version, method, **args)\\n\\n  File \\\"path/nova/openstack/common/rpc/dispatcher.py\\\", line 145, in dispatch\\n    return getattr(proxyobj, method)(ctxt, **kwargs)\\n\\n  File \\\"path/nova/network/manager.py\\\", line 279, in wrapped\\n    return func(self, context, *args, **kwargs)\\n\\n  File \\\"path/nova/network/manager.py\\\", line 481, in allocate_floating_ip\\n    QUOTAS.rollback(context, reservations)\\n\\n  File \\\"/usr/lib/python2.7/contextlib.py\\\", line 24, in __exit__\\n    self.gen.next()\\n\\n  File \\\"path/nova/network/manager.py\\\", line 468, in allocate_floating_ip\\n    pool)\\n\\n  File \\\"path/nova/db/api.py\\\", line 277, in floating_ip_allocate_address\\n    return IMPL.floating_ip_allocate_address(context, project_id, pool)\\n\\n  File \\\"path/nova/db/sqlalchemy/api.py\\\", line 131, in wrapper\\n    return f(*args, **kwargs)\\n\\n  File \\\"path/nova/db/sqlalchemy/api.py\\\", line 744, in floating_ip_allocate_address\\n    raise exception.NoMoreFloatingIps()\\n\\nNoMoreFloatingIps: Zero floating ips available.\\n\"\n    }\n}\n\nThe problem also meet when FloatingIpLimitExceeded raised.\n\n{\n    \"overLimit\": {\n        \"code\": 413,\n        \"message\": \"FloatingIpLimitExceeded_Remote: Maximum number of floating ips exceeded\\nTraceback (most recent call last):\\n\\n  File \\\"path/nova/openstack/common/rpc/amqp.py\\\", line 275, in _process_data\\n    rval = self.proxy.dispatch(ctxt, version, method, **args)\\n\\n  File \\\"path/nova/openstack/common/rpc/dispatcher.py\\\", line 145, in dispatch\\n    return getattr(proxyobj, method)(ctxt, **kwargs)\\n\\n  File \\\"path/nova/network/manager.py\\\", line 279, in wrapped\\n    return func(self, context, *args, **kwargs)\\n\\n  File \\\"path/nova/network/manager.py\\\", line 463, in allocate_floating_ip\\n    raise exception.FloatingIpLimitExceeded()\\n\\nFloatingIpLimitExceeded: Maximum number of floating ips exceeded\\n\",\n        \"retryAfter\": 0\n    }\n}", 
            "date_created": "2013-01-23 04:49:07.475222+00:00", 
            "author": "https://api.launchpad.net/1.0/~hzzhoushaoyu"
        }, 
        {
            "content": "Can you please add the logs from the nova-api log? i did manage to figure out a way to recreate the 2nd problem, but not the first, that would help.\n\nthanks,\ndims", 
            "date_created": "2013-01-24 21:08:14.612125+00:00", 
            "author": "https://api.launchpad.net/1.0/~dims-v"
        }, 
        {
            "content": "Try to set quota of floating IP as 0 and allocate a floating IP for user.\n\n2013-01-25 09:43:42 INFO nova.api.openstack.wsgi [req-35cbe242-3345-4fb5-9a41-a32fea528282 f2665c1140c54a03a98110cb86262ec3 dc32392af0ae4a098fb7235760077fa6] POST http://localhost:8774/v1.1/dc32392af0ae4a098fb7235760077fa6/os-floating-ips\n2013-01-25 09:43:42 DEBUG nova.openstack.common.rpc.amqp [-] Making asynchronous call on network ... from (pid=25430) multicall path/nova/openstack/common/rpc/amqp.py:351\n2013-01-25 09:43:42 DEBUG nova.openstack.common.rpc.amqp [-] MSG_ID is 6f7f1740b68d40a0a94dde47eca33c62 from (pid=25430) multicall path/nova/openstack/common/rpc/amqp.py:354\n2013-01-25 09:43:42 ERROR nova.api.openstack [req-35cbe242-3345-4fb5-9a41-a32fea528282 f2665c1140c54a03a98110cb86262ec3 dc32392af0ae4a098fb7235760077fa6] Caught error: Maximum number of floating ips exceeded\nTraceback (most recent call last):\n\n  File \"path/nova/openstack/common/rpc/amqp.py\", line 275, in _process_data\n    rval = self.proxy.dispatch(ctxt, version, method, **args)\n\n  File \"path/nova/openstack/common/rpc/dispatcher.py\", line 145, in dispatch\n    return getattr(proxyobj, method)(ctxt, **kwargs)\n\n  File \"path/nova/network/manager.py\", line 279, in wrapped\n    return func(self, context, *args, **kwargs)\n\n  File \"path/nova/network/manager.py\", line 463, in allocate_floating_ip\n    raise exception.FloatingIpLimitExceeded()\n\nFloatingIpLimitExceeded: Maximum number of floating ips exceeded\n2013-01-25 09:43:42 TRACE nova.api.openstack Traceback (most recent call last):\n2013-01-25 09:43:42 TRACE nova.api.openstack   File \"path/nova/api/openstack/__init__.py\", line 78, in __call__\n2013-01-25 09:43:42 TRACE nova.api.openstack     return req.get_response(self.application)\n2013-01-25 09:43:42 TRACE nova.api.openstack   File \"/usr/local/lib/python2.7/dist-packages/webob/request.py\", line 1053, in get_response\n2013-01-25 09:43:42 TRACE nova.api.openstack     application, catch_exc_info=False)\n2013-01-25 09:43:42 TRACE nova.api.openstack   File \"/usr/local/lib/python2.7/dist-packages/webob/request.py\", line 1022, in call_application\n2013-01-25 09:43:42 TRACE nova.api.openstack     app_iter = application(self.environ, start_response)\n2013-01-25 09:43:42 TRACE nova.api.openstack   File \"/usr/local/lib/python2.7/dist-packages/webob/dec.py\", line 159, in __call__\n2013-01-25 09:43:42 TRACE nova.api.openstack     return resp(environ, start_response)\n2013-01-25 09:43:42 TRACE nova.api.openstack   File \"/usr/local/lib/python2.7/dist-packages/keystone/middleware/auth_token.py\", line 176, in __call__\n2013-01-25 09:43:42 TRACE nova.api.openstack     return self.app(env, start_response)\n2013-01-25 09:43:42 TRACE nova.api.openstack   File \"/usr/local/lib/python2.7/dist-packages/webob/dec.py\", line 159, in __call__\n2013-01-25 09:43:42 TRACE nova.api.openstack     return resp(environ, start_response)\n2013-01-25 09:43:42 TRACE nova.api.openstack   File \"/usr/local/lib/python2.7/dist-packages/webob/dec.py\", line 159, in __call__\n2013-01-25 09:43:42 TRACE nova.api.openstack     return resp(environ, start_response)\n2013-01-25 09:43:42 TRACE nova.api.openstack   File \"/usr/local/lib/python2.7/dist-packages/webob/dec.py\", line 159, in __call__\n2013-01-25 09:43:42 TRACE nova.api.openstack     return resp(environ, start_response)\n2013-01-25 09:43:42 TRACE nova.api.openstack   File \"/usr/local/lib/python2.7/dist-packages/routes/middleware.py\", line 131, in __call__\n2013-01-25 09:43:42 TRACE nova.api.openstack     response = self.app(environ, start_response)\n2013-01-25 09:43:42 TRACE nova.api.openstack   File \"/usr/local/lib/python2.7/dist-packages/webob/dec.py\", line 159, in __call__\n2013-01-25 09:43:42 TRACE nova.api.openstack     return resp(environ, start_response)\n2013-01-25 09:43:42 TRACE nova.api.openstack   File \"/usr/local/lib/python2.7/dist-packages/webob/dec.py\", line 147, in __call__\n2013-01-25 09:43:42 TRACE nova.api.openstack     resp = self.call_func(req, *args, **self.kwargs)\n2013-01-25 09:43:42 TRACE nova.api.openstack   File \"/usr/local/lib/python2.7/dist-packages/webob/dec.py\", line 208, in call_func\n2013-01-25 09:43:42 TRACE nova.api.openstack     return self.func(req, *args, **kwargs)\n2013-01-25 09:43:42 TRACE nova.api.openstack   File \"path/nova/api/openstack/wsgi.py\", line 885, in __call__\n2013-01-25 09:43:42 TRACE nova.api.openstack     content_type, body, accept)\n2013-01-25 09:43:42 TRACE nova.api.openstack   File \"path/nova/api/openstack/wsgi.py\", line 933, in _process_stack\n2013-01-25 09:43:42 TRACE nova.api.openstack     action_result = self.dispatch(meth, request, action_args)\n2013-01-25 09:43:42 TRACE nova.api.openstack   File \"path/nova/api/openstack/wsgi.py\", line 1021, in dispatch\n2013-01-25 09:43:42 TRACE nova.api.openstack     return method(req=request, **action_args)\n2013-01-25 09:43:42 TRACE nova.api.openstack   File \"path/nova/api/openstack/compute/contrib/floating_ips.py\", line 188, in create\n2013-01-25 09:43:42 TRACE nova.api.openstack     address = self.network_api.allocate_floating_ip(context, pool)\n2013-01-25 09:43:42 TRACE nova.api.openstack   File \"path/nova/network/api.py\", line 199, in allocate_floating_ip\n2013-01-25 09:43:42 TRACE nova.api.openstack     'auto_assigned': False}})\n2013-01-25 09:43:42 TRACE nova.api.openstack   File \"path/nova/openstack/common/rpc/__init__.py\", line 102, in call\n2013-01-25 09:43:42 TRACE nova.api.openstack     return _get_impl().call(cfg.CONF, context, topic, msg, timeout)\n2013-01-25 09:43:42 TRACE nova.api.openstack   File \"path/nova/openstack/common/rpc/impl_kombu.py\", line 712, in call\n2013-01-25 09:43:42 TRACE nova.api.openstack     rpc_amqp.get_connection_pool(conf, Connection))\n2013-01-25 09:43:42 TRACE nova.api.openstack   File \"path/nova/openstack/common/rpc/amqp.py\", line 368, in call\n2013-01-25 09:43:42 TRACE nova.api.openstack     rv = list(rv)\n2013-01-25 09:43:42 TRACE nova.api.openstack   File \"path/nova/openstack/common/rpc/amqp.py\", line 336, in __iter__\n2013-01-25 09:43:42 TRACE nova.api.openstack     raise result\n2013-01-25 09:43:42 TRACE nova.api.openstack FloatingIpLimitExceeded_Remote: Maximum number of floating ips exceeded\n2013-01-25 09:43:42 TRACE nova.api.openstack Traceback (most recent call last):\n2013-01-25 09:43:42 TRACE nova.api.openstack-\n2013-01-25 09:43:42 TRACE nova.api.openstack   File \"path/nova/openstack/common/rpc/amqp.py\", line 275, in _process_data\n2013-01-25 09:43:42 TRACE nova.api.openstack     rval = self.proxy.dispatch(ctxt, version, method, **args)\n2013-01-25 09:43:42 TRACE nova.api.openstack-\n2013-01-25 09:43:42 TRACE nova.api.openstack   File \"path/nova/openstack/common/rpc/dispatcher.py\", line 145, in dispatch\n2013-01-25 09:43:42 TRACE nova.api.openstack     return getattr(proxyobj, method)(ctxt, **kwargs)\n2013-01-25 09:43:42 TRACE nova.api.openstack-\n2013-01-25 09:43:42 TRACE nova.api.openstack   File \"path/nova/network/manager.py\", line 279, in wrapped\n2013-01-25 09:43:42 TRACE nova.api.openstack     return func(self, context, *args, **kwargs)\n2013-01-25 09:43:42 TRACE nova.api.openstack-\n2013-01-25 09:43:42 TRACE nova.api.openstack   File \"path/nova/network/manager.py\", line 463, in allocate_floating_ip\n2013-01-25 09:43:42 TRACE nova.api.openstack     raise exception.FloatingIpLimitExceeded()\n2013-01-25 09:43:42 TRACE nova.api.openstack-\n2013-01-25 09:43:42 TRACE nova.api.openstack FloatingIpLimitExceeded: Maximum number of floating ips exceeded\n2013-01-25 09:43:42 TRACE nova.api.openstack-\n2013-01-25 09:43:42 TRACE nova.api.openstack-\n2013-01-25 09:43:42 INFO nova.api.openstack [req-35cbe242-3345-4fb5-9a41-a32fea528282 f2665c1140c54a03a98110cb86262ec3 dc32392af0ae4a098fb7235760077fa6] http://localhost:8774/v1.1/dc32392af0ae4a098fb7235760077fa6/os-floating-ips returned with HTTP 413\n2013-01-25 09:43:42 INFO nova.osapi_compute.wsgi.server [req-35cbe242-3345-4fb5-9a41-a32fea528282 f2665c1140c54a03a98110cb86262ec3 dc32392af0ae4a098fb7235760077fa6] 127.0.0.1 - - [25/Jan/2013 09:43:42] \"POST /v1.1/dc32392af0ae4a098fb7235760077fa6/os-floating-ips HTTP/1.1\" 413 1095 0.512176", 
            "date_created": "2013-01-25 01:49:43.740531+00:00", 
            "author": "https://api.launchpad.net/1.0/~hzzhoushaoyu"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/20502", 
            "date_created": "2013-01-25 18:08:19.273400+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "So we should also fix the stack traces, as they never should have been past.", 
            "date_created": "2013-01-25 19:56:53.242075+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/20502\nCommitted: http://github.com/openstack/nova/commit/fa52cb09b2270876c9d9a03106f961be6c9db834\nSubmitter: Jenkins\nBranch:    master\n\ncommit fa52cb09b2270876c9d9a03106f961be6c9db834\nAuthor: Davanum Srinivas <email address hidden>\nDate:   Fri Jan 25 13:07:34 2013 -0500\n\n    Strip out Traceback from HTTP response\n    \n    We should not let stack traces leak to the REST API users\n    \n    Fixes LP# 1103324\n    Fixes LP# 1092610\n    \n    Change-Id: Ic1208bfeb7d44e672f8b8d3a4004a9802c14e7b9\n", 
            "date_created": "2013-01-28 17:15:38.337806+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: stable/folsom\nReview: https://review.openstack.org/24471", 
            "date_created": "2013-03-14 20:20:04.287039+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/24475", 
            "date_created": "2013-03-14 20:54:16.470017+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: stable/folsom\nReview: https://review.openstack.org/24476", 
            "date_created": "2013-03-14 20:56:51.108921+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/24475\nCommitted: http://github.com/openstack/nova/commit/d63bd8d692a9eb16caa818101cdbb3358f6b4681\nSubmitter: Jenkins\nBranch:    master\n\ncommit d63bd8d692a9eb16caa818101cdbb3358f6b4681\nAuthor: Vishvananda Ishaya <email address hidden>\nDate:   Thu Mar 14 13:47:42 2013 -0700\n\n    Don't include traceback when wrapping exceptions\n    \n    The fix in fa52cb09b2270876c9d9a03106f961be6c9db834 strips tracebacks\n    from exceptions when returning them to the user, but it still spams\n    the log with a long traceback. We shouldn't be including the traceback\n    when we wrap the exception in the first place. Instead we just\n    include the message.\n    \n    It also updates the error code to 409 for device in use since this\n    is actually a conflict.\n    \n    Fix for:\n    \n      bug 1155315\n      bug 1103324\n      bug 1092610\n    \n    Change-Id: I95019a3022eb52e0335c455009c13fe229475d03\n", 
            "date_created": "2013-03-14 22:58:47.370494+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/24476\nCommitted: http://github.com/openstack/nova/commit/524a5a3dc89331649bf89ab442d0295f45dcae3f\nSubmitter: Jenkins\nBranch:    stable/folsom\n\ncommit 524a5a3dc89331649bf89ab442d0295f45dcae3f\nAuthor: Vishvananda Ishaya <email address hidden>\nDate:   Thu Mar 14 13:47:42 2013 -0700\n\n    Don't include traceback when wrapping exceptions\n    \n    The fix in fa52cb09b2270876c9d9a03106f961be6c9db834 strips tracebacks\n    from exceptions when returning them to the user, but it still spams\n    the log with a long traceback. We shouldn't be including the traceback\n    when we wrap the exception in the first place. Instead we just\n    include the message.\n    \n    It also updates the error code to 409 for device in use since this\n    is actually a conflict.\n    \n    Fix for:\n    \n      bug 1155315\n      bug 1103324\n      bug 1092610\n    \n    Change-Id: I95019a3022eb52e0335c455009c13fe229475d03\n    (cherry picked from commit d63bd8d692a9eb16caa818101cdbb3358f6b4681)\n", 
            "date_created": "2013-03-26 07:51:11.082347+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}