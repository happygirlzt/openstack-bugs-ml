{
    "status": "Expired", 
    "last_updated": "2016-07-05 09:53:25.138880+00:00", 
    "description": "THis came up when analyzing https://bugs.launchpad.net/nova/+bug/1371677 and there is a lot information on there. The bug in short is that _get_instance_disk_info will rely on db information to filter out the volumes from the list of discs it gets from libvirt XML, but due to the async nature of unplug - this can still contain a volume that does not exist in the DB and will not be filtered out, so the code will assume it's an lvm image and do a blockdev on it which can block for a very long time.\n\nThe solution is to NOT use libvirt XML in this particular case (but anywhere in Nova really) to find out information about running instances.", 
    "tags": [
        "libvirt"
    ], 
    "importance": "Undecided", 
    "heat": 8, 
    "link": "https://bugs.launchpad.net/nova/+bug/1375868", 
    "owner": "None", 
    "id": 1375868, 
    "index": 5188, 
    "created": "2014-09-30 15:44:36.141231+00:00", 
    "title": "libvirt: race between hot unplug and XMLDesc in _get_instance_disk_info", 
    "comments": [
        {
            "content": "THis came up when analyzing https://bugs.launchpad.net/nova/+bug/1371677 and there is a lot information on there. The bug in short is that _get_instance_disk_info will rely on db information to filter out the volumes from the list of discs it gets from libvirt XML, but due to the async nature of unplug - this can still contain a volume that does not exist in the DB and will not be filtered out, so the code will assume it's an lvm image and do a blockdev on it which can block for a very long time.\n\nThe solution is to NOT use libvirt XML in this particular case (but anywhere in Nova really) to find out information about running instances.", 
            "date_created": "2014-09-30 15:44:36.141231+00:00", 
            "author": "https://api.launchpad.net/1.0/~ndipanov"
        }, 
        {
            "content": "I'm going to look into this, but considering it's importance, I'll jump off if I can't provide a fix quickly. I'd suggest that this be marked as 'Triaged' as the approach to fixing this is outlined in the Bug Description.", 
            "date_created": "2014-09-30 19:19:45.451288+00:00", 
            "author": "https://api.launchpad.net/1.0/~mjturek"
        }, 
        {
            "content": "Does this bug will cause libvird not response any request\uff1f\nThanks\nAndy", 
            "date_created": "2016-01-08 07:34:48.609714+00:00", 
            "author": "https://api.launchpad.net/1.0/~wjw7869"
        }, 
        {
            "content": "\nThis is an automated cleanup. This bug report has been closed because it\nis older than 18 months and there is no open code change to fix this.\nAfter this time it is unlikely that the circumstances which lead to\nthe observed issue can be reproduced.\n\nIf you can reproduce the bug, please:\n* reopen the bug report (set to status \"New\")\n* AND add the detailed steps to reproduce the issue (if applicable)\n* AND leave a comment \"CONFIRMED FOR: <RELEASE_NAME>\"\n  Only still supported release names are valid (LIBERTY, MITAKA, OCATA, NEWTON).\n  Valid example: CONFIRMED FOR: LIBERTY\n", 
            "date_created": "2016-07-05 09:53:24.554197+00:00", 
            "author": "https://api.launchpad.net/1.0/~mzoeller"
        }
    ]
}