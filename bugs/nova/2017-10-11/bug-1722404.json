{
    "status": "In Progress", 
    "last_updated": "2017-10-11 17:05:09.076056+00:00", 
    "description": "I found this while working on a change to improve the usage of the CellDatabases test fixture by defaulting to the 'cell0' database instead of the 'cell1' database.\n\nIn the set_target_cell method, we synchronize access to the cached cell\ndatabase transaction context manager objects to prevent more than one \nthread from using a cell's transaction context manager at the same\ntime.\n\nIn scatter_gather_cells, we're calling target_cell in such a way that\nthe lock is acquired and released BEFORE the green thread actually\naccesses the database in the spawned function. So multiple threads can \naccess a cell's database transaction context manager and it's possible\nfor a database transaction to fail with the error:\n\n  TypeError: Can't upgrade a READER transaction to a WRITER\n             mid-transaction\n\nbecause the in-scope transaction context might be in the middle of a\nread when a concurrent green thread tries to do a write.\n\nI saw this happen in the test:\n\nnova.tests.unit.compute.test_compute.DisabledInstanceTypesTestCase.test_can_resize_to_visible_instance_type\n\nwhere a parallel read of instances during a quota check accessed the cell's database transaction context manager at the same time as an instance.save() in the compute/api, causing the instance.save() to fail with \"TypeError: Can't upgrade a READER transaction to a WRITER mid-transaction.\"", 
    "tags": [
        "cells"
    ], 
    "importance": "High", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1722404", 
    "owner": "https://api.launchpad.net/1.0/~melwitt", 
    "id": 1722404, 
    "index": 0, 
    "created": "2017-10-09 20:53:43.856144+00:00", 
    "title": "Database transactions can fail with 'TypeError: Can't upgrade a READER transaction to a WRITER mid-transaction' because of scatter_gather_cells", 
    "comments": [
        {
            "content": "I found this while working on a change to improve the usage of the CellDatabases test fixture by defaulting to the 'cell0' database instead of the 'cell1' database.\n\nIn the set_target_cell method, we synchronize access to the cached cell\ndatabase transaction context manager objects to prevent more than one \nthread from using a cell's transaction context manager at the same\ntime.\n\nIn scatter_gather_cells, we're calling target_cell in such a way that\nthe lock is acquired and released BEFORE the green thread actually\naccesses the database in the spawned function. So multiple threads can \naccess a cell's database transaction context manager and it's possible\nfor a database transaction to fail with the error:\n\n  TypeError: Can't upgrade a READER transaction to a WRITER\n             mid-transaction\n\nbecause the in-scope transaction context might be in the middle of a\nread when a concurrent green thread tries to do a write.\n\nI saw this happen in the test:\n\nnova.tests.unit.compute.test_compute.DisabledInstanceTypesTestCase.test_can_resize_to_visible_instance_type\n\nwhere a parallel read of instances during a quota check accessed the cell's database transaction context manager at the same time as an instance.save() in the compute/api, causing the instance.save() to fail with \"TypeError: Can't upgrade a READER transaction to a WRITER mid-transaction.\"", 
            "date_created": "2017-10-09 20:53:43.856144+00:00", 
            "author": "https://api.launchpad.net/1.0/~melwitt"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/510691", 
            "date_created": "2017-10-09 20:56:55.524550+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}