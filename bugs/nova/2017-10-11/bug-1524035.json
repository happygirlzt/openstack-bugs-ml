{
    "status": "Fix Released", 
    "last_updated": "2016-01-21 13:43:10.689612+00:00", 
    "description": "This code doesn't work:\n\nhttps://github.com/openstack/nova/blob/master/nova/virt/block_device.py#L128-L131\n\nThat will create a BlockDeviceMapping object to be wrapped in the DriverBlockDevice object (if a BDM object was not passed in).  The problem is on self._bdm_obj.save() will fail with something like this:\n\nCaptured traceback:\n~~~~~~~~~~~~~~~~~~~\n    Traceback (most recent call last):\n      File \"nova/tests/unit/virt/test_block_device.py\", line 909, in test_blank_attach_volume_cinder_cross_az_attach_false\n        self.virt_driver)\n      File \"nova/virt/block_device.py\", line 456, in attach\n        self.save()\n      File \"nova/virt/block_device.py\", line 363, in save\n        super(DriverVolumeBlockDevice, self).save()\n      File \"nova/virt/block_device.py\", line 176, in save\n        self._bdm_obj.save()\n      File \"/home/mriedem/git/nova/.tox/py27/local/lib/python2.7/site-packages/oslo_versionedobjects/base.py\", line 203, in wrapper\n        objtype=self.obj_name())\n    oslo_versionedobjects.exception.OrphanedObjectError: Cannot call save on orphaned BlockDeviceMapping object\n\nThat's because the BDM object that was created doesn't have a context set on it.\n\nAnd we can't pass context to self._bdm_obj.save() because we removed that here: https://review.openstack.org/#/c/164268/\n\nWe've apparently never had a problem with this in runtime because we must always be constructing the DriverBlockDevice with a real BDM object in the compute code, we just weren't doing it properly in the tests - and the tests mock out nova.objects.BlockDeviceMapping.save() so we never knew it was a problem.", 
    "tags": [], 
    "importance": "Medium", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1524035", 
    "owner": "https://api.launchpad.net/1.0/~mriedem", 
    "id": 1524035, 
    "index": 4402, 
    "created": "2015-12-08 18:25:50.808618+00:00", 
    "title": "nova.virt.block_device.DriverBlockDevice cannot save to DB if bdm passed in was not already an object", 
    "comments": [
        {
            "content": "This code doesn't work:\n\nhttps://github.com/openstack/nova/blob/master/nova/virt/block_device.py#L128-L131\n\nThat will create a BlockDeviceMapping object to be wrapped in the DriverBlockDevice object (if a BDM object was not passed in).  The problem is on self._bdm_obj.save() will fail with something like this:\n\nCaptured traceback:\n~~~~~~~~~~~~~~~~~~~\n    Traceback (most recent call last):\n      File \"nova/tests/unit/virt/test_block_device.py\", line 909, in test_blank_attach_volume_cinder_cross_az_attach_false\n        self.virt_driver)\n      File \"nova/virt/block_device.py\", line 456, in attach\n        self.save()\n      File \"nova/virt/block_device.py\", line 363, in save\n        super(DriverVolumeBlockDevice, self).save()\n      File \"nova/virt/block_device.py\", line 176, in save\n        self._bdm_obj.save()\n      File \"/home/mriedem/git/nova/.tox/py27/local/lib/python2.7/site-packages/oslo_versionedobjects/base.py\", line 203, in wrapper\n        objtype=self.obj_name())\n    oslo_versionedobjects.exception.OrphanedObjectError: Cannot call save on orphaned BlockDeviceMapping object\n\nThat's because the BDM object that was created doesn't have a context set on it.\n\nAnd we can't pass context to self._bdm_obj.save() because we removed that here: https://review.openstack.org/#/c/164268/\n\nWe've apparently never had a problem with this in runtime because we must always be constructing the DriverBlockDevice with a real BDM object in the compute code, we just weren't doing it properly in the tests - and the tests mock out nova.objects.BlockDeviceMapping.save() so we never knew it was a problem.", 
            "date_created": "2015-12-08 18:25:50.808618+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/260685", 
            "date_created": "2015-12-22 19:29:15.941108+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/260685\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=215f403ad3b7705a28075217b97a0f6f6e658204\nSubmitter: Jenkins\nBranch:    master\n\ncommit 215f403ad3b7705a28075217b97a0f6f6e658204\nAuthor: Matt Riedemann <email address hidden>\nDate:   Mon Dec 21 13:48:36 2015 -0800\n\n    DriverBlockDevice must receive a BDM object, not a dict\n    \n    Commit 7a54543a81cbb8d20e6df29e7f4468a436dae212\n    made it such that a BlockDeviceMapping object has to be\n    constructed with a request context in order to call the\n    remotable save() method on it.\n    \n    We must be already passing BDM objects when constructing\n    DriverBlockDevices otherwise calling self._bdm_obj.save()\n    would fail with an OrphanedObjectError.  So the only places\n    that were still using bdm dicts were unit tests, and those\n    worked because objects.BlockDeviceMapping.save() is being\n    mocked out.\n    \n    This removes the false sense of ability to construct a\n    DriverBlocKDevice without a BDM object and cleans up the\n    unit tests to reflect that reality.\n    \n    Closes-Bug: #1524035\n    \n    Change-Id: Ie745fc4d36ceb3e0aae1b14d5d56b2b83bbb192c\n", 
            "date_created": "2016-01-05 08:18:07.986834+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/nova 13.0.0.0b2 development milestone.", 
            "date_created": "2016-01-21 13:43:10.053248+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }
    ]
}