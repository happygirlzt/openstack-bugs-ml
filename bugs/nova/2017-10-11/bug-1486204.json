{
    "status": "In Progress", 
    "last_updated": "2017-08-07 09:30:44.325640+00:00", 
    "description": "After change I3ce12563846b2c34ac778d44e7582eef930ae4b0 was merged, change I76a7cfd995db6c04f7af48ff8c9acdd55750ed76 ceased to work for root volume device name.\n\nNow we have a situation when we try to boot an instance from volume with specified device name e.g. like this:\n\nnova boot --block-device device=vdc,source=volume,dest=volume,size=1,bootindex=0,id=433756c2-d4dc-4560-b247-e5cadb79a505 --flavor m1.tiny  instance-volume\n(with any virt_type)\n\n\u00a0\u00a0or like this\n\n\u00a0nova boot ct-3 --flavor m1.small  --block-device-mapping vda=b2ac7e52-6ad3-4c11-9178-c3bf52fd373f:::0\n(for virt_type=parallels, which doesn't support virtio bus)\n\nwith libvirt driver , it will try to clear user specified  device name and use driver default device name and we will actually see log warning for this:\n\n2015-08-18 15:05:53.892 WARNING nova.virt.libvirt.driver [req-09b86d01-be81-42ac-aabb-71c427e80909 admin demo] [instance: 6943e226-8c23-4137-a897-bdbbcebcd31d] Ignoring supplied device name: /dev/vda. Libvirt can't honour user-supplied dev names\n\nbut nothing will actually happen. It is so because instance.root_device_name is set based on user specified device name  in nova.compute.manager._default_block_device_names before driver's default_device_names_for_instance is called and user input is cleared, while bdm in nova.virt.libvirt.blockinfo.get_disk_mapping are updated taking into account instance.root_device_name.\n\n\nThe problem is also that code generating device names for secondary devices is dependent on specified root_device_name that is according to ignoring logic should not be taken into account.", 
    "tags": [], 
    "importance": "Medium", 
    "heat": 66, 
    "link": "https://bugs.launchpad.net/nova/+bug/1486204", 
    "owner": "https://api.launchpad.net/1.0/~mnestratov", 
    "id": 1486204, 
    "index": 4321, 
    "created": "2015-08-18 19:17:19.876041+00:00", 
    "title": "libvirt: user specified volume device names are not ignored", 
    "comments": [
        {
            "content": "After change I3ce12563846b2c34ac778d44e7582eef930ae4b0 was merged, change I76a7cfd995db6c04f7af48ff8c9acdd55750ed76 ceased to work for root volume device name.\n\nNow we have a situation when we try to boot an instance from volume with specified device name e.g. like this:\n\nnova boot --block-device device=vdc,source=volume,dest=volume,size=1,bootindex=0,id=433756c2-d4dc-4560-b247-e5cadb79a505 --flavor m1.tiny  instance-volume\n\n  or like this \n\n nova boot ct-3 --flavor m1.small  --block-device-mapping vda=b2ac7e52-6ad3-4c11-9178-c3bf52fd373f:::0\nwith libvirt driver , it will try to clear user specified  device name and use driver default device name and we will actually see log warning for this:\n\n2015-08-18 15:05:53.892 WARNING nova.virt.libvirt.driver [req-09b86d01-be81-42ac-aabb-71c427e80909 admin demo] [instance: 6943e226-8c23-4137-a897-bdbbcebcd31d] Ignoring supplied device name: /dev/vda. Libvirt can't honour user-supplied dev names\n\nbut nothing will actually happen. It is so because instance.root_device_name is set based on user specified device name  in nova.compute.manager._default_block_device_names before driver's default_device_names_for_instance is called and user input is cleared, while bdm in nova.virt.libvirt.blockinfo.get_disk_mapping are updated taking into account instance.root_device_name.", 
            "date_created": "2015-08-18 19:17:19.876041+00:00", 
            "author": "https://api.launchpad.net/1.0/~mnestratov"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/214314", 
            "date_created": "2015-08-18 19:42:37.490523+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Does the second case (with legacy mapping) fail? It uses vda as a device name, and Nova selects /dev/vda for root_device_name, and assigns /dev/vda for the volume. So what's wrong with that?", 
            "date_created": "2015-08-18 21:51:11.205666+00:00", 
            "author": "https://api.launchpad.net/1.0/~ftersin"
        }, 
        {
            "content": "IIANM it occures whith only root device. Names of other devices are ignored.\nAnd with 'vda' root device name all do work properly.\nSo the only case is broken is that a user specifies not default root device name.", 
            "date_created": "2015-08-18 22:06:52.181981+00:00", 
            "author": "https://api.launchpad.net/1.0/~ftersin"
        }, 
        {
            "content": "See previous comments", 
            "date_created": "2015-08-19 05:12:50.161629+00:00", 
            "author": "https://api.launchpad.net/1.0/~ftersin"
        }, 
        {
            "content": "The broken default scenario is with parallels virt_type because it doesn't support virtio bus and uses sata instead which corresponds to sdx device names. Also it breaks scenarios when you specify any bus different from virtio, e.g. sata, iscsi, ide and specify a device name which doesn't correspond to selected bus.", 
            "date_created": "2015-08-19 08:35:55.101027+00:00", 
            "author": "https://api.launchpad.net/1.0/~mnestratov"
        }, 
        {
            "content": "Have same issue, when try to boot from new volume and image which have hw_disk_bus = scsi property. Patch https://review.openstack.org/#/c/214314/4/nova/virt/libvirt/driver.py helps me.", 
            "date_created": "2016-02-17 10:12:05.415338+00:00", 
            "author": "https://api.launchpad.net/1.0/~martins-k"
        }, 
        {
            "content": "Change abandoned by Michael Still (<email address hidden>) on branch: master\nReview: https://review.openstack.org/214314\nReason: This patch has been sitting unchanged for more than 12 weeks. I am therefore going to abandon it to keep the review queue sane. Please feel free to restore the change if you're still working on it.", 
            "date_created": "2017-01-25 05:51:58.531950+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "While creating a new instance the \"Create New Volume\" checkbox in horizone now defaults to 'yes' - making this bug appear as soon as you create a new openstack infrastructure - therefore making it pretty serious, as you never get a working environment from the start. Will this ever be fixed?", 
            "date_created": "2017-08-07 09:30:43.836267+00:00", 
            "author": "https://api.launchpad.net/1.0/~tahvok"
        }
    ]
}