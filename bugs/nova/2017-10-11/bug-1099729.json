{
    "status": "Fix Released", 
    "last_updated": "2015-03-16 18:46:34.904108+00:00", 
    "description": "reproduce steps in devstack:\n1. create an instance with flavor m1.small using demo user\n2. resize it from m1.small to m1.tiny\n3. when the task_state of instance is 'resize_finish', delete it by demo user\n4. query the nova db like below:\nmysql> select * from quota_usages ;\n+---------------------+---------------------+------------+---------+----+----------------------------------+-----------+--------+----------+---------------+\n| created_at          | updated_at          | deleted_at | deleted | id | project_id                       | resource  | in_use | reserved | until_refresh |\n+---------------------+---------------------+------------+---------+----+----------------------------------+-----------+--------+----------+---------------+\n| 2013-01-08 04:43:21 | 2013-01-15 07:32:20 | NULL       |       0 |  1 | c0fb216d13cc46ca9abe7261ab9ab0d5 | instances |      0 |        0 |          NULL |\n| 2013-01-08 04:43:21 | 2013-01-15 07:32:20 | NULL       |       0 |  2 | c0fb216d13cc46ca9abe7261ab9ab0d5 | ram       |   1536 |        0 |          NULL |\n| 2013-01-08 04:43:21 | 2013-01-15 07:32:20 | NULL       |       0 |  3 | c0fb216d13cc46ca9abe7261ab9ab0d5 | cores     |      0 |        0 |          NULL |\n+---------------------+---------------------+------------+---------+----+----------------------------------+-----------+--------+----------+---------------+\n\nthis is a race condition issue, so it is probabilistic to reproduce it, but you can add a time.sleep(10) to  nova/compute/manager.py:_finish_resize(), just like this:\n LOG.debug(_(\"-----------------------sleep 10 start-------------------------\"))\n time.sleep(10)\n self.network_api.setup_networks_on_host(context, instance,\n                                                migration['dest_compute'])\nwhen you see the debug log during resize, you delete the instance, and this issue will occur almost every time.\n\nthe reason is that, when we delete an instance, we use instance['memory_mb'], instance['vcpus'] to create quota's reservations, if the instance is resizing but not 'finished', the in_use value in quota_usages is NOT commited(2048M), but the instance['memory_mb'], instance['vcpus'] is updated(512M), so the deleting operation will commit a wrong reservations(-512M), and the in_use value changes to 2048-512=1536.", 
    "tags": [
        "quotas"
    ], 
    "importance": "Undecided", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1099729", 
    "owner": "https://api.launchpad.net/1.0/~hzwangpan", 
    "id": 1099729, 
    "index": 3314, 
    "created": "2013-01-15 09:13:39.720598+00:00", 
    "title": "quota_usages in_use value change incorrectly when delete a resizing instance", 
    "comments": [
        {
            "content": "reproduce steps in devstack:\n1. create an instance with flavor m1.small using demo user\n2. resize it from m1.small to m1.tiny\n3. when the task_state of instance is 'resize_finish', delete it by demo user\n4. query the nova db like below:\nmysql> select * from quota_usages ;\n+---------------------+---------------------+------------+---------+----+----------------------------------+-----------+--------+----------+---------------+\n| created_at          | updated_at          | deleted_at | deleted | id | project_id                       | resource  | in_use | reserved | until_refresh |\n+---------------------+---------------------+------------+---------+----+----------------------------------+-----------+--------+----------+---------------+\n| 2013-01-08 04:43:21 | 2013-01-15 07:32:20 | NULL       |       0 |  1 | c0fb216d13cc46ca9abe7261ab9ab0d5 | instances |      0 |        0 |          NULL |\n| 2013-01-08 04:43:21 | 2013-01-15 07:32:20 | NULL       |       0 |  2 | c0fb216d13cc46ca9abe7261ab9ab0d5 | ram       |   1536 |        0 |          NULL |\n| 2013-01-08 04:43:21 | 2013-01-15 07:32:20 | NULL       |       0 |  3 | c0fb216d13cc46ca9abe7261ab9ab0d5 | cores     |      0 |        0 |          NULL |\n+---------------------+---------------------+------------+---------+----+----------------------------------+-----------+--------+----------+---------------+\n\nthis is a race condition issue, so it is probabilistic to reproduce it, but you can add a time.sleep(10) to  nova/compute/manager.py:_finish_resize(), just like this:\n LOG.debug(_(\"-----------------------sleep 10 start-------------------------\"))\n time.sleep(10)\n self.network_api.setup_networks_on_host(context, instance,\n                                                migration['dest_compute'])\nwhen you see the debug log during resize, you delete the instance, and this issue will occur almost every time.\n\nthe reason is that, when we delete an instance, we use instance['memory_mb'], instance['vcpus'] to create quota's reservations, if the instance is resizing but not 'finished', the in_use value in quota_usages is NOT commited(2048M), but the instance['memory_mb'], instance['vcpus'] is updated(512M), so the deleting operation will commit a wrong reservations(-512M), and the in_use value changes to 2048-512=1536.", 
            "date_created": "2013-01-15 09:13:39.720598+00:00", 
            "author": "https://api.launchpad.net/1.0/~hzwangpan"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/19772", 
            "date_created": "2013-01-16 02:08:06.887529+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/19772\nCommitted: http://github.com/openstack/nova/commit/796716d4cc51f35a734aa1f9d70ea567c37b5a79\nSubmitter: Jenkins\nBranch:    master\n\ncommit 796716d4cc51f35a734aa1f9d70ea567c37b5a79\nAuthor: Wangpan <email address hidden>\nDate:   Wed Jan 16 10:00:47 2013 +0800\n\n    Fix wrong quota reservation when deleting resizing instance\n    \n    When we delete an instance which is resizing from m1.small to m1.tiny, we use\n    instance['memory_mb'] to create quota's ram reservation, if the resizing is not\n    'finished', the in_use value in quota_usages is NOT commited(2048M),\n    but the instance['memory_mb'] is updated(512M) in _finish_resize(), so the\n    deleting operation after updating will commit a wrong ram reservation(-512M),\n    and the in_use value changes to 2048-512=1536.\n    The cores reservation encounters the same problem.\n    \n    Fixes bug #1099729\n    \n    Change-Id: Ide54fc9d822041f535819c496822aeac5a8dc68d\n", 
            "date_created": "2013-01-19 13:19:36.911599+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}