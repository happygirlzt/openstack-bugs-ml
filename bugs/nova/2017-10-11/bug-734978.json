{
    "status": "Fix Released", 
    "last_updated": "2011-04-15 08:38:16.314226+00:00", 
    "description": "nova/tests/test_xenapi.py:81:37: E202 whitespace before '}'\n                  'os_type': 'linux'\n                                    ^\n    Avoid extraneous whitespace in the following situations:\n\n    - Immediately inside parentheses, brackets or braces.\n\n    - Immediately before a comma, semicolon, or colon.\n\n    Okay: spam(ham[1], {eggs: 2})\n    E201: spam( ham[1], {eggs: 2})\n    E201: spam(ham[ 1], {eggs: 2})\n    E201: spam(ham[1], { eggs: 2})\n    E202: spam(ham[1], {eggs: 2} )\n    E202: spam(ham[1 ], {eggs: 2})\n    E202: spam(ham[1], {eggs: 2 })\n\n    E203: if x == 4: print x, y; x, y = y , x\n    E203: if x == 4: print x, y ; x, y = y, x\n    E203: if x == 4 : print x, y; x, y = y, x\nnova/tests/test_xenapi.py:318:37: E202 whitespace before '}'\n                  'os_type': os_type\n                                    ^\n    Avoid extraneous whitespace in the following situations:\n\n    - Immediately inside parentheses, brackets or braces.\n\n    - Immediately before a comma, semicolon, or colon.\n\n    Okay: spam(ham[1], {eggs: 2})\n    E201: spam( ham[1], {eggs: 2})\n    E201: spam(ham[ 1], {eggs: 2})\n    E201: spam(ham[1], { eggs: 2})\n    E202: spam(ham[1], {eggs: 2} )\n    E202: spam(ham[1 ], {eggs: 2})\n    E202: spam(ham[1], {eggs: 2 })\n\n    E203: if x == 4: print x, y; x, y = y , x\n    E203: if x == 4: print x, y ; x, y = y, x\n    E203: if x == 4 : print x, y; x, y = y, x\nnova/tests/test_xenapi.py:443:37: E202 whitespace before '}'\n                  'os_type': 'linux'\n                                    ^\n    Avoid extraneous whitespace in the following situations:\n\n    - Immediately inside parentheses, brackets or braces.\n\n    - Immediately before a comma, semicolon, or colon.\n\n    Okay: spam(ham[1], {eggs: 2})\n    E201: spam( ham[1], {eggs: 2})\n    E201: spam(ham[ 1], {eggs: 2})\n    E201: spam(ham[1], { eggs: 2})\n    E202: spam(ham[1], {eggs: 2} )\n    E202: spam(ham[1 ], {eggs: 2})\n    E202: spam(ham[1], {eggs: 2 })\n\n    E203: if x == 4: print x, y; x, y = y , x\n    E203: if x == 4: print x, y ; x, y = y, x\n    E203: if x == 4 : print x, y; x, y = y, x\nnova/tests/db/fakes.py:80:41: E202 whitespace before '}'\n            'os_type': values['os_type']\n                                        ^\n    Avoid extraneous whitespace in the following situations:\n\n    - Immediately inside parentheses, brackets or braces.\n\n    - Immediately before a comma, semicolon, or colon.\n\n    Okay: spam(ham[1], {eggs: 2})\n    E201: spam( ham[1], {eggs: 2})\n    E201: spam(ham[ 1], {eggs: 2})\n    E201: spam(ham[1], { eggs: 2})\n    E202: spam(ham[1], {eggs: 2} )\n    E202: spam(ham[1 ], {eggs: 2})\n    E202: spam(ham[1], {eggs: 2 })\n\n    E203: if x == 4: print x, y; x, y = y , x\n    E203: if x == 4: print x, y ; x, y = y, x\n    E203: if x == 4 : print x, y; x, y = y, x\nnova/virt/xenapi/vm_utils.py:139:32: E202 whitespace before '}'\n            'xenstore_data': {}\n                               ^\n    Avoid extraneous whitespace in the following situations:\n\n    - Immediately inside parentheses, brackets or braces.\n\n    - Immediately before a comma, semicolon, or colon.\n\n    Okay: spam(ham[1], {eggs: 2})\n    E201: spam( ham[1], {eggs: 2})\n    E201: spam(ham[ 1], {eggs: 2})\n    E201: spam(ham[1], { eggs: 2})\n    E202: spam(ham[1], {eggs: 2} )\n    E202: spam(ham[1 ], {eggs: 2})\n    E202: spam(ham[1], {eggs: 2 })\n\n    E203: if x == 4: print x, y; x, y = y , x\n    E203: if x == 4: print x, y ; x, y = y, x\n    E203: if x == 4 : print x, y; x, y = y, x\nplugins/xenserver/xenapi/etc/xapi.d/plugins/glance:219:49: E202 whitespace before '}'\n        'x-image-meta-property-os-type': os_type\n                                                ^\n    Avoid extraneous whitespace in the following situations:\n\n    - Immediately inside parentheses, brackets or braces.\n\n    - Immediately before a comma, semicolon, or colon.\n\n    Okay: spam(ham[1], {eggs: 2})\n    E201: spam( ham[1], {eggs: 2})\n    E201: spam(ham[ 1], {eggs: 2})\n    E201: spam(ham[1], { eggs: 2})\n    E202: spam(ham[1], {eggs: 2} )\n    E202: spam(ham[1 ], {eggs: 2})\n    E202: spam(ham[1], {eggs: 2 })\n\n    E203: if x == 4: print x, y; x, y = y , x\n    E203: if x == 4: print x, y ; x, y = y, x\n    E203: if x == 4 : print x, y; x, y = y, x\njpipes@serialcoder:~/repos/nova/trunk$ bzr revno\n797\njpipes@serialcoder:~/repos/nova/trunk$ .nova-venv/bin/pep8 --version\n0.5.0", 
    "tags": [
        "pep8"
    ], 
    "importance": "Low", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/734978", 
    "owner": "https://api.launchpad.net/1.0/~jk0", 
    "id": 734978, 
    "index": 5021, 
    "created": "2011-03-14 17:49:19.532851+00:00", 
    "title": "pep8 errors on trunk r797", 
    "comments": [
        {
            "content": "nova/tests/test_xenapi.py:81:37: E202 whitespace before '}'\n                  'os_type': 'linux'\n                                    ^\n    Avoid extraneous whitespace in the following situations:\n\n    - Immediately inside parentheses, brackets or braces.\n\n    - Immediately before a comma, semicolon, or colon.\n\n    Okay: spam(ham[1], {eggs: 2})\n    E201: spam( ham[1], {eggs: 2})\n    E201: spam(ham[ 1], {eggs: 2})\n    E201: spam(ham[1], { eggs: 2})\n    E202: spam(ham[1], {eggs: 2} )\n    E202: spam(ham[1 ], {eggs: 2})\n    E202: spam(ham[1], {eggs: 2 })\n\n    E203: if x == 4: print x, y; x, y = y , x\n    E203: if x == 4: print x, y ; x, y = y, x\n    E203: if x == 4 : print x, y; x, y = y, x\nnova/tests/test_xenapi.py:318:37: E202 whitespace before '}'\n                  'os_type': os_type\n                                    ^\n    Avoid extraneous whitespace in the following situations:\n\n    - Immediately inside parentheses, brackets or braces.\n\n    - Immediately before a comma, semicolon, or colon.\n\n    Okay: spam(ham[1], {eggs: 2})\n    E201: spam( ham[1], {eggs: 2})\n    E201: spam(ham[ 1], {eggs: 2})\n    E201: spam(ham[1], { eggs: 2})\n    E202: spam(ham[1], {eggs: 2} )\n    E202: spam(ham[1 ], {eggs: 2})\n    E202: spam(ham[1], {eggs: 2 })\n\n    E203: if x == 4: print x, y; x, y = y , x\n    E203: if x == 4: print x, y ; x, y = y, x\n    E203: if x == 4 : print x, y; x, y = y, x\nnova/tests/test_xenapi.py:443:37: E202 whitespace before '}'\n                  'os_type': 'linux'\n                                    ^\n    Avoid extraneous whitespace in the following situations:\n\n    - Immediately inside parentheses, brackets or braces.\n\n    - Immediately before a comma, semicolon, or colon.\n\n    Okay: spam(ham[1], {eggs: 2})\n    E201: spam( ham[1], {eggs: 2})\n    E201: spam(ham[ 1], {eggs: 2})\n    E201: spam(ham[1], { eggs: 2})\n    E202: spam(ham[1], {eggs: 2} )\n    E202: spam(ham[1 ], {eggs: 2})\n    E202: spam(ham[1], {eggs: 2 })\n\n    E203: if x == 4: print x, y; x, y = y , x\n    E203: if x == 4: print x, y ; x, y = y, x\n    E203: if x == 4 : print x, y; x, y = y, x\nnova/tests/db/fakes.py:80:41: E202 whitespace before '}'\n            'os_type': values['os_type']\n                                        ^\n    Avoid extraneous whitespace in the following situations:\n\n    - Immediately inside parentheses, brackets or braces.\n\n    - Immediately before a comma, semicolon, or colon.\n\n    Okay: spam(ham[1], {eggs: 2})\n    E201: spam( ham[1], {eggs: 2})\n    E201: spam(ham[ 1], {eggs: 2})\n    E201: spam(ham[1], { eggs: 2})\n    E202: spam(ham[1], {eggs: 2} )\n    E202: spam(ham[1 ], {eggs: 2})\n    E202: spam(ham[1], {eggs: 2 })\n\n    E203: if x == 4: print x, y; x, y = y , x\n    E203: if x == 4: print x, y ; x, y = y, x\n    E203: if x == 4 : print x, y; x, y = y, x\nnova/virt/xenapi/vm_utils.py:139:32: E202 whitespace before '}'\n            'xenstore_data': {}\n                               ^\n    Avoid extraneous whitespace in the following situations:\n\n    - Immediately inside parentheses, brackets or braces.\n\n    - Immediately before a comma, semicolon, or colon.\n\n    Okay: spam(ham[1], {eggs: 2})\n    E201: spam( ham[1], {eggs: 2})\n    E201: spam(ham[ 1], {eggs: 2})\n    E201: spam(ham[1], { eggs: 2})\n    E202: spam(ham[1], {eggs: 2} )\n    E202: spam(ham[1 ], {eggs: 2})\n    E202: spam(ham[1], {eggs: 2 })\n\n    E203: if x == 4: print x, y; x, y = y , x\n    E203: if x == 4: print x, y ; x, y = y, x\n    E203: if x == 4 : print x, y; x, y = y, x\nplugins/xenserver/xenapi/etc/xapi.d/plugins/glance:219:49: E202 whitespace before '}'\n        'x-image-meta-property-os-type': os_type\n                                                ^\n    Avoid extraneous whitespace in the following situations:\n\n    - Immediately inside parentheses, brackets or braces.\n\n    - Immediately before a comma, semicolon, or colon.\n\n    Okay: spam(ham[1], {eggs: 2})\n    E201: spam( ham[1], {eggs: 2})\n    E201: spam(ham[ 1], {eggs: 2})\n    E201: spam(ham[1], { eggs: 2})\n    E202: spam(ham[1], {eggs: 2} )\n    E202: spam(ham[1 ], {eggs: 2})\n    E202: spam(ham[1], {eggs: 2 })\n\n    E203: if x == 4: print x, y; x, y = y , x\n    E203: if x == 4: print x, y ; x, y = y, x\n    E203: if x == 4 : print x, y; x, y = y, x\njpipes@serialcoder:~/repos/nova/trunk$ bzr revno\n797\njpipes@serialcoder:~/repos/nova/trunk$ .nova-venv/bin/pep8 --version\n0.5.0", 
            "date_created": "2011-03-14 17:49:19.532851+00:00", 
            "author": "https://api.launchpad.net/1.0/~jaypipes"
        }, 
        {
            "content": "These errors don't occur in pep8 0.6.0 so I think it's safe to consider them false-positives that were subsequently fixed.", 
            "date_created": "2011-03-14 18:12:12.394788+00:00", 
            "author": "https://api.launchpad.net/1.0/~rconradharris"
        }, 
        {
            "content": "I think all it takes to fix these errors is the terminating comma, which I personally like because it allows additions to a list/dict to look cleaner in diffs. \n\nAlso it would be nice if we also worked with 0.5.0 (which is maybe still standard on ubuntu 10.10?) if it doesn't hurt anything.", 
            "date_created": "2011-03-14 18:36:14.709175+00:00", 
            "author": "https://api.launchpad.net/1.0/~markwash"
        }, 
        {
            "content": "This is a bug as long as pip-requires contains 0.5.0.", 
            "date_created": "2011-03-14 18:59:53.773480+00:00", 
            "author": "https://api.launchpad.net/1.0/~jaypipes"
        }
    ]
}