{
    "status": "Fix Released", 
    "last_updated": "2013-10-17 11:46:24.949597+00:00", 
    "description": "Currently we have 6 Tempest tests  failing only when using postgresql:\n\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------\ntempest.api.compute.admin.test_fixed_ips.FixedIPsTestJson.test_set_reserve_with_invalid_ip\ntempest.api.compute.admin.test_fixed_ips.FixedIPsTestXml.test_set_reserve_with_invalid_ip\ntempest.api.compute.floating_ips.test_floating_ips_actions.FloatingIPsTestJSON.test_delete_nonexistant_floating_ip\ntempest.api.compute.floating_ips.test_floating_ips_actions.FloatingIPsTestXML.test_delete_nonexistant_floating_ip\ntempest.api.compute.floating_ips.test_list_floating_ips.FloatingIPDetailsTestJSON.test_get_nonexistant_floating_ip_details\ntempest.api.compute.floating_ips.test_list_floating_ips.FloatingIPDetailsTestXML.test_get_nonexistant_floating_ip_details\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nThis happens cause the tests are request using a different data type again postgresql: in the fixed_ips tests it is not an ip and in the floating ips tests the ip id is bigger than postgresql's integer, causing sqlalchemy to raise DataError like:\n\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n2013-05-22 04:55:25.708 ERROR nova.api.openstack [req-5edb2331-ecfa-44c8-8935-039235e7f84f admin admin] Caught error: (DataError) invalid input syntax for type inet: \"my.invalid.ip\"\nLINE 3: ...ERE fixed_ips.deleted = 0 AND fixed_ips.address = 'my.invali...\n                                                             ^\n 'SELECT fixed_ips.created_at AS fixed_ips_created_at, fixed_ips.updated_at AS fixed_ips_updated_at, fixed_ips.deleted_at AS fixed_ips_deleted_at, fixed_ips.deleted AS fixed_ips_deleted, fixed_ips.id AS fixed_ips_id, fixed_ips.address AS fixed_ips_address, fixed_ips.network_id AS fixed_ips_network_id, fixed_ips.virtual_interface_id AS fixed_ips_virtual_interface_id, fixed_ips.instance_uuid AS fixed_ips_instance_uuid, fixed_ips.allocated AS fixed_ips_allocated, fixed_ips.leased AS fixed_ips_leased, fixed_ips.reserved AS fixed_ips_reserved, fixed_ips.host AS fixed_ips_host \\nFROM fixed_ips \\nWHERE fixed_ips.deleted = %(deleted_1)s AND fixed_ips.address = %(address_1)s \\n LIMIT %(param_1)s' {'param_1': 1, 'address_1': u'my.invalid.ip', 'deleted_1': 0}\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nAlthough all of them are valid test cases.", 
    "tags": [
        "postgresql"
    ], 
    "importance": "High", 
    "heat": 24, 
    "link": "https://bugs.launchpad.net/nova/+bug/1182754", 
    "owner": "https://api.launchpad.net/1.0/~maurosr", 
    "id": 1182754, 
    "index": 1104, 
    "created": "2013-05-22 06:12:48.025902+00:00", 
    "title": "Tempest fails against wrong data types when using postgresql", 
    "comments": [
        {
            "content": "Currently we have 6 Tempest tests  failing only when using postgresql:\n\ntempest.api.compute.admin.test_fixed_ips.FixedIPsTestJson.test_set_reserve_with_invalid_ip\ntempest.api.compute.admin.test_fixed_ips.FixedIPsTestXml.test_set_reserve_with_invalid_ip\ntempest.api.compute.floating_ips.test_floating_ips_actions.FloatingIPsTestJSON.test_delete_nonexistant_floating_ip\ntempest.api.compute.floating_ips.test_floating_ips_actions.FloatingIPsTestXML.test_delete_nonexistant_floating_ip\ntempest.api.compute.floating_ips.test_list_floating_ips.FloatingIPDetailsTestJSON.test_get_nonexistant_floating_ip_details\ntempest.api.compute.floating_ips.test_list_floating_ips.FloatingIPDetailsTestXML.test_get_nonexistant_floating_ip_details\n\nThis happens cause the tests are request using a different data type again postgresql: in the fixed_ips tests it is not an ip and in the floating ips tests the ip id is bigger than postgresql's integer, causing sqlalchemy to raise DataError like:\n\n2013-05-22 04:55:25.708 ERROR nova.api.openstack [req-5edb2331-ecfa-44c8-8935-039235e7f84f admin admin] Caught error: (DataError) invalid input syntax for type inet: \"my.invalid.ip\"\nLINE 3: ...ERE fixed_ips.deleted = 0 AND fixed_ips.address = 'my.invali...\n                                                             ^\n 'SELECT fixed_ips.created_at AS fixed_ips_created_at, fixed_ips.updated_at AS fixed_ips_updated_at, fixed_ips.deleted_at AS fixed_ips_deleted_at, fixed_ips.deleted AS fixed_ips_deleted, fixed_ips.id AS fixed_ips_id, fixed_ips.address AS fixed_ips_address, fixed_ips.network_id AS fixed_ips_network_id, fixed_ips.virtual_interface_id AS fixed_ips_virtual_interface_id, fixed_ips.instance_uuid AS fixed_ips_instance_uuid, fixed_ips.allocated AS fixed_ips_allocated, fixed_ips.leased AS fixed_ips_leased, fixed_ips.reserved AS fixed_ips_reserved, fixed_ips.host AS fixed_ips_host \\nFROM fixed_ips \\nWHERE fixed_ips.deleted = %(deleted_1)s AND fixed_ips.address = %(address_1)s \\n LIMIT %(param_1)s' {'param_1': 1, 'address_1': u'my.invalid.ip', 'deleted_1': 0}\nAlthough all of them are valid test cases", 
            "date_created": "2013-05-22 06:12:48.025902+00:00", 
            "author": "https://api.launchpad.net/1.0/~maurosr"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/30057", 
            "date_created": "2013-05-22 06:24:30.232034+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/30057\nCommitted: http://github.com/openstack/nova/commit/1b7f77f22d847803a24b66a9f6c08dc4a564bddb\nSubmitter: Jenkins\nBranch:    master\n\ncommit 1b7f77f22d847803a24b66a9f6c08dc4a564bddb\nAuthor: Mauro S. M. Rodrigues <email address hidden>\nDate:   Wed May 22 02:01:22 2013 -0400\n\n    Fix postgresql failures related to Data type\n    \n    Postgresql is kind of sensitive about different kind of data in a query, so it\n    was failing in cases like lookin for an ip using a filter which wasn't a valid\n    ip or ids values greater than the id type on the table.\n    \n    This patch fix this behavior to fixed ips and floating ips.\n    \n    Fixes bug 1182754\n    \n    Change-Id: I83d532c28c9aec690e8e1ffad8b58e71d619d728\n", 
            "date_created": "2013-06-04 18:44:07.238725+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/38688", 
            "date_created": "2013-07-25 19:39:28.764907+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/38688\nCommitted: http://github.com/openstack/nova/commit/df3ac534f099712485a71488812b799ca82cfc6e\nSubmitter: Jenkins\nBranch:    master\n\ncommit df3ac534f099712485a71488812b799ca82cfc6e\nAuthor: Mauro S. M. Rodrigues <email address hidden>\nDate:   Thu Jul 25 15:36:30 2013 -0400\n\n    Fix postgresql failures related to Data type to API-v3 fixed-ip\n    \n    Postgresql is kind of sensitive about different kind of data in a query, so it\n    was failing in cases like looking for an ip using a filter which wasn't a valid\n    ip or ids values greater than the id type on the table.\n    \n    This patch fix this behavior to fixed ips in API-v3.\n    In v2 this was fixed by change I83d532c28c9aec690e8e1ffad8b58e71d619d728\n    \n    Fixes bug 1182754\n    Fixes bug 1204503\n    \n    Change-Id: I9aa14bea2f29f1df85dfd1f07eb0b1947d2c1100\n", 
            "date_created": "2013-07-29 14:43:49.143870+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}