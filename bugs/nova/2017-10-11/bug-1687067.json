{
    "status": "Opinion", 
    "last_updated": "2017-07-28 12:16:13.887954+00:00", 
    "description": "nova version: Newton (and later)\n\nThere are a number of issues related to CPU policy and CPU thread policy where the flavor extra-spec and image properties do not match up.\n\nThe docs at https://docs.openstack.org/admin-guide/compute-cpu-topologies.html say the following:\n\n\"Image metadata takes precedence over flavor extra specs. Thus, configuring competing policies causes an exception. By setting a shared policy through image metadata, administrators can prevent users configuring CPU policies in flavors and impacting resource utilization.\"\n\nFor the CPU policy this is exactly backwards based on the code.  The flavor is specified by the admin, and so it generally takes priority over the image which is specified by the end user.  If the flavor specifies \"dedicated\" then the result is dedicated regardless of what the image specifies.  If the flavor specifies \"shared\" then the result depends on the image--if it specifies \"dedicated\" then we will raise an exception, otherwise we use \"shared\".  If the flavor doesn't specify a CPU policy then the image can specify whatever policy it wants.\n\nThe issue around CPU threading policy is more complicated.\n\nBack in Mitaka, if the flavor specified a CPU threading policy of either None or \"prefer\" then we would use the threading policy specified by the image (if it was set).  If the flavor specified a CPU threading policy of \"isolate\" or \"require\" and the image specified a different CPU threading policy then we raised exception.ImageCPUThreadPolicyForbidden(), otherwise we used the CPU threading policy specified by the flavor.  This behaviour is described in the spec at https://specs.openstack.org/openstack/nova-specs/specs/mitaka/implemented/virt-driver-cpu-thread-pinning.html\n\nIn git commit 24997343 (which went into Newton) Nikola Dipanov made a code change that doesn't match the intent in the git commit message:\n\n\u00a0\u00a0\u00a0\u00a0\u00a0if flavor_thread_policy in [None, fields.CPUThreadAllocationPolicy.PREFER]:\n-        cpu_thread_policy = image_thread_policy\n+        cpu_thread_policy = flavor_thread_policy or image_thread_policy\n\nThe effect of this is that if the flavor specifies a CPU threading policy of \"prefer\" then we will use a policy of \"prefer\" regardless of the policy from the image.  If the flavor specifies a CPU threading policy of None then we will use the policy from the image.\n\nThis is a bug, because the original intent was to treat None and \"prefer\" identically, since \"prefer\" was just an explicit way to specify the default behaviour.", 
    "tags": [
        "compute", 
        "openstack-version.mitaka"
    ], 
    "importance": "Undecided", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1687067", 
    "owner": "None", 
    "id": 1687067, 
    "index": 6827, 
    "created": "2017-04-28 16:57:21.571351+00:00", 
    "title": "problems with cpu and cpu-thread policy where flavor/image specify different settings", 
    "comments": [
        {
            "content": "There are a number of issues related to CPU policy and CPU thread policy where the flavor extra-spec and image properties do not match up.\n\nThe docs at https://docs.openstack.org/admin-guide/compute-cpu-topologies.html say the following: \n\n\"Image metadata takes precedence over flavor extra specs. Thus, configuring competing policies causes an exception. By setting a shared policy through image metadata, administrators can prevent users configuring CPU policies in flavors and impacting resource utilization.\"\n\nFor the CPU policy this is exactly backwards based on the code.  The flavor is specified by the admin, and so it generally takes priority over the image which is specified by the end user.  If the flavor specifies \"dedicated\" then the result is dedicated regardless of what the image specifies.  If the flavor specifies \"shared\" then the result depends on the image--if it specifies \"dedicated\" then we will raise an exception, otherwise we use \"shared\".  If the flavor doesn't specify a CPU policy then the image can specify whatever policy it wants.\n\nThe issue around CPU threading policy is more complicated.\n\nBack in Mitaka, if the flavor specified a CPU threading policy of either None or \"prefer\" then we would use the threading policy specified by the image (if it was set).  If the flavor specified a CPU threading policy of \"isolate\" or \"require\" and the image specified a different CPU threading policy then we raised exception.ImageCPUThreadPolicyForbidden(), otherwise we used the CPU threading policy specified by the flavor.  This behaviour is described in the spec at https://specs.openstack.org/openstack/nova-specs/specs/mitaka/implemented/virt-driver-cpu-thread-pinning.html\n\nIn git commit 24997343 (which went into Newton) Nikola Dipanov made a code change that doesn't match the intent in the git commit message:\n\n     if flavor_thread_policy in [None, fields.CPUThreadAllocationPolicy.PREFER]:\n-        cpu_thread_policy = image_thread_policy\n+        cpu_thread_policy = flavor_thread_policy or image_thread_policy\n\nThe effect of this is that if the flavor specifies a CPU threading policy of \"prefer\" then we will use a policy of \"prefer\" regardless of the policy from the image.  If the flavor specifies a CPU threading policy of None then we will use the policy from the image.\n\nThis is a bug, because the original intent was to treat None and \"prefer\" identically, since \"prefer\" was just an explicit way to specify the default behaviour.", 
            "date_created": "2017-04-28 16:57:21.571351+00:00", 
            "author": "https://api.launchpad.net/1.0/~cbf123"
        }, 
        {
            "content": "Automatically discovered version mitaka in description. If this is incorrect, please update the description to include 'nova version: ...'", 
            "date_created": "2017-06-27 15:57:48.210240+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "The docs have been fixed: https://review.openstack.org/#/c/461110/\n\nThere is still an issue around CPU threading policy, but there does not seem to be an appetite to change the code in Newton and later to match the original Mitaka behaviour.", 
            "date_created": "2017-06-27 16:47:48.911131+00:00", 
            "author": "https://api.launchpad.net/1.0/~cbf123"
        }, 
        {
            "content": "Ok, given the docs are fixed, lets put this into Opinion (which is a closed state) for the actual code changes which don't have concensus.", 
            "date_created": "2017-07-28 12:16:06.945431+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }
    ]
}