{
    "status": "Fix Released", 
    "last_updated": "2011-09-22 13:27:58.476249+00:00", 
    "description": "In ExtensionManager, the _load_all_extensions_from_path() method is responsible for actually loading extensions.  It skips the extension if it cannot find the extension class, but otherwise it calls _add_extension().  This method in turn calls _check_extension(), but since _check_extension() does not raise any exceptions, there's no way for it to notify either _load_all_extensions_from_path() or _add_extension() that a given extension has failed to meet its contract, and so an invalid extension will be added anyway.  Although an exception will be logged by _check_extension(), this failure to inhibit adding invalid extensions could lead to other, more subtle bugs later on, or so I assume.  (This is in trunk.)", 
    "tags": [], 
    "importance": "Low", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/795126", 
    "owner": "https://api.launchpad.net/1.0/~klmitch", 
    "id": 795126, 
    "index": 5092, 
    "created": "2011-06-09 15:58:32.208883+00:00", 
    "title": "Invalid extensions are added anyway", 
    "comments": [
        {
            "content": "In ExtensionManager, the _load_all_extensions_from_path() method is responsible for actually loading extensions.  It skips the extension if it cannot find the extension class, but otherwise it calls _add_extension().  This method in turn calls _check_extension(), but since _check_extension() does not raise any exceptions, there's no way for it to notify either _load_all_extensions_from_path() or _add_extension() that a given extension has failed to meet its contract, and so an invalid extension will be added anyway.  Although an exception will be logged by _check_extension(), this failure to inhibit adding invalid extensions could lead to other, more subtle bugs later on, or so I assume.  (This is in trunk.)", 
            "date_created": "2011-06-09 15:58:32.208883+00:00", 
            "author": "https://api.launchpad.net/1.0/~klmitch"
        }
    ]
}