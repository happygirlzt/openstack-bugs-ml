{
    "status": "Invalid", 
    "last_updated": "2012-04-06 15:36:15.231458+00:00", 
    "description": "The following \"known bug\" has been identified for the Essex release:\nAll database queries currently block the eventled workers.\n\nBut all compute nodes using libvirt library (ex: KVM, LXC, ...) have the same kind of issue. \nAs libvirt-python library is not green-safe (C code) all requests to libvirt blocks all compute node greenthreads. \nThis is a major issue cause a libvirt call (start, reboot, suspend, resume, ...) takes a long time to perform (many seconds), and following requests from the API node have to be enqueued in RabbitMQ, hopefully.\n\nVMWARE api don't have the same issue cause it use a HTTP API (\"suds\" library).\nAnd XenAPI evade this issue by using a tpool (even if for my part mixing greenthreads and threads is not a best practice due to Python threads. All Python threads have same weight, hence new threads from tpool (10 by default) have the same chance to be elected as the main thread (the greenthread one)).\n\nMaybe this bug should be assign for the Folsom release, and have to be identified as a \"known issue\" for the Essex release.\n\nregards,\n\nPS: this could be corrected using a \"green\" API call (HTTP request for example) between the compute node and a libvirt \"manager\", or using a tpool like XenAPI :( (worst solution)", 
    "tags": [], 
    "importance": "Undecided", 
    "heat": 8, 
    "link": "https://bugs.launchpad.net/nova/+bug/974369", 
    "owner": "None", 
    "id": 974369, 
    "index": 2751, 
    "created": "2012-04-05 15:20:43.640363+00:00", 
    "title": "All libvirt queries currently block the eventled compute workers", 
    "comments": [
        {
            "content": "The following \"known bug\" has been identified for the Essex release:\nAll database queries currently block the eventled workers.\n\nBut all compute nodes using libvirt library (ex: KVM, LXC, ...) have the same kind of issue. \nAs libvirt-python library is not green-safe (C code) all requests to libvirt blocks all compute node greenthreads. \nThis is a major issue cause a libvirt call (start, reboot, suspend, resume, ...) takes a long time to perform (many seconds), and following requests from the API node have to be enqueued in RabbitMQ, hopefully.\n\nVMWARE api don't have the same issue cause it use a HTTP API (\"suds\" library).\nAnd XenAPI evade this issue by using a tpool (even if for my part mixing greenthreads and threads is not a best practice due to Python threads. All Python threads have same weight, hence new threads from tpool (10 by default) have the same chance to be elected as the main thread (the greenthread one)).\n\nMaybe this bug should be assign for the Folsom release, and have to be identified as a \"known issue\" for the Essex release.\n\nregards,\n\nPS: this could be corrected using a \"green\" API call (HTTP request for example) between the compute node and a libvirt \"manager\", or using a tpool like XenAPI :( (worst solution)", 
            "date_created": "2012-04-05 15:20:43.640363+00:00", 
            "author": "https://api.launchpad.net/1.0/~bertrand-lallau"
        }, 
        {
            "content": "There is already an option to use a threadpool for libvirt.  The config option is:\n\nlibvirt_nonblocking=true\n\nThere was one outstanding issue (bug 962840), which has now been fixed and proposed into stable/essex.  It was not mentioned because of the outstanding issue and the relative lack of testing in production, so I would consider it experimental for now.\n\n", 
            "date_created": "2012-04-05 23:01:01.622159+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "Hi Vish,\nI cannot see any difference between patch_tpool_proxy patched and unpatched mentioned in https://review.openstack.org/6309  when I run your test case:\n./run_tests.sh -N nova.tests.test_libvirt.LibvirtNonblockingTestCase.\n\nCould you tell me how to check the difference with your test case?\n\n\nmy libvirtd version is 0.9.6", 
            "date_created": "2012-04-06 01:15:18.227745+00:00", 
            "author": "https://api.launchpad.net/1.0/~gongysh"
        }, 
        {
            "content": "The code is not mine. I just proposed a backport of the fix due to eventlet\nand old style classes from trunk to stable/essex\n", 
            "date_created": "2012-04-06 15:33:30+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }
    ]
}