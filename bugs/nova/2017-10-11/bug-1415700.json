{
    "status": "Confirmed", 
    "last_updated": "2017-05-02 17:27:06.460616+00:00", 
    "description": "It used host_name key in\nhttps://github.com/openstack/nova/blob/master/nova/api/openstack/compute/contrib/hosts.py#L40\nused host key in\nhttps://github.com/openstack/nova/blob/master/nova/api/openstack/compute/contrib/hosts.py#L266-L267\nWhy not unite the key.\n\nAnd this lead to novaclient bug such as:\n>>> from novaclient.v1_1 import client\n>>> nc = client.Client(\"admin\",\"password\",\"admin\",\"http://192.168.1.100:5000/v2.0\")\n>>> nc.hosts.get(\"controller\")\n[<Host: controller>, <Host: controller>, <Host: controller>, <Host: controller>]\n\n>>> nc.hosts.list()\n[Traceback (most recent call last):\n\u00a0\u00a0File \"<stdin>\", line 1, in <module>\n\u00a0\u00a0File \"/usr/lib/python2.7/dist-packages/novaclient/v1_1/hosts.py\", line 24, in __repr__\n\u00a0\u00a0\u00a0\u00a0return \"<Host: %s>\" % self.host\n\u00a0\u00a0File \"/usr/lib/python2.7/dist-packages/novaclient/openstack/common/apiclient/base.py\", line 489, in __getattr__\n\u00a0\u00a0\u00a0\u00a0raise AttributeError(k)\nAttributeError: host\n\n-----------------------------------\nMaybe some people think it is the novaclient bug.\nIn this patch https://review.openstack.org/#/c/110087/,\nit fix the hosts.get(), but lead to hosts.list() cann't work.\nMaybe we can add some judge such as(if .eg) in the function of\nhttps://github.com/openstack/python-novaclient/blob/master/novaclient/v1_1/hosts.py#L24,\nbut I think unite the key to 'host' in nova is much better, if such we don't need to change novaclient and nova code looks better.", 
    "tags": [], 
    "importance": "Low", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1415700", 
    "owner": "None", 
    "id": 1415700, 
    "index": 244, 
    "created": "2015-01-29 02:07:37.604253+00:00", 
    "title": "Unite the host key(host, host_name)", 
    "comments": [
        {
            "content": "It used host_name key in\nhttps://github.com/openstack/nova/blob/master/nova/api/openstack/compute/contrib/hosts.py#L40\nused host key in\nhttps://github.com/openstack/nova/blob/master/nova/api/openstack/compute/contrib/hosts.py#L266-L267\nWhy not unite the key.\n\nAnd this lead to novaclient bug such as:\n>>> from novaclient.v1_1 import client\n>>> nc = client.Client(\"admin\",\"password\",\"admin\",\"http://192.168.1.100:5000/v2.0\")\n>>> nc.hosts.get(\"controller\")\n[<Host: controller>, <Host: controller>, <Host: controller>, <Host: controller>]\n\n>>> nc.hosts.list()\n[Traceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/lib/python2.7/dist-packages/novaclient/v1_1/hosts.py\", line 24, in __repr__\n    return \"<Host: %s>\" % self.host\n  File \"/usr/lib/python2.7/dist-packages/novaclient/openstack/common/apiclient/base.py\", line 489, in __getattr__\n    raise AttributeError(k)\nAttributeError: host\n\n-----------------------------------\nMaybe some people think it is the novaclient bug.\nIn this patch https://review.openstack.org/#/c/110087/, \nit fix the host.get(), but lead to host.list() cann't work. \nMaybe we can add some judge such as(if .eg) in the function of\nhttps://github.com/openstack/python-novaclient/blob/master/novaclient/v1_1/hosts.py#L24,\nbut I think unite the key to 'host' in nova is much better, if such we don't need to change novaclient and \nnova code looks better.", 
            "date_created": "2015-01-29 02:07:37.604253+00:00", 
            "author": "https://api.launchpad.net/1.0/~tangmeiyan77"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/152416", 
            "date_created": "2015-02-03 07:22:44.065283+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "So this is backward incompatible change for Nova. I think, It needs to go through micro-version without breaking V2 API compatibility . \n\nCurrently Tempest do not tests API micro-version (as there is no candidate till now) if proposed nova changes is accepted for micro-version then we need to decide how to test microversion in tempest.\n\nCurrent tempest tests are right/valid to maintain the backward compatibility of Nova API.", 
            "date_created": "2015-02-05 07:48:36.454767+00:00", 
            "author": "https://api.launchpad.net/1.0/~ghanshyammann"
        }, 
        {
            "content": "Marking incomplete for tempest till it is decided in Nova first.", 
            "date_created": "2015-02-05 07:50:57.211395+00:00", 
            "author": "https://api.launchpad.net/1.0/~ghanshyammann"
        }, 
        {
            "content": "Change abandoned by Joe Gordon (<email address hidden>) on branch: master\nReview: https://review.openstack.org/152416\nReason: This review is > 4 weeks without comment, and failed Jenkins the last time it was checked. We are abandoning this for now. Feel free to reactivate the review by pressing the restore button and leaving a 'recheck' comment to get fresh test results.", 
            "date_created": "2015-05-13 17:22:39.305285+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Nova team has decided the corresponding patch is not necessary, so we don't need to fix this also on Tempest side because of non-activity in long-term also.", 
            "date_created": "2017-05-02 17:27:05.416154+00:00", 
            "author": "https://api.launchpad.net/1.0/~oomichi"
        }
    ]
}