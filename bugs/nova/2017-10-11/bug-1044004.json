{
    "status": "Fix Released", 
    "last_updated": "2012-09-27 15:44:39.402042+00:00", 
    "description": "Using the zero MQ driver on Fedora 17 I'm seeing the following error in service log files:\n\nscheduler.log:2012-08-30 13:58:10 TRACE nova     ZMQ_CTX.destroy()\nscheduler.log:2012-08-30 13:58:10 TRACE nova AttributeError: 'Context' object has no attribute 'destroy'\n\nUsing zeromq version:\n\npython-zmq-2.1.9-4.fc17.x86_64\n\n-----\n\n2.1.10:\n\nLooking at the changelog for pyzmq I see that the destroy() call was adding in version 2.1.10 (one version newer than what I have).\n\nLooking into whether it is easy to support both version....", 
    "tags": [], 
    "importance": "Medium", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1044004", 
    "owner": "https://api.launchpad.net/1.0/~dan-prince", 
    "id": 1044004, 
    "index": 3029, 
    "created": "2012-08-30 18:49:27.518273+00:00", 
    "title": "zmq RPC driver errors: AttributeError: 'Context' object has no attribute 'destroy'", 
    "comments": [
        {
            "content": "Using the zero MQ driver on Fedora 17 I'm seeing the following error in service log files:\n\nscheduler.log:2012-08-30 13:58:10 TRACE nova     ZMQ_CTX.destroy()\nscheduler.log:2012-08-30 13:58:10 TRACE nova AttributeError: 'Context' object has no attribute 'destroy'\n\nUsing zeromq version:\n\npython-zmq-2.1.9-4.fc17.x86_64\n\n-----\n\n2.1.10:\n\nLooking at the changelog for pyzmq I see that the destroy() call was adding in version 2.1.10 (one version newer than what I have).\n\nLooking into whether it is easy to support both version....", 
            "date_created": "2012-08-30 18:49:27.518273+00:00", 
            "author": "https://api.launchpad.net/1.0/~dan-prince"
        }, 
        {
            "content": "The 1.1.10 changelog says this:\n\n* add czmq-style close&term as :meth:`ctx.destroy`, so that :meth:`ctx.term` remains threadsafe and 1:1 with libzmq.\n\n-----\n\nThe python docs for destroy have this to say:\n\n\n    def destroy(self, linger=None):\n        \"\"\"ctx.destroy(linger=None)\n        \n        Close all sockets associated with this context, and then terminate\n        the context. If linger is specified,\n        the LINGER sockopt of the sockets will be set prior to closing.\n        \n        WARNING:\n        \n        destroy involves calling zmq_close(), which is *NOT* threadsafe.\n        If there are active sockets in other threads, this must not be called.\n        \"\"\"\n----\n\nThis has me thinking we should maybe be using term() anyway (to be threadsafe). Also. It looks like destroy calls term() as well.", 
            "date_created": "2012-08-30 18:51:53.332088+00:00", 
            "author": "https://api.launchpad.net/1.0/~dan-prince"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/12211", 
            "date_created": "2012-08-30 19:11:32.199305+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/12211\nCommitted: http://github.com/openstack/nova/commit/ed11e1f7fe2b4b2691d49363ffd3034ec1d36fef\nSubmitter: Jenkins\nBranch:    master\n\ncommit ed11e1f7fe2b4b2691d49363ffd3034ec1d36fef\nAuthor: Dan Prince <email address hidden>\nDate:   Thu Aug 30 15:08:25 2012 -0400\n\n    Update zmq context cleanup to use term.\n    \n    Updates the RPC cleanup function for the zmq RPC driver\n    to use Context.term() instead of Context.destroy().\n    \n    This allows the Nova code to work with older versions (pre 2.1.10)\n    of pyzmq. The Context term() function seems to do the job just as\n    well as destroy() (and is also thread safe) so lets just use it instead.\n    \n    Fixes LP Bug #1044004.\n    \n    Change-Id: I07a200d4b216c0c1e155b57588295b35a237576c\n", 
            "date_created": "2012-08-31 15:23:20.828426+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}