{
    "status": "Fix Released", 
    "last_updated": "2013-10-17 12:04:10.484872+00:00", 
    "description": "We discovered today that two processes will not lock properly if external=True and lock_path=None.\n\nnova/openstack/common/lockutils.py tries to use tempfile.mkdtemp() to create a temporary directory for tracking the locking but this doesn't work as tempfile.mkdtemp() returns two different temporary directories.  Here is an example of a simple test case running using locking that demonstrates the problem:\n\nopenstack@issue147007:~/devel$ ./run_tests.sh -N nova.tests.test_sync\nRunning ` python setup.py testr --slowest --testr-args='--subunit  nova.tests.test_sync'`\nrunning testr                                                                            \nrunning=OS_STDOUT_CAPTURE=1 OS_STDERR_CAPTURE=1 OS_TEST_TIMEOUT=60 ${PYTHON:-python} -m subunit.run discover -t ./ ./nova/tests --list \nrunning=OS_STDOUT_CAPTURE=1 OS_STDERR_CAPTURE=1 OS_TEST_TIMEOUT=60 ${PYTHON:-python} -m subunit.run discover -t ./ ./nova/tests  --load-list /tmp/tmpsB1Gxo\nrunning=OS_STDOUT_CAPTURE=1 OS_STDERR_CAPTURE=1 OS_TEST_TIMEOUT=60 ${PYTHON:-python} -m subunit.run discover -t ./ ./nova/tests  --load-list /tmp/tmpo09Jxy\n('Running modified test_sync!!!! CONF.lock_path is %s', None)                                                                                              \n('Running modified test_sync!!!! CONF.lock_path is %s', None)                                                                                              \n('JSBRYANT: local_lock_path is %s', '/tmp/tmp80M3nJ')                                                                                                      \nThread 1 Start                                                                                                                                             \nThread 1 End                                                                                                                                               \nnova.tests.test_sync.TestLocking.test_one (subunit.RemotedTestCase)                                                                                        \nnova.tests.test_sync.TestLocking.test_one ... ok                                                                                                           \n('JSBRYANT: local_lock_path is %s', '/tmp/tmp898Hj_')                                                                                                      \nThread 2 Start                                                                                                                                             \nThread 2 End                                                                                                                                               \nnova.tests.test_sync.TestLocking.test_two (subunit.RemotedTestCase)                                                                                        \nnova.tests.test_sync.TestLocking.test_two ... ok                                                                                                           \nSlowest Tests                                                                                                                                              \nTest id                                    Runtime (s)                                                                                                     \n-----------------------------------------  -----------                                                                                                     \nnova.tests.test_sync.TestLocking.test_two  120.102                                                                                                         \nnova.tests.test_sync.TestLocking.test_one   60.062                                                                                                         \n\n----------------------------------------------------------------------\nRan 2 tests in 122.583s \n\nNote the two test cases shouldn't run in parallel but they do as the locking isn't working.  The output shows the two different lock directories which were created here:\n\n                    if external and not CONF.disable_process_locking:\n                        LOG.debug(_('Attempting to grab file lock \"%(lock)s\" '\n                                    'for method \"%(method)s\"...'),\n                                  {'lock': name, 'method': f.__name__})\n                        cleanup_dir = False\n\n                        # We need a copy of lock_path because it is non-local\n                        local_lock_path = lock_path\n                        if not local_lock_path:\n                            local_lock_path = CONF.lock_path\n\n                        if not local_lock_path:\n                            cleanup_dir = True\n                            local_lock_path = tempfile.mkdtemp()\n\n                        print(\"JSBRYANT: local_lock_path is %s\", local_lock_path)\n\n                        if not os.path.exists(local_lock_path):\n                            fileutils.ensure_tree(local_lock_path)\n\n\nThis can be worked around by either specifying the lock_path on the call to synchronized or by updating the conf file to have a lock_path.  Regardless, this seems like something that cause unpredictable behavior for users who don't get those options into their conf files.", 
    "tags": [
        "lockutils-api-review"
    ], 
    "importance": "Undecided", 
    "heat": 10, 
    "link": "https://bugs.launchpad.net/nova/+bug/1162047", 
    "owner": "https://api.launchpad.net/1.0/~bnemec", 
    "id": 1162047, 
    "index": 3558, 
    "created": "2013-03-29 21:49:33.729686+00:00", 
    "title": "lockutils.synchronized does not work properly if lock_path=none", 
    "comments": [
        {
            "content": "We discovered today that two processes will not lock properly if external=True and lock_path=None.\n\nnova/openstack/common/lockutils.py tries to use tempfile.mkdtemp() to create a temporary directory for tracking the locking but this doesn't work as tempfile.mkdtemp() returns two different temporary directories.  Here is an example of a simple test case running using locking that demonstrates the problem:\n\nopenstack@issue147007:~/devel$ ./run_tests.sh -N nova.tests.test_sync\nRunning ` python setup.py testr --slowest --testr-args='--subunit  nova.tests.test_sync'`\nrunning testr                                                                            \nrunning=OS_STDOUT_CAPTURE=1 OS_STDERR_CAPTURE=1 OS_TEST_TIMEOUT=60 ${PYTHON:-python} -m subunit.run discover -t ./ ./nova/tests --list \nrunning=OS_STDOUT_CAPTURE=1 OS_STDERR_CAPTURE=1 OS_TEST_TIMEOUT=60 ${PYTHON:-python} -m subunit.run discover -t ./ ./nova/tests  --load-list /tmp/tmpsB1Gxo\nrunning=OS_STDOUT_CAPTURE=1 OS_STDERR_CAPTURE=1 OS_TEST_TIMEOUT=60 ${PYTHON:-python} -m subunit.run discover -t ./ ./nova/tests  --load-list /tmp/tmpo09Jxy\n('Running modified test_sync!!!! CONF.lock_path is %s', None)                                                                                              \n('Running modified test_sync!!!! CONF.lock_path is %s', None)                                                                                              \n('JSBRYANT: local_lock_path is %s', '/tmp/tmp80M3nJ')                                                                                                      \nThread 1 Start                                                                                                                                             \nThread 1 End                                                                                                                                               \nnova.tests.test_sync.TestLocking.test_one (subunit.RemotedTestCase)                                                                                        \nnova.tests.test_sync.TestLocking.test_one ... ok                                                                                                           \n('JSBRYANT: local_lock_path is %s', '/tmp/tmp898Hj_')                                                                                                      \nThread 2 Start                                                                                                                                             \nThread 2 End                                                                                                                                               \nnova.tests.test_sync.TestLocking.test_two (subunit.RemotedTestCase)                                                                                        \nnova.tests.test_sync.TestLocking.test_two ... ok                                                                                                           \nSlowest Tests                                                                                                                                              \nTest id                                    Runtime (s)                                                                                                     \n-----------------------------------------  -----------                                                                                                     \nnova.tests.test_sync.TestLocking.test_two  120.102                                                                                                         \nnova.tests.test_sync.TestLocking.test_one   60.062                                                                                                         \n\n----------------------------------------------------------------------\nRan 2 tests in 122.583s \n\nNote the two test cases shouldn't run in parallel but they do as the locking isn't working.  The output shows the two different lock directories which were created here:\n\n                    if external and not CONF.disable_process_locking:\n                        LOG.debug(_('Attempting to grab file lock \"%(lock)s\" '\n                                    'for method \"%(method)s\"...'),\n                                  {'lock': name, 'method': f.__name__})\n                        cleanup_dir = False\n\n                        # We need a copy of lock_path because it is non-local\n                        local_lock_path = lock_path\n                        if not local_lock_path:\n                            local_lock_path = CONF.lock_path\n\n                        if not local_lock_path:\n                            cleanup_dir = True\n                            local_lock_path = tempfile.mkdtemp()\n\n                        print(\"JSBRYANT: local_lock_path is %s\", local_lock_path)\n\n                        if not os.path.exists(local_lock_path):\n                            fileutils.ensure_tree(local_lock_path)\n\n\nThis can be worked around by either specifying the lock_path on the call to synchronized or by updating the conf file to have a lock_path.  Regardless, this seems like something that cause unpredictable behavior for users who don't get those options into their conf files.", 
            "date_created": "2013-03-29 21:49:33.729686+00:00", 
            "author": "https://api.launchpad.net/1.0/~jsbryant"
        }, 
        {
            "content": "https://review.openstack.org/#/c/36350", 
            "date_created": "2013-07-10 03:22:04.838469+00:00", 
            "author": "https://api.launchpad.net/1.0/~zyluo"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/36350\nCommitted: http://github.com/openstack/oslo-incubator/commit/90b6a65545dd2d41d674dd22f00bcd6dea695239\nSubmitter: Jenkins\nBranch:    master\n\ncommit 90b6a65545dd2d41d674dd22f00bcd6dea695239\nAuthor: Ben Nemec <email address hidden>\nDate:   Tue Jul 9 17:03:53 2013 -0500\n\n    Fix locking bug\n    \n    When lock_path is not set, lockutils creates a new temp dir for\n    each new call to synchronized.  This results in no actual lock\n    enforcement.  Require setting of lock_path by throwing an\n    exception if it is not found.\n    \n    Fixes bug 1065531\n    Fixes bug 1162047\n    \n    Change-Id: I178684a1d8649b5bcfcb768be0a68c8efa3f00e4\n", 
            "date_created": "2013-07-21 01:31:33.926673+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/38685\nCommitted: http://github.com/openstack/nova/commit/d7aee2352c023401b70e4cd930cde5c08a9374d5\nSubmitter: Jenkins\nBranch:    master\n\ncommit d7aee2352c023401b70e4cd930cde5c08a9374d5\nAuthor: Ben Nemec <email address hidden>\nDate:   Thu Jul 25 10:56:55 2013 -0500\n\n    Sync lockutils from Oslo\n    \n    90b6a65 Fix locking bug\n    27d4b41 Move synchronized body to a first-class function\n    15c17fb Make lock_file_prefix optional\n    1a2df89 Enable H302 hacking check\n    b41862d Use param keyword for docstrings\n    \n    Fixes bug 1065531\n    And bug 1162047\n    \n    Change-Id: Ide79292fae6f779ecd4ac166d68c8f10ca728409\n", 
            "date_created": "2013-07-29 15:58:38.920927+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}