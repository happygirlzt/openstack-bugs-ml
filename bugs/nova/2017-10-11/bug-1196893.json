{
    "status": "Fix Released", 
    "last_updated": "2014-03-28 01:01:09.708648+00:00", 
    "description": "user can use \"nova aggregate-add-host\" to set different availability zone for a host, then the host will be available for multi availability zone. When user  try to boot instance in the host using second or third availability zone, the instance will still be assigned to the first availability zone which set at first time the host added to a host aggregate of the availability zone. It works as design, but it confuse the user, it make user to think that a host can be assigned to multi availability zone. So I think we should add checking to limit user to add host to host aggregates in different availability zone.\n\nHere are steps to recreate the issue:\n\n1) \u00a0 create one AZ\nnova aggregate-create test-az test-az\nthe AZ test-az id is 1\u00a0\n\u00a0\n2) \u00a0 add host to AZ\nnova aggregate-add-host 1 WIN-UJAK7KN9LRA\n\n3) \u00a0boot one instance\n\u00a0nova boot --flavor 2 --image \u00a026c6ddd1-3db7-440e-930c-f3dbc146c7f2 \u00a0 --availability-zone \u00a0test-az test-vm-1\n\nIn this steps, it prints\u00a0| OS-EXT-AZ:availability_zone \u00a0 \u00a0 \u00a0 \u00a0 | nova \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 |\n\n4) check test-vm-1\n\nnova show d752aa55-b2dd-4966-a770-4ab2972c6dd7\n\n\nOS-EXT-AZ:availability_zone \u00a0 \u00a0 \u00a0 \u00a0 | test-az \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0|\n\n\n\n5)\nthen create another AZ\n             nova aggregate-create test-az-2 test-az-2\n\nAdd host to AZ\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0nova aggregate-add-host 2 WIN-UJAK7KN9LRA\n\ncheck AZs\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 nova \u00a0availability-zone-list\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0| test-az-2,test-az \u00a0 \u00a0 | available \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0|\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0| |- WIN-UJAK7KN9LRA \u00a0 \u00a0| \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0|\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0| \u00a0| |- nova-compute \u00a0 \u00a0 | enabled :-) 2013-06-26T03:16:47.764046 |\n\nboot one instance\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0nova boot --flavor 2 --image \u00a026c6ddd1-3db7-440e-930c-f3dbc146c7f2 \u00a0 --availability-zone \u00a0test-az-2 test-vm-4\n\n\u00a0 \u00a0 still the print is\u00a0| OS-EXT-AZ:availability_zone \u00a0 \u00a0 \u00a0 \u00a0 | nova \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 |\n\ncheck instance info\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0| OS-EXT-AZ:availability_zone \u00a0 \u00a0 \u00a0 \u00a0 | test-az \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0|\n\n\n\u00a0The new instance is in test-az, the passed option test-az-2 seems not work. We may should add checking logic to limit users to do operations like \"\u00a0nova aggregate-add-host 2 WIN-UJAK7KN9LRA\" in step #5", 
    "tags": [
        "api"
    ], 
    "importance": "Undecided", 
    "heat": 26, 
    "link": "https://bugs.launchpad.net/nova/+bug/1196893", 
    "owner": "https://api.launchpad.net/1.0/~jiataotj", 
    "id": 1196893, 
    "index": 3809, 
    "created": "2013-07-02 10:08:21.196743+00:00", 
    "title": "nova aggregate-add-host should limit user to  set different availability zone for a host", 
    "comments": [
        {
            "content": "user can use \"nova aggregate-add-host\" to set different availability zone for a host, then the host will be available for multi availability zone. When user  try to boot instance in the host using second or third availability zone, the instance will still be assigned to the first availability zone which set at first time the host added to a host aggregate of the availability zone. It works as design, but it confuse the user, it make user to think that a host can be assigned to multi availability zone. So I think we should add checking to limit user to add host to host aggregates in different availability zone.\n\nHere are steps to recreate the issue:\n\n1) \u00a0 create one AZ\nnova aggregate-create test-az test-az\nthe AZ test-az id is 1\u00a0\n\u00a0\n2) \u00a0 add host to AZ\nnova aggregate-add-host 1 WIN-UJAK7KN9LRA\n\n3) \u00a0boot one instance\n\u00a0nova boot --flavor 2 --image \u00a026c6ddd1-3db7-440e-930c-f3dbc146c7f2 \u00a0 --availability-zone \u00a0test-az test-vm-1\n\nIn this steps, it prints\u00a0| OS-EXT-AZ:availability_zone \u00a0 \u00a0 \u00a0 \u00a0 | nova \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 |\n\n4) check test-vm-1\n\nnova show d752aa55-b2dd-4966-a770-4ab2972c6dd7\n\n\nOS-EXT-AZ:availability_zone \u00a0 \u00a0 \u00a0 \u00a0 | test-az \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0|\n\n\n\n5)\nthen create another AZ\n             nova aggregate-create test-az-2 test-az-2\n\nAdd host to AZ\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0nova aggregate-add-host 2 WIN-UJAK7KN9LRA\n\ncheck AZs\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 nova \u00a0availability-zone-list\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0| test-az-2,test-az \u00a0 \u00a0 | available \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0|\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0| |- WIN-UJAK7KN9LRA \u00a0 \u00a0| \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0|\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0| \u00a0| |- nova-compute \u00a0 \u00a0 | enabled :-) 2013-06-26T03:16:47.764046 |\n\nboot one instance\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0nova boot --flavor 2 --image \u00a026c6ddd1-3db7-440e-930c-f3dbc146c7f2 \u00a0 --availability-zone \u00a0test-az-2 test-vm-4\n\n\u00a0 \u00a0 still the print is\u00a0| OS-EXT-AZ:availability_zone \u00a0 \u00a0 \u00a0 \u00a0 | nova \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 |\n\ncheck instance info\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0| OS-EXT-AZ:availability_zone \u00a0 \u00a0 \u00a0 \u00a0 | test-az \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0|\n\n\n\u00a0The new instance is in test-az, the passed option test-az-2 seems not work. We may should add checking logic to limit users to do operations like \"\u00a0nova aggregate-add-host 2 WIN-UJAK7KN9LRA\" in step #5", 
            "date_created": "2013-07-02 10:08:21.196743+00:00", 
            "author": "https://api.launchpad.net/1.0/~jiataotj"
        }, 
        {
            "content": "This /opt/stack/nova/nova/availability_zones.py get_host_availability_zone method returns the first zone if there are multiple zones for one single host for this:  \n\ndef get_host_availability_zone(context, host, conductor_api=None):\n    if conductor_api:\n        metadata = conductor_api.aggregate_metadata_get_by_host(\n            context, host, key='availability_zone')\n    else:\n        metadata = db.aggregate_metadata_get_by_host(\n            context, host, key='availability_zone')\n    if 'availability_zone' in metadata:\n        return list(metadata['availability_zone'])[0]  -- return first one\n    else:\n        return CONF.default_availability_zone\n\nBut our \"nova aggregate-add-host\" command supports to add one same host into multi-zones, this should be conflict between the 'add host to zone' and 'get host zone' two actions.\n\n", 
            "date_created": "2013-07-03 09:03:35.817706+00:00", 
            "author": "https://api.launchpad.net/1.0/~whaom"
        }, 
        {
            "content": "yes, it seems that we should limit user to add host to different availability zone. But, according to community blueprints, Openstack will implement/apply Cells to replace the Zone, so we may not need to handle this availability zone issue.", 
            "date_created": "2013-07-03 09:21:24.695767+00:00", 
            "author": "https://api.launchpad.net/1.0/~jiataotj"
        }, 
        {
            "content": "for fixing the issue, we can limit users to add more availability zone to a host when the host belongs to an availability zone, and allow users to add the host to different host aggregate of same availability zone", 
            "date_created": "2013-07-03 09:32:47.927139+00:00", 
            "author": "https://api.launchpad.net/1.0/~jiataotj"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/36651", 
            "date_created": "2013-07-11 13:11:01.078307+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Bug for adding limitation in aggregate metadata updating:https://bugs.launchpad.net/nova/+bug/1200479", 
            "date_created": "2013-07-12 05:12:55.278247+00:00", 
            "author": "https://api.launchpad.net/1.0/~jiataotj"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/36651\nCommitted: http://github.com/openstack/nova/commit/40986bc17c5fccac74df5edad13bb70ef16f7987\nSubmitter: Jenkins\nBranch:    master\n\ncommit 40986bc17c5fccac74df5edad13bb70ef16f7987\nAuthor: jiataotj <email address hidden>\nDate:   Thu Jul 11 21:04:41 2013 +0800\n\n    Fix multi availability zone issue part 1\n    \n    Current aggregate APIs allow user to add multi\n    AZs to a host, but Openstack support single AZ\n    of a host. When booting an instance, nova uses\n    the first AZ assigned to a host,even if user\n    assigned multi AZs to the host and user chose\n    the second AZ to boot an instance. So multi AZs\n    aren't supported by current Openstack design,\n    we should fix aggregate APIs to align the design\n    . This patch is for limit user to add multi AZs\n    using aggregate-add-host API.\n    \n    The part 2 limits user to add multi AZs using aggregate\n    update and aggregate metadata update API, here is the\n    link:\n    I18ad1ac22c6aee298ccc75c978b85241ae1ac616\n    \n    Fixes: bug #1196893\n    \n    Change-Id: I788782a9f21ec2672551f75123753175bb268586\n", 
            "date_created": "2013-08-02 20:50:17.706728+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "so, what it means is --\n\nif I have hostX in zoneA and zoneB and user passes zoneB to boot a vm Y,\nif user runs nova show vmY, it will show that vm is in zoneA even though he had passed zoneB.\n\nSo, should we not focus on solving the problem and showing correct zone to the user,\nrather than avoiding addition of hostX in zoneA and zoneB.\n\nBecause there could be scenarios where hostX needs to be part of two zones.\nLets say that I have zones based on PDUs (power distribution) - zoneA and zoneB.\nI want hostX to be part of zoneA, host Y to be part of zoneB.\n\nBut, I would also want hostX and hostY to be part of default scheduling zone called default_zone for example.\nSo, that when user does not pass any zone, vm placement is evenly distributed across two zones A and B.", 
            "date_created": "2014-03-26 18:22:55.372270+00:00", 
            "author": "https://api.launchpad.net/1.0/~meghalgosalia"
        }, 
        {
            "content": "Meghal,\nHere is some misunderstanding in your description about the issue\n\n\u201cif I have hostX in zoneA and zoneB and user passes zoneB to boot a vm Y,\nif user runs nova show vmY, it will show that vm is in zoneA even though he had passed zoneB.\u201d\n\nThe issue isn't how nova show vmY's zone, the issue is which zone the nova actually chose to boot your vmY,  without the fixing, although you pass zoneB to boot vmY, Openstack always use zoneA to boot vmY", 
            "date_created": "2014-03-27 07:01:19.836517+00:00", 
            "author": "https://api.launchpad.net/1.0/~jiataotj"
        }, 
        {
            "content": "If you look at https://github.com/openstack/nova/blob/2013.2.2/nova/scheduler/filters/availability_zone_filter.py#L46\n\nand relate it to my example in #7,\nthe scheduler is making this check for hostX,\nmetadata['availability_zone'] will have ['zoneA', 'zoneB']\nand zone passed by user during boot is zoneB which will make the check true.\nAnd hence, hostX will be selected.\n\nThat is what I see in my environment as well.\nOnly problem is if you do a nova show vmY, which calls extension \"OS-EXT-AZ:availability_zone\" which calls the function for hostX - https://github.com/openstack/nova/blob/2013.2.2/nova/availability_zones.py#L93\nBecause of that function call, nova show vmY might show zoneA based on which element it picks up as the first one from the list.\n\nSo, scheduling works fine, but issue is with nova show since that function referenced in #1 (get_host_availability_zones) is used only during nova show and not by availability zone scheduler.\n\n", 
            "date_created": "2014-03-28 01:01:08.758465+00:00", 
            "author": "https://api.launchpad.net/1.0/~meghalgosalia"
        }
    ]
}