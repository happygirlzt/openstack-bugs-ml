{
    "status": "Invalid", 
    "last_updated": "2011-01-18 18:45:55.480607+00:00", 
    "description": "Build: 2011.1~bzr546-0ubuntu0ppa1~lucid1  from https://launchpad.net/~nova-core/+archive/trunk\nEnvironment: 1 cloud controller (api/network/scheduler/objectstore), 1 compute node (compute/volume)\nDetails: I accidentally created a iptables rule for icmp where I specified a port range 1-65535.  The rule was accepted, but after trying to spin a VM, the start up process in nova-compute failed because it interpreted the port range as an icmp type/code combination.  It looks like nova-compute needs to be getting the type/code info from the '-t' option in euca-authorize instead.\n\nrlucio@box4:~$ euca-authorize -P icmp -p 1-65535 -s 10.0.1.0/27 slb-default\nGROUP   slb-default\nPERMISSION      slb-default     ALLOWS  icmp    1       65535   FROM    CIDR    10.0.1.0/27\n\nrlucio@box4:~$ euca-run-instances ami-34oyhfez -g slb-default -t m1.tiny\n\n....\n\n(nova.virt.libvirt_conn 2011.1-workspace:tarmac-20110111215430-m7kkn94d5heffw6x): DEBUG [N/A] instance instance-0000000e: finished toXML method from MainProcess (pid=9157) to_xml /usr/lib/pymodules/python2.6/nova/virt/libvirt_conn.py:590\n(nova.root 2011.1-workspace:tarmac-20110111215430-m7kkn94d5heffw6x): INFO [N/A] called setup_basic_filtering in nwfilter\n(nova.root 2011.1-workspace:tarmac-20110111215430-m7kkn94d5heffw6x): INFO [N/A] ensuring static filters\n(nova.root 2011.1-workspace:tarmac-20110111215430-m7kkn94d5heffw6x): INFO [N/A] @@@ Adding instance chains/rules for instance id 14 @@@\n(nova.root 2011.1-workspace:tarmac-20110111215430-m7kkn94d5heffw6x): INFO [N/A] <nova.db.sqlalchemy.models.SecurityGroupIngressRule object at 0x3efaf50>\n(nova.root 2011.1-workspace:tarmac-20110111215430-m7kkn94d5heffw6x): INFO [N/A] <nova.db.sqlalchemy.models.SecurityGroupIngressRule object at 0x3efad10>\n(nova.root 2011.1-workspace:tarmac-20110111215430-m7kkn94d5heffw6x): INFO [N/A] <nova.db.sqlalchemy.models.SecurityGroupIngressRule object at 0x3efac10>\n(nova.root 2011.1-workspace:tarmac-20110111215430-m7kkn94d5heffw6x): INFO [N/A] new_filter: # Generated by iptables-save v1.4.4 on Tue Jan 11 15:08:11 2011\n*filter\n:INPUT ACCEPT [110120:1094344938]\n:FORWARD ACCEPT [599:42640]\n:OUTPUT ACCEPT [161756:11401471]\n:nova-ipv4-fallback - [0:0]\n:nova-local - [0:0]\n:nova-inst-14 - [0:0]\n:nova-sg-2 - [0:0]\n-A nova-ipv4-fallback -j DROP\n-A FORWARD -j nova-local\n-A nova-local -d 10.0.3.4 -j nova-inst-14\n-A nova-inst-14 -m state --state INVALID -j DROP\n-A nova-inst-14 -m state --state ESTABLISHED,RELATED -j ACCEPT\n-A nova-inst-14 -j nova-sg-2\n-A nova-inst-14 -s 10.1.3.254 -p udp --sport 67 --dport 68\n-A nova-inst-14 -j nova-ipv4-fallback\n-A nova-sg-2 -p tcp -s 10.0.1.0/27 -m multiport --dports 1:65535 -j ACCEPT\n-A nova-sg-2 -p udp -s 10.0.1.0/27 -m multiport --dports 1:65535 -j ACCEPT\n-A nova-sg-2 -p icmp -s 10.0.1.0/27 -m icmp --icmp-type 1/65535 -j ACCEPT\nCOMMIT\n# Completed on Tue Jan 11 15:08:11 2011\n\n(nova.exception 2011.1-workspace:tarmac-20110111215430-m7kkn94d5heffw6x): ERROR [N/A] Uncaught exception\n(nova.exception): TRACE: Traceback (most recent call last):\n(nova.exception): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/exception.py\", line 82, in _wrap\n(nova.exception): TRACE:     return f(*args, **kw)\n(nova.exception): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/virt/libvirt_conn.py\", line 367, in spawn\n(nova.exception): TRACE:     self.firewall_driver.prepare_instance_filter(instance)\n(nova.exception): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/virt/libvirt_conn.py\", line 1017, in prepare_instance_filter\n(nova.exception): TRACE:     self.apply_ruleset()\n(nova.exception): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/virt/libvirt_conn.py\", line 1024, in apply_ruleset\n(nova.exception): TRACE:     process_input='\\n'.join(new_filter))\n(nova.exception): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/utils.py\", line 144, in execute\n(nova.exception): TRACE:     cmd=cmd)\n(nova.exception): TRACE: ProcessExecutionError: Unexpected error while running command.\n(nova.exception): TRACE: Command: sudo iptables-restore\n(nova.exception): TRACE: Exit code: 2\n(nova.exception): TRACE: Stdout: ''\n(nova.exception): TRACE: Stderr: \"iptables-restore v1.4.4: Invalid ICMP code `65535'\\n\\nError occurred at line: 20\\nTry `iptables-restore -h' or 'iptables-restore --help' for more information.\\n\"\n(nova.exception): TRACE: \n(nova.compute.manager 2011.1-workspace:tarmac-20110111215430-m7kkn94d5heffw6x): ERROR [HYMFC6-IOFUSSHD8RGQA admin default-project] instance 14: Failed to spawn\n(nova.compute.manager): TRACE: Traceback (most recent call last):\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/compute/manager.py\", line 208, in run_instance\n(nova.compute.manager): TRACE:     self.driver.spawn(instance_ref)\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/exception.py\", line 88, in _wrap\n(nova.compute.manager): TRACE:     raise Error(str(e))\n(nova.compute.manager): TRACE: Error: Unexpected error while running command.\n(nova.compute.manager): TRACE: Command: sudo iptables-restore\n(nova.compute.manager): TRACE: Exit code: 2\n(nova.compute.manager): TRACE: Stdout: ''\n(nova.compute.manager): TRACE: Stderr: \"iptables-restore v1.4.4: Invalid ICMP code `65535'\\n\\nError occurred at line: 20\\nTry `iptables-restore -h' or 'iptables-restore --help' for more information.\\n\"\n(nova.compute.manager): TRACE: \nlibvir: QEMU error : Domain not found: no domain with matching name 'instance-0000000e'\n\n\nRelated code is here: nova/virt/libvirt_conn.py:1112\n\n                elif rule.protocol == 'icmp':\n                    icmp_type = rule.from_port\n                    icmp_code = rule.to_port\n\n                    if icmp_type == -1:\n                        icmp_type_arg = None\n                    else:\n                        icmp_type_arg = '%s' % icmp_type\n                        if not icmp_code == -1:\n                            icmp_type_arg += '/%s' % icmp_code\n\n                    if icmp_type_arg:\n                        args += ['-m', 'icmp', '--icmp-type', icmp_type_arg]\n\n                args += ['-j ACCEPT']\n                our_rules += [' '.join(args)]", 
    "tags": [], 
    "importance": "Undecided", 
    "heat": 10, 
    "link": "https://bugs.launchpad.net/nova/+bug/701731", 
    "owner": "None", 
    "id": 701731, 
    "index": 1993, 
    "created": "2011-01-12 00:22:33.342524+00:00", 
    "title": "icmp rules created with euca-authorize improperly use port-range for icmp type/code", 
    "comments": [
        {
            "content": "Build: 2011.1~bzr546-0ubuntu0ppa1~lucid1  from https://launchpad.net/~nova-core/+archive/trunk\nEnvironment: 1 cloud controller (api/network/scheduler/objectstore), 1 compute node (compute/volume)\nDetails: I accidentally created a iptables rule for icmp where I specified a port range 1-65535.  The rule was accepted, but after trying to spin a VM, the start up process in nova-compute failed because it interpreted the port range as an icmp type/code combination.  It looks like nova-compute needs to be getting the type/code info from the '-t' option in euca-authorize instead.\n\nrlucio@box4:~$ euca-authorize -P icmp -p 1-65535 -s 10.0.1.0/27 slb-default\nGROUP   slb-default\nPERMISSION      slb-default     ALLOWS  icmp    1       65535   FROM    CIDR    10.0.1.0/27\n\nrlucio@box4:~$ euca-run-instances ami-34oyhfez -g slb-default -t m1.tiny\n\n....\n\n(nova.virt.libvirt_conn 2011.1-workspace:tarmac-20110111215430-m7kkn94d5heffw6x): DEBUG [N/A] instance instance-0000000e: finished toXML method from MainProcess (pid=9157) to_xml /usr/lib/pymodules/python2.6/nova/virt/libvirt_conn.py:590\n(nova.root 2011.1-workspace:tarmac-20110111215430-m7kkn94d5heffw6x): INFO [N/A] called setup_basic_filtering in nwfilter\n(nova.root 2011.1-workspace:tarmac-20110111215430-m7kkn94d5heffw6x): INFO [N/A] ensuring static filters\n(nova.root 2011.1-workspace:tarmac-20110111215430-m7kkn94d5heffw6x): INFO [N/A] @@@ Adding instance chains/rules for instance id 14 @@@\n(nova.root 2011.1-workspace:tarmac-20110111215430-m7kkn94d5heffw6x): INFO [N/A] <nova.db.sqlalchemy.models.SecurityGroupIngressRule object at 0x3efaf50>\n(nova.root 2011.1-workspace:tarmac-20110111215430-m7kkn94d5heffw6x): INFO [N/A] <nova.db.sqlalchemy.models.SecurityGroupIngressRule object at 0x3efad10>\n(nova.root 2011.1-workspace:tarmac-20110111215430-m7kkn94d5heffw6x): INFO [N/A] <nova.db.sqlalchemy.models.SecurityGroupIngressRule object at 0x3efac10>\n(nova.root 2011.1-workspace:tarmac-20110111215430-m7kkn94d5heffw6x): INFO [N/A] new_filter: # Generated by iptables-save v1.4.4 on Tue Jan 11 15:08:11 2011\n*filter\n:INPUT ACCEPT [110120:1094344938]\n:FORWARD ACCEPT [599:42640]\n:OUTPUT ACCEPT [161756:11401471]\n:nova-ipv4-fallback - [0:0]\n:nova-local - [0:0]\n:nova-inst-14 - [0:0]\n:nova-sg-2 - [0:0]\n-A nova-ipv4-fallback -j DROP\n-A FORWARD -j nova-local\n-A nova-local -d 10.0.3.4 -j nova-inst-14\n-A nova-inst-14 -m state --state INVALID -j DROP\n-A nova-inst-14 -m state --state ESTABLISHED,RELATED -j ACCEPT\n-A nova-inst-14 -j nova-sg-2\n-A nova-inst-14 -s 10.1.3.254 -p udp --sport 67 --dport 68\n-A nova-inst-14 -j nova-ipv4-fallback\n-A nova-sg-2 -p tcp -s 10.0.1.0/27 -m multiport --dports 1:65535 -j ACCEPT\n-A nova-sg-2 -p udp -s 10.0.1.0/27 -m multiport --dports 1:65535 -j ACCEPT\n-A nova-sg-2 -p icmp -s 10.0.1.0/27 -m icmp --icmp-type 1/65535 -j ACCEPT\nCOMMIT\n# Completed on Tue Jan 11 15:08:11 2011\n\n(nova.exception 2011.1-workspace:tarmac-20110111215430-m7kkn94d5heffw6x): ERROR [N/A] Uncaught exception\n(nova.exception): TRACE: Traceback (most recent call last):\n(nova.exception): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/exception.py\", line 82, in _wrap\n(nova.exception): TRACE:     return f(*args, **kw)\n(nova.exception): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/virt/libvirt_conn.py\", line 367, in spawn\n(nova.exception): TRACE:     self.firewall_driver.prepare_instance_filter(instance)\n(nova.exception): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/virt/libvirt_conn.py\", line 1017, in prepare_instance_filter\n(nova.exception): TRACE:     self.apply_ruleset()\n(nova.exception): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/virt/libvirt_conn.py\", line 1024, in apply_ruleset\n(nova.exception): TRACE:     process_input='\\n'.join(new_filter))\n(nova.exception): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/utils.py\", line 144, in execute\n(nova.exception): TRACE:     cmd=cmd)\n(nova.exception): TRACE: ProcessExecutionError: Unexpected error while running command.\n(nova.exception): TRACE: Command: sudo iptables-restore\n(nova.exception): TRACE: Exit code: 2\n(nova.exception): TRACE: Stdout: ''\n(nova.exception): TRACE: Stderr: \"iptables-restore v1.4.4: Invalid ICMP code `65535'\\n\\nError occurred at line: 20\\nTry `iptables-restore -h' or 'iptables-restore --help' for more information.\\n\"\n(nova.exception): TRACE: \n(nova.compute.manager 2011.1-workspace:tarmac-20110111215430-m7kkn94d5heffw6x): ERROR [HYMFC6-IOFUSSHD8RGQA admin default-project] instance 14: Failed to spawn\n(nova.compute.manager): TRACE: Traceback (most recent call last):\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/compute/manager.py\", line 208, in run_instance\n(nova.compute.manager): TRACE:     self.driver.spawn(instance_ref)\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/exception.py\", line 88, in _wrap\n(nova.compute.manager): TRACE:     raise Error(str(e))\n(nova.compute.manager): TRACE: Error: Unexpected error while running command.\n(nova.compute.manager): TRACE: Command: sudo iptables-restore\n(nova.compute.manager): TRACE: Exit code: 2\n(nova.compute.manager): TRACE: Stdout: ''\n(nova.compute.manager): TRACE: Stderr: \"iptables-restore v1.4.4: Invalid ICMP code `65535'\\n\\nError occurred at line: 20\\nTry `iptables-restore -h' or 'iptables-restore --help' for more information.\\n\"\n(nova.compute.manager): TRACE: \nlibvir: QEMU error : Domain not found: no domain with matching name 'instance-0000000e'\n\n\nRelated code is here: nova/virt/libvirt_conn.py:1112\n\n                elif rule.protocol == 'icmp':\n                    icmp_type = rule.from_port\n                    icmp_code = rule.to_port\n\n                    if icmp_type == -1:\n                        icmp_type_arg = None\n                    else:\n                        icmp_type_arg = '%s' % icmp_type\n                        if not icmp_code == -1:\n                            icmp_type_arg += '/%s' % icmp_code\n\n                    if icmp_type_arg:\n                        args += ['-m', 'icmp', '--icmp-type', icmp_type_arg]\n\n                args += ['-j ACCEPT']\n                our_rules += [' '.join(args)]", 
            "date_created": "2011-01-12 00:22:33.342524+00:00", 
            "author": "https://api.launchpad.net/1.0/~rlucio"
        }, 
        {
            "content": "Hmm, this looks like a client issue.\r\n\r\nAccording to http://docs.amazonwebservices.com/AWSEC2/2006-10-01/DeveloperGuide/ApiReference-IpPermissionType.html\r\nYou should get ICMP type from fromPort and ICMP code from toPort. Apparently euca-authorize doesn't prevent you from using a -p port range with ICMP protocol (I didn't try the ec2tools to see how they behave in that case). Here nova does what it is required to do when called with those parameters.", 
            "date_created": "2011-01-17 16:36:16.697686+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "Actually it isn't even a client issue.  Per the aws ec2 api, the fromPort and toPort values are overloaded to represent icmp numbers when the protocol is icmp.\n\nVish\n\n\nOn Jan 17, 2011, at 8:36 AM, Thierry Carrez wrote:\n\n> Hmm, this looks like a client issue.\n> \n> According to http://docs.amazonwebservices.com/AWSEC2/2006-10-01/DeveloperGuide/ApiReference-IpPermissionType.html\n> You should get ICMP type from fromPort and ICMP code from toPort. Apparently euca-authorize doesn't prevent you from using a -p port range with ICMP protocol (I didn't try the ec2tools to see how they behave in that case). Here nova does what it is required to do when called with those parameters.\n> \n> ** Changed in: nova\n>       Status: New => Invalid\n> \n> -- \n> You received this bug notification because you are a member of Nova Bug\n> Team, which is subscribed to OpenStack Compute (nova).\n> https://bugs.launchpad.net/bugs/701731\n> \n> Title:\n>  icmp rules created with euca-authorize improperly use port-range for\n>  icmp type/code\n> \n> Status in OpenStack Compute (Nova):\n>  Invalid\n> \n> Bug description:\n>  Build: 2011.1~bzr546-0ubuntu0ppa1~lucid1  from https://launchpad.net/~nova-core/+archive/trunk\n>  Environment: 1 cloud controller (api/network/scheduler/objectstore), 1 compute node (compute/volume)\n>  Details: I accidentally created a iptables rule for icmp where I specified a port range 1-65535.  The rule was accepted, but after trying to spin a VM, the start up process in nova-compute failed because it interpreted the port range as an icmp type/code combination.  It looks like nova-compute needs to be getting the type/code info from the '-t' option in euca-authorize instead.\n> \n>  rlucio@box4:~$ euca-authorize -P icmp -p 1-65535 -s 10.0.1.0/27 slb-default\n>  GROUP   slb-default\n>  PERMISSION      slb-default     ALLOWS  icmp    1       65535   FROM    CIDR    10.0.1.0/27\n> \n>  rlucio@box4:~$ euca-run-instances ami-34oyhfez -g slb-default -t\n>  m1.tiny\n> \n>  ....\n> \n>  (nova.virt.libvirt_conn 2011.1-workspace:tarmac-20110111215430-m7kkn94d5heffw6x): DEBUG [N/A] instance instance-0000000e: finished toXML method from MainProcess (pid=9157) to_xml /usr/lib/pymodules/python2.6/nova/virt/libvirt_conn.py:590\n>  (nova.root 2011.1-workspace:tarmac-20110111215430-m7kkn94d5heffw6x): INFO [N/A] called setup_basic_filtering in nwfilter\n>  (nova.root 2011.1-workspace:tarmac-20110111215430-m7kkn94d5heffw6x): INFO [N/A] ensuring static filters\n>  (nova.root 2011.1-workspace:tarmac-20110111215430-m7kkn94d5heffw6x): INFO [N/A] @@@ Adding instance chains/rules for instance id 14 @@@\n>  (nova.root 2011.1-workspace:tarmac-20110111215430-m7kkn94d5heffw6x): INFO [N/A] <nova.db.sqlalchemy.models.SecurityGroupIngressRule object at 0x3efaf50>\n>  (nova.root 2011.1-workspace:tarmac-20110111215430-m7kkn94d5heffw6x): INFO [N/A] <nova.db.sqlalchemy.models.SecurityGroupIngressRule object at 0x3efad10>\n>  (nova.root 2011.1-workspace:tarmac-20110111215430-m7kkn94d5heffw6x): INFO [N/A] <nova.db.sqlalchemy.models.SecurityGroupIngressRule object at 0x3efac10>\n>  (nova.root 2011.1-workspace:tarmac-20110111215430-m7kkn94d5heffw6x): INFO [N/A] new_filter: # Generated by iptables-save v1.4.4 on Tue Jan 11 15:08:11 2011\n>  *filter\n>  :INPUT ACCEPT [110120:1094344938]\n>  :FORWARD ACCEPT [599:42640]\n>  :OUTPUT ACCEPT [161756:11401471]\n>  :nova-ipv4-fallback - [0:0]\n>  :nova-local - [0:0]\n>  :nova-inst-14 - [0:0]\n>  :nova-sg-2 - [0:0]\n>  -A nova-ipv4-fallback -j DROP\n>  -A FORWARD -j nova-local\n>  -A nova-local -d 10.0.3.4 -j nova-inst-14\n>  -A nova-inst-14 -m state --state INVALID -j DROP\n>  -A nova-inst-14 -m state --state ESTABLISHED,RELATED -j ACCEPT\n>  -A nova-inst-14 -j nova-sg-2\n>  -A nova-inst-14 -s 10.1.3.254 -p udp --sport 67 --dport 68\n>  -A nova-inst-14 -j nova-ipv4-fallback\n>  -A nova-sg-2 -p tcp -s 10.0.1.0/27 -m multiport --dports 1:65535 -j ACCEPT\n>  -A nova-sg-2 -p udp -s 10.0.1.0/27 -m multiport --dports 1:65535 -j ACCEPT\n>  -A nova-sg-2 -p icmp -s 10.0.1.0/27 -m icmp --icmp-type 1/65535 -j ACCEPT\n>  COMMIT\n>  # Completed on Tue Jan 11 15:08:11 2011\n> \n>  (nova.exception 2011.1-workspace:tarmac-20110111215430-m7kkn94d5heffw6x): ERROR [N/A] Uncaught exception\n>  (nova.exception): TRACE: Traceback (most recent call last):\n>  (nova.exception): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/exception.py\", line 82, in _wrap\n>  (nova.exception): TRACE:     return f(*args, **kw)\n>  (nova.exception): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/virt/libvirt_conn.py\", line 367, in spawn\n>  (nova.exception): TRACE:     self.firewall_driver.prepare_instance_filter(instance)\n>  (nova.exception): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/virt/libvirt_conn.py\", line 1017, in prepare_instance_filter\n>  (nova.exception): TRACE:     self.apply_ruleset()\n>  (nova.exception): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/virt/libvirt_conn.py\", line 1024, in apply_ruleset\n>  (nova.exception): TRACE:     process_input='\\n'.join(new_filter))\n>  (nova.exception): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/utils.py\", line 144, in execute\n>  (nova.exception): TRACE:     cmd=cmd)\n>  (nova.exception): TRACE: ProcessExecutionError: Unexpected error while running command.\n>  (nova.exception): TRACE: Command: sudo iptables-restore\n>  (nova.exception): TRACE: Exit code: 2\n>  (nova.exception): TRACE: Stdout: ''\n>  (nova.exception): TRACE: Stderr: \"iptables-restore v1.4.4: Invalid ICMP code `65535'\\n\\nError occurred at line: 20\\nTry `iptables-restore -h' or 'iptables-restore --help' for more information.\\n\"\n>  (nova.exception): TRACE: \n>  (nova.compute.manager 2011.1-workspace:tarmac-20110111215430-m7kkn94d5heffw6x): ERROR [HYMFC6-IOFUSSHD8RGQA admin default-project] instance 14: Failed to spawn\n>  (nova.compute.manager): TRACE: Traceback (most recent call last):\n>  (nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/compute/manager.py\", line 208, in run_instance\n>  (nova.compute.manager): TRACE:     self.driver.spawn(instance_ref)\n>  (nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/exception.py\", line 88, in _wrap\n>  (nova.compute.manager): TRACE:     raise Error(str(e))\n>  (nova.compute.manager): TRACE: Error: Unexpected error while running command.\n>  (nova.compute.manager): TRACE: Command: sudo iptables-restore\n>  (nova.compute.manager): TRACE: Exit code: 2\n>  (nova.compute.manager): TRACE: Stdout: ''\n>  (nova.compute.manager): TRACE: Stderr: \"iptables-restore v1.4.4: Invalid ICMP code `65535'\\n\\nError occurred at line: 20\\nTry `iptables-restore -h' or 'iptables-restore --help' for more information.\\n\"\n>  (nova.compute.manager): TRACE: \n>  libvir: QEMU error : Domain not found: no domain with matching name 'instance-0000000e'\n> \n> \n>  Related code is here: nova/virt/libvirt_conn.py:1112\n> \n>                  elif rule.protocol == 'icmp':\n>                      icmp_type = rule.from_port\n>                      icmp_code = rule.to_port\n> \n>                      if icmp_type == -1:\n>                          icmp_type_arg = None\n>                      else:\n>                          icmp_type_arg = '%s' % icmp_type\n>                          if not icmp_code == -1:\n>                              icmp_type_arg += '/%s' % icmp_code\n> \n>                      if icmp_type_arg:\n>                          args += ['-m', 'icmp', '--icmp-type', icmp_type_arg]\n> \n>                  args += ['-j ACCEPT']\n>                  our_rules += [' '.join(args)]\n> \n> \n\n", 
            "date_created": "2011-01-17 18:44:24+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "That is fine.  If it isn't a client issue then the man page for euca-authorize is simply out of date.  In it, it mentions both the port range and the icmp type/code option.   \n...\n       -p,  --port-range                 Range  of  ports  for  the  rule  (specified   as\n       \"from-to\").\n\n       -t, --icmp-type-code            ICMP type and code specified as \"type:code\"\n...\n\nRegardless I think you guys are right in saying that Nova is \"doing the right thing\" /shrug.", 
            "date_created": "2011-01-18 18:00:06.455369+00:00", 
            "author": "https://api.launchpad.net/1.0/~rlucio"
        }, 
        {
            "content": "Yes it has two options but both are packed into the same xml field.  Perhaps euca2ools should be modified to throw an error if -p is specified along with -P icmp instead of just packing regardless.\n\nVish\n\nOn Jan 18, 2011, at 10:00 AM, Ryan Lucio wrote:\n\n> That is fine.  If it isn't a client issue then the man page for euca-authorize is simply out of date.  In it, it mentions both the port range and the icmp type/code option.   \n> ...\n>       -p,  --port-range                 Range  of  ports  for  the  rule  (specified   as\n>       \"from-to\").\n> \n>       -t, --icmp-type-code            ICMP type and code specified as \"type:code\"\n> ...\n> \n> Regardless I think you guys are right in saying that Nova is \"doing the\n> right thing\" /shrug.\n> \n> -- \n> You received this bug notification because you are a member of Nova Bug\n> Team, which is subscribed to OpenStack Compute (nova).\n> https://bugs.launchpad.net/bugs/701731\n> \n> Title:\n>  icmp rules created with euca-authorize improperly use port-range for\n>  icmp type/code\n> \n> Status in OpenStack Compute (Nova):\n>  Invalid\n> \n> Bug description:\n>  Build: 2011.1~bzr546-0ubuntu0ppa1~lucid1  from https://launchpad.net/~nova-core/+archive/trunk\n>  Environment: 1 cloud controller (api/network/scheduler/objectstore), 1 compute node (compute/volume)\n>  Details: I accidentally created a iptables rule for icmp where I specified a port range 1-65535.  The rule was accepted, but after trying to spin a VM, the start up process in nova-compute failed because it interpreted the port range as an icmp type/code combination.  It looks like nova-compute needs to be getting the type/code info from the '-t' option in euca-authorize instead.\n> \n>  rlucio@box4:~$ euca-authorize -P icmp -p 1-65535 -s 10.0.1.0/27 slb-default\n>  GROUP   slb-default\n>  PERMISSION      slb-default     ALLOWS  icmp    1       65535   FROM    CIDR    10.0.1.0/27\n> \n>  rlucio@box4:~$ euca-run-instances ami-34oyhfez -g slb-default -t\n>  m1.tiny\n> \n>  ....\n> \n>  (nova.virt.libvirt_conn 2011.1-workspace:tarmac-20110111215430-m7kkn94d5heffw6x): DEBUG [N/A] instance instance-0000000e: finished toXML method from MainProcess (pid=9157) to_xml /usr/lib/pymodules/python2.6/nova/virt/libvirt_conn.py:590\n>  (nova.root 2011.1-workspace:tarmac-20110111215430-m7kkn94d5heffw6x): INFO [N/A] called setup_basic_filtering in nwfilter\n>  (nova.root 2011.1-workspace:tarmac-20110111215430-m7kkn94d5heffw6x): INFO [N/A] ensuring static filters\n>  (nova.root 2011.1-workspace:tarmac-20110111215430-m7kkn94d5heffw6x): INFO [N/A] @@@ Adding instance chains/rules for instance id 14 @@@\n>  (nova.root 2011.1-workspace:tarmac-20110111215430-m7kkn94d5heffw6x): INFO [N/A] <nova.db.sqlalchemy.models.SecurityGroupIngressRule object at 0x3efaf50>\n>  (nova.root 2011.1-workspace:tarmac-20110111215430-m7kkn94d5heffw6x): INFO [N/A] <nova.db.sqlalchemy.models.SecurityGroupIngressRule object at 0x3efad10>\n>  (nova.root 2011.1-workspace:tarmac-20110111215430-m7kkn94d5heffw6x): INFO [N/A] <nova.db.sqlalchemy.models.SecurityGroupIngressRule object at 0x3efac10>\n>  (nova.root 2011.1-workspace:tarmac-20110111215430-m7kkn94d5heffw6x): INFO [N/A] new_filter: # Generated by iptables-save v1.4.4 on Tue Jan 11 15:08:11 2011\n>  *filter\n>  :INPUT ACCEPT [110120:1094344938]\n>  :FORWARD ACCEPT [599:42640]\n>  :OUTPUT ACCEPT [161756:11401471]\n>  :nova-ipv4-fallback - [0:0]\n>  :nova-local - [0:0]\n>  :nova-inst-14 - [0:0]\n>  :nova-sg-2 - [0:0]\n>  -A nova-ipv4-fallback -j DROP\n>  -A FORWARD -j nova-local\n>  -A nova-local -d 10.0.3.4 -j nova-inst-14\n>  -A nova-inst-14 -m state --state INVALID -j DROP\n>  -A nova-inst-14 -m state --state ESTABLISHED,RELATED -j ACCEPT\n>  -A nova-inst-14 -j nova-sg-2\n>  -A nova-inst-14 -s 10.1.3.254 -p udp --sport 67 --dport 68\n>  -A nova-inst-14 -j nova-ipv4-fallback\n>  -A nova-sg-2 -p tcp -s 10.0.1.0/27 -m multiport --dports 1:65535 -j ACCEPT\n>  -A nova-sg-2 -p udp -s 10.0.1.0/27 -m multiport --dports 1:65535 -j ACCEPT\n>  -A nova-sg-2 -p icmp -s 10.0.1.0/27 -m icmp --icmp-type 1/65535 -j ACCEPT\n>  COMMIT\n>  # Completed on Tue Jan 11 15:08:11 2011\n> \n>  (nova.exception 2011.1-workspace:tarmac-20110111215430-m7kkn94d5heffw6x): ERROR [N/A] Uncaught exception\n>  (nova.exception): TRACE: Traceback (most recent call last):\n>  (nova.exception): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/exception.py\", line 82, in _wrap\n>  (nova.exception): TRACE:     return f(*args, **kw)\n>  (nova.exception): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/virt/libvirt_conn.py\", line 367, in spawn\n>  (nova.exception): TRACE:     self.firewall_driver.prepare_instance_filter(instance)\n>  (nova.exception): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/virt/libvirt_conn.py\", line 1017, in prepare_instance_filter\n>  (nova.exception): TRACE:     self.apply_ruleset()\n>  (nova.exception): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/virt/libvirt_conn.py\", line 1024, in apply_ruleset\n>  (nova.exception): TRACE:     process_input='\\n'.join(new_filter))\n>  (nova.exception): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/utils.py\", line 144, in execute\n>  (nova.exception): TRACE:     cmd=cmd)\n>  (nova.exception): TRACE: ProcessExecutionError: Unexpected error while running command.\n>  (nova.exception): TRACE: Command: sudo iptables-restore\n>  (nova.exception): TRACE: Exit code: 2\n>  (nova.exception): TRACE: Stdout: ''\n>  (nova.exception): TRACE: Stderr: \"iptables-restore v1.4.4: Invalid ICMP code `65535'\\n\\nError occurred at line: 20\\nTry `iptables-restore -h' or 'iptables-restore --help' for more information.\\n\"\n>  (nova.exception): TRACE: \n>  (nova.compute.manager 2011.1-workspace:tarmac-20110111215430-m7kkn94d5heffw6x): ERROR [HYMFC6-IOFUSSHD8RGQA admin default-project] instance 14: Failed to spawn\n>  (nova.compute.manager): TRACE: Traceback (most recent call last):\n>  (nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/compute/manager.py\", line 208, in run_instance\n>  (nova.compute.manager): TRACE:     self.driver.spawn(instance_ref)\n>  (nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/exception.py\", line 88, in _wrap\n>  (nova.compute.manager): TRACE:     raise Error(str(e))\n>  (nova.compute.manager): TRACE: Error: Unexpected error while running command.\n>  (nova.compute.manager): TRACE: Command: sudo iptables-restore\n>  (nova.compute.manager): TRACE: Exit code: 2\n>  (nova.compute.manager): TRACE: Stdout: ''\n>  (nova.compute.manager): TRACE: Stderr: \"iptables-restore v1.4.4: Invalid ICMP code `65535'\\n\\nError occurred at line: 20\\nTry `iptables-restore -h' or 'iptables-restore --help' for more information.\\n\"\n>  (nova.compute.manager): TRACE: \n>  libvir: QEMU error : Domain not found: no domain with matching name 'instance-0000000e'\n> \n> \n>  Related code is here: nova/virt/libvirt_conn.py:1112\n> \n>                  elif rule.protocol == 'icmp':\n>                      icmp_type = rule.from_port\n>                      icmp_code = rule.to_port\n> \n>                      if icmp_type == -1:\n>                          icmp_type_arg = None\n>                      else:\n>                          icmp_type_arg = '%s' % icmp_type\n>                          if not icmp_code == -1:\n>                              icmp_type_arg += '/%s' % icmp_code\n> \n>                      if icmp_type_arg:\n>                          args += ['-m', 'icmp', '--icmp-type', icmp_type_arg]\n> \n>                  args += ['-j ACCEPT']\n>                  our_rules += [' '.join(args)]\n> \n> \n\n", 
            "date_created": "2011-01-18 18:43:51+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }
    ]
}