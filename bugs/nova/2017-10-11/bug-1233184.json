{
    "status": "Fix Released", 
    "last_updated": "2014-04-17 08:58:49.544508+00:00", 
    "description": "1) Stop libvirtd on target host\n2) live migrate the VM\n3) The VM would go to ERROR state\n4) Check VM status with \"virsh list\", the VM is strill running well on source host.", 
    "tags": [
        "compute"
    ], 
    "importance": "Medium", 
    "heat": 16, 
    "link": "https://bugs.launchpad.net/nova/+bug/1233184", 
    "owner": "https://api.launchpad.net/1.0/~vladik-romanovsky", 
    "id": 1233184, 
    "index": 3624, 
    "created": "2013-09-30 14:04:01.932673+00:00", 
    "title": "VM would go to ERROR when live migration if libvirt on target host is down", 
    "comments": [
        {
            "content": "1) Stop libvirtd on target host\n2) live migrate the VM\n3) The VM would go to ERROR state\n4) Check VM status with \"virsh list\", the VM is strill running well on source host.", 
            "date_created": "2013-09-30 14:04:01.932673+00:00", 
            "author": "https://api.launchpad.net/1.0/~jay-lau-513"
        }, 
        {
            "content": "Hi Jay,\n\nsince it's a problem related to the live migration process i think the VM should not go to ERROR state, although an exception should be raised. It would be nice to set the compute node as \"unaivalable\" in case libvirtd is not running in order to prevent this case.\n\nWe could add a function is_compute_healthy() in nova.virt.driver which performs some healthchecks of the compute node, it could be called periodically. Every drivers must implement it.\n\nWhat do you think about that ?\n", 
            "date_created": "2013-10-10 11:27:35.624670+00:00", 
            "author": "https://api.launchpad.net/1.0/~yassine-lamgarchal"
        }, 
        {
            "content": "Thanks Yassine!\n\nI also thought this solution, but I think there will still be small time windows for the VM deploy to the hypervisor whose libvirtd has some problem since the healthchecks is **periodic task**\n\nIt seems that we can add  more checking in _check_requested_destination() to see if the target host is health or not before live migration. Comments? ;-)\n\n", 
            "date_created": "2013-10-10 12:16:25.726671+00:00", 
            "author": "https://api.launchpad.net/1.0/~jay-lau-513"
        }, 
        {
            "content": "Hi everyone,\n\nI have proposed a patch for this a while ago: https://review.openstack.org/#/c/50629\nHowever, it's still WIP.\n\nI think the best way is that libvirt driver will respond with a meaningful error, when the connection is broken.\nThis way we will be able to catch in the conductor task.\n\nMoreover, I think we should relay on libvirt events (on the source host), as its the only component that knows the status of the vm.\n\nThe more general solution, in my opinion would be to disable the nova compute service, when libvirt is not available and resume it when its available.\nI have started a discussion on this topic on the mailing list. Maybe you would like to share your thoughts there as well (Subject : \"Disabling nova-compute when a connection to libvirt is broken.\")\n\nWhat do you think?\n\n\n ", 
            "date_created": "2013-10-10 12:50:05.746129+00:00", 
            "author": "https://api.launchpad.net/1.0/~vladik-romanovsky"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/50629\nCommitted: http://github.com/openstack/nova/commit/6df1b872cbfd8646614a52979904ca50a76c59c0\nSubmitter: Jenkins\nBranch:    master\n\ncommit 6df1b872cbfd8646614a52979904ca50a76c59c0\nAuthor: Vladik Romanovsky <email address hidden>\nDate:   Wed Oct 16 15:07:23 2013 -0400\n\n    There is no need to set VM status to ERROR on a failed migration\n    \n    VM state should not be set to ERROR, when the\n    migration failed beauce libvirt is unavailble on the destination.\n    \n    Fixes bug #1233184\n    Change-Id: I36e4ed3842d7e33c1082ec95f860629eee23224e\n", 
            "date_created": "2013-12-05 06:03:36.029827+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}