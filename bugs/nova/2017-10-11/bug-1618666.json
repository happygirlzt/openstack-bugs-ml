{
    "status": "Fix Released", 
    "last_updated": "2017-07-19 18:11:11.148323+00:00", 
    "description": "tox -e py34 is reporting a deprecation warning for SafeConfigParser\n\n/octavia/.tox/py34/lib/python3.4/site-packages/pbr/util.py:207: DeprecationWarning: The SafeConfigParser class has been renamed to ConfigParser in Python 3.2. This alias will be removed in future versions. Use ConfigParser directly instead.\n  parser = configparser.SafeConfigParser()", 
    "tags": [
        "config", 
        "in-feature-hummingbird", 
        "low-hanging-fruit"
    ], 
    "importance": "Low", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1618666", 
    "owner": "https://api.launchpad.net/1.0/~glongwave", 
    "id": 1618666, 
    "index": 798, 
    "created": "2016-08-31 01:20:19.098216+00:00", 
    "title": "deprecated warning for SafeConfigParser", 
    "comments": [
        {
            "content": "tox -e py34 is reporting a deprecation warning for SafeConfigParser\n\n/octavia/.tox/py34/lib/python3.4/site-packages/pbr/util.py:207: DeprecationWarning: The SafeConfigParser class has been renamed to ConfigParser in Python 3.2. This alias will be removed in future versions. Use ConfigParser directly instead.\n  parser = configparser.SafeConfigParser()", 
            "date_created": "2016-08-31 01:20:19.098216+00:00", 
            "author": "https://api.launchpad.net/1.0/~johnsom"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/368399", 
            "date_created": "2016-09-11 08:08:07.696597+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/368417", 
            "date_created": "2016-09-11 09:37:45.042140+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/368404\nCommitted: https://git.openstack.org/cgit/openstack/neutron/commit/?id=bdfa3c9400afa67053cb20490bce73cdb828b063\nSubmitter: Jenkins\nBranch:    master\n\ncommit bdfa3c9400afa67053cb20490bce73cdb828b063\nAuthor: lilintan <email address hidden>\nDate:   Sun Sep 11 16:25:15 2016 +0800\n\n    Use ConfigParser instead of SafeConfigParser\n    \n    SafeConfigParser supports interpolation on top of ConfigParser in\n    Python 2, and SafeConfigParser is deprecated in Python 3.2 and log\n    warning like \" DeprecationWarning: The SafeConfigParser class has\n    been renamed to ConfigParser in Python 3.2. This alias will be removed\n    in future versions. Use ConfigParser directly instead.\" So we can use\n    ConfigParser if we don't need interpolation.\n    \n    Closes-Bug: #1618666\n    Change-Id: Ie5d38b86bb2ba3c83c7eb541de0389c6e4dcf654\n", 
            "date_created": "2016-09-12 05:14:58.670764+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "review: https://review.openstack.org/#/c/368617/\n", 
            "date_created": "2016-09-12 08:11:02.942528+00:00", 
            "author": "https://api.launchpad.net/1.0/~tuanla"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/368408\nCommitted: https://git.openstack.org/cgit/openstack-dev/pbr/commit/?id=77d9ab7d07feb38281531deeeb4399017b5735d0\nSubmitter: Jenkins\nBranch:    master\n\ncommit 77d9ab7d07feb38281531deeeb4399017b5735d0\nAuthor: jiansong <email address hidden>\nDate:   Sun Sep 11 01:49:10 2016 -0700\n\n    Deprecated warning for SafeConfigParser\n    \n    tox -e py34 is reporting a deprecation warning for SafeConfigParser\n    /octavia/.tox/py34/lib/python3.4/site-packages/pbr/util.py:207:\n    DeprecationWarning: The SafeConfigParser class has been renamed to\n    ConfigParser in Python 3.2. This alias will be removed in future\n    versions. Use ConfigParser directly instead.\n      parser = configparser.SafeConfigParser()\n    \n    Closes-Bug: #1618666\n    Change-Id: Ib280b778938b64717ee1cf94efae2f7b553c8f5e\n", 
            "date_created": "2016-09-12 09:32:58.692751+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/368413\nCommitted: https://git.openstack.org/cgit/openstack/keystone/commit/?id=408820cbe360e94388d63ba1778f020e9894cdce\nSubmitter: Jenkins\nBranch:    master\n\ncommit 408820cbe360e94388d63ba1778f020e9894cdce\nAuthor: xianming mao <email address hidden>\nDate:   Sun Sep 11 16:58:13 2016 +0800\n\n    Use ConfigParser instead of SafeConfigParser\n    \n    The SafeConfigParser class has been renamed to ConfigParser in Python\n    3.2 [1]. This alias will be removed in future versions.So we can use\n    ConfigParser directly instead.\n    \n    [1] http://bugs.python.org/issue10627\n    \n    Closes-Bug: #1618666\n    Change-Id: If01186cefad2149d65ffcc1fc6550d72d26f5b11\n", 
            "date_created": "2016-09-12 18:37:22.237254+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/369814", 
            "date_created": "2016-09-14 04:50:06.575982+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/369819", 
            "date_created": "2016-09-14 04:59:43.585649+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/370542", 
            "date_created": "2016-09-15 05:10:59.911358+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/368417\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=f8c1ee39505b49ab822ed53fa84d0cd31351b490\nSubmitter: Jenkins\nBranch:    master\n\ncommit f8c1ee39505b49ab822ed53fa84d0cd31351b490\nAuthor: ChangBo Guo(gcb) <email address hidden>\nDate:   Sun Sep 11 17:34:23 2016 +0800\n\n    Fix SafeConfigParser DeprecationWarning in Python 3.2\n    \n    SafeConfigParser is deprecated in Python 3.2 and log warning\n    like \" DeprecationWarning: The SafeConfigParser class has\n    been renamed to ConfigParser in Python 3.2. This alias will be\n    removed in future versions. Use ConfigParser directly instead.\"\n    So use ConfigParser in Python 3.2+.\n    \n    Closes-Bug: #1618666\n    Change-Id: I225bde35b18bd410f3fe9d415759d1def0a91aca\n", 
            "date_created": "2016-09-20 19:09:22.317371+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/373511", 
            "date_created": "2016-09-20 19:26:34.015033+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/369838\nCommitted: https://git.openstack.org/cgit/openstack/python-ironicclient/commit/?id=e7d88230b08689dcf904d94fc398b1e54254cb8f\nSubmitter: Jenkins\nBranch:    master\n\ncommit e7d88230b08689dcf904d94fc398b1e54254cb8f\nAuthor: qinchunhua <email address hidden>\nDate:   Wed Sep 14 02:11:48 2016 -0400\n\n    Use ConfigParser instead of SafeConfigParser in Python 3\n    \n    The SafeConfigParser class has been renamed to ConfigParser in Python\n    3.2 [1]. The alias SafeConfigParser maybe removed in future versions of\n    Python 3. Use ConfigParser instead of SafeConfigParser in Python 3\n    \n    [1] http://bugs.python.org/issue10627\n    \n    Change-Id: I7b550cbd7b5d4c4fe3511c456b5f738030e07d5e\n    Closes-Bug: #1618666\n", 
            "date_created": "2016-09-21 17:21:16.377667+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/keystone 10.0.0.0rc1 release candidate.", 
            "date_created": "2016-09-26 20:03:47.546077+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/neutron 9.0.0.0rc1 release candidate.", 
            "date_created": "2016-09-26 20:10:44.791439+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/370542\nCommitted: https://git.openstack.org/cgit/openstack/tempest/commit/?id=8254a3f54d757927d159b3edc4f4f982bd8d6138\nSubmitter: Jenkins\nBranch:    master\n\ncommit 8254a3f54d757927d159b3edc4f4f982bd8d6138\nAuthor: Janonymous <email address hidden>\nDate:   Thu Sep 15 10:38:48 2016 +0530\n\n    Use ConfigParser instead of SafeConfigParser\n    \n    SafeConfigParser supports interpolation on top of ConfigParser in Python 2,\n    and SafeConfigParser is deprecated in Python 3.2 and log warning\n    like \" DeprecationWarning: The SafeConfigParser class has been renamed to\n    ConfigParser in Python 3.2. This alias will be removed in future versions.\n    Use ConfigParser directly instead.\"\n    So we can use ConfigParser if we don't need interpolation.\n    \n    Change-Id: If210bd1322df96c0c8aea1f257148dc46affb422\n    Closes-Bug: #1618666\n", 
            "date_created": "2016-09-28 22:10:19.305950+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/368617\nCommitted: https://git.openstack.org/cgit/openstack/swift/commit/?id=1f690df60c0ce7b627c4ebceaecaa5370ff10042\nSubmitter: Jenkins\nBranch:    master\n\ncommit 1f690df60c0ce7b627c4ebceaecaa5370ff10042\nAuthor: Luong Anh Tuan <email address hidden>\nDate:   Mon Sep 12 15:01:29 2016 +0700\n\n    Use ConfigParser instead of SafeConfigParser\n    \n    SafeConfigParser supports interpolation on top of ConfigParser in\n    Python 2, and SafeConfigParser is deprecated in Python 3.2 and log\n    warning like \" DeprecationWarning: The SafeConfigParser class has\n    been renamed to ConfigParser in Python 3.2. This alias will be removed\n    in future versions. Use ConfigParser directly instead.\" So we can use\n    ConfigParser if we don't need interpolation.\n    \n    Change-Id: I7e399b3cb90ded909e0d777a4d10c44f1e9299da\n    Closes-Bug: #1618666\n", 
            "date_created": "2016-09-30 22:52:29.815361+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/368399\nCommitted: https://git.openstack.org/cgit/openstack/trove/commit/?id=00b3f8a4c533712db9c7e54c2089b7d644c969d4\nSubmitter: Jenkins\nBranch:    master\n\ncommit 00b3f8a4c533712db9c7e54c2089b7d644c969d4\nAuthor: ChangBo Guo(gcb) <email address hidden>\nDate:   Sun Sep 11 16:02:31 2016 +0800\n\n    Fix SafeConfigParser DeprecationWarning in Python 3.2\n    \n    SafeConfigParser is deprecated in Python 3.2 and log warning\n    like \" DeprecationWarning: The SafeConfigParser class has\n    been renamed to ConfigParser in Python 3.2. This alias will be\n    removed in future versions. Use ConfigParser directly instead.\"\n    So use ConfigParser in Python 3.2+.\n    \n    Closes-Bug: #1618666\n    Change-Id: I30fe51324ffcc0afbd02799449daee8f628634b6\n", 
            "date_created": "2016-10-05 19:48:36.055934+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/369819\nCommitted: https://git.openstack.org/cgit/openstack/python-swiftclient/commit/?id=b6cf56deb9eba388c787d365e7f5b4aca67c57e1\nSubmitter: Jenkins\nBranch:    master\n\ncommit b6cf56deb9eba388c787d365e7f5b4aca67c57e1\nAuthor: Pallavi <email address hidden>\nDate:   Wed Sep 14 10:27:02 2016 +0530\n\n    Use ConfigParser instead of SafeConfigParser\n    \n    The SafeConfigParser class has been renamed to ConfigParser in Python\n    3.2. This alias will be removed in future versions.So we can use\n    ConfigParser directly instead.\n    \n    Change-Id: Ie0292271229ee77d1bc57dd897ebbbb3d3c059aa\n    Closes-Bug: #1618666\n", 
            "date_created": "2016-10-17 10:49:42.163629+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/keystone 10.0.0.0rc1 release candidate.", 
            "date_created": "2016-10-18 16:51:54.154155+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/neutron 9.0.0.0rc1 release candidate.", 
            "date_created": "2016-10-18 16:58:01.837372+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/python-ironicclient 1.8.0 release.", 
            "date_created": "2016-11-08 21:07:14.061214+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/python-ironicclient 1.8.0 release.", 
            "date_created": "2016-11-10 02:59:56.449745+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/python-swiftclient 3.2.0 release.", 
            "date_created": "2016-11-14 16:59:31.999006+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/nova 15.0.0.0b1 development milestone.", 
            "date_created": "2016-11-17 13:14:29.126190+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/trove 7.0.0.0b1 development milestone.", 
            "date_created": "2016-11-17 20:48:03.395108+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/swift 2.11.0 release.", 
            "date_created": "2016-11-18 16:26:34.495088+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: feature/hummingbird\nReview: https://review.openstack.org/400985", 
            "date_created": "2016-11-22 22:16:44.895189+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/400985\nCommitted: https://git.openstack.org/cgit/openstack/swift/commit/?id=0c3f8f87104af8717115c5badffd243dbaa1c430\nSubmitter: Jenkins\nBranch:    feature/hummingbird\n\ncommit 2d25fe6ad3573b2a06b6b3e5e66493d7b0c55693\nAuthor: Tim Burke <email address hidden>\nDate:   Mon Jul 25 15:06:23 2016 -0700\n\n    Reduce backend requests for SLO If-Match / HEAD requests\n    \n    ... by storing SLO Etag and size in sysmeta.\n    \n    Previously, we had to GET the manifest for every HEAD or conditional\n    request to an SLO. Worse, since SLO PUTs require that we HEAD every\n    segment, we'd GET all included sub-SLO manifests. This was necessary so\n    we could recompute the large object's Etag and content-length.\n    \n    Since we already know both of those during PUT, we'll now store it in\n    object sysmeta. This allows us to:\n    \n     * satisfy HEAD requests based purely off of the manifest's HEAD\n       response, and\n     * perform the If-(None-)Match comparison on the object server, without\n       any additional subrequests.\n    \n    Note that the large object content-length can't just be parsed from\n    content-type -- with fast-POST enabled, the content-type coming out of\n    the object-server won't necessarily include swift_bytes.\n    \n    Also note that we must still fall back to GETting the manifest if the\n    sysmeta headers were not found. Otherwise, we'd break existing large\n    objects.\n    \n    Change-Id: Ia6ad32354105515560b005cea750aa64a88c96f9\n\ncommit ae7dddd801e28217d7dc46bd45cd6b621f29340c\nAuthor: Ond\u0159ej Nov\u00fd <email address hidden>\nDate:   Mon Nov 21 22:13:11 2016 +0100\n\n    Added comment for \"user\" option in drive-audit config\n    \n    Change-Id: I24362826bee85ac3304e9b63504c9465da673014\n\ncommit c3e1d847f4b9d6cc6212aae4dc1b1e6dff45fb40\nAuthor: Thiago da Silva <email address hidden>\nDate:   Thu Nov 17 17:17:00 2016 -0500\n\n    breaking down tests.py into smaller pieces\n    \n    tests.py is currently at ~5500 lines of code, it's\n    time to break it down into smaller files.\n    \n    I started with an easy middleware set of tests\n    (i.e., versioned writes, ~600 lines of code ) so I can get\n    some feedback. There are more complicated tests that cover\n    multiple middlewares for example, it is not so clear where\n    those should go.\n    \n    Change-Id: I2aa6c18ee5b68d0aae73cc6add8cac6fbf7f33da\n    Signed-off-by: Thiago da Silva <email address hidden>\n\ncommit 5d7a3a4172f0f11ab870252eec784cf24b247dea\nAuthor: Ond\u0159ej Nov\u00fd <email address hidden>\nDate:   Sat Nov 19 23:24:30 2016 +0100\n\n    Removed \"in-process-\" from func env tox name\n    \n    This shorten shebang in infra, because we are hitting 128 bytes limit.\n    \n    Change-Id: I02477d81b836df71780942189d37d616944c4dce\n\ncommit 9ea340256996a03c8c744201297b47a0e91fe65b\nAuthor: Kota Tsuyuzaki <email address hidden>\nDate:   Fri Nov 18 01:50:11 2016 -0800\n\n    Don't overwrite built-in 'id'\n    \n    This is a follow up for https://review.openstack.org/#/c/399237\n    \n    'id' is assigned as a builtin function so that we should not use 'id'\n    for the local variable name.\n    \n    Change-Id: Ic27460d49e68f6cd50bda1d5b3810e01ccb07a37\n\ncommit bf473ddc9d3fcb3a3fe516b5221a588c5b196a1d\nAuthor: John Dickinson <email address hidden>\nDate:   Wed Nov 9 12:37:43 2016 -0800\n\n    2.11.0 release notes\n    \n    I have reordered the Contributors section of the AUTHORS\n    file to simply be ordered by the first character in the\n    author name.\n    \n    Change-Id: I824022e582cadc361484b20c411840f46c4c5b50\n\ncommit 2e7a7347fc58676fbaabce3d87a15866796d32e4\nAuthor: Tim Burke <email address hidden>\nDate:   Thu Nov 17 13:02:06 2016 -0800\n\n    Avoid infinite loop while placing parts\n    \n    Previously, we could over-assign how many parts should be in a tier.\n    This would cause the local `parts` variable to go negative, which meant\n    that our `while parts` loop would never terminate.\n    \n    Change-Id: Id7e7889742ca37cf1a9c0d55fba78d967e90e8d0\n    Closes-Bug: 1642538\n\ncommit b94d0db9aaf117080bdcebda4b44bd02eb25749e\nAuthor: Bryan Keller <email address hidden>\nDate:   Wed Nov 16 22:16:53 2016 +0000\n\n    Correctly send 412 Precondition Failed in copy middleware\n    \n    Previously in copy middleware, if a user entered an invalid destination\n    path with an invalid `container/object` path the server would return\n    a 500 Internal Server Error. However, the correct response should be\n    a 412 Precondition Failed. This patch updates copy so that it catches\n    the 412 Precondition Failed exception and returns it to the client.\n    \n    Closes-Bug: #1641980\n    \n    Change-Id: Ic4677ae033d05b8730c6ad1041bd9c07268e11a9\n\ncommit ba1f285fe6fc8729d7961a34023f2b29c00bac39\nAuthor: zhangyanxian <zhangyanxianmail@163.com>\nDate:   Thu Nov 17 02:06:25 2016 +0000\n\n    Fix typos in test_container.py\n    \n    TrivialFix\n    \n    Change-Id: I6d3422a88b6fd6d2a495d17ff75d292ac96cc251\n\ncommit e8a5448b0767026925b5ad396f6de1be79ac2325\nAuthor: Tim Burke <email address hidden>\nDate:   Tue Nov 15 14:35:42 2016 -0800\n\n    Add X-Openstack-Request-Id to Access-Control-Expose-Headers\n    \n    Change-Id: Ib95a693042f0b3cf204033eb5957660cb3573dcf\n    Related-Change: I56cd4738808b99c0a08463f83c100be51a62db05\n\ncommit f850ff065e70fb56f9b9e224194553770787f516\nAuthor: Tim Burke <email address hidden>\nDate:   Sat Oct 29 22:00:01 2016 +0200\n\n    SLO: Concurrently HEAD segments\n    \n    Before creating a static large object, we must verify that all of the\n    referenced segments exist. Previously, this was done sequentially; due\n    to latency between proxy and object nodes, clients must be careful to\n    either keep their segment count low or use very long (minute+) timeouts.\n    We mitigate this somewhat by enforcing a hard limit on segment count,\n    but even then, HEADing a thousand segments (the default limit) with an\n    average latency of (say) 100ms will require more than a minute and a\n    half.\n    \n    Further, the nested-SLO approach requires multiple requests from the\n    client -- as a result, Swift3 is in the position of enforcing a lower\n    limit than S3's 10,000 (which will break some clients) or requiring that\n    clients have timeouts on the order of 15-20 minutes (!).\n    \n    Now, we'll perform the segment HEADs in parallel, with a concurrency\n    factor set by the operator. This is very similar to (and builds upon)\n    the parallel-bulk-delete work. By default, two HEAD requests will be\n    allowed at a time.\n    \n    As a side-effect, we'll also only ever HEAD a path once per manifest.\n    Previously, if a manifest alternated between two paths repeatedly (for\n    instance, because the user wanted to splice together various ranges from\n    two sub-SLOs), then each entry in the manifest would trigger a fresh\n    HEAD request.\n    \n    Upgrade Consideration\n    =====================\n    If operators would like to preserve the prior (single-threaded) SLO\n    creation behavior, they must add the following line to their\n    [filter:slo] proxy config section:\n    \n       concurrency = 1\n    \n    This may be done prior to upgrading Swift.\n    \n    UpgradeImpact\n    Closes-Bug: #1637133\n    Related-Change: I128374d74a4cef7a479b221fd15eec785cc4694a\n    Change-Id: I567949567ecdbd94fa06d1dd5d3cdab0d97207b6\n\ncommit 40152f4242dfe46a4c63ae69b0a0e1c83172f556\nAuthor: Tim Burke <email address hidden>\nDate:   Tue Nov 15 14:12:02 2016 -0800\n\n    Fix up X-Trans-Id-Extra docs\n    \n    Previously, they would render as \"X -Trans-Id-Extra\"\n    \n    Change-Id: Ibaf9b365467a2c91a0f03baed4d7bc36b0fa9967\n\ncommit 8e122c6fe8aa0f3e3b96d124023728b98820147e\nAuthor: Janie Richling <email address hidden>\nDate:   Tue Nov 15 13:15:59 2016 -0600\n\n    Document X-Openstack-Request-Id in all responses\n    \n    Swift returns `X-Openstack-Request-Id` for container and\n    object requests as well as account.  A couple api-ref docs are\n    missing this value in the response examples.\n    \n    Change-Id: Ifcd67a620e04be5e92b43c7749ee4acb50bb171d\n\ncommit d25216bddabc77fb54c514269ee55800c87f558c\nAuthor: Thiago da Silva <email address hidden>\nDate:   Mon May 16 15:57:47 2016 -0400\n\n    remove double checks on account/container info\n    \n    Continuing the clean up in account and container\n    info, removed duplicated validation from account_info\n    and container_info methods, since the same validations\n    were recently added to get_account_info and get_container_info.\n    \n    Change-Id: I1ad745fe809367d22649c83f38c4de7a74cac44e\n    Signed-off-by: Thiago da Silva <email address hidden>\n\ncommit 721cd1634a82b735d0d65062c15c30fffb204a0e\nAuthor: Alistair Coles <email address hidden>\nDate:   Fri Nov 11 16:34:15 2016 +0000\n\n    Show file parameters as mandatory in swift-*-info man pages\n    \n    Changes the file parameters on command line to use the convention of\n    <file> for a mandatory option rather than [file] which suggests an\n    optional flag. Also drop to lower case as is convention in other man\n    pages.\n    \n    Change-Id: Icfb4b4786343eb493a73b092cad1fdadc935d066\n\ncommit 243dd97c5848c5ef634d630fcc945bd12aff102f\nAuthor: Mohit Motiani <email address hidden>\nDate:   Tue Oct 25 21:13:55 2016 +0000\n\n    Add OPTIONS in manpages\n    \n    swift-account-info, swift-container-info, swift-object-info\n    and swift-get-node do not contain any information about the available\n    options. This patch adds OPTIONS in these manpages.\n    \n    Change-Id: I832c621460ee6bf19adac8e0aadeab32be4b8da0\n\ncommit b69caeae7d717cd0b5c1d643d7f7fc12e09530a5\nAuthor: Christian Hugo <email address hidden>\nDate:   Sun Oct 30 12:07:29 2016 +0100\n\n    Include debug message for rsync tempfiles\n    \n    The warning message for rsync tempfiles was removed in the related\n    change.  However, because our regex match might result in a false\n    positive maybe it's still useful to log a debug message.  Instead of\n    silently ignoring rsync tempfiles, when running in debug we note the\n    file and how we classified it - but still no warning will occur.\n    \n    I also consolidate our use of the regex for rsync tempfiles into the\n    diskfile module and move the negative test for the warning logger\n    message a little next to the positive test.\n    \n    Change-Id: Idb2a1a76aa275c9c2e9bad8aceea913b8f5b1c71\n    Related-Change: I5a5d6e24710e4880776b32edcbc07021acf77676\n\ncommit e6dea4d69995272724c772f33385530f5a35bd89\nAuthor: John Dickinson <email address hidden>\nDate:   Mon Oct 3 17:18:22 2016 -0700\n\n    adding reno sphinx tree\n    \n    This should give the necessary tooling to set up the right\n    links in the right places so Swift has release notes listed\n    alongside other projects.\n    \n    Change-Id: I4e5f1ce1fcfbb2943036c821a24a0b4a3a2d9fc8\n\ncommit 5de9747e1629565653a3f15d28bc4b4cb03c4abd\nAuthor: Tim Burke <email address hidden>\nDate:   Tue Nov 8 12:32:18 2016 -0800\n\n    Stop shadowing built-in iter\n    \n    Change-Id: I0e3fcddfef6968353e4c0aa6871a2e7a22598459\n\ncommit 2f31c0469dd48c3a7052faeb8b5d786d5a32c21a\nAuthor: Lokesh S <email address hidden>\nDate:   Thu Jul 28 13:31:47 2016 +0000\n\n    Py3: Fixes header key dict\n    \n    Decode header to latin1 on python3\n    encode header to utf-8 on python2.\n    \n    Co-Authored-By: Alistair Coles <email address hidden>\n    \n    Change-Id: I10f205a05bb3a566e52a597d9315b3a8b8c14664\n\ncommit f4adb2f28f5517772174aac18e3fe9ab1d08c913\nAuthor: Clay Gerrard <email address hidden>\nDate:   Mon Nov 7 18:06:44 2016 -0800\n\n    Fix ZeroDivisionError in reconstructor.stats_line\n    \n    Despite a check to prevent zero values in the denominator python\n    integer division could result in ZeroDivisionError in the compute_eta\n    helper function.  Make sure we always have a non-zero value even if it\n    is small.\n    \n    NotImplemented:\n    \n     * stats calculation is still not great, see lp bug #1488608\n    \n    Closes-Bug: #1549110\n    Change-Id: I54f2081c92c2a0b8f02c31e82f44f4250043d837\n\ncommit c2ce92acd6fa25706e271dc2b1504a8db54bd2ae\nAuthor: Clay Gerrard <email address hidden>\nDate:   Tue Oct 11 13:23:11 2016 -0700\n\n    Fix signal handling for daemons with InternalClient\n    \n    The intentional use of \"bare except\" handling in catch_errors and some\n    daemons to prevent propagation on unexpected errors that do not\n    inherit from Exception (like eventlet.Timeout) or even BaseException\n    (like old-style classes) has the side effect of spuriously \"handling\"\n    *expected* errors like when a signal handler raises SystemExit.\n    \n    The signal handler installed in our Daemon is intended to ensure first\n    that the entire process group and any forked processes (like rsync's)\n    receive the SIGTERM signal and also that the process itself\n    terminates.\n    \n    The use of sys.exit was not a concious grandiose plans for graceful\n    shutdown (like the running[0] = False trick that wsgi server parent\n    process do) - the desired behavior for SIGTERM is to stop - hard.\n    \n    This change ensures the original goals and intentions of our signal\n    handler are fulfilled without the undesirable side effect that can\n    cause our daemons to confusingly log an expected message to stop as an\n    unexpected error, and start ignoring additional SIGTERM messages;\n    forcing our kind operators to resort to brutal process murder.\n    \n    Closes-Bug: #1489209\n    Change-Id: I9d2886611f6db2498cd6a8f81a58f2a611f40905\n\ncommit 116462d8a5a45ec876403234cf83b96dfad58ddd\nAuthor: Clay Gerrard <email address hidden>\nDate:   Fri Sep 16 11:58:46 2016 -0700\n\n    Add probetest for response with duplicate frags\n    \n    When an SSYNC connection fails after shipping a fragment, but before\n    cleaning itself up - it can lead to multiple replicas of the same\n    fragment index serviceable in the node_iter at the same time.  Or\n    perhaps more likely if a partner nodes win a race to rebuild waiting\n    on a handoff.  In this case, the proxy need not fail to service a GET\n    just because of extra information.  A similar guard was added to the\n    reconstructor in a related change [1].\n    \n    This underlying bug is acctually fixed by the related change [2], this\n    probetest is just encoding the failure to help with future maintenance.\n    \n    1. Related-Change: I91f3d4af52cbc66c9f7ce00726f247b5462e66f9\n    2. Related-Change: I2310981fd1c4622ff5d1a739cbcc59637ffe3fc3\n    \n    Closes-Bug: 1624176\n    \n    Change-Id: I06fc381a25613585dd18916d50e7ca2c68d406b6\n\ncommit 6574ce31eeda1bdffa2534f21eed7ab0d62bce97\nAuthor: Alistair Coles <email address hidden>\nDate:   Mon Sep 26 17:25:09 2016 +0100\n\n    EC: reconstruct using non-durable fragments\n    \n    Previously the reconstructor would only reconstruct a missing fragment\n    when a set of ec_ndata other fragments was available, *all* of which\n    were durable. Since change [1] it has been possible to retrieve\n    non-durable fragments from object servers. This patch changes the\n    reconstructor to take advantage of [1] and use non-durable fragments.\n    \n    A new probe test is added to test scenarios with a mix of failed and\n    non-durable nodes. The existing probe tests in\n    test_reconstructor_rebuild.py and test_reconstructor_durable.py were\n    broken. These were intended to simulate cases where combinations of\n    nodes were either failed or had non-durable fragments, but the test\n    scenarios defined were not actually created - every test scenario\n    broke only one node instead of the intent of breaking multiple\n    nodes. The existing tests have been refactored to re-use most of their\n    setup and assertion code, and merged with the new test into a single\n    class in test_reconstructor_rebuild.py.\n    \n    test_reconstructor_durable.py is removed.\n    \n    [1] Related-Change: I2310981fd1c4622ff5d1a739cbcc59637ffe3fc3\n    \n    Change-Id: Ic0cdbc7cee657cea0330c2eb1edabe8eb52c0567\n    Co-Authored-By: Clay Gerrard <email address hidden>\n    Closes-Bug: #1624088\n\ncommit a4d77d918d99dfa8a1e7f1b0561769a17ba64932\nAuthor: Alistair Coles <email address hidden>\nDate:   Thu Nov 3 15:19:25 2016 +0000\n\n    Fix KeyError when auditor finds an expired object\n    \n    Since the related change [1] the auditor checks deleted objects in\n    case their tombstone is ready to be reclaimed. However, the auditor\n    mistakes an expired object for a deleted object because\n    DiskFileExpired is a subclass of DiskFileDeleted. This causes a\n    KeyError to be raised and logged because the expired object has no\n    tombstone info in the ondisk_info data structure.\n    \n    This patch makes the auditor catch and ignore DiskFileExpired\n    exceptions before handling DiskFileDeleted exceptions.\n    \n    [1] Related-Change: I3e99dc702d55a7424c6482969e03cb4afac854a4\n    \n    Change-Id: I9872b6997d09dcfd8a868c4b91b9379407283b8e\n    Closes-Bug: #1638016\n\ncommit 3b889331b30f9a02efc38bc451b2ab625caffdd1\nAuthor: Clay Gerrard <email address hidden>\nDate:   Tue Sep 20 23:44:32 2016 -0700\n\n    Make NullLogger more logger like\n    \n    eventlet.wsgi.server is adaptive to dealing with the named log\n    argument being either a file like or a log like [1], but message\n    handling is a more direct pass through if it's a log like.\n    \n    Since all we want to do is make eventlet's logging it a noop - it's\n    easy to provide either interface!\n    \n    1. https://github.com/eventlet/eventlet/blob/4d2cdc/eventlet/wsgi.py#L246\n    \n    Change-Id: I2d792176c96931eafb3f140e6653ba8b31eda429\n\ncommit 300d388825c228ae1f51cdb8abcdf4c76ec24637\nAuthor: G\u00e1bor Antal <email address hidden>\nDate:   Fri Jul 15 14:11:09 2016 +0200\n\n    Use more specific asserts in test/probe tests\n    \n    I changed asserts with more specific assert methods.\n    \n    e.g.: from assertTrue(sth == None) to assertIsNone(*) or\n    assertTrue(isinstance(inst, type)) to assertIsInstace(inst, type) or\n    assertTrue(not sth) to assertFalse(sth).\n    \n    The code gets more readable, and a better description will be shown on fail.\n    \n    Change-Id: I3768faa568e3964e726ecc48ac8cb133cb088284\n\ncommit 2a75091c58948fb664016c0e91e72acd313e4610\nAuthor: Alistair Coles <email address hidden>\nDate:   Mon Oct 17 20:38:52 2016 +0100\n\n    Make ECDiskFileReader check fragment metadata\n    \n    This patch makes the ECDiskFileReader check the validity of EC\n    fragment metadata as it reads chunks from disk and quarantine a\n    diskfile with bad metadata. This in turn means that both the object\n    auditor and a proxy GET request will cause bad EC fragments to be\n    quarantined.\n    \n    This change is motivated by bug 1631144 which may result in corrupt EC\n    fragments being written to disk but appear valid to the object auditor\n    md5 hash and content-length checks.\n    \n    NotImplemented:\n    \n     * perform metadata check when a read starts on any frag_size\n       boundary, not just at zero\n    \n    Related-Bug: #1631144\n    Closes-Bug: #1633647\n    \n    Change-Id: Ifa6a7f8aaca94c7d39f4aeb9d4fa3f59c4f6ee13\n    Co-Authored-By: Clay Gerrard <email address hidden>\n    Co-Authored-By: Kota Tsuyuzaki <email address hidden>\n\ncommit e166e19b235e1fba8e5eba5720d1c07fe32c40c1\nAuthor: Kazuhiro MIYAHARA <email address hidden>\nDate:   Thu Oct 20 14:01:14 2016 +0900\n\n    Remove duplicated 'User-Agent' header from object-updater's requests\n    \n    When Object-Server saves async-update in pickle files,\n    'User-Agent: object-server %(pid)' (the key is title style) is included\n    in the pickles. However, Object-Updater will add\n    'user-agent: object-updater %(pid)' (the key is lower case style) to the\n    pickled headers and use it to make http connection. According to RFC\n    7230, each header field consists of a case-insensitive field name,\n    therefore either of 'User-Agent' and 'user-agent' should not be included\n    in the headers.\n    \n    This patch removes old 'User-Agent' header from object-updater's\n    requests.\n    \n    Change-Id: Ia624558395584457c718b311fe80e1a8406e22ad\n    Closes-Bug:#1635114\n\ncommit 33c18c579e12474015bdd4995120e9f47e351e72\nAuthor: Ond\u0159ej Nov\u00fd <email address hidden>\nDate:   Sat Oct 29 15:00:13 2016 +0200\n\n    Remove executable flag from some test modules\n    \n    Change-Id: I36560c2b54c43d1674b007b8105200869b5f7987\n\ncommit 2bd8d050fb5dec140ad23d5db1d281049954255b\nAuthor: Christian Hugo <email address hidden>\nDate:   Sun Oct 30 12:07:29 2016 +0100\n\n    Suppress unexpected file warnings for rsync temp files\n    \n    Do not log unexpected file warning for rsync temp files when the parsing\n    of the timespamp fails.  If the file passes a regex test suppress the\n    logger waring, but still return it as an unexpected file from\n    get_ondisk_files.\n    \n    Closes-Bug: 1616504\n    \n    Change-Id: I5a5d6e24710e4880776b32edcbc07021acf77676\n\ncommit e3e457da662e92885620981a445530fbd8370604\nAuthor: Ond\u0159ej Nov\u00fd <email address hidden>\nDate:   Sun Nov 1 19:32:19 2015 +0100\n\n    Respect server type for --md5 check in swift-recon\n    \n    MD5 sum compare of server ring ignores server_type parameter\n    now. This could be confusing and this should only test\n    specified server_type, same as --replication, --validate-servers,\n    etc.\n    \n    Change-Id: I9095309c24f42aec1330757c88e7b242b2a6a865\n\ncommit d0fe922904c8016267e89c97bef16052a2c3bb7e\nAuthor: karen chan <email address hidden>\nDate:   Mon Oct 17 03:37:35 2016 -0700\n\n    Mirror X-Trans-Id to X-Openstack-Request-Id\n    \n    Many other OpenStack services use a `[X-]OpenStack-Request-Id` header\n    to return a unique identifier for the request.  Swift will now return\n    `X-Trans-Id` as well as `X-Openstack-Request-Id`.\n    \n    Change-Id: I56cd4738808b99c0a08463f83c100be51a62db05\n    Closes-Bug: #1572786\n\ncommit c91ca5335fb86b3b260d88285fe0248d502276f3\nAuthor: Tim Burke <email address hidden>\nDate:   Sat Oct 29 18:29:48 2016 +0200\n\n    Ignore Range values like \"bytes=--0\"\n    \n    This is consistent with what we already do for other\n    semantically-invalid values like \"bytes=--1\". Previously, we would\n    return a 416 Requested Range Not Satisfiable response like we do for the\n    semantically-valid-but-not-really-meaningful \"bytes=-0\"\n    \n    Change-Id: I932b42406c9a5ee7eaa6978a655e61022a957415\n\ncommit 30f672e7201e214fa625a43dcad867e5936e1cef\nAuthor: Tim Burke <email address hidden>\nDate:   Fri Oct 28 13:07:27 2016 +0200\n\n    Refactor SLO If-Match / HEAD tests\n    \n    Previously, we didn't make any assertions about the backend requests\n    but rather just verified the user-visible behavior.\n    \n    Change-Id: Iddd4b705ee9b724a4a8a88c6fbaff36cca9612cf\n\ncommit c3bc9f31ca6c99c4d54478ca7846bbfad2f26427\nAuthor: Hanxi Liu <email address hidden>\nDate:   Tue Oct 4 14:55:27 2016 +0800\n\n    Add links for more detailed overview in overview_architecture\n    \n    Change-Id: Ie1f171d0945e3f1f4daa61bc66786c01e68e9a0a\n\ncommit 99a13d93861240bfdc48730913bd6e445b645932\nAuthor: Ond\u0159ej Nov\u00fd <email address hidden>\nDate:   Wed Oct 19 20:17:00 2016 +0200\n\n    Fixed rysnc -> rsync typo\n    \n    Change-Id: I671b4206072c6e22f4ae38033502336ec32e86ad\n\ncommit 9847796f01571dc7be332707dc935efac66ee5d4\nAuthor: Ond\u0159ej Nov\u00fd <email address hidden>\nDate:   Mon Oct 17 19:46:57 2016 +0200\n\n    Set owner of drive-audit recon cache to swift user\n    \n    Fixies this problem:\n    * swift-drive-audit needs to be run by root, because only root have\n      \"umount\" permission\n    * swift-object servers typically runs as user swift\n    * if swift-drive-audit is run by root, /var/cache/swift/drive.recon is\n      owned by root, with 0o600\n    * recon middleware (inside swift-object-server) can't read this cache\n      file: swift-object: Error reading recon cache file\n    \n    This patch adds \"user\" option to drive-audit config file. Recon cache\n    is chowned to this user.\n    \n    Change-Id: Ibf20543ee690b7c5a37fabd1540fd5c0c7b638c9\n\ncommit a8b80f0727bcf760026bfa76539baec6fe706ce8\nAuthor: Thiago da Silva <email address hidden>\nDate:   Tue Oct 18 15:33:02 2016 -0400\n\n    update urls to newton\n    \n    Change-Id: I9eb8c004e100b16de906d340b54e154cf21ddaab\n    Signed-off-by: Thiago da Silva <email address hidden>\n\ncommit 5064ebb7441fdf02e2ca895a2ae81102e751d978\nAuthor: Charles Hsu <email address hidden>\nDate:   Wed Oct 12 18:02:16 2016 +0800\n\n    Make Content-Disposition support `inline; filename=...` format.\n    \n    A client can process a object contents immediately when it has knowledge,\n    if it doesn't, it stores the content to local with the filename that\n    assigned in `Content-Disposition`.\n    \n    According to https://tools.ietf.org/html/rfc2183, `filename` can be use\n    whatever `inline` or `attachment` (disposition-type) in the disposition\n    string.\n    \n    Change-Id: Iba94aedfad06c1dc8bd7be5eb3c73b33fb8d5198\n\ncommit c3bc83013f94671c48df18858c566d6cf58a89dc\nAuthor: Nandini Tata <email address hidden>\nDate:   Thu Oct 13 18:05:05 2016 +0000\n\n    SAIO install bash scripts for a novice install\n    \n    Added SAIO bash scripts as an option under developer tools. They are\n    well commented and simple to understand for a novice developer.\n    \n    Change-Id: Id1b2babe420f4d10e564256fac5a54b60659c5e5\n    Co-Authored-By: Paul Dardeau <email address hidden>\n\ncommit 3218f8b064e462d901466b04a4813e15ec96da85\nAuthor: Alistair Coles <email address hidden>\nDate:   Wed Oct 12 20:00:13 2016 +0100\n\n    Prevent ssync writing bad fragment data to diskfile\n    \n    Previously, if a reconstructor sync type job failed to provide\n    sufficient bytes from a reconstructed fragment body iterator to match\n    the content-length that the ssync sender had already sent to the ssync\n    receiver, the sender would still proceed to send the next\n    subrequest. The ssync receiver might then write the start of the next\n    subrequest to the partially complete diskfile for the previous\n    subrequest (including writing subrequest headers to that diskfile)\n    until it has received content-length bytes.\n    \n    Since a reconstructor ssync job does not send an ETag header (it\n    cannot because it does not know the ETag of a reconstructed fragment\n    until it has been sent) then the receiving object server does not\n    detect the \"bad\" data written to the fragment diskfile, and worse,\n    will label it with an ETag that matches the md5 sum of the bad\n    data. The bad fragment file will therefore appear good to the auditor.\n    \n    There is no easy way for the ssync sender to communicate a lack of\n    source data to the receiver other than by disconnecting the\n    session. So this patch adds a check in the ssync sender that the sent\n    byte count is equal to the sent Content-Length header value for each\n    subrequest, and disconnect if a mismatch is detected.\n    \n    The disconnect prevents the receiver finalizing the bad diskfile, but\n    also prevents subsequent fragments in the ssync job being sync'd until\n    the next cycle.\n    \n    Closes-Bug: #1631144\n    Co-Authored-By: Kota Tsuyuzaki <email address hidden>\n    \n    Change-Id: I54068906efdb9cd58fcdc6eae7c2163ea92afb9d\n\ncommit 77f5b201248c0684d87289540d3f94873f5c5e38\nAuthor: Christian Schwede <email address hidden>\nDate:   Fri Oct 7 12:17:08 2016 +0000\n\n    Throttle update_auditor_status calls\n    \n    If there are quite a few nearly empty partitions per disk you might see\n    some write load even if your cluster is unused. The auditor will update\n    the status file after every partition, and this might happen multiple\n    times within a second if there is not much data stored yet.\n    \n    This patch throttles updates, and will only write out an updated status\n    if the file was last updated more than a minute ago.\n    \n    Closes-Bug: 1631352\n    Change-Id: Ib61ec9cd945e6b2d28756f6ca47801674a7e6060\n\ncommit f3be45c0598fc6f2afd51e8e993fa97a61cbb454\nAuthor: zheng yin <email address hidden>\nDate:   Tue Aug 16 19:17:34 2016 +0800\n\n    Simplify container_updater test code\n    \n    This patch simplifies the container_updater unit test code by\n    refactoring the creation of the continer_updater into a helper method.\n    This method by default will use a default configuration. However\n    this configuration can be changed by passing in a dictionary of\n    configuration elements to update, for example:\n    \n        self._get_container_updater({'mount_check': 'true'})\n    \n    Change-Id: Ide211d559bf9381c520a04cd90d278d9b2beae50\n\ncommit 19102c6e7f501241f36e5e40d27ab3ba5dcc6655\nAuthor: Ond\u0159ej Nov\u00fd <email address hidden>\nDate:   Thu Aug 18 09:48:45 2016 +0200\n\n    Apply bash error handling consistently in all bash scripts\n    \n    Change-Id: I36dcff9cc2593bcfb6aebbe84b59d95c711eb3e4\n\ncommit b13b49a27caac17ae55b19f315d5ce31801c9522\nAuthor: Alistair Coles <email address hidden>\nDate:   Tue Aug 9 16:09:38 2016 +0100\n\n    EC - eliminate .durable files\n    \n    Instead of using a separate .durable file to indicate\n    the durable status of a .data file, rename the .data\n    to include a durable marker in the filename. This saves\n    one inode for every EC fragment archive.\n    \n    An EC policy PUT will, as before, first rename a temp\n    file to:\n    \n       <timestamp>#<frag_index>.data\n    \n    but now, when the object is committed, that file will be\n    renamed:\n    \n       <timestamp>#<frag_index>#d.data\n    \n    with the '#d' suffix marking the data file as durable.\n    \n    Diskfile suffix hashing returns the same result when the\n    new durable-data filename or the legacy durable file is\n    found in an object directory. A fragment archive that has\n    been created on an upgraded object server will therefore\n    appear to be in the same state, as far as the consistency\n    engine is concerned, as the same fragment archive created\n    on an older object server.\n    \n    Since legacy .durable files will still exist in deployed\n    clusters, many of the unit tests scenarios have been\n    duplicated for both new durable-data filenames and legacy\n    durable files.\n    \n    Change-Id: I6f1f62d47be0b0ac7919888c77480a636f11f607\n\ncommit f0a8af293e1d30cbed4be89a0c0bbcb7b79db6b2\nAuthor: Nicolas Helgeson <email address hidden>\nDate:   Thu Oct 6 11:06:49 2016 -0700\n\n    Update pyeclib dependency to 1.3.1\n    \n    Updated swift requirements.txt to change PyECLib version\n    so that it fixes memory leak issue.\n    \n    Change-Id: Ifc069989b96188fd7abe0d8edc6b30266783ad79\n    Partial-Bug: #1629410\n\ncommit 19426182af0064b8143ee57a29998523ad52273b\nAuthor: Nguyen Phuong An <email address hidden>\nDate:   Wed Sep 7 14:02:10 2016 +0700\n\n    [api-ref] Remove temporary block in conf.py\n    \n    The os-api-ref 1.0.0 is out. We can remove the support to older version now.\n    Reference:\n    https://github.com/openstack/senlin/commit/6d41feb58dd836d426c9b6f025846dbbf7295097\n    \n    Change-Id: I0b28cd3f6b5c393d63b9ab2b4dcd3b7b3c20f9b4\n\ncommit f62df7b80c083862c11cbef678f75cc09bb89e8f\nAuthor: Pete Zaitcev <email address hidden>\nDate:   Mon Oct 3 21:08:15 2016 -0600\n\n    Add a configurable URL base to staticweb\n    \n    This came to light because someone ran Tempest against a standard\n    installation of RDO, which helpfuly terminates SSL for Swift in\n    a pre-configured load-balancer. In such a case, staticweb has no\n    way to know what scheme to use and guesses wrong, causing Tempest\n    to fail.\n    \n    Related upstream bug:\n     https://bugs.launchpad.net/mos/+bug/1537071\n    \n    Change-Id: Ie15cf2aff4f7e6bcf68b67ae733c77bb9353587a\n    Closes-Bug: 1572011\n\ncommit 53aebba90324c0fdcb3ea61275b24db4d5a82110\nAuthor: Luong Anh Tuan <email address hidden>\nDate:   Tue Oct 4 10:06:23 2016 +0700\n\n    Fix a typo in documentation\n    \n    remove redundant 'this'\n    \n    Change-Id: I8860190d882b255a3d416de685f930d2b2c0ad17\n\ncommit 2ec4189e374d1f94009fc61c1b17d00d12f7e99b\nAuthor: Tim Burke <email address hidden>\nDate:   Mon Sep 19 17:37:47 2016 -0700\n\n    Fix when we set state in Spliterator\n    \n    Also clean up a comment and some exception text\n    \n    Change-Id: I1e7755cc0468f9a3ba96a0dd24868f09a10c3df0\n    Related-Change: I24716e3271cf3370642e3755447e717fd7d9957c\n\ncommit a3dbc139c398be7f2c7af0f843b85d4d53eb81ae\nAuthor: zheng yin <email address hidden>\nDate:   Thu Sep 29 20:24:23 2016 +0800\n\n    add assert error information\n    \n    There are the same error resp.status_int in different operators of\n    one function, then I can't point out which one returns this status_int.\n    Therefore, I assert error information.\n    \n    Change-Id: I58bcba97a9f92e43e0f8ef26b801b69a6906af41\n\ncommit ddd40a0645b00b0300d134bbd22e636529fecb43\nAuthor: zheng yin <email address hidden>\nDate:   Wed Aug 10 20:21:34 2016 +0800\n\n    Add unit test content\n    \n    It lacks of some checks in unit test case. Therefore, I add them and\n    make it completion.\n    \n    Change-Id: Id0d20158ae753d245a541fca5ac4fafeecc9790a\n\ncommit 45e4fd5f714326324e13d781673ff01666c1ab97\nAuthor: Luong Anh Tuan <email address hidden>\nDate:   Mon Oct 3 13:28:48 2016 +0700\n\n    Fix typo: remove redundant 'that'\n    \n    Change-Id: I9ed35d866ffb9faa41556c5c00f3b490d35412ab\n\ncommit 396baf4139f64c6127a01c4f3f228901a55b1c7d\nAuthor: John Dickinson <email address hidden>\nDate:   Sat Sep 3 10:18:32 2016 -0700\n\n    Update test-requirements.txt\n    \n    The testing requirements should not cause extra packaging\n    work for deployers (since these aren't required to deploy).\n    This patch brings it in line with the latest global requirements,\n    except for python-swiftclient itself (which I kept with no version\n    specifier). By being in line with global requirements, this is a\n    more accurate list with respect to how things are actually tested\n    in the gate.\n    \n    Change-Id: Iddc92d9bb135144d38c3e5aec2e95df5787e9b5b\n\ncommit 7dcfe5a7ecb3f95f4556324dea0b8519b68d68dc\nAuthor: Clay Gerrard <email address hidden>\nDate:   Fri Sep 30 12:16:58 2016 -0700\n\n    Remove unneeded line from ring.utils.dispersion_report\n    \n    This line is render inert by the condition right above it.\n    \n    The behavior/correctness is already well vetted by\n    ring.test_utils:TestUtils.test_dispersion_report\n    \n    Change-Id: I7d7a193c52d1005cecd9c70953d55e2b9755a64d\n\ncommit 9b98c89983821f709fbea3c14c264150d8613171\nAuthor: Yushiro FURUKAWA <email address hidden>\nDate:   Thu Sep 29 20:48:21 2016 +0900\n\n    Revises 'url' to 'URL' and 'json' to 'JSON'\n    \n    Change-Id: I44743fbb9bcbce3a50ed6770264ba0f4b17803d7\n\ncommit 1004509cab443a5cbb223ffc8258c45cb97ee5fb\nAuthor: Alistair Coles <email address hidden>\nDate:   Thu Sep 29 19:22:36 2016 +0100\n\n    Fix failing cross-policy-versioning functional test\n    \n    Since [1] the functional tests for cross-policy\n    object versioning fails with an error. These tests are\n    skipped in all CI test jobs because none of them have\n    more than one policy enabled. However, when running\n    tests against a system with multiple policies the tests\n    will not skip and the error is raised.\n    \n    [1] Related-Change: Ifebc1c3ce558b1df9e576a58a4100f2219dfc7e7\n    \n    Related-Bug: #1629234\n    \n    Change-Id: I48028928bc996252a31cbf3abfd2b5e67a74dc95\n\ncommit 05642d2958477354ce2807a93417524a11234639\nAuthor: zheng yin <email address hidden>\nDate:   Fri Sep 30 11:11:20 2016 +0800\n\n    fix word spelling mistake\n    \n    Change-Id: Ia7b03e52b8d6a334fc2b67c94912effe0e659941\n\ncommit 03b5e76d0942c075a0286db47bc9e0f029b1e231\nAuthor: Kota Tsuyuzaki <email address hidden>\nDate:   Mon Sep 26 05:37:08 2016 -0700\n\n    Improve functional tests and test client\n    \n    This patch includes a couple of small functional test improvement.\n    \n    A. Change swift_test_client.File.sync_metadata to follow Swift object\n    metadata semantics:\n    \n    swift_test_client.File.sync_metadata is designed to post object user\n    metadata to an object. However, prior to this patch, the\n    swift_test_client.File instance keeps the existing object metadata as\n    its member attribute and if sync_metadata is called, it sends both\n    existing metadata and incomming metadata from caller. It looks to result\n    in the odd state as if Swift keeps the existing metadata when POST\n    object requested.\n    \n    To tell the correct Swift object metadata semantics, when POST object\n    requested, the existing metadata in the stored object should be gone\n    even if no metadata is overwritten.\n    \n    i.e.\n    if POST object with 'X-Object-Meta-Key: Val' to a stored object with\n    'X-Object-Meta-foo: bar', it will result in an object with\n    'X-Object-Meta-Key' (note that X-Object-Meta-Foo will be deleted)\n    \n    The prior behavior sometimes make us confused in the reviw [1] so that,\n    this patch fixes it to send only incomming metadata if it's set.\n    \n    B. Check the response status code more strictly for ObjectVersioning case\n    \n    This patch fixes test_versioning_check_acl on both TestObjectVersioning and\n    TestObjectVersioningHistoryMode to assert the response status code\n    explisitly instead of asserting just \"ResponseError\". (e.g. 403 when trying\n    to delete object from other account)\n    \n    1: https://review.openstack.org/#/c/360933/1/test/functional/tests.py@4142\n    \n    Change-Id: Ia3e5b40f17dc0f881b695aa4be39c98b91e2bb06\n\ncommit 3ae0b80bbd91e5ec3a64657913edc25b8728efcb\nAuthor: Anh Tran <email address hidden>\nDate:   Thu Sep 29 10:09:14 2016 +0700\n\n    Remove redundant 'the'\n    \n    Change-Id: I9f6a11d714e5e9f3c0c6609465225923495aa99a\n\ncommit 52473ea39277f6b3d8e7d77564189da6b1aec7c3\nAuthor: Hanxi Liu <email address hidden>\nDate:   Wed Sep 28 10:58:30 2016 +0800\n\n    Use six.moves.urllib.parse instead of urllib\n    \n    Six urllib parse contains py3's urllib.parse and py2's urllib.\n    Replace urllib with six.moves.urllib.parse to keep compatibility.\n    \n    Change-Id: Ie67987e4ffb981c2ee70360f7fa9b3fe873c2a96\n    Closes-bug: 1280105\n\ncommit ccff3668116bd6107003e4f774ab136bb933eb77\nAuthor: Mahati Chamarthy <email address hidden>\nDate:   Mon Jul 25 20:10:44 2016 +0530\n\n    Update diskfile docstring for get_ondisk_files\n    \n    The return value for diskfile.BaseDiskFileManager.get_ondisk_files is\n    a bit more rich than the current doc string describes; try to fill in\n    some gaps.\n    \n    Co-Author: Alistair Coles <email address hidden>\n    \n    Change-Id: Ief10644825ead124e58f3da5693bbdc1c6dc31ed\n\ncommit 2f880f04486ea1b1e15e8794707a7b61ae57d965\nAuthor: Nam Nguyen Hoai <email address hidden>\nDate:   Wed Sep 28 15:53:08 2016 +0700\n\n    Fix typo in docstring\n    \n    This patch replaces type \"tuble\" to \"tuple\".\n    \n    Change-Id: I0a54f10df0f48fab9553e6438735e42ae1bb5b3b\n\ncommit a09e42732af4fec0a046e1ee402559e1a9e55487\nAuthor: gecong1973 <email address hidden>\nDate:   Tue Sep 27 17:14:13 2016 +0800\n\n    Fix a typo in proxy-server.conf-sample\n    \n    TrivialFix\n    \n    Change-Id: If650e25979a9488c93fe93621c905003946c27e5\n\ncommit 7d2f8e59ef801092878c92d752316bc74ab8eba8\nAuthor: Ha Van Tu <email address hidden>\nDate:   Tue Sep 27 16:13:05 2016 +0700\n\n    Fix typo in docstring\n    \n    This patch replace typo \"contrain\" by \"constrain\".\n    \n    Change-Id: If91550c4d55f4d072be59470b7f893d56ebd30ca\n\ncommit 31c92ac6dbaf843ec7aa3ed8dfa973356096ff5b\nAuthor: Ha Van Tu <email address hidden>\nDate:   Tue Sep 27 11:49:35 2016 +0700\n\n    Update link reference in Swift document\n    \n    The reference link for REST API [1] is out of date. We should change\n    it to the new one [2].\n    \n    [1]:http://developer.openstack.org/api-ref-objectstorage-v1.html\n    [2]:http://developer.openstack.org/api-ref/object-storage/\n    \n    Change-Id: Ib3e5a78ec2df0591f862671272f51ace5ac65ca7\n\ncommit 0c8c764547c78df0b00354bb06c5fb27d381647f\nAuthor: Kota Tsuyuzaki <email address hidden>\nDate:   Fri Aug 26 00:15:45 2016 -0700\n\n    Add functional tests for new versioned_write mode\n    \n    This patch is follow up for [1] and [2] to add new functional\n    tests for versioned_writes middlware 'history' mode.\n    (i.e. using X-History-Location header to a container).\n    \n    The new test class, TestObjectHistoryModeVersioning, will use obvious\n    setting the mode via new X-History-Location header, since the change [2],\n    the setting X-Versions-Mode header added since [1] for incomming request has\n    been deprecated. Hence, since [2], the syntax for stack mode is back to\n    be same with older Swift than [1] so that the only thing we need now is\n    just adding a test suite for the new X-History-location.\n    \n    It means the API has been changing like:\n    ---------------\n    For stack mode:\n    ---------------\n    Older than [1]:\n    X-Versions-Location\n    \n    [1]~[2]:\n    X-Vesions-Location (and X-Versions-Mode: 'stack' for obvious)\n    \n    Newer than [2]:\n    X-Vesions-Location\n    \n    -----------------\n    For history mode:\n    -----------------\n    Older than [1]:\n    (Not supported)\n    \n    [1]~[2]:\n    X-Vesions-Location and X-Versions-Mode: 'history'\n    \n    Newer than [2]:\n    X-History-Location\n    \n    Note that this functional tests work on newer swift than [2].\n    \n    And then, this patch also sets allow_versioned_writes=True\n    for in-process testing (the container server allow_versions\n    option was already set, so this is just enabling in the middleware\n    too). That means that in-process functional tests (such as run by\n    the tox envs func-in-process-*) because history mode requires the\n    middleware allow_versioned_writes option to be explicity set to True.\n    \n    1: https://review.openstack.org/#/c/214922/\n    2: https://review.openstack.org/#/c/373537/\n    \n    Co-Authored-By: Alistair Coles <email address hidden>\n    \n    Related-Change: I555dc17fefd0aa9ade681aa156da24e018ebe74b\n    Related-Change: Icfd0f481d4e40dd5375c737190aea7ee8dbc3bf9\n    Change-Id: Ifebc1c3ce558b1df9e576a58a4100f2219dfc7e7\n\ncommit 6bf63d85a7c7c5e444a20176a6c51a7f3941c93f\nAuthor: John Dickinson <email address hidden>\nDate:   Thu Sep 22 17:09:08 2016 -0400\n\n    authors/changelog updates for 2.10.0\n    \n    Added reno releasenotes file.\n    \n    Change-Id: Ia14875b992aabaf452242b74e9358cfd884adbcc\n\ncommit f07dfa202d98c0e9500b71a0040db32183a8106e\nAuthor: zheng yin <email address hidden>\nDate:   Fri Sep 23 18:07:28 2016 +0800\n\n    Add test_PUT/DELETE_bad_timestamp in obj/test_server\n    \n    It has valid_timestamp() to check timestamps in /POST/PUT/DELETE methods.\n    It has test_POST_bad_timestamps in Post, but it has no test_PUT/DELETE_bad_timestamps\n    int PUT/DELETE. Therefore,I add them\n    \n    Change-Id: Ib531f3b7819c1c8dc69a7b51d990581bf1e24dab\n\ncommit 3da65be4b3b47728833eb6976a33cd420c887aa8\nAuthor: Alistair Coles <email address hidden>\nDate:   Thu Sep 22 16:56:36 2016 +0100\n\n    Cleanup tests for auditor invalidating hashes\n    \n    Cleans up some auditor tests added in the Related-Change.\n    \n    Make auditor NOT call invalidate_hash for a reclaimable\n    tombstone in a zero bytes file process, so that\n    invalidate_hash is only called once per reclaimable\n    tombstone per auditor cycle.\n    \n    Previously each execution of 'swift-init object-auditor once'\n    would result in two identical entries being appended to\n    hashes.invalid for each reclaimable tombstone. With this change\n    that unnecessary duplication is removed.\n    \n    Related-Change: I3e99dc702d55a7424c6482969e03cb4afac854a4\n    Change-Id: I5dfaa8d74c07ca8a494c29159c1a2bed39499613\n\ncommit bfaa8e05834d4d3c78069af22387427c12e0e496\nAuthor: Clay Gerrard <email address hidden>\nDate:   Wed Sep 21 17:33:30 2016 -0700\n\n    Fix ChunkWriteError when running unittests\n    \n    I don't think this is a real bug - just that the mocked iter wasn't\n    closing it subiters like the real iter does.\n    \n    Change-Id: I44c8159f9eea8737bc86b6c7eb59a512e57e86c1\n\ncommit 19a684ddedf9259bd389267071f19c1c65b2e836\nAuthor: Luong Anh Tuan <email address hidden>\nDate:   Mon Sep 12 15:49:38 2016 +0700\n\n    Fix using filter() to meet python2,3\n    \n    As mentioned in link[1], if we need filter on python3,\n    Raplace filter(lambda obj: test(obj), data) with:\n    [obj for obj in data if test(obj)].\n    \n    [1] https://wiki.openstack.org/wiki/Python3\n    \n    Change-Id: Ia1ea2ec89e4beb957a4cb358b0d0cef970f23e0a\n\ncommit 60a2fe0ba8e59f4abbb5e9c5a9cd093818d5b26c\nAuthor: Tim Burke <email address hidden>\nDate:   Tue Sep 20 13:54:55 2016 -0700\n\n    Use separate headers for versioned_writes' stack and history modes\n    \n    Now, instead of saying\n    \n       X-Versions-Location: <container>\n       X-Versions-Mode: history\n    \n    clients should just say\n    \n       X-History-Location: <container>\n    \n    Since we've never had a release featuring a user-settable\n    X-Versions-Mode header, support may be dropped and that is now ignored.\n    \n    Change-Id: Icfd0f481d4e40dd5375c737190aea7ee8dbc3bf9\n\ncommit 81d4673674febdbe0bba6e27a6d24739456eb3c4\nAuthor: Mahati Chamarthy <email address hidden>\nDate:   Mon Jul 25 20:10:44 2016 +0530\n\n    Delete old tombstones\n    \n    - Call invalidate_hash in auditor for reclaimable tombstones\n    - assert changed auditor behavior with a unit test\n    - driveby test: assert get_hashes behavior with a unit test\n    \n    Co-Authored-By: Pete Zaitcev <email address hidden>\n    Co-Authored-By: Kota Tsuyuzaki <email address hidden>\n    Closes-Bug: #1301728\n    Change-Id: I3e99dc702d55a7424c6482969e03cb4afac854a4\n\ncommit 18bb99971f1a793dc75b6b3cb393d5503be43575\nAuthor: Alistair Coles <email address hidden>\nDate:   Mon Sep 19 16:06:18 2016 +0100\n\n    Add more comment to authtoken sample options\n    \n    Prior to the Mitaka release the install guides showed\n    services (including Swift) being in a default Keystone\n    domain which existed by default and has id=default. This\n    domain id is reflected in the proxy-server.conf-sample\n    authtoken options and also shown in man page and auth docs.\n    \n    The Mitaka install guide shows a domain with *name* default\n    being created, and having a random UUID assigned, in which\n    services are created. This has caused confusion (see\n    discussion on linked bug report).\n    \n    This patch does not change the sample options but does\n    add to the comments in order to emphasize that a user\n    may need to alter the options to match their Keystone\n    configuration.\n    \n    Change-Id: I17bfcdbd983402eeb561bb704b8b1f1e27547c7d\n    Partial-Bug: #1604674\n\ncommit 4f033a61b58d94bb63c14aa4a92949bf2c2793f0\nAuthor: Clay Gerrard <email address hidden>\nDate:   Wed Sep 21 00:28:39 2016 -0700\n\n    Fix unstable json.dumps ordering in obj-server test\n    \n    test_GET_HEAD_with_fragment_preferences seemed to fail on ocassion on\n    my machine; the test seemed to be assuming the order of dictionary\n    keys in json output sent in headers; the fix was convert back to a\n    dictionary when making the assertion on the context of the json.\n    \n    Change-Id: I1ea1b734c2a9fb12b8f59262bb1229421803e48e\n    Closes-Bug: #1625956\n\ncommit cbfa79a159aa741b2982e7c009241217dde45f92\nAuthor: Alistair Coles <email address hidden>\nDate:   Tue Sep 6 16:36:36 2016 +0100\n\n    api-ref: fix some header definitions\n    \n    Clarify Content-Type header definition for listings.\n    \n    Distinguish between request and response definitions for\n    X-Account-Meta-Temp-URL-Key* headers.\n    \n    Insert X-Container-Meta-Quota-* headers missing from some\n    request/response definitions.\n    \n    Improve X-Container-Meta-Access-Control-Expose-Headers\n    parameter formatting.\n    \n    Distinguish between request and response definitions for\n    X-Container-Meta-Temp-URL-Key* headers.\n    \n    Co-Authored-By: Christian Schwede <email address hidden>\n    Change-Id: I8fc7610395973b520aa9ddd72c94e1eb75f602cd\n    Related-Change: I315b4e550b7d10880fbc00fce9311127ba609c2d\n\ncommit d40ff7098b3dd13b5ea846b86b9e8461ac1875b1\nAuthor: Tim Burke <email address hidden>\nDate:   Fri Sep 16 17:21:00 2016 -0700\n\n    Clean up api-ref examples\n    \n    If we're going to talk about replacing an object, we should use the\n    same object name as the previous example.\n    \n    Including a non-zero content-length on PUT but not providing a body\n    will timeout.\n    \n    Not including the '-' in '-H' will make curl complain:\n    \n       Rebuilt URL to: H/\n       * Could not resolve host: H\n       * Closing connection 1\n    \n    201 Created responses have content-length of zero, not 116.\n    \n    Change-Id: Ifd878559ee4036e4893221c7968f53021f38e236\n\ncommit 9a81b9537f9b1e2d8aff7e237095b15f8cedabf3\nAuthor: Ond\u0159ej Nov\u00fd <email address hidden>\nDate:   Sat Sep 17 15:42:52 2016 +0200\n\n    Fixed cut and pasted paragraph from commit message in manpage\n    \n    Change-Id: Iab839a917e407ce8119f0c6162751f11136cbf5b\n\ncommit 5ec9a62f4db57eb6ae86704bb987a83a8b0c6faa\nAuthor: Alistair Coles <email address hidden>\nDate:   Tue Sep 6 16:24:13 2016 +0100\n\n    api-ref: clean up account listing examples\n    \n    Move the account listing sample responses to follow the sample\n    requests, and to precede the request/response parameter definitions to\n    be consistent with other parts of the doc.\n    \n    Related-Change: I315b4e550b7d10880fbc00fce9311127ba609c2d\n    \n    Change-Id: Ia20acacd238db4a423b8cd89af1658222b4c5828\n\ncommit 2355771d4bc87d003a7702405c0406363e0aa18b\nAuthor: Alistair Coles <email address hidden>\nDate:   Thu Sep 8 16:41:26 2016 +0100\n\n    api-ref: Move repeated paragraph to an include file\n    \n    Move repeated test re metadata header syntax to an include\n    file and make it be rendered as a note.\n    \n    Also make already included text about metadata header value\n    encoding be a note.\n    \n    Change-Id: I4795836587492954ad24dd5baaa5d668746d6040\n\ncommit bb24695d04088c9032188285b890db27893e2e9b\nAuthor: npraveen35 <email address hidden>\nDate:   Sat Sep 17 20:48:00 2016 +0530\n\n    updated output for swift stat\n    \n    Change-Id: Iff30acb88124e6116803bb79d32d1fc8cbb2d0ce\n    Closes-Bug: #1622138\n\ncommit d0144962f64bbe301c2e50425631efa839e1ebd4\nAuthor: Tim Burke <email address hidden>\nDate:   Fri Aug 5 16:19:30 2016 -0700\n\n    Include object sysmeta in POST responses\n    \n    This is *only* sysmeta, to ensure we neither change the semantics of the\n    response (which could happen if we included allowed_headers) nor reveal\n    previously-written metadata to write-only clients (which could happen if\n    we ever get updateable object metadata and sent back user meta).\n    \n    We could conceivably send back transient sysmeta, though it seems\n    better to wait for a use-case that demands it.\n    \n    Change-Id: I04fe0b36b85e546b5379bed12089ffd1bce01fcf\n    Co-Authored-By: Thiago da Silva <email address hidden>\n\ncommit a741998bff925360e2d6a72b5ab53c38779f170a\nAuthor: Tim Burke <email address hidden>\nDate:   Fri Sep 16 13:31:35 2016 -0700\n\n    Turn on F812 check\n    \n       F812 list comprehension redefines <variable> from line ...\n    \n    While the current violations were benign, this sort of code can easily\n    lead to subtle bugs. Seems worth checking, especially given how cheap it\n    is to bring existing code in line with it.\n    \n    Change-Id: Ibdcf9f93b85a1f1411198001df6bdbfa8f92d114\n\ncommit 70e3cf15bf76b23c5661da8bf301ec7f054a492c\nAuthor: John Dickinson <email address hidden>\nDate:   Fri Sep 16 13:12:51 2016 -0700\n\n    remove comment saying we ignore H233. we actually check it\n    \n    Change-Id: Ia78fbb32aa6f45aa6578734dc43f3262e717bab8\n\ncommit b587d1606c5bd524efc473182f6048580fae33c8\nAuthor: Travis McPeak <email address hidden>\nDate:   Fri Sep 2 09:52:17 2016 -0700\n\n    Updating Bandit config file\n    \n    This commit updates the Swift Bandit file to the new style\n    introduced in Bandit 1.0.  In response to the struggle with\n    getting a Bandit config file working and kept up to date we\n    introduced a simplified version in Bandit 1.0.\n    \n    This commit updates Swift's bandit.yaml to use the new version.\n    \n    Change-Id: Ida5dd08f4ea72a377346f2159caeb2f3741d4980\n\ncommit 44a861787a60346aded8be2a54ef4e16accccbb6\nAuthor: Alistair Coles <email address hidden>\nDate:   Mon Oct 5 17:40:06 2015 +0100\n\n    Enable object server to return non-durable data\n    \n    This patch improves EC GET response handling:\n    \n    - The proxy no longer requires all object servers to have a\n      durable file for the fragment archive that they return in\n      response to a GET. The proxy will now be satisfied if just\n      one object server has a durable file at the same timestamp\n      as fragments from other object servers.\n    \n      This means that the proxy can now successfully GET an\n      object that had missing durable files when it was PUT.\n    \n    - The proxy will now ensure that it has a quorum of *unique*\n      fragment indexes from object servers before considering a\n      GET to be successful.\n    \n    - The proxy is now able to fetch multiple fragment archives\n      having different indexes from the same node. This enables\n      the proxy to successfully GET an object that has some\n      fragments that have landed on the same node, for example\n      after a rebalance.\n    \n    This new behavior is facilitated by an exchange of new\n    headers on a GET request and response between the proxy and\n    object servers.\n    \n    An object server now includes with a GET (or HEAD) response:\n    \n    - X-Backend-Fragments: the value of this describes all\n      fragment archive indexes that the server has for the\n      object by encoding a map of the form: timestamp -> <list\n      of fragment indexes>\n    \n    - X-Backend-Durable-Timestamp: the value of this is the\n      internal form of the timestamp of the newest durable file\n      that was found, if any.\n    \n    - X-Backend-Data-Timestamp: the value of this is the\n      internal form of the timestamp of the data file that was\n      used to construct the diskfile.\n    \n    A proxy server now includes with a GET request:\n    \n    - X-Backend-Fragment-Preferences: the value of this\n      describes the proxy's current preference with respect to\n      those fragments that it would have object servers\n      return. It encodes a list of timestamp, and for each\n      timestamp a list of fragment indexes that the proxy does\n      NOT require (because it already has them).\n    \n      The presence of a X-Backend-Fragment-Preferences header\n      (even one with an empty list as its value) will cause the\n      object server to search for the most appropriate fragment\n      to return, disregarding the existence or not of any\n      durable file. The object server assumes that the proxy\n      knows best.\n    \n    Closes-Bug: 1469094\n    Closes-Bug: 1484598\n    \n    Change-Id: I2310981fd1c4622ff5d1a739cbcc59637ffe3fc3\n    Co-Authored-By: Paul Luse <email address hidden>\n    Co-Authored-By: Clay Gerrard <email address hidden>\n\ncommit acb8971c765fbc64e55f37923e8b16c0126598ac\nAuthor: Ha Van Tu <email address hidden>\nDate:   Thu Sep 15 14:31:55 2016 +0700\n\n    Update link reference\n    \n    This patch update the outdated link reference inside the doc.\n    \n    Change-Id: I9c5aabe869226489f361ff637e9dec731bbc3d7d\n\ncommit d062af836ce8a302aec1c43837289236289cefa6\nAuthor: Clay Gerrard <email address hidden>\nDate:   Wed Sep 14 10:12:38 2016 -0700\n\n    DRY out probe.common\n    \n    Specifically to facilitate the reuse of the retry check server\n    function to fill in the creds for the test2 account which is required\n    for probetests after the related change.\n    \n    Change-Id: I9729faa4c8c8d6d65a481bc2ea3f0566d511034c\n    Related-Change: I8d503419b7996721a671ed6b2795224775a7d8c6\n\ncommit f679ed0cc8b21e8b71d3aacc34c2a22352c4c850\nAuthor: Alistair Coles <email address hidden>\nDate:   Thu Jul 28 18:41:08 2016 +0100\n\n    Make container sync copy SLO manifests\n    \n    Currently the container sync daemon fails to copy\n    an SLO manifest, and the error will stall progress\n    of the sync process on that container. There are\n    several reasons why the sync of an SLO manifest\n    may fail:\n    \n    1. The GET of the manifest from the source\n       container returns an X-Static-Large-Object header\n       that is not allowed to be included with a PUT\n       to the destination container.\n    \n    2. The format of the manifest object that is read\n       from the source is not in the syntax required\n       for a SLO manifest PUT.\n    \n    3. Assuming 2 were fixed, the PUT of the manifest\n       includes an ETag header which will not match the\n       md5 of the manifest generated by the receiving\n       proxy's SLO middleware.\n    \n    4. If the manifest is being synced to a different\n       account and/or cluster, then the SLO segments may\n       not have been synced and so the validation of the\n       PUT manifest will fail.\n    \n    This patch addresses all of these obstacles by\n    enabling the destination container-sync middleware to\n    cause the SLO middleware to be bypassed by setting a\n    swift.slo_override flag in the request environ. This\n    flag is only set for request that have been validated\n    as originating from a container sync peer.\n    \n    This is justifed by noting that a SLO manifest PUT from\n    a container sync peer can be assumed to have valid syntax\n    because it was already been validated when written to\n    the source container.\n    \n    Furthermore, we must allow SLO manifests to be synced\n    without requiring the semantic of their content to be\n    re-validated because we have no way to enforce or check\n    that segments have been synced prior to the manifest, nor\n    to check that the semantic of the manifest is still valid\n    at the source.\n    \n    This does mean that GETs to synced SLO manifests may fail\n    if segments have not been synced. This is however\n    consistent with the expectation for synced DLO manifests\n    and indeed for the source SLO manifest if segments have\n    been deleted since it was written.\n    \n    Co-Authored-By: Oshrit Feder <email address hidden>\n    Change-Id: I8d503419b7996721a671ed6b2795224775a7d8c6\n    Closes-Bug: #1605597\n\ncommit 9ce596a5a623348dee7ee5efb6bb2af16d8add97\nAuthor: Donagh McCabe <email address hidden>\nDate:   Fri Aug 12 15:52:55 2016 +0100\n\n    Corrections for the API specifications in api-ref\n    \n    Fixes a number of technical issues with the api-ref section\n    including:\n    \n    - Added missing headers\n    - The header descriptions were made specific to whether they\n      are used in requests or responses and the verb in question\n      (example: Content-Length in object HEAD is the object size,\n      not the response body length).\n    - Added references to API features such as bulk delete.\n    - Many typographical fixes (e.g., spaces in the middle\n      of header names)\n    - Restored xml and json account/container listing\n      examples.\n    \n    The following areas were not updated and it is proposed\n    to defer them to a subsequent update. This is because\n    I don't have time or their merit is debatable:\n    \n    - ACLs (as used in a Keystone context) are not\n      described.\n    - Account create/delete is not described.\n    - I left List Endpoints as-is.\n    \n    Change-Id: I315b4e550b7d10880fbc00fce9311127ba609c2d\n\ncommit 2aa5811c7fdf86df302f5ce8b0413bf51e86e7ab\nAuthor: Clay Gerrard <email address hidden>\nDate:   Tue Sep 13 15:10:04 2016 -0700\n\n    fix string formatting in manager\n    \n    Change-Id: I0d5c351735bdb6249dd9ec3e0c8b7ebe709feea6\n\ncommit f35829c291277a997c45185cdfe0b701ec725374\nAuthor: Tim Burke <email address hidden>\nDate:   Mon Sep 12 15:02:38 2016 -0700\n\n    Bring \"egregious range request\" comment in line with reality\n    \n    With MAX_RANGES pulled out as a constant, developers are likely to\n    just trust the comment rather than go verify the value.\n    \n    Change-Id: I47fbd4790492b272d53ee07fe5bc87170ce2c72b\n    Releated-Change: I4dcedcaae6c3deada06a0223479e611094d57234\n\ncommit 1f690df60c0ce7b627c4ebceaecaa5370ff10042\nAuthor: Luong Anh Tuan <email address hidden>\nDate:   Mon Sep 12 15:01:29 2016 +0700\n\n    Use ConfigParser instead of SafeConfigParser\n    \n    SafeConfigParser supports interpolation on top of ConfigParser in\n    Python 2, and SafeConfigParser is deprecated in Python 3.2 and log\n    warning like \" DeprecationWarning: The SafeConfigParser class has\n    been renamed to ConfigParser in Python 3.2. This alias will be removed\n    in future versions. Use ConfigParser directly instead.\" So we can use\n    ConfigParser if we don't need interpolation.\n    \n    Change-Id: I7e399b3cb90ded909e0d777a4d10c44f1e9299da\n    Closes-Bug: #1618666\n\ncommit 3f2a4b2d89d66daa64cd3cf9bf31efd25702a0a9\nAuthor: zheng yin <email address hidden>\nDate:   Fri Sep 9 11:13:15 2016 +0800\n\n    Add test_pop in the test_header_key_dict\n    \n    There is a pop() function in the header_key_dict, but it has no\n    test_pop in the test_header_key_dict. Therefore, I add it.\n    \n    Change-Id: I97bf9729fae3f044bcc69014549137f45ecbe91b\n\ncommit f285cafaa7ffa9bdf3b0d93d5dd00038ed38d70b\nAuthor: zheng yin <email address hidden>\nDate:   Fri Sep 9 16:41:22 2016 +0800\n\n    delete TODO in test_manager\n    \n    After test_shutdown,every method has its test case. Therefore, it is\n    not necessary to add more tests, then I remove TODO.\n    \n    Change-Id: I23c1344bb18a83b154f890be0baa12799db045f8\n\ncommit 51925e5e3496c725487c30132976c9e96732e17b\nAuthor: Nandini Tata <email address hidden>\nDate:   Tue Aug 9 20:34:55 2016 +0000\n\n    Add man page for swift.conf\n    \n    Added man page for swift.conf\n    \n    Change-Id: I88235ed414dfc34cb46f2fea014f1e721962885a\n    Closes-Bug: 1607027\n\ncommit 0900a2c2447eb5a6cc8b105b4331a638959dba5d\nAuthor: Timur Alperovich <email address hidden>\nDate:   Tue Sep 6 17:26:40 2016 -0700\n\n    Fix error handling in proxy/controllers/base.py.\n    \n    There are a few issues going on in the\n    controllers/base.py:_get_response_parts_iter(). One is that the\n    \"raise\" statement that attempts to re-raise the GeneratorExit, may\n    re-raise ValueError if that was the last exception caught.\n    \n    Secondly, the range may not actually be set in the backend_headers\n    (need to investigate further, as that could actually be faulty tests,\n    since learn_size_from_content_range should always set it). The patch\n    changes the Range construction to throw a ValueError if None is passed\n    in that case.\n    \n    Lastly, the range may be only half-defined, e.g. bytes=0-. In that\n    case, the check of how many bytes are expected vs how many bytes have\n    been sent does not make sense.\n    \n    Change-Id: Ida5adf3d33c736240b2c4bae5510b5289f03dee2\n\ncommit ba610e0d1158c6a5e1a116a85c6c3026ee41fc8e\nAuthor: Thiago da Silva <email address hidden>\nDate:   Wed Sep 7 13:32:06 2016 -0400\n\n    add missing partition directory to example\n    \n    Change-Id: I2e806432d7d49e8fa940598cc6be680a362dec8b\n\ncommit ee11955d3e0f46b47ba1f3aef3452f865ba851be\nAuthor: Alistair Coles <email address hidden>\nDate:   Wed Sep 7 17:54:36 2016 +0100\n\n    Add troubleshooting tips to keystoneauth docs\n    \n    Documents two common mistakes that are made when\n    deploying Swift with Keystone auth.\n    \n    Change-Id: Id81af09d1d21b5c8a3871bf0e20fe6c1448d0ad9\n\ncommit e28ff0629d72d7d2abb06f99d6a2a93a0e37d732\nAuthor: Mohit Motiani <email address hidden>\nDate:   Tue Aug 2 23:16:43 2016 +0000\n\n    Add regions in ring-builder.py\n    \n    swift-ring-builder CLI usage does not specify about regions.\n    This patch adds a description about it. It also adds\n    a brief description of the flags (report parameter).\n    \n    Change-Id: If51a15c0904857abf62636b90ac0c7ed63300871\n    Closes-Bug: #1583551\n\ncommit eea574a78adc54242a97ac3b5ed0b8deeea754bf\nAuthor: Lokesh S <email address hidden>\nDate:   Thu Jul 28 12:10:12 2016 +0000\n\n    Py3: Fixes eventlet ImportError: No module named urllib2\n    \n    Python3:\n    from eventlet.green.urllib import request\n    Python2:\n    from eventlet.green import urllib2\n    \n    Change-Id: Ib38865e0b6a8f076b8a54de4fae221d49f315c91\n\ncommit dd5afdb6863d8e8e1a1cdfcd2ce5fe06bc45bc95\nAuthor: zheng yin <email address hidden>\nDate:   Fri Jul 29 12:12:55 2016 +0800\n\n    simple log information\n    \n    When it has the same log information, we can use a function to simple\n    it, then it also improve code readability.\n    \n    Change-Id: I5bb901099dcc832fc0651b34707901849abb0c34\n\ncommit 1cfa335a354040bdba22f20aa6ca783428f1b7b1\nAuthor: Mohit Motiani <email address hidden>\nDate:   Tue Sep 6 20:02:33 2016 +0000\n\n    Fixed Typo in proxy/controller/obj.py\n    \n    Change-Id: I2d7217c618371dce2dfa8ed273dd5e10cbeabe3f\n\ncommit 1751db201b4204ead8f1b91a8d3a388d54822610\nAuthor: Alistair Coles <email address hidden>\nDate:   Thu Jun 2 16:09:18 2016 +0100\n\n    Add test for copy using a Range header\n    \n    Since COPY allows a copy of a ranged GET, add some more test\n    coverage for that in both unit and functional tests.\n    \n    Drive-by fix to use better test assertion methods.\n    \n    Co-Authored-By: Thiago da Silva <email address hidden>\n    \n    Change-Id: I5cb202386df0862f953f7388107c4d3466e2e46c\n\ncommit ba912a10b0342c5ed25e67cbd5eedef5bda287ba\nAuthor: zheng yin <email address hidden>\nDate:   Tue Sep 6 11:55:41 2016 +0800\n\n    Add test_valid_api_version in the test_constraints\n    \n    There is a valid_api_version function in the constraints,but it has no\n    tests in the test_constraints. Therefore, I add test_valid_api_version.\n    \n    Change-Id: Ic8dbe9c00f762513ec9a4ffc0b77e4e5d3e5d47b\n\ncommit 8b3c04a4aa7ccd554fb6460ec2222b0437514f4e\nAuthor: Victor Stinner <email address hidden>\nDate:   Mon Aug 22 10:44:43 2016 +0200\n\n    py3: Port test_splice to Python 3\n    \n    * add NamedTemporaryFile() wrapper\n    * use byte strings for binary data in tests\n    * tox.ini: run test_splice on Python 3.4 and Python 3.5\n    \n    Change-Id: I042d739fbf29433733bf0c2154749bc90b210416\n\ncommit 0f761852f8aeca0081405323d1dc23ae08f35fc4\nAuthor: Ond\u0159ej Nov\u00fd <email address hidden>\nDate:   Sat Aug 13 17:54:24 2016 +0200\n\n    Added missing manpages for all cli tools\n    \n    Change-Id: Ief3cf510d426a4eeefc8bb8d12f6fa9c8343f55b\n    Closes-Bug: #1607005\n    Closes-Bug: #1607007\n    Closes-Bug: #1607010\n    Closes-Bug: #1607012\n    Closes-Bug: #1607014\n    Closes-Bug: #1607016\n    Closes-Bug: #1607019\n    Closes-Bug: #1607021\n    Closes-Bug: #1607023\n    Closes-Bug: #1599923\n\ncommit 350f10bf3be9ce6c9eec4b3046afc9a05cf08454\nAuthor: Christian Schwede <email address hidden>\nDate:   Thu Jul 28 08:32:17 2016 +0000\n\n    Deprecate swift-temp-url\n    \n    python-swiftclient includes an improved and tested method to generate\n    tempurls. The command syntax is essentially the same, therefore we can\n    deprecate this one by importing that method.\n    \n    python-swiftclient is not added as a requirement; if the import fails\n    due to a missing swiftclient module it will just raise a deprecation\n    warning.\n    \n    Closes-Bug: #1607523\n    Closes-Bug: #1607519\n    \n    Change-Id: Ifa8bf636f20f82db4845b02d1b58699edaa39356\n\ncommit 84b264baa8d81ceafa1ed6beb840c6fb80b91cc3\nAuthor: Kazuhiro MIYAHARA <email address hidden>\nDate:   Thu Sep 1 14:59:56 2016 +0900\n\n    Fix api reference of object GET request with Range parameter\n    \n    In RFC 7233, response body size of range requests with parameter\n    'bytes=N-M' is (M - N + 1). And response of object GET request with\n    range parameter in current Swift implementation is according to the\n    RFC.  However, in current api reference explains that response body\n    size of object GET request with 'Range: bytes=10-15' is five\n    ( != 15 - 10 + 1).\n    This patch fixes the api reference explanation.\n    \n    Change-Id: I8371864f8e5adb42c1e56b7ea26c556ea1252728\n\ncommit 1883c1ec23b6dfa7a266ed36f905fbd0501cc87c\nAuthor: Tim Burke <email address hidden>\nDate:   Tue Apr 26 09:15:29 2016 -0500\n\n    Make get_info requests useful with recheck_*_existence == 0\n    \n    Before, when recheck_account_existence or recheck_container_existence\n    was set to zero, get_info requests for accounts or containers wouldn't\n    populate the env cache for the current request, so it wouldn't return\n    the data *it just got*.\n    \n    Now, we'll still populate the env cache and memcache, as a cache time of\n    zero means \"keep it indefinitely\". See the memcache docs at\n    https://github.com/memcached/memcached/blob/1.4.25/doc/protocol.txt#L163\n    \n    Change-Id: Ia648263073bc88e35216cafb76821b7ce02c1d03\n    Closes-Bug: 1224734\n\ncommit a4279112b3f3320f9b305051965a676df9dbce3e\nAuthor: Kazuhiro MIYAHARA <email address hidden>\nDate:   Thu Sep 1 21:24:52 2016 +0900\n\n    Remove meaningless lines in reconciler unit test\n    \n    There are two lines in which lists are sorted in test_reconciler.py\n    However, the values in the lists will be same, then the two lines are\n    meaningless.\n    This patch removes the two lines from test_reconciler.py\n    \n    Change-Id: I7d72a7a4e9a27d87cd78c96f79d1b340b2ad23de\n\ncommit c9488027cb6db6aa3116fbcb9a9a8f9d294d52dc\nAuthor: Christian Schwede <email address hidden>\nDate:   Thu Sep 1 11:42:09 2016 +0000\n\n    Make versioned_writes docstring more precise\n    \n    Add a note to the docstring that it is required to add a config section\n    to the proxy-server.conf and an entry to the pipeline to support history\n    mode.\n    \n    Closes-Bug: 1619261\n    Change-Id: I888485ab4ece6f47db081a4d58c1aab24ce72a8a\n\ncommit 2a58b1efa4b70505bfa01b3fe410a25ea2fa799b\nAuthor: Christian Schwede <email address hidden>\nDate:   Wed Aug 31 12:49:07 2016 +0000\n\n    More Test[Account|Container]Controller test updates\n    \n    Added another test that tries to replicate using an unknown sync method,\n    with and without an existing DB file.\n    \n    Change-Id: I09a86615f012e4341268ea30cbc06099528f896b\n\ncommit ff52bb1b1c04cdad59f784f8222a4853e7a8304e\nAuthor: Kota Tsuyuzaki <email address hidden>\nDate:   Wed Aug 31 23:01:05 2016 -0700\n\n    Avoid warnings for versioned_writes docs\n    \n    This includes a couple of fixes as follows:\n    - Add one more \"-\" for mode example titles to adjust the title length\n      (it seems needed to use verbatim expression)\n    - Remove unnecessary back slash\n    \n    Change-Id: If41bba040ea31f2354642b2ec32bc92ece4f0971\n\ncommit 2825909d2553527283ac57de7bd9a842988e6624\nAuthor: Timur Alperovich <email address hidden>\nDate:   Tue Aug 30 17:02:21 2016 -0700\n\n    Silence \"Client disconnected\" warnings on reads.\n    \n    When a client fully reads the content and closes the iterator, the\n    Client disconnected warning is still generated, as there is no logic\n    to check whether the GeneratorExit exception was raised after the\n    client received all of the data. This can be observed when doing\n    large object reads or using an InternalClient and reading exactly\n    Content-Length bytes from the returned app_iter body.\n    \n    The patch amends the behavior to hoist how many bytes client read from\n    a given part and only raise an exception if there are more parts left\n    or a part was not fully read.\n    \n    Lastly, the GeneratorExit exception is no longer swallowed and is\n    re-raised in the handling code.\n    \n    Change-Id: I879149897fdb25aae977b7f17e580610b188ce04\n\ncommit 671254224a4a4710e7556535ee68bd999536ab8d\nAuthor: gengchc2 <email address hidden>\nDate:   Fri Aug 26 14:08:08 2016 +0800\n\n    Correct swift reraising of exception\n    \n    When an exception was caught and rethrown, it should call 'raise'\n    without any arguments because it shows the place where an exception\n    occured initially instead of place where the exception re-raised.\n    \n    Change-Id: I783a2a65f3e38a23ba49b6ae5a2f56a5fdaac2fc\n\ncommit 0c22bc22573626dae0f81b976b56e82b265f77a2\nAuthor: Tim Burke <email address hidden>\nDate:   Wed Aug 31 14:10:27 2016 -0700\n\n    Include correct version in install-guide\n    \n    Change-Id: I8f9de7a824aa327d566c821ec05f97d0bc8931e9\n\ncommit 3f00148c6b350efc684250f3339fa5166704d5a3\nAuthor: Nguyen Phuong An <email address hidden>\nDate:   Wed Aug 31 14:37:11 2016 +0700\n\n    Config logABug feature for Swift api-ref\n    \n    Currently, Swift api-ref is not configured with logABug feature.\n    When users click \"Report bug\" button, it leads to \"openstack-manuals\"\n    which is default.\n    \n    Change-Id: I3b6fb410000637ff03d99110d440de88a5adc30c\n\ncommit 66c905e29458666cbd3ea6638a6a4c137e6a35a8\nAuthor: Timur Alperovich <email address hidden>\nDate:   Mon Aug 29 17:27:50 2016 -0700\n\n    Close the iterators in string_along.\n    \n    Make sure to close the underlying iterator in string_along. What is\n    currently happening when using the InternalClient is that \"Client\n    disconnected\" warnings are generated and resources are tied up until\n    GC runs.\n    \n    Change-Id: If1f6c0c756aee95f53f99371439533a97d347eab\n\ncommit cd8eb6db9188359039c1f13e34397cb9b24b8112\nAuthor: zheng yin <email address hidden>\nDate:   Fri Aug 26 14:04:46 2016 +0800\n\n    Add test to validate the error strings in test_expirer\n    \n    Improve test_get_process_values_* methods in obj/test_expirer in the\n    form assertRaises(ValueError, x.get_process_values,{}/vals), to use\n    the assertRaises context form.  This improves understandability by\n    validateing the error strings in addition to the ValueError.\n    \n    Related-Change: I3d12b79470d122b2114f9ee486b15d381f290f95\n    \n    Change-Id: I1c66b8894cba8328d19cf99491a8ad18ded71078\n\ncommit 4d4885acdc8107c4f8f8cd10bc6d19ba3901eb25\nAuthor: Tim Burke <email address hidden>\nDate:   Fri Aug 5 18:05:45 2016 +0000\n\n    Tighten header checks for object PUT/POST paths\n    \n    Change-Id: If2cd059719fe5af1e73ecde5306e9f68d590831f\n\ncommit 773edb4a5dd22b22f5fcab57820bcbdd4176dfcd\nAuthor: Prashanth Pai <email address hidden>\nDate:   Thu Mar 5 18:18:25 2015 +0530\n\n    Make object creation more atomic in Linux\n    \n    Linux 3.11 introduced O_TMPFILE as a flag to open() sys call. This would\n    enable users to get a fd to an unnamed temporary file. As it's unnamed,\n    it does not require the caller to devise unique names. It is also not\n    accessible through any path. Hence, file creation is race-free.\n    \n    This file is initially unreachable. It is then populated with data(write),\n    metadata(fsetxattr) and fsync'd before being atomically linked into the\n    filesystem in a fully formed state using linkat() sys call. Only after a\n    successful linkat() will the object file will be available for reference.\n    \n    Caveats\n    * Unlike os.rename(), linkat() cannot overwrite destination path if it\n      already exists. If path exists, we unlink and try again.\n    * XFS support for O_TMPFILE was only added in Linux 3.15.\n    * If client disconnects during object upload, although there is no\n      incomplete/stale file on disk, the object directory would persist\n      and is not cleaned up immediately.\n    \n    Change-Id: I8402439fab3aba5d7af449b5e465f89332f606ec\n    Signed-off-by: Prashanth Pai <email address hidden>\n\ncommit 06ff865d19b522c48e23637d1234fc8f6b9401ab\nAuthor: Janie Richling <email address hidden>\nDate:   Wed Aug 17 00:54:09 2016 -0500\n\n    Allow DLO manifest to be updated when using post-as-copy\n    \n    Currently when using fast-post, the manifest is updated with the given\n    'x-object-manifest' header on a POST.  If no such header is supplied,\n    then the manifest will change to a regular object.\n    This is not currently true when using post-as-copy.\n    \n    This patch changes the DLO POST using post-as-copy behavior to match\n    that of using fast-post.  It was also documented that\n    'x-object-manifest' must be provided on a POST to a manifest file.\n    \n    Change-Id: Ie1143ab1a2c8f8c21e258a36badbff5d947769d4\n    Closes-bug: 1612991\n\ncommit 4bcd3d7f6de53ccd04d42005848060b92e7733ce\nAuthor: Samuel Merritt <email address hidden>\nDate:   Mon Aug 8 17:57:49 2016 -0700\n\n    Support multi-range GETs for static large objects.\n    \n    Bonus consistency: 416 responses now always have a body. Before, if\n    you had \"swob.HTTPRequestedRangeNotSatisfiable()\", you'd get a body,\n    but if you had \"swob.Response(..., conditional_response=True)\", then\n    you'd get a length-0 response body. Now you always get a response\n    body. It's just the default <html><h1>..., but at it's always there.\n    \n    Bonus efficiency: do a little caching of sub-SLO manifests to avoid\n    needless re-fetches. This kicks in when there are multiple references\n    to the same sub-SLO in a given manifest. The caching only holds 20\n    sub-SLOs so that a malicious user can't build a giant SLO tree and use\n    it to run the proxy out of memory (we're already holding up to 10\n    manifests in memory at a time since a SLO can include another SLO to a\n    depth of 10; this doesn't make the situation too much worse).\n    \n    Change-Id: I24716e3271cf3370642e3755447e717fd7d9957c\n\ncommit 1fc46a0e13eff5603ba0c26d98407e3012d9de42\nAuthor: Lokesh S <email address hidden>\nDate:   Thu Jul 21 15:41:58 2016 +0000\n\n    py3: Fixes encoding and type error\n    \n    Fixes encoding bytes to base64.\n    Fixes unorderedtype int() and str()\n    for python3.\n    Fixes encoding issues.\n    \n    Change-Id: I6e7aaf21e080078d4b36562e41129804d71df2fc\n\ncommit 8d6bf368f710e1fdb1cf548ad3e40baddea3e7c7\nAuthor: zheng yin <email address hidden>\nDate:   Wed Aug 17 19:27:13 2016 +0800\n\n    Remove unnecessary variable\n    \n    It defines self.node information in setUp(),  it is unnecessary to\n    define node in test_direct_delete_account. Because although self.node\n    includes replication_ip and replication_port, direct_delete_account\n    doesn't use both and uses ip,port and device. Therefore, I think self.node\n    can instead of node.\n    \n    Change-Id: I6df7081280d2b540f984e4e688620931f5d4ac88\n\ncommit eadab846b32e78644925fec707c6a048d959c3a8\nAuthor: Kota Tsuyuzaki <email address hidden>\nDate:   Thu Aug 4 23:34:40 2016 -0700\n\n    Remove unnecessary open call and related vars in unit tests\n    \n    Since the methods touching exisiting file is mocked, we don't have to\n    open the file. (if it is needed, we should close at first anyway)\n    \n    And cleanup unecessary vars/imports that is used for making the file\n    path.\n    \n    This patch is a followup on:\n    https://review.openstack.org/#/c/350471/\n    \n    Change-Id: I8fbc0b5b9a01782b6da5a7dd674f52d4b566ca5c\n\ncommit b1b410902d3af011c65569a0ba94a39148f8265e\nAuthor: zheng yin <email address hidden>\nDate:   Wed Aug 3 17:11:25 2016 +0800\n\n    Add unit case\n    \n    \"op\" has three judgments in ReplicatorRpc.dispatch, rsync_then_merge,complete_rsync\n    and other. But it only has two times judgments,including rsync_then_merge and other\n    in test_REPLICATE_works, so I add complete_rsync in test_account and test_container\n    \n    Change-Id: I8277b556062dd6b30bf85dedd636d56517f10d8d\n\ncommit ab602a2711af2e09df1ffeb132f4a01e3fae5626\nAuthor: Tim Burke <email address hidden>\nDate:   Fri Jul 1 13:38:20 2016 -0700\n\n    Make load_crypto_meta more py3-friendly\n    \n    Change-Id: I1f2551630e7162f3b4efc8bf1f1a4d415da9d9a3\n\ncommit 88b14a0f803959ec5195d78a58b68dc2d5f30378\nAuthor: Hisashi Osanai <email address hidden>\nDate:   Fri Aug 14 06:49:18 2015 +0900\n\n    Add functional test for access control (RBAC INFO) with Keystone\n    \n    This patch adds test cases for info requests to accounts, containers\n    and objects using various combinations of users/projects, roles and/or\n    service tokens.\n    \n    Change-Id: Iece57b03a73b3cdf9762573678755f361e9b803e\n\ncommit 5448a55e37c409c099c2e0b1dfaf7f0473cc85df\nAuthor: Hisashi Osanai <email address hidden>\nDate:   Mon Aug 17 15:15:19 2015 +0900\n\n    Add functional test for access control (container ACL) with Keystone\n    \n    This patch adds test cases for requests to containers and objects using\n    various combinations of users/projects, roles in order to check container\n    ACL and referrer behavior.\n    \n    Co-Authored-By: Keisuke Yamamoto <email address hidden>\n    Change-Id: I435655bc56e5088ba50a96a879a45c7e264e0d8d\n", 
            "date_created": "2016-11-23 03:47:41.129012+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/designate 4.0.0.0b2 development milestone.", 
            "date_created": "2016-12-14 21:04:28.718295+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/searchlight 2.0.0.0b2 development milestone.", 
            "date_created": "2016-12-16 10:38:40.449728+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/368405\nCommitted: https://git.openstack.org/cgit/openstack/glance/commit/?id=956f5c4e29b92146912d65e1b5d3553f712c1609\nSubmitter: Jenkins\nBranch:    master\n\ncommit 956f5c4e29b92146912d65e1b5d3553f712c1609\nAuthor: Li Wei <email address hidden>\nDate:   Sun Sep 11 16:29:25 2016 +0800\n\n    Change SafeConfigParser into ConfigParser\n    \n    SafeConfigParser supports interpolation on top of ConfigParser\n    in Python 2, and SafeConfigParser is deprecated in Python 3.2.\n    Use ConfigParser directly instead.\n    \n    Closes-Bug: #1618666\n    Change-Id: I115646053de986b2df4775fb94edc7e7548093ae\n", 
            "date_created": "2017-02-24 07:41:16.194575+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/368409\nCommitted: https://git.openstack.org/cgit/openstack/glance_store/commit/?id=93f5570bde937b771e0eac5d056889204770f223\nSubmitter: Jenkins\nBranch:    master\n\ncommit 93f5570bde937b771e0eac5d056889204770f223\nAuthor: ChangBo Guo(gcb) <email address hidden>\nDate:   Fri Jan 6 12:43:59 2017 +0800\n\n    Fix SafeConfigParser DeprecationWarning in Python 3.2+\n    \n    SafeConfigParser is deprecated in Python 3.2 and log warning\n    like \" DeprecationWarning: The SafeConfigParser class has\n    been renamed to ConfigParser in Python 3.2. This alias will be\n    removed in future versions. Use ConfigParser directly instead.\"\n    So use ConfigParser in Python 3.2+.\n    \n    We don't support Python 2.6 now, so don't need set dict_type manually.\n    \n    Closes-Bug: #1618666\n    Change-Id: I53fba2317b4621488cb602c7f9f7b231f2dd80d7\n", 
            "date_created": "2017-02-28 06:14:11.684920+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack-dev/pbr 2.0.0 release.", 
            "date_created": "2017-03-01 03:30:56.519580+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/glance 15.0.0.0b1 development milestone.", 
            "date_created": "2017-04-11 08:33:54.005267+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/glance_store 0.21.0 release.", 
            "date_created": "2017-07-19 18:11:09.478551+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}