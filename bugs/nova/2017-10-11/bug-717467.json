{
    "status": "Fix Released", 
    "last_updated": "2011-04-15 08:36:30.399154+00:00", 
    "description": "No virtual environment found...create one? (Y/n) \ndone.\n\n....\n\n======================================================================\nERROR: <nose.suite.ContextSuite context=nova.tests>\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/bschott/source/nova/hpc-trunk/.nova-venv/lib/python2.6/site-packages/nose/suite.py\", line 208, in run\n    self.setUp()\n  File \"/home/bschott/source/nova/hpc-trunk/.nova-venv/lib/python2.6/site-packages/nose/suite.py\", line 291, in setUp\n    self.setupContext(ancestor)\n  File \"/home/bschott/source/nova/hpc-trunk/.nova-venv/lib/python2.6/site-packages/nose/suite.py\", line 314, in setupContext\n    try_run(context, names)\n  File \"/home/bschott/source/nova/hpc-trunk/.nova-venv/lib/python2.6/site-packages/nose/util.py\", line 478, in try_run\n    return func()\n  File \"/home/bschott/source/nova/hpc-trunk/nova/tests/__init__.py\", line 41, in setup\n    migration.db_sync()\n  File \"/home/bschott/source/nova/hpc-trunk/nova/db/migration.py\", line 33, in db_sync\n    return IMPL.db_sync(version=version)\n  File \"/home/bschott/source/nova/hpc-trunk/nova/utils.py\", line 367, in __getattr__\n    backend = self.__get_backend()\n  File \"/home/bschott/source/nova/hpc-trunk/nova/utils.py\", line 362, in __get_backend\n    self.__backend = __import__(name, None, None, fromlist)\n  File \"/home/bschott/source/nova/hpc-trunk/nova/db/sqlalchemy/migration.py\", line 25, in <module>\n    from migrate.versioning import exceptions as versioning_exceptions\nImportError: cannot import name exceptions", 
    "tags": [], 
    "importance": "Medium", 
    "heat": 30, 
    "link": "https://bugs.launchpad.net/nova/+bug/717467", 
    "owner": "https://api.launchpad.net/1.0/~bfschott", 
    "id": 717467, 
    "index": 2272, 
    "created": "2011-02-11 23:11:27.655293+00:00", 
    "title": "from migrate.versioning import exceptions fails with recent venv", 
    "comments": [
        {
            "content": "No virtual environment found...create one? (Y/n) \ndone.\n\n....\n\n======================================================================\nERROR: <nose.suite.ContextSuite context=nova.tests>\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/bschott/source/nova/hpc-trunk/.nova-venv/lib/python2.6/site-packages/nose/suite.py\", line 208, in run\n    self.setUp()\n  File \"/home/bschott/source/nova/hpc-trunk/.nova-venv/lib/python2.6/site-packages/nose/suite.py\", line 291, in setUp\n    self.setupContext(ancestor)\n  File \"/home/bschott/source/nova/hpc-trunk/.nova-venv/lib/python2.6/site-packages/nose/suite.py\", line 314, in setupContext\n    try_run(context, names)\n  File \"/home/bschott/source/nova/hpc-trunk/.nova-venv/lib/python2.6/site-packages/nose/util.py\", line 478, in try_run\n    return func()\n  File \"/home/bschott/source/nova/hpc-trunk/nova/tests/__init__.py\", line 41, in setup\n    migration.db_sync()\n  File \"/home/bschott/source/nova/hpc-trunk/nova/db/migration.py\", line 33, in db_sync\n    return IMPL.db_sync(version=version)\n  File \"/home/bschott/source/nova/hpc-trunk/nova/utils.py\", line 367, in __getattr__\n    backend = self.__get_backend()\n  File \"/home/bschott/source/nova/hpc-trunk/nova/utils.py\", line 362, in __get_backend\n    self.__backend = __import__(name, None, None, fromlist)\n  File \"/home/bschott/source/nova/hpc-trunk/nova/db/sqlalchemy/migration.py\", line 25, in <module>\n    from migrate.versioning import exceptions as versioning_exceptions\nImportError: cannot import name exceptions", 
            "date_created": "2011-02-11 23:11:27.655293+00:00", 
            "author": "https://api.launchpad.net/1.0/~bfschott"
        }, 
        {
            "content": "", 
            "date_created": "2011-02-11 23:11:27.655293+00:00", 
            "author": "https://api.launchpad.net/1.0/~bfschott"
        }, 
        {
            "content": "Ubuntu 10.4.1\n\nPackage: python\nVersion: 2.6.5-0ubuntu1\n\nPackage: python-migrate\nVersion: 0.6-4~lucid1\n\nPackage: python-sqlalchemy\nVersion: 0.6.3-1ubuntu0~lucid1\n\nmigrate/versioning/exceptions doesn't exist.\nbschott@island100:~/source/nova/trunk/.nova-venv/lib/python2.6/site-packages/migrate/versioning$ \n\nbschott@island100:~/source/nova/trunk/.nova-venv/lib/python2.6/site-packages/migrate/versioning$ ls -l\ntotal 220\n-rw-r--r-- 1 bschott bschott 12986 2011-02-11 17:52 api.py\n-rw-r--r-- 1 bschott bschott 14694 2011-02-11 17:54 api.pyc\n-rw-r--r-- 1 bschott bschott   669 2011-02-11 17:52 cfgparse.py\n-rw-r--r-- 1 bschott bschott  1671 2011-02-11 17:54 cfgparse.pyc\n-rw-r--r-- 1 bschott bschott   339 2011-02-11 17:52 config.py\n-rw-r--r-- 1 bschott bschott   490 2011-02-11 17:54 config.pyc\n-rw-r--r-- 1 bschott bschott  9732 2011-02-11 17:52 genmodel.py\n-rw-r--r-- 1 bschott bschott  8604 2011-02-11 17:54 genmodel.pyc\n-rw-r--r-- 1 bschott bschott   161 2011-02-11 17:52 __init__.py\n-rw-r--r-- 1 bschott bschott   365 2011-02-11 17:54 __init__.pyc\n-rw-r--r-- 1 bschott bschott  3123 2011-02-11 17:52 migrate_repository.py\n-rw-r--r-- 1 bschott bschott  3994 2011-02-11 17:54 migrate_repository.pyc\n-rw-r--r-- 1 bschott bschott  2059 2011-02-11 17:52 pathed.py\n-rw-r--r-- 1 bschott bschott  3645 2011-02-11 17:54 pathed.pyc\n-rw-r--r-- 1 bschott bschott  7399 2011-02-11 17:52 repository.py\n-rw-r--r-- 1 bschott bschott 10801 2011-02-11 17:54 repository.pyc\n-rw-r--r-- 1 bschott bschott  8655 2011-02-11 17:52 schemadiff.py\n-rw-r--r-- 1 bschott bschott  8956 2011-02-11 17:54 schemadiff.pyc\n-rw-r--r-- 1 bschott bschott  7337 2011-02-11 17:52 schema.py\n-rw-r--r-- 1 bschott bschott  8497 2011-02-11 17:54 schema.pyc\ndrwxr-xr-x 2 bschott bschott  4096 2011-02-11 17:54 script\n-rw-r--r-- 1 bschott bschott  6460 2011-02-11 17:52 shell.py\n-rw-r--r-- 1 bschott bschott  6678 2011-02-11 17:54 shell.pyc\n-rw-r--r-- 1 bschott bschott  2905 2011-02-11 17:52 template.py\n-rw-r--r-- 1 bschott bschott  5642 2011-02-11 17:54 template.pyc\ndrwxr-xr-x 6 bschott bschott  4096 2011-02-11 17:54 templates\ndrwxr-xr-x 2 bschott bschott  4096 2011-02-11 17:54 util\n-rw-r--r-- 1 bschott bschott  6615 2011-02-11 17:52 version.py\n-rw-r--r-- 1 bschott bschott 10180 2011-02-11 17:54 version.pyc\n", 
            "date_created": "2011-02-11 23:17:13.968770+00:00", 
            "author": "https://api.launchpad.net/1.0/~bfschott"
        }, 
        {
            "content": "Uploaded:\nhttps://code.launchpad.net/~usc-isi/nova/lp-717467\nNot sure how this behaves on Ubuntu 10.10 or other distributions but fixes the issue or 10.4.", 
            "date_created": "2011-02-12 00:10:19.049964+00:00", 
            "author": "https://api.launchpad.net/1.0/~bfschott"
        }, 
        {
            "content": "Ubuntu 10.10.  Same problem; fix in branch solves the problem for me - thanks!", 
            "date_created": "2011-02-12 00:17:37.084220+00:00", 
            "author": "https://api.launchpad.net/1.0/~justin-fathomdb"
        }, 
        {
            "content": "From Vish on the merge proposal: \n\nI believe this is actually an issue because python-migrate recently changed.  I think a better fix would be to actually put the (older) version of python-migrate into pip-requires.  Your fix will break running the tests without a virtualenv unless we create custom python-migrate packages.\n\nAdapting description.", 
            "date_created": "2011-02-14 10:35:56.222356+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "We should fix this without having to have a specific version of python-migrate.\n\nSomething like this should fix it on both systems and not stick us on an old version of python-migrate:\n\ntry:\n    from migrate.versioning import exceptions as versioning_exceptions\nexcept ImportError:\n    try:\n        # python-migration changed location of exceptions after 1.6.3\n        # See LP Bug #717467\n        from migrate import exceptions as versioning_exceptions\n    except ImportError:\n        sys.exit(_(\"python-migrate is not installed. Exiting.\"))", 
            "date_created": "2011-02-14 14:49:43.246144+00:00", 
            "author": "https://api.launchpad.net/1.0/~jaypipes"
        }, 
        {
            "content": "\"not stick us on an old version of python-migrate\"\n\nIsn't a key point of having something like a \"pip-requires\" file to allow the project to rely on always having a stable API to work against for all external libraries? Currently \"pip-requires\" has a ton of version-specific libraries and I wouldn't want to have to support N versions of M libraries.\n\nShouldn't the fix just be to specify \"sqlalchemy-migrate==0.6\" and be done with it until a bug with that library affects us or we need a new feature from it?\n\n", 
            "date_created": "2011-02-14 19:02:32.757692+00:00", 
            "author": "https://api.launchpad.net/1.0/~blamar"
        }, 
        {
            "content": "\"Shouldn't the fix just be to specify \"sqlalchemy-migrate==0.6\" and be done with it until a bug with that library affects us or we need a new feature from it?\"\n\nNo. pip-requires is only for developers to use when developing Nova in a virtualenv. It isn't related to distribution and packaging and contains requirements for libraries (such as sphinx) that are *not* required when installing Nova.\n\nHaving specific versions in pip-requires is a mistake IMHO.\n\nWe have similar fixes to what I proposed above in both Swift and Glance for such things like the python-urlparse library parsing URIs differently depending on the version of the library installed.\n\nIn short, I think it's better to fix the software to run properly for multiple NON-buggy versions of a software library than to require a specific version of a library when another perfectly-valid version of the library is commonly installed on machines.\n\nJust my 2 cents,\njay", 
            "date_created": "2011-02-14 19:24:52.672336+00:00", 
            "author": "https://api.launchpad.net/1.0/~jaypipes"
        }, 
        {
            "content": "+1 To Jay.  If we have an easy way to support both we should. Otherwise, nova will suddenly break when ubuntu packages the new version\nof sqlalchemy-migrate.\n\nVish\n\nOn Feb 14, 2011, at 11:24 AM, Jay Pipes wrote:\n\n> \"Shouldn't the fix just be to specify \"sqlalchemy-migrate==0.6\" and be\n> done with it until a bug with that library affects us or we need a new\n> feature from it?\"\n> \n> No. pip-requires is only for developers to use when developing Nova in a\n> virtualenv. It isn't related to distribution and packaging and contains\n> requirements for libraries (such as sphinx) that are *not* required when\n> installing Nova.\n> \n> Having specific versions in pip-requires is a mistake IMHO.\n> \n> We have similar fixes to what I proposed above in both Swift and Glance\n> for such things like the python-urlparse library parsing URIs\n> differently depending on the version of the library installed.\n> \n> In short, I think it's better to fix the software to run properly for\n> multiple NON-buggy versions of a software library than to require a\n> specific version of a library when another perfectly-valid version of\n> the library is commonly installed on machines.\n> \n> Just my 2 cents,\n> jay\n> \n> -- \n> You received this bug notification because you are a member of Nova Bug\n> Team, which is subscribed to OpenStack Compute (nova).\n> https://bugs.launchpad.net/bugs/717467\n> \n> Title:\n>  from migrate.versioning import exceptions fails with recent venv\n> \n> Status in OpenStack Compute (Nova):\n>  In Progress\n> \n> Bug description:\n>  No virtual environment found...create one? (Y/n) \n>  done.\n> \n>  ....\n> \n>  ======================================================================\n>  ERROR: <nose.suite.ContextSuite context=nova.tests>\n>  ----------------------------------------------------------------------\n>  Traceback (most recent call last):\n>    File \"/home/bschott/source/nova/hpc-trunk/.nova-venv/lib/python2.6/site-packages/nose/suite.py\", line 208, in run\n>      self.setUp()\n>    File \"/home/bschott/source/nova/hpc-trunk/.nova-venv/lib/python2.6/site-packages/nose/suite.py\", line 291, in setUp\n>      self.setupContext(ancestor)\n>    File \"/home/bschott/source/nova/hpc-trunk/.nova-venv/lib/python2.6/site-packages/nose/suite.py\", line 314, in setupContext\n>      try_run(context, names)\n>    File \"/home/bschott/source/nova/hpc-trunk/.nova-venv/lib/python2.6/site-packages/nose/util.py\", line 478, in try_run\n>      return func()\n>    File \"/home/bschott/source/nova/hpc-trunk/nova/tests/__init__.py\", line 41, in setup\n>      migration.db_sync()\n>    File \"/home/bschott/source/nova/hpc-trunk/nova/db/migration.py\", line 33, in db_sync\n>      return IMPL.db_sync(version=version)\n>    File \"/home/bschott/source/nova/hpc-trunk/nova/utils.py\", line 367, in __getattr__\n>      backend = self.__get_backend()\n>    File \"/home/bschott/source/nova/hpc-trunk/nova/utils.py\", line 362, in __get_backend\n>      self.__backend = __import__(name, None, None, fromlist)\n>    File \"/home/bschott/source/nova/hpc-trunk/nova/db/sqlalchemy/migration.py\", line 25, in <module>\n>      from migrate.versioning import exceptions as versioning_exceptions\n>  ImportError: cannot import name exceptions\n> \n> \n\n", 
            "date_created": "2011-02-14 19:39:07+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "I will try Jay's suggestion right now and resubmit.  I was stuck on the fact of no __version__ to branch on, didn't think about \"try\".  ", 
            "date_created": "2011-02-14 19:49:49.354147+00:00", 
            "author": "https://api.launchpad.net/1.0/~bfschott"
        }, 
        {
            "content": "another +1 to Jay. How's the fix Brian? (bug's biting me too..)", 
            "date_created": "2011-02-15 16:31:55.722634+00:00", 
            "author": "https://api.launchpad.net/1.0/~tr3buchet"
        }, 
        {
            "content": "Done!  This time for sure :-).", 
            "date_created": "2011-02-16 18:27:00.053938+00:00", 
            "author": "https://api.launchpad.net/1.0/~bfschott"
        }, 
        {
            "content": "LP question, do I need to resubmit for review?  if so, how.", 
            "date_created": "2011-02-16 18:36:52.367865+00:00", 
            "author": "https://api.launchpad.net/1.0/~bfschott"
        }, 
        {
            "content": "Just set the merge proposal to Work In Progress while you work on the branch. Then set the merge prop back to Needs Review, and that will trigger an email to all prior reviewers and re-diff the merge prop.\n\nI did the above to your merge prop, so no need to do that again.\n\nCheers,\nJay", 
            "date_created": "2011-02-16 18:52:59.329874+00:00", 
            "author": "https://api.launchpad.net/1.0/~jaypipes"
        }, 
        {
            "content": "Verified fixed on 2011.1.1 candidate (bzr653) -- supports both cases.", 
            "date_created": "2011-02-28 13:21:52.480901+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }
    ]
}