{
    "status": "Opinion", 
    "last_updated": "2014-09-25 10:05:14.049342+00:00", 
    "description": "The current filter scheduler handles the scheduling of a homogenous batch of N instances with a loop that assumes that a host ruled out in one iteration can not be desirable in a later iteration --- but that is a false assumption.\n\nConsider the case of a filter whose purpose is to achieve balance across some sort of areas.  These might be AZs, host aggregates, racks, whatever.  Consider a request to schedule 4 identical instances; suppose that there are two hosts, one in each of two different areas, initially hosting nothing.  For the first iteration, both hosts pass this filter.  One gets picked, call it host A.  On the second iteration, only the other host (call it B) passes the filter.  So the second instance goes on B.  On the third iteration, both hosts would pass the filter but the filter is only asked about host B.  So the third instance goes on B.  On the fourth iteration, host B is unacceptable but that is the only host about which the filter is asked.  So the scheduling fails with a complaint about no acceptable host found.", 
    "tags": [], 
    "importance": "Wishlist", 
    "heat": 12, 
    "link": "https://bugs.launchpad.net/nova/+bug/1373478", 
    "owner": "None", 
    "id": 1373478, 
    "index": 1614, 
    "created": "2014-09-24 15:36:23.503224+00:00", 
    "title": "filter scheduler makes invalid assumption of monotonicity", 
    "comments": [
        {
            "content": "The current filter scheduler handles the scheduling of a homogenous batch of N instances with a loop that assumes that a host ruled out in one iteration can not be desirable in a later iteration --- but that is a false assumption.\n\nConsider the case of a filter whose purpose is to achieve balance across some sort of areas.  These might be AZs, host aggregates, racks, whatever.  Consider a request to schedule 4 identical instances; suppose that there are two hosts, one in each of two different areas, initially hosting nothing.  For the first iteration, both hosts pass this filter.  One gets picked, call it host A.  On the second iteration, only the other host (call it B) passes the filter.  So the second instance goes on B.  On the third iteration, both hosts would pass the filter but the filter is only asked about host B.  So the third instance goes on B.  On the fourth iteration, host B is unacceptable but that is the only host about which the filter is asked.  So the scheduling fails with a complaint about no acceptable host found.", 
            "date_created": "2014-09-24 15:36:23.503224+00:00", 
            "author": "https://api.launchpad.net/1.0/~mike-spreitzer"
        }, 
        {
            "content": "So this is an interesting possible feature, but that means it should come in via a spec, not really via launchpad. ", 
            "date_created": "2014-09-25 10:05:13.151324+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }
    ]
}