{
    "status": "Opinion", 
    "last_updated": "2014-09-12 14:51:56.795193+00:00", 
    "description": "When you have on compute node unmanaged instance (not created with OS) it would be expected that it's ignored by OpenStack, but in case when it's name (e.g. instance-00000015) is same as the name openstack allocated to the new instance it will act very bad.\n\nAt first attempt the deployment will fail, and the unmanaged instance will be destroyed (probably because compute wants to remove leftovers of the failed deployment). After that at the next attempt the instance will be created.\n\nAt the end user will have a new instance managed by openstack that replaced former unmanaged instance (has same name) in libvirt without single notification to user.", 
    "tags": [
        "libvirt"
    ], 
    "importance": "Wishlist", 
    "heat": 8, 
    "link": "https://bugs.launchpad.net/nova/+bug/1350790", 
    "owner": "None", 
    "id": 1350790, 
    "index": 1579, 
    "created": "2014-07-31 10:49:25.460004+00:00", 
    "title": "Non managed Instance deleted during create", 
    "comments": [
        {
            "content": "When you have on compute node unmanaged instance (not created with OS) it would be expected that it's ignored by OpenStack, but in case when it's name (e.g. instance-00000015) is same as the name openstack allocated to the new instance it will act very bad.\n\nAt first attempt the deployment will fail, and the unmanaged instance will be destroyed (probably because compute wants to remove leftovers of the failed deployment). After that at the next attempt the instance will be created.\n\nAt the end user will have a new instance managed by openstack that replaced former unmanaged instance (has same name) in libvirt without single notification to user.", 
            "date_created": "2014-07-31 10:49:25.460004+00:00", 
            "author": "https://api.launchpad.net/1.0/~kravchenko-pavel"
        }, 
        {
            "content": "Might be a simple fix: verify that the domain name does not exist before attempting to create the domain.  However, there might be a performance hit, since there is an extra look up now :(", 
            "date_created": "2014-08-09 18:24:29.840242+00:00", 
            "author": "https://api.launchpad.net/1.0/~thang-pham"
        }, 
        {
            "content": "Few concerns:\nShould it fully fail the deployment in this case giving some appropriate message to the user? \nIf not, should the instance generated name be regenerated and updated in db to continue the deployment on retry (maybe instead the instance could be destroyed in db and created again)?\nNot sure if it's only libvirt case, maybe other drivers affected as well.", 
            "date_created": "2014-08-09 19:18:38.452255+00:00", 
            "author": "https://api.launchpad.net/1.0/~kravchenko-pavel"
        }, 
        {
            "content": "I think your simple fix will work. \nThe real problem is that \"build_and_run_instance\" missing the call to _prebuild_instance that contains the driver call for _check_instance_exists.", 
            "date_created": "2014-08-10 09:33:06.993138+00:00", 
            "author": "https://api.launchpad.net/1.0/~kravchenko-pavel"
        }, 
        {
            "content": "I digged into this a little more, and here is what I found:\n    1. The instance name is determined by instance_name_template in nova.conf, e.g. instance_name_template = instance-%08x.\n    2. The digit appended at the end (i.e. %08x) is determined by the id column in the nova.instances table, which is set to auto_increment.\nIt is unlikely that you can regenerate the instance name without actually destroying the instance.\n\nA possible solution, as you indicated above, is to perform _check_instance_exists in nova/compute/manager.py _build_and_run_instance.  However, as I observed (with _check_instance_exists in place), it will fail on create an instance if there is an existing instance of the same name in libvirt.  When you go to destroy the instance, it will destroy the existing instance, which is not what you want to happen.\n\nIt must say somewhere that you should select an instance_name_template that does not conflict with existing naming schemes, so that this case would not occur.  Since this is very unlikely to occur, I do not believe that it is worth fixing this bug because it might be more trouble than it is worth, but that is just my opinion.  If you have another suggestion or want to fix it, please take the bug and assign it to yourself.", 
            "date_created": "2014-08-20 02:12:55.148676+00:00", 
            "author": "https://api.launchpad.net/1.0/~thang-pham"
        }
    ]
}