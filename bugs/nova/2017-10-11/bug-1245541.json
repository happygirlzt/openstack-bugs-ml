{
    "status": "Invalid", 
    "last_updated": "2014-06-05 02:04:26.655095+00:00", 
    "description": "\n OS: CentOS 6.4\n Installation: using RDO Packstack.\n \n When one key:value pair is described in instance_type_extra_specs, the scheduler works fine.\nHowever, when multiple key:value pairs are described in instance_type_extra_specs in /etc/nova/nova.conf, only one of them are properly filtered, but the other keys are recognized by None by the scheduler filter.\nSo, it always fails to find proper nova-compute.\nI could use the same instance_type_extra_specs with Grizzly,\nbut it fails with Havana.\n\n Here is the flags that I used:\n\n/etc/nova/nova.conf\ninstance_type_extra_specs=cpu_arch:x86_64, gpu_arch:fermi, gpus:2, hypervisor_type:LXC\n\nflavor:\n nova flavor-list --extra-specs\n+----+-----------+-----------+------+-----------+------+-------+-------------+-----------+----------------------------------------------------------------------------------------------------------+\n| ID | Name      | Memory_MB | Disk | Ephemeral | Swap | VCPUs | RXTX_Factor | Is_Public | extra_specs                                                                                              |\n+----+-----------+-----------+------+-----------+------+-------+-------------+-----------+----------------------------------------------------------------------------------------------------------+\n\n| 10 | cg1.small | 2048      | 10   | 0         |      | 2     | 1.0         | True      | {u'gpus': u'= 1', u'hypervisor_type': u's== LXC', u'gpu_arch': u's== fermi', u'cpu_arch': u's== x86_64'} |", 
    "tags": [
        "havana-backport-potential"
    ], 
    "importance": "High", 
    "heat": 14, 
    "link": "https://bugs.launchpad.net/nova/+bug/1245541", 
    "owner": "None", 
    "id": 1245541, 
    "index": 1289, 
    "created": "2013-10-28 15:46:58.870095+00:00", 
    "title": "multiple key:value pairs in instance_type_extra_specs does not work", 
    "comments": [
        {
            "content": "\n OS: CentOS 6.4\n Installation: using RDO Packstack.\n \n When one key:value pair is described in instance_type_extra_specs, the scheduler works fine.\nHowever, when multiple key:value pairs are described in instance_type_extra_specs in /etc/nova/nova.conf, only one of them are properly filtered, but the other keys are recognized by None by the scheduler filter.\nSo, it always fails to find proper nova-compute.\nI could use the same instance_type_extra_specs with Grizzly,\nbut it fails with Havana.\n\n Here is the flags that I used:\n\n/etc/nova/nova.conf\ninstance_type_extra_specs=cpu_arch:x86_64, gpu_arch:fermi, gpus:2, hypervisor_type:LXC\n\nflavor:\n nova flavor-list --extra-specs\n+----+-----------+-----------+------+-----------+------+-------+-------------+-----------+----------------------------------------------------------------------------------------------------------+\n| ID | Name      | Memory_MB | Disk | Ephemeral | Swap | VCPUs | RXTX_Factor | Is_Public | extra_specs                                                                                              |\n+----+-----------+-----------+------+-----------+------+-------+-------------+-----------+----------------------------------------------------------------------------------------------------------+\n\n| 10 | cg1.small | 2048      | 10   | 0         |      | 2     | 1.0         | True      | {u'gpus': u'= 1', u'hypervisor_type': u's== LXC', u'gpu_arch': u's== fermi', u'cpu_arch': u's== x86_64'} |", 
            "date_created": "2013-10-28 15:46:58.870095+00:00", 
            "author": "https://api.launchpad.net/1.0/~dkang"
        }, 
        {
            "content": "It looks like that any key in instance_type_extra_specs field is not recognized by the compute_capabilities_filter at all.\n\nFor testing, I've added the following code into libvirt.HostState.update_status() function:\n\n        data['pci_passthrough_devices'] = \\\n            self.driver.get_pci_passthrough_devices()\n\n+       data[\"test_key\"] = 'test_value'\n \nScheduler cannot find the value of the key from the state of compute node.\n\n Should the new key:value pair be inserted somewhere else?\n", 
            "date_created": "2013-10-29 22:35:20.915953+00:00", 
            "author": "https://api.launchpad.net/1.0/~dkang"
        }, 
        {
            "content": "This is the commit that broke this, unless I am mistaken:\n\nhttps://github.com/openstack/nova/commit/4b4f0d61836e527340511f6198c2f2c0bdf70888", 
            "date_created": "2014-03-14 19:01:07.500394+00:00", 
            "author": "https://api.launchpad.net/1.0/~jaypipes"
        }, 
        {
            "content": "The reason I think the above commit (at least) is the issue is that after that commit, the HostManager.service_states dict existed but no longer was used by the scheduler, and therefore no capabilities were extended on the HostState objects passed to the filter's host_passes() method.", 
            "date_created": "2014-03-14 19:03:14.263380+00:00", 
            "author": "https://api.launchpad.net/1.0/~jaypipes"
        }, 
        {
            "content": "Can you please append more for your case? Which filter are you using?\n\nAlso curious do we support adding instance_type_extra_specs to nova.conf? Who will use it?\n\n/etc/nova/nova.conf\ninstance_type_extra_specs=cpu_arch:x86_64, gpu_arch:fermi, gpus:2, hypervisor_type:LXC", 
            "date_created": "2014-03-15 04:21:51.482803+00:00", 
            "author": "https://api.launchpad.net/1.0/~jay-lau-513"
        }, 
        {
            "content": "Just notice that seems this parameter was only for bare-metal driver: https://github.com/openstack/nova/blob/master/nova/virt/baremetal/driver.py#L57 and also the parameter has been renamed to flavor_extra_specs\n\n@Jay Pipes, this commit https://github.com/openstack/nova/commit/4b4f0d61836e527340511f6198c2f2c0bdf70888 was merged in 2014-01-28 and this bug was reported in 2013-10-28, so I think this is not related to the patch, right? ;-)\n\n@David, hope I can get more input here for your case. Thanks.", 
            "date_created": "2014-03-20 09:47:06.542719+00:00", 
            "author": "https://api.launchpad.net/1.0/~jay-lau-513"
        }, 
        {
            "content": "\nAbout the scheduler filter (sorry for my late relpy), I believe I've used ComputeCapabilitiesFilter.\n\nAbout the usage:\n\nActually we've used the flag to specify heterogeneous architecture support. In addition to x86 architecture, we wanted to support other architecture using the instance_type_extra_specs flag.\nAnd we put dynamically changing values in the flag.\nFor example,\n\ninstance_type_extra_specs=cpu_arch:x86_64, gpu_arch:fermi, gpus:2, hypervisor_type:LXC\n\nshows that the nova-compute node has two GPUs of NVdia fermi and runs LXC hypervisor.\nThe 'gpus' key is dynamically changing at run-time as gpus are allocated and deallocated.\nMost static keys can be handled by host-aggregate method. \nBut keys with dynamic values cannot be handled by host-aggregate method.\n\nEven before the merge of \"https://github.com/openstack/nova/commit/4b4f0d61836e527340511f6198c2f2c0bdf70888 merged in 2014-01-28\", the dynamic update mechanism was broken.\n\n", 
            "date_created": "2014-03-20 14:02:05.051837+00:00", 
            "author": "https://api.launchpad.net/1.0/~dkang"
        }, 
        {
            "content": "So, ISI tried to fix this bug for Havana and Icehouse releases as follows, reviewers decided to deprecate this capability:\n\nhttps://review.openstack.org/#/c/62088/", 
            "date_created": "2014-03-20 15:00:58.271795+00:00", 
            "author": "https://api.launchpad.net/1.0/~mkkang"
        }, 
        {
            "content": "This capability was marked as deprecated in https://review.openstack.org/#/c/62088/", 
            "date_created": "2014-06-05 02:04:14.178570+00:00", 
            "author": "https://api.launchpad.net/1.0/~jshepher"
        }
    ]
}