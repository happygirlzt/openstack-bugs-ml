{
    "status": "Fix Released", 
    "last_updated": "2010-10-25 20:08:22.853849+00:00", 
    "description": "The singleton logic in nova.process is broken, causing this assertion to be hit:\n\nDEBUG:root:Someone released me too many times: too many tokens!\n\nThe problem is that the override of SharedPool.__new__  doesn't stop ProcessPool.__init__ from being run whenever process.simple_execute is called.  When __init__ runs for the second time, the DeferredSemaphore is replaced.  This means that as soon as you have more than one Deferred running at the same time, you end up releasing a different semaphore to the one that you acquired.", 
    "tags": [], 
    "importance": "Undecided", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/609749", 
    "owner": "https://api.launchpad.net/1.0/~ewanmellor", 
    "id": 609749, 
    "index": 1902, 
    "created": "2010-07-25 13:35:49.495779+00:00", 
    "title": "nova.process singleton isn't working, causing 'Someone released me too many times: too many tokens!' assertion", 
    "comments": [
        {
            "content": "The singleton logic in nova.process is broken, causing this assertion to be hit:\n\nDEBUG:root:Someone released me too many times: too many tokens!\n\nThe problem is that the override of SharedPool.__new__  doesn't stop ProcessPool.__init__ from being run whenever process.simple_execute is called.  When __init__ runs for the second time, the DeferredSemaphore is replaced.  This means that as soon as you have more than one Deferred running at the same time, you end up releasing a different semaphore to the one that you acquired.", 
            "date_created": "2010-07-25 13:35:49.495779+00:00", 
            "author": "https://api.launchpad.net/1.0/~ewanmellor"
        }
    ]
}