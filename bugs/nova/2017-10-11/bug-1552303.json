{
    "status": "Fix Released", 
    "last_updated": "2016-03-21 14:45:48.473967+00:00", 
    "description": "All block live migrations are broken when I want nova to calculate live migration type by specifying {'block_migration': 'auto'} in request body. This happens because block_migration and migrate_data.block_migration flags do not have the same value.\n\nIn conductor live migrate task we call checks on destination and source that builds up migrate_data in driver and sends them back to conductor:\n\nhttps://github.com/openstack/nova/blob/master/nova/conductor/tasks/live_migrate.py#L156\n\nHere we calculate block migration, this is fine:\n\nhttps://github.com/openstack/nova/blob/master/nova/virt/libvirt/driver.py#L5554\n\nThen it goes back to conductor and we call compute manager sending both flags - block_migration and migrate_data.block_migration - but we never change value of block_migration to match migrate_data.block_migration:\n\nhttps://github.com/openstack/nova/blob/master/nova/conductor/tasks/live_migrate.py#L68\n\nBecause down in compute manager (and in drivers) we use both flags that have different values (here block_migration=None, migrate_data.block_migration=True), e.g. at this point block_migration=None:\n\nhttps://github.com/openstack/nova/blob/master/nova/compute/manager.py#L5196\n\nWe break all block live migrations with:\n\nTraceback (most recent call last):\n\u00a0\u00a0File \"/usr/local/lib/python2.7/dist-packages/eventlet/hubs/hub.py\", line 457, in fire_timers\n\u00a0\u00a0\u00a0\u00a0timer()\n\u00a0\u00a0File \"/usr/local/lib/python2.7/dist-packages/eventlet/hubs/timer.py\", line 58, in __call__\n\u00a0\u00a0\u00a0\u00a0cb(*args, **kw)\n\u00a0\u00a0File \"/usr/local/lib/python2.7/dist-packages/eventlet/event.py\", line 168, in _do_send\n\u00a0\u00a0\u00a0\u00a0waiter.switch(result)\n\u00a0\u00a0File \"/usr/local/lib/python2.7/dist-packages/eventlet/greenthread.py\", line 214, in main\n\u00a0\u00a0\u00a0\u00a0result = function(*args, **kwargs)\n\u00a0\u00a0File \"/opt/stack/nova/nova/utils.py\", line 1160, in context_wrapper\n\u00a0\u00a0\u00a0\u00a0return func(*args, **kwargs)\n\u00a0\u00a0File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 6095, in _live_migration_operation\n\u00a0\u00a0\u00a0\u00a0instance=instance)\n\u00a0\u00a0File \"/usr/local/lib/python2.7/dist-packages/oslo_utils/excutils.py\", line 220, in __exit__\n\u00a0\u00a0\u00a0\u00a0self.force_reraise()\n\u00a0\u00a0File \"/usr/local/lib/python2.7/dist-packages/oslo_utils/excutils.py\", line 196, in force_reraise\n\u00a0\u00a0\u00a0\u00a0six.reraise(self.type_, self.value, self.tb)\n\u00a0\u00a0File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 6063, in _live_migration_operation\n\u00a0\u00a0\u00a0\u00a0CONF.libvirt.live_migration_bandwidth)\n\u00a0\u00a0File \"/usr/local/lib/python2.7/dist-packages/eventlet/tpool.py\", line 186, in doit\n\u00a0\u00a0\u00a0\u00a0result = proxy_call(self._autowrap, f, *args, **kwargs)\n\u00a0\u00a0File \"/usr/local/lib/python2.7/dist-packages/eventlet/tpool.py\", line 144, in proxy_call\n\u00a0\u00a0\u00a0\u00a0rv = execute(f, *args, **kwargs)\n\u00a0\u00a0File \"/usr/local/lib/python2.7/dist-packages/eventlet/tpool.py\", line 125, in execute\n\u00a0\u00a0\u00a0\u00a0six.reraise(c, e, tb)\n\u00a0\u00a0File \"/usr/local/lib/python2.7/dist-packages/eventlet/tpool.py\", line 83, in tworker\n\u00a0\u00a0\u00a0\u00a0rv = meth(*args, **kwargs)\n\u00a0\u00a0File \"/usr/local/lib/python2.7/dist-packages/libvirt.py\", line 1825, in migrateToURI2\n\u00a0\u00a0\u00a0\u00a0if ret == -1: raise libvirtError ('virDomainMigrateToURI2() failed', dom=self)\nlibvirtError: Cannot access storage file '/opt/stack/data/nova/instances/572ad149-b7c5-4b77-85b5-34c1d2d37fcf/disk' (as uid:110, gid:116): No such file or directory\n\nFast workaround is making sure at compute manager level that block_migration == migrate_data.block_migration, but really we should cleanup all this mess and send only one flag, because it is error-prone and hard to maintain.", 
    "tags": [
        "live-migration"
    ], 
    "importance": "Critical", 
    "heat": 8, 
    "link": "https://bugs.launchpad.net/nova/+bug/1552303", 
    "owner": "https://api.launchpad.net/1.0/~pawel-koniszewski", 
    "id": 1552303, 
    "index": 275, 
    "created": "2016-03-02 16:13:45.010171+00:00", 
    "title": "Block live migrations are broken when nova calculates live migration type by itself", 
    "comments": [
        {
            "content": "All block live migrations are broken when I want nova to calculate live migration type by specifying {'block_migration': 'auto'} in request body. This happens because block_migration and migrate_data.block_migration flags do not have the same value.\n\nIn conductor live migrate task we call checks on destination and source that builds up migrate_data in driver and sends them back to conductor:\n\nhttps://github.com/openstack/nova/blob/master/nova/conductor/tasks/live_migrate.py#L156\n\nHere we calculate block migration, this is fine:\n\nhttps://github.com/openstack/nova/blob/master/nova/virt/libvirt/driver.py#L5554\n\nThen it goes back to conductor and we call compute manager sending both flags - block_migration and migrate_data.block_migration - but we never changed value of block_migration to match migrate_data.block_migration:\n\nhttps://github.com/openstack/nova/blob/master/nova/conductor/tasks/live_migrate.py#L68\n\nBecause down in compute manager (and in drivers) we use both flags that have different values (here block_migration=None, migrate_data.block_migration=True), e.g. at this point block_migration=None:\n\nhttps://github.com/openstack/nova/blob/master/nova/compute/manager.py#L5196\n\nWe break all block live migrations with:\n\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/dist-packages/eventlet/hubs/hub.py\", line 457, in fire_timers\n    timer()\n  File \"/usr/local/lib/python2.7/dist-packages/eventlet/hubs/timer.py\", line 58, in __call__\n    cb(*args, **kw)\n  File \"/usr/local/lib/python2.7/dist-packages/eventlet/event.py\", line 168, in _do_send\n    waiter.switch(result)\n  File \"/usr/local/lib/python2.7/dist-packages/eventlet/greenthread.py\", line 214, in main\n    result = function(*args, **kwargs)\n  File \"/opt/stack/nova/nova/utils.py\", line 1160, in context_wrapper\n    return func(*args, **kwargs)\n  File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 6095, in _live_migration_operation\n    instance=instance)\n  File \"/usr/local/lib/python2.7/dist-packages/oslo_utils/excutils.py\", line 220, in __exit__\n    self.force_reraise()\n  File \"/usr/local/lib/python2.7/dist-packages/oslo_utils/excutils.py\", line 196, in force_reraise\n    six.reraise(self.type_, self.value, self.tb)\n  File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 6063, in _live_migration_operation\n    CONF.libvirt.live_migration_bandwidth)\n  File \"/usr/local/lib/python2.7/dist-packages/eventlet/tpool.py\", line 186, in doit\n    result = proxy_call(self._autowrap, f, *args, **kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/eventlet/tpool.py\", line 144, in proxy_call\n    rv = execute(f, *args, **kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/eventlet/tpool.py\", line 125, in execute\n    six.reraise(c, e, tb)\n  File \"/usr/local/lib/python2.7/dist-packages/eventlet/tpool.py\", line 83, in tworker\n    rv = meth(*args, **kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/libvirt.py\", line 1825, in migrateToURI2\n    if ret == -1: raise libvirtError ('virDomainMigrateToURI2() failed', dom=self)\nlibvirtError: Cannot access storage file '/opt/stack/data/nova/instances/572ad149-b7c5-4b77-85b5-34c1d2d37fcf/disk' (as uid:110, gid:116): No such file or directory\n\nFast workaround is making sure at compute manager level that block_migration == migrate_data.block_migration, but really we should cleanup all this mess and send only one flag, because it is error-prone and hard to maintain.", 
            "date_created": "2016-03-02 16:13:45.010171+00:00", 
            "author": "https://api.launchpad.net/1.0/~pawel-koniszewski"
        }, 
        {
            "content": "I agree that we should fix it properly and It would be nice to have a tempest test for the case reported in this bug.", 
            "date_created": "2016-03-02 16:32:52.787832+00:00", 
            "author": "https://api.launchpad.net/1.0/~andrea-rosa-m"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/287363", 
            "date_created": "2016-03-02 18:22:58.603116+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "-@Pawel, thank for quick addressing this issue,  I put some comment in the review patch, beside , added tempest case to cover this case.\n\nhttps://review.openstack.org/287605 Add new live_migration case to support block_migration=auto \n\n\n-Eli.", 
            "date_created": "2016-03-03 05:55:42.413263+00:00", 
            "author": "https://api.launchpad.net/1.0/~taget-9"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/287363\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=4378b4fa43aa966aee8ddee77d5220e9c4476b5a\nSubmitter: Jenkins\nBranch:    master\n\ncommit 4378b4fa43aa966aee8ddee77d5220e9c4476b5a\nAuthor: Pawel Koniszewski <email address hidden>\nDate:   Fri Mar 11 16:32:21 2016 +0100\n\n    Use migrate_data.block_migration instead of block_migration\n    \n    Since nova can calculate block_migration we might end up with\n    a case where block_migration is None while migrate_data.block_migration\n    is True.\n    \n    Both drivers that support block live migration, Libvirt and Xenapi,\n    use migrate_data.block_migration already, so we should switch to use\n    it everywhere, instead of in drivers only.\n    \n    Change-Id: Iaa8aea3cb58ed0864a6a38d4a163649f52e32c5c\n    Closes-Bug: #1552303\n", 
            "date_created": "2016-03-14 12:51:46.781945+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/nova 13.0.0.0rc1 release candidate.", 
            "date_created": "2016-03-16 18:00:10.167683+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }
    ]
}