{
    "status": "Fix Released", 
    "last_updated": "2014-04-17 08:57:05.855397+00:00", 
    "description": "when unshelve a vm, if this vm has been offloaded, the process would involve re-scheduling.\nin nova/conductor/manager.py def  unshelve_instance(self, context, instance):\n\nelif instance.vm_state == vm_states.SHELVED_OFFLOADED:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0try:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0with compute_utils.EventReporter(context, self.db,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'get_image_info', instance.uuid):\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image = self._get_image(context,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0sys_meta['shelved_image_id'])\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0except exception.ImageNotFound:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0with excutils.save_and_reraise_exception():\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0LOG.error(_('Unshelve attempted but vm_state not SHELVED '\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'or SHELVED_OFFLOADED'), instance=instance)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0instance.vm_state = vm_states.ERROR\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0instance.save()\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0filter_properties = {}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0hosts = self._schedule_instances(context, image,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0filter_properties,instance)           <<<<<this re-scheduling would cause exception,when it occurs,the \n         <<<<<<instance will be stuck in task_state: unshelving forever\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0host = hosts.pop(0)['host']\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0self.compute_rpcapi.unshelve_instance(context, instance, host,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image)", 
    "tags": [], 
    "importance": "Low", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1248799", 
    "owner": "https://api.launchpad.net/1.0/~jay-lau-513", 
    "id": 1248799, 
    "index": 5955, 
    "created": "2013-11-07 02:44:56.938770+00:00", 
    "title": "vm would be stuck in unshelving when unshelve fails", 
    "comments": [
        {
            "content": "when unshelve a vm, if this vm has been offloaded, the process would involve re-scheduling.\nin nova/conductor/manager.py def  unshelve_instance(self, context, instance):\n\nelif instance.vm_state == vm_states.SHELVED_OFFLOADED:\n            try:\n                with compute_utils.EventReporter(context, self.db,\n                        'get_image_info', instance.uuid):\n                    image = self._get_image(context,\n                            sys_meta['shelved_image_id'])\n            except exception.ImageNotFound:\n                with excutils.save_and_reraise_exception():\n                    LOG.error(_('Unshelve attempted but vm_state not SHELVED '\n                                'or SHELVED_OFFLOADED'), instance=instance)\n                    instance.vm_state = vm_states.ERROR\n                    instance.save()\n\n            filter_properties = {}\n            hosts = self._schedule_instances(context, image,\n                                             filter_properties, instance)                     <<<<<this would cause exception,when it occurs,  the instance wil \n                                                                                                                      <<<<<stuck in task_state: unshelving forever\n            host = hosts.pop(0)['host']\n            self.compute_rpcapi.unshelve_instance(context, instance, host,\n                    image)", 
            "date_created": "2013-11-07 02:44:56.938770+00:00", 
            "author": "https://api.launchpad.net/1.0/~liuhoug"
        }, 
        {
            "content": "I try to fix it by \"try-except-else\" like below:\n\n        elif instance.vm_state == vm_states.SHELVED_OFFLOADED:\n            try:\n                with compute_utils.EventReporter(context, self.db,\n                        'get_image_info', instance.uuid):\n                    image = self._get_image(context,\n                            sys_meta['shelved_image_id'])\n            except exception.ImageNotFound:\n                with excutils.save_and_reraise_exception():\n                    LOG.error(_('Unshelve attempted but vm_state not SHELVED '\n                                'or SHELVED_OFFLOADED'), instance=instance)\n                    instance.vm_state = vm_states.ERROR\n                    instance.save()\n\n            try:\n                filter_properties = {}\n                hosts = self._schedule_instances(context, image,\n                                             filter_properties, instance)\n                host = hosts.pop(0)['host']\n            except:\n                instance.task_state = None\n                instance.save()\n                return\n            else:\n                self.compute_rpcapi.unshelve_instance(context, instance, host,\n                        image)", 
            "date_created": "2013-11-07 02:52:30.311791+00:00", 
            "author": "https://api.launchpad.net/1.0/~liuhoug"
        }, 
        {
            "content": "hougangliu: There should be some better handling of scheduling failures, but I think your proposal needs to do a little more to make it visible to the user that something went wrong.  Adding a 'with compute_utils.EventReporter(...)' block will at least expose the error to an end user. ", 
            "date_created": "2013-11-14 17:31:48.095292+00:00", 
            "author": "https://api.launchpad.net/1.0/~alaski"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/58086", 
            "date_created": "2013-11-23 07:40:35.790102+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/58086\nCommitted: http://github.com/openstack/nova/commit/c8ded6429616b798947072a62cb1b5ee4ea51209\nSubmitter: Jenkins\nBranch:    master\n\ncommit c8ded6429616b798947072a62cb1b5ee4ea51209\nAuthor: Jay Lau <email address hidden>\nDate:   Tue Nov 26 05:55:10 2013 +0800\n\n    instance state will be stuck in unshelving when unshelve fails\n    \n    When unshelve an instance, if this instance has been offloaded,\n    the conductor manager will involve re-schedule for the instance.\n    If re-schedule failed to find a target host for the unsleved\n    instance, then the instance will be stuck in unshelving state.\n    \n    This patch fix the issue as this: If re-schedule failed to find a\n    target host for unshelve the instance, then conductor manager will\n    try to rollback the instance to unshelve state.\n    \n    Change-Id: If49b2d2c9263b853c745ce25fe146ade51948123\n    Closes-Bug: #1248799\n", 
            "date_created": "2013-11-28 16:28:14.262057+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}