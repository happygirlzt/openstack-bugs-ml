{
    "status": "Fix Released", 
    "last_updated": "2013-10-17 11:41:49.260732+00:00", 
    "description": "https://bugzilla.redhat.com/show_bug.cgi?id=918761\n\nSummarizing the downstream bug report, if we do something silly like CONFIG_NOVA_NETWORK_FLOATRANGE=192.168.2.224/2 , which creates an unreasonably huge number of floating IP addresses, nova-manage can run out of memory.\n\nThe workaround is to loop over the range and not create more than BIG_NOT_HUGE_NUMBER of floating IP addresses in one call to floating_ip_bulk_create.  (At which point trying to create a silly number of floating IPs would probably still fail, but with a better exception related to exhausting IP address, rather than an OutOfMemoryError.)", 
    "tags": [], 
    "importance": "Medium", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1163394", 
    "owner": "https://api.launchpad.net/1.0/~dripton", 
    "id": 1163394, 
    "index": 3333, 
    "created": "2013-04-02 15:40:15.576233+00:00", 
    "title": "nova-manage out of memory error creating many floating IPs", 
    "comments": [
        {
            "content": "https://bugzilla.redhat.com/show_bug.cgi?id=918761\n\nSummarizing the downstream bug report, if we do something silly like CONFIG_NOVA_NETWORK_FLOATRANGE=192.168.2.224/2 , which creates an unreasonably huge number of floating IP addresses, nova-manage can run out of memory.\n\nThe workaround is to loop over the range and not create more than BIG_NOT_HUGE_NUMBER of floating IP addresses in one call to floating_ip_bulk_create.  (At which point trying to create a silly number of floating IPs would probably still fail, but with a better exception related to exhausting IP address, rather than an OutOfMemoryError.)", 
            "date_created": "2013-04-02 15:40:15.576233+00:00", 
            "author": "https://api.launchpad.net/1.0/~dripton"
        }, 
        {
            "content": "floating_ip_bulk_create reads all existing floating IPs out of the database and shoves them into a dict.  So fixing nova-manage to work in chunks will actually just move the problem, and we'll run out of memory in floating_ip_bulk_create instead.\n\nSo I think the real fix is to make nova-manage FloatingIpCommands.address_to_hosts raise an exception up front if we give it silly input like \"192.168.2.224/2\", rather than having it attempt to create millions of IPs then blow up later.", 
            "date_created": "2013-04-02 16:18:28.086555+00:00", 
            "author": "https://api.launchpad.net/1.0/~dripton"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/25918", 
            "date_created": "2013-04-02 16:26:36.076968+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/25918\nCommitted: http://github.com/openstack/nova/commit/34de8d1529fb9a2e7fad096a6967b9a483ab0cb0\nSubmitter: Jenkins\nBranch:    master\n\ncommit 34de8d1529fb9a2e7fad096a6967b9a483ab0cb0\nAuthor: David Ripton <email address hidden>\nDate:   Tue Apr 2 12:19:17 2013 -0400\n\n    Raise rather than generating millions of IPs.\n    \n    Fixes bug #1163394\n    \n    Formerly if we tried to create many millions of floating IPs with a\n    range like \"192.168.2.224/2\", address_to_hosts would happily iterate\n    over all of them (which would take a long time) and then nova-manage\n    would eventually crash with an OutOfMemoryError when we tried putting\n    all of them in a list.  Or, if the initial list wasn't quite big\n    enough to use all memory, it would blow up later (even more slowly)\n    when we tried to put them in the database via SQLAlchemy.\n    \n    Now, raise exception.InvalidInput if the number of IPs is a million\n    or more.  (A million is erring on the side of caution.)\n    \n    Change-Id: Ifc6b6a8faadc2e97e09f9f6c975e52229f705789\n", 
            "date_created": "2013-04-02 19:42:59.194707+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: stable/grizzly\nReview: https://review.openstack.org/27854", 
            "date_created": "2013-04-30 21:55:43.410293+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/27854\nCommitted: http://github.com/openstack/nova/commit/df5d13c29eae64d9c6340aa1cd54de7b3d9b2dcb\nSubmitter: Jenkins\nBranch:    stable/grizzly\n\ncommit df5d13c29eae64d9c6340aa1cd54de7b3d9b2dcb\nAuthor: David Ripton <email address hidden>\nDate:   Tue Apr 2 12:19:17 2013 -0400\n\n    Raise rather than generating millions of IPs.\n    \n    Fixes bug #1163394\n    \n    Formerly if we tried to create many millions of floating IPs with a\n    range like \"192.168.2.224/2\", address_to_hosts would happily iterate\n    over all of them (which would take a long time) and then nova-manage\n    would eventually crash with an OutOfMemoryError when we tried putting\n    all of them in a list.  Or, if the initial list wasn't quite big\n    enough to use all memory, it would blow up later (even more slowly)\n    when we tried to put them in the database via SQLAlchemy.\n    \n    Now, raise exception.InvalidInput if the number of IPs is a million\n    or more.  (A million is erring on the side of caution.)\n    \n    Change-Id: Ifc6b6a8faadc2e97e09f9f6c975e52229f705789\n    (cherry picked from commit 34de8d1529fb9a2e7fad096a6967b9a483ab0cb0)\n", 
            "date_created": "2013-05-02 18:33:50.191711+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}