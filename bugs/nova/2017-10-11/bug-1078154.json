{
    "status": "Fix Released", 
    "last_updated": "2013-04-04 11:08:01.749183+00:00", 
    "description": "This interacts poorly with udev rules on Ubuntu that remember the MAC address of interfaces: the first boot will work as expected, but after a single reboot, eth0 will be missing because eth0 is 'remembered' as the original MAC address of the card, not the nova assigned random address.\n\nSimilar issues can be predicted for Windows, other Linux distributions and most operating systems: manually assigned NIC MAC addresses are the exception, not the rule.\n\nThe baremetal code was written to do this for consistency with nova VM based instances, but VM's are running with virtual hardware: there the NIC MAC address is not overriden by the operating system, but configured to be what nova expects in the hypervisor. There isn't a generic mechanism to do that for baremetal.\n\nA list discussion was held; the the most sensible answer, at least for hardware with real MAC addresses like PXE booting i386/amd64 class machines, is to not override the MAC address at all. However, this does entail the bare metal driver being able to set the MAC address for an instance rather than nova dynamically allocating it.", 
    "tags": [
        "baremetal"
    ], 
    "importance": "High", 
    "heat": 10, 
    "link": "https://bugs.launchpad.net/nova/+bug/1078154", 
    "owner": "https://api.launchpad.net/1.0/~lifeless", 
    "id": 1078154, 
    "index": 877, 
    "created": "2012-11-13 03:06:51.224024+00:00", 
    "title": "nova baremetal overrides network card MAC addresses, interacts poorly with udev persistent rules", 
    "comments": [
        {
            "content": "This interacts poorly with udev rules on Ubuntu that remember the MAC address of interfaces: the first boot will work as expected, but after a single reboot, eth0 will be missing because eth0 is 'remembered' as the original MAC address of the card, not the nova assigned random address.\n\nSimilar issues can be predicted for Windows, other Linux distributions and most operating systems: manually assigned NIC MAC addresses are the exception, not the rule.\n\nThe baremetal code was written to do this for consistency with nova VM based instances, but VM's are running with virtual hardware: there the NIC MAC address is not overriden by the operating system, but configured to be what nova expects in the hypervisor. There isn't a generic mechanism to do that for baremetal.\n\nA list discussion was held; the the most sensible answer, at least for hardware with real MAC addresses like PXE booting i386/amd64 class machines, is to not override the MAC address at all. However, this does entail the bare metal driver being able to set the MAC address for an instance rather than nova dynamically allocating it.", 
            "date_created": "2012-11-13 03:06:51.224024+00:00", 
            "author": "https://api.launchpad.net/1.0/~lifeless"
        }, 
        {
            "content": "(I would triage this but I don't have permissions). Whomever does - I suggest triaged, high, as this is going to bite many folk who try to use bare-metal.", 
            "date_created": "2012-11-13 03:09:41.580483+00:00", 
            "author": "https://api.launchpad.net/1.0/~lifeless"
        }, 
        {
            "content": "Further notes - the pxe file writes to  /etc/udev/rules.d/70-persistent-net.rules as an attempt to mitigate this, but it writes the stored macs, not the nova assigned ones, which actually makes the confusion worse.", 
            "date_created": "2012-11-15 00:09:32.926252+00:00", 
            "author": "https://api.launchpad.net/1.0/~lifeless"
        }
    ]
}