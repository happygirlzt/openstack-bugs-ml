{
    "status": "Invalid", 
    "last_updated": "2013-12-05 23:28:05.314404+00:00", 
    "description": "As far as I can tell, there is no policy check for resource ownership.\n\nThe current policy checks support: all, none, role-membership, and tenant-membership. This means that the most minimal policy for an action, e.g. \"compute:delete\" is \"role:Name and tenant_id:%(tenant_id)s\".\nThis role would allows any member of a project to delete any instance, which is a problem!\n\nWe need something like:\n\"owns:%(resource_id)\" which checks the \"user_id\" field associated with the resource?", 
    "tags": [
        "ops", 
        "security"
    ], 
    "importance": "Wishlist", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1187104", 
    "owner": "None", 
    "id": 1187104, 
    "index": 1373, 
    "created": "2013-06-03 19:26:40.528678+00:00", 
    "title": "Implement policy check for object ownership", 
    "comments": [
        {
            "content": "As far as I can tell, there is no policy check for resource ownership.\n\nThe current policy checks support: all, none, role-membership, and tenant-membership. This means that the most minimal policy for an action, e.g. \"compute:delete\" is \"role:Name and tenant_id:%(tenant_id)s\".\nThis role would allows any member of a project to delete any instance, which is a problem!\n\nWe need something like:\n\"owns:%(resource_id)\" which checks the \"user_id\" field associated with the resource?", 
            "date_created": "2013-06-03 19:26:40.528678+00:00", 
            "author": "https://api.launchpad.net/1.0/~scott-devoid"
        }, 
        {
            "content": "You are correct that there is no 'owns' check, but the policy engine does support checking against arbitrary fields in a 'target'.  In a lot(most?) of those checks that occur in the compute/api.py layer, vs the wsgi layer, the target is an instance dict so something like user_id:%(user_id)s would work.  Now, that's not universally true so there may be specific checks that could use a more robust target to check against, and I would suggest opening bugs for specific checks in that case.  So I marked this as invalid because I think it's a bit general and is somewhat supported.  But please open reports for specific policy checks that are too limiting.\n\nIf you're interested in expanding the policy engine capabilities to support an owns resource that would fall under a blueprint rather than a bug report.", 
            "date_created": "2013-06-14 18:14:30.047622+00:00", 
            "author": "https://api.launchpad.net/1.0/~alaski"
        }, 
        {
            "content": "That's reasonable. A few clarification questions; please forgive me if these are dumb, but I'm new to OS.\n\n1. Where is the separation between 'wsgi' and compute/api.py layers?\n\n2. From what I can tell, to get the \"openstack.common.policy.GenericCheck\" to have an \"ownership\" check, we'd need to add \"owner_id\" to the target and make sure \"user_id\" was in the credentials? \"user_id:%(user_id)s\" should always return true since target[\"user_id\"] is the user in the credential?\n\n3. Is there someone who has detailed knowledge of the policy stuff? Looking over the code, I'm going to have trouble landing anything without a lay-of-the-land.\n\n4. Would expansions to the policy engine fall under the oslo project? How are changes to both oslo and nova gated? I can already see that nova.policy calls openstack.common.policy.check but in oslo-incubator that function no longer exists.", 
            "date_created": "2013-06-17 18:09:43.146830+00:00", 
            "author": "https://api.launchpad.net/1.0/~scott-devoid"
        }
    ]
}