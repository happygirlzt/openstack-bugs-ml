{
    "status": "Incomplete", 
    "last_updated": "2017-10-11 16:59:34.572343+00:00", 
    "description": "Description\n===========\nWhen launching an instance over  dashboard, a 404 code is returned (  Instance XX-XX-XX could not be found ).\nSame issue occurs when you make it through nova client, but it has no effect.\nIn both tasks the instance is created.\nYou can see a \"HTTP exception thrown:\" in the nova-api logfile.\n\n\nSteps to reproduce\n==================\nA chronological list of steps which will bring off the\nissue you noticed:\n* upgraded all nodes to CentoS 7.3\n* no issues\n* upgraded from newton to ocata (RDO) \n* 404 issue\n\n\n* launching an instance through dashboard.\nThe instance has been added but a 404 returned.\nSo an error is displayed in dashboard interface (see create_instance_error.png)\n\nFor testing purposes i used curl.\nsee output.txt\n\n\n* launching an instance using nova client\nSame error occurs but it has no effect.\n\nsee output.txt\n\n\nExpected result\n===============\nA new instance launched and the wizard should be closed.\n\nActual result\n=============\nI get an 404 Code and the \"instance wizard\" is still open although the instances was created and is running.\n\nEnvironment\n===========\nopenstack-nova-console-15.0.0-1.el7\npython-nova-15.0.0-1.el7\nopenstack-nova-placement-api-15.0.0-1.el7\npython2-novaclient-7.1.0-1.el7\nopenstack-nova-scheduler-15.0.0-1.el7\nopenstack-nova-conductor-15.0.0-1.el7\nopenstack-nova-novncproxy-15.0.0-1.el7\nopenstack-nova-api-15.0.0-1.el7\nopenstack-nova-common-15.0.0-1.el7\nopenstack-nova-cert-15.0.0-1.el7\nopenstack-dashboard-11.0.0-1.el7\npython-networking-bgpvpn-dashboard-6.0.0-0.1.681a5e7git.el7\n\n\nLogs & Configs\n==============\nsee nova-api-logs.txt", 
    "tags": [
        "api", 
        "cells", 
        "openstack-version.ocata"
    ], 
    "importance": "Undecided", 
    "heat": 26, 
    "link": "https://bugs.launchpad.net/nova/+bug/1682423", 
    "owner": "None", 
    "id": 1682423, 
    "index": 6787, 
    "created": "2017-04-13 12:51:19.388550+00:00", 
    "title": "create instance with dashbaord / 404 returned", 
    "comments": [
        {
            "content": "Description\n===========\nWhen launching an instance over  dashboard, a 404 code is returned (  Instance XX-XX-XX could not be found ).\nSame issue occurs when you make it through nova client, but it has no effect.\nIn both tasks the instance is created.\nYou can see a \"HTTP exception thrown:\" in the nova-api logfile.\n\n\nSteps to reproduce\n==================\nA chronological list of steps which will bring off the\nissue you noticed:\n* upgraded all nodes to CentoS 7.3\n* no issues\n* upgraded from newton to ocata (RDO) \n* 404 issue\n\n\n* launching an instance through dashboard.\nThe instance has been added but a 404 returned.\nSo an error is displayed in dashboard interface (see create_instance_error.png)\n\nFor testing purposes i used curl.\nsee output.txt\n\n\n* launching an instance using nova client\nSame error occurs but it has no effect.\n\nsee output.txt\n\n\nExpected result\n===============\nA new instance launched and the wizard should be closed.\n\nActual result\n=============\nI get an 404 Code and the \"instance wizard\" is still open although the instances was created and is running.\n\nEnvironment\n===========\nopenstack-nova-console-15.0.0-1.el7\npython-nova-15.0.0-1.el7\nopenstack-nova-placement-api-15.0.0-1.el7\npython2-novaclient-7.1.0-1.el7\nopenstack-nova-scheduler-15.0.0-1.el7\nopenstack-nova-conductor-15.0.0-1.el7\nopenstack-nova-novncproxy-15.0.0-1.el7\nopenstack-nova-api-15.0.0-1.el7\nopenstack-nova-common-15.0.0-1.el7\nopenstack-nova-cert-15.0.0-1.el7\nopenstack-dashboard-11.0.0-1.el7\npython-networking-bgpvpn-dashboard-6.0.0-0.1.681a5e7git.el7\n\n\nLogs & Configs\n==============\nsee nova-api-logs.txt", 
            "date_created": "2017-04-13 12:51:19.388550+00:00", 
            "author": "https://api.launchpad.net/1.0/~b-krieger"
        }, 
        {
            "content": "", 
            "date_created": "2017-04-13 12:51:44.024481+00:00", 
            "author": "https://api.launchpad.net/1.0/~b-krieger"
        }, 
        {
            "content": "", 
            "date_created": "2017-04-13 12:52:03.261097+00:00", 
            "author": "https://api.launchpad.net/1.0/~b-krieger"
        }, 
        {
            "content": "", 
            "date_created": "2017-04-13 12:52:18.092566+00:00", 
            "author": "https://api.launchpad.net/1.0/~b-krieger"
        }, 
        {
            "content": "Automatically discovered version ocata in description. If this is incorrect, please update the description to include 'nova version: ...'", 
            "date_created": "2017-06-27 15:57:05.425093+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "The nova message seems to be that the flavor was not found? Without debug level logs it's not really possible to get any further with this.", 
            "date_created": "2017-07-24 15:29:10.373448+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "How reproducible is this? I would think that tempest would catch this easily, since it does this pattern quite a bit.", 
            "date_created": "2017-07-24 15:29:47.590741+00:00", 
            "author": "https://api.launchpad.net/1.0/~danms"
        }, 
        {
            "content": "I hit the same thing when I upgraded to Ocata. I meant to update this issue after resolving, but out of mind...\n\nI believe the issue was that not all of the compute nodes were successfully upgraded, so the messages are limited to an older version, and one of these failed. In my case, I went from Newton to Ocata, and upgraded all of the *active* compute nodes, but it turned out there were other *inactive* compute nodes still registered in the database, and these prevented the API from deciding that it was safe to use the newer messaging version.\n\nI think there is a bug here, but I got past it by deleted the stale records from the database and restarting Nova. This allowed it to detect the latest version for all of the compute nodes, and switch to the Ocata messaging version.\n", 
            "date_created": "2017-07-25 23:14:55.232380+00:00", 
            "author": "https://api.launchpad.net/1.0/~mark-mielke"
        }, 
        {
            "content": "Hi,\n\nwe're currently facing this issue. We have a fresh new ocata installation, and getting the same error\nwhen trying to start an instance. The instance starts fine, no issues beside that it reports an\ninstance not found (404) when creating it. But this is not only cosmetic in this case, it breaks\ntempest tests for example. If someone is willing to dig into it, i'm happy to provide what ever\npossible. Because i'm currently out of ideas how to fix this. We checked our rabbits first, as we\nthought this might be related, but the cluster looks good, no issues so far.\n\nCheers,\nSven", 
            "date_created": "2017-08-03 09:49:27.783266+00:00", 
            "author": "https://api.launchpad.net/1.0/~smichels"
        }, 
        {
            "content": "Hi Sven:\n\nSee my explanation. While there probably is a bug, you probably don't want to wait for the fix. If you have the same problem as I did, which seems likely, then you need to confirm that *all* of your services are upgraded to Ocata version, and reporting in. You may have to check your database to see which services are not updated yet, and you may find they are machines that you are no longer using, as I did.", 
            "date_created": "2017-08-03 13:52:38.186246+00:00", 
            "author": "https://api.launchpad.net/1.0/~mark-mielke"
        }, 
        {
            "content": "Hey Mark,\n\nbut we're having a new installation... so this should not be the\ncase in our case. So you found nothing else related to it?\n\nCheers and thanks,\nSven", 
            "date_created": "2017-08-07 15:12:34.436136+00:00", 
            "author": "https://api.launchpad.net/1.0/~smichels"
        }, 
        {
            "content": "When adding an instance by CLI, a 404 will be returned too.\nBut the error has no effect except the instance is added by dashboard.\n\nTo override the error i added a sleep at 2360 in file /usr/lib/python2.7/site-packages/nova/compute/api.py to delay the fetch request.\n\n\ntime.sleep(1.0) \ntry:\nif uuidutils.is_uuid_like(instance_id):\n    LOG.debug(\"Fetching instance by UUID\",\n    instance_uuid=instance_id)\n\n\nI attached the debug output and the nova-api.log.\n\n\n\n\n\n\n", 
            "date_created": "2017-08-08 07:17:16.917946+00:00", 
            "author": "https://api.launchpad.net/1.0/~b-krieger"
        }, 
        {
            "content": "This didn't fix it for me, unfortunately :(\n\nWe're now at the latest available ocata packages, but the issue is still there.", 
            "date_created": "2017-08-11 11:58:06.777372+00:00", 
            "author": "https://api.launchpad.net/1.0/~smichels"
        }, 
        {
            "content": "In my case, it was due to the messaging protocol mismatch. As soon as I\nensured that the API server recognized all agents at the latest level, the\nproblem cleared. The symptoms seem similar, so I expect even though this is\na new installation, you may still be hitting this somehow. For example...\nhave you pinned the messaging version in the conf files?\n\nFor me, it was a lot of hours of tracking down exactly what was going on. I\neventually traced it into the database where I found rows that recorded the\nnodes at older messaging versions, and they were machines I didn't even\nhave online as they had been replaced long ago. Clearing those out was all\nthat it took...\n\n\nOn Mon, Aug 7, 2017 at 11:12 AM, Sven Michels <email address hidden> wrote:\n\n> Hey Mark,\n>\n> but we're having a new installation... so this should not be the\n> case in our case. So you found nothing else related to it?\n>\n> Cheers and thanks,\n> Sven\n>\n> --\n> You received this bug notification because you are subscribed to the bug\n> report.\n> https://bugs.launchpad.net/bugs/1682423\n>\n> Title:\n>   create instance with dashbaord / 404 returned\n>\n> Status in OpenStack Compute (nova):\n>   Incomplete\n>\n> Bug description:\n>   Description\n>   ===========\n>   When launching an instance over  dashboard, a 404 code is returned (\n> Instance XX-XX-XX could not be found ).\n>   Same issue occurs when you make it through nova client, but it has no\n> effect.\n>   In both tasks the instance is created.\n>   You can see a \"HTTP exception thrown:\" in the nova-api logfile.\n>\n>\n>   Steps to reproduce\n>   ==================\n>   A chronological list of steps which will bring off the\n>   issue you noticed:\n>   * upgraded all nodes to CentoS 7.3\n>   * no issues\n>   * upgraded from newton to ocata (RDO)\n>   * 404 issue\n>\n>\n>   * launching an instance through dashboard.\n>   The instance has been added but a 404 returned.\n>   So an error is displayed in dashboard interface (see\n> create_instance_error.png)\n>\n>   For testing purposes i used curl.\n>   see output.txt\n>\n>\n>   * launching an instance using nova client\n>   Same error occurs but it has no effect.\n>\n>   see output.txt\n>\n>\n>   Expected result\n>   ===============\n>   A new instance launched and the wizard should be closed.\n>\n>   Actual result\n>   =============\n>   I get an 404 Code and the \"instance wizard\" is still open although the\n> instances was created and is running.\n>\n>   Environment\n>   ===========\n>   openstack-nova-console-15.0.0-1.el7\n>   python-nova-15.0.0-1.el7\n>   openstack-nova-placement-api-15.0.0-1.el7\n>   python2-novaclient-7.1.0-1.el7\n>   openstack-nova-scheduler-15.0.0-1.el7\n>   openstack-nova-conductor-15.0.0-1.el7\n>   openstack-nova-novncproxy-15.0.0-1.el7\n>   openstack-nova-api-15.0.0-1.el7\n>   openstack-nova-common-15.0.0-1.el7\n>   openstack-nova-cert-15.0.0-1.el7\n>   openstack-dashboard-11.0.0-1.el7\n>   python-networking-bgpvpn-dashboard-6.0.0-0.1.681a5e7git.el7\n>\n>\n>   Logs & Configs\n>   ==============\n>   see nova-api-logs.txt\n>\n> To manage notifications about this bug go to:\n> https://bugs.launchpad.net/nova/+bug/1682423/+subscriptions\n>\n\n\n\n-- \nMark Mielke <email address hidden>\n", 
            "date_created": "2017-08-11 12:52:28+00:00", 
            "author": "https://api.launchpad.net/1.0/~mark-mielke"
        }, 
        {
            "content": "[Expired for OpenStack Compute (nova) because there has been no activity for 60 days.]", 
            "date_created": "2017-10-11 04:17:33.688983+00:00", 
            "author": "https://api.launchpad.net/1.0/~janitor"
        }, 
        {
            "content": "I've tried Bernards workaround and it's working.\n\n--- api.py\t2017-10-10 14:40:14.384511170 +0200\n+++ api.py.patched\t2017-10-10 14:40:46.192451521 +0200\n@@ -83,6 +83,7 @@\n from nova import utils\n from nova.virt import hardware\n from nova.volume import cinder\n+from time import sleep\n \n LOG = logging.getLogger(__name__)\n \n@@ -2354,6 +2355,7 @@\n         expected_attrs.extend(['metadata', 'system_metadata',\n                                'security_groups', 'info_cache'])\n         # NOTE(ameade): we still need to support integer ids for ec2\n+        sleep(1.0)\n         try:\n             if uuidutils.is_uuid_like(instance_id):\n                 LOG.debug(\"Fetching instance by UUID\",\n", 
            "date_created": "2017-10-11 07:43:58.193018+00:00", 
            "author": "https://api.launchpad.net/1.0/~kisahm"
        }, 
        {
            "content": "There is some confusion here about different issues and how this is not working.\n\nThe sleep workaround that Bernhard is using is totally unrelated to anything with service versions or message version pins in the services that Mark is talking about.\n\nWhat Bernhard (and others) are likely hitting with the 404 immediately after the server is created, is that in Ocata we now do this when creating a server:\n\n1. The API service creates a build request (in the nova_api.build_requests table) which is temporary until the instance is created in a cell database.\n2. The API casts to conductor to continue building the instance.\n3. The conductor service asks the scheduler for a host on which to build the instance, and that host is mapped to a cell via the nova_api.host_mappings table.\n4. Once a host is chosen, conductor creates the instance in the cell database and deletes the build request record in the API database.\n\nWhile this is happening, if requests are coming into the API to get the instance, the API code is going to lookup the instance in the cell database via it's nova_api.instance_mappings record. If the instance is not mapped to a cell yet, the API will lookup the build request record and use that to return details about the instance while it's building.\n\nThere should be no window of time where neither exist and you get a 404.\n\nI do remember there being some intermittent Tempest failures because of a window of time where the build request was gone but the instance wasn't mapped to the cell, but we fixed that and it should already be in Ocata.\n\nWhat version of Ocata are people experiencing this issue? If you're still at 15.0.0 then you need to upgrade the controller services to make sure you have the latest fixes.", 
            "date_created": "2017-10-11 16:18:02.430044+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "What Mark was hitting was maybe this check for a minimum service version:\n\nhttps://github.com/openstack/nova/blob/15.0.0/nova/compute/api.py#L2263\n\nBut that's a minimum service version check on the nova-api service, not the nova-compute services. So I'm not sure why stale dead compute services would have any influence there.", 
            "date_created": "2017-10-11 16:25:47.544784+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "https://review.openstack.org/#/c/427782/ was a change that made it into 15.0.0 Ocata GA.\n\nHowever, looking at the code:\n\n- we create an instance mapping record during instance create:\n\nhttps://github.com/openstack/nova/blob/15.0.0/nova/compute/api.py#L1006\n\n- assuming you make it this far (and your nova-api service version is >=15\n\nhttps://github.com/openstack/nova/blob/15.0.0/nova/compute/api.py#L2271\n\nWe get the instance mapping for the instance, created above. The instance might not be in a cell at this point though.\n\n- if the instance is not yet in a cell, we get the representation from the build request:\n\nhttps://github.com/openstack/nova/blob/15.0.0/nova/compute/api.py#L2281\n\n--\n\nThe only other thing I remember affecting that nova-osapi_compute service version check in Ocata was if people are running nova-api under uwsgi or mod_wsgi, as the API service version isn't set then, but running the API under uwsgi wasn't supported in Ocata anyway - so can people confirm that is not how they are running the API?", 
            "date_created": "2017-10-11 16:34:44.860347+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "The workaround with the 1 second sleep seems to suggest there is a race window where the instance is not mapped to a cell yet but the build request is also gone, which shouldn't happen as we create the instance in the cell before deleting the build request:\n\nhttps://github.com/openstack/nova/blob/15.0.0/nova/conductor/manager.py#L914\n\nhttps://github.com/openstack/nova/blob/15.0.0/nova/conductor/manager.py#L937\n\nSo while it's possible for the instance to be created in the cell database but the instance mapping record isn't yet updated, we account for that when looking up the instance here:\n\nhttps://github.com/openstack/nova/blob/15.0.0/nova/compute/api.py#L2276\n\nand here:\n\nhttps://github.com/openstack/nova/blob/15.0.0/nova/compute/api.py#L2289", 
            "date_created": "2017-10-11 16:47:35.637888+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }
    ]
}