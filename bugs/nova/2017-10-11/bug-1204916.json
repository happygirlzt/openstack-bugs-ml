{
    "status": "Fix Released", 
    "last_updated": "2013-10-17 12:03:24.585032+00:00", 
    "description": "Requesting a list of servers through the API runs some queries that become more expensive when there are no instances returned.\n\nExample:\n\n/usr/local/lib/python2.7/dist-packages/sqlalchemy/sql/expression.py:1927: SAWarning: The IN-predicate on \"instance_system_metadata.instance_u\nuid\" was invoked with an empty sequence. This results in a contradiction, which nonetheless can be expensive to evaluate.  Consider alternati\nve strategies for improved performance.\n  return self._in_impl(operators.in_op, operators.notin_op, other)\n2013-07-24 20:42:46.126 DEBUG sqlalchemy.pool.QueuePool [-] Connection <_mysql.connection open to 'localhost' at 60bc290> checked out from po\nol from (pid=24610) __init__ /usr/local/lib/python2.7/dist-packages/sqlalchemy/pool.py:415\n2013-07-24 20:42:46.127 INFO sqlalchemy.engine.base.Engine [-] SELECT instance_system_metadata.created_at AS instance_system_metadata_created_at, instance_system_metadata.updated_at AS instance_system_metadata_updated_at, instance_system_metadata.deleted_at AS instance_system_metadata_deleted_at, instance_system_metadata.deleted AS instance_system_metadata_deleted, instance_system_metadata.id AS instance_system_metadata_id, instance_system_metadata.`key` AS instance_system_metadata_key, instance_system_metadata.value AS instance_system_metadata_value, instance_system_metadata.instance_uuid AS instance_system_metadata_instance_uuid \nFROM instance_system_metadata \nWHERE instance_system_metadata.deleted = %s AND instance_system_metadata.instance_uuid != instance_system_metadata.instance_uuid\n\ninstance_system_metadata, instance_metadata, and instance_faults all do the same thing.  You can see by the WHERE clause that this will not return any rows, but it still scans a large part of the tables.", 
    "tags": [], 
    "importance": "Low", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1204916", 
    "owner": "https://api.launchpad.net/1.0/~alaski", 
    "id": 1204916, 
    "index": 5827, 
    "created": "2013-07-25 13:56:25.008132+00:00", 
    "title": "Empty nova list causes expensive in predicate queries", 
    "comments": [
        {
            "content": "Requesting a list of servers through the API runs some queries that become more expensive when there are no instances returned.\n\nExample:\n\n/usr/local/lib/python2.7/dist-packages/sqlalchemy/sql/expression.py:1927: SAWarning: The IN-predicate on \"instance_system_metadata.instance_u\nuid\" was invoked with an empty sequence. This results in a contradiction, which nonetheless can be expensive to evaluate.  Consider alternati\nve strategies for improved performance.\n  return self._in_impl(operators.in_op, operators.notin_op, other)\n2013-07-24 20:42:46.126 DEBUG sqlalchemy.pool.QueuePool [-] Connection <_mysql.connection open to 'localhost' at 60bc290> checked out from po\nol from (pid=24610) __init__ /usr/local/lib/python2.7/dist-packages/sqlalchemy/pool.py:415\n2013-07-24 20:42:46.127 INFO sqlalchemy.engine.base.Engine [-] SELECT instance_system_metadata.created_at AS instance_system_metadata_created_at, instance_system_metadata.updated_at AS instance_system_metadata_updated_at, instance_system_metadata.deleted_at AS instance_system_metadata_deleted_at, instance_system_metadata.deleted AS instance_system_metadata_deleted, instance_system_metadata.id AS instance_system_metadata_id, instance_system_metadata.`key` AS instance_system_metadata_key, instance_system_metadata.value AS instance_system_metadata_value, instance_system_metadata.instance_uuid AS instance_system_metadata_instance_uuid \nFROM instance_system_metadata \nWHERE instance_system_metadata.deleted = %s AND instance_system_metadata.instance_uuid != instance_system_metadata.instance_uuid\n\ninstance_system_metadata, instance_metadata, and instance_faults all do the same thing.  You can see by the WHERE clause that this will not return any rows, but it still scans a large part of the tables.", 
            "date_created": "2013-07-25 13:56:25.008132+00:00", 
            "author": "https://api.launchpad.net/1.0/~alaski"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/38809", 
            "date_created": "2013-07-26 14:02:58.490292+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/38809\nCommitted: http://github.com/openstack/nova/commit/7bbe9752bd0676947b43718a47583c0524e9a8af\nSubmitter: Jenkins\nBranch:    master\n\ncommit 7bbe9752bd0676947b43718a47583c0524e9a8af\nAuthor: Andrew Laski <email address hidden>\nDate:   Fri Jul 26 09:53:31 2013 -0400\n\n    Bypass queries which cause a contradiction\n    \n    This addresses the cause of the log lines like:\n    \n    SAWarning: The IN-predicate on \"instance_system_metadata.instance_uuid\"\n    was invoked with an empty sequence. This results in a contradiction,\n    which nonetheless can be expensive to evaluate. Consider alternative\n    strategies for improved performance.\n    \n    for instance_metadata, instance_system_metadata, and instance_faults.\n    \n    It especially helps the case of a call to /servers/detail when there are\n    no servers to list because each of those tables is scanned despite a\n    guarantee that there will be now rows.\n    \n    Bug 1204916\n    \n    Change-Id: I62e65c4409d3e3ab8373eb66450414565c222547\n", 
            "date_created": "2013-07-28 01:42:09.957991+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}