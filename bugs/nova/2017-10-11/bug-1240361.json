{
    "status": "Invalid", 
    "last_updated": "2014-09-15 12:20:31.728780+00:00", 
    "description": "A clean openstack environment. master branch, commit id: 6affe670672f4e2f9f55a750732c620693acd1ef.\n\nIn V3 there is a API named os-quota-sets/detail which report not only the hard_limit of quota, but also\nreport in_use of the quota. Most of the quota usage is correct, but in_use value of 'key_pairs' and \n'security_group_rules' always if zero. The detail is below.\n\n$ nova keypair-list\n+------+-------------------------------------------------+\n| Name | Fingerprint                                     |\n+------+-------------------------------------------------+\n| 1    | 63:70:20:00:6c:31:0d:86:6a:51:7c:c4:fd:f0:49:b6 |\n| 2    | 89:bc:fd:d9:68:41:9d:07:00:06:eb:cd:c9:5e:15:62 |\n| 3    | f4:a0:6e:d5:fa:91:fc:27:db:c1:8f:5f:16:6e:5f:47 |\n+------+-------------------------------------------------+\n\n$ nova secgroup-list-rules a\n+-------------+-----------+---------+-----------+--------------+\n| IP Protocol | From Port | To Port | IP Range  | Source Group |\n+-------------+-----------+---------+-----------+--------------+\n| tcp         | 1         | 80      | 0.0.0.0/0 |              |\n| tcp         | 80        | 81      | 0.0.0.0/0 |              |\n| tcp         | 81        | 82      | 0.0.0.0/0 |              |\n| tcp         | 83        | 84      | 0.0.0.0/0 |              |\n+-------------+-----------+---------+-----------+--------------+\n\n$ curl  http://openstack.org:8774/v3/os-quota-sets/5b36b3bff0f44d70ab45334a9985ae6a/detail .....\n{\n    \"quota_set\": {\n      ....\n            \"key_pairs\": {\n            \"in_use\": 0, \n            \"limit\": 3, \n            \"reserved\": 0\n        }, \n        \"security_group_rules\": {\n            \"in_use\": 0, \n            \"limit\": 20, \n            \"reserved\": 0\n        }, \n        .....\n}\n\nbut when create more keypairs api will raise 413 (Quota exceeded, too many key pairs).\n$ nova keypair-add 4\nERROR: Quota exceeded, too many key pairs. (HTTP 413) (Request-ID: req-7002664c-e0a4-4a51-bfd8-221950278707)\n\n---------------\nThe reason is `key_pairs` and `security_group_rules` is CountableResource. They can't be reserved, \nso quota_usages table does not contains their information. V3 /os-quota-set/detail api just report \nthe usage which is from nova.quota.get_project_quotas(), which come from database table quota_usages. \nA quick workaround is make nova.quota.get_project_quotas()/ nova.quota.get_user_quotas() recognize \nCountableResource and report the correct value of it.", 
    "tags": [
        "api"
    ], 
    "importance": "Medium", 
    "heat": 12, 
    "link": "https://bugs.launchpad.net/nova/+bug/1240361", 
    "owner": "https://api.launchpad.net/1.0/~liyingjun", 
    "id": 1240361, 
    "index": 3650, 
    "created": "2013-10-16 06:28:42.726314+00:00", 
    "title": "v3/os-quota-sets/detail key_pairs, security_group_rules `in_use` value is wrong", 
    "comments": [
        {
            "content": "A clean openstack environment. master branch, commit id: 6affe670672f4e2f9f55a750732c620693acd1ef.\n\nIn V3 there is a API named os-quota-sets/detail which report not only the hard_limit of quota, but also\nreport in_use of the quota. Most of the quota usage is correct, but in_use value of 'key_pairs' and \n'security_group_rules' always if zero. The detail is below.\n\n$ nova keypair-list\n+------+-------------------------------------------------+\n| Name | Fingerprint                                     |\n+------+-------------------------------------------------+\n| 1    | 63:70:20:00:6c:31:0d:86:6a:51:7c:c4:fd:f0:49:b6 |\n| 2    | 89:bc:fd:d9:68:41:9d:07:00:06:eb:cd:c9:5e:15:62 |\n| 3    | f4:a0:6e:d5:fa:91:fc:27:db:c1:8f:5f:16:6e:5f:47 |\n+------+-------------------------------------------------+\n\n$ nova secgroup-list-rules a\n+-------------+-----------+---------+-----------+--------------+\n| IP Protocol | From Port | To Port | IP Range  | Source Group |\n+-------------+-----------+---------+-----------+--------------+\n| tcp         | 1         | 80      | 0.0.0.0/0 |              |\n| tcp         | 80        | 81      | 0.0.0.0/0 |              |\n| tcp         | 81        | 82      | 0.0.0.0/0 |              |\n| tcp         | 83        | 84      | 0.0.0.0/0 |              |\n+-------------+-----------+---------+-----------+--------------+\n\n$ curl  http://openstack.org:8774/v3/os-quota-sets/5b36b3bff0f44d70ab45334a9985ae6a/detail .....\n{\n    \"quota_set\": {\n      ....\n            \"key_pairs\": {\n            \"in_use\": 0, \n            \"limit\": 3, \n            \"reserved\": 0\n        }, \n        \"security_group_rules\": {\n            \"in_use\": 0, \n            \"limit\": 20, \n            \"reserved\": 0\n        }, \n        .....\n}\n\nbut when create more keypairs api will raise 413 (Quota exceeded, too many key pairs).\n$ nova keypair-add 4\nERROR: Quota exceeded, too many key pairs. (HTTP 413) (Request-ID: req-7002664c-e0a4-4a51-bfd8-221950278707)\n\n---------------\nThe reason is `key_pairs` and `security_group_rules` is CountableResource. They can't be reserved, \nso quota_usages table does not contains their information. V3 /os-quota-set/detail api just report \nthe usage which is from nova.quota.get_project_quotas(), which come from database table quota_usages. \nA quick workaround is make nova.quota.get_project_quotas()/ nova.quota.get_user_quotas() recognize \nCountableResource and report the correct value of it.", 
            "date_created": "2013-10-16 06:28:42.726314+00:00", 
            "author": "https://api.launchpad.net/1.0/~gtt116"
        }, 
        {
            "content": "I test it in python shell, the code I used is below.\n\n------\nimport nova\nfrom nova import config\nconfig.parse_args([])\nfrom nova import quota\nfrom nova import context\n\nctx = context.get_admin_context()\nquota.QUOTAS.get_project_quotas(ctx, '5b36b3bff0f44d70ab45334a9985ae6a', usages=True)\n\nOut[7]: \n{'cores': {'in_use': 0, 'limit': 20, 'reserved': 0},\n 'fixed_ips': {'in_use': 0, 'limit': -1, 'reserved': 0},\n 'floating_ips': {'in_use': 0, 'limit': 10, 'reserved': 0},\n 'injected_file_content_bytes': {'in_use': 0, 'limit': 10240, 'reserved': 0},   ### can't reserved\n 'injected_file_path_bytes': {'in_use': 0, 'limit': 255, 'reserved': 0},    ### can't reserved\n 'injected_files': {'in_use': 0, 'limit': 5, 'reserved': 0}, ### can't reserved\n 'instances': {'in_use': 0, 'limit': 10, 'reserved': 0},\n 'key_pairs': {'in_use': 0, 'limit': 3L, 'reserved': 0},  ### can't reserved\n 'metadata_items': {'in_use': 0, 'limit': 128, 'reserved': 0},  ### can't reserved\n 'ram': {'in_use': 0, 'limit': 51200, 'reserved': 0},\n 'security_group_rules': {'in_use': 0, 'limit': 20, 'reserved': 0},  ### can't reserved\n 'security_groups': {'in_use': 2L, 'limit': 10, 'reserved': 0L}}\n---------\nThe quota can't reserved is hard to report usage, because they are not relative to project/user, \nsuch as security_group_rules is relative to security_group. Leaving 'in_use' and 'reserved' to zero\nis not right I think. But removing these item from return value is not good neither.\n", 
            "date_created": "2013-10-16 06:54:10.346599+00:00", 
            "author": "https://api.launchpad.net/1.0/~gtt116"
        }, 
        {
            "content": "security groups can be removed for the V3 API as the client can just ask neutron directly\nWill have to sort out a fix for keypairs though", 
            "date_created": "2013-11-27 00:55:53.931512+00:00", 
            "author": "https://api.launchpad.net/1.0/~cyeoh-0"
        }, 
        {
            "content": "https://review.openstack.org/#/c/58760/", 
            "date_created": "2014-01-06 09:11:36.493116+00:00", 
            "author": "https://api.launchpad.net/1.0/~liyingjun"
        }
    ]
}