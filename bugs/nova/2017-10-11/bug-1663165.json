{
    "status": "Opinion", 
    "last_updated": "2017-07-28 12:44:19.733657+00:00", 
    "description": "Description\n-----------\nThe network_data.json provided by the config drive/metadata service is missing local routes for adjacent subnets.\n\nWhen using DHCP, these routes *are* provided via neutron's DHCP agent correctly.\n\nSteps to Reproduce\n------------------\n* Create a new network in Neutron with 2 subnets: 192.168.0.0/24 and 192.168.1.0/24 with gateways 192.168.0.1 and 192.168.1.1 respectively.\n* Launch a new instance with an address in subnet 192.168.0.0/24 .\n* Inspect the available metadata in `openstack/latest/network_data.json`\n\nExpected Behaviour\n------------------\nThere should be two routes specified in `network_data.json`:\n* network: 0.0.0.0,     netmask: 0.0.0.0,       gateway: 192.168.0.1\n* network: 192.168.1.0, netmask: 255.255.255.0, gateway: 0.0.0.0\n\nActual Behaviour\n----------------\nThere is only one route specified in `network_data.json`:\n* network: 0.0.0.0,     netmask: 0.0.0.0,       gateway: 192.168.0.1\n\nEnvironment\n-----------\n* Ubuntu 14.04\n* stable/newton - latest release from Git\n\n=====\n\nFor reference to Neutron's behaviour, see: [neutron.agent.linux.dhcp]\n\nNOTE: this is also not properly implemented in cloud-init's static networking implementation and an issue is currently open HERE:[https://bugs.launchpad.net/cloud-init/+bug/1663049]. This may be relevant for anybody attempting to test the behaviour.", 
    "tags": [
        "network", 
        "neutron", 
        "openstack-version.newton"
    ], 
    "importance": "Wishlist", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1663165", 
    "owner": "None", 
    "id": 1663165, 
    "index": 1857, 
    "created": "2017-02-09 08:38:55.666102+00:00", 
    "title": "network_data from metadata agent does not contain local routes for adjacent subnets", 
    "comments": [
        {
            "content": "Description\n-----------\nThe network_data.json provided by the config drive/metadata service is missing local routes for adjacent subnets.\n\nWhen using DHCP, these routes *are* provided via neutron's DHCP agent correctly.\n\nSteps to Reproduce\n------------------\n* Create a new network in Neutron with 2 subnets: 192.168.0.0/24 and 192.168.1.0/24 with gateways 192.168.0.1 and 192.168.1.1 respectively.\n* Launch a new instance with an address in subnet 192.168.0.0/24 .\n* Inspect the available metadata in `openstack/latest/network_data.json`\n\nExpected Behaviour\n------------------\nThere should be two routes specified in `network_data.json`:\n* network: 0.0.0.0,     netmask: 0.0.0.0,       gateway: 192.168.0.1\n* network: 192.168.1.0, netmask: 255.255.255.0, gateway: 0.0.0.0\n\nActual Behaviour\n----------------\nThere is only one route specified in `network_data.json`:\n* network: 0.0.0.0,     netmask: 0.0.0.0,       gateway: 192.168.0.1\n\nEnvironment\n-----------\n* Ubuntu 14.04\n* stable/newton - latest release from Git\n\n=====\n\nFor reference to Neutron's behaviour, see: [neutron.agent.linux.dhcp]\n\nNOTE: this is also not properly implemented in cloud-init's static networking implementation and an issue is currently open HERE:[https://bugs.launchpad.net/cloud-init/+bug/1663049]. This may be relevant for anybody attempting to test the behaviour.", 
            "date_created": "2017-02-09 08:38:55.666102+00:00", 
            "author": "https://api.launchpad.net/1.0/~jgriffiths-1993"
        }, 
        {
            "content": "Automatically discovered version newton in description. If this is incorrect, please update the description to include 'nova version: ...'", 
            "date_created": "2017-06-27 15:55:18.708717+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "I think this is the kind of enhancement that would come through the specs process - https://specs.openstack.org/openstack/nova-specs/readme.html", 
            "date_created": "2017-07-28 12:44:19.233209+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }
    ]
}