{
    "status": "Invalid", 
    "last_updated": "2012-06-20 10:15:24.965734+00:00", 
    "description": "libvirt:\nI have an instance, which has definition of filterref in domain definition file:\n    <interface type='bridge'>\n      <mac address='fa:16:3e:28:64:c2'/>\n      <source bridge='br100'/>\n      <target dev='vnet0'/>\n      <filterref filter='nova-instance-instance-00000002-fa163e2864c2'>\n        <parameter name='DHCPSERVER' value='10.0.1.1'/>\n        <parameter name='PROJNET' value='10.0.1.0'/>\n        <parameter name='PROJMASK' value='255.255.255.0'/>\n        <parameter name='IP' value='10.0.1.2'/>\n      </filterref>\n      <alias name='net0'/>\n      <address type='pci' domain='0x0000' bus='0x00' slot='0x03' function='0x0'/>\n    </interface>\nObviously, it has no MAC parameter added.\n\nSee our nwfilter definitions:\n<filter name='nova-instance-instance-00000002-fa163e2864c2' chain='root'>\n  <uuid>9dfeef35-80b9-2a8a-6f94-9ed205ca542b</uuid>\n  <filterref filter='nova-base'/>\n</filter>\n<filter name='nova-base' chain='root'>\n  <uuid>3d6c21f8-0d2d-f58e-c923-2d21de3d8c9f</uuid>\n  <filterref filter='no-mac-spoofing'/>\n  <filterref filter='no-ip-spoofing'/>\n  <filterref filter='no-arp-spoofing'/>\n  <filterref filter='allow-dhcp-server'/>\n</filter>\n\n<filter name='no-mac-spoofing' chain='ipv4'>\n  <rule action='drop' direction='out' priority='10'>\n      <mac match='no' srcmacaddr='$MAC' />\n  </rule>\n</filter>\n\nThe code generating the domain filter xml is in:\nclass LibvirtBridgeDriver(vif.VIFDriver):\n    \"\"\"VIF driver for Linux bridge.\"\"\"\n\n    def _get_configurations(self, instance, network, mapping):\n        \"\"\"Get a dictionary of VIF configurations for bridge type.\"\"\"\n\n        mac_id = mapping['mac'].replace(':', '')\n\n        conf = config.LibvirtConfigGuestInterface()\n        conf.net_type = \"bridge\"\n        conf.mac_addr = mapping['mac']\n        conf.source_dev = network['bridge']\n        conf.script = \"\"\n        if FLAGS.libvirt_use_virtio_for_bridges:\n            conf.model = \"virtio\"\n\n        conf.filtername = \"nova-instance-\" + instance['name'] + \"-\" + mac_id\n        conf.add_filter_param(\"IP\", mapping['ips'][0]['ip'])\n        if mapping['dhcp_server']:\n            conf.add_filter_param(\"DHCPSERVER\", mapping['dhcp_server'])\n\n        if FLAGS.use_ipv6:\n            conf.add_filter_param(\"RASERVER\",\n                                  mapping.get('gateway_v6') + \"/128\")\n\n        if FLAGS.allow_same_net_traffic:\n            net, mask = netutils.get_net_and_mask(network['cidr'])\n            conf.add_filter_param(\"PROJNET\", net)\n            conf.add_filter_param(\"PROJMASK\", mask)\n            if FLAGS.use_ipv6:\n                net_v6, prefixlen_v6 = netutils.get_net_and_prefixlen(\n                                           network['cidr_v6'])\n                conf.add_filter_param(\"PROJNET6\", net_v6)\n                conf.add_filter_param(\"PROJMASK6\", prefixlen_v6)\n\n        return conf", 
    "tags": [], 
    "importance": "Undecided", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1015453", 
    "owner": "None", 
    "id": 1015453, 
    "index": 2897, 
    "created": "2012-06-20 08:40:34.612489+00:00", 
    "title": "instance nwfilter has no MAC parameter in dom definition file", 
    "comments": [
        {
            "content": "libvirt:\nI have an instance, which has definition of filterref in domain definition file:\n    <interface type='bridge'>\n      <mac address='fa:16:3e:28:64:c2'/>\n      <source bridge='br100'/>\n      <target dev='vnet0'/>\n      <filterref filter='nova-instance-instance-00000002-fa163e2864c2'>\n        <parameter name='DHCPSERVER' value='10.0.1.1'/>\n        <parameter name='PROJNET' value='10.0.1.0'/>\n        <parameter name='PROJMASK' value='255.255.255.0'/>\n        <parameter name='IP' value='10.0.1.2'/>\n      </filterref>\n      <alias name='net0'/>\n      <address type='pci' domain='0x0000' bus='0x00' slot='0x03' function='0x0'/>\n    </interface>\nObviously, it has no MAC parameter added.\n\nSee our nwfilter definitions:\n<filter name='nova-instance-instance-00000002-fa163e2864c2' chain='root'>\n  <uuid>9dfeef35-80b9-2a8a-6f94-9ed205ca542b</uuid>\n  <filterref filter='nova-base'/>\n</filter>\n<filter name='nova-base' chain='root'>\n  <uuid>3d6c21f8-0d2d-f58e-c923-2d21de3d8c9f</uuid>\n  <filterref filter='no-mac-spoofing'/>\n  <filterref filter='no-ip-spoofing'/>\n  <filterref filter='no-arp-spoofing'/>\n  <filterref filter='allow-dhcp-server'/>\n</filter>\n\n<filter name='no-mac-spoofing' chain='ipv4'>\n  <rule action='drop' direction='out' priority='10'>\n      <mac match='no' srcmacaddr='$MAC' />\n  </rule>\n</filter>\n\nThe code generating the domain filter xml is in:\nclass LibvirtBridgeDriver(vif.VIFDriver):\n    \"\"\"VIF driver for Linux bridge.\"\"\"\n\n    def _get_configurations(self, instance, network, mapping):\n        \"\"\"Get a dictionary of VIF configurations for bridge type.\"\"\"\n\n        mac_id = mapping['mac'].replace(':', '')\n\n        conf = config.LibvirtConfigGuestInterface()\n        conf.net_type = \"bridge\"\n        conf.mac_addr = mapping['mac']\n        conf.source_dev = network['bridge']\n        conf.script = \"\"\n        if FLAGS.libvirt_use_virtio_for_bridges:\n            conf.model = \"virtio\"\n\n        conf.filtername = \"nova-instance-\" + instance['name'] + \"-\" + mac_id\n        conf.add_filter_param(\"IP\", mapping['ips'][0]['ip'])\n        if mapping['dhcp_server']:\n            conf.add_filter_param(\"DHCPSERVER\", mapping['dhcp_server'])\n\n        if FLAGS.use_ipv6:\n            conf.add_filter_param(\"RASERVER\",\n                                  mapping.get('gateway_v6') + \"/128\")\n\n        if FLAGS.allow_same_net_traffic:\n            net, mask = netutils.get_net_and_mask(network['cidr'])\n            conf.add_filter_param(\"PROJNET\", net)\n            conf.add_filter_param(\"PROJMASK\", mask)\n            if FLAGS.use_ipv6:\n                net_v6, prefixlen_v6 = netutils.get_net_and_prefixlen(\n                                           network['cidr_v6'])\n                conf.add_filter_param(\"PROJNET6\", net_v6)\n                conf.add_filter_param(\"PROJMASK6\", prefixlen_v6)\n\n        return conf", 
            "date_created": "2012-06-20 08:40:34.612489+00:00", 
            "author": "https://api.launchpad.net/1.0/~gongysh"
        }, 
        {
            "content": "It seems the libvirt will fill in MAC by itself:\nroot@robinlinux eclipsecdt]# ebtables-save \n# Generated by ebtables-save v1.0 on Wed Jun 20 18:11:26 CST 2012\n*nat\n:PREROUTING ACCEPT\n:OUTPUT ACCEPT\n:POSTROUTING ACCEPT\n:libvirt-I-vnet0 ACCEPT\n:libvirt-O-vnet0 ACCEPT\n:I-vnet0-ipv4 ACCEPT\n:O-vnet0-ipv4 ACCEPT\n:I-vnet0-arp ACCEPT\n:O-vnet0-arp ACCEPT\n-A PREROUTING -i vnet0 -j libvirt-I-vnet0\n-A POSTROUTING -o vnet0 -j libvirt-O-vnet0\n-A libvirt-I-vnet0 -p IPv4 -j I-vnet0-ipv4\n-A libvirt-I-vnet0 -p ARP -j I-vnet0-arp\n-A libvirt-O-vnet0 -p IPv4 -j O-vnet0-ipv4\n-A libvirt-O-vnet0 -p ARP -j O-vnet0-arp\n-A I-vnet0-ipv4 -s ! fa:16:3e:28:64:c2 -j DROP\n-A I-vnet0-ipv4 -p IPv4 --ip-src 0.0.0.0 --ip-dst 255.255.255.255 --ip-proto udp --ip-sport 68 --ip-dport 67 -j ACCEPT\n-A I-vnet0-ipv4 -p IPv4 --ip-src ! 10.0.1.2 -j DROP\n-A O-vnet0-ipv4 -p IPv4 --ip-src 10.0.1.1 --ip-proto udp --ip-sport 67 --ip-dport 68 -j ACCEPT\n-A I-vnet0-arp -s ! fa:16:3e:28:64:c2 -j DROP\n-A I-vnet0-arp -p ARP --arp-mac-src ! fa:16:3e:28:64:c2 -j DROP\n-A I-vnet0-arp -p ARP --arp-ip-src ! 10.0.1.2 -j DROP\n-A I-vnet0-arp -p ARP --arp-op Request -j ACCEPT\n-A I-vnet0-arp -p ARP --arp-op Reply -j ACCEPT\n-A I-vnet0-arp -j DROP\n-A O-vnet0-arp -p ARP --arp-gratuitous -j ACCEPT\n-A O-vnet0-arp -p ARP --arp-op Reply --arp-mac-dst ! fa:16:3e:28:64:c2 -j DROP\n-A O-vnet0-arp -p ARP --arp-ip-dst ! 10.0.1.2 -j DROP\n-A O-vnet0-arp -p ARP --arp-op Request -j ACCEPT\n-A O-vnet0-arp -p ARP --arp-op Reply -j ACCEPT\n-A O-vnet0-arp -j DROP\n", 
            "date_created": "2012-06-20 10:15:05.226419+00:00", 
            "author": "https://api.launchpad.net/1.0/~gongysh"
        }
    ]
}