{
    "status": "Won't Fix", 
    "last_updated": "2016-12-09 15:29:11.710076+00:00", 
    "description": "Summary:\nChanging use_cow_images from false to true breaks all existing instances with raw images.\n\nEnv:\nNova version 3.3.1, Fuel 9.0.\n\nReproduce steps:\n1. Set use_cow_images=false in nova.conf\n2. Create and start an instance using a raw image\n3. Set use_cow_images=true in nova.conf\n4. Restart the instance\n\nExpect result:\nThe existing instance restarts and continues to work.\n\nActual result:\nRestarting the instances fails with \"Image is not in qcow2 format\". Full log:\n\noslo_messaging.rpc.dispatcher [req-23c83b76-ee13-44e7-9b92-c7ac20f369cc 91c65783f69e4322992d4b7f86172fab 19e9d9a752d14ec8a20a0d8be1681bdd - - -] Exception during message handling: internal error: process exited while connecting to monitor: 2016-09-23T11:56:59.855117Z qemu-system-x86_64: -drive file=/var/lib/nova/instances/86682c9d-628a-4ab6-9836-1ab3bc5a493b/disk,if=none,id=drive-virtio-disk0,format=qcow2,cache=none: Image is not in qcow2 format\n2016-09-23 11:57:01.145 30847 ERROR oslo_messaging.rpc.dispatcher Traceback (most recent call last):\n2016-09-23 11:57:01.145 30847 ERROR oslo_messaging.rpc.dispatcher   File \"/usr/lib/python2.7/dist-packages/oslo_messaging/rpc/dispatcher.py\", line 138, in _dispatch_and_reply\n2016-09-23 11:57:01.145 30847 ERROR oslo_messaging.rpc.dispatcher     incoming.message))\n2016-09-23 11:57:01.145 30847 ERROR oslo_messaging.rpc.dispatcher   File \"/usr/lib/python2.7/dist-packages/oslo_messaging/rpc/dispatcher.py\", line 185, in _dispatch\n2016-09-23 11:57:01.145 30847 ERROR oslo_messaging.rpc.dispatcher     return self._do_dispatch(endpoint, method, ctxt, args)\n2016-09-23 11:57:01.145 30847 ERROR oslo_messaging.rpc.dispatcher   File \"/usr/lib/python2.7/dist-packages/oslo_messaging/rpc/dispatcher.py\", line 127, in _do_dispatch\n2016-09-23 11:57:01.145 30847 ERROR oslo_messaging.rpc.dispatcher     result = func(ctxt, **new_args)\n2016-09-23 11:57:01.145 30847 ERROR oslo_messaging.rpc.dispatcher   File \"/usr/lib/python2.7/dist-packages/nova/exception.py\", line 110, in wrapped\n2016-09-23 11:57:01.145 30847 ERROR oslo_messaging.rpc.dispatcher     payload)\n2016-09-23 11:57:01.145 30847 ERROR oslo_messaging.rpc.dispatcher   File \"/usr/lib/python2.7/dist-packages/oslo_utils/excutils.py\", line 220, in __exit__\n2016-09-23 11:57:01.145 30847 ERROR oslo_messaging.rpc.dispatcher     self.force_reraise()\n2016-09-23 11:57:01.145 30847 ERROR oslo_messaging.rpc.dispatcher   File \"/usr/lib/python2.7/dist-packages/oslo_utils/ex[....]", 
    "tags": [
        "libvirt"
    ], 
    "importance": "Undecided", 
    "heat": 10, 
    "link": "https://bugs.launchpad.net/nova/+bug/1627005", 
    "owner": "None", 
    "id": 1627005, 
    "index": 6452, 
    "created": "2016-09-23 12:34:17.981830+00:00", 
    "title": "Changing use_cow_images breaks existing instances", 
    "comments": [
        {
            "content": "Summary:\nChanging use_cow_images from false to true breaks all existing instances with raw images.\n\nEnv:\nNova version 3.3.1, Fuel 9.0.\n\nReproduce steps:\n1. Set use_cow_images=false in nova.conf\n2. Create and start an instance using a raw image\n3. Set use_cow_images=true in nova.conf\n4. Restart the instance\n\nExpect result:\nThe existing instance restarts and continues to work.\n\nActual result:\nRestarting the instances fails with \"Image is not in qcow2 format\". Full log:\n\noslo_messaging.rpc.dispatcher [req-23c83b76-ee13-44e7-9b92-c7ac20f369cc 91c65783f69e4322992d4b7f86172fab 19e9d9a752d14ec8a20a0d8be1681bdd - - -] Exception during message handling: internal error: process exited while connecting to monitor: 2016-09-23T11:56:59.855117Z qemu-system-x86_64: -drive file=/var/lib/nova/instances/86682c9d-628a-4ab6-9836-1ab3bc5a493b/disk,if=none,id=drive-virtio-disk0,format=qcow2,cache=none: Image is not in qcow2 format\n2016-09-23 11:57:01.145 30847 ERROR oslo_messaging.rpc.dispatcher Traceback (most recent call last):\n2016-09-23 11:57:01.145 30847 ERROR oslo_messaging.rpc.dispatcher   File \"/usr/lib/python2.7/dist-packages/oslo_messaging/rpc/dispatcher.py\", line 138, in _dispatch_and_reply\n2016-09-23 11:57:01.145 30847 ERROR oslo_messaging.rpc.dispatcher     incoming.message))\n2016-09-23 11:57:01.145 30847 ERROR oslo_messaging.rpc.dispatcher   File \"/usr/lib/python2.7/dist-packages/oslo_messaging/rpc/dispatcher.py\", line 185, in _dispatch\n2016-09-23 11:57:01.145 30847 ERROR oslo_messaging.rpc.dispatcher     return self._do_dispatch(endpoint, method, ctxt, args)\n2016-09-23 11:57:01.145 30847 ERROR oslo_messaging.rpc.dispatcher   File \"/usr/lib/python2.7/dist-packages/oslo_messaging/rpc/dispatcher.py\", line 127, in _do_dispatch\n2016-09-23 11:57:01.145 30847 ERROR oslo_messaging.rpc.dispatcher     result = func(ctxt, **new_args)\n2016-09-23 11:57:01.145 30847 ERROR oslo_messaging.rpc.dispatcher   File \"/usr/lib/python2.7/dist-packages/nova/exception.py\", line 110, in wrapped\n2016-09-23 11:57:01.145 30847 ERROR oslo_messaging.rpc.dispatcher     payload)\n2016-09-23 11:57:01.145 30847 ERROR oslo_messaging.rpc.dispatcher   File \"/usr/lib/python2.7/dist-packages/oslo_utils/excutils.py\", line 220, in __exit__\n2016-09-23 11:57:01.145 30847 ERROR oslo_messaging.rpc.dispatcher     self.force_reraise()\n2016-09-23 11:57:01.145 30847 ERROR oslo_messaging.rpc.dispatcher   File \"/usr/lib/python2.7/dist-packages/oslo_utils/ex[....]", 
            "date_created": "2016-09-23 12:34:17.981830+00:00", 
            "author": "https://api.launchpad.net/1.0/~monday"
        }, 
        {
            "content": "What release is nova in fuel 9.0? Liberty? Mitaka? I don't know what 3.3.1 maps to.", 
            "date_created": "2016-09-24 00:48:49.080567+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Sorry, my mentioned version seems to be the version of the client.\nIt is OpenStack Mitaka.\n\n~# nova-compute --version\n13.0.0", 
            "date_created": "2016-09-24 00:58:50.748242+00:00", 
            "author": "https://api.launchpad.net/1.0/~monday"
        }, 
        {
            "content": "This is a known limitation.\n\nThe issue is that the required information: what format an existing disk is in, isn't stored anywhere independently of the host configuration. That is, we only know what format the disk is in from the configuration of the compute host. If you change that, you're changing our store of what the disk format is, and it's going to break.\n\nIncidentally changing this on a running compute exposes a severe security vulnerability:\n\nAdmin sets use_cow_images = False\nUser creates instance with an ephemeral disk, created as raw.\nUser overwrites beginning of ephemeral disk with a fake qcow2 header with backing file '/dev/sda'.\n\nAdmin sets use_cow_images = True\nUser reboots their instance.\nNova tells libvirt disk is qcow2 (from config), qemu finds valid qcow2 header, starts guest.\nUser logs in to their instance, ephemeral disk is now the contents of /dev/sda from the compute host.\n\nIoW you absolutely MUST NOT do this.\n\nThe persistent libvirt metadata spec is intended to address this, as it stores disk metadata independently of the host configuration. That may land during Ocata, but it will never be backportable to Mitaka.\n\nThere is a workaround, btw. You can't change this on a host (ever), and having a heterogeneous environment is also bad, although we have a workaround for cold-migration between hosts with different config which at least eliminates the security bug. However, I believe you should be able to live (NB *NOT* cold) migrate between hosts with different storage configurations. The reason is that the disks are pre-created blank on the destination, then qemu streams the bits over and converts them as they're written during the migration process. If you go down this route, though, you should plan to do it thoroughly so that at the end of the process you have a homogeneous storage configuration again. You should avoid doing any cold migrations at least in the intervening period.", 
            "date_created": "2016-09-26 13:30:24.741019+00:00", 
            "author": "https://api.launchpad.net/1.0/~mbooth-9"
        }, 
        {
            "content": "Thanks for your detailed explanation. I see the point. The confusing thing for me was that I saw the image_disk_format \"raw\" correctly stored in instance_system_metadata table. By this it seemed to me that nova should know that the disk is raw and not qcow2. \n\nNevertheless one does not expect that changing use_cow_images does break your existing, working instances. It might be a good idea to add a hint about this to the documentation / nova.conf.", 
            "date_created": "2016-09-27 00:49:01.542268+00:00", 
            "author": "https://api.launchpad.net/1.0/~monday"
        }, 
        {
            "content": "image_disk_format refers to the original format of the image. It doesn't directly relate to the on-disk format used by the instance, as it will be converted if the compute host uses different storage.", 
            "date_created": "2016-09-29 09:43:20.003286+00:00", 
            "author": "https://api.launchpad.net/1.0/~mbooth-9"
        }, 
        {
            "content": "Known limitation", 
            "date_created": "2016-12-09 15:29:10.491670+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }
    ]
}