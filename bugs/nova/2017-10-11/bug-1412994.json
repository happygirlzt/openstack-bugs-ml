{
    "status": "Opinion", 
    "last_updated": "2015-04-01 15:53:25.763128+00:00", 
    "description": "I try to set the libvirt.cpu_mode=custom and libvirt.cpu_model=pentium, and then boot a vm using cirros image. The 'nova boot' command create the instance successfully while the instance failed to boot because the image requires x86_64 while pentium has no x86_64 support.\n\nThen I try to  set the image's architecture property to be x86_64, with \"glance image-update IMG-UUID --property architecture=x86_64\". After this, the instance is created successfully by 'nova boot' but instance still fails to boot.\n\nI think the reason is because, when libvirt_cpu_model=perntium, the compute node should in fact report it's capability as that of Pertium processor, instead of the host processor anymore.", 
    "tags": [], 
    "importance": "Wishlist", 
    "heat": 8, 
    "link": "https://bugs.launchpad.net/nova/+bug/1412994", 
    "owner": "None", 
    "id": 1412994, 
    "index": 1659, 
    "created": "2015-01-20 22:19:42.681277+00:00", 
    "title": "cirros image fails to boot when libvirt.cpu_mode=custom and libvirt.cpu_model=pentium", 
    "comments": [
        {
            "content": "I try to set the libvirt.cpu_mode=custom and libvirt.cpu_model=pentium, and then boot a vm using cirros image. The 'nova boot' command create the instance successfully while the instance failed to boot because the image requires x86_64 while pentium has no x86_64 support.\n\nThen I try to  set the image's architecture property to be x86_64, with \"glance image-update IMG-UUID --property architecture=x86_64\". After this, the instance is created successfully by 'nova boot' but instance still fails to boot.\n\nI think the reason is because, when libvirt_cpu_model=perntium, the compute node should in fact report it's capability as that of Pertium processor, instead of the host processor anymore.", 
            "date_created": "2015-01-20 22:19:42.681277+00:00", 
            "author": "https://api.launchpad.net/1.0/~yunhong-jiang"
        }, 
        {
            "content": "Without any log files and knowing which version this is on, this bug is difficult to triage.", 
            "date_created": "2015-01-22 21:30:09.953857+00:00", 
            "author": "https://api.launchpad.net/1.0/~jogo"
        }, 
        {
            "content": "More information:\n\nenvironment:\nIt's in the trunk of nova with libvirt virt driver. The hardware is latest Intel CPU feature with x86_64 support for sure.\n\na) nova conf:\n[libvirt]\n......\ncpu_mode = custom\ncpu_model=pentium\nvirt_type = kvm\n...\n\nb) mark the image as x86_64:\nglance image-update 4d677ad0-47f5-4294-bb8e-d416735199c3 --property architecture=x86_64\n\nc) start an VM\n\nnova boot --image cirros-0.3.2-x86_64-uec --flavor m1.small 125\n\nd) nova list:\nthe instance is up.\n|3c5acf31-ebf9-48db-9d47-9d37e010e3dd | 125  | ACTIVE | -          | Running     | private=10.0.0.4 |\n\n\ne) failed to ssh to the guest, but vnc to the guest show:\nThe guest OS failed to boot with information that \"This kernel requires an x86-64 CPU, but only detected an i586 CPU.\".\n\n", 
            "date_created": "2015-01-28 18:23:25.170585+00:00", 
            "author": "https://api.launchpad.net/1.0/~yunhong-jiang"
        }, 
        {
            "content": "IMHO this is just user error - don't ask for such an outdated CPU model - use one of the sensible modern models - Nehlem,  Haswell, SandyBridge, etc.", 
            "date_created": "2015-01-29 10:56:31.256031+00:00", 
            "author": "https://api.launchpad.net/1.0/~berrange"
        }, 
        {
            "content": "I think the key point is, if we configure the host cpu_model, then we should expose the cpu_feature information of the cpu_model one, instead of the real host CPU features. So that compute_capability filter will not make wrong decision.\n\nThe pentium is just a extreme case. Considering some specific CPU features like SSE4.1. If host has SSE4.1 but the libvirt.cpu_model will disable it. The nova will still assign the host to a guest requesting SSE4.1 features.", 
            "date_created": "2015-01-29 18:02:42.875116+00:00", 
            "author": "https://api.launchpad.net/1.0/~yunhong-jiang"
        }, 
        {
            "content": "Could be a feature for the safety check here", 
            "date_created": "2015-04-01 15:53:25.069728+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }
    ]
}