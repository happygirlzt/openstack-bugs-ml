{
    "status": "Invalid", 
    "last_updated": "2012-06-07 20:16:43.035712+00:00", 
    "description": "Version: 2012.1-LOCALBRANCH:LOCALREVISION (from the ubuntu 2012.1-0ubuntu2 packages, i.e. essex/stable).\n\n'nova-manage floating create' silently does nothing if you pass a /31 or /32 address range.  E.g.\n\n# nova-manage floating list\nNo floating IP addresses have been defined.\n# nova-manage floating create 10.20.223.242/31\n\nNo error was reported, so my expectation is that this has added 2 IP addresses to the pool, but:\n\n# nova-manage floating list\nNo floating IP addresses have been defined.\n\nThe same occurs for a /32 network:\n\n# nova-manage floating create 10.20.223.242/32\n# nova-manage floating list\nNo floating IP addresses have been defined.\n\nThis occurs because nova/bin/nova-manage:FloatingIpCommands address_to_hosts calls netaddr.IPNetwork.iter_hosts, which states that \"Any subnet that contains less than 4 IP addresses yields an empty list\" (<http://packages.python.org/netaddr/netaddr.ip.IPNetwork-class.html#iter_hosts>):\n\n>>> list(netaddr.IPNetwork('10.20.223.242/31').iter_hosts())\n[]\n\nI believe the netaddr.IPNetwork.iter_hosts behaviour is reasonable, as once the network and broadcast addresses are excluded, no addresses remain in an /31 network.  But rather than silently doing nothing in such cases, nova-manage should report an error and suggest to the user that they add the IP addresses individually (which does work).", 
    "tags": [], 
    "importance": "Low", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/987760", 
    "owner": "None", 
    "id": 987760, 
    "index": 5434, 
    "created": "2012-04-24 10:39:53.366116+00:00", 
    "title": "'nova-manage floating create' does nothing for /31 or /32 address range", 
    "comments": [
        {
            "content": "Version: 2012.1-LOCALBRANCH:LOCALREVISION (from the ubuntu 2012.1-0ubuntu2 packages, i.e. essex/stable).\n\n'nova-manage floating create' silently does nothing if you pass a /31 or /32 address range.  E.g.\n\n# nova-manage floating list\nNo floating IP addresses have been defined.\n# nova-manage floating create 10.20.223.242/31\n\nNo error was reported, so my expectation is that this has added 2 IP addresses to the pool, but:\n\n# nova-manage floating list\nNo floating IP addresses have been defined.\n\nThe same occurs for a /32 network:\n\n# nova-manage floating create 10.20.223.242/32\n# nova-manage floating list\nNo floating IP addresses have been defined.\n\nThis occurs because nova/bin/nova-manage:FloatingIpCommands address_to_hosts calls netaddr.IPNetwork.iter_hosts, which states that \"Any subnet that contains less than 4 IP addresses yields an empty list\" (<http://packages.python.org/netaddr/netaddr.ip.IPNetwork-class.html#iter_hosts>):\n\n>>> list(netaddr.IPNetwork('10.20.223.242/31').iter_hosts())\n[]\n\nI believe the netaddr.IPNetwork.iter_hosts behaviour is reasonable, as once the network and broadcast addresses are excluded, no addresses remain in an /31 network.  But rather than silently doing nothing in such cases, nova-manage should report an error and suggest to the user that they add the IP addresses individually (which does work).", 
            "date_created": "2012-04-24 10:39:53.366116+00:00", 
            "author": "https://api.launchpad.net/1.0/~dwragg"
        }, 
        {
            "content": "Suggested priority: medium", 
            "date_created": "2012-06-07 17:41:23.918387+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "Setting to Low because it's a bit of a corner case", 
            "date_created": "2012-06-07 18:38:09.324046+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "See bug #951161 - we support specifying a single IP address now, just don't specify /31 or /32\n\n/32 and /31 are basically invalid network ranges:\n\n http://en.wikipedia.org/wiki/IPv4#Addresses_ending_in_0_or_255\n http://tools.ietf.org/html/rfc1122\n\n IP addresses are not permitted to have the value 0 or -1 for\n any of the <Host-number>, <Network-number>, or <Subnet-\n number> fields (except in the special cases listed above).\n This implies that each of these fields will be at least two\n bits long.\n", 
            "date_created": "2012-06-07 20:16:41.561469+00:00", 
            "author": "https://api.launchpad.net/1.0/~markmc"
        }
    ]
}