{
    "status": "Fix Released", 
    "last_updated": "2015-11-05 02:46:19.145272+00:00", 
    "description": "libvirt driver needs to use it's own logic for determining the device name that will be persisted in Nova instead of the generic methods in nova.compute.utils, since libvirt cannot really assign the device name to a block device of an instance (it's treated as a ordering hint only), and we need to make sure that information in the Nova DB matches what will be assigned.\n\nWe already have this logic in nova.virt.libvirt.blockinfo and is being called for booting instances, however when attaching volumes to an already running instance we rely on nova.compute.utils.get_device_name_for_instance() which will do the wrong thing in a number of cases (for example volumes using different bus (see bug #1379212), instances with an ephemeral disk etc.)\n\nCurrent master is: 0b23bce359c8c92715695cac7a6eff7c473ad8c2", 
    "tags": [
        "compute", 
        "libvirt", 
        "volumes"
    ], 
    "importance": "Undecided", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1452224", 
    "owner": "https://api.launchpad.net/1.0/~mnestratov", 
    "id": 1452224, 
    "index": 5524, 
    "created": "2015-05-06 10:34:53.648308+00:00", 
    "title": "libvirt: attaching volume device name should be decided using the same logic as when booting", 
    "comments": [
        {
            "content": "libvirt driver needs to use it's own logic for determining the device name that will be persisted in Nova instead of the generic methods in nova.compute.utils, since libvirt cannot really assign the device name to a block device of an instance (it's treated as a ordering hint only), and we need to make sure that information in the Nova DB matches what will be assigned.\n\nWe already have this logic in nova.virt.libvirt.blockinfo and is being called for booting instances, however when attaching volumes to an already running instance we rely on nova.compute.utils.get_device_name_for_instance() which will do the wrong thing in a number of cases (for example volumes using different bus (see bug #1379212), instances with an ephemeral disk etc.)\n\nCurrent master is: 0b23bce359c8c92715695cac7a6eff7c473ad8c2", 
            "date_created": "2015-05-06 10:34:53.648308+00:00", 
            "author": "https://api.launchpad.net/1.0/~ndipanov"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/180635", 
            "date_created": "2015-05-06 17:23:40.313099+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/180636", 
            "date_created": "2015-05-06 17:23:48.858516+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/180637", 
            "date_created": "2015-05-06 17:23:56.689704+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/180638", 
            "date_created": "2015-05-06 17:24:05.470592+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/180635\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=94a5793d63a797697fb1f937340cb49b3c7e9787\nSubmitter: Jenkins\nBranch:    master\n\ncommit 94a5793d63a797697fb1f937340cb49b3c7e9787\nAuthor: Nikola Dipanov <email address hidden>\nDate:   Tue May 5 17:41:11 2015 +0100\n\n    virt: Move building the block_device_info dict into a method\n    \n    The block_device_info structure is needed in several places, so it's\n    useful to move it into a method and remove the code repetition that is\n    all over the place.\n    \n    Also make sure there is a single way to get the legacy dict format for\n    the drivers that need this (however at this point we should probably\n    remove that soon, and convert all the in-tree drivers to expect the new\n    format).\n    \n    Related-bug: 1231874\n    Partial-bug: 1452224\n    \n    Change-Id: I608042c58c04f333f6fbb8d9824eb8f3913c6310\n", 
            "date_created": "2015-06-10 09:56:17.029323+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/180636\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=fb3d3773a2c2b07af2849608f1481c9f37a9ec62\nSubmitter: Jenkins\nBranch:    master\n\ncommit fb3d3773a2c2b07af2849608f1481c9f37a9ec62\nAuthor: Nikola Dipanov <email address hidden>\nDate:   Wed May 6 13:56:45 2015 +0100\n\n    libvirt: make default_device_names DRY-er\n    \n    Since we now have a reusable method to call to get the block_device_info\n    structure that most driver code is designed to work with, we don't need\n    to re-write it in the blockinfo code - we can just use it.\n    \n    In addition to this - this fixes a (yet unreported) issue that libvirt\n    would not consider blank volumes in it's device assignments.\n    \n    Related-bug: 1231874\n    Partial-bug: 1452224\n    \n    Change-Id: I4b9a6fd1b08ff787fdd1226f533f4181fe44b7e9\n", 
            "date_created": "2015-06-10 17:34:25.137844+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/180637\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=b6733dbdf3d04f4e334f1aeb6ee7ce4b6d1b7b95\nSubmitter: Jenkins\nBranch:    master\n\ncommit b6733dbdf3d04f4e334f1aeb6ee7ce4b6d1b7b95\nAuthor: Nikola Dipanov <email address hidden>\nDate:   Tue May 5 16:14:46 2015 +0100\n\n    virt: add get_device_name_for_instance to the base driver class\n    \n    Just as libvirt needs to decide on the device names when booting an\n    instance (as opposed to them being assigned by the user), the same needs\n    to be done when attaching additional volumes to a running instance.\n    \n    This patch exposes it on the ComputeDriver base class and makes sure\n    that it will be called by the compute manager (and that an appropriate\n    fallback will happen if the drivers do not care about overriding this),\n    as a pre-req for doing the work in the libvirt driver.\n    \n    Partial-bug: 1452224\n    Related-bug: 1231874\n    \n    Change-Id: I66693a8a6a632b65f930a58905336397ac6c9f29\n", 
            "date_created": "2015-07-09 20:27:06.248704+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/180638\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=c5db407bb22e453a4bca22de1860bb6ce6090782\nSubmitter: Jenkins\nBranch:    master\n\ncommit c5db407bb22e453a4bca22de1860bb6ce6090782\nAuthor: Nikola Dipanov <email address hidden>\nDate:   Wed May 6 18:08:26 2015 +0100\n\n    libvirt: implement get_device_name_for_instance\n    \n    We implement the method above with the purpose of using the\n    nova.libvirt.blockinfo primitives (which match how libvirt itself works),\n    to decide on which device name to use for an instance.\n    \n    With this change - we will be using the libvirt local logic to decide on\n    the volume device name instead of relying on\n    nova.compute.utils.get_device_name_for_instance() which will do wrong\n    things in a number of cases.\n    \n    Closes-bug: 1452224\n    Related-bug: 1231874\n    \n    Change-Id: I33d7363c018fc4e5e9f190486d5556363852badb\n", 
            "date_created": "2015-07-28 13:34:17.285568+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: stable/kilo\nReview: https://review.openstack.org/229609", 
            "date_created": "2015-09-30 20:37:53.149704+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: stable/kilo\nReview: https://review.openstack.org/229610", 
            "date_created": "2015-09-30 20:38:03.472345+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: stable/kilo\nReview: https://review.openstack.org/229611", 
            "date_created": "2015-09-30 20:38:10.865510+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: stable/kilo\nReview: https://review.openstack.org/229613", 
            "date_created": "2015-09-30 20:38:28.591098+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Change abandoned by Matt Riedemann (<email address hidden>) on branch: stable/kilo\nReview: https://review.openstack.org/229609\nReason: This didn't make test_stamp_pattern magically start working in the kilo compat job.", 
            "date_created": "2015-11-05 02:45:59.269697+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Change abandoned by Matt Riedemann (<email address hidden>) on branch: stable/kilo\nReview: https://review.openstack.org/229610\nReason: This didn't make test_stamp_pattern magically start working in the kilo compat job.", 
            "date_created": "2015-11-05 02:46:04.943233+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Change abandoned by Matt Riedemann (<email address hidden>) on branch: stable/kilo\nReview: https://review.openstack.org/229611\nReason: This didn't make test_stamp_pattern magically start working in the kilo compat job.", 
            "date_created": "2015-11-05 02:46:09.735863+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Change abandoned by Matt Riedemann (<email address hidden>) on branch: stable/kilo\nReview: https://review.openstack.org/229613\nReason: This didn't make test_stamp_pattern magically start working in the kilo compat job.", 
            "date_created": "2015-11-05 02:46:18.631931+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}