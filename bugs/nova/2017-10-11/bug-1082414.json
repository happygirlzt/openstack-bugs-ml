{
    "status": "Fix Released", 
    "last_updated": "2015-04-30 09:21:58.319973+00:00", 
    "description": "When trying to migrate an instance from a new compute node to an older compute node (hardware-wise), nova-computes fails saying that the CPU models are incompatible and leaves the instance in Error Status.\n\nI did specify the CPU model in instances with the options :\n\nlibvirt_cpu_mode=custom\nlibvirt_cpu_model=kvm64\n\nWhile it seems normal to refuse migration when libvirt_cpu_mode is set to host-model or host-passthrough, setting it to custom and using kvm64 in instances should not impact CPU compatibility between hosts.\n\nMigrating the other way around (old to new) works correctly, mainly because of a superseeding set of instructions.\n\nI'm using the Folsom Ubuntu packaged release of nova-compute on Ubuntu 12.10.\n\nEdit : Adding stacktrace\n\nMSG_ID is fe5d9a7c1a634d7f9c0270e35fed083b from (pid=2363) multicall /usr/lib/python2.7/dist-packages/nova/openstack/common/rpc/amqp.py:354\n[req-0512c53b-1b31-4924-a7d8-1ab57505ca0b ac90b7751f7f4da78f238916f3d01788 0173fc0a9e3d42caa34659f84ee7cb7c] Live migration of instance 97177534-6947-4756-9db5-b92fd4e504df to host os-node1 failed\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/dist-packages/nova/api/openstack/compute/contrib/admin_actions.py\", line 282, in _migrate_live\n    disk_over_commit, host)\n  File \"/usr/lib/python2.7/dist-packages/nova/compute/api.py\", line 94, in inner\n    return f(self, context, instance, *args, **kw)\n  File \"/usr/lib/python2.7/dist-packages/nova/compute/api.py\", line 1960, in live_migrate\n    disk_over_commit, instance, host)\n  File \"/usr/lib/python2.7/dist-packages/nova/scheduler/rpcapi.py\", line 96, in live_migration\n    dest=dest))\n  File \"/usr/lib/python2.7/dist-packages/nova/openstack/common/rpc/proxy.py\", line 80, in call\n    return rpc.call(context, self._get_topic(topic), msg, timeout)\n  File \"/usr/lib/python2.7/dist-packages/nova/openstack/common/rpc/__init__.py\", line 102, in call\n    return _get_impl().call(cfg.CONF, context, topic, msg, timeout)\n  File \"/usr/lib/python2.7/dist-packages/nova/openstack/common/rpc/impl_kombu.py\", line 712, in call\n    rpc_amqp.get_connection_pool(conf, Connection))\n  File \"/usr/lib/python2.7/dist-packages/nova/openstack/common/rpc/amqp.py\", line 368, in call\n    rv = list(rv)\n  File \"/usr/lib/python2.7/dist-packages/nova/openstack/common/rpc/amqp.py\", line 336, in __iter__\n    raise result\nRemoteError: Remote error: InvalidCPUInfo_Remote Unacceptable CPU info: CPU doesn't have compatibility.\n2012-11-14 22:33:41 TRACE nova.api.openstack.compute.contrib.admin_actions\n0\n2012-11-14 22:33:41 TRACE nova.api.openstack.compute.contrib.admin_actions\nRefer to http://libvirt.org/html/libvirt-libvirt.html#virCPUCompareResult\nTraceback (most recent call last):\n2012-11-14 22:33:41 TRACE nova.api.openstack.compute.contrib.admin_actions\n  File \"/usr/lib/python2.7/dist-packages/nova/openstack/common/rpc/amqp.py\", line 275, in _process_data\n    rval = self.proxy.dispatch(ctxt, version, method, **args)\n2012-11-14 22:33:41 TRACE nova.api.openstack.compute.contrib.admin_actions\n  File \"/usr/lib/python2.7/dist-packages/nova/openstack/common/rpc/dispatcher.py\", line 145, in dispatch\n    return getattr(proxyobj, method)(ctxt, **kwargs)\n2012-11-14 22:33:41 TRACE nova.api.openstack.compute.contrib.admin_actions\n  File \"/usr/lib/python2.7/dist-packages/nova/exception.py\", line 117, in wrapped\n    temp_level, payload)\n2012-11-14 22:33:41 TRACE nova.api.openstack.compute.contrib.admin_actions\n  File \"/usr/lib/python2.7/contextlib.py\", line 24, in __exit__\n    self.gen.next()\n2012-11-14 22:33:41 TRACE nova.api.openstack.compute.contrib.admin_actions\n  File \"/usr/lib/python2.7/dist-packages/nova/exception.py\", line 92, in wrapped\n    return f(*args, **kw)\n2012-11-14 22:33:41 TRACE nova.api.openstack.compute.contrib.admin_actions\n  File \"/usr/lib/python2.7/dist-packages/nova/compute/manager.py\", line 2076, in check_can_live_migrate_destination\n    instance, block_migration, disk_over_commit)\n2012-11-14 22:33:41 TRACE nova.api.openstack.compute.contrib.admin_actions\n  File \"/usr/lib/python2.7/dist-packages/nova/virt/libvirt/driver.py\", line 2238, in check_can_live_migrate_destination\n    self._compare_cpu(source_cpu_info)\n2012-11-14 22:33:41 TRACE nova.api.openstack.compute.contrib.admin_actions\n  File \"/usr/lib/python2.7/dist-packages/nova/virt/libvirt/driver.py\", line 2367, in _compare_cpu\n    raise exception.InvalidCPUInfo(reason=m % locals())\n2012-11-14 22:33:41 TRACE nova.api.openstack.compute.contrib.admin_actions\nInvalidCPUInfo: Unacceptable CPU info: CPU doesn't have compatibility.\n2012-11-14 22:33:41 TRACE nova.api.openstack.compute.contrib.admin_actions\n0\n2012-11-14 22:33:41 TRACE nova.api.openstack.compute.contrib.admin_actions\nRefer to http://libvirt.org/html/libvirt-libvirt.html#virCPUCompareResult\n2012-11-14 22:33:41 TRACE nova.api.openstack.compute.contrib.admin_actions", 
    "tags": [], 
    "importance": "Medium", 
    "heat": 252, 
    "link": "https://bugs.launchpad.net/nova/+bug/1082414", 
    "owner": "https://api.launchpad.net/1.0/~yunhong-jiang", 
    "id": 1082414, 
    "index": 3156, 
    "created": "2012-11-23 15:12:57.734637+00:00", 
    "title": "Live migration between hosts with differents CPU models fails", 
    "comments": [
        {
            "content": "When trying to migrate an instance from a new compute node to an older compute node (hardware-wise), nova-computes fails saying that the CPU models are incompatible and leaves the instance in Error Status.\n\nI did specify the CPU model in instances with the options :\n\nlibvirt_cpu_mode=custom\nlibvirt_cpu_model=kvm64\n\nWhile it seems normal to refuse migration when libvirt_cpu_mode is set to host-model or host-passthrough, setting it to custom and using kvm64 in instances should not impact CPU compatibility between hosts.\n\nMigrating the other way around (old to new) works correctly, mainly because of a superseeding set of instructions.\n\nI'm using the Folsom Ubuntu packaged release of nova-compute on Ubuntu 12.10.", 
            "date_created": "2012-11-23 15:12:57.734637+00:00", 
            "author": "https://api.launchpad.net/1.0/~nekonyuu"
        }, 
        {
            "content": "I'm stuck in same situation.\nBefore start debugging I'm giving a guess on different number of cores between each host.\nI'm running 64 core and 48 core hosts and trying to perform live migration.\nIt fails with exact same reason you are facing.\n", 
            "date_created": "2012-12-11 03:36:21.593390+00:00", 
            "author": "https://api.launchpad.net/1.0/~dongsoo-kim"
        }, 
        {
            "content": "Daniel: any ideas on this one? Superficially it looks like _compare_cpu might need to be fixed?\n", 
            "date_created": "2013-02-27 00:15:05.979261+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "It is worse than you might imagine. The problem here is that there are two CPU models for each host - the model that the host pCPU has, and the model that the guest vCPU uses. The migration checks are comparing the host CPUs from the two machines. So they can compare as incompatible, even if you've explicitly configured the guest CPU to be a model that is a lowest common denominator.  The correct approach is to compare the source guest CPU model with the target host CPU model, but I don't think it is easy todo since, since nothing in the Nova compute APIs exposes any data about guest CPU models. Fixing this correctly is quite a significant job, which I was planning on looking at in Havana.  Not sure how practical it is to do a fix for Grizzly.\n", 
            "date_created": "2013-02-27 10:12:17.494509+00:00", 
            "author": "https://api.launchpad.net/1.0/~berrange"
        }, 
        {
            "content": "I met the same issue , and I didn't see other hypervisor drivers check CPU models . What is the problem  if we don't check this ?\nIs there any way administrator can ignore this check ,such as adding one option to ignore this ?\nHere is my stacktrace and CPU models , the CPU models seemed similar. \nhttp://paste.openstack.org/show/37807/", 
            "date_created": "2013-05-28 02:15:53.459947+00:00", 
            "author": "https://api.launchpad.net/1.0/~glongwave"
        }, 
        {
            "content": "Also experiencing the exact same problem and wishing there was a way to work around it. Set both CPUs to mode=custom and model=kvm64 in nova.conf\n\nWould appreciate any tip on how to disable/skip this check and perform migration as I'd really like to test this feature before Havana comes out. Error is \"ERROR nova.openstack.common.rpc.common [req-05352bd7-fc35-4ef3-9d3e-8950c2e2f8fd 52524ad5d7ff489e9032b029dae5a799 535810064d95435fb9b21d98cbe1abf5] Returning exception Unacceptable CPU info: CPU doesn't have compatibility.\"", 
            "date_created": "2013-06-16 02:33:51.263168+00:00", 
            "author": "https://api.launchpad.net/1.0/~belrik"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/41386", 
            "date_created": "2013-08-12 11:46:09.916706+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "I prefer fixing the incorrect cpu check.\nPrice of delegating it to libvirt is too heavy.", 
            "date_created": "2013-08-13 10:23:51.731277+00:00", 
            "author": "https://api.launchpad.net/1.0/~wenjianhn"
        }, 
        {
            "content": "I guys,\n\nI have the same error but my two servers have the same CPU mode :\n\nHost 1:\nArchitecture:          x86_64\nCPU op-mode(s):        32-bit, 64-bit\nByte Order:            Little Endian\nCPU(s):                8\nOn-line CPU(s) list:   0-7\nThread(s) per core:    1\nCore(s) per socket:    4\nSocket(s):             2\nNUMA node(s):          1\nVendor ID:             GenuineIntel\nCPU family:            6\nModel:                 23\nStepping:              6\nCPU MHz:               2992.446\nBogoMIPS:              5985.06\nVirtualization:        VT-x\nL1d cache:             32K\nL1i cache:             32K\nL2 cache:              6144K\nNUMA node0 CPU(s):     0-7\n\nHost2 :\nArchitecture:          x86_64\nCPU op-mode(s):        32-bit, 64-bit\nByte Order:            Little Endian\nCPU(s):                8\nOn-line CPU(s) list:   0-7\nThread(s) per core:    1\nCore(s) per socket:    4\nSocket(s):             2\nNUMA node(s):          1\nVendor ID:             GenuineIntel\nCPU family:            6\nModel:                 23\nStepping:              10\nCPU MHz:               2992.632\nBogoMIPS:              5985.06\nVirtualization:        VT-x\nL1d cache:             32K\nL1i cache:             32K\nL2 cache:              6144K\nNUMA node0 CPU(s):     0-7\n\n\nError in nova-api.log :\n\n2013-08-26 23:25:50.012 ERROR nova.api.openstack.compute.contrib.admin_actions [req-5f28e5de-1312-4e07-81e7-893f439d7ccb f235975a22d64ca3a28f4b5dc1cbceb8 00eb7054314244fca82cf79f2caa8ff7] Live migration of instance 32e94646-2a3a-4c53-b169-becd433880eb to host HOST01 failed\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions Traceback (most recent call last):\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions   File \"/usr/lib/python2.7/dist-packages/nova/api/openstack/compute/contrib/admin_actions.py\", line 284, in _migrate_live\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions     disk_over_commit, host)\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions   File \"/usr/lib/python2.7/dist-packages/nova/compute/api.py\", line 134, in inner\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions     return f(self, context, instance, *args, **kw)\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions   File \"/usr/lib/python2.7/dist-packages/nova/compute/api.py\", line 2454, in live_migrate\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions     disk_over_commit, instance, host_name)\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions   File \"/usr/lib/python2.7/dist-packages/nova/scheduler/rpcapi.py\", line 110, in live_migration\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions     dest=dest))\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions   File \"/usr/lib/python2.7/dist-packages/nova/openstack/common/rpc/proxy.py\", line 80, in call\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions     return rpc.call(context, self._get_topic(topic), msg, timeout)\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions   File \"/usr/lib/python2.7/dist-packages/nova/openstack/common/rpc/__init__.py\", line 140, in call\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions     return _get_impl().call(CONF, context, topic, msg, timeout)\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions   File \"/usr/lib/python2.7/dist-packages/nova/openstack/common/rpc/impl_kombu.py\", line 798, in call\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions     rpc_amqp.get_connection_pool(conf, Connection))\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions   File \"/usr/lib/python2.7/dist-packages/nova/openstack/common/rpc/amqp.py\", line 612, in call\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions     rv = list(rv)\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions   File \"/usr/lib/python2.7/dist-packages/nova/openstack/common/rpc/amqp.py\", line 561, in __iter__\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions     raise result\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions RemoteError: Remote error: InvalidCPUInfo_Remote Unacceptable CPU info: CPU doesn't have compatibility.\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions 0\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions Refer to http://libvirt.org/html/libvirt-libvirt.html#virCPUCompareResult\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions Traceback (most recent call last):\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions   File \"/usr/lib/python2.7/dist-packages/nova/openstack/common/rpc/amqp.py\", line 430, in _process_data\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions     rval = self.proxy.dispatch(ctxt, version, method, **args)\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions   File \"/usr/lib/python2.7/dist-packages/nova/openstack/common/rpc/dispatcher.py\", line 133, in dispatch\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions     return getattr(proxyobj, method)(ctxt, **kwargs)\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions   File \"/usr/lib/python2.7/dist-packages/nova/exception.py\", line 117, in wrapped\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions     temp_level, payload)\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions   File \"/usr/lib/python2.7/contextlib.py\", line 24, in __exit__\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions     self.gen.next()\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions   File \"/usr/lib/python2.7/dist-packages/nova/exception.py\", line 94, in wrapped\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions     return f(self, context, *args, **kw)\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions   File \"/usr/lib/python2.7/dist-packages/nova/compute/manager.py\", line 3047, in check_can_live_migrate_destination\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions     block_migration, disk_over_commit)\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions   File \"/usr/lib/python2.7/dist-packages/nova/virt/libvirt/driver.py\", line 2855, in check_can_live_migrate_destination\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions     self._compare_cpu(source_cpu_info)\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions   File \"/usr/lib/python2.7/dist-packages/nova/virt/libvirt/driver.py\", line 2989, in _compare_cpu\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions     raise exception.InvalidCPUInfo(reason=m % locals())\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions InvalidCPUInfo: Unacceptable CPU info: CPU doesn't have compatibility.\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions 0\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions Refer to http://libvirt.org/html/libvirt-libvirt.html#virCPUCompareResult\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions [u'Traceback (most recent call last):\\n', u'  File \"/usr/lib/python2.7/dist-packages/nova/openstack/common/rpc/amqp.py\", line 430, in _process_data\\n    rval = self.proxy.dispatch(ctxt, version, method, **args)\\n', u'  File \"/usr/lib/python2.7/dist-packages/nova/openstack/common/rpc/dispatcher.py\", line 133, in dispatch\\n    return getattr(proxyobj, method)(ctxt, **kwargs)\\n', u'  File \"/usr/lib/python2.7/dist-packages/nova/scheduler/manager.py\", line 117, in live_migration\\n    context, ex, {})\\n', u'  File \"/usr/lib/python2.7/contextlib.py\", line 24, in __exit__\\n    self.gen.next()\\n', u'  File \"/usr/lib/python2.7/dist-packages/nova/scheduler/manager.py\", line 96, in live_migration\\n    block_migration, disk_over_commit)\\n', u'  File \"/usr/lib/python2.7/dist-packages/nova/scheduler/driver.py\", line 215, in schedule_live_migration\\n    disk_over_commit)\\n', u'  File \"/usr/lib/python2.7/dist-packages/nova/compute/rpcapi.py\", line 240, in check_can_live_migrate_destination\\n    ctxt, destination, None))\\n', u'  File \"/usr/lib/python2.7/dist-packages/nova/openstack/common/rpc/proxy.py\", line 80, in call\\n    return rpc.call(context, self._get_topic(topic), msg, timeout)\\n', u'  File \"/usr/lib/python2.7/dist-packages/nova/openstack/common/rpc/__init__.py\", line 140, in call\\n    return _get_impl().call(CONF, context, topic, msg, timeout)\\n', u'  File \"/usr/lib/python2.7/dist-packages/nova/openstack/common/rpc/impl_kombu.py\", line 798, in call\\n    rpc_amqp.get_connection_pool(conf, Connection))\\n', u'  File \"/usr/lib/python2.7/dist-packages/nova/openstack/common/rpc/amqp.py\", line 612, in call\\n    rv = list(rv)\\n', u'  File \"/usr/lib/python2.7/dist-packages/nova/openstack/common/rpc/amqp.py\", line 561, in __iter__\\n    raise result\\n', u'InvalidCPUInfo_Remote: Unacceptable CPU info: CPU doesn\\'t have compatibility.\\n\\n0\\n\\nRefer to http://libvirt.org/html/libvirt-libvirt.html#virCPUCompareResult\\nTraceback (most recent call last):\\n\\n  File \"/usr/lib/python2.7/dist-packages/nova/openstack/common/rpc/amqp.py\", line 430, in _process_data\\n    rval = self.proxy.dispatch(ctxt, version, method, **args)\\n\\n  File \"/usr/lib/python2.7/dist-packages/nova/openstack/common/rpc/dispatcher.py\", line 133, in dispatch\\n    return getattr(proxyobj, method)(ctxt, **kwargs)\\n\\n  File \"/usr/lib/python2.7/dist-packages/nova/exception.py\", line 117, in wrapped\\n    temp_level, payload)\\n\\n  File \"/usr/lib/python2.7/contextlib.py\", line 24, in __exit__\\n    self.gen.next()\\n\\n  File \"/usr/lib/python2.7/dist-packages/nova/exception.py\", line 94, in wrapped\\n    return f(self, context, *args, **kw)\\n\\n  File \"/usr/lib/python2.7/dist-packages/nova/compute/manager.py\", line 3047, in check_can_live_migrate_destination\\n    block_migration, disk_over_commit)\\n\\n  File \"/usr/lib/python2.7/dist-packages/nova/virt/libvirt/driver.py\", line 2855, in check_can_live_migrate_destination\\n    self._compare_cpu(source_cpu_info)\\n\\n  File \"/usr/lib/python2.7/dist-packages/nova/virt/libvirt/driver.py\", line 2989, in _compare_cpu\\n    raise exception.InvalidCPUInfo(reason=m % locals())\\n\\nInvalidCPUInfo: Unacceptable CPU info: CPU doesn\\'t have compatibility.\\n\\n0\\n\\nRefer to http://libvirt.org/html/libvirt-libvirt.html#virCPUCompareResult\\n\\n'].\n2013-08-26 23:25:50.012 9958 TRACE nova.api.openstack.compute.contrib.admin_actions\n2013-08-26 23:25:50.015 INFO nova.api.openstack.wsgi [req-5f28e5de-1312-4e07-81e7-893f439d7ccb f235975a22d64ca3a28f4b5dc1cbceb8 00eb7054314244fca82cf79f2caa8ff7] HTTP exception thrown: Live migration of instance 32e94646-2a3a-4c53-b169-becd433880eb to host HOST01 failed\n2013-08-26 23:25:50.017 INFO nova.osapi_compute.wsgi.server [req-5f28e5de-1312-4e07-81e7-893f439d7ccb f235975a22d64ca3a28f4b5dc1cbceb8 00eb7054314244fca82cf79f2caa8ff7] 172.17.1.1 \"POST /v2/00eb7054314244fca82cf79f2caa8ff7/servers/32e94646-2a3a-4c53-b169-becd433880eb/action HTTP/1.1\" status: 400 len: 331 time: 4.1423299\n\n\nnova.conf :\n\nlibvirt_cpu_mode=custom\nlibvirt_cpu_model=kvm64\nlive_migration_bandwidth=0\nlive_migration_flag=VIR_MIGRATE_UNDEFINE_SOURCE, VIR_MIGRATE_PEER2PEER\nlive_migration_retry_count=30\nlive_migration_uri=qemu+tcp://%s/system\n\nCan it be related ?\n\nThanks", 
            "date_created": "2013-08-26 21:49:17.308306+00:00", 
            "author": "https://api.launchpad.net/1.0/~julienitsme"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/53746", 
            "date_created": "2013-10-24 21:50:46.932692+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Would it be possible to have a configuration flag to *disable* this check, in case someone actually know what he is doing and still want to migrate?\n\nSo far it's a very important feature we are missing, and I don't see any valid reason for it.\n\nI promise I will be very careful and will only disable the check when I am sure that I can actually migrate instances between two machines. and I promise I will not open tickets in case something goes wrong :)", 
            "date_created": "2013-11-13 14:37:37.366156+00:00", 
            "author": "https://api.launchpad.net/1.0/~arcimboldo"
        }, 
        {
            "content": "@antonio\n\nafter applying my patch, it's unnecessary to disable this check,  you can  config the guest  cpu model , if the model is unset, then  the guest instance can be migrated to any  servers.", 
            "date_created": "2013-11-13 15:36:31.789864+00:00", 
            "author": "https://api.launchpad.net/1.0/~heut2008"
        }, 
        {
            "content": "We have the same problem with our Intel Xeon servers. When we try migrating VM from one server to another, the destination compute does not recognize the CPU's compatibility. After inspecting for a while, we believe that the problem is due to some of the VM's CPU features that do not appear in destination host' CPU. \n\nNova convert CPU_info into XML records and compare the two. If we look at http://libvirt.org/html/libvirt-libvirt.html#virCPUCompareResult as suggested :\n\nenum virCPUCompareResult {\n    VIR_CPU_COMPARE_ERROR\t         =\t-1\n    VIR_CPU_COMPARE_INCOMPATIBLE\t =\t0\n    VIR_CPU_COMPARE_IDENTICAL\t         =\t1\n    VIR_CPU_COMPARE_SUPERSET\t         =\t2\n    VIR_CPU_COMPARE_LAST\t                 =\t3\n}\n\nthen if one of the VM'sCPU_info feature is not in host's CPU_info, then the CPU_info's XML is not identical or superset, which leads to INCOMPATIBLE. In our case it's the \"ds\" feature (see log below).\n\nWe failed to understand why the source compute would put such a feature in the VM's CPU_info. By default qemu uses host's CPU_info thus they shoud be identical.\n\nIf we omit the check (by forcing returning 2), the migration processes smoothly.  So we think that the _compare_cpu function in /nova/nova/virt/libvirt/driver.py should consider essential features and optional features.\n\n-----------------------\nVM's CPU (given by source compute):\n\n2013-11-27 13:40:04.942 18644 INFO nova.virt.libvirt.driver [req-e2ee030b-d097-434e-94e0-316c3f9f835d 6ac8163893924c058c98e8595de6bec4 15f206d66a044758af148796928d5efb] Instance launched has CPU info:\n{\"vendor\": \"Intel\", \"model\": \"SandyBridge\", \"arch\": \"x86_64\", \"features\": [\"pdpe1gb\", \"osxsave\", \"dca\", \"pcid\", \"pdcm\", \"xtpr\", \"tm2\", \"est\", \"smx\", \"vmx\", \"ds_cpl\", \"monitor\", \"dtes64\", \"pbe\", \"tm\", \"ht\", \"ss\", \"acpi\", \"ds\", \"vme\"], \"topology\": {\"cores\": 6, \"threads\": 2, \"sockets\": 1}}\n2013-11-27 13:40:04.944 18644 DEBUG nova.virt.libvirt.config [req-e2ee030b-d097-434e-94e0-316c3f9f835d 6ac8163893924c058c98e8595de6bec4 15f206d66a044758af148796928d5efb] Generated XML <cpu>\n  <arch>x86_64</arch>\n  <model>SandyBridge</model>\n  <vendor>Intel</vendor>\n  <topology sockets=\"1\" cores=\"6\" threads=\"2\"/>\n  <feature name=\"pdpe1gb\"/>\n  <feature name=\"osxsave\"/>\n  <feature name=\"dca\"/>\n  <feature name=\"pcid\"/>\n  <feature name=\"pdcm\"/>\n  <feature name=\"xtpr\"/>\n  <feature name=\"tm2\"/>\n  <feature name=\"est\"/>\n  <feature name=\"smx\"/>\n  <feature name=\"vmx\"/>\n  <feature name=\"ds_cpl\"/>\n  <feature name=\"monitor\"/>\n  <feature name=\"dtes64\"/>\n  <feature name=\"pbe\"/>\n  <feature name=\"tm\"/>\n  <feature name=\"ht\"/>\n  <feature name=\"ss\"/>\n  <feature name=\"acpi\"/>\n  <feature name=\"ds\"/>\n  <feature name=\"vme\"/>\n</cpu>\n  from (pid=18644) to_xml /mnt/VMS/devstack/nova/nova/virt/libvirt/config.py:70\n\n------------------------\nDestination and Source compute CPU: cat /proc/cpuinfo\n\nprocessor       : 23\nvendor_id       : GenuineIntel\ncpu family      : 6\nmodel           : 45\nmodel name      : Intel(R) Xeon(R) CPU E5-2620 0 @ 2.00GHz\nstepping        : 7\nmicrocode       : 0x70d\ncpu MHz         : 2000.081\ncache size      : 15360 KB\nphysical id     : 1\nsiblings        : 12\ncore id         : 5\ncpu cores       : 6\napicid          : 43\ninitial apicid  : 43\nfpu             : yes\nfpu_exception   : yes\ncpuid level     : 13\nwp              : yes\nflags           : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid\nbogomips        : 3999.94\nclflush size    : 64\ncache_alignment : 64\naddress sizes   : 46 bits physical, 48 bits virtual\npower management:\n\n-----------------------", 
            "date_created": "2013-11-27 14:15:34.885745+00:00", 
            "author": "https://api.launchpad.net/1.0/~toan-tran"
        }, 
        {
            "content": "I all,\n\nIs there any news on that subject ?\n\nThanks", 
            "date_created": "2014-02-27 21:04:24.839726+00:00", 
            "author": "https://api.launchpad.net/1.0/~julienitsme"
        }, 
        {
            "content": "the patch is blocked by a blueprint which has been delayed to June, I am trying to push again.", 
            "date_created": "2014-02-28 02:31:34.685059+00:00", 
            "author": "https://api.launchpad.net/1.0/~heut2008"
        }, 
        {
            "content": "hi Yaguang:\nI have the same problem and have do some reserch.\nI use inter cpu as example:\nthis is inter cpu model:\nConroe<Penryn<Nehalem<Westmere<SandyBridge<Haswell\n\nin openstack, if you migrating vm from Haswell to SandyBridge, it is OK. but if you migrating vm from SandyBridge \nto Haswell, it failed. because different cpu have different core cmd.  Haswell core cmd include SandyBridge core cmd.\nso it can migrate.\n\nif we want to migrate between different cpu mode, we can use the same cpu mode. libvirt support the cpu model lable.\nlike this:\n<cpu>\n         <model>SandyBridge</model>\n<cpu>\n\nif you want migrate from SandyBridge to Haswell, you can set the lable, model is SandyBridge. because Haswell is also compatible with SandyBridge. \n\nbut openstack don't support set the mode cpu, so we can modify the code.\n\nif we disable the check, it will get some unknown error. because the vm run the different core cmd.\n\nthanks\n\n", 
            "date_created": "2014-03-11 12:11:56.749895+00:00", 
            "author": "https://api.launchpad.net/1.0/~lizheming-li"
        }, 
        {
            "content": "lizheming,\n\nOpenStack do support set CPU mode, and kvm will handle the compatibility if you set cpu_mode=none even host have different CPU model. and my patch for this is to let libvirt do the check for CPU compatibility.\n\n 222     cfg.StrOpt('cpu_mode',\n 223                help='Set to \"host-model\" to clone the host CPU feature flags; '\n 224                     'to \"host-passthrough\" to use the host CPU model exactly; '\n 225                     'to \"custom\" to use a named CPU model; '\n 226                     'to \"none\" to not set any CPU model. '\n 227                     'If virt_type=\"kvm|qemu\", it will default to '\n 228                     '\"host-model\", otherwise it will default to \"none\"',\n 229                deprecated_name='libvirt_cpu_mode',\n 230                deprecated_group='DEFAULT'),\n 231     cfg.StrOpt('cpu_model',\n 232                help='Set to a named libvirt CPU model (see names listed '\n 233                     'in /usr/share/libvirt/cpu_map.xml). Only has effect if '\n 234                     'cpu_mode=\"custom\" and virt_type=\"kvm|qemu\"',\n 235                deprecated_name='libvirt_cpu_model',\n 236                deprecated_group='DEFAULT'),\n\n\n", 
            "date_created": "2014-03-12 07:22:15.892282+00:00", 
            "author": "https://api.launchpad.net/1.0/~heut2008"
        }, 
        {
            "content": "Hi Yaguang, can you tell me which is the blueprint that is blocking the patch?\nThanks.", 
            "date_created": "2014-03-17 14:43:03.061283+00:00", 
            "author": "https://api.launchpad.net/1.0/~facundo-n-maldonado"
        }, 
        {
            "content": "Just wondering where we're at with this now...", 
            "date_created": "2014-06-20 16:56:02.883865+00:00", 
            "author": "https://api.launchpad.net/1.0/~cbf123"
        }, 
        {
            "content": "Clearly not in progress any more", 
            "date_created": "2014-09-03 12:59:25.463762+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "I have the same bug in Icehouce. The problem is that the check in method check_can_live_migrate_destination compares physical source CPU from database unlike to real parameters of VM.\n\nThe one siple hack is to comment \nself._compare_cpu(source_cpu_info)\nstring from nova/virt/libvirt/driver.py", 
            "date_created": "2014-12-10 14:33:36.497199+00:00", 
            "author": "https://api.launchpad.net/1.0/~vtabolin"
        }, 
        {
            "content": "Change abandoned by Sean Dague (<email address hidden>) on branch: master\nReview: https://review.openstack.org/53746\nReason: This review is > 4 weeks without comment, and failed Jenkins the last time it was checked. We are abandoning this for now. Feel free to reactivate the review by pressing the restore button and leaving a 'recheck' comment to get fresh test results.", 
            "date_created": "2015-01-23 15:29:50.326906+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed again", 
            "date_created": "2015-02-12 15:19:57.805951+00:00", 
            "author": "https://api.launchpad.net/1.0/~dims-v"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/53746\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=79a0755597f4983367eb0caf4669ffb881b4f720\nSubmitter: Jenkins\nBranch:    master\n\ncommit 79a0755597f4983367eb0caf4669ffb881b4f720\nAuthor: yunhong jiang <email address hidden>\nDate:   Fri Feb 6 07:03:45 2015 -0800\n\n    libvirt: fix overly strict CPU model comparison in live migration\n    \n    The current libvirt driver migration code checks whether the\n    dest host can support the guest, by comparing the source host\n    CPU model. This is overly strict, as the guest may well be\n    running with a more restrictive CPU model that hides many\n    host features.  The correct approach is to compare against\n    the guest's configured CPU model.\n    \n    To achieve the compatibility when migrate instance from old compute\n    node which does not provide vcpu_model in instance object, the source\n    host's compute info is still provided.\n    \n    Co-authored: Daniel P. Berrange <email address hidden>\n    Co-authored: Yunhong Jiang <email address hidden>\n    \n    Closes-Bug: 1082414\n    \n    Change-Id: I65f505fec64c65d2641d2bfd940cde44bcd83a78\n", 
            "date_created": "2015-02-16 06:01:18.055413+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Any chance of this getting backported to Icehouse?", 
            "date_created": "2015-02-23 17:18:10.170258+00:00", 
            "author": "https://api.launchpad.net/1.0/~daniel-schneller"
        }, 
        {
            "content": "To backport is a bit tricky because we are using the instance object to achieve it.", 
            "date_created": "2015-02-23 17:40:44.763190+00:00", 
            "author": "https://api.launchpad.net/1.0/~yunhong-jiang"
        }, 
        {
            "content": "Ok. So if I wanted to have reliable live migration on my Icehouse cluster, would this be a valid approach?\n\n1) Find lowest common denominator CPU model across all hypervisors using virsh capabilities / virsh cpu-baseline\n2) Configure nova-compute.conf to include cpu_mode=custom, cpu_model=Westmere (in my case)\n3) Disable the CPU check in nova/virt/libvirt/driver.py (comment out line 4248)\n    4246         # Compare CPU\n    4247         source_cpu_info = src_compute_info['cpu_info']\n    4248         self._compare_cpu(source_cpu_info)\n\nAssuming this cluster is not going to get any older CPU or non-Intel CPU models in the future, this should be safe, right?\n", 
            "date_created": "2015-02-23 18:44:09.945105+00:00", 
            "author": "https://api.launchpad.net/1.0/~daniel-schneller"
        }, 
        {
            "content": "...and assuming, of course, that all VMs get rebooted once, so they \"forget\" about the CPU capabilities they might have received from a more modern hypervisor.", 
            "date_created": "2015-02-23 18:48:56.843528+00:00", 
            "author": "https://api.launchpad.net/1.0/~daniel-schneller"
        }, 
        {
            "content": "Yes, I think it should work.", 
            "date_created": "2015-02-23 20:07:46.107502+00:00", 
            "author": "https://api.launchpad.net/1.0/~yunhong-jiang"
        }, 
        {
            "content": "I'm seeing a regression when cpu_mode is set to 'none'.  In my case, check_can_live_migrate_destination() is passed an instance with a vcpu_model attribute. This is then passed onto the call to _compare_cpu(). The problem however is that instance.vcpu_model.model is None. The new logic in _compare_cpu() ultimately causes cpu.to_xml() to result in a cpu model of None which causes the following exception:\n\nTRACE oslo_messaging.rpc.dispatcher libvirtError: invalid argument: no guest CPU model specified\n\nSince there is a specific check for CONF.libvirt.cpu_mode being set to 'none' in _get_guest_cpu_model_config(), can we fallback to the old logic? I've currently got this implemented and working:\n\n-         if not instance.vcpu_model:\n+        if not instance.vcpu_model or not instance.vcpu_model.model:\n\nThanks\n", 
            "date_created": "2015-02-25 15:52:23.982273+00:00", 
            "author": "https://api.launchpad.net/1.0/~tony-walker-h"
        }, 
        {
            "content": "In fact, unless cpu_mode is set to 'custom' and cpu_model has been explicitly set, I end up with a vcpu_model object that looks like the below which will always raise the exception since model==None:\n\nVirtCPUModel(arch=None,features=[],match='exact',mode='host-model',model=None,topology=VirtCPUTopology,vendor=None)\n", 
            "date_created": "2015-02-25 16:22:57.765871+00:00", 
            "author": "https://api.launchpad.net/1.0/~tony-walker-h"
        }, 
        {
            "content": "Hi, Tony, thanks for reporting the regression. I didn't test this scenario. I tested the one reported on the bug report.\n\nI will try to reproduce this tomorrow.  BTW, can you please tell me , before this patch, will it work if the target host or source host's  cpu_mode is set as None?\n\nThanks\n--jyh ", 
            "date_created": "2015-02-26 02:15:43.085594+00:00", 
            "author": "https://api.launchpad.net/1.0/~yunhong-jiang"
        }, 
        {
            "content": "Hi,\n\nYes, this worked previously when cpu_mode is set to None. I currently have the config set to cpu_mode=None which causes 'mode' to be set to 'host-model' in _get_guest_cpu_model_config(). Regardless, I'm left with a VirtCPUModel instance with a model of 'None' when the check is made.\n\nThanks,\n\nTony", 
            "date_created": "2015-02-26 19:18:41.414803+00:00", 
            "author": "https://api.launchpad.net/1.0/~tony-walker-h"
        }, 
        {
            "content": "Related fix proposed to branch: master\nReview: https://review.openstack.org/161944", 
            "date_created": "2015-03-05 23:37:36.213371+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "The issue found by Tony Walker is also discussed in bug 1433933", 
            "date_created": "2015-03-20 10:22:28.467538+00:00", 
            "author": "https://api.launchpad.net/1.0/~mzoeller"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/161944\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=5653bd291665bcdecad46ed6654a04c49e4b1dda\nSubmitter: Jenkins\nBranch:    master\n\ncommit 5653bd291665bcdecad46ed6654a04c49e4b1dda\nAuthor: yunhong jiang <email address hidden>\nDate:   Thu Mar 5 15:09:49 2015 -0800\n\n    Check host cpu_info if no cpu_model for guest\n    \n    When no cpu_model specified to guest, we should use host cpu_info to\n    check for live migration.\n    \n    Change-Id: I410f53f6e54a698a48d8d5566ce192cda0365c98\n    Closes-Bug: #1082414\n", 
            "date_created": "2015-03-26 02:24:32.411383+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}