{
    "status": "Fix Released", 
    "last_updated": "2012-04-05 09:32:02.690011+00:00", 
    "description": "As of e7d1792 I'm now getting SmokeStack failures when using Postgres:\n\n2011-09-29 18:06:19,926 ERROR nova.api.ec2.metadata [-] Failed to get metadata for ip: 192.168.0.2\n(nova.api.ec2.metadata): TRACE: Traceback (most recent call last):\n(nova.api.ec2.metadata): TRACE:   File \"/usr/lib/python2.6/dist-packages/nova/api/ec2/metadatarequesthandler.py\", line 79, in __call__\n(nova.api.ec2.metadata): TRACE:     meta_data = self.cc.get_metadata(remote_address)\n(nova.api.ec2.metadata): TRACE:   File \"/usr/lib/python2.6/dist-packages/nova/api/ec2/cloud.py\", line 380, in get_metadata\n(nova.api.ec2.metadata): TRACE:     return_all=False)\n(nova.api.ec2.metadata): TRACE:   File \"/usr/lib/python2.6/dist-packages/nova/api/ec2/cloud.py\", line 276, in _get_floaters_for_instance\n(nova.api.ec2.metadata): TRACE:     floaters = self._get_floaters_for_fixed_ip(context, ip)\n(nova.api.ec2.metadata): TRACE:   File \"/usr/lib/python2.6/dist-packages/nova/api/ec2/cloud.py\", line 244, in _get_floaters_for_fixed_ip\n(nova.api.ec2.metadata): TRACE:     fixed_ip)\n(nova.api.ec2.metadata): TRACE:   File \"/usr/lib/python2.6/dist-packages/nova/network/api.py\", line 53, in get_floating_ips_by_fixed_address\n(nova.api.ec2.metadata): TRACE:     'args': {'fixed_address': fixed_address}})\n(nova.api.ec2.metadata): TRACE:   File \"/usr/lib/python2.6/dist-packages/nova/rpc/__init__.py\", line 45, in call\n(nova.api.ec2.metadata): TRACE:     return get_impl().call(context, topic, msg)\n(nova.api.ec2.metadata): TRACE:   File \"/usr/lib/python2.6/dist-packages/nova/rpc/impl_kombu.py\", line 738, in call\n(nova.api.ec2.metadata): TRACE:     rv = list(rv)\n(nova.api.ec2.metadata): TRACE:   File \"/usr/lib/python2.6/dist-packages/nova/rpc/impl_kombu.py\", line 703, in __iter__\n(nova.api.ec2.metadata): TRACE:     raise result\n(nova.api.ec2.metadata): TRACE: RemoteError: ProgrammingError (ProgrammingError) operator does not exist: character varying = text[]\n(nova.api.ec2.metadata): TRACE: LINE 4: WHERE fixed_ips.address = ARRAY[E'192.168.0.2'] AND fixed_ip...\n(nova.api.ec2.metadata): TRACE:                                 ^\n(nova.api.ec2.metadata): TRACE: HINT:  No operator matches the given name and argument type(s). You might need to add explicit type casts.\n\n---\n\nDue to this issue I'm unable to boot instances using Postgres.", 
    "tags": [], 
    "importance": "Critical", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/862658", 
    "owner": "https://api.launchpad.net/1.0/~cbehrens", 
    "id": 862658, 
    "index": 38, 
    "created": "2011-09-29 18:44:15.459913+00:00", 
    "title": "fixed_ips.address = ARRAY cast errors", 
    "comments": [
        {
            "content": "As of e7d1792 I'm not getting SmokeStack failures when using Postgres:\n\n\n2011-09-29 18:06:19,926 ERROR nova.api.ec2.metadata [-] Failed to get metadata for ip: 192.168.0.2\n(nova.api.ec2.metadata): TRACE: Traceback (most recent call last):\n(nova.api.ec2.metadata): TRACE:   File \"/usr/lib/python2.6/dist-packages/nova/api/ec2/metadatarequesthandler.py\", line 79, in __call__\n(nova.api.ec2.metadata): TRACE:     meta_data = self.cc.get_metadata(remote_address)\n(nova.api.ec2.metadata): TRACE:   File \"/usr/lib/python2.6/dist-packages/nova/api/ec2/cloud.py\", line 380, in get_metadata\n(nova.api.ec2.metadata): TRACE:     return_all=False)\n(nova.api.ec2.metadata): TRACE:   File \"/usr/lib/python2.6/dist-packages/nova/api/ec2/cloud.py\", line 276, in _get_floaters_for_instance\n(nova.api.ec2.metadata): TRACE:     floaters = self._get_floaters_for_fixed_ip(context, ip)\n(nova.api.ec2.metadata): TRACE:   File \"/usr/lib/python2.6/dist-packages/nova/api/ec2/cloud.py\", line 244, in _get_floaters_for_fixed_ip\n(nova.api.ec2.metadata): TRACE:     fixed_ip)\n(nova.api.ec2.metadata): TRACE:   File \"/usr/lib/python2.6/dist-packages/nova/network/api.py\", line 53, in get_floating_ips_by_fixed_address\n(nova.api.ec2.metadata): TRACE:     'args': {'fixed_address': fixed_address}})\n(nova.api.ec2.metadata): TRACE:   File \"/usr/lib/python2.6/dist-packages/nova/rpc/__init__.py\", line 45, in call\n(nova.api.ec2.metadata): TRACE:     return get_impl().call(context, topic, msg)\n(nova.api.ec2.metadata): TRACE:   File \"/usr/lib/python2.6/dist-packages/nova/rpc/impl_kombu.py\", line 738, in call\n(nova.api.ec2.metadata): TRACE:     rv = list(rv)\n(nova.api.ec2.metadata): TRACE:   File \"/usr/lib/python2.6/dist-packages/nova/rpc/impl_kombu.py\", line 703, in __iter__\n(nova.api.ec2.metadata): TRACE:     raise result\n(nova.api.ec2.metadata): TRACE: RemoteError: ProgrammingError (ProgrammingError) operator does not exist: character varying = text[]\n(nova.api.ec2.metadata): TRACE: LINE 4: WHERE fixed_ips.address = ARRAY[E'192.168.0.2'] AND fixed_ip...\n(nova.api.ec2.metadata): TRACE:                                 ^\n(nova.api.ec2.metadata): TRACE: HINT:  No operator matches the given name and argument type(s). You might need to add explicit type casts.\n\n---\n\nDue to this issue I'm unable to boot instances using Postgres.", 
            "date_created": "2011-09-29 18:44:15.459913+00:00", 
            "author": "https://api.launchpad.net/1.0/~dan-prince"
        }, 
        {
            "content": "Looks like similar errors occur w/ MySQL as well:\n\n(nova.api.ec2.metadata): TRACE: RemoteError: ProgrammingError (ProgrammingError) (1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ') AND fixed_ips.deleted = 0 \\n LIMIT 0, 1) AS anon_1 LEFT OUTER JOIN networks AS ' at line 4\") 'SELECT anon_1.fixed_ips_created_at AS anon_1_fixed_ips_created_at, anon_1.fixed_ips_updated_at AS anon_1_fixed_ips_updated_at, anon_1.fixed_ips_deleted_at AS anon_1_fixed_ips_deleted_at, anon_1.fixed_ips_deleted AS anon_1_fixed_ips_deleted, anon_1.fixed_ips_id AS anon_1_fixed_ips_id, anon_1.fixed_ips_address AS anon_1_fixed_ips_address, anon_1.fixed_ips_network_id AS anon_1_fixed_ips_network_id, anon_1.fixed_ips_virtual_interface_id AS anon_1_fixed_ips_virtual_interface_id, anon_1.fixed_ips_instance_id AS anon_1_fixed_ips_instance_id, anon_1.fixed_ips_allocated AS anon_1_fixed_ips_allocated, anon_1.fixed_ips_leased AS anon_1_fixed_ips_leased, anon_1.fixed_ips_reserved AS anon_1_fixed_ips_reserved, anon_1.fixed_ips_host AS anon_1_fixed_ips_host, networks_1.created_at AS networks_1_created_at, networks_1.updated_at AS networks_1_updated_at, networks_1.deleted_at AS networks_1_deleted_at, networks_1.deleted AS networks_1_deleted, networks_1.id AS networks_1_id, networks_1.label AS networks_1_label, networks_1.injected AS networks_1_injected, networks_1.cidr AS networks_1_cidr, networks_1.cidr_v6 AS networks_1_cidr_v6, networks_1.multi_host AS networks_1_multi_host, networks_1.gateway_v6 AS networks_1_gateway_v6, networks_1.netmask_v6 AS networks_1_netmask_v6, networks_1.netmask AS networks_1_netmask, networks_1.bridge AS networks_1_bridge, networks_1.bridge_interface AS networks_1_bridge_interface, networks_1.gateway AS networks_1_gateway, networks_1.broadcast AS networks_1_broadcast, networks_1.dns1 AS networks_1_dns1, networks_1.dns2 AS networks_1_dns2, networks_1.vlan AS networks_1_vlan, networks_1.vpn_public_address AS networks_1_vpn_public_address, networks_1.vpn_public_port AS networks_1_vpn_public_port, networks_1.vpn_private_address AS networks_1_vpn_private_address, networks_1.dhcp_start AS networks_1_dhcp_start, networks_1.project_id AS networks_1_project_id, networks_1.priority AS networks_1_priority, networks_1.host AS networks_1_host, networks_1.uuid AS networks_1_uuid, instances_1.created_at AS instances_1_created_at, instances_1.updated_at AS instances_1_updated_at, instances_1.deleted_at AS instances_1_deleted_at, instances_1.deleted AS instances_1_deleted, instances_1.id AS instances_1_id, instances_1.user_id AS instances_1_user_id, instances_1.project_id AS instances_1_project_id, instances_1.image_ref AS instances_1_image_ref, instances_1.kernel_id AS instances_1_kernel_id, instances_1.ramdisk_id AS instances_1_ramdisk_id, instances_1.server_name AS instances_1_server_name, instances_1.launch_index AS instances_1_launch_index, instances_1.key_name AS instances_1_key_name, instances_1.key_data AS instances_1_key_data, instances_1.power_state AS instances_1_power_state, instances_1.vm_state AS instances_1_vm_state, instances_1.task_state AS instances_1_task_state, instances_1.memory_mb AS instances_1_memory_mb, instances_1.vcpus AS instances_1_vcpus, instances_1.local_gb AS instances_1_local_gb, instances_1.hostname AS instances_1_hostname, instances_1.host AS instances_1_host, instances_1.instance_type_id AS instances_1_instance_type_id, instances_1.user_data AS instances_1_user_data, instances_1.reservation_id AS instances_1_reservation_id, instances_1.scheduled_at AS instances_1_scheduled_at, instances_1.launched_at AS instances_1_launched_at, instances_1.terminated_at AS instances_1_terminated_at, instances_1.availability_zone AS instances_1_availability_zone, instances_1.display_name AS instances_1_display_name, instances_1.display_description AS instances_1_display_description, instances_1.launched_on AS instances_1_launched_on, instances_1.locked AS instances_1_locked, instances_1.os_type AS instances_1_os_type, instances_1.architecture AS instances_1_architecture, instances_1.vm_mode AS instances_1_vm_mode, instances_1.uuid AS instances_1_uuid, instances_1.root_device_name AS instances_1_root_device_name, instances_1.default_local_device AS instances_1_default_local_device, instances_1.default_swap_device AS instances_1_default_swap_device, instances_1.config_drive AS instances_1_config_drive, instances_1.access_ip_v4 AS instances_1_access_ip_v4, instances_1.access_ip_v6 AS instances_1_access_ip_v6, instances_1.managed_disk AS instances_1_managed_disk, instances_1.progress AS instances_1_progress, floating_ips_1.created_at AS floating_ips_1_created_at, floating_ips_1.updated_at AS floating_ips_1_updated_at, floating_ips_1.deleted_at AS floating_ips_1_deleted_at, floating_ips_1.deleted AS floating_ips_1_deleted, floating_ips_1.id AS floating_ips_1_id, floating_ips_1.address AS floating_ips_1_address, floating_ips_1.fixed_ip_id AS floating_ips_1_fixed_ip_id, floating_ips_1.project_id AS floating_ips_1_project_id, floating_ips_1.host AS floating_ips_1_host, floating_ips_1.auto_assigned AS floating_ips_1_auto_assigned \\nFROM (SELECT fixed_ips.created_at AS fixed_ips_created_at, fixed_ips.updated_at AS fixed_ips_updated_at, fixed_ips.deleted_at AS fixed_ips_deleted_at, fixed_ips.deleted AS fixed_ips_deleted, fixed_ips.id AS fixed_ips_id, fixed_ips.address AS fixed_ips_address, fixed_ips.network_id AS fixed_ips_network_id, fixed_ips.virtual_interface_id AS fixed_ips_virtual_interface_id, fixed_ips.instance_id AS fixed_ips_instance_id, fixed_ips.allocated AS fixed_ips_allocated, fixed_ips.leased AS fixed_ips_leased, fixed_ips.reserved AS fixed_ips_reserved, fixed_ips.host AS fixed_ips_host \\nFROM fixed_ips \\nWHERE fixed_ips.address = %s AND fixed_ips.deleted = %s \\n LIMIT 0, 1) AS anon_1 LEFT OUTER JOIN networks AS networks_1 ON networks_1.id = anon_1.fixed_ips_network_id LEFT OUTER JOIN instances AS instances_1 ON anon_1.fixed_ips_instance_id = instances_1.id AND anon_1.fixed_ips_deleted = %s LEFT OUTER JOIN floating_ips AS floating_ips_1 ON floating_ips_1.fixed_ip_id = anon_1.fixed_ips_id AND floating_ips_1.deleted = %s' ([], False, False, False)\n", 
            "date_created": "2011-09-29 19:25:01.178170+00:00", 
            "author": "https://api.launchpad.net/1.0/~dan-prince"
        }, 
        {
            "content": "*sigh*  going to point tr3buchet at this.  Something wrong with the DB query network/manager's \"get_floating_ips_by_fixed_address\" does.", 
            "date_created": "2011-09-29 19:40:38.814186+00:00", 
            "author": "https://api.launchpad.net/1.0/~cbehrens"
        }, 
        {
            "content": "Actually... after looking more.. maybe this is my bug... I might be passing a list of IPs instead of a single IP.", 
            "date_created": "2011-09-29 19:46:51.247337+00:00", 
            "author": "https://api.launchpad.net/1.0/~cbehrens"
        }, 
        {
            "content": "https://review.openstack.org/744", 
            "date_created": "2011-09-29 20:04:00.057824+00:00", 
            "author": "https://api.launchpad.net/1.0/~cbehrens"
        }, 
        {
            "content": "Chris,\n\nJust ran smoke tests on this branch via SmokeStack. I'm now getting some different errors:\n\nhttp://paste.openstack.org/show/2623/\n\nSo the issues caused by e7d1792 seem to be causing some errors.", 
            "date_created": "2011-09-30 14:12:15.963483+00:00", 
            "author": "https://api.launchpad.net/1.0/~dan-prince"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/744\nCommitted: http://github.com/openstack/nova/commit/eff0a63758ad59d62045bf913423cdd0c440fa28\nSubmitter: Jenkins\nBranch:    master\n\n status fixcommitted\n done\n\ncommit eff0a63758ad59d62045bf913423cdd0c440fa28\nAuthor: Chris Behrens <email address hidden>\nDate:   Thu Sep 29 12:54:48 2011 -0700\n\n    Fixes bug 862658 -- ec2 metadata issue getting IPs\n    \n    Was looping through a tuple of (ipv4s, ipv6s) vs just ipv4s list.. to get floating IPs.\n    \n    Change-Id: Ie743012b7074ecb8b9bc6f018968e21e2f6d405d\n", 
            "date_created": "2011-10-06 00:30:42+00:00", 
            "author": "https://api.launchpad.net/1.0/~openstack-gerrit"
        }
    ]
}