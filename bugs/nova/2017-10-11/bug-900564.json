{
    "status": "Fix Released", 
    "last_updated": "2012-04-05 09:51:07.414743+00:00", 
    "description": "Per https://bugs.launchpad.net/nova/+bug/701121, Vish indicates that it's intentional that read_deleted returns only deleted records and, moreover, that there is no way for a context object to have access to both deleted and undeleted records.\n\nIn cases of bad data we may have cases where something is deleted but a related object isn't. In order to perform the cleanup, we need an admin context that can see both objects.\n\nTo fix this, I'm proposing refactoring `context.read_deleted` (bool) into `context.deleted_visibility` (str).\n\nThe valid values of `deleted_visibility` would be `not_visible` (the default, read_deleted=False), `only_deleted` (this would map to read_deleted=True), and `visible` (new behavior, would display deleted and undeleted records).", 
    "tags": [], 
    "importance": "Undecided", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/900564", 
    "owner": "https://api.launchpad.net/1.0/~rconradharris", 
    "id": 900564, 
    "index": 2414, 
    "created": "2011-12-06 01:54:19.732808+00:00", 
    "title": "Unable to access both deleted and active records", 
    "comments": [
        {
            "content": "Per https://bugs.launchpad.net/nova/+bug/701121, Vish indicates that it's intentional that read_deleted returns only deleted records and, moreover, that there is no way for a context object to have access to both deleted and undeleted records.\n\nIn cases of bad data we may have cases where something is deleted but a related object isn't. In order to perform the cleanup, we need an admin context that can see both objects.\n\nTo fix this, I'm proposing refactoring `context.read_deleted` (bool) into `context.deleted_visibility` (str).\n\nThe valid values of `deleted_visibility` would be `not_visible` (the default, read_deleted=False), `only_deleted` (this would map to read_deleted=True), and `visible` (new behavior, would display deleted and undeleted records).", 
            "date_created": "2011-12-06 01:54:19.732808+00:00", 
            "author": "https://api.launchpad.net/1.0/~rconradharris"
        }, 
        {
            "content": "I'm all for showing active and deleted records. i would prefer that rather than using an enum in deleted_visibility, that do this:\n\n1) change context.read_delete to context.can_read_deleted. This indicates that the authenticated user has access to deleted records. We should return either only active or active AND deleted records based on this attribute.\n\n2) Support a boolean 'deleted' filter on our queries that allows users to narrow down results to only deleted or only active. This allows us to keep the behavior where an admin can see only deleted records. We also shouldn't filter on a specific value for deleted by default.", 
            "date_created": "2011-12-06 14:56:57.626107+00:00", 
            "author": "https://api.launchpad.net/1.0/~bcwaldon"
        }, 
        {
            "content": "I had batted around the idea of using two boolean flags to represent this. In the end, I rejected that idea (for now) based on two reasons:\n\n1. Splitting the variable into two variables felt like it would be more difficult to get right. Given the amount of delicate code that has to change, I wasn't sure that I could manage that refactoring and ensure approx 100% correctness.\n\nWith a single variable becoming an enum, I could wrap my head around it a bit more, and found it much easier to spot check the code.\n\n2. Having 2 boolean variables leads to 4 combinations. But only 3 combinations are valid: (cannot-read-deleted, fetch-deleted) is bogus. It felt cleaner and safer to prevent anyone from even attempting that combination by using the enum.", 
            "date_created": "2011-12-07 21:23:51.367642+00:00", 
            "author": "https://api.launchpad.net/1.0/~rconradharris"
        }, 
        {
            "content": "read_deleted was not intended to specify whether the user was allowed to read deleted records, so much as whether the call should read deleted records. It was added to the context object because it would otherwise require changing every single db call to support an additional flag.\n\nCan't we just key the authorization for can_read_deleted off of is_admin, and just have read_deleted specify whether to retrieve deleted records?", 
            "date_created": "2011-12-07 22:14:34.113887+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "Vish: if we do that, then how do we specify that we can see *both* active and deleted records?\n\nWe can't simply perform an extra query each time since all of our helper code is deeply nested and uses a single context. We really need to be able to say, at a top-level, this context can see both active and deleted records.\n\nAll that said, I really think this should just be a stop gap; ultimately we should come up with a more elegant solution that can handle all 3 scenarios (live, deleted, and both).", 
            "date_created": "2011-12-07 22:33:13.335302+00:00", 
            "author": "https://api.launchpad.net/1.0/~rconradharris"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/2131\nCommitted: http://github.com/openstack/nova/commit/c40ee5cfe75e8b1209dc53fc7eb2097812efa54e\nSubmitter: Jenkins\nBranch:    master\n\n status fixcommitted\n done\n\ncommit c40ee5cfe75e8b1209dc53fc7eb2097812efa54e\nAuthor: Rick Harris <email address hidden>\nDate:   Wed Dec 7 16:06:31 2011 -0600\n\n    Add ability to see deleted and active records.\n    \n    Fixes bug #900564\n    \n    Changes `Context`.`read_deleted` from a bool to an enum string with values\n    \"yes\" (can read deleted records), \"no\" (cannot read deleted records), and\n    \"only\" (can only see deleted records, for backwards compatibility).\n    \n    Change-Id: Ic81db3664c33f23f751b73973782efb06fce90d9\n", 
            "date_created": "2011-12-08 23:01:30+00:00", 
            "author": "https://api.launchpad.net/1.0/~openstack-gerrit"
        }
    ]
}