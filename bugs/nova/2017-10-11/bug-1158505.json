{
    "status": "Fix Released", 
    "last_updated": "2013-05-10 00:08:51.586806+00:00", 
    "description": "In a successful run of tempest, we have negative tests for invalid volume sizes. When we set that we get a stack trace from cinderclient as follows:\n\n<2013-03-19 18:35:45.729 TRACE nova.api.openstack>\nTraceback (most recent call last):  File \"/opt/stack/new/nova/nova/api/openstack/__init__.py\", line 81, in __call__\n    return req.get_response(self.application)\n  File \"/usr/local/lib/python2.7/dist-packages/webob/request.py\", line 1296, in send\n    application, catch_exc_info=False)\n  File \"/usr/local/lib/python2.7/dist-packages/webob/request.py\", line 1260, in call_application\n    app_iter = application(self.environ, start_response)\n  File \"/usr/local/lib/python2.7/dist-packages/webob/dec.py\", line 144, in __call__\n    return resp(environ, start_response)\n  File \"/opt/stack/new/python-keystoneclient/keystoneclient/middleware/auth_token.py\", line 450, in __call__\n    return self.app(env, start_response)\n  File \"/usr/local/lib/python2.7/dist-packages/webob/dec.py\", line 144, in __call__\n    return resp(environ, start_response)\n  File \"/usr/local/lib/python2.7/dist-packages/webob/dec.py\", line 144, in __call__\n    return resp(environ, start_response)\n  File \"/usr/lib/python2.7/dist-packages/routes/middleware.py\", line 131, in __call__\n    response = self.app(environ, start_response)\n  File \"/usr/local/lib/python2.7/dist-packages/webob/dec.py\", line 144, in __call__\n    return resp(environ, start_response)\n  File \"/usr/local/lib/python2.7/dist-packages/webob/dec.py\", line 130, in __call__\n    resp = self.call_func(req, *args, **self.kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/webob/dec.py\", line 195, in call_func\n    return self.func(req, *args, **kwargs)\n  File \"/opt/stack/new/nova/nova/api/openstack/wsgi.py\", line 890, in __call__\n    content_type, body, accept)\n  File \"/opt/stack/new/nova/nova/api/openstack/wsgi.py\", line 942, in _process_stack\n    action_result = self.dispatch(meth, request, action_args)\n  File \"/opt/stack/new/nova/nova/api/openstack/wsgi.py\", line 1022, in dispatch\n    return method(req=request, **action_args)\n  File \"/opt/stack/new/nova/nova/api/openstack/compute/contrib/volumes.py\", line 254, in create\n    availability_zone=availability_zone\n  File \"/opt/stack/new/nova/nova/volume/cinder.py\", line 268, in create\n    item = cinderclient(context).volumes.create(size, **kwargs)\n  File \"/opt/stack/new/python-cinderclient/cinderclient/v1/volumes.py\", line 171, in create\n    return self._create('/volumes', body, 'volume')\n  File \"/opt/stack/new/python-cinderclient/cinderclient/base.py\", line 149, in _create\n    resp, body = self.api.client.post(url, body=body)\n  File \"/opt/stack/new/python-cinderclient/cinderclient/client.py\", line 188, in post\n    return self._cs_request(url, 'POST', **kwargs)\n  File \"/opt/stack/new/python-cinderclient/cinderclient/client.py\", line 153, in _cs_request\n    **kwargs)\n  File \"/opt/stack/new/python-cinderclient/cinderclient/client.py\", line 136, in request\n    raise exceptions.from_response(resp, body)\nBadRequest: Invalid input received: Volume size '0' must be an integer and greater than 0 (HTTP 400) (Request-ID: req-ba526415-c315-4151-a869-ee68a9019289)\n\nWe should catch this exception low enough that we don't stack trace on it.", 
    "tags": [
        "stacktrace"
    ], 
    "importance": "High", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1158505", 
    "owner": "https://api.launchpad.net/1.0/~sdague", 
    "id": 1158505, 
    "index": 1025, 
    "created": "2013-03-21 20:32:14.034659+00:00", 
    "title": "Cinderclient stack traces when BadRequest (400) is returned", 
    "comments": [
        {
            "content": "In a successful run of tempest, we have negative tests for invalid volume sizes. When we set that we get a stack trace from cinderclient as follows:\n\n<2013-03-19 18:35:45.729 TRACE nova.api.openstack>\nTraceback (most recent call last):  File \"/opt/stack/new/nova/nova/api/openstack/__init__.py\", line 81, in __call__\n    return req.get_response(self.application)\n  File \"/usr/local/lib/python2.7/dist-packages/webob/request.py\", line 1296, in send\n    application, catch_exc_info=False)\n  File \"/usr/local/lib/python2.7/dist-packages/webob/request.py\", line 1260, in call_application\n    app_iter = application(self.environ, start_response)\n  File \"/usr/local/lib/python2.7/dist-packages/webob/dec.py\", line 144, in __call__\n    return resp(environ, start_response)\n  File \"/opt/stack/new/python-keystoneclient/keystoneclient/middleware/auth_token.py\", line 450, in __call__\n    return self.app(env, start_response)\n  File \"/usr/local/lib/python2.7/dist-packages/webob/dec.py\", line 144, in __call__\n    return resp(environ, start_response)\n  File \"/usr/local/lib/python2.7/dist-packages/webob/dec.py\", line 144, in __call__\n    return resp(environ, start_response)\n  File \"/usr/lib/python2.7/dist-packages/routes/middleware.py\", line 131, in __call__\n    response = self.app(environ, start_response)\n  File \"/usr/local/lib/python2.7/dist-packages/webob/dec.py\", line 144, in __call__\n    return resp(environ, start_response)\n  File \"/usr/local/lib/python2.7/dist-packages/webob/dec.py\", line 130, in __call__\n    resp = self.call_func(req, *args, **self.kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/webob/dec.py\", line 195, in call_func\n    return self.func(req, *args, **kwargs)\n  File \"/opt/stack/new/nova/nova/api/openstack/wsgi.py\", line 890, in __call__\n    content_type, body, accept)\n  File \"/opt/stack/new/nova/nova/api/openstack/wsgi.py\", line 942, in _process_stack\n    action_result = self.dispatch(meth, request, action_args)\n  File \"/opt/stack/new/nova/nova/api/openstack/wsgi.py\", line 1022, in dispatch\n    return method(req=request, **action_args)\n  File \"/opt/stack/new/nova/nova/api/openstack/compute/contrib/volumes.py\", line 254, in create\n    availability_zone=availability_zone\n  File \"/opt/stack/new/nova/nova/volume/cinder.py\", line 268, in create\n    item = cinderclient(context).volumes.create(size, **kwargs)\n  File \"/opt/stack/new/python-cinderclient/cinderclient/v1/volumes.py\", line 171, in create\n    return self._create('/volumes', body, 'volume')\n  File \"/opt/stack/new/python-cinderclient/cinderclient/base.py\", line 149, in _create\n    resp, body = self.api.client.post(url, body=body)\n  File \"/opt/stack/new/python-cinderclient/cinderclient/client.py\", line 188, in post\n    return self._cs_request(url, 'POST', **kwargs)\n  File \"/opt/stack/new/python-cinderclient/cinderclient/client.py\", line 153, in _cs_request\n    **kwargs)\n  File \"/opt/stack/new/python-cinderclient/cinderclient/client.py\", line 136, in request\n    raise exceptions.from_response(resp, body)\nBadRequest: Invalid input received: Volume size '0' must be an integer and greater than 0 (HTTP 400) (Request-ID: req-ba526415-c315-4151-a869-ee68a9019289)\n\nWe should catch this exception low enough that we don't stack trace on it.", 
            "date_created": "2013-03-21 20:32:14.034659+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/25072", 
            "date_created": "2013-03-21 23:03:18.746544+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/25072\nCommitted: http://github.com/openstack/nova/commit/3801a4d2f4c59dbfda49131ddde22fcb3976d651\nSubmitter: Jenkins\nBranch:    master\n\ncommit 3801a4d2f4c59dbfda49131ddde22fcb3976d651\nAuthor: Sean Dague <email address hidden>\nDate:   Thu Mar 21 18:48:30 2013 -0400\n\n    translate cinder BadRequest exception\n    \n    if we attempt to create a volume with values that are invalid (like\n    a non numeric value for size) we properly get a BadRequest returned\n    from cinder. However we inproperly pass that cinderclient exception\n    all the way to the top of the request process, causing a stack trace\n    to appear in the logs because this is an exception type Nova doesn't\n    understand.\n    \n    This situation is triggered by Tempest on every run, and while the\n    return is successful, the stack trace might spook people.\n    \n    Fix this by increasing the scope of the existing\n    _reraise_translated_volume_exception() method. Longer term it would\n    make sense to have a decorator that handles all possible exceptions\n    we'd expect from cinder client and turn them into Nova exceptions.\n    \n    This reduces the number of stack traces in nova-api by 6 on a\n    successful Tempest run.\n    \n    Fixes bug #1158505\n    \n    Step towards blueprint no-stacktraces-in-logs\n    \n    Change-Id: Ifcfbd5eb11fe9f038f648ca5291499290b7126b1\n", 
            "date_created": "2013-03-22 16:04:56.580619+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: milestone-proposed\nReview: https://review.openstack.org/25444", 
            "date_created": "2013-03-26 21:42:01.576138+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/25444\nCommitted: http://github.com/openstack/nova/commit/9bfad01d9082992d10ece85d141c5c5760f5b935\nSubmitter: Jenkins\nBranch:    milestone-proposed\n\ncommit 9bfad01d9082992d10ece85d141c5c5760f5b935\nAuthor: Sean Dague <email address hidden>\nDate:   Thu Mar 21 18:48:30 2013 -0400\n\n    translate cinder BadRequest exception\n    \n    if we attempt to create a volume with values that are invalid (like\n    a non numeric value for size) we properly get a BadRequest returned\n    from cinder. However we inproperly pass that cinderclient exception\n    all the way to the top of the request process, causing a stack trace\n    to appear in the logs because this is an exception type Nova doesn't\n    understand.\n    \n    This situation is triggered by Tempest on every run, and while the\n    return is successful, the stack trace might spook people.\n    \n    Fix this by increasing the scope of the existing\n    _reraise_translated_volume_exception() method. Longer term it would\n    make sense to have a decorator that handles all possible exceptions\n    we'd expect from cinder client and turn them into Nova exceptions.\n    \n    This reduces the number of stack traces in nova-api by 6 on a\n    successful Tempest run.\n    \n    Fixes bug #1158505\n    \n    Step towards blueprint no-stacktraces-in-logs\n    \n    Change-Id: Ifcfbd5eb11fe9f038f648ca5291499290b7126b1\n    (cherry picked from commit 3801a4d2f4c59dbfda49131ddde22fcb3976d651)\n", 
            "date_created": "2013-03-26 23:14:59.788378+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}