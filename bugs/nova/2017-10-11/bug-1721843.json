{
    "status": "Fix Released", 
    "last_updated": "2017-10-10 20:10:03.303348+00:00", 
    "description": "Description\n===========\nAfter a vm moves from state 'building' to 'error' an unversioned notification is no longer sent if CONF.notifications.notification_format is set to 'unversioned'.\n\nSteps to reproduce\n==================\nIn nova.conf set\n[notifications]\nnotification_format = unversioned\n\nSetup environment so VM deploy fails.\nTo reproduce easily in my environment I raised a generic Exception just after the call to spawn in orchestrator's start_deploy_simple()\nAttempt to deploy VM.\nWait for deploy to fail.\n\nExpected result\n===============\nWhen the vm_state changes to 'error' an unversioned notification should be sent.\n\nActual result\n=============\nThe unversioned notification is not sent.\n\nEnvironment\n===========\n(pike)nova-compute/now 10:16.0.0-201710030907\n\n\nAdditional Info:\n================\nProblem seems to stem from this change: https://github.com/openstack/nova/commit/29cb8f1c459e6d23dd9303fb570cee773d9c4d02 at:\n        if (NOTIFIER.is_enabled() and\n                CONF.notifications.notification_format in ('both',\n                                                           'versioned')):\nBecause 'unversioned' is not in the list, the @rpc.if_notifications_enabled decorator causes send_instance_update_notification() as well as _send_versioned_instance_update() to effectively be skipped. The name of the decorator and the comment describing it's functionality make it hard to determine is precise intended purpose. The decorator name implies it's checking if notifications are enabled at all. The comment in the decorator states it's specificly checking if versioned notifications are enabled and is in fact what it appears to be doing. Since the decorator was applied to send_instance_update_notification it's effectively blocking unversioned notifications if versioned notifications are not enabled.", 
    "tags": [
        "notifications"
    ], 
    "importance": "High", 
    "heat": 10, 
    "link": "https://bugs.launchpad.net/nova/+bug/1721843", 
    "owner": "https://api.launchpad.net/1.0/~balazs-gibizer", 
    "id": 1721843, 
    "index": 2158, 
    "created": "2017-10-06 18:19:54.694770+00:00", 
    "title": "Unversioned notifications not being sent.", 
    "comments": [
        {
            "content": "Description\n===========\nAfter a vm moves from state 'building' to 'error' an unversioned notification is no longer sent if CONF.notifications.notification_format is set to 'unversioned'.\n\nSteps to reproduce\n==================\nIn nova.conf set\n[notifications]\nnotification_format = unversioned\n\nSetup environment so VM deploy fails.\nTo reproduce easily in my environment I raised a generic Exception just after the call to spawn in orchestrator's start_deploy_simple()\nAttempt to deploy VM.\nWait for deploy to fail.\n\nExpected result\n===============\nWhen the vm_state changes to 'error' an unversioned notification should be sent.\n\nActual result\n=============\nThe unversioned notification is not sent.\n\nEnvironment\n===========\n(pike)nova-compute/now 10:16.0.0-201710030907\n\n\nAdditional Info:\n================\nProblem seems to stem from this change: https://github.com/openstack/nova/commit/29cb8f1c459e6d23dd9303fb570cee773d9c4d02 at:\n        if (NOTIFIER.is_enabled() and\n                CONF.notifications.notification_format in ('both',\n                                                           'versioned')):\nBecause 'unversioned' is not in the list, the @rpc.if_notifications_enabled decorator causes send_instance_update_notification() as well as _send_versioned_instance_update() to effectively be skipped. The name of the decorator and the comment describing it's functionality make it hard to determine is precise intended purpose. The decorator name implies it's checking if notifications are enabled at all. The comment in the decorator states it's specificly checking if versioned notifications are enabled and is in fact what it appears to be doing. Since the decorator was applied to send_instance_update_notification it's effectively blocking unversioned notifications if versioned notifications are not enabled.", 
            "date_created": "2017-10-06 18:19:54.694770+00:00", 
            "author": "https://api.launchpad.net/1.0/~cjvolzka"
        }, 
        {
            "content": "I think the observation is correct. The if_notifications_enabled decorator is applied to early in the send_instance_update_notification call chain. ", 
            "date_created": "2017-10-09 10:46:48.247500+00:00", 
            "author": "https://api.launchpad.net/1.0/~balazs-gibizer"
        }, 
        {
            "content": "A possible solution is to remove the decorator from send_instance_update_notification() as the called _send_versioned_instance_update() already has the decorator. This way the legacy notification is still emitted from send_instance_update_notification in every case.\n\nThis also shows the lack of our legacy notification test coverage. But I guess it is not something to want to improve now as we are focusing more on the versioned notifications.", 
            "date_created": "2017-10-09 10:48:43.996407+00:00", 
            "author": "https://api.launchpad.net/1.0/~balazs-gibizer"
        }, 
        {
            "content": "To be clear the regression was introduced in I03c8e8225e51fd80580772752c0b292987e34218 not in https://github.com/openstack/nova/commit/29cb8f1c459e6d23dd9303fb570cee773d9c4d02 ", 
            "date_created": "2017-10-09 10:50:58.712253+00:00", 
            "author": "https://api.launchpad.net/1.0/~balazs-gibizer"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/510603", 
            "date_created": "2017-10-09 15:23:30.927237+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Marking as high severity since this is a regression introduced in Pike.", 
            "date_created": "2017-10-10 17:14:48.286776+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "The regression was introduced with this change: https://review.openstack.org/#/c/459923/", 
            "date_created": "2017-10-10 17:19:01.762349+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Fix proposed to branch: stable/pike\nReview: https://review.openstack.org/510957", 
            "date_created": "2017-10-10 17:21:23.906745+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/510603\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=0ffe03a2650a698de1b83289098ed535734b2360\nSubmitter: Jenkins\nBranch:    master\n\ncommit 0ffe03a2650a698de1b83289098ed535734b2360\nAuthor: Balazs Gibizer <email address hidden>\nDate:   Mon Oct 9 16:29:09 2017 +0200\n\n    Fix sending legacy instance.update notification\n    \n    The if_notifications_enabled decorator skips the execution of the\n    decorated function if the versioned notifications are not configured\n    to be emitted. The send_instance_update_notification() call was wrongly\n    decorated with this decorator as it not only sends versioned\n    notification but also send the legacy compute.instance.update\n    notification as well. This caused that the legacy instance.update\n    notification was not emitted when the notification_format config option\n    was set to unversioned.\n    \n    As the _send_versioned_instance_update() call already has the decorator\n    the solution is simply to remove the decorator from the\n    send_instance_update_notification() call.\n    \n    Closes-Bug: #1721843\n    Change-Id: I9904adeb3de60cff4e29f1ab3c95399bbe9ff2e7\n", 
            "date_created": "2017-10-10 20:10:01.087227+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}