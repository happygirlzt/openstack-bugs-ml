{
    "status": "Opinion", 
    "last_updated": "2017-01-26 21:43:30.133791+00:00", 
    "description": "It might be easier to view the VM plugging process in OpenStack as composed of three partners, attributes of a Neutron port:\n* The VIF edge (plugging in a TAP device into a bridge, configuring a NIC's VEB, some other form of virtual port manipulation\u2026)\n* The VNIC edge (hypervisor config, emulated hardware model, etc.)\n* The transport mechanism (vhost-net, vhost-user, vfio for SR-IOV, etc.)\n\nCurrently, there are a few places in core OpenStack that conflate the three concepts. For example, nova/network/model.py has VNIC_TYPE_* that denote the different methods for connecting to the hardware, but VIF_MODEL_* denotes different hardware emulation settings for the hypervisors.\n\nCompounding this problem is the current plugging method with libvirt. The plugging logic for many mechanism drivers moved into libvirt, meaning that nova passes both VNIC and VIF information to libvirt in some cases and not in others. The OS-VIF library is a step away from that direction: https://blueprints.launchpad.net/nova/+spec/os-vif-library\n\nThis RFE requests a mechanism to allow for more granularity in the plugging logic semantics: a mechanism driver should not need to re-invent common plugging code on the VIF or VNIC side. For example, just as primitives for plugging a netdev into a bridge should be part of the OS-VIF library, so should the VNIC configuration by the hypervisor be as cleanly abstracted and separated as possible.\n\nInitially, the hypervisor driver should receive both VNIC and VIF objects and have logic to decide to generate the required VM configuration. For example if an OVS VIF and vhost-net VNIC is passed to the libvirt driver, it generates xml to handle the bridge and VM plugging. In the case a driver requires another method of plugging, but can re-use the OVS VIF or the VNIC code it should be able to do so.\n\nNetronome is willing to devote resources to this project in order to improve the OpenStack infrastructure and reduce code duplication.", 
    "tags": [
        "neutron", 
        "nova", 
        "rfe"
    ], 
    "importance": "Wishlist", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1616388", 
    "owner": "None", 
    "id": 1616388, 
    "index": 1818, 
    "created": "2016-08-24 09:27:24.719809+00:00", 
    "title": "[RFE] Provide separation between VNIC and VIF in core Nova and Neutron", 
    "comments": [
        {
            "content": "It might be easier to view the VM plugging process in OpenStack as composed of three partners, attributes of a Neutron port:\n* The VIF edge (plugging in a TAP device into a bridge, configuring a NIC's VEB, some other form of virtual port manipulation\u2026)\n(The VNIC edge (hypervisor config, emulated hardware model, etc.)\n* The transport mechanism (vhost-net, vhost-user, vfio for SR-IOV, etc.)\n\nCurrently, there are a few places in core OpenStack that conflate the three concepts. For example, nova/network/model.py has VNIC_TYPE_* that denote the different methods for connecting to the hardware, but VIF_MODEL_* denotes different hardware emulation settings for the hypervisors.\n\nCompounding this problem is the current plugging method with libvirt. The plugging logic for many mechanism drivers moved into libvirt, meaning that nova passes both VNIC and VIF information to libvirt in some cases and not in others. The OS-VIF library is a step away from that direction: https://blueprints.launchpad.net/nova/+spec/os-vif-library\n\nThis RFE requests a mechanism to allow for more granularity in the plugging logic semantics: a mechanism driver should not need to re-invent common plugging code on the VIF or VNIC side. For example, just as primitives for plugging a netdev into a bridge should be part of the OS-VIF library, so should the VNIC configuration by the hypervisor be as cleanly abstracted and separated as possible.\n\nInitially, the hypervisor driver should receive both VNIC and VIF objects and have logic to decide to generate the required VM configuration. For example if an OVS VIF and vhost-net VNIC is passed to the libvirt driver, it generates xml to handle the bridge and VM plugging. In the case a driver requires another method of plugging, but can re-use the OVS VIF or the VNIC code it should be able to do so.\n\nNetronome is willing to devote resources to this project in order to improve the OpenStack infrastructure and reduce code duplication.", 
            "date_created": "2016-08-24 09:27:24.719809+00:00", 
            "author": "https://api.launchpad.net/1.0/~jangutter"
        }, 
        {
            "content": "This sounds good, but I don't think there is anything we can do on the neutron side to help with this. Or am I missing something?", 
            "date_created": "2016-11-10 21:13:24.270950+00:00", 
            "author": "https://api.launchpad.net/1.0/~kevinbenton"
        }, 
        {
            "content": "Author never provided more details as requested.", 
            "date_created": "2017-01-26 21:43:29.368911+00:00", 
            "author": "https://api.launchpad.net/1.0/~armando-migliaccio"
        }
    ]
}