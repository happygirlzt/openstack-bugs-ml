{
    "status": "Fix Released", 
    "last_updated": "2013-10-17 11:47:58.368549+00:00", 
    "description": "OpenStack does not support fractional numbers.However,when creating flavor through the JSON form, it will omit the fractional parts of the values instead of reporting an error.\nSince the fractional numbers are illegal , is it possible to throw exception or return 400, instead of accepting the request but omitted the fractional parts automatically?\n\nHere is the JSON data sent by the UI on POST http://localhost:8080/cloud/admin/301/compute/flavors:{\"flavor\":{\"name\":\"paw\",\"vcpus\":1.5,\"ram\":1.5,\"disk\":0.5}}\nAnd here is the response that comes back from core:{\"flavor\": {\"name\": \"paw\", \"links\": [{\"href\": \"http://localhost:8080/cloud/admin/301/compute/flavors/f6651e20-a336-48e2-99d1-00c85a3fea9a\", \"rel\": \"self\"}, {\"href\": \"http://localhost:8080/cloud/admin/301/compute/flavors/f6651e20-a336-48e2-99d1-00c85a3fea9a\", \"rel\": \"bookmark\"}], \"ram\": 1, \"OS-FLV-DISABLED:disabled\": false, \"vcpus\": 1, \"swap\": \"\", \"os-flavor-access:is_public\": true, \"rxtx_factor\": 1.0, \"OS-FLV-EXT-DATA:ephemeral\": 0, \"disk\": 0, \"id\": \"f6651e20-a336-48e2-99d1-00c85a3fea9a\"}}\n\nThe Version is Grizzly", 
    "tags": [], 
    "importance": "Medium", 
    "heat": 40, 
    "link": "https://bugs.launchpad.net/nova/+bug/1171278", 
    "owner": "https://api.launchpad.net/1.0/~jiataotj", 
    "id": 1171278, 
    "index": 3361, 
    "created": "2013-04-22 02:28:25.224358+00:00", 
    "title": "Factional numbers handle error in JSON Form", 
    "comments": [
        {
            "content": "OpenStack does not support fractional numbers, while creating flavor through the JSON form, it will omit the fractional parts of the values instead of reporting an error.\nSince the fractional numbers are illegal , is it possible to throw exception or return 400, instead of accepting the request but omitted the fractional parts automatically.\n\nHere is the JSON data sent by the UI on POST http://localhost:8080/cloud/admin/301/compute/flavors:{\"flavor\":{\"name\":\"paw\",\"vcpus\":1.5,\"ram\":1.5,\"disk\":0.5}}\nAnd here is the response that comes back from core:{\"flavor\": {\"name\": \"paw\", \"links\": [{\"href\": \"http://localhost:8080/cloud/admin/301/compute/flavors/f6651e20-a336-48e2-99d1-00c85a3fea9a\", \"rel\": \"self\"}, {\"href\": \"http://localhost:8080/cloud/admin/301/compute/flavors/f6651e20-a336-48e2-99d1-00c85a3fea9a\", \"rel\": \"bookmark\"}], \"ram\": 1, \"OS-FLV-DISABLED:disabled\": false, \"vcpus\": 1, \"swap\": \"\", \"os-flavor-access:is_public\": true, \"rxtx_factor\": 1.0, \"OS-FLV-EXT-DATA:ephemeral\": 0, \"disk\": 0, \"id\": \"f6651e20-a336-48e2-99d1-00c85a3fea9a\"}}\n\nThe Version is Grizzly", 
            "date_created": "2013-04-22 02:28:25.224358+00:00", 
            "author": "https://api.launchpad.net/1.0/~hufali87"
        }, 
        {
            "content": "Grizzly", 
            "date_created": "2013-04-22 03:18:10.727485+00:00", 
            "author": "https://api.launchpad.net/1.0/~hufali87"
        }, 
        {
            "content": "Grizzly", 
            "date_created": "2013-04-22 03:18:16.411873+00:00", 
            "author": "https://api.launchpad.net/1.0/~hufali87"
        }, 
        {
            "content": "Grizzly", 
            "date_created": "2013-04-22 03:18:20.948166+00:00", 
            "author": "https://api.launchpad.net/1.0/~hufali87"
        }, 
        {
            "content": "Built_in function  int()  will convert float number into integer directly  w/o raising exception .  and will report error when float number in string format.\n>>> int(10.2)\n10\n>>> int(\"10.2\")\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nValueError: invalid literal for int() with base 10: '10.2'\n>>> int('10.2')\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nValueError: invalid literal for int() with base 10: '10.2'\n\nCLI will report this error as follow:\n[root@localhost creds]#  nova flavor-create test1 11 256.5 14 2\nERROR: Ram must be an integer.\n\nsee  https://github.com/openstack/nova/blob/master/nova/compute/instance_types.py#L102\n    for option in ['memory_mb', 'vcpus', 'root_gb', 'ephemeral_gb', 'swap']:\n        try:\n            kwargs[option] = int(kwargs[option])\n            assert kwargs[option] >= 0\n        except (ValueError, AssertionError):\n            msg = _(\"'%s' argument must be a positive integer\") % option\n            raise exception.InvalidInput(reason=msg)\n\nDoes it work as  design or need fix this issue ?\n", 
            "date_created": "2013-04-22 05:49:55.568389+00:00", 
            "author": "https://api.launchpad.net/1.0/~glongwave"
        }, 
        {
            "content": "I can reproduce this bug by curl, the CLI method can handle this issue correctly, but the http api doesn't.\nbut if      \"disk\": \"1.5\"     in post body, {\"badRequest\": {\"message\": \"Invalid input received: 'root_gb' argument must be a positive integer\", \"code\": 400}} will be returned.  ", 
            "date_created": "2013-04-24 04:10:15.195225+00:00", 
            "author": "https://api.launchpad.net/1.0/~hzwangpan"
        }, 
        {
            "content": "kwargs[option] = int(kwargs[option])\nthe \"disk\": 1.5 may be treated as an float here, so it's return successfully, but \"1.5\" may be treated as string, so an ValueError exception is returned.", 
            "date_created": "2013-04-24 04:13:38.286499+00:00", 
            "author": "https://api.launchpad.net/1.0/~hzwangpan"
        }, 
        {
            "content": "the http api may do the correct thing as design, just in my opinion.", 
            "date_created": "2013-04-24 04:15:43.721970+00:00", 
            "author": "https://api.launchpad.net/1.0/~hzwangpan"
        }, 
        {
            "content": "Hello, since api-set make the int as json example instead of string format and I wonder if float 1.5 can be handled as 1 being the default behavior.  Or it should return error message if json input contains float 1.5.", 
            "date_created": "2013-04-24 05:38:10.604605+00:00", 
            "author": "https://api.launchpad.net/1.0/~zhuzhubj"
        }, 
        {
            "content": "I come up an solution. It's need to add two line of code in instance_types.py and flavormanage.py\n\n1 Add assert isinstance(kwargs[option],int) is True to the instance_types.py.\n        # ensure some attributes are integers and greater than or equal to 0\n    for option in ['memory_mb', 'vcpus', 'root_gb', 'ephemeral_gb', 'swap']:\n        try:\n           assert isinstance(kwargs[option],int) is True  #added code, to ensure some attributes are integers.\n            kwargs[option] = int(kwargs[option])\n            assert kwargs[option] >= 0\n        except (ValueError, AssertionError):\n            msg = _(\"'%s' argument must be a positive integer\") % option\n            raise exception.InvalidInput(reason=msg)\n\n2 Add exceptin.InvalidInput to catch the exception of invalidinput, like non-int, negative num and so on, which are already defined in exception.py and instance_types.py\n\n   try:\n            flavor = instance_types.create(name, memory_mb, vcpus,\n                                           root_gb, ephemeral_gb, flavorid,\n                                           swap, rxtx_factor, is_public)\n            req.cache_db_flavor(flavor)\n        except (exception.InstanceTypeExists,\n                exception.InstanceTypeIdExists,exceptionInvalidInput) as err:  # catch the exception of  non-int, negative num and so on.\n            raise webob.exc.HTTPConflict(explanation=err.format_message())\n", 
            "date_created": "2013-04-24 06:15:43.205416+00:00", 
            "author": "https://api.launchpad.net/1.0/~hufali87"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/29220", 
            "date_created": "2013-05-15 10:45:54.842845+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/30694", 
            "date_created": "2013-05-28 10:23:54.837736+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/30694\nCommitted: http://github.com/openstack/nova/commit/8ee10c55b045ab6d85b41dddbbb95384d009fb9b\nSubmitter: Jenkins\nBranch:    master\n\ncommit 8ee10c55b045ab6d85b41dddbbb95384d009fb9b\nAuthor: jiataotj <email address hidden>\nDate:   Tue May 28 18:20:15 2013 +0800\n\n    Add invalid number checking in flavor creation api\n    \n    Flavor creation api doesn't check whether 'memory_mb'\n    argument number is integer,add invalid number checking\n    into the flavor creation function to remind the user to\n    input right value\n    \n    Fixes bug #1171278\n    \n    Change-Id: I8308f66c485d8c872864661148e9eac7b685e406\n", 
            "date_created": "2013-06-24 18:19:29.790425+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}