{
    "status": "Fix Released", 
    "last_updated": "2015-03-13 00:53:04.595891+00:00", 
    "description": "In DB API code we have a notion of 'public' and 'private' methods. The former are conceptually executed within a *single* DB transaction and the latter can either create a new transaction or participate in the existing one. The whole point is to be able to roll back the results of DB API methods easily and be able to retry method calls on connection failures. We had a bp (https://blueprints.launchpad.net/nova/+spec/db-session-cleanup) in which all DB API have been re-factored to maintain these properties.\n\ninstance_create() is one of the methods that currently violates the rules of 'public' DB API methods and creates a concurrent transaction implicitly.", 
    "tags": [
        "db", 
        "in-stable-icehouse"
    ], 
    "importance": "Undecided", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1362233", 
    "owner": "https://api.launchpad.net/1.0/~rpodolyaka", 
    "id": 1362233, 
    "index": 5116, 
    "created": "2014-08-27 16:02:45.627649+00:00", 
    "title": "instance_create() DB API method implicitly creates additional DB transactions", 
    "comments": [
        {
            "content": "In DB API code we have a notion of 'public' and 'private' methods. The former are conceptually executed within a *single* DB transaction and the latter can either create a new transaction or participate in the existing one. The whole point is to be able to roll back the results of DB API methods easily and be able to retry method calls on connection failures. We had a bp (https://blueprints.launchpad.net/nova/+spec/db-session-cleanup) in which all DB API have been re-factored to maintain these properties.\n\ninstance_create() is one of the methods that currently violates the rules of 'public' DB API methods and creates a concurrent transaction implicitly.", 
            "date_created": "2014-08-27 16:02:45.627649+00:00", 
            "author": "https://api.launchpad.net/1.0/~rpodolyaka"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/115255\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=dbc46b99cc85402c087bb214c120bce2c65dfea9\nSubmitter: Jenkins\nBranch:    master\n\ncommit dbc46b99cc85402c087bb214c120bce2c65dfea9\nAuthor: Roman Podoliaka <email address hidden>\nDate:   Tue Aug 19 14:05:50 2014 +0300\n\n    Add _security_group_ensure_default() DBAPI method\n    \n    According to the convention we use for DB API methods, every public\n    method should have a private counterpart. The difference between\n    those two is that the latter accepts an optional 'session' argument,\n    which makes it possible for the method to participate in the existing\n    database transaction.\n    \n    security_group_ensure_default() was called inside instance_create()\n    and thus implicitly created a new concurrent db transaction, which\n    is now fixed by making a call to a private counterpart and passing\n    the session instance.\n    \n    Closes-Bug: #1362233\n    \n    Change-Id: Ifa1b6430328fde1ab0984f726bd8392bbd3f7ee5\n", 
            "date_created": "2014-09-21 13:57:14.332709+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: stable/icehouse\nReview: https://review.openstack.org/134928", 
            "date_created": "2014-11-17 13:10:45.272085+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/134928\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=f78165661e5ce0bd7287124b75f6c60845b9a3c1\nSubmitter: Jenkins\nBranch:    stable/icehouse\n\ncommit f78165661e5ce0bd7287124b75f6c60845b9a3c1\nAuthor: Roman Podoliaka <email address hidden>\nDate:   Tue Aug 19 14:05:50 2014 +0300\n\n    Add _security_group_ensure_default() DBAPI method\n    \n    According to the convention we use for DB API methods, every public\n    method should have a private counterpart. The difference between\n    those two is that the latter accepts an optional 'session' argument,\n    which makes it possible for the method to participate in the existing\n    database transaction.\n    \n    security_group_ensure_default() was called inside instance_create()\n    and thus implicitly created a new concurrent db transaction, which\n    is now fixed by making a call to a private counterpart and passing\n    the session instance.\n    \n    Closes-Bug: #1362233\n    \n    Change-Id: Ifa1b6430328fde1ab0984f726bd8392bbd3f7ee5\n    (cherry picked from commit dbc46b99cc85402c087bb214c120bce2c65dfea9)\n", 
            "date_created": "2015-02-10 14:09:29.460451+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}