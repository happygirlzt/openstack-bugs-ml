{
    "status": "Fix Released", 
    "last_updated": "2014-09-21 17:50:53.250446+00:00", 
    "description": "If user set a non-ascii character to the key of an image property and using qpid backend, the instance provisioning will be failed.\n\nUse case:\n1. Set a non-ascii character to the key of an image property:\n\"glance image-update --property '\u4e2d\u6587'='\u4e2d\u6587' 5a7e6de5-15b9-49d2-977e-eda0a221c0b9\"\n2. Launch a instance with that image:\n\"nova boot --image cirros-0.3.0-x86_64 --flavor m1.tiny --nic net-id=881cbe80-3876-4f4c-b8c8-7b23cedc14f4 lzy-1\"\n3. Then the provisioning failed and nova-api service catch the exception and write to log:\n  File \"/usr/lib/python2.6/site-packages/qpid/messaging/driver.py\", line 1052, in process\n    self.send(snd, msg)\n  File \"/usr/lib/python2.6/site-packages/qpid/messaging/driver.py\", line 1263, in send\n    body = enc(msg.content)\n  File \"/usr/lib/python2.6/site-packages/qpid/messaging/message.py\", line 28, in encode\n    sc.write_primitive(type, x)\n  File \"/usr/lib/python2.6/site-packages/qpid/codec010.py\", line 73, in write_primitive\n    getattr(self, \"write_%s\" % type.NAME)(v)\n  File \"/usr/lib/python2.6/site-packages/qpid/codec010.py\", line 257, in write_map\n    sc.write(string.joinfields(map(self._write_map_elem, m.keys(), m.values()), \"\"))\n  File \"/usr/lib/python2.6/site-packages/qpid/codec010.py\", line 250, in _write_map_elem\n    sc.write_primitive(type, v)\n  File \"/usr/lib/python2.6/site-packages/qpid/codec010.py\", line 73, in write_primitive\n    getattr(self, \"write_%s\" % type.NAME)(v)\n  File \"/usr/lib/python2.6/site-packages/qpid/codec010.py\", line 257, in write_map\n    sc.write(string.joinfields(map(self._write_map_elem, m.keys(), m.values()), \"\"))\n  File \"/usr/lib/python2.6/site-packages/qpid/codec010.py\", line 250, in _write_map_elem\n    sc.write_primitive(type, v)\n  File \"/usr/lib/python2.6/site-packages/qpid/codec010.py\", line 73, in write_primitive\n    getattr(self, \"write_%s\" % type.NAME)(v)\n  File \"/usr/lib/python2.6/site-packages/qpid/codec010.py\", line 257, in write_map\n    sc.write(string.joinfields(map(self._write_map_elem, m.keys(), m.values()), \"\"))\n  File \"/usr/lib/python2.6/site-packages/qpid/codec010.py\", line 250, in _write_map_elem\n    sc.write_primitive(type, v)\n  File \"/usr/lib/python2.6/site-packages/qpid/codec010.py\", line 73, in write_primitive\n    getattr(self, \"write_%s\" % type.NAME)(v)\n  File \"/usr/lib/python2.6/site-packages/qpid/codec010.py\", line 257, in write_map\n    sc.write(string.joinfields(map(self._write_map_elem, m.keys(), m.values()), \"\"))\n  File \"/usr/lib/python2.6/site-packages/qpid/codec010.py\", line 250, in _write_map_elem\n    sc.write_primitive(type, v)\n  File \"/usr/lib/python2.6/site-packages/qpid/codec010.py\", line 73, in write_primitive\n    getattr(self, \"write_%s\" % type.NAME)(v)\n  File \"/usr/lib/python2.6/site-packages/qpid/codec010.py\", line 257, in write_map\n    sc.write(string.joinfields(map(self._write_map_elem, m.keys(), m.values()), \"\"))\n  File \"/usr/lib/python2.6/site-packages/qpid/codec010.py\", line 248, in _write_map_elem\n    sc.write_str8(k)\n  File \"/usr/lib/python2.6/site-packages/qpid/codec010.py\", line 185, in write_str8\n    self.write_vbin8(s.encode(\"utf8\"))\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xe4 in position 0: ordinal not in range(128)\n\nAnalysis:\nIn nova-api service, the provisioning request will be handled in \"nova/compute/api.py' file \"_validate_and_provision_instance\" method (\"create_instance\" method called), the image and its properties will be primitive and make a request spec and pass to nova-scheduler by rpc calls via message queue. And nova-api call glance api v1.0 (\"get\" method) to get image's  infromation, under current glanceclient implementation, those non-ascii character in the image property part will be encoded by utf-8, so the root cause is that qpid (with qpid_python-0.18 lib) can not handle those utf-8 string.\n\nSolution:\nThere are two choices to resolve this issue:\n1. Resolve in glanceclient. glance-api server return utf-8 property (key/value pair) to glanceclient, so we need convert the them back to unicode from utf-8 (\"_image_meta_from_headers\" method in \"image.py\" file), this will cause client.get() method return unicode property string (key/value pair) and nova-api will get those uncode strings and pass them to nova-scheduler via rpc. this unicode encoding logic just like image property update logic (\"_image_meta_to_headers\" method), update method always pass unicode  image property to glance-api server but not utf-8, so this change will keep the encoding consistency.\nAnd this fix also need change 2 points in nova-api code (\"nova/compute/api.py\"), they are call str() on the image properties, it should be unicode() after above change.\n\n2. Resolve in nova-api. This way probably is not good then above one since the area affected is greater the it. in this way, we need convert utf-8 string to unicode then to put it into queue, so the change/fix in \"to_primitive\" method of \"jsonutils.py\" file. for now, there are two problems:\na. it not take care key within a dict object, that caused utf-8 encoded key string (in this case, it's a key of an image property) will not be primitive.\nb. need ask to_primitive take care utf-8 string, IMO, need convert it to unicode but not pass the utf-8 (basestring object) directly. So this fix will affect more area then above glanceclient fixing way, this fix has commonality, even user use rabbitmq backend, any utf-8 encoded key within a dict will be convert include glance properties and any other dict objects which want to primitive and put into queue.\n\nIMO, I prefer use #1 way to address this issue.", 
    "tags": [], 
    "importance": "Medium", 
    "heat": 8, 
    "link": "https://bugs.launchpad.net/nova/+bug/1180377", 
    "owner": "https://api.launchpad.net/1.0/~lzy-dev", 
    "id": 1180377, 
    "index": 3393, 
    "created": "2013-05-15 13:06:07.978223+00:00", 
    "title": "provisioning failed if the image have a non-ascii property and using qpid", 
    "comments": [
        {
            "content": "If user set a non-ascii character to the key of an image property and using qpid backend, the instance provisioning will be failed.\n\nUse case:\n1. Set a non-ascii character to the key of an image property:\n\"glance image-update --property '\u4e2d\u6587'='\u4e2d\u6587' 5a7e6de5-15b9-49d2-977e-eda0a221c0b9\"\n2. Launch a instance with that image:\n\"nova boot --image cirros-0.3.0-x86_64 --flavor m1.tiny --nic net-id=881cbe80-3876-4f4c-b8c8-7b23cedc14f4 lzy-1\"\n3. Then the provisioning failed and nova-api service catch the exception and write to log:\n  File \"/usr/lib/python2.6/site-packages/qpid/messaging/driver.py\", line 1052, in process\n    self.send(snd, msg)\n  File \"/usr/lib/python2.6/site-packages/qpid/messaging/driver.py\", line 1263, in send\n    body = enc(msg.content)\n  File \"/usr/lib/python2.6/site-packages/qpid/messaging/message.py\", line 28, in encode\n    sc.write_primitive(type, x)\n  File \"/usr/lib/python2.6/site-packages/qpid/codec010.py\", line 73, in write_primitive\n    getattr(self, \"write_%s\" % type.NAME)(v)\n  File \"/usr/lib/python2.6/site-packages/qpid/codec010.py\", line 257, in write_map\n    sc.write(string.joinfields(map(self._write_map_elem, m.keys(), m.values()), \"\"))\n  File \"/usr/lib/python2.6/site-packages/qpid/codec010.py\", line 250, in _write_map_elem\n    sc.write_primitive(type, v)\n  File \"/usr/lib/python2.6/site-packages/qpid/codec010.py\", line 73, in write_primitive\n    getattr(self, \"write_%s\" % type.NAME)(v)\n  File \"/usr/lib/python2.6/site-packages/qpid/codec010.py\", line 257, in write_map\n    sc.write(string.joinfields(map(self._write_map_elem, m.keys(), m.values()), \"\"))\n  File \"/usr/lib/python2.6/site-packages/qpid/codec010.py\", line 250, in _write_map_elem\n    sc.write_primitive(type, v)\n  File \"/usr/lib/python2.6/site-packages/qpid/codec010.py\", line 73, in write_primitive\n    getattr(self, \"write_%s\" % type.NAME)(v)\n  File \"/usr/lib/python2.6/site-packages/qpid/codec010.py\", line 257, in write_map\n    sc.write(string.joinfields(map(self._write_map_elem, m.keys(), m.values()), \"\"))\n  File \"/usr/lib/python2.6/site-packages/qpid/codec010.py\", line 250, in _write_map_elem\n    sc.write_primitive(type, v)\n  File \"/usr/lib/python2.6/site-packages/qpid/codec010.py\", line 73, in write_primitive\n    getattr(self, \"write_%s\" % type.NAME)(v)\n  File \"/usr/lib/python2.6/site-packages/qpid/codec010.py\", line 257, in write_map\n    sc.write(string.joinfields(map(self._write_map_elem, m.keys(), m.values()), \"\"))\n  File \"/usr/lib/python2.6/site-packages/qpid/codec010.py\", line 250, in _write_map_elem\n    sc.write_primitive(type, v)\n  File \"/usr/lib/python2.6/site-packages/qpid/codec010.py\", line 73, in write_primitive\n    getattr(self, \"write_%s\" % type.NAME)(v)\n  File \"/usr/lib/python2.6/site-packages/qpid/codec010.py\", line 257, in write_map\n    sc.write(string.joinfields(map(self._write_map_elem, m.keys(), m.values()), \"\"))\n  File \"/usr/lib/python2.6/site-packages/qpid/codec010.py\", line 248, in _write_map_elem\n    sc.write_str8(k)\n  File \"/usr/lib/python2.6/site-packages/qpid/codec010.py\", line 185, in write_str8\n    self.write_vbin8(s.encode(\"utf8\"))\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xe4 in position 0: ordinal not in range(128)\n\nAnalysis:\nIn nova-api service, the provisioning request will be handled in \"nova/compute/api.py' file \"_validate_and_provision_instance\" method (\"create_instance\" method called), the image and its properties will be primitive and make a request spec and pass to nova-scheduler by rpc calls via message queue. And nova-api call glance api v1.0 (\"get\" method) to get image's  infromation, under current glanceclient implementation, those non-ascii character in the image property part will be encoded by utf-8, so the root cause is that qpid (with qpid_python-0.18 lib) can not handle those utf-8 string.\n\nSolution:\nThere are two choices to resolve this issue:\n1. Resolve in glanceclient. glance-api server return utf-8 property (key/value pair) to glanceclient, so we need convert the them back to unicode from utf-8 (\"_image_meta_from_headers\" method in \"image.py\" file), this will cause client.get() method return unicode property string (key/value pair) and nova-api will get those uncode strings and pass them to nova-scheduler via rpc. this unicode encoding logic just like image property update logic (\"_image_meta_to_headers\" method), update method always pass unicode  image property to glance-api server but not utf-8, so this change will keep the encoding consistency.\nAnd this fix also need change 2 points in nova-api code (\"nova/compute/api.py\"), they are call str() on the image properties, it should be unicode() after above change.\n\n2. Resolve in nova-api. This way probably is not good then above one since the area affected is greater the it. in this way, we need convert utf-8 string to unicode then to put it into queue, so the change/fix in \"to_primitive\" method of \"jsonutils.py\" file. for now, there are two problems:\na. it not take care key within a dict object, that caused utf-8 encoded key string (in this case, it's a key of an image property) will not be primitive.\nb. need ask to_primitive take care utf-8 string, IMO, need convert it to unicode but not pass the utf-8 (basestring object) directly. So this fix will affect more area then above glanceclient fixing way, this fix has commonality, even user use rabbitmq backend, any utf-8 encoded key within a dict will be convert include glance properties and any other dict objects which want to primitive and put into queue.\n\nIMO, I prefer use #1 way to address this issue.", 
            "date_created": "2013-05-15 13:06:07.978223+00:00", 
            "author": "https://api.launchpad.net/1.0/~lzy-dev"
        }, 
        {
            "content": "Addressed here: https://review.openstack.org/#/c/29245/", 
            "date_created": "2013-05-16 08:13:11.014116+00:00", 
            "author": "https://api.launchpad.net/1.0/~flaper87"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/29245\nCommitted: http://github.com/openstack/python-glanceclient/commit/8c70c5b08d6ecae90c2df1ee5c7ba995e3329926\nSubmitter: Jenkins\nBranch:    master\n\ncommit 8c70c5b08d6ecae90c2df1ee5c7ba995e3329926\nAuthor: Zhi Yan Liu <email address hidden>\nDate:   Wed May 15 22:45:08 2013 +0800\n\n    Convert non-ascii characters within image property to unicode\n    \n    Convert non-ascii characters within image property (key/value pair) to\n    unicode but utf-8 to prevent provisioning failure when cloud using qpid\n    backend.\n    This change also make the image property encoding consistency between\n    the image updating and the receiving. Before this, image property\n    updating use unicode, but receiving (get) result is utf-8.\n    \n    Fixes: Bug #1180377\n    \n    Change-Id: I010760c598a7e008c79f1240255708265352cdb5\n    Signed-off-by: Zhi Yan Liu <email address hidden>\n", 
            "date_created": "2013-05-21 18:09:13.382736+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Nova review: https://review.openstack.org/30046", 
            "date_created": "2013-05-29 11:13:22.411620+00:00", 
            "author": "https://api.launchpad.net/1.0/~markmc"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/30046\nCommitted: http://github.com/openstack/nova/commit/832a66cf0bd8f7ccb0878889174c1ce4da7f42f3\nSubmitter: Jenkins\nBranch:    master\n\ncommit 832a66cf0bd8f7ccb0878889174c1ce4da7f42f3\nAuthor: Zhi Yan Liu <email address hidden>\nDate:   Tue May 21 12:27:30 2013 +0800\n\n    Using unicode() to handle image's properties\n    \n    Replace str() to unicode() to allow nova-api work well with the fix I\n    did in glanceclient (https://review.openstack.org/#/c/29245/6).\n    \n    Fixes: Bug #1180377\n    \n    Change-Id: I31e532bb50e12e355b9dd26c9ce1e129da858cbe\n    Signed-off-by: Zhi Yan Liu <email address hidden>\n", 
            "date_created": "2013-05-29 15:21:09.150602+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: stable/grizzly\nReview: https://review.openstack.org/33157", 
            "date_created": "2013-06-15 08:04:02.783285+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "We also met this problem in grizzly, need this problem to be fixed in stable/grizzly.", 
            "date_created": "2013-06-15 08:05:54.883997+00:00", 
            "author": "https://api.launchpad.net/1.0/~hanzhf"
        }, 
        {
            "content": "Fix proposed to branch: stable/grizzly\nReview: https://review.openstack.org/33798", 
            "date_created": "2013-06-20 11:04:03.641877+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: stable/folsom\nReview: https://review.openstack.org/33803", 
            "date_created": "2013-06-20 11:22:26.189669+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "We also met this problem in folsom, need this problem to be fixed in stable/grizzly.", 
            "date_created": "2013-06-20 11:25:01.598638+00:00", 
            "author": "https://api.launchpad.net/1.0/~hanzhf"
        }
    ]
}