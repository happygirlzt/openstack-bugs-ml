{
    "status": "Invalid", 
    "last_updated": "2016-03-08 19:53:00.837559+00:00", 
    "description": "This is not a bug and may / may not be a security issue ... but it appears that the service account created in keystone are of the same privileges level as any other admin accounts created through keystone and I don't like that.\n\nWould it be possible to implement something that would distinguish user accounts from service accounts?  Is there a way to isolate some service accounts from the remaining of the openstack APIs?\n\nOne kick example on this is that any service accounts have admin privileges on all the other services .   At this point, I'm trying to figure out why are we creating a distinct service account for each service if nothing isolate them.\n\nIE:\n\nglance account can spawn a VM\ncinder account can delete an image\nheat account can delete a volume\nnova account can create an image\n\n\nAll of these service accounts have access to the horizon dashboard.  One small hack could be to prevent those accounts from logging in Horizon.\n\nThanks,\n\nDave", 
    "tags": [
        "security"
    ], 
    "importance": "Undecided", 
    "heat": 14, 
    "link": "https://bugs.launchpad.net/nova/+bug/1464750", 
    "owner": "https://api.launchpad.net/1.0/~ayoung", 
    "id": 1464750, 
    "index": 5603, 
    "created": "2015-06-12 19:04:22.370127+00:00", 
    "title": "Service accounts can be used to login horizon", 
    "comments": [
        {
            "content": "This is not a bug and may / may not be a security issue ... but it appears that the service account created in keystone are of the same privileges level as any other admin accounts created through keystone and I don't like that.\n\nWould it be possible to implement something that would distinguish user accounts from service accounts?  Is there a way to isolate some service accounts from the remaining of the openstack APIs?\n\nOne kick example on this is that any service accounts have admin privileges on all the other services .   At this point, I'm trying to figure out why are we creating a distinct service account for each service if nothing isolate them.\n\nIE:\n\nglance account can spawn a VM\ncinder account can delete an image\nheat account can delete a volume\nnova account can create an image\n\n\nAll of these service accounts have access to the horizon dashboard.  One small hack could be to prevent those accounts from logging in Horizon.\n\nThanks,\n\nDave", 
            "date_created": "2015-06-12 19:04:22.370127+00:00", 
            "author": "https://api.launchpad.net/1.0/~david-hill-ubisoft"
        }, 
        {
            "content": "Since this report concerns a possible security risk, an incomplete security advisory task has been added while the core security reviewers for the affected project or projects confirm the bug and discuss the scope of any vulnerability along with potential solutions.\n\nShould this need a Keystone task ?", 
            "date_created": "2015-06-12 19:40:07.702841+00:00", 
            "author": "https://api.launchpad.net/1.0/~tristan-cacqueray"
        }, 
        {
            "content": "Adding horizon and keystone coresec group to triage this bug report.\n\nThis is probably a class D type of bug ( https://security.openstack.org/vmt-process.html#incident-report-taxonomy ).", 
            "date_created": "2015-06-15 17:40:56.168493+00:00", 
            "author": "https://api.launchpad.net/1.0/~tristan-cacqueray"
        }, 
        {
            "content": "This is a a dupe of Bug 968696", 
            "date_created": "2015-06-15 17:46:54.390992+00:00", 
            "author": "https://api.launchpad.net/1.0/~ayoung"
        }, 
        {
            "content": "This is a case where some documentation could go a long way. The project/domain that the service users are located in should not have access to create new VMs (aka not have quota) etc. \n\nIn v2 we only have 2 real roles: admin and member. Validation of a token is an admin level call. This makes changing the base role for v2 difficult. I believe we could add a third role that is strictly a validate token role that service users get. However, I am unsure how that may impact service to service communication at this point. \n\nIn v3 it would be possible to provide a rich role set that is for the service users and doesn't include super-admin powers. Again he concern is what this will do for inter-service communication (nova -> neutron specifically). \n\nThe \"hack to disable access to horizon\" seems silly as it really adds zero security. If horizon wants to require a \"dashboard\" role to access it, it should be a separate task / not related to this bug. \n\nThis is (likely) an OSSN, and we need to evaluate what a change to the roles would end up entailing for service-to-service (would we break the world). ", 
            "date_created": "2015-06-15 17:50:34.791445+00:00", 
            "author": "https://api.launchpad.net/1.0/~mdrnstm"
        }, 
        {
            "content": "@adam, \n\nIt is slightly a duplication. It is a bit more specific. \n\n@Tristan,\n\nI agree, a class D", 
            "date_created": "2015-06-15 17:52:51.755398+00:00", 
            "author": "https://api.launchpad.net/1.0/~mdrnstm"
        }, 
        {
            "content": "There are a couple of similar bugs:\n\n bug 1445199 - Nova user should not have admin role\n bug 1346778 - Neutron does not work by default without a keystone admin user\n\nThese are only documenting that the default configuration isn't what I'd like it to be. While I haven't gone through the exercise, I assume that through policy config you can set it up as you'd like. If you couldn't even set up your policy to be secure then that would be worse.\n", 
            "date_created": "2015-06-15 17:56:50.058074+00:00", 
            "author": "https://api.launchpad.net/1.0/~blk-u"
        }, 
        {
            "content": "Horizon allows users to login. Users are users. There is nothing in the user creation process that would flag a special case of user. Additionally, I could login as the same class of user from the CLI. x  \n\nHorizon will support the degree of RBAC as defined by operators or by the services (if the default is used) in policy.json files for the services.  The bug is not a Horizon bug, but merely a view into the underlying issues Adam linked as the dup.\n\nThis is an OpenStack bug. Horizon is merely on window into the issue.", 
            "date_created": "2015-06-15 17:59:22.909135+00:00", 
            "author": "https://api.launchpad.net/1.0/~david-lyle"
        }, 
        {
            "content": "Yeah, I agree with the better documentation aspect. Using V3 APIs along with the policy.v3cloudsample.json policy file, token validation only need the \"service\" role.\n\nhttps://github.com/openstack/keystone/blob/master/etc/policy.v3cloudsample.json#L104\n\nIf you don't want an interactive service account at all,  you may want to consider the X.509 tokenless authz feature once it landed.\n\nhttps://review.openstack.org/#/c/156870/\n\nWith this patch, services can just use SSL client certs to talk to Keystone.\n", 
            "date_created": "2015-06-15 18:08:14.884389+00:00", 
            "author": "https://api.launchpad.net/1.0/~guang-yee"
        }, 
        {
            "content": "@Brant,\n\nAs long as v3 is used for validating tokens, we can use policy, but with v2 we can't even customize that. \n\nValidating v3 should work for everything, but we aren't currently gating on this. ", 
            "date_created": "2015-06-15 18:20:05.608043+00:00", 
            "author": "https://api.launchpad.net/1.0/~mdrnstm"
        }, 
        {
            "content": "Service users like nova and neutron are used for more than just validating tokens. The nova service user is used to talk to neutron to provision networks, and the neutron user is used to notify nova that the network is available. Both of these are admin-only by default. There's probably other things that I don't know about. We made it way too easy to ignore security.", 
            "date_created": "2015-06-15 18:20:24.477341+00:00", 
            "author": "https://api.launchpad.net/1.0/~blk-u"
        }, 
        {
            "content": "Thanks you for the quick debunk, adding ossg-coresec for an eventual OSSN task.", 
            "date_created": "2015-06-15 18:21:56.607278+00:00", 
            "author": "https://api.launchpad.net/1.0/~tristan-cacqueray"
        }, 
        {
            "content": "+1 to basically all the above analysis", 
            "date_created": "2015-06-15 18:55:04.884414+00:00", 
            "author": "https://api.launchpad.net/1.0/~dolph"
        }, 
        {
            "content": "This bug report seems to fall into the B2 category ( https://security.openstack.org/vmt-process.html#incident-report-taxonomy ), thus I propose to remove the OSSA task and make it public next Monday, unless someone complains.", 
            "date_created": "2015-06-17 15:52:43.935823+00:00", 
            "author": "https://api.launchpad.net/1.0/~tristan-cacqueray"
        }, 
        {
            "content": "OSSN seems sensible, +1 with the above analysis.", 
            "date_created": "2015-06-22 13:08:34.135000+00:00", 
            "author": "https://api.launchpad.net/1.0/~robert-clark"
        }, 
        {
            "content": "OK - just to make sure I'm understanding the problem correctly (and can thus write a clear note) - this OSSN should document that: \n\nin some configurations (all Keystone v2, some configurations of Keystone v3, Nova, Neutron) the service accounts are full cloud admin users.  This means that they can perform all actions including logging in to Horizon.\n\nIs this a fair assessment?", 
            "date_created": "2015-07-21 20:04:10.547576+00:00", 
            "author": "https://api.launchpad.net/1.0/~travis-mcpeak"
        }, 
        {
            "content": "Also if ^ is correct- I'd rather just say \"assume that service accounts have admin privileges and can do anything with your cloud\".", 
            "date_created": "2015-07-21 20:05:09.568866+00:00", 
            "author": "https://api.launchpad.net/1.0/~travis-mcpeak"
        }, 
        {
            "content": "This is something that definitely needs to be fixed. If Open Stack is to be approved for use by the Federal Gov't in any manner, all users and service accounts have to be able to abide by least privilege requirements and not be granted elevated privilege by default.  A service account must be able to have access managed at the function of the service, not granted full cloud admin user rights.  I am late into this conversation, hoping I am reading this wrong. ", 
            "date_created": "2015-07-21 20:42:30.700998+00:00", 
            "author": "https://api.launchpad.net/1.0/~kathleen-fischer"
        }, 
        {
            "content": "@travis-mcpeak\nWith v3 of the Identity API, it's a matter of policy.  In theory, roles and policies can be configured such that there is a 'services' role for token validation, and other special non-admin roles for operations such as the inter-service calls mentioned by @blk-u.  I don't believe that anyone is actually defining their roles and policy in this way right now, but it is somethign that shoudl work and that we can recommend IMHO.\n\nFor v2 of the Identity API, all we can do in an OSSN is raise awareness that service accounts are equivalent to admin accounts.", 
            "date_created": "2015-07-21 21:26:20.986180+00:00", 
            "author": "https://api.launchpad.net/1.0/~nkinder"
        }, 
        {
            "content": "Kathleen: That's already possible as a deployer option, but it's certainly not the default per the policy.json files we see across OpenStack today. You're correct in that the root problem here is one of overly broad authorization (\"admin\" should be broken down into many more roles with more specific use cases). It's a problem that exists across OpenStack. If anyone has gone through the effort of defining more granular roles for each service in OpenStack, they have not shared that work, much less upstreamed the resulting policy.json files.\n\nTravis: The core issue here is not particularly relevant to keystone's v2 / v3 APIs, nor to Nova and Neutron. All services that I'm aware of use the concept of a \"service\" user which in most deployments receive overly broad \"admin\" level authorization (which should be clearly understood by everyone as being analogous to having \"root\" of the entire cloud). As I believe David Hill alluded in the bug description, those accounts generally have passwords just like regular users (and regular cloud operators) and can thus authenticate with keystone to generate tokens just as any other API user can. Given service user's \"admin\" authorization across OpenStack, they then have free reign to make any API calls they please. Whether or not Horizon is involved is entirely a non-issue, in my opinion.\n\nAs Adam pointed out, the problem described in bug 968696 is tightly related to this one, if it's not a duplicate. The only difference here is that service users are generally deployed with that level of authorization, when they should not, and ultimately do not, require it.", 
            "date_created": "2015-07-21 21:27:26.156187+00:00", 
            "author": "https://api.launchpad.net/1.0/~dolph"
        }, 
        {
            "content": "@ dolph, nkinder - got it, thank you for the summary.  I'll start writing the note and loop Keystone folks in for the policy example guidance.", 
            "date_created": "2015-07-21 21:42:12.305272+00:00", 
            "author": "https://api.launchpad.net/1.0/~travis-mcpeak"
        }, 
        {
            "content": "Throwing back the note task - this should really be taken up by somebody with more domain experience than I have.", 
            "date_created": "2015-07-29 14:45:07.001483+00:00", 
            "author": "https://api.launchpad.net/1.0/~travis-mcpeak"
        }, 
        {
            "content": "A service user should have the \"Service\" role which can be used to validate a token, and little else.  THis can be enforced with existing policy mechanisms.", 
            "date_created": "2015-08-07 18:12:06.812276+00:00", 
            "author": "https://api.launchpad.net/1.0/~ayoung"
        }, 
        {
            "content": "It might make sense to have Horizon limit login to users with the Member or Admin roles only.", 
            "date_created": "2015-08-07 18:12:50.793795+00:00", 
            "author": "https://api.launchpad.net/1.0/~ayoung"
        }, 
        {
            "content": "Agree with Adam Y., although it's a pity that for example existing install guides are missing it and suggests to use \"admin\" role for services deployment.", 
            "date_created": "2015-08-10 15:07:14.572311+00:00", 
            "author": "https://api.launchpad.net/1.0/~aheczko-mirantis"
        }, 
        {
            "content": "This has been published as OSSN-0055:\r\n\r\n  https://wiki.openstack.org/wiki/OSSN/OSSN-0055", 
            "date_created": "2015-09-17 21:09:57.903297+00:00", 
            "author": "https://api.launchpad.net/1.0/~nkinder"
        }, 
        {
            "content": "This bug report is specifically about the log into Horizon with a\nnova service user. That the nova user has the admin rights is\ncovered in bug 1445199. That the admin role is not properly scoped is\nhandled in bug 968696. Nova cannot prevent/influence log ins to\nHorizon. => Invalid for Nova", 
            "date_created": "2016-03-08 19:52:59.970409+00:00", 
            "author": "https://api.launchpad.net/1.0/~mzoeller"
        }
    ]
}