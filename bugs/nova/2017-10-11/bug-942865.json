{
    "status": "Fix Released", 
    "last_updated": "2012-04-05 10:53:19.985466+00:00", 
    "description": "After an upgrade to essex (ubuntu precise), some images registered via the ec2 api that had a kernel and ramdisk were left broken.\n\nThis was because the images were uploaded referencing a given aki-xxxxxxx and ari-xxxxxxx but after upgrade, those aki and ari changed, rendering the images broken.\n\nI made some notes, saying:\n\n##aki-0000009e smoser-lucid-loader/lucid-amd64-linux-image-2.6.32-34-virtual-v-2.6.32-34.77~smloader0-kernel.manifest.xml\n##ari-0000009f smoser-lucid-loader/lucid-amd64-linux-image-2.6.32-34-virtual-v-2.6.32-34.77~smloader0-build0-loader.manifest.xml\n#\n## New (amis re-numbered after essex upgrade)\n#aki-0000001e  smoser-lucid-loader/lucid-amd64-linux-image-2.6.32-34-virtual-v-2.6.32-34.77~smloader0-kernel.manifest.xml\n#ari-0000001f  smoser-lucid-loader/lucid-amd64-linux-image-2.6.32-34-virtual-v-2.6.32-34.77~smloader0-build0-loader.manifest.xml\n\nSubsequently, I've twice uploaded new images that reference a kernel/ramdisk that were present prior to the upgrade, and I get strange results:\n\n$ euca-describe-images aki-0000001e ari-0000001f\nIMAGE   aki-0000001e    smoser-lucid-loader/lucid-amd64-linux-image-2.6.32-34-virtual-v-2.6.32-34.77~smloader0-kernel.manifest.xml             available       public          x86_64  kernel \n                instance-store\nIMAGE   ari-0000001f    smoser-lucid-loader/lucid-amd64-linux-image-2.6.32-34-virtual-v-2.6.32-34.77~smloader0-build0-loader.manifest.xml              available       public          x86_64ramdisk                  instance-store\n\n$ cloud-publish-tarball --kernel=aki-0000001e --ramdisk=ari-0000001f ubuntu-10.04-server-cloudimg-amd64.tar.gz smoser-cloud-images amd64\nTue Feb 28 17:55:14 UTC 2012: ====== extracting image ======\nkernel : aki-0000001e\nramdisk: ari-0000001f\nimage  : lucid-server-cloudimg-amd64.img\nTue Feb 28 17:55:23 UTC 2012: ====== bundle/upload image ======\nTue Feb 28 17:56:18 UTC 2012: ====== done ======\nemi=\"ami-0000006f\"; eri=\"ari-0000001f\"; eki=\"aki-0000001e\";\n\n$ euca-describe-images ami-0000006f\nIMAGE   ami-0000006f    smoser-cloud-images/ubuntu-lucid-10.04-amd64-server-20120221.manifest.xml              available       public          x86_64  machine aki-00000061    ari-00000062\n\nNote, that after cloud-publish-tarball registered with '1f' and '1e', the image reports using aki-00000061 and ari-00000062.\n\nBut\n$ euca-run-instances ami-0000006f\nImageNotFound: Image 30 could not be found.\n\n$ euca-describe-images aki-00000061\nImageNotFound: Image aki-00000061 could not be found.\n$ euca-describe-images ari-00000062\nImageNotFound: Image ari-00000062 could not be found.\n\nTo make things even stranger, while the above happens now, soon after publish I verified that the images booted with identical 'run-instances' as above, and they did boot.  Then from inside the instance, I see:\n\n$ for p in ami-id kernel-id ramdisk-id; do echo $p: $(wget http://169.254.169.254/2009-04-04/meta-data/$p -q -O -); done\nami-id: ami-00000000\nkernel-id: ami-00000000\nramdisk-id: ami-00000000\n\n\nIt appears the last bit may be a general essex bug as I see it on even other instances.", 
    "tags": [], 
    "importance": "High", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/942865", 
    "owner": "https://api.launchpad.net/1.0/~vishvananda", 
    "id": 942865, 
    "index": 597, 
    "created": "2012-02-28 20:04:41.413561+00:00", 
    "title": "upgrade from diablo leaves existing images with kernel unbootable", 
    "comments": [
        {
            "content": "After an upgrade to essex (ubuntu precise), some images registered via the ec2 api that had a kernel and ramdisk were left broken.\n\nThis was because the images were uploaded referencing a given aki-xxxxxxx and ari-xxxxxxx but after upgrade, those aki and ari changed, rendering the images broken.\n\nI made some notes, saying:\n\n##aki-0000009e smoser-lucid-loader/lucid-amd64-linux-image-2.6.32-34-virtual-v-2.6.32-34.77~smloader0-kernel.manifest.xml\n##ari-0000009f smoser-lucid-loader/lucid-amd64-linux-image-2.6.32-34-virtual-v-2.6.32-34.77~smloader0-build0-loader.manifest.xml\n#\n## New (amis re-numbered after essex upgrade)\n#aki-0000001e  smoser-lucid-loader/lucid-amd64-linux-image-2.6.32-34-virtual-v-2.6.32-34.77~smloader0-kernel.manifest.xml\n#ari-0000001f  smoser-lucid-loader/lucid-amd64-linux-image-2.6.32-34-virtual-v-2.6.32-34.77~smloader0-build0-loader.manifest.xml\n\nSubsequently, I've twice uploaded new images that reference a kernel/ramdisk that were present prior to the upgrade, and I get strange results:\n\n$ euca-describe-images aki-0000001e ari-0000001f\nIMAGE   aki-0000001e    smoser-lucid-loader/lucid-amd64-linux-image-2.6.32-34-virtual-v-2.6.32-34.77~smloader0-kernel.manifest.xml             available       public          x86_64  kernel \n                instance-store\nIMAGE   ari-0000001f    smoser-lucid-loader/lucid-amd64-linux-image-2.6.32-34-virtual-v-2.6.32-34.77~smloader0-build0-loader.manifest.xml              available       public          x86_64ramdisk                  instance-store\n\n$ cloud-publish-tarball --kernel=aki-0000001e --ramdisk=ari-0000001f ubuntu-10.04-server-cloudimg-amd64.tar.gz smoser-cloud-images amd64\nTue Feb 28 17:55:14 UTC 2012: ====== extracting image ======\nkernel : aki-0000001e\nramdisk: ari-0000001f\nimage  : lucid-server-cloudimg-amd64.img\nTue Feb 28 17:55:23 UTC 2012: ====== bundle/upload image ======\nTue Feb 28 17:56:18 UTC 2012: ====== done ======\nemi=\"ami-0000006f\"; eri=\"ari-0000001f\"; eki=\"aki-0000001e\";\n\n$ euca-describe-images ami-0000006f\nIMAGE   ami-0000006f    smoser-cloud-images/ubuntu-lucid-10.04-amd64-server-20120221.manifest.xml              available       public          x86_64  machine aki-00000061    ari-00000062\n\nNote, that after cloud-publish-tarball registered with '1f' and '1e', the image reports using aki-00000061 and ari-00000062.\n\nBut\n$ euca-run-instances ami-0000006f\nImageNotFound: Image 30 could not be found.\n\n$ euca-describe-images aki-00000061\nImageNotFound: Image aki-00000061 could not be found.\n$ euca-describe-images ari-00000062\nImageNotFound: Image ari-00000062 could not be found.\n\nTo make things even stranger, while the above happens now, soon after publish I verified that the images booted with identical 'run-instances' as above, and they did boot.  Then from inside the instance, I see:\n\n$ for p in ami-id kernel-id ramdisk-id; do echo $p: $(wget http://169.254.169.254/2009-04-04/meta-data/$p -q -O -); done\nami-id: ami-00000000\nkernel-id: ami-00000000\nramdisk-id: ami-00000000\n\n\nIt appears the last bit may be a general essex bug as I see it on even other instances.", 
            "date_created": "2012-02-28 20:04:41.413561+00:00", 
            "author": "https://api.launchpad.net/1.0/~smoser"
        }, 
        {
            "content": "More strangeness possibly related:\n$ euca-run-instances ami-0000006f \nImageNotFound: Image 112 could not be found.\n$ euca-modify-image-attribute ami-0000006f --launch-permission --remove all\nIMAGE   ami-0000006f\n$ euca-run-instances ami-0000006f \nImageNotFound: Image 114 could not be found.\n\n\nIe, making the image private, then public changes the image id of the error response.\n\nI also realize that above, the instances I ran to verify, I did so when the image was private.  Then, I made them public and they failed to run.\n", 
            "date_created": "2012-02-28 20:12:04.509586+00:00", 
            "author": "https://api.launchpad.net/1.0/~smoser"
        }, 
        {
            "content": "This seems to be a general problem with essex and an image that has a kernel/ramdisk associated with it, and making that image public.\n\nTo demonstrate, on a local devstack, I did:\n\n$ cloud-publish-tarball files/cirros-0.3.0-x86_64-uec.tar.gz sm-bucket\nWed Feb 29 09:28:28 EST 2012: ====== extracting image ======\nkernel : cirros-0.3.0-x86_64-vmlinuz\nramdisk: cirros-0.3.0-x86_64-initrd\nimage  : cirros-0.3.0-x86_64-blank.img\nWed Feb 29 09:28:28 EST 2012: ====== bundle/upload kernel ======\nWed Feb 29 09:28:30 EST 2012: ====== bundle/upload ramdisk ======\nWed Feb 29 09:28:33 EST 2012: ====== bundle/upload image ======\nWed Feb 29 09:28:37 EST 2012: ====== done ======\nemi=\"ami-0000000a\"; eri=\"ari-00000009\"; eki=\"aki-00000008\";\n\n$ euca-describe-images ami-0000000a\nIMAGE   ami-0000000a    sm-bucket/cirros-0.3.0-x86_64-blank.img.manifest.xml            available       private         x86_64  machine aki-00000008    ari-00000009   instance-store\n\n$ euca-run-instances --key mykey --instance-type m1.tiny ami-0000000a\n\nthe instance ran fine.  Then, try to make it public.\n\n$ euca-modify-image-attribute --launch-permission --add all aki-00000008\nIMAGE   aki-00000008\n$ euca-modify-image-attribute --launch-permission --add all ari-00000009\nIMAGE   ari-00000009\n$ euca-modify-image-attribute --launch-permission --add all ami-0000000a\nIMAGE   ami-0000000a\n\nmaking it public changes the ami and aki in describe-images output\n\n$ euca-describe-images | grep sm-bucket\nIMAGE   aki-00000008    sm-bucket/cirros-0.3.0-x86_64-vmlinuz.manifest.xml              available       public          x86_64  kernel                  instance-store\nIMAGE   ari-00000009    sm-bucket/cirros-0.3.0-x86_64-initrd.manifest.xml               available       public          x86_64  ramdisk                 instance-store\nIMAGE   ami-0000000a    sm-bucket/cirros-0.3.0-x86_64-blank.img.manifest.xml            available       public          x86_64  machine aki-0000000b    ari-0000000c   instance-store\n\nTry to run it again.\n$ euca-run-instances --key mykey --instance-type m1.tiny ami-0000000a\nImageNotFound: Image 8 could not be found.\n\n\nTo reduce the scope a bit, try using already-public kernel/ramdisk:\n$ cloud-publish-tarball files/cirros-0.3.0-x86_64-uec.tar.gz --kernel aki-00000008 --ramdisk ari-00000009 sm-bucket2\nWed Feb 29 10:54:41 EST 2012: ====== extracting image ======\nkernel : aki-00000008\nramdisk: ari-00000009\nimage  : cirros-0.3.0-x86_64-blank.img\nWed Feb 29 10:54:42 EST 2012: ====== bundle/upload image ======\nWed Feb 29 10:54:45 EST 2012: ====== done ======\nemi=\"ami-0000000d\"; eri=\"ari-00000009\"; eki=\"aki-00000008\";\n\n$ euca-run-instances --key mykey --instance-type m1.tiny ami-0000000d\n\nThe new instance runs fine as private.\n\n$ euca-modify-image-attribute --launch-permission --add all ami-0000000d\n$ euca-describe-images ami-0000000d\nIMAGE   ami-0000000d    sm-bucket2/cirros-0.3.0-x86_64-blank.img.manifest.xml           available       public          x86_64  machine aki-0000000b    ari-0000000c   instance-store\n\nNote, again, the aki and ari changed.\nAnd now...\n$ euca-run-instances --key mykey --instance-type m1.tiny ami-0000000d\nImageNotFound: Image 8 could not be found.\n\n", 
            "date_created": "2012-02-29 15:58:22.680742+00:00", 
            "author": "https://api.launchpad.net/1.0/~smoser"
        }, 
        {
            "content": "Just for reference, this is being fixed at\nhttps://review.openstack.org/#change,4788\n", 
            "date_created": "2012-03-05 15:26:38.516642+00:00", 
            "author": "https://api.launchpad.net/1.0/~smoser"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/4788\nCommitted: http://github.com/openstack/nova/commit/0d78045e72efe7313ca54e726dd403793eb30b52\nSubmitter: Jenkins\nBranch:    master\n\ncommit 0d78045e72efe7313ca54e726dd403793eb30b52\nAuthor: Vishvananda Ishaya <email address hidden>\nDate:   Thu Mar 1 16:52:07 2012 -0800\n\n    Fixes for ec2 images\n    \n     * Fixes s3 image service to convert back to uuids on update\n     * Adds exception for attempt to update an unowned image\n     * Adds error messages to ec2 for failure cases\n     * Adds tests to verify changes\n     * Fixes bug 942865\n    \n    Change-Id: I35331c635756f10c02b30dd43ab3fe0ad98bc28c\n", 
            "date_created": "2012-03-06 19:59:31.167078+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}