{
    "status": "Fix Released", 
    "last_updated": "2017-09-25 14:27:58.561460+00:00", 
    "description": "Evacuate has some gaps with respect to dealing with resource allocations in Placement:\n\n1. If the user specifies a host with evacuate, conductor bypasses the scheduler and we don't create allocations on the destination host:\n\nhttps://github.com/openstack/nova/blob/16.0.0.0rc2/nova/conductor/manager.py#L749\n\nThis could eventually lead to the claim failing on the destination compute:\n\nhttps://github.com/openstack/nova/blob/16.0.0.0rc2/nova/compute/manager.py#L2795\n\nThis is similar to bug 1712008 where forcing a host during live migration bypasses the scheduler so allocations are not created in placement on the destination node. Before Pike this would be handled via the update_available_resource periodic task in the compute service which would 'heal' the allocations for instances tracked on a given node, but that is no longer happening once all computes are running Pike code due to this change: https://review.openstack.org/#/c/491012/\n\n2. If the user does not specify a host with evacuate, conductor will ask the scheduler to pick a host, which will also create allocations for that host via the scheduler. If the claim (or rebuild) fails on the destination node, we don't cleanup the allocation on the destination node even if the instance isn't spawned on it:\n\nhttps://github.com/openstack/nova/blob/16.0.0.0rc2/nova/compute/manager.py#L2795\n\n^ is pretty obvious that we should cleanup because the claim for resources failed.\n\nThis generic exception handling is harder to know if we should cleanup though since we'd need to know if the guest was spawned on it:\n\nhttps://github.com/openstack/nova/blob/16.0.0.0rc2/nova/compute/manager.py#L2812\n\nBut since we don't set the instance.host/node to the current host/node it won't be reported there anyway:\n\nhttps://github.com/openstack/nova/blob/16.0.0.0rc2/nova/compute/manager.py#L2822-L2824", 
    "tags": [
        "compute", 
        "evacuate", 
        "in-stable-pike", 
        "placement"
    ], 
    "importance": "High", 
    "heat": 8, 
    "link": "https://bugs.launchpad.net/nova/+bug/1713786", 
    "owner": "https://api.launchpad.net/1.0/~mriedem", 
    "id": 1713786, 
    "index": 2140, 
    "created": "2017-08-29 17:32:02.706679+00:00", 
    "title": "Allocations are not managed properly in all evacuate scenarios", 
    "comments": [
        {
            "content": "Evacuate has some gaps with respect to dealing with resource allocations in Placement:\n\n1. If the user specifies a host with evacuate, conductor bypasses the scheduler and we don't create allocations on the destination host:\n\nhttps://github.com/openstack/nova/blob/16.0.0.0rc2/nova/conductor/manager.py#L749\n\nThis could eventually lead to the claim failing on the destination compute:\n\nhttps://github.com/openstack/nova/blob/16.0.0.0rc2/nova/compute/manager.py#L2795\n\nThis is similar to bug 1712008 where forcing a host during live migration bypasses the scheduler so allocations are not created in placement on the destination node. Before Pike this would be handled via the update_available_resource periodic task in the compute service which would 'heal' the allocations for instances tracked on a given node, but that is no longer happening once all computes are running Pike code due to this change: https://review.openstack.org/#/c/491012/\n\n2. If the user does not specify a host with evacuate, conductor will ask the scheduler to pick a host, which will also create allocations for that host via the scheduler. If the claim (or rebuild) fails on the destination node, we don't cleanup the allocation on the destination node even if the instance isn't spawned on it:\n\nhttps://github.com/openstack/nova/blob/16.0.0.0rc2/nova/compute/manager.py#L2795\n\n^ is pretty obvious that we should cleanup because the claim for resources failed.\n\nThis generic exception handling is harder to know if we should cleanup though since we'd need to know if the guest was spawned on it:\n\nhttps://github.com/openstack/nova/blob/16.0.0.0rc2/nova/compute/manager.py#L2812\n\nBut since we don't set the instance.host/node to the current host/node it won't be reported there anyway:\n\nhttps://github.com/openstack/nova/blob/16.0.0.0rc2/nova/compute/manager.py#L2822-L2824", 
            "date_created": "2017-08-29 17:32:02.706679+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Is there a difference between providing setting the force flag in the API request? I guess in case of force=False the scheduler is involved somehow.", 
            "date_created": "2017-08-30 13:13:05.224972+00:00", 
            "author": "https://api.launchpad.net/1.0/~balazs-gibizer"
        }, 
        {
            "content": "Correct, it's like with the live migration API and it's force option:\n\nhttps://developer.openstack.org/api-ref/compute/#id99\n\nThe force option tells conductor to bypass the scheduler when a host is provided.", 
            "date_created": "2017-08-30 14:41:58.250338+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Correct, it's like with the live migration API and it's force option:\n\nhttps://developer.openstack.org/api-ref/compute/#id99\n\nThe force option tells conductor to bypass the scheduler when a host is provided.", 
            "date_created": "2017-08-30 18:09:17.622674+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/499399", 
            "date_created": "2017-08-31 00:45:49.571510+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Related fix proposed to branch: master\nReview: https://review.openstack.org/499678", 
            "date_created": "2017-08-31 15:26:14.496385+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Related fix proposed to branch: master\nReview: https://review.openstack.org/499718", 
            "date_created": "2017-08-31 16:47:02.717719+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Actually #2 might be OK if the move claim fails because of how ResourceTracker.drop_move_claim works. We should have a functional test to verify this though.", 
            "date_created": "2017-09-01 00:33:12.584576+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Related fix proposed to branch: master\nReview: https://review.openstack.org/499874", 
            "date_created": "2017-09-01 02:49:35.053351+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Related fix proposed to branch: master\nReview: https://review.openstack.org/499877", 
            "date_created": "2017-09-01 03:02:27.152711+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/499878", 
            "date_created": "2017-09-01 03:21:30.437671+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/499678\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=f34b487db4864787ad92f5a7d6568f31812f1ddb\nSubmitter: Jenkins\nBranch:    master\n\ncommit f34b487db4864787ad92f5a7d6568f31812f1ddb\nAuthor: Matt Riedemann <email address hidden>\nDate:   Thu Aug 31 11:23:28 2017 -0400\n\n    Add recreate test for forced host evacuate not setting dest allocations\n    \n    This adds a functional recreate test for bug 1713786 where\n    allocations are not created against the forced destination host\n    during an evacuation.\n    \n    This asserts the faulty behavior so that a later patch which fixes\n    the bug can uncomment the assertions for correct behavior.\n    \n    Change-Id: I55bf64a95f6b1b781656920380dc38bda864bd14\n    Related-Bug: #1713786\n", 
            "date_created": "2017-09-05 23:52:00.998607+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/499718\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=34f8a351502418d30f137ad49e948802d6b2ab3c\nSubmitter: Jenkins\nBranch:    master\n\ncommit 34f8a351502418d30f137ad49e948802d6b2ab3c\nAuthor: Matt Riedemann <email address hidden>\nDate:   Thu Aug 31 12:30:15 2017 -0400\n\n    Refactor out claim_resources_on_destination into a utility\n    \n    We need this method for a similar fix in evacuate, so this\n    change pulls the method out of the LiveMigrationTask and moves\n    it into scheduler utils along with unit tests.\n    \n    The only functional difference is that instead of raising\n    MigrationPreCheckError, it now raises NoValidHost, which for\n    live migration ends up being the same result when it's handled\n    in ComputeTaskManager.\n    \n    Change-Id: Ie63a4798d420c39815e294843e02ab6473cfded2\n    Related-Bug: #1713786\n", 
            "date_created": "2017-09-07 19:06:46.638526+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Related fix proposed to branch: stable/pike\nReview: https://review.openstack.org/503159", 
            "date_created": "2017-09-12 19:59:35.088023+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Related fix proposed to branch: stable/pike\nReview: https://review.openstack.org/503160", 
            "date_created": "2017-09-12 19:59:47.128968+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: stable/pike\nReview: https://review.openstack.org/503161", 
            "date_created": "2017-09-12 20:00:03.978709+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Related fix proposed to branch: stable/pike\nReview: https://review.openstack.org/503162", 
            "date_created": "2017-09-12 20:00:16.702015+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Related fix proposed to branch: stable/pike\nReview: https://review.openstack.org/503163", 
            "date_created": "2017-09-12 20:00:28.697082+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: stable/pike\nReview: https://review.openstack.org/503165", 
            "date_created": "2017-09-12 20:00:51.726699+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/499399\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=d564266a019cb009ece1a63e5d544698f2bf74d1\nSubmitter: Jenkins\nBranch:    master\n\ncommit d564266a019cb009ece1a63e5d544698f2bf74d1\nAuthor: Matt Riedemann <email address hidden>\nDate:   Wed Aug 30 15:05:44 2017 -0400\n\n    Create allocations against forced dest host during evacuate\n    \n    If a host is specified during an evacuate with the force=True\n    flag, conductor bypasses the scheduler. Since the scheduler\n    is what creates the \"doubled up\" allocation on the destination\n    node, and the scheduler is bypassed in the force case, we have\n    to create the allocations against the destination node in\n    conductor directly.\n    \n    The unit tests cover the failure scenarios. The functional\n    test covers the happy path.\n    \n    This is a short-term backportable fix. Long-term we'll likely\n    want to call the scheduler even in the 'force' scenario but pass\n    a flag to the scheduler to tell it to skip the filters but still\n    create the allocation on the destination node so we don't have\n    to duplicate that in conductor.\n    \n    Change-Id: I6590f0eda4ec4996543ad40d8c2640b83fc3dd9d\n    Partial-Bug: #1713786\n", 
            "date_created": "2017-09-12 21:03:12.293120+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/499874\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=6ed80ddcdd3f9e40f0ada581ac7bd524ec48135b\nSubmitter: Jenkins\nBranch:    master\n\ncommit 6ed80ddcdd3f9e40f0ada581ac7bd524ec48135b\nAuthor: Matt Riedemann <email address hidden>\nDate:   Thu Aug 31 22:47:07 2017 -0400\n\n    Add recreate test for evacuate claim failure\n    \n    This adds a functional recreate test for when the MoveClaim\n    fails on the destination node and the allocation on the\n    destination node is not cleaned up. This is because the\n    MoveClaim fails in it's constructor so it never exits the\n    Claim context manager to call the drop_move_claim which\n    would remove the destination node allocation.\n    \n    Eventually we'll have to manually remove the destination\n    node allocation in the ComputeManager.rebuild_instance method.\n    \n    Change-Id: I8900ace4436c4837beb8b4eb1e1d05905efc6dce\n    Related-Bug: #1713786\n", 
            "date_created": "2017-09-12 21:03:51.220604+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/499877\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=30946f9a5eeea839631cdb1dba9c26d45f7a8d00\nSubmitter: Jenkins\nBranch:    master\n\ncommit 30946f9a5eeea839631cdb1dba9c26d45f7a8d00\nAuthor: Matt Riedemann <email address hidden>\nDate:   Thu Aug 31 22:56:59 2017 -0400\n\n    Add a test to make sure failed evacuate cleans up dest allocation\n    \n    If we actually make the MoveClaim but the evacuation fails\n    in the virt driver, the drop_move_claim via the MoveClaim.abort\n    will remove the destination node allocation. This adds a functional\n    test to show that works.\n    \n    Change-Id: Ib58c487e97a041b8498746e8a276efffee239c56\n    Related-Bug: #1713786\n", 
            "date_created": "2017-09-12 21:05:10.043342+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/499878\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=5bc137f7ebc266f8a73d6febc7c10d8d648924e0\nSubmitter: Jenkins\nBranch:    master\n\ncommit 5bc137f7ebc266f8a73d6febc7c10d8d648924e0\nAuthor: Matt Riedemann <email address hidden>\nDate:   Fri Sep 1 09:58:03 2017 -0400\n\n    Remove dest node allocation if evacuate MoveClaim fails\n    \n    If the MoveClaim during an evacuate fails we need to\n    remove the destination node allocation since the\n    ResourceTracker isn't going to do it.\n    \n    This also fixes test_rebuild_server_exc which was faking\n    a rebuild failure by raising an error that would not\n    actually happen during a rebuild. ComputeResourcesUnavailable\n    only happens if a claim fails, and for a rebuild, which\n    is on the same host that the instance is already on, doesn't\n    involve a claim attempt.\n    \n    Change-Id: I59ff47bf773c9831d0f44e1caf7877fe08c911c3\n    Closes-Bug: #1713786\n", 
            "date_created": "2017-09-12 21:05:44.161414+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/503159\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=5ee7f9d5c8bd53394ef73a52171b4ded451be45e\nSubmitter: Jenkins\nBranch:    stable/pike\n\ncommit 5ee7f9d5c8bd53394ef73a52171b4ded451be45e\nAuthor: Matt Riedemann <email address hidden>\nDate:   Thu Aug 31 11:23:28 2017 -0400\n\n    Add recreate test for forced host evacuate not setting dest allocations\n    \n    This adds a functional recreate test for bug 1713786 where\n    allocations are not created against the forced destination host\n    during an evacuation.\n    \n    This asserts the faulty behavior so that a later patch which fixes\n    the bug can uncomment the assertions for correct behavior.\n    \n    Change-Id: I55bf64a95f6b1b781656920380dc38bda864bd14\n    Related-Bug: #1713786\n    (cherry picked from commit f34b487db4864787ad92f5a7d6568f31812f1ddb)\n", 
            "date_created": "2017-09-15 18:03:07.873671+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/503160\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=b5ea0d1231009ba1f4a9ba87ecfc05e489c4017f\nSubmitter: Jenkins\nBranch:    stable/pike\n\ncommit b5ea0d1231009ba1f4a9ba87ecfc05e489c4017f\nAuthor: Matt Riedemann <email address hidden>\nDate:   Thu Aug 31 12:30:15 2017 -0400\n\n    Refactor out claim_resources_on_destination into a utility\n    \n    We need this method for a similar fix in evacuate, so this\n    change pulls the method out of the LiveMigrationTask and moves\n    it into scheduler utils along with unit tests.\n    \n    The only functional difference is that instead of raising\n    MigrationPreCheckError, it now raises NoValidHost, which for\n    live migration ends up being the same result when it's handled\n    in ComputeTaskManager.\n    \n    Change-Id: Ie63a4798d420c39815e294843e02ab6473cfded2\n    Related-Bug: #1713786\n    (cherry picked from commit 34f8a351502418d30f137ad49e948802d6b2ab3c)\n", 
            "date_created": "2017-09-15 18:03:52.305123+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/503161\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=21150948246d52060a38e93f98982c2e5c9b347d\nSubmitter: Jenkins\nBranch:    stable/pike\n\ncommit 21150948246d52060a38e93f98982c2e5c9b347d\nAuthor: Matt Riedemann <email address hidden>\nDate:   Wed Aug 30 15:05:44 2017 -0400\n\n    Create allocations against forced dest host during evacuate\n    \n    If a host is specified during an evacuate with the force=True\n    flag, conductor bypasses the scheduler. Since the scheduler\n    is what creates the \"doubled up\" allocation on the destination\n    node, and the scheduler is bypassed in the force case, we have\n    to create the allocations against the destination node in\n    conductor directly.\n    \n    The unit tests cover the failure scenarios. The functional\n    test covers the happy path.\n    \n    This is a short-term backportable fix. Long-term we'll likely\n    want to call the scheduler even in the 'force' scenario but pass\n    a flag to the scheduler to tell it to skip the filters but still\n    create the allocation on the destination node so we don't have\n    to duplicate that in conductor.\n    \n    Change-Id: I6590f0eda4ec4996543ad40d8c2640b83fc3dd9d\n    Partial-Bug: #1713786\n    (cherry picked from commit d564266a019cb009ece1a63e5d544698f2bf74d1)\n", 
            "date_created": "2017-09-15 18:04:13.514016+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/503162\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=d0375c2f9e5cc4dac7f8805382c09dbe6224dcd9\nSubmitter: Jenkins\nBranch:    stable/pike\n\ncommit d0375c2f9e5cc4dac7f8805382c09dbe6224dcd9\nAuthor: Matt Riedemann <email address hidden>\nDate:   Thu Aug 31 22:47:07 2017 -0400\n\n    Add recreate test for evacuate claim failure\n    \n    This adds a functional recreate test for when the MoveClaim\n    fails on the destination node and the allocation on the\n    destination node is not cleaned up. This is because the\n    MoveClaim fails in it's constructor so it never exits the\n    Claim context manager to call the drop_move_claim which\n    would remove the destination node allocation.\n    \n    Eventually we'll have to manually remove the destination\n    node allocation in the ComputeManager.rebuild_instance method.\n    \n    Change-Id: I8900ace4436c4837beb8b4eb1e1d05905efc6dce\n    Related-Bug: #1713786\n    (cherry picked from commit 6ed80ddcdd3f9e40f0ada581ac7bd524ec48135b)\n", 
            "date_created": "2017-09-15 18:30:22.351217+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/503163\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=61ad70565e4d241f0a3f01d999e3aaf7a2eef3a3\nSubmitter: Jenkins\nBranch:    stable/pike\n\ncommit 61ad70565e4d241f0a3f01d999e3aaf7a2eef3a3\nAuthor: Matt Riedemann <email address hidden>\nDate:   Thu Aug 31 22:56:59 2017 -0400\n\n    Add a test to make sure failed evacuate cleans up dest allocation\n    \n    If we actually make the MoveClaim but the evacuation fails\n    in the virt driver, the drop_move_claim via the MoveClaim.abort\n    will remove the destination node allocation. This adds a functional\n    test to show that works.\n    \n    Change-Id: Ib58c487e97a041b8498746e8a276efffee239c56\n    Related-Bug: #1713786\n    (cherry picked from commit 30946f9a5eeea839631cdb1dba9c26d45f7a8d00)\n", 
            "date_created": "2017-09-15 18:30:44.228681+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/503165\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=21d7f8b11f217b7e5ece6868a06df70a7a065b6b\nSubmitter: Jenkins\nBranch:    stable/pike\n\ncommit 21d7f8b11f217b7e5ece6868a06df70a7a065b6b\nAuthor: Matt Riedemann <email address hidden>\nDate:   Fri Sep 1 09:58:03 2017 -0400\n\n    Remove dest node allocation if evacuate MoveClaim fails\n    \n    If the MoveClaim during an evacuate fails we need to\n    remove the destination node allocation since the\n    ResourceTracker isn't going to do it.\n    \n    This also fixes test_rebuild_server_exc which was faking\n    a rebuild failure by raising an error that would not\n    actually happen during a rebuild. ComputeResourcesUnavailable\n    only happens if a claim fails, and for a rebuild, which\n    is on the same host that the instance is already on, doesn't\n    involve a claim attempt.\n    \n    Change-Id: I59ff47bf773c9831d0f44e1caf7877fe08c911c3\n    Closes-Bug: #1713786\n    (cherry picked from commit 5bc137f7ebc266f8a73d6febc7c10d8d648924e0)\n", 
            "date_created": "2017-09-15 19:49:07.063361+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/nova 16.0.1 release.", 
            "date_created": "2017-09-25 14:27:57.230823+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}