{
    "status": "Fix Released", 
    "last_updated": "2011-04-15 08:37:05.531122+00:00", 
    "description": "I have a lot of traces in my /v/l/m, because MySQL is not started. Please make some useful logging message (MySQL server on xxxx:yyyy is unreachable) without the trace. (I set --noverbose in my /etc/nova/nova.conf)\n\nFeb  9 08:38:50 mandarin 2011-02-09 08:38:50,127 CRITICAL nova.root [-] (OperationalError) (2003, \"Can't connect to MySQL server on 'xxxx' (111)\") None None (nova.root): TRACE: Traceback (most recent call last): (nova.root): TRACE:   File \"/usr/bin/nova-compute\", line 44, in <module> (nova.root): TRACE:     service.serve() (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/nova/service.py\", line 231, in serve (nova.root): TRACE:     x.start() (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/nova/service.py\", line 81, in start (nova.root): TRACE:     self.manager.init_host() (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/nova/compute/manager.py\", line 120, in init_host (nova.root): TRACE:     self.driver.init_host(host=self.host) (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/nova/virt/libvirt_conn.py\", line 158, in init_host (nova.root): TRACE:     for instance in db.instance_get_all_by_host(ctxt, host): (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/nova/db/api.py\", line 355, in instance_get_all_by_host (nova.root): TRACE:     return IMPL.instance_get_all_by_host(context, host) (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/nova/db/sqlalchemy/api.py\", line 97, in wrapper (nova.root): TRACE:     return f(*args, **kwargs) (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/nova/db/sqlalchemy/api.py\", line 744, in instance_get_all_by_host (nova.root): TRACE:     filter_by(deleted=can_read_deleted(context)).\\ (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/sqlalchemy/orm/query.py\", line 1579, in all (nova.root): TRACE:     return list(self) (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/sqlalchemy/orm/query.py\", line 1689, in __iter__ (nova.root): TRACE:     return self._execute_and_instances(context) (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/sqlalchemy/orm/query.py\", line 1694, in _execute_and_instances (nova.root): TRACE:     mapper=self._mapper_zero_or_none()) (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/sqlalchemy/orm/session.py\", line 719, in execute (nova.root): TRACE:     return self._connection_for_bind(engine, close_with_result=True).execute( (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/sqlalchemy/orm/session.py\", line 662, in _connection_for_bind (nova.root): TRACE:     return engine.contextual_connect(**kwargs) (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/sqlalchemy/engine/base.py\", line 1829, in contextual_connect (nova.root): TRACE:     self.pool.connect(), (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/sqlalchemy/pool.py\", line 182, in connect (nova.root): TRACE:     return _ConnectionFairy(self).checkout() (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/sqlalchemy/pool.py\", line 369, in __init__ (nova.root): TRACE:     rec = self._connection_record = pool.get() (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/sqlalchemy/pool.py\", line 213, in get (nova.root): TRACE:     return self.do_get() (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/sqlalchemy/pool.py\", line 732, in do_get (nova.root): TRACE:     con = self.create_connection() (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/sqlalchemy/pool.py\", line 147, in create_connection (nova.root): TRACE:     return _ConnectionRecord(self) (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/sqlalchemy/pool.py\", line 253, in __init__ (nova.root): TRACE:     self.connection = self.__connect() (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/sqlalchemy/pool.py\", line 319, in __connect (nova.root): TRACE:     connection = self.__pool._creator() (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/sqlalchemy/engine/strategies.py\", line 82, in connect (nova.root): TRACE:     return dialect.connect(*cargs, **cparams) (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/sqlalchemy/engine/default.py\", line 249, in connect (nova.root): TRACE:     return self.dbapi.connect(*cargs, **cparams) (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/MySQLdb/__init__.py\", line 71, in Connect (nova.root): TRACE:     return Connection(*args, **kwargs) (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/MySQLdb/connections.py\", line 170, in __init__ (nova.root): TRACE:     super(Connection, self).__init__(*args, **kwargs2) (nova.root): TRACE: OperationalError: (OperationalError) (2003, \"Can't connect to MySQL server on 'xxxx' (111)\") None None (nova.root): TRACE:", 
    "tags": [], 
    "importance": "Low", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/715620", 
    "owner": "https://api.launchpad.net/1.0/~klmitch", 
    "id": 715620, 
    "index": 4990, 
    "created": "2011-02-09 07:40:56.064074+00:00", 
    "title": "fix logging message if database server is not reachable", 
    "comments": [
        {
            "content": "I have a lot of traces in my /v/l/m, because MySQL is not started. Please make some useful logging message (MySQL server on xxxx:yyyy is unreachable) without the trace. (I set --noverbose in my /etc/nova/nova.conf)\n\nFeb  9 08:38:50 mandarin 2011-02-09 08:38:50,127 CRITICAL nova.root [-] (OperationalError) (2003, \"Can't connect to MySQL server on 'xxxx' (111)\") None None (nova.root): TRACE: Traceback (most recent call last): (nova.root): TRACE:   File \"/usr/bin/nova-compute\", line 44, in <module> (nova.root): TRACE:     service.serve() (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/nova/service.py\", line 231, in serve (nova.root): TRACE:     x.start() (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/nova/service.py\", line 81, in start (nova.root): TRACE:     self.manager.init_host() (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/nova/compute/manager.py\", line 120, in init_host (nova.root): TRACE:     self.driver.init_host(host=self.host) (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/nova/virt/libvirt_conn.py\", line 158, in init_host (nova.root): TRACE:     for instance in db.instance_get_all_by_host(ctxt, host): (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/nova/db/api.py\", line 355, in instance_get_all_by_host (nova.root): TRACE:     return IMPL.instance_get_all_by_host(context, host) (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/nova/db/sqlalchemy/api.py\", line 97, in wrapper (nova.root): TRACE:     return f(*args, **kwargs) (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/nova/db/sqlalchemy/api.py\", line 744, in instance_get_all_by_host (nova.root): TRACE:     filter_by(deleted=can_read_deleted(context)).\\ (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/sqlalchemy/orm/query.py\", line 1579, in all (nova.root): TRACE:     return list(self) (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/sqlalchemy/orm/query.py\", line 1689, in __iter__ (nova.root): TRACE:     return self._execute_and_instances(context) (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/sqlalchemy/orm/query.py\", line 1694, in _execute_and_instances (nova.root): TRACE:     mapper=self._mapper_zero_or_none()) (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/sqlalchemy/orm/session.py\", line 719, in execute (nova.root): TRACE:     return self._connection_for_bind(engine, close_with_result=True).execute( (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/sqlalchemy/orm/session.py\", line 662, in _connection_for_bind (nova.root): TRACE:     return engine.contextual_connect(**kwargs) (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/sqlalchemy/engine/base.py\", line 1829, in contextual_connect (nova.root): TRACE:     self.pool.connect(), (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/sqlalchemy/pool.py\", line 182, in connect (nova.root): TRACE:     return _ConnectionFairy(self).checkout() (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/sqlalchemy/pool.py\", line 369, in __init__ (nova.root): TRACE:     rec = self._connection_record = pool.get() (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/sqlalchemy/pool.py\", line 213, in get (nova.root): TRACE:     return self.do_get() (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/sqlalchemy/pool.py\", line 732, in do_get (nova.root): TRACE:     con = self.create_connection() (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/sqlalchemy/pool.py\", line 147, in create_connection (nova.root): TRACE:     return _ConnectionRecord(self) (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/sqlalchemy/pool.py\", line 253, in __init__ (nova.root): TRACE:     self.connection = self.__connect() (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/sqlalchemy/pool.py\", line 319, in __connect (nova.root): TRACE:     connection = self.__pool._creator() (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/sqlalchemy/engine/strategies.py\", line 82, in connect (nova.root): TRACE:     return dialect.connect(*cargs, **cparams) (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/sqlalchemy/engine/default.py\", line 249, in connect (nova.root): TRACE:     return self.dbapi.connect(*cargs, **cparams) (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/MySQLdb/__init__.py\", line 71, in Connect (nova.root): TRACE:     return Connection(*args, **kwargs) (nova.root): TRACE:   File \"/usr/lib64/python2.6/site-packages/MySQLdb/connections.py\", line 170, in __init__ (nova.root): TRACE:     super(Connection, self).__init__(*args, **kwargs2) (nova.root): TRACE: OperationalError: (OperationalError) (2003, \"Can't connect to MySQL server on 'xxxx' (111)\") None None (nova.root): TRACE:", 
            "date_created": "2011-02-09 07:40:56.064074+00:00", 
            "author": "https://api.launchpad.net/1.0/~berendt"
        }, 
        {
            "content": "I've thought carefully about this bug, and unfortunately I don't think I can fix it the way I did the AMQP server connection problem.  At issue here is that the MySQL connection is set up implicitly, deep inside SQLAlchemy, and the only tool SQLAlchemy has to let the upstack user (that is, Nova) know that a connection problem occurred is an OperationalException...but that exception could also be thrown for other reasons.\n\nThat said, I think implementing the change specified in bug 725349 will have the effect you desire, namely, omitting stack traces from the logs if --noverbose is specified, so I'm going to concentrate on that bug today...", 
            "date_created": "2011-02-28 17:03:20.526314+00:00", 
            "author": "https://api.launchpad.net/1.0/~klmitch"
        }
    ]
}