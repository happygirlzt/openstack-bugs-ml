{
    "status": "Fix Released", 
    "last_updated": "2012-06-07 18:24:05.918536+00:00", 
    "description": "A fresh git clone of python-novaclient fails to set metadata on a live server:\n$ nova meta 2966 set mykey=\"value\"\nERROR: \n$\n\nDoing the same from within python directly, I get the following error:\n>>> s = cs.servers.list()\n>>> s\n<Server: meta test>\n>>> cs.servers.set_meta(s, {'py': 'py shell'})\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"novaclient/v1_1/servers.py\", line 572, in set_meta\n    body, \"metadata\")\n  File \"novaclient/base.py\", line 157, in _create\n    resp, body = self.api.client.post(url, body=body)\n  File \"novaclient/client.py\", line 139, in post\n    return self._cs_request(url, 'POST', **kwargs)\n  File \"novaclient/client.py\", line 124, in _cs_request\n    **kwargs)\n  File \"novaclient/client.py\", line 107, in request\n    raise exceptions.from_response(resp, body)\nnovaclient.exceptions.NotFound: Server does not exist (HTTP 404)\n\n\n\n\nTwiddling with the code, if set_meta method in servers.py (v1.1) is changed to use server.id directly (vs. base.geid(server) which returns uuid), the metadata gets set.\n\nHowever, if the same is attempted from within python, an AttributeError is thrown (see below). I've spent a few hours looking at it now and have no explanation why is this happening. My python code is identical to what's in do_meta method in shell.py (called when the cmd line command is used) and direct python code comes back with the error while the do_meta method completes correctly? Running the python code does in fact set the metadata field before raising the error.\n\nHere is the shell output:\n$ python\nPython 2.6.1 (r261:67515, Jun 24 2010, 21:47:49) \n[GCC 4.2.1 (Apple Inc. build 5646)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> USER = 'username'\n>>> PASS = 'password'\n>>> TENANT = 'tenant'\n>>> AUTH_URL = 'keystone URL'\n>>> from novaclient.v1_1 import client\ncs = client.Client(username=USER, api_key=PASS, project_id=TENANT, auth_url=AUTH_URL, region_name=\"Melbourne\", service_name=\"nova\", service_type=\"compute\")\ncs.authenticate()\nss = cs.servers.list()\ns = ss[0]\ncs.servers.set_meta(s, {'py2': 'py2 shell'})\n>>> cs = client.Client(username=USER, api_key=PASS, project_id=TENANT, auth_url=AUTH_URL, region_name=\"Melbourne\", service_name=\"nova\", service_type=\"compute\")\n>>> cs.authenticate()\n>>> ss = cs.servers.list()\n>>> s = ss[0]\n>>> cs.servers.set_meta(s, {'py': 'py shell'})\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"novaclient/v1_1/servers.py\", line 35, in __repr__\n    return \"<Server: %s>\" % self.name\n  File \"novaclient/base.py\", line 328, in __getattr__\n    self.get()\n  File \"novaclient/base.py\", line 347, in get\n    new = self.manager.get(self.id)\n  File \"novaclient/base.py\", line 331, in __getattr__\n    raise AttributeError(k)\nAttributeError: id\n>>>\n\n\n\nIn summary, there's a bug with setting metadata to begin with. The second python issue I noted may be a separate problem but still does not work.", 
    "tags": [], 
    "importance": "Undecided", 
    "heat": 16, 
    "link": "https://bugs.launchpad.net/nova/+bug/972102", 
    "owner": "None", 
    "id": 972102, 
    "index": 2746, 
    "created": "2012-04-03 05:09:55.490626+00:00", 
    "title": "Set server metadata does not work", 
    "comments": [
        {
            "content": "A fresh git clone of python-novaclient fails to set metadata on a live server:\n$ nova meta 2966 set mykey=\"value\"\nERROR: \n$\n\nDoing the same from within python directly, I get the following error:\n>>> s = cs.servers.list()\n>>> s\n<Server: meta test>\n>>> cs.servers.set_meta(s, {'py': 'py shell'})\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"novaclient/v1_1/servers.py\", line 572, in set_meta\n    body, \"metadata\")\n  File \"novaclient/base.py\", line 157, in _create\n    resp, body = self.api.client.post(url, body=body)\n  File \"novaclient/client.py\", line 139, in post\n    return self._cs_request(url, 'POST', **kwargs)\n  File \"novaclient/client.py\", line 124, in _cs_request\n    **kwargs)\n  File \"novaclient/client.py\", line 107, in request\n    raise exceptions.from_response(resp, body)\nnovaclient.exceptions.NotFound: Server does not exist (HTTP 404)\n\n\n\n\nTwiddling with the code, if set_meta method in servers.py (v1.1) is changed to use server.id directly (vs. base.geid(server) which returns uuid), the metadata gets set.\n\nHowever, if the same is attempted from within python, an AttributeError is thrown (see below). I've spent a few hours looking at it now and have no explanation why is this happening. My python code is identical to what's in do_meta method in shell.py (called when the cmd line command is used) and direct python code comes back with the error while the do_meta method completes correctly? Running the python code does in fact set the metadata field before raising the error.\n\nHere is the shell output:\n$ python\nPython 2.6.1 (r261:67515, Jun 24 2010, 21:47:49) \n[GCC 4.2.1 (Apple Inc. build 5646)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> USER = 'username'\n>>> PASS = 'password'\n>>> TENANT = 'tenant'\n>>> AUTH_URL = 'keystone URL'\n>>> from novaclient.v1_1 import client\ncs = client.Client(username=USER, api_key=PASS, project_id=TENANT, auth_url=AUTH_URL, region_name=\"Melbourne\", service_name=\"nova\", service_type=\"compute\")\ncs.authenticate()\nss = cs.servers.list()\ns = ss[0]\ncs.servers.set_meta(s, {'py2': 'py2 shell'})\n>>> cs = client.Client(username=USER, api_key=PASS, project_id=TENANT, auth_url=AUTH_URL, region_name=\"Melbourne\", service_name=\"nova\", service_type=\"compute\")\n>>> cs.authenticate()\n>>> ss = cs.servers.list()\n>>> s = ss[0]\n>>> cs.servers.set_meta(s, {'py': 'py shell'})\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"novaclient/v1_1/servers.py\", line 35, in __repr__\n    return \"<Server: %s>\" % self.name\n  File \"novaclient/base.py\", line 328, in __getattr__\n    self.get()\n  File \"novaclient/base.py\", line 347, in get\n    new = self.manager.get(self.id)\n  File \"novaclient/base.py\", line 331, in __getattr__\n    raise AttributeError(k)\nAttributeError: id\n>>>\n\n\n\nIn summary, there's a bug with setting metadata to begin with. The second python issue I noted may be a separate problem but still does not work.", 
            "date_created": "2012-04-03 05:09:55.490626+00:00", 
            "author": "https://api.launchpad.net/1.0/~afgane"
        }, 
        {
            "content": "May I ask what version of nova you're running against? And what is the output of 'nova list'?", 
            "date_created": "2012-04-03 15:35:37.835348+00:00", 
            "author": "https://api.launchpad.net/1.0/~bcwaldon"
        }, 
        {
            "content": "It's an up to date clone of https://github.com/openstack/python-novaclient\nWith that, it says version 1.1\n\nHere's the output from nova list:\n$ nova list\n+------+----------+--------+--------------------------+\n|  ID  |   Name   | Status |         Networks         |\n+------+----------+--------+--------------------------+\n| 2966 | new name | ACTIVE | noble=117.126.32.200 |\n+------+----------+--------+--------------------------+\n\nThanks for looking into it.", 
            "date_created": "2012-04-03 23:04:01.508915+00:00", 
            "author": "https://api.launchpad.net/1.0/~afgane"
        }, 
        {
            "content": "Are you running Nova stable/diablo?", 
            "date_created": "2012-04-04 02:38:48.165678+00:00", 
            "author": "https://api.launchpad.net/1.0/~bcwaldon"
        }, 
        {
            "content": "Yes, but with modifications and backports of some Essex code as well.\n(all this is being done against the NeCTAR cloud (http://nectar.org.au/research-cloud))", 
            "date_created": "2012-04-04 04:04:57.020887+00:00", 
            "author": "https://api.launchpad.net/1.0/~afgane"
        }, 
        {
            "content": "Unable to replicate this against Essex.", 
            "date_created": "2012-04-09 21:48:49.789393+00:00", 
            "author": "https://api.launchpad.net/1.0/~rconradharris"
        }, 
        {
            "content": "This bug effects, stable/diablo,\n\ni assume it's a bug in the client library which uses the uuid of the server in the post url, \n\nPOST /v1.1/42/servers/082b6769-c6f5-4ba5-a2ce-0aba2f06a855/metadata\n\nusing the server id instead seems to work fine\n\nPOST /v1.1/42/servers/2306/metadata\n", 
            "date_created": "2012-04-12 00:45:56.567832+00:00", 
            "author": "https://api.launchpad.net/1.0/~russell-sim"
        }, 
        {
            "content": "This bug was fixed in essex by commit 255a363f78ffd193a4915169d44b85dfeb2c9579 I am unsure of the feasibility of back porting the commit", 
            "date_created": "2012-04-12 03:50:13.346078+00:00", 
            "author": "https://api.launchpad.net/1.0/~russell-sim"
        }
    ]
}