{
    "status": "Fix Released", 
    "last_updated": "2011-09-27 16:32:01.106451+00:00", 
    "description": "related bug: \n  bug 828357: request to add a label to the filesystem for ephemeral devices\n  bug 827598: ephemeral device does not have a filesystem \n\n$ python -c 'import boto.utils; print boto.utils.get_instance_metadata()[\"block-device-mapping\"]'\n{'ami': 'sda1', 'root': '/dev/sda1', 'ephemeral0': 'sda2', 'swap': 'sda3'}\n\n$ cat /proc/partitions\n$ cat /proc/partitions\nmajor minor  #blocks  name\n\n\u00a0253        0   10485760 vda\n\u00a0253       16   83886080 vdb\n\nSo there is an issue here, at very least the MD should say \"/dev/sda\" and \"/dev/sdb\" would be a better guess.  Additionally, there is no third disk (as reported in 'swap') present at all.\n\nProblemType: Bug\nDistroRelease: Ubuntu 11.10\nPackage: cloud-init 0.6.1-0ubuntu14\nProcVersionSignature: User Name 3.0.0-8.11-virtual 3.0.1\nUname: Linux 3.0.0-8-virtual i686\nArchitecture: i386\nDate: Tue Aug 16 19:17:00 2011\nEc2AMI: ami-00000011\nEc2AMIManifest: FIXME\nEc2AvailabilityZone: nova\nEc2InstanceType: <nova.db.sqlalchemy.models.InstanceTypes object at 0x4f32090>\nEc2Kernel: aki-00000010\nEc2Ramdisk: unavailable\nPackageArchitecture: all\nProcEnviron:\n\u00a0LANG=en_US.UTF-8\n\u00a0SHELL=/bin/bash\nSourcePackage: cloud-init\nUpgradeStatus: No upgrade log present (probably fresh install)", 
    "tags": [
        "apport-bug", 
        "ec2-images", 
        "i386", 
        "oneiric", 
        "rls-mgr-o-tracking", 
        "server-o-rs"
    ], 
    "importance": "Medium", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/827590", 
    "owner": "None", 
    "id": 827590, 
    "index": 2506, 
    "created": "2011-08-16 19:22:28.284423+00:00", 
    "title": "cloud-init does not mount ephemeral0 on /mnt in nova", 
    "comments": [
        {
            "content": "$ python -c 'import boto.utils; print boto.utils.get_instance_metadata()[\"block-device-mapping\"]'\n{'ami': 'sda1', 'root': '/dev/sda1', 'ephemeral0': 'sda2', 'swap': 'sda3'}\n\n$ cat /proc/partitions\n$ cat /proc/partitions \nmajor minor  #blocks  name\n\n 253        0   10485760 vda\n 253       16   83886080 vdb\n\nSo there is an issue here, at very least the MD should say \"/dev/sda\" and \"/dev/sdb\" would be a better guess.  Additionally, there is no third disk (as reported in 'swap') present at all.\n\nProblemType: Bug\nDistroRelease: Ubuntu 11.10\nPackage: cloud-init 0.6.1-0ubuntu14\nProcVersionSignature: User Name 3.0.0-8.11-virtual 3.0.1\nUname: Linux 3.0.0-8-virtual i686\nArchitecture: i386\nDate: Tue Aug 16 19:17:00 2011\nEc2AMI: ami-00000011\nEc2AMIManifest: FIXME\nEc2AvailabilityZone: nova\nEc2InstanceType: <nova.db.sqlalchemy.models.InstanceTypes object at 0x4f32090>\nEc2Kernel: aki-00000010\nEc2Ramdisk: unavailable\nPackageArchitecture: all\nProcEnviron:\n LANG=en_US.UTF-8\n SHELL=/bin/bash\nSourcePackage: cloud-init\nUpgradeStatus: No upgrade log present (probably fresh install)", 
            "date_created": "2011-08-16 19:22:28.284423+00:00", 
            "author": "https://api.launchpad.net/1.0/~smoser"
        }, 
        {
            "content": "", 
            "date_created": "2011-08-16 19:22:28.284423+00:00", 
            "author": "https://api.launchpad.net/1.0/~smoser"
        }, 
        {
            "content": "So far nova lied. It is fixed by nova revision of 1400 in the repository.\r\nHere is the example\r\nubuntu@ubuntu:~$ cat /proc/partitions\r\nmajor minor  #blocks  name\r\n\r\n 252        0   10485760 vda\r\n 252       16   20971520 vdb\r\n 252       32    1048576 vdc\r\n\r\nubuntu@ubuntu:~$ python -c 'import boto.utils; print boto.utils.get_instance_metadata()[\"block-device-mapping\"]'\r\n{'ami': 'vda', 'root': '/dev/vda', 'ephemeral0': '/dev/vdd'}\r\n", 
            "date_created": "2011-08-17 10:46:14.448830+00:00", 
            "author": "https://api.launchpad.net/1.0/~yamahata"
        }, 
        {
            "content": "@Scott, could you confirm the fix ?", 
            "date_created": "2011-08-19 09:26:05.445735+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "Just from reading comment 2, the issue is clearly not fixed correctly.\r\n\r\n/proc/partitions shows vda, vdb, and vdc, but the block-device-mapping shows ephemeral0 mapped to vdd.", 
            "date_created": "2011-08-22 13:42:08.824184+00:00", 
            "author": "https://api.launchpad.net/1.0/~smoser"
        }, 
        {
            "content": "On Mon, Aug 22, 2011 at 01:42:08PM -0000, Scott Moser wrote:\n> Just from reading comment 2, the issue is clearly not fixed correctly.\n> \n> /proc/partitions shows vda, vdb, and vdc, but the block-device-mapping\n> shows ephemeral0 mapped to vdd.\n\nYes, you're right.\nThe create kvm command line that libvirt created and the created xml for\nthe guest is as follows. You can see that those target device is specified\ncorrectly in the xml, but the mapping information is lost in the command line.\nlibvirt doesn't have any way to force the guest to use the setting in\nqemu-kvm case because qemu-kvm creates pci devices for each virtio-disk\nand the guests understands it sequentially from 'a'. In order to fix it,\nwe need to pass those mapping information to guest from nova somehow and\nteach OS initialization sequence (cloud-init?/udev?) the mapping.\n\nThe command line to launch kvm guest.\n\n/usr/bin/kvm -S -M pc-0.14 -enable-kvm -m 512 -smp 1,sockets=1,cores=1,threads=1 -name instance-000000e4 -uuid 8882f5d5-d448-29e3-e124-6739e6fd22d6 -nodefconfig -nodefaults -chardev socket,id=charmonitor,path=/var/lib/libvirt/qemu/instance-000000e4.monitor,server,nowait -mon chardev=charmonitor,id=monitor,mode=readline -rtc base=utc -boot c -kernel /var/lib/nova/instances/instance-000000e4/kernel -append root=/dev/vda console=ttyS0 -drive file=/var/lib/nova/instances/instance-000000e4/disk,if=none,id=drive-virtio-disk0,format=qcow2 -device virtio-blk-pci,bus=pci.0,addr=0x4,drive=drive-virtio-disk0,id=virtio-disk0 -drive file=/var/lib/nova/instances/instance-000000e4/disk.eph0,if=none,id=drive-virtio-disk3, format=qcow2 -device virtio-blk-pci,bus=pci.0,addr=0x5,drive=drive-virtio-disk3, id=virtio-disk3 -drive file=/dev/mapper/nova--volumes-volume--00000040,if=none,id=drive-virtio-disk2,format=raw -device virtio-blk-pci,bus=pci.0,addr=0x6,drive=drive-virtio-disk2,id=virtio-disk2 -netdev tap,fd=18,id=hostnet0 -device rtl8139,netdev=hostnet0,id=net0,mac=02:16:3e:1e:ff:c0,bus=pci.0,addr=0x3 -chardev file, id=charserial0,path=/var/lib/nova/instances/instance-000000e4/console.log -device isa-serial,chardev=charserial0,id=serial0 -chardev pty,id=charserial1 -device isa-serial,chardev=charserial1,id=serial1 -usb -vnc 0.0.0.0:0 -k en-us -vga cirrus -device virtio-balloon-pci,id=balloon0,bus=pci.0,addr=0x7\n\n\n\nthe create xml for the guest\n<domain type='kvm'>\n    <name>instance-000000e4</name>\n    <memory>524288</memory>\n    <os>\n            <type>hvm</type>\n            <kernel>/var/lib/nova/instances/instance-000000e4/kernel</kernel>\n                <cmdline>root=/dev/vda console=ttyS0</cmdline>\n    </os>\n    <features>\n        <acpi/>\n    </features>\n    <vcpu>1</vcpu>\n    <devices>\n        <disk type='file'>\n            <driver type='qcow2'/>\n            <source file='/var/lib/nova/instances/instance-000000e4/disk'/>\n            <target dev='vda' bus='virtio'/>\n        </disk>\n             <disk type='block'>\n                <driver type='qcow2'/>\n                <source dev='/var/lib/nova/instances/instance-000000e4/disk.eph0\n'/>\n                <target dev='vdd' bus='virtio'/>\n             </disk>\n            <disk type='block'>\n                <driver type='raw'/>\n                <source dev='/dev/mapper/nova--volumes-volume--00000040'/>\n                <target dev='vdc' bus='virtio'/>\n            </disk>\n\n        <interface type='bridge'>\n            <source bridge='br100'/>\n            <mac address='02:16:3e:1e:ff:c0'/>\n            <!--   <model type='virtio'/>  CANT RUN virtio network right now -->\n            <filterref filter=\"nova-instance-instance-000000e4-02163e1effc0\">\n                <parameter name=\"IP\" value=\"172.17.220.4\" />\n                <parameter name=\"DHCPSERVER\" value=\"172.17.220.1\" />\n            </filterref>\n        </interface>\n\n        <!-- The order is significant here.  File must be defined first -->\n        <serial type=\"file\">\n            <source path='/var/lib/nova/instances/instance-000000e4/console.log'\n/>\n            <target port='1'/>\n        </serial>\n\n        <console type='pty' tty='/dev/pts/2'>\n            <source path='/dev/pts/2'/>\n            <target port='0'/>\n        </console>\n\n        <serial type='pty'>\n            <source path='/dev/pts/2'/>\n            <target port='0'/>\n        </serial>\n\n        <graphics type='vnc' port='-1' autoport='yes' keymap='en-us' listen='0.0\n.0.0'/>\n    </devices>\n</domain>\n", 
            "date_created": "2011-08-23 03:46:12+00:00", 
            "author": "https://api.launchpad.net/1.0/~yamahata"
        }, 
        {
            "content": "I understand that actually mapping a device name from hypervisor to guest is actually impossible, but hopefully we can come up with a better guess.\n\nIts unfortunate that libvirt doesn't even seem to be using the \"dev=\" as a suggestion of device ordering along the virtio bus.  Instead, I'm guessing it is using order present in xml.  I was hoping at very least that suggesting 'vda', 'vdb', 'vdc' would render in kvm command line to addr=0x4, addr=0x5, addr=0x6 respectively.\n\nSince libvirt seems to be relying on order in the xml, is it possible to specify the \"correct\" order and also sane \"dev=\" attributes?\n\nIe, what would happen if you had xml like:\n\n|   <disk type='file'>\n|       <driver type='qcow2'/>\n|       <source file='/var/lib/nova/instances/instance-000000e4/disk'/>\n|       <target dev='vda' bus='virtio'/>\n|   </disk>\n|   <disk type='block'>\n|       <driver type='qcow2'/>\n|       <source dev='/var/lib/nova/instances/instance-000000e4/disk.eph0 '/>\n|       <target dev='vdb' bus='virtio'/>\n|   </disk>\n|   <disk type='block'>\n|       <driver type='raw'/>\n|       <source dev='/dev/mapper/nova--volumes-volume--00000040'/>\n|       <target dev='vdc' bus='virtio'/>\n|   </disk>\n\nAnd then specified block device mapping like:\n{\n 'ami': 'vda',\n 'root': '/dev/vda',\n 'ephemeral0': '/dev/vdb'\n 'vol0': '/dev/vdc'\n}\n\nAgain, I understand, you can't force the guest to name devices in any way, but hopefully we can at least map \"vda\" to \"first device on virtio bus\", and \"vdb\" to \"second disk on virtio bus\".\n", 
            "date_created": "2011-08-23 12:32:16.557260+00:00", 
            "author": "https://api.launchpad.net/1.0/~smoser"
        }, 
        {
            "content": "With Isaku's branch this is fixed with no cloud-init changes, so I've marked those tasks as invalid.\n", 
            "date_created": "2011-09-13 18:23:49.498787+00:00", 
            "author": "https://api.launchpad.net/1.0/~smoser"
        }, 
        {
            "content": "let's do a backport for diablo", 
            "date_created": "2011-09-15 12:07:59.684148+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }
    ]
}