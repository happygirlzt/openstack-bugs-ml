{
    "status": "Expired", 
    "last_updated": "2016-07-05 09:53:29.808343+00:00", 
    "description": "Not able to delete the VM once the VM deletion failed in nova compute.\n\nSteps to reproduce:\n\n1. create VM\n2. wait until VM becomes available\n3. Stop nova-cell child process\n4. delete VM\n   nova delete <vm_id or vm_name>\n5. stop neutron service\n6. start child nova-cell process\n7. start neutron service\n8. delete VM again\n\nVM is not deleted and will be listed in the nova list output.\n\n$ nova list\n+--------------------------------------+------+--------+------------+-------------+------------------+\n| ID                                   | Name | Status | Task State | Power State | Networks         |\n+--------------------------------------+------+--------+------------+-------------+------------------+\n| 9d7c9fb2-010f-4de6-975a-1a2de825155b | vm09 | ERROR  | -          | Running     | private=10.0.0.2 |\n+--------------------------------------+------+--------+------------+-------------+------------------+\n\nFollowing log messages is logged in n-child-cell screen:\n\n2014-10-07 04:36:57.159 INFO nova.compute.api [req-11c20157-23ac-4892-9fdf-3e60201a9bb4 admin admin]\n[instance: 77aabf6c-7b33-4c49-8061-eb9805214085] Instance is already in deleting state, ignoring this request\n\nNote: VM never gets deleted.", 
    "tags": [
        "cells"
    ], 
    "importance": "Undecided", 
    "heat": 18, 
    "link": "https://bugs.launchpad.net/nova/+bug/1378683", 
    "owner": "None", 
    "id": 1378683, 
    "index": 5199, 
    "created": "2014-10-08 08:18:50.109265+00:00", 
    "title": "nova-cell, cannot delete VM once deleting VM with failure in nova-compute", 
    "comments": [
        {
            "content": "Not able to delete the VM once the VM deletion failed in nova compute.\n\nSteps to reproduce:\n\n1. create VM\n2. wait until VM becomes available\n3. Stop nova-cell child process\n4. delete VM\n   nova delete <vm_id or vm_name>\n5. stop neutron service\n6. start child nova-cell process\n7. start neutron service\n8. delete VM again\n\nVM is not deleted and will be listed in the nova list output.\n\n$ nova list\n+--------------------------------------+------+--------+------------+-------------+------------------+\n| ID                                   | Name | Status | Task State | Power State | Networks         |\n+--------------------------------------+------+--------+------------+-------------+------------------+\n| 9d7c9fb2-010f-4de6-975a-1a2de825155b | vm09 | ERROR  | -          | Running     | private=10.0.0.2 |\n+--------------------------------------+------+--------+------------+-------------+------------------+\n\nFollowing log messages is logged in n-child-cell screen:\n\n2014-10-07 04:36:57.159 INFO nova.compute.api [req-11c20157-23ac-4892-9fdf-3e60201a9bb4 admin admin]\n[instance: 77aabf6c-7b33-4c49-8061-eb9805214085] Instance is already in deleting state, ignoring this request\n\nNote: VM never gets deleted.", 
            "date_created": "2014-10-08 08:18:50.109265+00:00", 
            "author": "https://api.launchpad.net/1.0/~rajesh-tailor"
        }, 
        {
            "content": "Won't this get addressed by your existing patch for force delete? https://review.openstack.org/#/c/121800/", 
            "date_created": "2014-10-08 22:44:15.136420+00:00", 
            "author": "https://api.launchpad.net/1.0/~cyeoh-0"
        }, 
        {
            "content": "Hi Christopher,\n\nI have tested the issue according to your comment and applied the following patch.\nhttps://review.openstack.org/#/c/121800/\n\nI got following error on nova child cell service (n-cell-child), when I try to delete the instance using force-delete api.\n\n2014-10-09 23:16:13.803 ERROR nova.cells.messaging [req-ca9d0984-612c-4ff2-8\n56c-71bfaba70266 admin admin] Error processing message locally: Object '<Ins\ntance at 0x7fb3f8b7ced0>' is already attached to session '79' (this is '83')\n2014-10-09 23:16:13.803 TRACE nova.cells.messaging Traceback (most recent ca\nll last):\n2014-10-09 23:16:13.803 TRACE nova.cells.messaging   File \"/opt/stack/nova/n\nova/cells/messaging.py\", line 199, in _process_locally\n2014-10-09 23:16:13.803 TRACE nova.cells.messaging     resp_value = self.msg\n_runner._process_message_locally(self)\n2014-10-09 23:16:13.803 TRACE nova.cells.messaging   File \"/opt/stack/nova/n\nova/cells/messaging.py\", line 1293, in _process_message_locally\n2014-10-09 23:16:13.803 TRACE nova.cells.messaging     return fn(message, **\nmessage.method_kwargs)\n2014-10-09 23:16:13.803 TRACE nova.cells.messaging   File \"/opt/stack/nova/n\nova/cells/messaging.py\", line 698, in run_compute_api_method\n2014-10-09 23:16:13.803 TRACE nova.cells.messaging     return fn(message.ctx\nt, *args, **method_info['method_kwargs'])\n2014-10-09 23:16:13.803 TRACE nova.cells.messaging   File \"/opt/stack/nova/n\nova/compute/api.py\", line 221, in wrapped\n2014-10-09 23:16:13.803 TRACE nova.cells.messaging     return func(self, con\ntext, target, *args, **kwargs)\n2014-10-09 23:16:13.803 TRACE nova.cells.messaging   File \"/opt/stack/nova/nova/compute/api.py\", line 211, in inner\n2014-10-09 23:16:13.803 TRACE nova.cells.messaging     return function(self, context, instance, *args, **kwargs)\n2014-10-09 23:16:13.803 TRACE nova.cells.messaging   File \"/opt/stack/nova/nova/compute/api.py\", line 192, in inner\n2014-10-09 23:16:13.803 TRACE nova.cells.messaging     return f(self, context, instance, *args, **kw)\n2014-10-09 23:16:13.803 TRACE nova.cells.messaging   File \"/opt/stack/nova/nova/compute/api.py\", line 1834, in force_delete\n2014-10-09 23:16:13.803 TRACE nova.cells.messaging     self._delete_instance(context, instance, delete_types.FORCE_DELETE)\n2014-10-09 23:16:13.803 TRACE nova.cells.messaging   File \"/opt/stack/nova/nova/compute/api.py\", line 1787, in _delete_instance\n2014-10-09 23:16:13.803 TRACE nova.cells.messaging     task_state=task_states.DELETING)\n2014-10-09 23:16:13.803 TRACE nova.cells.messaging   File \"/opt/stack/nova/nova/compute/api.py\", line 1618, in _delete\n2014-10-09 23:16:13.803 TRACE nova.cells.messaging     quotas.rollback()\n2014-10-09 23:16:13.803 TRACE nova.cells.messaging   File \"/opt/stack/nova/nova/openstack/common/excutils.py\", line 82, in __exit__\n2014-10-09 23:16:13.803 TRACE nova.cells.messaging     six.reraise(self.type_, self.value, self.tb)\n2014-10-09 23:16:13.803 TRACE nova.cells.messaging   File \"/opt/stack/nova/nova/compute/api.py\", line 1544, in _delete\n2014-10-09 23:16:13.803 TRACE nova.cells.messaging     instance.save()\n2014-10-09 23:16:13.803 TRACE nova.cells.messaging   File \"/opt/stack/nova/nova/db/sqlalchemy/models.py\", line 62, in save\n2014-10-09 23:16:13.803 TRACE nova.cells.messaging     super(NovaBase, self).save(session=session)\n2014-10-09 23:16:13.803 TRACE nova.cells.messaging   File \"/usr/local/lib/python2.7/dist-packages/oslo/db/sqlalchemy/models.py\", line 47, in save\n2014-10-09 23:16:13.803 TRACE nova.cells.messaging     session.add(self)\n2014-10-09 23:16:13.803 TRACE nova.cells.messaging   File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/session.py\", line 1399, in add\n2014-10-09 23:16:13.803 TRACE nova.cells.messaging     self._save_or_update_state(state)\n2014-10-09 23:16:13.803 TRACE nova.cells.messaging   File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/session.py\", line 1411, in _save_or_update_state\n2014-10-09 23:16:13.803 TRACE nova.cells.messaging     self._save_or_update_impl(state)\n2014-10-09 23:16:13.803 TRACE nova.cells.messaging   File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/session.py\", line 1667, in _save_or_update_impl\n2014-10-09 23:16:13.803 TRACE nova.cells.messaging     self._update_impl(state)\n2014-10-09 23:16:13.803 TRACE nova.cells.messaging   File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/session.py\", line 1661, in _update_impl\n2014-10-09 23:16:13.803 TRACE nova.cells.messaging     self._attach(state)\n2014-10-09 23:16:13.803 TRACE nova.cells.messaging   File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/session.py\", line 1749, in _attach\n2014-10-09 23:16:13.803 TRACE nova.cells.messaging     state.session_id, self.hash_key))\n2014-10-09 23:16:13.803 TRACE nova.cells.messaging InvalidRequestError: Object '<Instance at 0x7fb3f8b7ced0>' is already attached to session '79' (this is '83')", 
            "date_created": "2014-10-10 06:35:29.322385+00:00", 
            "author": "https://api.launchpad.net/1.0/~rajesh-tailor"
        }, 
        {
            "content": "So we are running into this.  In addition we are running into another vm is stuck in deleting state.   In that the vm will fail to delete if a call to neutron failed (such as a call to remove the port or a call to disassociate a floating ip).   It seems like a work around for us is to restart nova-compute on the host that has the vm stuck in deleting state.  When nova-compute comes back online it logs: Service started deleting the instance during the previous run, but did not finish. Restarting the deletion now.\n\nSeems like an additional change would be to make it retry the delete on every scheduled task interval instead of ignoring it?", 
            "date_created": "2015-04-21 00:28:43.523205+00:00", 
            "author": "https://api.launchpad.net/1.0/~klindgren"
        }, 
        {
            "content": "Cleanup\n=======\n\nThere are no open reviews for this bug report since more than 2 weeks.\nTo signal that to other contributors which might provide patches for\nthis bug, I switch the status from \"In Progress\" to \"Confirmed\" and\nremove the assignee.\nFeel free to add yourself as assignee and to push a review for it.", 
            "date_created": "2016-03-11 14:30:16.057721+00:00", 
            "author": "https://api.launchpad.net/1.0/~mzoeller"
        }, 
        {
            "content": "\nThis is an automated cleanup. This bug report has been closed because it\nis older than 18 months and there is no open code change to fix this.\nAfter this time it is unlikely that the circumstances which lead to\nthe observed issue can be reproduced.\n\nIf you can reproduce the bug, please:\n* reopen the bug report (set to status \"New\")\n* AND add the detailed steps to reproduce the issue (if applicable)\n* AND leave a comment \"CONFIRMED FOR: <RELEASE_NAME>\"\n  Only still supported release names are valid (LIBERTY, MITAKA, OCATA, NEWTON).\n  Valid example: CONFIRMED FOR: LIBERTY\n", 
            "date_created": "2016-07-05 09:53:29.049246+00:00", 
            "author": "https://api.launchpad.net/1.0/~mzoeller"
        }
    ]
}