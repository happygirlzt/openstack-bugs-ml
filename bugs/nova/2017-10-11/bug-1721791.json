{
    "status": "Fix Released", 
    "last_updated": "2017-10-09 20:59:44.361628+00:00", 
    "description": "Listing of instances returns a limited number of resources. To list all instances, \"marker\" parameter can be used to list all the pages, i.e to obtain all the servers.\n\n    # novaclient implements the same logic for `limit=-1`.\n\u00a0\u00a0\u00a0\u00a0results = []\n\u00a0\u00a0\u00a0\u00a0marker = None\n\u00a0\u00a0\u00a0\u00a0while True:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0servers = list_server(marker)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if not servers:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0break\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0results.extend(servers)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0marker = results[-1].id\n\nFor some reasons, it stopped working. Listing instances starting from X instance returns a list of resources with X instance in it.\n\nCaught by the scenario when 2 VMs are created at almost the same time (<1sec between requests) in the same tenant by the same user, but with different names.", 
    "tags": [
        "api", 
        "cells"
    ], 
    "importance": "High", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1721791", 
    "owner": "https://api.launchpad.net/1.0/~danms", 
    "id": 1721791, 
    "index": 2157, 
    "created": "2017-10-06 14:21:11.865020+00:00", 
    "title": "Pagination of instances works incorrect", 
    "comments": [
        {
            "content": "Listing of instances returns a limited number of resources. To list all instances, \"marker\" parameter can be used to list all the pages, i.e to obtain all the servers.\n    \n    results = []\n    marker = None\n    while True:\n         servers = list_server(marker)\n         if not servers:\n             break\n\n         results.extend(servers)\n         marker = results[-1].id\n\nActually, novaclient implements the same logic for `limit=-1`.\nFor some reasons, it stopped working. Listing instances starting from X instance returns a list of resources with X instance in it.\n\nCatched by the scenario when 2 VMs are created at almost the same time (<1sec between requests) in the same tenant by the same user, but with different names.", 
            "date_created": "2017-10-06 14:21:11.865020+00:00", 
            "author": "https://api.launchpad.net/1.0/~andreykurilin"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/510140", 
            "date_created": "2017-10-06 14:42:37.218562+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/510203", 
            "date_created": "2017-10-06 18:11:27.144641+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/510203\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=00bbc2ffd356ed17b11d432875c172141cd50b24\nSubmitter: Jenkins\nBranch:    master\n\ncommit 00bbc2ffd356ed17b11d432875c172141cd50b24\nAuthor: Dan Smith <email address hidden>\nDate:   Fri Oct 6 10:33:33 2017 -0700\n\n    Fix instance_get_by_sort_filters() for multiple sort keys\n    \n    This method would not actually work for any query where multiple sort\n    keys were provided. Since it effectively ANDed all of the sort_key > val\n    conditions in the query, any multi-key sort would exclude a lot of\n    results.\n    \n    This fix actually replicates much of the logic from the base\n    paginate_query() utility method, which properly handles multiple\n    keys by creating key1>val1 OR (key1=val2 AND key2>=val2) WHERE\n    clauses necessary for proper ordering.\n    \n    Change-Id: I3dac96759f7c7f11a0e0e9d86731dd4d22462d33\n    Partial-Bug: #1721791\n", 
            "date_created": "2017-10-09 14:59:46.631446+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/510140\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=add69c05072b4ee7efd4e75debf2172ed2269c86\nSubmitter: Jenkins\nBranch:    master\n\ncommit add69c05072b4ee7efd4e75debf2172ed2269c86\nAuthor: Dan Smith <email address hidden>\nDate:   Fri Oct 6 07:40:42 2017 -0700\n\n    Always put 'uuid' into sort_keys for stable instance lists\n    \n    If we're listing by sort keys that yield many ambiguous results, we\n    may exacerbate issues in client pagination because we're not even\n    bound by insertion order given that we have multiple databases being\n    queried in parallel. So, even if the client didn't ask for it, throw\n    'uuid' into the end of sort_keys to provide us a stable ordering. This\n    was done for the default case by always including 'id' in the default\n    set of sort_keys, although a user could still break if they request\n    their own keys.\n    \n    Note this also removes the recently-added explicit sort in the\n    test_bug_1689692 case, since we're enforcing a strict ordering with\n    this patch. Also, mriedem is awesome.\n    \n    Change-Id: Ida446acb1286a8b215451a5d8d7d23882643ef13\n    Closes-Bug: #1721791\n", 
            "date_created": "2017-10-09 20:59:43.452966+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}