{
    "status": "Fix Released", 
    "last_updated": "2014-04-17 08:58:16.487207+00:00", 
    "description": "When starting nova-compute service on node with lxc hypervisor, it failed with the following error:\n\n 2013-12-11 03:04:41.439 ERROR nova.openstack.common.threadgroup [-] can only parse strings\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup Traceback (most recent call last):\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup   File \"/opt/stack/nova/nova/openstack/common/threadgroup.py\", line 117, in wait\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup     x.wait()\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup   File \"/opt/stack/nova/nova/openstack/common/threadgroup.py\", line 49, in wait\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup     return self.thread.wait()\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup   File \"/usr/lib/python2.7/dist-packages/eventlet/greenthread.py\", line 168, in wait\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup     return self._exit_event.wait()\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup   File \"/usr/lib/python2.7/dist-packages/eventlet/event.py\", line 116, in wait\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup     return hubs.get_hub().switch()\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup   File \"/usr/lib/python2.7/dist-packages/eventlet/hubs/hub.py\", line 187, in switch\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup     return self.greenlet.switch()\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup   File \"/usr/lib/python2.7/dist-packages/eventlet/greenthread.py\", line 194, in main\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup     result = function(*args, **kwargs)\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup   File \"/opt/stack/nova/nova/openstack/common/service.py\", line 448, in run_service\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup     service.start()\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup   File \"/opt/stack/nova/nova/service.py\", line 164, in start\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup     self.manager.pre_start_hook()\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup   File \"/opt/stack/nova/nova/compute/manager.py\", line 822, in pre_start_hook\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup     self.update_available_resource(nova.context.get_admin_context())\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup   File \"/opt/stack/nova/nova/compute/manager.py\", line 4971, in update_available_resource\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup     nodenames = set(self.driver.get_available_nodes())\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup   File \"/opt/stack/nova/nova/virt/driver.py\", line 980, in get_available_nodes\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup     stats = self.get_host_stats(refresh=refresh)\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup   File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 4569, in get_host_stats\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup     return self.host_state.get_host_stats(refresh=refresh)\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup   File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 429, in host_state\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup     self._host_state = HostState(self)\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup   File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 4960, in __init__\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup     self.update_status()\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup   File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 4999, in update_status\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup     self.driver.get_instance_capabilities()\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup   File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 3702, in get_instance_capabilities\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup     caps = self.get_host_capabilities()\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup   File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 2739, in get_host_capabilities\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup     self._caps.host.cpu.parse_str(features)\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup   File \"/opt/stack/nova/nova/virt/libvirt/config.py\", line 61, in parse_str\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup     self.parse_dom(etree.fromstring(xmlstr))\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup   File \"lxml.etree.pyx\", line 2993, in lxml.etree.fromstring (src/lxml/lxml.etree.c:62980)\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup   File \"parser.pxi\", line 1614, in lxml.etree._parseMemoryDocument (src/lxml/lxml.etree.c:92786)\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup ValueError: can only parse strings\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup \n\n\nThis is because no cpu model info can be gotten from libvirt getCapabilities interface for lxc hypervisor.", 
    "tags": [
        "lxc"
    ], 
    "importance": "High", 
    "heat": 22, 
    "link": "https://bugs.launchpad.net/nova/+bug/1259796", 
    "owner": "https://api.launchpad.net/1.0/~hzguanqiang", 
    "id": 1259796, 
    "index": 1346, 
    "created": "2013-12-11 03:13:39.844903+00:00", 
    "title": "nova-compute failed to start because get_host_capablilities failed", 
    "comments": [
        {
            "content": "When starting nova-compute service on node with lxc hypervisor, it failed with the following error:\n\n 2013-12-11 03:04:41.439 ERROR nova.openstack.common.threadgroup [-] can only parse strings\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup Traceback (most recent call last):\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup   File \"/opt/stack/nova/nova/openstack/common/threadgroup.py\", line 117, in wait\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup     x.wait()\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup   File \"/opt/stack/nova/nova/openstack/common/threadgroup.py\", line 49, in wait\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup     return self.thread.wait()\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup   File \"/usr/lib/python2.7/dist-packages/eventlet/greenthread.py\", line 168, in wait\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup     return self._exit_event.wait()\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup   File \"/usr/lib/python2.7/dist-packages/eventlet/event.py\", line 116, in wait\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup     return hubs.get_hub().switch()\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup   File \"/usr/lib/python2.7/dist-packages/eventlet/hubs/hub.py\", line 187, in switch\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup     return self.greenlet.switch()\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup   File \"/usr/lib/python2.7/dist-packages/eventlet/greenthread.py\", line 194, in main\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup     result = function(*args, **kwargs)\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup   File \"/opt/stack/nova/nova/openstack/common/service.py\", line 448, in run_service\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup     service.start()\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup   File \"/opt/stack/nova/nova/service.py\", line 164, in start\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup     self.manager.pre_start_hook()\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup   File \"/opt/stack/nova/nova/compute/manager.py\", line 822, in pre_start_hook\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup     self.update_available_resource(nova.context.get_admin_context())\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup   File \"/opt/stack/nova/nova/compute/manager.py\", line 4971, in update_available_resource\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup     nodenames = set(self.driver.get_available_nodes())\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup   File \"/opt/stack/nova/nova/virt/driver.py\", line 980, in get_available_nodes\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup     stats = self.get_host_stats(refresh=refresh)\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup   File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 4569, in get_host_stats\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup     return self.host_state.get_host_stats(refresh=refresh)\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup   File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 429, in host_state\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup     self._host_state = HostState(self)\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup   File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 4960, in __init__\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup     self.update_status()\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup   File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 4999, in update_status\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup     self.driver.get_instance_capabilities()\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup   File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 3702, in get_instance_capabilities\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup     caps = self.get_host_capabilities()\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup   File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 2739, in get_host_capabilities\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup     self._caps.host.cpu.parse_str(features)\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup   File \"/opt/stack/nova/nova/virt/libvirt/config.py\", line 61, in parse_str\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup     self.parse_dom(etree.fromstring(xmlstr))\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup   File \"lxml.etree.pyx\", line 2993, in lxml.etree.fromstring (src/lxml/lxml.etree.c:62980)\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup   File \"parser.pxi\", line 1614, in lxml.etree._parseMemoryDocument (src/lxml/lxml.etree.c:92786)\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup ValueError: can only parse strings\n2013-12-11 03:04:41.439 TRACE nova.openstack.common.threadgroup \n\n\nThis is because no cpu model info can be gotten from libvirt getCapabilities interface for lxc hypervisor.", 
            "date_created": "2013-12-11 03:13:39.844903+00:00", 
            "author": "https://api.launchpad.net/1.0/~hzguanqiang"
        }, 
        {
            "content": "Patch is here: https://review.openstack.org/#/c/61310/", 
            "date_created": "2013-12-11 03:38:01.848151+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "https://review.openstack.org/#/c/43984/\nthe bug is caused by this commit, and Xu Chen\thas already find this bug.", 
            "date_created": "2013-12-11 07:14:02.259968+00:00", 
            "author": "https://api.launchpad.net/1.0/~hzwangpan"
        }, 
        {
            "content": "I read code in libvirt python library, It will return -1 in this case.\nFunction Details:\n\n#define VIR_PY_INT_FAIL (libvirt_intWrap(-1))\n\nstatic PyObject *                                                                   \nlibvirt_virConnectBaselineCPU(PyObject *self ATTRIBUTE_UNUSED,                      \n                              PyObject *args) {                                     \n    PyObject *pyobj_conn;                                                           \n    PyObject *list;                                                                 \n    virConnectPtr conn;                                                             \n    unsigned int flags;                                                             \n    const char **xmlcpus = NULL;                                                    \n    int ncpus = 0;                                                                  \n    char *base_cpu;                                                                 \n    PyObject *pybase_cpu;                                                           \n                                                                                    \n    if (!PyArg_ParseTuple(args, (char *)\"OOi:virConnectBaselineCPU\",                \n                          &pyobj_conn, &list, &flags))                              \n        return NULL;                                                                \n    conn = (virConnectPtr) PyvirConnect_Get(pyobj_conn);                            \n                                                                                    \n    if (PyList_Check(list)) {                                                       \n        size_t i;                                                                   \n                                                                                    \n        ncpus = PyList_Size(list);                                                  \n        if (VIR_ALLOC_N_QUIET(xmlcpus, ncpus) < 0)                                  \n            return VIR_PY_INT_FAIL;                                                 \n                                                                                    \n        for (i = 0; i < ncpus; i++) {                                               \n            xmlcpus[i] = PyString_AsString(PyList_GetItem(list, i));                \n            if (xmlcpus[i] == NULL) {                                               \n                VIR_FREE(xmlcpus);                                                  \n                return VIR_PY_INT_FAIL;                                             \n            }                                                                       \n        }                                                                           \n    }                                                                               \n                                                                                    \n    LIBVIRT_BEGIN_ALLOW_THREADS;                                                    \n    base_cpu = virConnectBaselineCPU(conn, xmlcpus, ncpus, flags);                  \n    LIBVIRT_END_ALLOW_THREADS;                                                      \n                                                                                    \n    VIR_FREE(xmlcpus);                                                              \n                                                                                    \n    if (base_cpu == NULL)                                                           \n        return VIR_PY_INT_FAIL;                                                     \n                                                                                    \n    pybase_cpu = PyString_FromString(base_cpu);                                     \n    VIR_FREE(base_cpu);                                                             \n                                                                                    \n    if (pybase_cpu == NULL)                                                         \n        return VIR_PY_INT_FAIL;                                                     \n                                                                                    \n    return pybase_cpu;                                                              ", 
            "date_created": "2013-12-11 07:49:16.757289+00:00", 
            "author": "https://api.launchpad.net/1.0/~hzwangpan"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/61310\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=5228d01bcde531cc2c141f38a150dbb2daef1c07\nSubmitter: Jenkins\nBranch:    master\n\ncommit 5228d01bcde531cc2c141f38a150dbb2daef1c07\nAuthor: Guan Qiang <email address hidden>\nDate:   Wed Dec 11 03:21:34 2013 +0000\n\n    lxc: Fix a bug of baselineCPU parse failure\n    \n    When starting nova-compute on compute node with lxc hypervisor,\n    a valueError exception will be raised because a libvirt bug of\n    the incorrect return value of baselineCPU() function, in function\n    get_host_capabilities, which introduced by commit\n    3b8c26321bce07b8ad588099c1fdcef858e748a8.\n    \n    For libvirt interface baselineCPU() in python library, -1 will be\n    returned if basecpu info is None from version 1.1.2, and the return\n    value of this interface is corrected to None from version 1.2.0.\n    \n    So a checking is added to make sure the return value of baselineCPU()\n    is not -1, and also a test case is added.\n    \n    Closes-bug: #1259796\n    \n    Co-authored-by: Wangpan <email address hidden>\n    \n    Change-Id: I5e4cb4a8d09b660edc4f6c6a4ad4bfe58a4dd5cb\n", 
            "date_created": "2014-01-04 15:32:46.021315+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "For the record, the above fix break unit tests. Filed https://bugs.launchpad.net/nova/+bug/1266534 to fix it.", 
            "date_created": "2014-01-06 18:16:36.411612+00:00", 
            "author": "https://api.launchpad.net/1.0/~bhuvan"
        }
    ]
}