{
    "status": "Won't Fix", 
    "last_updated": "2012-01-27 01:38:55.423613+00:00", 
    "description": "Once a floating IP has been assigned to a project, it is never freed. This means if the cluster is running low on floating IPs, new floating IP assignments fail.\n\nI can see that having some form of persistence for floating IPs is a good idea, but I think that they should be reaped and reallocated when the pool gets too small.", 
    "tags": [], 
    "importance": "Undecided", 
    "heat": 8, 
    "link": "https://bugs.launchpad.net/nova/+bug/922401", 
    "owner": "None", 
    "id": 922401, 
    "index": 2510, 
    "created": "2012-01-27 01:23:10.187120+00:00", 
    "title": "Unused floating IPs remain associated with projects infinitely", 
    "comments": [
        {
            "content": "Once a floating IP has been assigned to a project, it is never freed. This means if the cluster is running low on floating IPs, new floating IP assignments fail.\n\nI can see that having some form of persistence for floating IPs is a good idea, but I think that they should be reaped and reallocated when the pool gets too small.", 
            "date_created": "2012-01-27 01:23:10.187120+00:00", 
            "author": "https://api.launchpad.net/1.0/~mikal"
        }, 
        {
            "content": "The idea of a floating ip is that it is reserved for use by a given tenant.  If the cloud starts giving back floating ips then they lose their value to a user. A user can release the floating ip using delete via os_api or with euca-release-address (via euca ec2 api).\n\nIt breaks expectations of how floating ips should be used to have them reassigned.  If a feature like this is needed for a private cloud deployment where you don't mind breaking the normal semantics, then it would be pretty easily implemented by an external worker that could manually release the ips via db calls.", 
            "date_created": "2012-01-27 01:38:54.795501+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }
    ]
}