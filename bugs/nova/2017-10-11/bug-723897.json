{
    "status": "Fix Released", 
    "last_updated": "2011-03-29 13:27:32.180102+00:00", 
    "description": "Using bzr revision 716.\n\nI'm unable to use the openstack-compute Ruby bindings with the latest codebase. I get the following error in nova-api.log when attempting to authenticate with the bindings:\n\n\n2011-02-23 18:46:44,037 DEBUG nova.utils [-] backend <module 'nova.db.sqlalchemy.api' from '/usr/lib/pymodules/python2.6/nova/db/sqlalchemy/api.pyc'> from MainProcess (pid=14442) __get_backend /usr/lib/pymodules/python2.6/nova/utils.py:374\n2011-02-23 18:46:44,114 ERROR nova.api.openstack [-] Caught error: No user for access key admin\n(nova.api.openstack): TRACE: Traceback (most recent call last):\n(nova.api.openstack): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/api/openstack/__init__.py\", line 53, in __call__\n(nova.api.openstack): TRACE:     return req.get_response(self.application)\n(nova.api.openstack): TRACE:   File \"/usr/lib/pymodules/python2.6/webob/request.py\", line 919, in get_response\n(nova.api.openstack): TRACE:     application, catch_exc_info=False)\n(nova.api.openstack): TRACE:   File \"/usr/lib/pymodules/python2.6/webob/request.py\", line 887, in call_application\n(nova.api.openstack): TRACE:     app_iter = application(self.environ, start_response)\n(nova.api.openstack): TRACE:   File \"/usr/lib/pymodules/python2.6/webob/dec.py\", line 147, in __call__\n(nova.api.openstack): TRACE:     resp = self.call_func(req, *args, **self.kwargs)\n(nova.api.openstack): TRACE:   File \"/usr/lib/pymodules/python2.6/webob/dec.py\", line 208, in call_func\n(nova.api.openstack): TRACE:     return self.func(req, *args, **kwargs)\n(nova.api.openstack): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/api/openstack/auth.py\", line 51, in __call__\n(nova.api.openstack): TRACE:     return self.authenticate(req)\n(nova.api.openstack): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/api/openstack/auth.py\", line 81, in authenticate\n(nova.api.openstack): TRACE:     token, user = self._authorize_user(username, key, req)\n(nova.api.openstack): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/api/openstack/auth.py\", line 123, in _authorize_user", 
    "tags": [], 
    "importance": "Undecided", 
    "heat": 18, 
    "link": "https://bugs.launchpad.net/nova/+bug/723897", 
    "owner": "https://api.launchpad.net/1.0/~dan-prince", 
    "id": 723897, 
    "index": 2044, 
    "created": "2011-02-23 19:21:57.099188+00:00", 
    "title": "'No user for access key admin' when using the Openstack API", 
    "comments": [
        {
            "content": "Using bzr revision 716.\n\nI'm unable to use the openstack-compute Ruby bindings with the latest codebase. I get the following error in nova-api.log when attempting to authenticate with the bindings:\n\n\n2011-02-23 18:46:44,037 DEBUG nova.utils [-] backend <module 'nova.db.sqlalchemy.api' from '/usr/lib/pymodules/python2.6/nova/db/sqlalchemy/api.pyc'> from MainProcess (pid=14442) __get_backend /usr/lib/pymodules/python2.6/nova/utils.py:374\n2011-02-23 18:46:44,114 ERROR nova.api.openstack [-] Caught error: No user for access key admin\n(nova.api.openstack): TRACE: Traceback (most recent call last):\n(nova.api.openstack): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/api/openstack/__init__.py\", line 53, in __call__\n(nova.api.openstack): TRACE:     return req.get_response(self.application)\n(nova.api.openstack): TRACE:   File \"/usr/lib/pymodules/python2.6/webob/request.py\", line 919, in get_response\n(nova.api.openstack): TRACE:     application, catch_exc_info=False)\n(nova.api.openstack): TRACE:   File \"/usr/lib/pymodules/python2.6/webob/request.py\", line 887, in call_application\n(nova.api.openstack): TRACE:     app_iter = application(self.environ, start_response)\n(nova.api.openstack): TRACE:   File \"/usr/lib/pymodules/python2.6/webob/dec.py\", line 147, in __call__\n(nova.api.openstack): TRACE:     resp = self.call_func(req, *args, **self.kwargs)\n(nova.api.openstack): TRACE:   File \"/usr/lib/pymodules/python2.6/webob/dec.py\", line 208, in call_func\n(nova.api.openstack): TRACE:     return self.func(req, *args, **kwargs)\n(nova.api.openstack): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/api/openstack/auth.py\", line 51, in __call__\n(nova.api.openstack): TRACE:     return self.authenticate(req)\n(nova.api.openstack): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/api/openstack/auth.py\", line 81, in authenticate\n(nova.api.openstack): TRACE:     token, user = self._authorize_user(username, key, req)\n(nova.api.openstack): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/api/openstack/auth.py\", line 123, in _authorize_user", 
            "date_created": "2011-02-23 19:21:57.099188+00:00", 
            "author": "https://api.launchpad.net/1.0/~dan-prince"
        }, 
        {
            "content": "Okay. I've tracked this down to commit 709. Reverting that commit seems to fix everything. I suspect issue causing that commit was a result of an issue in either the Python bindings being used or the arguments supplied to them.\n\nI've been using the Ruby bindings for regression testing this for quite a while now (no changes on that front).", 
            "date_created": "2011-02-23 19:30:24.405797+00:00", 
            "author": "https://api.launchpad.net/1.0/~dan-prince"
        }, 
        {
            "content": "jpipes@serialcoder:~/repos/nova/trunk$ bzr log -r709\n------------------------------------------------------------\nrevno: 709 [merge]\nauthor: Justin Santa Barbara <email address hidden>\ncommitter: Tarmac\nbranch nick: nova\ntimestamp: Mon 2011-02-21 22:39:53 +0000\nmessage:\n  The OpenStack API was using the 'secret' as the 'access key'.  There\nis an 'access key' and there is a 'secret key'.  Access key ~=\nusername.  Secret key ~= password.  This fix is necessary for the\nOpenStack Python API bindings to log in.\n------------------------------------------------------------\n\nAre we sure the Ruby binding isn't incorrect as well?\n\n-jay\n\nOn Wed, Feb 23, 2011 at 2:30 PM, Dan Prince <email address hidden> wrote:\n> Okay. I've tracked this down to commit 709. Reverting that commit seems\n> to fix everything. I suspect issue causing that commit was a result of\n> an issue in either the Python bindings being used or the arguments\n> supplied to them.\n>\n> I've been using the Ruby bindings for regression testing this for quite\n> a while now (no changes on that front).\n>\n> --\n> You received this bug notification because you are a member of Nova Bug\n> Team, which is subscribed to OpenStack Compute (nova).\n> https://bugs.launchpad.net/bugs/723897\n>\n> Title:\n> \u00a0'No user for access key admin' when using the Openstack API\n>\n", 
            "date_created": "2011-02-23 19:41:34+00:00", 
            "author": "https://api.launchpad.net/1.0/~jaypipes"
        }, 
        {
            "content": "I think there is some confusion here as to the meanings of these values.\nThe python openstack bindings (novatools ) were working before this patch (#709). They are broken now. \n\nThe source of this seems to be the oddity that nova stores the openstack 'api-key' as 'User.access' , when it is really a secret key value (the username being User.name)  Whereas for the ec2 api access is essentially the user identifier, and secret is the secret key.  \n\nThere seems to be some conceptual gear grinding here.\n", 
            "date_created": "2011-02-23 19:51:59.929379+00:00", 
            "author": "https://api.launchpad.net/1.0/~mdragon"
        }, 
        {
            "content": "Hey Jay.\n\nThe Ruby bindings are based directly on the Cloud Servers Bindings. They haven't change in quite a while and should work fine.\n\nAnother guys on our team hit this same issue so I'm fairly positive 709 is causing the issue.", 
            "date_created": "2011-02-23 20:03:36.140274+00:00", 
            "author": "https://api.launchpad.net/1.0/~dan-prince"
        }, 
        {
            "content": "So, looks like r709 fixed EC2 and broke OpenStack API... :(\n\nOn Wed, Feb 23, 2011 at 3:03 PM, Dan Prince <email address hidden> wrote:\n> Hey Jay.\n>\n> The Ruby bindings are based directly on the Cloud Servers Bindings. They\n> haven't change in quite a while and should work fine.\n>\n> Another guys on our team hit this same issue so I'm fairly positive 709\n> is causing the issue.\n>\n> --\n> You received this bug notification because you are a member of Nova Bug\n> Team, which is subscribed to OpenStack Compute (nova).\n> https://bugs.launchpad.net/bugs/723897\n>\n> Title:\n> \u00a0'No user for access key admin' when using the Openstack API\n>\n", 
            "date_created": "2011-02-23 20:38:10+00:00", 
            "author": "https://api.launchpad.net/1.0/~jaypipes"
        }, 
        {
            "content": "Had a discussion with Monsyne Dragon on IRC about this.  Fixing this is next in my queue.\n\nThe issue, I believe, is that the novarc exported user id is now incorrect.\n\nSome background: there are 3 fields in the User object: username, access_key and secret_key.  (They get renamed a bit depending on the module)\n\nEC2 uses access_key as the username and secret_key as the secret password\n\nOpenStack pre 709 was using username as the username and access_key (the EC2 username) as the password.\n\nThese are incompatible - you can't have a non-secret on one API (EC2) being the secret for another (OpenStack).\n\n709 fixes it so that OpenStack expects the same credentials.\n\nHowever, I think the export is now broken.\n\nThis also now leaves open the question of what 'username' is for.\n\nMonsyne Dragon also raised a concern that perhaps an EC2 secret and OpenStack secret were not compatible (due to different formats or similar)  I don't believe that is the case.\n\nI think the best thing is to have one set of credentials across APIs.  I think that it's just the export that's broken, so that's what I'm going to look at right now.\n\nI believe if you use the EC2 credentials as your username and password everything should work just as it did before.  It's just that the credentials in novarc aren't quite right...", 
            "date_created": "2011-02-23 20:50:49.194062+00:00", 
            "author": "https://api.launchpad.net/1.0/~justin-fathomdb"
        }, 
        {
            "content": "Hmm. I'm not sure that is the case here. All of this code is in the Openstack API (no EC2 stuff). Additionally only Openstack bindings and tools are mentioned in this thread.\n\nThe code in 709 used this:\n\n   user = self.auth.get_user_from_access_key(username)\n\nThe following code works:\n\n   user = self.auth.get_user_from_access_key(key)\n\n----\n\nLike Monsyne said above there are some naming differences in nova. Here is how things are stored in SQL:\n\n\nmysql> select access_key, secret_key from users;\n+----------------------+----------------------+\n| access_key           | secret_key           |\n+----------------------+----------------------+\n| 9rAVqhvvLXCALygDPayB | JnpxuXTZNJfJWcuFJSDn |\n+----------------------+----------------------+\n1 row in set (0.00 sec)\n\nHere is what shows up in my novarc:\n\ncat novarc | grep \"^export NOVA\"\nexport NOVA_CERT=${NOVA_KEY_DIR}/cacert.pem\nexport NOVA_API_KEY=\"9rAVqhvvLXCALygDPayB\"\nexport NOVA_USERNAME=\"admin\"\nexport NOVA_URL=\"http://172.19.0.3:8774/v1.0/\"\n\nIn other words the API_KEY is the 'access_key'.", 
            "date_created": "2011-02-23 20:53:28.572968+00:00", 
            "author": "https://api.launchpad.net/1.0/~dan-prince"
        }, 
        {
            "content": "Here's the proposed fix, though I haven't tried it yet:\nhttps://code.launchpad.net/~justin-fathomdb/nova/bug723897\n\nAs you've already shared your password with us ( ;-) ), would you mind sharing the complete novarc.  My hypothesis is that the (secret) NOVA_API_KEY is in fact your (non-secret) EC2 username, and that your EC2 credentials (removing the ':{project}' from the EC2 username) should now work for the OpenStack API.", 
            "date_created": "2011-02-23 21:04:49.151943+00:00", 
            "author": "https://api.launchpad.net/1.0/~justin-fathomdb"
        }, 
        {
            "content": "Or... simpler... this should work:\n\nexport NOVA_USERNAME=\"9rAVqhvvLXCALygDPayB\"\nexport NOVA_API_KEY=\"JnpxuXTZNJfJWcuFJSDn\"\n\nAs a secondary question, I believe this is what we want the OpenStack Username and Password to be...\n", 
            "date_created": "2011-02-23 21:06:04.029173+00:00", 
            "author": "https://api.launchpad.net/1.0/~justin-fathomdb"
        }, 
        {
            "content": "Okay. Couple of things. It appears you are trying to make EC2 and Openstack act alike. The are different API's and will always behave differently.\n\nWhere we have the following SQL records:\n\nmysql> select id, access_key, secret_key from users;\n+-------+----------------------+----------------------+\n| id    | access_key           | secret_key           |\n+-------+----------------------+----------------------+\n| admin | 9rAVqhvvLXCALygDPayB | JnpxuXTZNJfJWcuFJSDn |\n+-------+----------------------+----------------------+\n1 row in set (0.00 sec)\n\nI'm pretty sure we want the username to be 'admin' and the API key to be '9rAVqhvvLXCALygDPayB' as it was before 709.\n\nIn other words this should be correct:\n\nexport NOVA_USERNAME=\"admin\"\nexport NOVA_API_KEY=\"9rAVqhvvLXCALygDPayB\"\n\n---\n\nThe Openstack EC2 API does things a bit differently (as does Amazon's EC2). My config uses the following:\n\nexport EC2_ACCESS_KEY=\"9rAVqhvvLXCALygDPayB:admin\"\nexport EC2_SECRET_KEY=\"JnpxuXTZNJfJWcuFJSDn\"\n\nWhich should be correct as well.\n", 
            "date_created": "2011-02-23 21:41:25.465540+00:00", 
            "author": "https://api.launchpad.net/1.0/~dan-prince"
        }, 
        {
            "content": "I think there are 2 issues here:\n\nThe credentials exported in novarc are wrong post r709, and I've proposed a bug fix merge to fix that without reverting r709.  If you could confirm that the NOVA_USERNAME & API_KEY I suggests above do work for you, then I think this will fix the issue where you can't log in.\n\nThere's a second question of what the username & password should be.  I think the situation pre r709 was untenable - the Amazon access_key is not normally considered a secret (it is transmitted as a request parameter, and the AWS API could securely be run without SSL because it uses signatures), but it was being used as the secret by OpenStack.  I changed it so that the credentials for OpenStack are the same as for EC2, which seems to me a rational approach.  I think having different credentials is confusing; what's the advantage in having different credentials based on the front-end API you're using?", 
            "date_created": "2011-02-23 22:03:02.102620+00:00", 
            "author": "https://api.launchpad.net/1.0/~justin-fathomdb"
        }, 
        {
            "content": "Hmm,, \n\nThis change still seems problematic to me. When we want to authenticate via the openstack API, we will be passing in a username (i.e. 'admin') and an API key.   This change changes the meaning of existing data in the database, and does not have a migration to keep the meaning of that data intact. \n\nWHile I agree that it is somewhat of  a design wart that nova use(s/ed) the same value for the (conceptually public) ec2 access key, and the (conceptually private ) openstack api key, this change just moves the conflation to between the username (conceptually an easy-to remember, per user, human readable, not -often mutable identifier) and the ec2 access key which may not be thought of the same way. \n\nI would suggest reverting the openstack api to the pre-change 709 functionality, since that works with current data, and proposing a blueprint to refactor the two api credentials for the DIablo release. My suggestion would be that the two sets of credentials are really entirely separate, and that User should have separate ec2api[_access_key, _secret] and openstack[_username, _api_key] fields   ", 
            "date_created": "2011-02-23 22:22:58.410110+00:00", 
            "author": "https://api.launchpad.net/1.0/~mdragon"
        }, 
        {
            "content": "Sure. I would agree the credentials in novarc need to be fixed post r709. Your branch would do that.\n\nOn your second question: My main point is that we want the USERNAME in the rackspace API to match the account id. This is how the Rackspace API behaves and most bindings behave that way (and have examples accordingly).\n\nIf you wanted to swap out the implementation so that 'secret_key' is used instead of 'access_key' that would probably be fine. That way at least both implementation would use secret_key in a similar manner.\n\nI really don't like this code in the openstack API:\n\n   user = self.auth.get_user_from_access_key(username)\n\nSorry I didn't get wind of this sooner. I've been in training for a couple days...\n", 
            "date_created": "2011-02-23 22:25:49.544361+00:00", 
            "author": "https://api.launchpad.net/1.0/~dan-prince"
        }, 
        {
            "content": "To be clear... I still think we should revert 709....", 
            "date_created": "2011-02-23 22:27:41.765562+00:00", 
            "author": "https://api.launchpad.net/1.0/~dan-prince"
        }, 
        {
            "content": "I like what Monsyne has proposed as well. Agree this is bigger than we want to handle in this ticket. I still like reverting.", 
            "date_created": "2011-02-23 22:36:06.189778+00:00", 
            "author": "https://api.launchpad.net/1.0/~dan-prince"
        }, 
        {
            "content": "On Wed, Feb 23, 2011 at 5:22 PM, Monsyne Dragon\n<email address hidden> wrote:\n> I would suggest reverting the openstack api to the pre-change 709\n> functionality, since that works with current data, and proposing a\n> blueprint to refactor the two api credentials for the DIablo release. My\n> suggestion would be that the two sets of credentials are really entirely\n> separate, and that User should have separate ec2api[_access_key,\n> _secret] and openstack[_username, _api_key] fields\n\n+5\n", 
            "date_created": "2011-02-23 22:34:06+00:00", 
            "author": "https://api.launchpad.net/1.0/~jaypipes"
        }, 
        {
            "content": "I'm right there with you for reverting it. A great deal of thought needs to go into this before any patches are applied.", 
            "date_created": "2011-02-23 22:43:13.599764+00:00", 
            "author": "https://api.launchpad.net/1.0/~bcwaldon"
        }, 
        {
            "content": "On the issue in this bug, which is 'can't login':\nI think the right thing to do is to apply the patch which fixes novarc to be compatible with r709.  If someone affected by the bug could confirm that this solves the problem for them, that would be helpful.\n\nOn the issue that 'OpenStack was using questionable credentials pre r709':\nThere's no fundamental reason that the access_key can't be human readable or the account id or whatever additional meaning you want to give it, for both EC2 and OpenStack.  A good reason not to, is to support large-scale clouds where it's likely I can't be 'justin' and therefore have to be 'justin1267' or something equally meaningless to me.  The secret is always going to be hard to remember, so it's not like people will be committing these things to memory anyway, so I don't see the benefit in having the username be easy, but if you want to make it be the account id you can do so.\n\nWe're not changing the meanings of values within a database, we're using the fields that were already present consistently.  It is true that anyone that was using the OpenStack API and had saved their credentials will now need to re-enter them, but better that we do this now than that we do this later when we're just going to affect more users.  The Python binding is pretty new, and I don't even know where the Ruby binding is (link please!), so I can't imagine that many people are affected if we do it now.  Either way, we do have to do it for security reasons.\n\nIf someone wants to propose a blueprint/patch whereby the OpenStack API has a different set of credentials to the EC2 API, feel free.  It doesn't make sense to me, because then users would have to know whether a particular application is written to the OpenStack or the EC2 APIs, but do go ahead and propose it - that's what open source is all about!\n\nTo borrow Jay's terminology:\n\nWhat we have post r709 is:\nec2api[api_key, api_secret] and openstack[api_key, api_secret]\n\nI think changing to this would keep everyone happy and is OK, but we break all the EC2 users:\nec2api[username, api_secret] and openstack[username, api_secret]\n\nIf we revert, we're back to this, which I don't think is acceptable long-term:\nec2api[api_key, api_secret] and openstack[username, api_key]\n\nI also don't think having separate credentials is acceptable - why should the end-user know/care which API an app is using?", 
            "date_created": "2011-02-23 22:53:03.602734+00:00", 
            "author": "https://api.launchpad.net/1.0/~justin-fathomdb"
        }, 
        {
            "content": "This conversation shouldn't be happening in this form, but through a blueprint. I don't want to see the changes from r709 in trunk because they don't seem very well thought out and broke important functionality. I feel everybody would agree that the pre-709 situation is not good long-term, but a series of small patches is not any better. Let's get a discussion started with a larger group.", 
            "date_created": "2011-02-23 23:13:41.687980+00:00", 
            "author": "https://api.launchpad.net/1.0/~bcwaldon"
        }, 
        {
            "content": "+1 on Brian's comment.\n\nI think we should revert 709 ASAP to get trunk working again so we're not blocking anybody.\n\nThen, offline, through the ML or blueprint, we can figure out the best long-term approach. From the looks of this, we'll certainly have an active discussion on this :-)\n\n", 
            "date_created": "2011-02-23 23:33:03.622719+00:00", 
            "author": "https://api.launchpad.net/1.0/~rconradharris"
        }, 
        {
            "content": "I think people might be overthinking this.  The EC2 API and the OpenStack API should use the same credentials - nothing else makes any sense.  r709 does that.  Reverting it is a step backwards.", 
            "date_created": "2011-02-23 23:34:44.928329+00:00", 
            "author": "https://api.launchpad.net/1.0/~justin-fathomdb"
        }, 
        {
            "content": "Getting a consensus from a larger group of people is priority number one. In my opinion, revision 709 does not solve fully the problem. If it did, it wouldn't have broken trunk and we wouldn't be discussing how to fix it right now.\n\nAnd I apologize if I sounded a little harsh in my last comment. I mean no harm :)", 
            "date_created": "2011-02-23 23:52:43.465847+00:00", 
            "author": "https://api.launchpad.net/1.0/~bcwaldon"
        }, 
        {
            "content": "Trunk is not broken.  The behaviour of trunk has changed.  The old behaviour was FUBAR.  I patched it so that the behaviour was more sane and consistent, although some people would like to take those changes further.  People that relied on the old behaviour can't use it any more.  To those people: I am sorry.  At the same time, the OpenStack API is not yet stable nor is it locked down: expect things to break.\n\nI'm fixing a lot of bugs in the OpenStack API, and my understanding is that it is still okay to be non-backwards compatible at this stage.  Once we ship the OpenStack API, then we have to jump through hoops so that we never break anyone, but until we do, we need to stay focused on getting the API right.  If that's incorrect, then please let me know.", 
            "date_created": "2011-02-24 00:13:02.498555+00:00", 
            "author": "https://api.launchpad.net/1.0/~justin-fathomdb"
        }, 
        {
            "content": "Just installed OpenStack from packages on ubuntu lucid 64.\n\nWhen I want to allow SSH to my instances, using the following command:\nroot@cloud1:~ # euca-authorize -P tcp -p 22 default\n\nI get the error\n\nWarning: failed to parse error message from AWS: <unknown>:1:0: syntax error\nEC2ResponseError: 403 Forbidden\n403 Forbidden\n\nAccess was denied to this resource.\n\nIn /var/log/nova/nova-api.log I find\n2011-03-28 11:40:11,958 DEBUG nova.auth.manager [-] Looking up user: '2615507a-f5aa-4e73-8500-de3653e27f5c' from (pid=6982) authenticate /usr/lib/pymodules/python2.6/nova/auth/manager.py:268\n2011-03-28 11:40:11,963 AUDIT nova.api [-] Authentication Failure: No user for access key 2615507a-f5aa-4e73-8500-de3653e27f5c\n2011-03-28 11:40:11,964 INFO nova.api [-] 0.18146s 178.209.34.84 GET /services/Cloud/ None:None 403 [Boto/1.9b (linux2)] text/plain text/html\n\nDatabase looks like\nmysql> select id, access_key, secret_key from users;\n+------+--------------------------------------+--------------------------------------+\n| id   | access_key                           | secret_key                           |\n+------+--------------------------------------+--------------------------------------+\n| nine | 2615507a-f5aa-4e73-8500-de3653e27f5c | afa6cd05-6c...........9-580e65f8e956 |\n+------+--------------------------------------+--------------------------------------+\n\n\nAm I hitting another bug or does this belong to the discussion here? Should I create another Bugreport? I already changed the lines in my .bashrc to reflect http://bazaar.launchpad.net/~justin-fathomdb/nova/bug723897/revision/723 (Not yet in the package, btw?), but did not help.\n", 
            "date_created": "2011-03-28 09:48:50.361640+00:00", 
            "author": "https://api.launchpad.net/1.0/~raffael-yux"
        }, 
        {
            "content": "It looks like your user is a regular user.  You need to give a user then netadmin role in order to do network commands.\n\nEnter both of the following commands:\n\nnova-manage role add nine netadmin\nnova-manage role add nine netadmin <project_id>\n\nWhere project_id is the project user 'nine' is using\n\nVish\n\nOn Mar 28, 2011, at 2:48 AM, Raffael Schmid wrote:\n\n> Just installed OpenStack from packages on ubuntu lucid 64.\n> \n> When I want to allow SSH to my instances, using the following command:\n> root@cloud1:~ # euca-authorize -P tcp -p 22 default\n> \n> I get the error\n> \n> Warning: failed to parse error message from AWS: <unknown>:1:0: syntax error\n> EC2ResponseError: 403 Forbidden\n> 403 Forbidden\n> \n> Access was denied to this resource.\n> \n> In /var/log/nova/nova-api.log I find\n> 2011-03-28 11:40:11,958 DEBUG nova.auth.manager [-] Looking up user: '2615507a-f5aa-4e73-8500-de3653e27f5c' from (pid=6982) authenticate /usr/lib/pymodules/python2.6/nova/auth/manager.py:268\n> 2011-03-28 11:40:11,963 AUDIT nova.api [-] Authentication Failure: No user for access key 2615507a-f5aa-4e73-8500-de3653e27f5c\n> 2011-03-28 11:40:11,964 INFO nova.api [-] 0.18146s 178.209.34.84 GET /services/Cloud/ None:None 403 [Boto/1.9b (linux2)] text/plain text/html\n> \n> Database looks like\n> mysql> select id, access_key, secret_key from users;\n> +------+--------------------------------------+--------------------------------------+\n> | id   | access_key                           | secret_key                           |\n> +------+--------------------------------------+--------------------------------------+\n> | nine | 2615507a-f5aa-4e73-8500-de3653e27f5c | afa6cd05-6c...........9-580e65f8e956 |\n> +------+--------------------------------------+--------------------------------------+\n> \n> \n> Am I hitting another bug or does this belong to the discussion here? Should I create another Bugreport? I already changed the lines in my .bashrc to reflect http://bazaar.launchpad.net/~justin-fathomdb/nova/bug723897/revision/723 (Not yet in the package, btw?), but did not help.\n> \n> \n> ** Changed in: nova\n>       Status: Fix Committed => In Progress\n> \n> -- \n> You received this bug notification because you are a member of Nova Bug\n> Team, which is subscribed to OpenStack Compute (nova).\n> https://bugs.launchpad.net/bugs/723897\n> \n> Title:\n>  'No user for access key admin' when using the Openstack API\n> \n> Status in OpenStack Compute (Nova):\n>  In Progress\n> \n> Bug description:\n>  Using bzr revision 716.\n> \n>  I'm unable to use the openstack-compute Ruby bindings with the latest\n>  codebase. I get the following error in nova-api.log when attempting to\n>  authenticate with the bindings:\n> \n> \n>  2011-02-23 18:46:44,037 DEBUG nova.utils [-] backend <module 'nova.db.sqlalchemy.api' from '/usr/lib/pymodules/python2.6/nova/db/sqlalchemy/api.pyc'> from MainProcess (pid=14442) __get_backend /usr/lib/pymodules/python2.6/nova/utils.py:374\n>  2011-02-23 18:46:44,114 ERROR nova.api.openstack [-] Caught error: No user for access key admin\n>  (nova.api.openstack): TRACE: Traceback (most recent call last):\n>  (nova.api.openstack): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/api/openstack/__init__.py\", line 53, in __call__\n>  (nova.api.openstack): TRACE:     return req.get_response(self.application)\n>  (nova.api.openstack): TRACE:   File \"/usr/lib/pymodules/python2.6/webob/request.py\", line 919, in get_response\n>  (nova.api.openstack): TRACE:     application, catch_exc_info=False)\n>  (nova.api.openstack): TRACE:   File \"/usr/lib/pymodules/python2.6/webob/request.py\", line 887, in call_application\n>  (nova.api.openstack): TRACE:     app_iter = application(self.environ, start_response)\n>  (nova.api.openstack): TRACE:   File \"/usr/lib/pymodules/python2.6/webob/dec.py\", line 147, in __call__\n>  (nova.api.openstack): TRACE:     resp = self.call_func(req, *args, **self.kwargs)\n>  (nova.api.openstack): TRACE:   File \"/usr/lib/pymodules/python2.6/webob/dec.py\", line 208, in call_func\n>  (nova.api.openstack): TRACE:     return self.func(req, *args, **kwargs)\n>  (nova.api.openstack): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/api/openstack/auth.py\", line 51, in __call__\n>  (nova.api.openstack): TRACE:     return self.authenticate(req)\n>  (nova.api.openstack): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/api/openstack/auth.py\", line 81, in authenticate\n>  (nova.api.openstack): TRACE:     token, user = self._authorize_user(username, key, req)\n>  (nova.api.openstack): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/api/openstack/auth.py\", line 123, in _authorize_user\n\n", 
            "date_created": "2011-03-28 16:28:09+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "I did this. Still the same error.\n\nThe only \"special\"-thing i did was editing the networks-table-content to fit to my wanted network layout.", 
            "date_created": "2011-03-28 20:28:26.852219+00:00", 
            "author": "https://api.launchpad.net/1.0/~raffael-yux"
        }, 
        {
            "content": "ok, fixed in the new package.", 
            "date_created": "2011-03-29 13:27:18.942409+00:00", 
            "author": "https://api.launchpad.net/1.0/~raffael-yux"
        }
    ]
}