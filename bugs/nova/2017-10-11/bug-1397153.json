{
    "status": "Fix Released", 
    "last_updated": "2015-04-30 09:20:06.285790+00:00", 
    "description": "As the code in conductor:\n\n        try:\n            live_migrate.execute(context, instance, destination,\n                             block_migration, disk_over_commit)\n        except (exception.NoValidHost,\n                exception.ComputeServiceUnavailable,\n                exception.InvalidHypervisorType,\n                ....) as ex:\n            with excutils.save_and_reraise_exception():\n                # TODO(johngarbutt) - eventually need instance actions here\n                request_spec = {'instance_properties': {\n                    'uuid': instance['uuid'], },\n                }\n                scheduler_utils.set_vm_state_and_notify(context,\n                        'compute_task', 'migrate_server',\n                        dict(vm_state=instance['vm_state'],\n                             task_state=None,\n                             expected_task_state=task_states.MIGRATING,),\n                        ex, request_spec, self.db)\n        except Exception as ex:\n            LOG.error(_LE('Migration of instance %(instance_id)s to host'\n                          ' %(dest)s unexpectedly failed.'),\n                      {'instance_id': instance['uuid'], 'dest': destination},\n                      exc_info=True)\n            raise exception.MigrationError(reason=six.text_type(ex))\n\n\nWhen there is any unexpected exception raised from 'live_migrate.execute', the code will raise MigrationError, then the instance stuck at vm_state:active task_state: migrating and return 400 to user. This is confuse for user.", 
    "tags": [], 
    "importance": "Undecided", 
    "heat": 14, 
    "link": "https://bugs.launchpad.net/nova/+bug/1397153", 
    "owner": "https://api.launchpad.net/1.0/~xuhj", 
    "id": 1397153, 
    "index": 5295, 
    "created": "2014-11-28 01:47:44.638182+00:00", 
    "title": "instance stuck at migrating state when some unexpected error happened", 
    "comments": [
        {
            "content": "As the code in conductor:\n\n        try:\n            live_migrate.execute(context, instance, destination,\n                             block_migration, disk_over_commit)\n        except (exception.NoValidHost,\n                exception.ComputeServiceUnavailable,\n                exception.InvalidHypervisorType,\n                ....) as ex:\n            with excutils.save_and_reraise_exception():\n                # TODO(johngarbutt) - eventually need instance actions here\n                request_spec = {'instance_properties': {\n                    'uuid': instance['uuid'], },\n                }\n                scheduler_utils.set_vm_state_and_notify(context,\n                        'compute_task', 'migrate_server',\n                        dict(vm_state=instance['vm_state'],\n                             task_state=None,\n                             expected_task_state=task_states.MIGRATING,),\n                        ex, request_spec, self.db)\n        except Exception as ex:\n            LOG.error(_LE('Migration of instance %(instance_id)s to host'\n                          ' %(dest)s unexpectedly failed.'),\n                      {'instance_id': instance['uuid'], 'dest': destination},\n                      exc_info=True)\n            raise exception.MigrationError(reason=six.text_type(ex))\n\n\nWhen there is any unexpected exception raised from 'live_migrate.execute', the code will raise MigrationError, then the instance stuck at vm_state:active task_state: migrating and return 400 to user. This is confuse for user.", 
            "date_created": "2014-11-28 01:47:44.638182+00:00", 
            "author": "https://api.launchpad.net/1.0/~xuhj"
        }, 
        {
            "content": "There is to way to fix this.\n\nOne is remove the task_state, and keep the vm_state as active, then user can continue use their vm(anyway the code in conductor won't break the vm).\n\nThe second one is set the vm_state to error, to let the operator to resolve this problem. This way can prevent the code in conductor may break the vm and we forget to set vm_state to error in the future.\n\nAnd for nova REST API should returns 500, not 400. We should fix this for v2 api. ", 
            "date_created": "2014-11-28 01:50:57.483699+00:00", 
            "author": "https://api.launchpad.net/1.0/~xuhj"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/133268\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=40a37269c52977a718e91012cfd4580b2e31ec65\nSubmitter: Jenkins\nBranch:    master\n\ncommit 40a37269c52977a718e91012cfd4580b2e31ec65\nAuthor: He Jie Xu <email address hidden>\nDate:   Fri Nov 7 23:29:18 2014 +0800\n\n    Set vm state error when raising unexpected exception in live migrate\n    \n    The instance stuck at migrating task_state when unexpected exception.\n    This is confuse for user, this patch set the vm_state to error.\n    \n    Change-Id: Ib1b97452bc5e777c66c4d368f71156dbe1e116b7\n    Partial-Bug: 1397153\n", 
            "date_created": "2014-12-10 14:46:45.797922+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/133269\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=e96758514e990cea0366a106aadf22851df7d2f0\nSubmitter: Jenkins\nBranch:    master\n\ncommit e96758514e990cea0366a106aadf22851df7d2f0\nAuthor: He Jie Xu <email address hidden>\nDate:   Fri Nov 7 23:34:28 2014 +0800\n\n    Return 500 when unexpected exception raising when live migrate v2\n    \n    When unexpected exception raising when living migration in v2 API,\n    nova return wrong status code 400, it should 500.\n    \n    Change-Id: I7fb5726ae9e7d3a54851b975a20e84f8da091dd9\n    Closes-Bug: 1397153\n", 
            "date_created": "2015-01-13 14:08:14.826485+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}