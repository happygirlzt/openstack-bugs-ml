{
    "status": "Fix Released", 
    "last_updated": "2016-03-03 16:18:47.529374+00:00", 
    "description": "http://status.openstack.org//openstack-health/#/job/gate-nova-python27?groupKey=project&resolutionKey=hour&duration=P1M shows that the nova.tests.unit.compute.test_compute.ComputeTestCase.test_run_instance_queries_macs unit test is taking around 1 minute to run.  It looks like most things should be stubbed out properly in that test so I'm not sure what's causing the holdup.", 
    "tags": [
        "compute", 
        "testing"
    ], 
    "importance": "Medium", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1547279", 
    "owner": "https://api.launchpad.net/1.0/~mriedem", 
    "id": 1547279, 
    "index": 4449, 
    "created": "2016-02-19 01:01:25.145158+00:00", 
    "title": "nova.tests.unit.compute.test_compute.ComputeTestCase.test_run_instance_queries_macs takes an average of 1 minute to run", 
    "comments": [
        {
            "content": "http://status.openstack.org//openstack-health/#/job/gate-nova-python27?groupKey=project&resolutionKey=hour&duration=P1M shows that the nova.tests.unit.compute.test_compute.ComputeTestCase.test_run_instance_queries_macs unit test is taking around 1 minute to run.  It looks like most things should be stubbed out properly in that test so I'm not sure what's causing the holdup.", 
            "date_created": "2016-02-19 01:01:25.145158+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Interestingly, it looks like it should actually fail:\n\nhttp://logs.openstack.org/81/270981/3/check/gate-nova-python27/ab04c91/console.html.gz#_2016-02-11_23_10_18_288\n\n2016-02-11 23:10:18.288 | {1} nova.tests.unit.compute.test_compute.ComputeTestCase.test_run_instance_queries_macs [61.423565s] ... ok\n2016-02-11 23:10:18.288 | \n2016-02-11 23:10:18.288 | Captured stderr:\n2016-02-11 23:10:18.288 | ~~~~~~~~~~~~~~~~\n2016-02-11 23:10:18.288 |     Traceback (most recent call last):\n2016-02-11 23:10:18.288 |       File \"/home/jenkins/workspace/gate-nova-python27/.tox/py27/local/lib/python2.7/site-packages/eventlet/hubs/hub.py\", line 457, in fire_timers\n2016-02-11 23:10:18.288 |         timer()\n2016-02-11 23:10:18.288 |       File \"/home/jenkins/workspace/gate-nova-python27/.tox/py27/local/lib/python2.7/site-packages/eventlet/hubs/timer.py\", line 58, in __call__\n2016-02-11 23:10:18.288 |         cb(*args, **kw)\n2016-02-11 23:10:18.288 |       File \"/home/jenkins/workspace/gate-nova-python27/.tox/py27/local/lib/python2.7/site-packages/eventlet/greenthread.py\", line 214, in main\n2016-02-11 23:10:18.289 |         result = function(*args, **kwargs)\n2016-02-11 23:10:18.289 |       File \"nova/utils.py\", line 1160, in context_wrapper\n2016-02-11 23:10:18.289 |         return func(*args, **kwargs)\n2016-02-11 23:10:18.289 |       File \"nova/compute/manager.py\", line 1581, in _allocate_network_async\n2016-02-11 23:10:18.289 |         six.reraise(*exc_info)\n2016-02-11 23:10:18.289 |       File \"nova/compute/manager.py\", line 1564, in _allocate_network_async\n2016-02-11 23:10:18.289 |         bind_host_id=bind_host_id)\n2016-02-11 23:10:18.289 |       File \"/home/jenkins/workspace/gate-nova-python27/.tox/py27/local/lib/python2.7/site-packages/mox3/mox.py\", line 814, in __call__\n2016-02-11 23:10:18.289 |         return mock_method(*params, **named_params)\n2016-02-11 23:10:18.289 |       File \"/home/jenkins/workspace/gate-nova-python27/.tox/py27/local/lib/python2.7/site-packages/mox3/mox.py\", line 1113, in __call__\n2016-02-11 23:10:18.289 |         expected_method = self._VerifyMethodCall()\n2016-02-11 23:10:18.290 |       File \"/home/jenkins/workspace/gate-nova-python27/.tox/py27/local/lib/python2.7/site-packages/mox3/mox.py\", line 1180, in _VerifyMethodCall\n2016-02-11 23:10:18.290 |         raise UnexpectedMethodCallError(self, expected)\n2016-02-11 23:10:18.290 |     UnexpectedMethodCallError: Unexpected method call.  unexpected:-  expected:+\n2016-02-11 23:10:18.290 |     - instancemethod.__call__(<nova.context.RequestContext object at 0x7f41c53201d0>, Instance(access_ip_v4=None,access_ip_v6=None,architecture='x86_64',auto_disk_config=False,availability_zone=None,cell_name=None,cleaned=False,config_drive=None,created_at=2016-02-11T23:09:15Z,default_ephemeral_device=None,default_swap_device=None,deleted=False,deleted_at=None,disable_terminate=False,display_description=None,display_name=None,ec2_ids=<?>,ephemeral_gb=0,ephemeral_key_uuid=None,fault=<?>,flavor=Flavor(4),host='fake-mini',hostname=None,id=1,image_ref='e2d417f4-393d-42d9-b291-27ef06760049',info_cache=<?>,instance_type_id=4,kernel_id=None,key_data=None,key_name=None,launch_index=None,launched_at=2016-02-11T23:09:15Z,launched_on='fake-mini',locked=False,locked_by=None,memory_mb=0,metadata={},migration_context=<?>,new_flavor=None,node='fakenode1',numa_topology=None,old_flavor=None,os_type='Linux',pci_devices=<?>,pci_requests=InstancePCIRequests,power_state=1,progress=None,project_id='fake',ramdisk_id=None,reservation_id='r-fakeres',root_device_name=None,root_gb=0,security_groups=SecurityGroupList,services=<?>,shutdown_terminate=False,system_metadata={},tags=<?>,task_state='block_device_mapping',terminated_at=None,updated_at=2016-02-11T23:09:15Z,user_data=None,user_id='fake',uuid=0abce861-50e3-42bd-b9bc-254bb8d4a4b3,vcpu_model=None,vcpus=0,vm_mode=None,vm_state='building'), bind_host_id=u'fake-mini', dhcp_options=None, macs=set(['01:23:45:67:89:ab']), requested_networks=None, security_groups=[], vpn=False) -> None\n2016-02-11 23:10:18.290 |     + instancemethod.__call__(<IgnoreArg>, <IgnoreArg>, dhcp_options=None, macs=set(['01:23:45:67:89:ab']), requested_networks=None, security_groups=[], vpn=False) -> [VIF({'profile': None, 'vnic_type': 'normal', 'qbh_params': None, 'meta': {'rxtx_cap': 30}, 'type': 'bridge', 'id': 'bf851b14-44f4-41b8-9f89-68b2cf70dc4f', 'qbg_params': None, 'ovs_interfaceid': None, 'network': Network({'id': '026643e3-6ab2-47aa-9155-c4923bb93087', 'meta': {'tenant_id': '6c96a5b6-1803-4e51-8287-5b5b44238e86'}, 'label': u'test1', 'bridge': u'fake_br1', 'subnets': [Subnet({'gateway': IP({'type': 'gateway', 'meta': {}, 'address': '192.168.1.1', 'version': 4}), 'meta': {}, 'cidr': '192.168.1.0/24', 'dns': [IP({'type': 'dns', 'meta': {}, 'address': '192.168.1.3', 'version': 4}), IP({'type': 'dns', 'meta': {}, 'address': '192.168.1.4', 'version': 4})], 'routes': [], 'version': 4, 'ips': [FixedIP({'type': 'fixed', 'floating_ips': [], 'meta': {}, 'address': '192.168.1.100', 'version': 4})]}), Subnet({'gateway': IP({'type': 'gateway', 'meta': {}, 'address': '2001:db8:0:1::1', 'version': 6}), 'meta': {}, 'cidr': '2001:db8:0:1::/64', 'dns': [], 'routes': [], 'version': 6, 'ips': [FixedIP({'type': 'fixed', 'floating_ips': [], 'meta': {}, 'address': '2001:db8:0:1:dcad:beff:feef:1', 'version': 6})]})]}), 'address': u'DE:AD:BE:EF:00:01', 'details': {}, 'preserve_on_delete': False, 'active': False, 'devname': None})]", 
            "date_created": "2016-02-19 01:26:55.770177+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "The difference is the bind_host_id stuff added here:\n\nhttps://review.openstack.org/#/c/194413/\n\nThat isn't handled in a stub of network_api.allocate_for_instance somewhere...", 
            "date_created": "2016-02-19 01:37:53.445202+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "So I'm guessing the stub is actually on some thread, and because it fails there, it's not actually failing the test. sdague said the monkeypatch fixture did used to have some issue with how it imported things out and failed to stub properly, so maybe that's an issue here.  We should talk to lifeless.", 
            "date_created": "2016-02-19 01:44:00.499058+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "One thing I've noticed is that with the SpawnIsSynchronousFixture we only stub out nova.utils.spawn_n, we don't stub out nova.utils.spawn which is what is used with the NetworkInfoAsyncWrapper.  When I stub that out, the UnexpectedMethodCallErrors go away, but I think they are still happening, as in I changed the stub in the test to raise an exception and the test still passes.", 
            "date_created": "2016-02-19 02:22:59.738982+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "I agree that the UMCE's are being raised in a thread, which is why its not failing the test. We should probably make tests check that no threads have raised errors to prevent htings like this leaking.\n\nAs far as monkeypatch and importing - I'm not aware of a specific issue?\n\nWith them not showing up, it means they are not being logged. Perhaps your new stub's exception just isn't being logged? Can you print something to stderr from your replacement method to verify that it is in fact being called?\n", 
            "date_created": "2016-02-19 02:38:35.095853+00:00", 
            "author": "https://api.launchpad.net/1.0/~lifeless"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/282148", 
            "date_created": "2016-02-19 03:15:46.853500+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/282148\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=519f4560a845a998333228c23d7b7866b9a67a3b\nSubmitter: Jenkins\nBranch:    master\n\ncommit 519f4560a845a998333228c23d7b7866b9a67a3b\nAuthor: Matt Riedemann <email address hidden>\nDate:   Thu Feb 18 19:05:30 2016 -0800\n\n    Fixed leaked UnexpectedMethodCallErrors in test_compute\n    \n    Both of these tests were actually leaking UnexpectedMethodCallErrors\n    from mox due to the allocate_for_instance call being stubbed out\n    but the kwargs were in the wrong order.\n    \n    Apparently something with mox, the stub_out fixture, and\n    NetworkInfoAsyncWrapper using nova.utils.spawn cause the stubs\n    to be on a greenthread so when mox raises the error, it doesn't\n    fail the actual test, it just gets logged to stderr by eventlet.\n    \n    In the case of the test_run_instance_queries_macs test, this was\n    actually causing the test to run over a minute (presumably because\n    it would eventually hit some timeout in the thread, like an rpc\n    timeout maybe?). With this fix it drops that down to around 1 second\n    to run the test.\n    \n    We really need to figure out what's causing the stub to go on the\n    thread so that the test doesn't get the UnexpectedMethodCallError\n    and fail but that could come in a later change if someone can\n    figure it out.\n    \n    Change-Id: Ibc5c881e17310304eb63f5df6360f8cb1657b807\n    Closes-Bug: #1547279\n", 
            "date_created": "2016-02-22 18:09:37.313704+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/283178\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=aa232f90f5f8ac1d4604064e9da635d6978afeeb\nSubmitter: Jenkins\nBranch:    master\n\ncommit aa232f90f5f8ac1d4604064e9da635d6978afeeb\nAuthor: Andrew Laski <email address hidden>\nDate:   Mon Feb 22 12:19:10 2016 -0500\n\n    Fix networking exceptions in ComputeTestCase\n    \n    test_run_instance_queries_macs was printing an error message to stdout\n    for an UnexpectedMethodCallError but was not actually failing the test.\n    This is due to the exception handling in build_and_run_instance which\n    was converting the UnexpectedMethodCallError to a BuildAbortException\n    and then swallowing that before the method returned. In order to\n    accurately check for this condition the test needs to call a method\n    closer to where the tested logic occurs, which does not convert or\n    swallow exceptions.\n    \n    test_instance_set_to_error_on_uncaught_exception had a similar error\n    except that it was not important how the mocked method was called. The\n    test was switched from mox to mock and its intent made more clear.\n    \n    Asynchronous network allocation means that a few errors/exceptions were\n    being covered up by occuring in a greenthread and not making it back to\n    the test method. To remedy this the SpawnIsSynchronousFixture was\n    updated to also patch nova.utils.spawn which is what the network\n    allocation is using. The errors exposed by this were fixed. In two cases\n    it was a matter of setting/checking the proper compute host. A number of\n    others were due to the NetworkInfo model wait() method not emulating the\n    Greenthread.wait() api. With utils.spawn() returning a NetworkInfo\n    rather than a Greenthread the wait() method needed updating to return\n    the NetworkInfo object again.\n    \n    Related-Bug: #1547279\n    Change-Id: Ic9891380302e5880c536e6df22f1fd3e2496ec96\n", 
            "date_created": "2016-02-24 03:07:46.257086+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/nova 13.0.0.0b3 development milestone.", 
            "date_created": "2016-03-03 16:18:46.961840+00:00", 
            "author": "https://api.launchpad.net/1.0/~doug-hellmann"
        }
    ]
}