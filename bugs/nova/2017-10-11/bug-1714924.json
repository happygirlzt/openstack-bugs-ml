{
    "status": "Confirmed", 
    "last_updated": "2017-09-05 19:15:22.697377+00:00", 
    "description": "During the investigation of bug #1713783 (After failed evacuation the recovered source compute tries to delete the instance) we noticed that nova tries to PUT an empty '{}' allocations for an instance and that fails on the placement side. As bug #1713783 now seems to be solved by keeping the existing behavior, i.e. deleting the instance after failed evacuation. We have to fix nova not to try to PUT the allocation but actually DELETE the allocation of the instance in placement.\n\nThe problem can be reproduced with the regression test proposed in https://review.openstack.org/#/c/498482/ which produce the following stack trace:\n\n    2017-09-04 11:33:24,989 INFO [nova.service] Starting compute node (version 16.0.1)\n    2017-09-04 11:33:25,005 INFO [nova.compute.manager] Deleting instance as it has been evacuated from this host\n    2017-09-04 11:33:25,060 INFO [nova.api.openstack.placement.requestlog] 127.0.0.1 \"GET /placement/allocations/4d056cc0-b227-4f79-baab-f3e3cd1a6d00\" status: 200 len: 134 microversion: 1.0\n    2017-09-04 11:33:25,066 INFO [nova.api.openstack.placement.requestlog] 127.0.0.1 \"PUT /placement/allocations/4d056cc0-b227-4f79-baab-f3e3cd1a6d00\" status: 400 len: 651 microversion: 1.10\n    2017-09-04 11:33:25,067 WARNING [nova.scheduler.client.report] Failed to save allocation for 4d056cc0-b227-4f79-baab-f3e3cd1a6d00. Got HTTP 400: <html>\n     <head>\n      <title>400 Bad Request</title>\n     </head>\n     <body>\n      <h1>400 Bad Request</h1>\n      The server could not comply with the request since it is either malformed or otherwise incorrect.<br /><br />\n    JSON does not validate: {} does not have enough properties\n    \n    Failed validating 'minProperties' in schema['properties']['allocations']['items']['properties']['resources']:\n        {'additionalProperties': False,\n         'minProperties': 1,\n         'patternProperties': {'^[0-9A-Z_]+$': {'minimum': 1,\n                                                'type': 'integer'}},\n         'type': 'object'}\n    \n    On instance['allocations'][0]['resources']:\n        {}\n    \n    \n     </body>\n    </html>\n    2017-09-04 11:33:25,067 ERROR [nova.compute.resource_tracker] Failed to clean allocation of evacuated instance on the source node  bc78aa7f-07df-4e06-bb77-71aec7d92e5c", 
    "tags": [
        "evacuate", 
        "placement"
    ], 
    "importance": "Medium", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1714924", 
    "owner": "None", 
    "id": 1714924, 
    "index": 4895, 
    "created": "2017-09-04 10:00:54.936904+00:00", 
    "title": "placement api fails when nova tries to delete resource allocation after failed evacuation", 
    "comments": [
        {
            "content": "During the investigation of bug #1713783 (After failed evacuation the recovered source compute tries to delete the instance) we noticed that nova tries to PUT an empty '{}' allocations for an instance and that fails on the placement side. As bug #1713783 now seems to be solved by keeping the existing behavior, i.e. deleting the instance after failed evacuation. We have to fix nova not to try to PUT the allocation but actually DELETE the allocation of the instance in placement.\n\nThe problem can be reproduced with the regression test proposed in https://review.openstack.org/#/c/498482/ which produce the following stack trace:\n\n    2017-09-04 11:33:24,989 INFO [nova.service] Starting compute node (version 16.0.1)\n    2017-09-04 11:33:25,005 INFO [nova.compute.manager] Deleting instance as it has been evacuated from this host\n    2017-09-04 11:33:25,060 INFO [nova.api.openstack.placement.requestlog] 127.0.0.1 \"GET /placement/allocations/4d056cc0-b227-4f79-baab-f3e3cd1a6d00\" status: 200 len: 134 microversion: 1.0\n    2017-09-04 11:33:25,066 INFO [nova.api.openstack.placement.requestlog] 127.0.0.1 \"PUT /placement/allocations/4d056cc0-b227-4f79-baab-f3e3cd1a6d00\" status: 400 len: 651 microversion: 1.10\n    2017-09-04 11:33:25,067 WARNING [nova.scheduler.client.report] Failed to save allocation for 4d056cc0-b227-4f79-baab-f3e3cd1a6d00. Got HTTP 400: <html>\n     <head>\n      <title>400 Bad Request</title>\n     </head>\n     <body>\n      <h1>400 Bad Request</h1>\n      The server could not comply with the request since it is either malformed or otherwise incorrect.<br /><br />\n    JSON does not validate: {} does not have enough properties\n    \n    Failed validating 'minProperties' in schema['properties']['allocations']['items']['properties']['resources']:\n        {'additionalProperties': False,\n         'minProperties': 1,\n         'patternProperties': {'^[0-9A-Z_]+$': {'minimum': 1,\n                                                'type': 'integer'}},\n         'type': 'object'}\n    \n    On instance['allocations'][0]['resources']:\n        {}\n    \n    \n     </body>\n    </html>\n    2017-09-04 11:33:25,067 ERROR [nova.compute.resource_tracker] Failed to clean allocation of evacuated instance on the source node  bc78aa7f-07df-4e06-bb77-71aec7d92e5c", 
            "date_created": "2017-09-04 10:00:54.936904+00:00", 
            "author": "https://api.launchpad.net/1.0/~balazs-gibizer"
        }, 
        {
            "content": "Similar stack trace visible on  many tempest logs with live migration:\nhttp://logstash.openstack.org/#dashboard/file/logstash.json?query=message%3A%5C%22Failed%20to%20clean%20allocation%20of%5C%22%20AND%20tags%3A%5C%22screen-n-cpu.txt%5C%22\n\nFor example:\nhttp://logs.openstack.org/51/489451/21/check/gate-grenade-dsvm-neutron-multinode-live-migration-nv/4959953/logs/screen-n-cpu.txt#_Sep_05_02_53_35_188890", 
            "date_created": "2017-09-05 09:09:01.139893+00:00", 
            "author": "https://api.launchpad.net/1.0/~balazs-gibizer"
        }, 
        {
            "content": "Yeah this used to cause a 500 in the placement API but that was changed to a 400:\n\nhttps://review.openstack.org/#/c/499270/\n\nGood spot on where we're doing this incorrectly though during evacuation.\n", 
            "date_created": "2017-09-05 19:15:21.823222+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }
    ]
}