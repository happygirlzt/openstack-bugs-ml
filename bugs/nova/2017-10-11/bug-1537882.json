{
    "status": "Fix Released", 
    "last_updated": "2016-09-02 01:16:36.698593+00:00", 
    "description": "Because I can tell the future, the test_obj_make_compatible() method will start failing the next time we bump the version of ServiceStatusPayload.\n\nIt looks like in https://github.com/openstack/nova/blob/master/nova/tests/unit/objects/test_objects.py#L1252-L1268 we run compatibility checks on all previous versions to see if we're compatible with them. It does not test current->current conversion though, so in the case of ServiceStatusPayload, which is currently at 1.0, that for loop is never run.\n\nI caught this in my change (https://review.openstack.org/#/c/259112/2/nova/tests/unit/objects/test_objects.py) because ovo's compatibility checker includes checking from 1.0 to 1.0 (https://github.com/openstack/oslo.versionedobjects/blob/master/oslo_versionedobjects/fixture.py#L302-L310), and I'm trying to change nova's tests to use the o.vo fixture. In my tests, ServiceStatusPayload is causing:\n\nTraceback (most recent call last):\n  File \"nova/tests/unit/objects/test_objects.py\", line 1259, in test_obj_make_compatible\n    checker.test_compatibility_routines(use_manifest=True)\n  File \"/opt/stack/nova/.tox/py27/local/lib/python2.7/site-packages/oslo_versionedobjects/fixture.py\", line 325, in test_compatibility_routines\n    self._test_object_compatibility(obj_class, manifest=manifest)\n  File \"/opt/stack/nova/.tox/py27/local/lib/python2.7/site-packages/oslo_versionedobjects/fixture.py\", line 309, in _test_object_compatibility\n    obj_class().obj_to_primitive(**kwargs)\nTypeError: __init__() takes exactly 2 arguments (1 given)\n\nSo we need to somehow inject args to __init__() when we need to...", 
    "tags": [
        "testing"
    ], 
    "importance": "Undecided", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1537882", 
    "owner": "https://api.launchpad.net/1.0/~rlrossit", 
    "id": 1537882, 
    "index": 5989, 
    "created": "2016-01-25 19:41:06.226644+00:00", 
    "title": "test_obj_make_compatible() does not call __init__ properly on ServiceStatusPayload objects", 
    "comments": [
        {
            "content": "Because I can tell the future, the test_obj_make_compatible() method will start failing the next time we bump the version of ServiceStatusPayload.\n\nIt looks like in https://github.com/openstack/nova/blob/master/nova/tests/unit/objects/test_objects.py#L1252-L1268 we run compatibility checks on all previous versions to see if we're compatible with them. It does not test current->current conversion though, so in the case of ServiceStatusPayload, which is currently at 1.0, that for loop is never run.\n\nI caught this in my change (https://review.openstack.org/#/c/259112/2/nova/tests/unit/objects/test_objects.py) because ovo's compatibility checker includes checking from 1.0 to 1.0 (https://github.com/openstack/oslo.versionedobjects/blob/master/oslo_versionedobjects/fixture.py#L302-L310), and I'm trying to change nova's tests to use the o.vo fixture. In my tests, ServiceStatusPayload is causing:\n\nTraceback (most recent call last):\n  File \"nova/tests/unit/objects/test_objects.py\", line 1259, in test_obj_make_compatible\n    checker.test_compatibility_routines(use_manifest=True)\n  File \"/opt/stack/nova/.tox/py27/local/lib/python2.7/site-packages/oslo_versionedobjects/fixture.py\", line 325, in test_compatibility_routines\n    self._test_object_compatibility(obj_class, manifest=manifest)\n  File \"/opt/stack/nova/.tox/py27/local/lib/python2.7/site-packages/oslo_versionedobjects/fixture.py\", line 309, in _test_object_compatibility\n    obj_class().obj_to_primitive(**kwargs)\nTypeError: __init__() takes exactly 2 arguments (1 given)\n\nSo we need to somehow inject args to __init__() when we need to...", 
            "date_created": "2016-01-25 19:41:06.226644+00:00", 
            "author": "https://api.launchpad.net/1.0/~rlrossit"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/272299", 
            "date_created": "2016-01-25 22:31:31.663562+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/272299\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=e36bc6ee352600d77f4b2cbf352bf2a09933c86d\nSubmitter: Jenkins\nBranch:    master\n\ncommit e36bc6ee352600d77f4b2cbf352bf2a09933c86d\nAuthor: Ryan Rossiter <email address hidden>\nDate:   Mon Jan 25 22:01:27 2016 +0000\n\n    Use ovo in test_obj_make_compatible()\n    \n    o.vo has a fixture for testing compatibility routines. This changes the\n    nova unit tests to use that compatibility testing on all objects. In the\n    original nova test, the versions tested were from 1.0 to 1.(x-1), where\n    1.x is the current version. o.vo's fixture tests from 1.0 to 1.x, which\n    should be a no-op, but is also a good thing to test (if we can't convert\n    1.x to 1.x, that's a bad thing).\n    \n    o.vo also had an enhancement where it passed args and kwargs to __init__\n    in the different objects, which was a bug in nova, but using that\n    fixture allows us to also close the nova bug. This change in o.vo was\n    I62646b99adca47a9c9fe0f466f7a23ac8fa4553e.\n    \n    Change-Id: Ie127f55f2e5bcd383796ff51253cf1091be16c98\n    Closes-Bug: #1537882\n", 
            "date_created": "2016-08-03 10:43:25.301061+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/nova 14.0.0.0b3 development milestone.", 
            "date_created": "2016-09-02 01:16:35.638991+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}