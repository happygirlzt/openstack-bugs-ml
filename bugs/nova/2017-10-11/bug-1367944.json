{
    "status": "Invalid", 
    "last_updated": "2015-09-25 13:48:47.298049+00:00", 
    "description": "I have noticed that when a tenant usage information API is invoked for a particular tenant owning large number of instances (both active & terminated), then I see a sudden increase in nova-api process memory consumption from 500 MB up to 2.3 GB.\n\nIt is due to a SQL retrieving large number of records of instance_system_metadata for instances using where in clause.\n\nAt the time of getting tenant usage information, I had approx. 120,000 instances in the db for a particular tenant (few were active and remaining terminated)\n\nAlso in this plugin, it unnecessarily  gets following information of the instances from the db further degrading the performance of the API.\n1. metadata\n2. info_cache\n3. security_groups", 
    "tags": [
        "api"
    ], 
    "importance": "Low", 
    "heat": 20, 
    "link": "https://bugs.launchpad.net/nova/+bug/1367944", 
    "owner": "https://api.launchpad.net/1.0/~ankitagrawal", 
    "id": 1367944, 
    "index": 103, 
    "created": "2014-09-10 21:43:09.732103+00:00", 
    "title": "tenant usage information api is consuming lot of memory", 
    "comments": [
        {
            "content": "I have noticed that when a tenant usage information API is invoked for a particular tenant owning large number of instances (both active & terminated), then I see a sudden increase in nova-api process memory consumption from 500 MB up to 2.3 GB.\n\nIt is due to a SQL retrieving large number of records of instance_system_metadata for instances using where in clause.\n\nAt the time of getting tenant usage information, I had approx. 120,000 instances in the db for a particular tenant (few were active and remaining terminated)\n\nAlso in this plugin, it unnecessarily  gets following information of the instances from the db further degrading the performance of the API.\n1. metadata\n2. info_cache\n3. security_groups", 
            "date_created": "2014-09-10 21:43:09.732103+00:00", 
            "author": "https://api.launchpad.net/1.0/~tpatil"
        }, 
        {
            "content": "Hi,\n\nI have tried two different approaches to reduce the memory process consumption.\n\n1. Create a JOIN query for instance and instance_system_metadata table (Patch 1).\n\nBefore making above changes the \"usage\" api was taking approx 21.132 seconds to retrieve usage information of 8758 instances,\nwhereas after making the changes it's taking approx 27.701 seconds to retrieve usage information for same number of instances.\n\nPlease refer work sheet \"After Patch 1\" from attached \"query_performance_results.xlsx\" for detail evaluation.\n\n2. Remove instance_system_metadata from the query and fetch flavor details for instance using instance_type_id (Patch 2).\n\nAfter applying above changes it's taking approx 242.442 seconds to retrieve usage information for same number of instances because of lazy loading.\n\nPlease refer work sheet \"After Patch 2\" from attached \"query_performance_results.xlsx\"  for detail evaluation.\n\nSo based on this analysis, IMO current behavior is enough efficient as compare to above two approaches.\n\nIf anyone has better approach/solution then please suggest.", 
            "date_created": "2014-09-19 10:31:12.617471+00:00", 
            "author": "https://api.launchpad.net/1.0/~abhishek-kekane"
        }, 
        {
            "content": "", 
            "date_created": "2014-09-19 10:31:54.060973+00:00", 
            "author": "https://api.launchpad.net/1.0/~abhishek-kekane"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/159062", 
            "date_created": "2015-02-25 10:20:41.894212+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Change abandoned by Michael Still (<email address hidden>) on branch: master\nReview: https://review.openstack.org/159062\nReason: This patch as been stalled for a very long time, so I am going to abandon it to keep the review queue sane. Please restore the change when its ready for review.", 
            "date_created": "2015-08-12 05:40:44.022861+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}