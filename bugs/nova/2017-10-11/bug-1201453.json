{
    "status": "Fix Released", 
    "last_updated": "2013-10-17 12:05:07.831331+00:00", 
    "description": "In SQLAlchemy 0.8.x \"Referring to a non-existent column in an insert() or update() construct will raise an error instead of a warning\".\n\nThe code in migration 186 downgrade:\n\n        blanks = [\n            dict(zip(('id', 'source', 'format'), row))\n            for row in bdm_q.execute().fetchall()\n        ]\n\n        swap = [dev for dev in blanks if dev['format'] == 'swap']\n        assert len(swap) < 2\n        ephemerals = [dev for dev in blanks if dev not in swap]\n\n        for index, eph in enumerate(ephemerals):\n            eph['virtual_name'] = 'ephemeral' + str(index)\n\n        if swap:\n            swap[0]['virtual_name'] = 'swap'\n\n        for bdm in swap + ephemerals:\n            bdm_table.update().where(\n                bdm_table.c.id == bdm['id']\n            ).values(**bdm).execute() \n\n\nrefers to non-existing columns \"source\" and \"format\"", 
    "tags": [
        "db"
    ], 
    "importance": "Undecided", 
    "heat": 14, 
    "link": "https://bugs.launchpad.net/nova/+bug/1201453", 
    "owner": "https://api.launchpad.net/1.0/~ndipanov", 
    "id": 1201453, 
    "index": 3843, 
    "created": "2013-07-15 14:29:24.812600+00:00", 
    "title": "Downgrade of migration 186 is broken when using SQLAlchemy 0.8.x", 
    "comments": [
        {
            "content": "In SQLAlchemy 0.8.x \"Referring to a non-existent column in an insert() or update() construct will raise an error instead of a warning\".\n\nThe code in migration 186 downgrade:\n\n        blanks = [\n            dict(zip(('id', 'source', 'format'), row))\n            for row in bdm_q.execute().fetchall()\n        ]\n\n        swap = [dev for dev in blanks if dev['format'] == 'swap']\n        assert len(swap) < 2\n        ephemerals = [dev for dev in blanks if dev not in swap]\n\n        for index, eph in enumerate(ephemerals):\n            eph['virtual_name'] = 'ephemeral' + str(index)\n\n        if swap:\n            swap[0]['virtual_name'] = 'swap'\n\n        for bdm in swap + ephemerals:\n            bdm_table.update().where(\n                bdm_table.c.id == bdm['id']\n            ).values(**bdm).execute() \n\n\nrefers to non-existing columns \"source\" and \"format\"", 
            "date_created": "2013-07-15 14:29:24.812600+00:00", 
            "author": "https://api.launchpad.net/1.0/~rpodolyaka"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/37256", 
            "date_created": "2013-07-16 14:30:39.142912+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/37256\nCommitted: http://github.com/openstack/nova/commit/f48f1947df5d209686c4850aa911ed693d029ed8\nSubmitter: Jenkins\nBranch:    master\n\ncommit f48f1947df5d209686c4850aa911ed693d029ed8\nAuthor: Nikola Dipanov <email address hidden>\nDate:   Tue Jul 16 16:33:20 2013 +0200\n\n    Fix mig 186 downgrade when using sqlalchemy >= 0.8\n    \n    This patch fixes an issue that cause tests to break when using\n    SQLAlchemy 0.8 and newer. The migration was using non-existing column\n    names in an update query. Referring to a non-existent column in an\n    insert() or update() construct will raise an error instead of a warning\n    in SQLAlchemy 0.8.\n    \n    As an added bonus - this patch adds the downgrade tests for migration\n    186 (which were missed in the original patch) to ensure there are no\n    further regressions.\n    \n    Fixes bug: #1201453\n    \n    Change-Id: I3c679e95583ee0c1bded5a01ddec6d6212904195\n", 
            "date_created": "2013-07-24 22:24:35.737920+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}