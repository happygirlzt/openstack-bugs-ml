{
    "status": "Fix Released", 
    "last_updated": "2013-04-04 11:15:28.544659+00:00", 
    "description": "I used Ryu plugin with Nova LibvirtHybridOVSBridgeDriver.\nWhen I launched an instance, the following problems occurred on nova-compute.\n\n Traceback (most recent call last):\n   File \"/opt/stack/nova/nova/compute/manager.py\", line 960, in _spawn\n     block_device_info)\n   File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 1029, in spawn\n     block_device_info=block_device_info)\n   File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 1808, in to_xml\n     rescue, block_device_info)\n   File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 1766, in get_guest_config\n     self.vif_driver.plug(instance, (network, mapping))\n   File \"/opt/stack/nova/nova/virt/libvirt/vif.py\", line 247, in plug\n     instance['uuid'])\n   File \"/opt/stack/nova/nova/virt/libvirt/vif.py\", line 160, in create_ovs_vif_port\n     run_as_root=True)\n   File \"/opt/stack/nova/nova/utils.py\", line 232, in execute\n     cmd=' '.join(cmd))\n ProcessExecutionError: Unexpected error while running command.\n Command: sudo nova-rootwrap /etc/nova/rootwrap.conf ovs-vsctl -- --may-exist add-port None qvo75dfeac7-01 -- set Interface qvo75dfeac7-01 external-ids:iface-id=75dfeac7-0123-402a-b662-d4edd1327681 external-ids:iface-status=active external-ids:attached-mac=fa:16:3e:eb:d4:1f external-ids:vm-uuid=3b6cdd97-6586-478e-bbc2-73b36a8497e5\n\nIt seems the result of Change Ib043e1e6.\n  Make Quantum plugin fill in the 'bridge' name\n  https://review.openstack.org/#/c/19119/\n\nnova/network/quantumv2/api.py\n    bridge = None\n    vif_type = port.get('binding:vif_type')\n    # TODO(berrange) Quantum should pass the bridge name\n    # in another binding metadata field\n    if vif_type == network_model.VIF_TYPE_OVS:\n        bridge = CONF.quantum_ovs_bridge\n    elif vif_type == network_model.VIF_TYPE_BRIDGE:\n        bridge = \"brq\" + port['network_id']\n\nBy the above, I think that Qauntum plugin used with vif-driver of Nova has to support Portbindings extension.", 
    "tags": [], 
    "importance": "Undecided", 
    "heat": 8, 
    "link": "https://bugs.launchpad.net/nova/+bug/1100199", 
    "owner": "https://api.launchpad.net/1.0/~berrange", 
    "id": 1100199, 
    "index": 3315, 
    "created": "2013-01-16 09:30:39.386974+00:00", 
    "title": "vif-driver of Nova requires Portbindings extension", 
    "comments": [
        {
            "content": "I used Ryu plugin with Nova LibvirtHybridOVSBridgeDriver.\nWhen I launched an instance, the following problems occurred on nova-compute.\n\n Traceback (most recent call last):\n   File \"/opt/stack/nova/nova/compute/manager.py\", line 960, in _spawn\n     block_device_info)\n   File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 1029, in spawn\n     block_device_info=block_device_info)\n   File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 1808, in to_xml\n     rescue, block_device_info)\n   File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 1766, in get_guest_config\n     self.vif_driver.plug(instance, (network, mapping))\n   File \"/opt/stack/nova/nova/virt/libvirt/vif.py\", line 247, in plug\n     instance['uuid'])\n   File \"/opt/stack/nova/nova/virt/libvirt/vif.py\", line 160, in create_ovs_vif_port\n     run_as_root=True)\n   File \"/opt/stack/nova/nova/utils.py\", line 232, in execute\n     cmd=' '.join(cmd))\n ProcessExecutionError: Unexpected error while running command.\n Command: sudo nova-rootwrap /etc/nova/rootwrap.conf ovs-vsctl -- --may-exist add-port None qvo75dfeac7-01 -- set Interface qvo75dfeac7-01 external-ids:iface-id=75dfeac7-0123-402a-b662-d4edd1327681 external-ids:iface-status=active external-ids:attached-mac=fa:16:3e:eb:d4:1f external-ids:vm-uuid=3b6cdd97-6586-478e-bbc2-73b36a8497e5\n\nIt seems the result of Change Ib043e1e6.\n  Make Quantum plugin fill in the 'bridge' name\n  https://review.openstack.org/#/c/19119/\n\nnova/network/quantumv2/api.py\n    bridge = None\n    vif_type = port.get('binding:vif_type')\n    # TODO(berrange) Quantum should pass the bridge name\n    # in another binding metadata field\n    if vif_type == network_model.VIF_TYPE_OVS:\n        bridge = CONF.quantum_ovs_bridge\n    elif vif_type == network_model.VIF_TYPE_BRIDGE:\n        bridge = \"brq\" + port['network_id']\n\nBy the above, I think that Qauntum plugin used with vif-driver of Nova has to support Portbindings extension.", 
            "date_created": "2013-01-16 09:30:39.386974+00:00", 
            "author": "https://api.launchpad.net/1.0/~ykaneko0929"
        }, 
        {
            "content": "This issue was already reported.\n  https://bugs.launchpad.net/quantum/+bug/1099894\n", 
            "date_created": "2013-01-16 10:42:06.670705+00:00", 
            "author": "https://api.launchpad.net/1.0/~ykaneko0929"
        }, 
        {
            "content": "Yes, this is an issue due to a recent nova change.  the fundemental issue seems to be that the patch changed the name of a config variable, because the goal of the patch was to pull this config out of the virt layer.  However, there's no obvious way to do this in a backward compatible way. \n\nMy thinking on this would be to unwind the part of the patch that changes the config variable, and either have the bridge be passed back by quantum, or default to using the libvirt_ovs_bridge field.  From daniel's comments, the quantum_ovs_bridge field config variable was a stepping-stone anyway.  ", 
            "date_created": "2013-01-16 17:22:50.224288+00:00", 
            "author": "https://api.launchpad.net/1.0/~danwent"
        }, 
        {
            "content": "Adding Daniel B., as garyk says he is working on a patch to fix this.  ", 
            "date_created": "2013-01-16 17:23:44.597424+00:00", 
            "author": "https://api.launchpad.net/1.0/~danwent"
        }, 
        {
            "content": "FYI, I am working on a patch to handle back-compat correctly.", 
            "date_created": "2013-01-16 17:25:27.144378+00:00", 
            "author": "https://api.launchpad.net/1.0/~berrange"
        }, 
        {
            "content": "Thanks Daniel.  \n\nJust to clear up some confusion I've seen from the quantum side, this is not ryu-specific, per-se.  \n\nI believe it would affect any use of Nova that uses a OVS-based vif-plugging type (i.e., any vif-plugging that formerly looked at the config value of libvirt_ovs_bridge).  ", 
            "date_created": "2013-01-16 17:29:29.021290+00:00", 
            "author": "https://api.launchpad.net/1.0/~danwent"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/19831", 
            "date_created": "2013-01-16 17:48:52.621980+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/19831\nCommitted: http://github.com/openstack/nova/commit/84341f7c51dca01c03d2d0a771f1afadc8b5131f\nSubmitter: Jenkins\nBranch:    master\n\ncommit 84341f7c51dca01c03d2d0a771f1afadc8b5131f\nAuthor: Daniel P. Berrange <email address hidden>\nDate:   Wed Jan 16 16:55:05 2013 +0000\n\n    Fix fallback when Quantum doesn't provide a 'vif_type'\n    \n    In\n    \n      commit 4babf7d7e12f35c137148727842f7af28312e858\n      Author: Daniel P. Berrange <email address hidden>\n      Date:   Fri Jan 4 12:22:20 2013 +0000\n    \n        Make Quantum plugin fill in the 'bridge' name\n    \n    We changed libvirt VIF driver to pull 'bridge' out of the\n    VIF model. This only worked for new Quantum drivers that\n    provide the 'vif_type' portbinding metadata though. This\n    patch effectively reverts part of that patch, so we have\n    a combination of the new & old method for determining\n    bridge names. The libvirt VIF driver will look at the\n    network['bridge'] field first, and if missing will fallback\n    to its previous logic which hardcoded bridge names.\n    \n    Bug: 1100199\n    Change-Id: I5fd66b0303159c42bd227e97ddab381b2b67670c\n    Signed-off-by: Daniel P. Berrange <email address hidden>\n", 
            "date_created": "2013-01-17 11:52:19.238936+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}