{
    "status": "Fix Released", 
    "last_updated": "2015-10-15 09:03:59.923178+00:00", 
    "description": "The libvirt driver, when counting sockets/cores/etc., does not take NUMA architectures into account.  This can cause applications using data from the Nova API to under-report the total number of sockets/cores/etc. on compute nodes with more than one NUMA cell.\n\nExample, on a production system with 2 NUMA cells:\n\n$ grep ^proc /proc/cpuinfo | wc -l\n  32\n\n$ python simple_test_script_to_ask_nova_for_cpu_topology.py\n{u'cores': u'8', u'threads': u'2', u'sockets': u'1'}\n\nSo, if one were relying solely on Nova to obtain information about this system's capabilities, the results would inaccurate results.", 
    "tags": [
        "libvirt", 
        "numa"
    ], 
    "importance": "Medium", 
    "heat": 10, 
    "link": "https://bugs.launchpad.net/nova/+bug/1156456", 
    "owner": "https://api.launchpad.net/1.0/~nicolas.simonds", 
    "id": 1156456, 
    "index": 3296, 
    "created": "2013-03-18 05:48:41.592167+00:00", 
    "title": "libvirt CPU info doesn't count NUMA cells", 
    "comments": [
        {
            "content": "The libvirt driver, when counting sockets/cores/etc., does not take NUMA architectures into account.  This causes the totals to be wrong when asking nova things about the amount of sockets/cores/etc. on compute nodes with more than one NUMA cell.", 
            "date_created": "2013-03-18 05:48:41.592167+00:00", 
            "author": "https://api.launchpad.net/1.0/~nicolas.simonds"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/24631", 
            "date_created": "2013-03-18 06:25:45.492845+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Please clarify exactly what functionality is broken with the current code. AFAICT there is nothing in Nova which deals with NUMA info, even if the libvirt driver were to report it. Without knowing what is broken, it is hard to know if the proposed change is the right fix.", 
            "date_created": "2013-03-18 14:08:21.669760+00:00", 
            "author": "https://api.launchpad.net/1.0/~berrange"
        }, 
        {
            "content": "Patch Set 1:\n\nI suppose the bug really is around how sockets are being reported on NUMA based systems, not necessarily with reporting on the NUMA cell count.\n\nMost of this is copied from a comment I made on the review but cross posting here for those who aren't looking at the review.\n\nOn a dual socket Intel Xeon E5-2650 system the topology being reported via nova is the following.\n\n\"topology\": {\"cores\": \"8\", \"threads\": \"2\", \"sockets\": \"1\"}\n\nThis is accurate in that it is what is reported via the getCapabilities call, but it is not accurate from the perspective of what is physically present on the system. So I believe we still need to fix this in some way to properly report on NUMA systems. 3rd party software that is trying to rely on the API can't get an accurate representation of what is physically present today.\n\nI assume (and Daniel please correct me if I am wrong) that libvirt reports that based upon the understanding that this is per NUMA cell? Or is this a case were we need a newer version of libvirt that properly reports on a NUMA system? We don't have any asymmetric NUMA systems to look at so I don't know how its presented in the asymmetric case. What would be the correct way of reporting the number of cores, threads, and sockets on a NUMA based system, without representing the entire NUMA topology?", 
            "date_created": "2013-03-18 18:54:26.133923+00:00", 
            "author": "https://api.launchpad.net/1.0/~cfb-n"
        }, 
        {
            "content": "Cross-posted from the review:\n\nIf you're saying that the only acceptable solution is to expose the NUMA topology, then that is fine, we'll draft a blueprint and pitch it for Havana.\n\nBut at a minimum, the fix for this bug in Grizzly should be an entry in the Errata stating that CPU counts out of the Nova API are going inaccurate on NUMA nodes.", 
            "date_created": "2013-03-19 16:21:38.287434+00:00", 
            "author": "https://api.launchpad.net/1.0/~nicolas.simonds"
        }, 
        {
            "content": "Looks like this is better served as part of this blueprint:\n\nhttps://blueprints.launchpad.net/nova/+spec/nova-virt-numa-and-vcpu-topology", 
            "date_created": "2014-06-04 16:32:22.238859+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "I think the answer to this problem really depends on what the user of the this data is expecting to get\n\nIf the user is taking the  toplogy data and doing   cpus = cores * sockets * threads, then merely adding in a numa node count is still going to give them broken information, since you can't assume NUMA topologies are symetrical.\n\nSo if users need a total CPU count for the host, then we should really just expose a total CPU number explicitly, and not require them to multiply together cores/sockets/threads.\n\nIf users actually want to see the NUMA topology, then we have a much bigger job than just adding numa cell count.", 
            "date_created": "2014-06-04 16:37:26.647091+00:00", 
            "author": "https://api.launchpad.net/1.0/~berrange"
        }, 
        {
            "content": "The patch was abandoned over a year ago and given the possibly related blueprints, marking this as incomplete given the confusion of what's at issue here.", 
            "date_created": "2014-06-04 16:42:36.999658+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "this is really old, and numa support has evolved a ton since then. Marking as invalid. Please reopen if still happens in master.", 
            "date_created": "2015-04-01 12:56:39.562273+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/223869", 
            "date_created": "2015-09-15 23:27:40.237079+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "https://review.openstack.org/223869\n\nReviving this old issue since trying to generate reports about hypervisor topology using statistics from novaclient yields some hilariously wrong results against NUMA-enabled compute nodes.\n\nWe're fans of this approach; let n-cpu count up the cells/sockets/cores/threads in the system and return them as cpu_info attributes.  This way the consuming applications can just use the totals given, and don't need to make any assumptions that could be of dubious nature on exotic hardware profiles.", 
            "date_created": "2015-09-15 23:33:15.811573+00:00", 
            "author": "https://api.launchpad.net/1.0/~nicolas.simonds"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/223869\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=9aec873f75389c676af1b87f6455bf95a6813290\nSubmitter: Jenkins\nBranch:    master\n\ncommit 9aec873f75389c676af1b87f6455bf95a6813290\nAuthor: Nicolas Simonds <email address hidden>\nDate:   Mon Sep 14 18:57:46 2015 -0700\n\n    libvirt: Add NUMA cell count to cpu_info\n    \n    Adds the number of NUMA cells from libvirt to the cpu_info['topology']\n    attribute, so that clients using that data for socket/core/thread\n    counting on hypervisors can get better-quality results.\n    \n    Closes-Bug: 1156456\n    Change-Id: I945f32bce96f27939d39b86af6ccec73b754f886\n", 
            "date_created": "2015-09-21 18:20:53.170146+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}