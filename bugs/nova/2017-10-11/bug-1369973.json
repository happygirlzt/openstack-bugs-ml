{
    "status": "Fix Released", 
    "last_updated": "2014-10-16 09:03:32.618087+00:00", 
    "description": "When running libvirt tests via testtools.run, there are a number of cases which fail due to lockutils setup\n\n$ .venv/bin/python -m testtools.run nova.tests.virt.libvirt.test_driver\n..snip...\n======================================================================\nERROR: nova.tests.virt.libvirt.test_driver.IptablesFirewallTestCase.test_multinic_iptables\n----------------------------------------------------------------------\npythonlogging:'': {{{INFO [nova.network.driver] Loading network driver 'nova.network.linux_net'}}}\n\nTraceback (most recent call last):\n  File \"nova/tests/virt/libvirt/test_driver.py\", line 10182, in test_multinic_iptables\n    self.fw.prepare_instance_filter(instance_ref, network_info)\n  File \"nova/virt/firewall.py\", line 184, in prepare_instance_filter\n    self.refresh_provider_fw_rules()\n  File \"nova/virt/firewall.py\", line 474, in refresh_provider_fw_rules\n    self._do_refresh_provider_fw_rules()\n  File \"nova/openstack/common/lockutils.py\", line 267, in inner\n    with lock(name, lock_file_prefix, external, lock_path):\n  File \"/usr/lib64/python2.7/contextlib.py\", line 17, in __enter__\n    return self.gen.next()\n  File \"nova/openstack/common/lockutils.py\", line 231, in lock\n    ext_lock = external_lock(name, lock_file_prefix, lock_path)\n  File \"nova/openstack/common/lockutils.py\", line 180, in external_lock\n    lock_file_path = _get_lock_path(name, lock_file_prefix, lock_path)\n  File \"nova/openstack/common/lockutils.py\", line 171, in _get_lock_path\n    raise cfg.RequiredOptError('lock_path')\nRequiredOptError: value required for option: lock_path\n\nThe tox.ini / run_tests.sh work around this problem by using \"-m nova.openstack.common.lockutils\" but this is somewhat tedious to remember to add. A simple mock addition to the tests in question can avoid the issue in the first place.", 
    "tags": [], 
    "importance": "Low", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1369973", 
    "owner": "https://api.launchpad.net/1.0/~berrange", 
    "id": 1369973, 
    "index": 115, 
    "created": "2014-09-16 10:05:34.748985+00:00", 
    "title": "libvirt test cases fail due to lockutils error when run via testtools", 
    "comments": [
        {
            "content": "When running libvirt tests via testtools.run, there are a number of cases which fail due to lockutils setup\n\n$ .venv/bin/python -m testtools.run nova.tests.virt.libvirt.test_driver\n..snip...\n======================================================================\nERROR: nova.tests.virt.libvirt.test_driver.IptablesFirewallTestCase.test_multinic_iptables\n----------------------------------------------------------------------\npythonlogging:'': {{{INFO [nova.network.driver] Loading network driver 'nova.network.linux_net'}}}\n\nTraceback (most recent call last):\n  File \"nova/tests/virt/libvirt/test_driver.py\", line 10182, in test_multinic_iptables\n    self.fw.prepare_instance_filter(instance_ref, network_info)\n  File \"nova/virt/firewall.py\", line 184, in prepare_instance_filter\n    self.refresh_provider_fw_rules()\n  File \"nova/virt/firewall.py\", line 474, in refresh_provider_fw_rules\n    self._do_refresh_provider_fw_rules()\n  File \"nova/openstack/common/lockutils.py\", line 267, in inner\n    with lock(name, lock_file_prefix, external, lock_path):\n  File \"/usr/lib64/python2.7/contextlib.py\", line 17, in __enter__\n    return self.gen.next()\n  File \"nova/openstack/common/lockutils.py\", line 231, in lock\n    ext_lock = external_lock(name, lock_file_prefix, lock_path)\n  File \"nova/openstack/common/lockutils.py\", line 180, in external_lock\n    lock_file_path = _get_lock_path(name, lock_file_prefix, lock_path)\n  File \"nova/openstack/common/lockutils.py\", line 171, in _get_lock_path\n    raise cfg.RequiredOptError('lock_path')\nRequiredOptError: value required for option: lock_path\n\nThe tox.ini / run_tests.sh work around this problem by using \"-m nova.openstack.common.lockutils\" but this is somewhat tedious to remember to add. A simple mock addition to the tests in question can avoid the issue in the first place.", 
            "date_created": "2014-09-16 10:05:34.748985+00:00", 
            "author": "https://api.launchpad.net/1.0/~berrange"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/121861", 
            "date_created": "2014-09-16 14:24:34.376688+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/121861\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=e3fbdfb3aa2251bb57e53b856e6c5c2d89a23150\nSubmitter: Jenkins\nBranch:    master\n\ncommit e3fbdfb3aa2251bb57e53b856e6c5c2d89a23150\nAuthor: Daniel P. Berrange <email address hidden>\nDate:   Fri Sep 12 14:00:43 2014 +0100\n\n    libvirt: avoid need for lockutils setup running test cases\n    \n    Some of the firewall/driver test cases rely on lockutils being\n    setup, so running tests directly fails:\n    \n     $ .venv/bin/python -m testtools.run nova.tests.virt.libvirt\n     ...snip...\n        Traceback (most recent call last):\n          File \"nova/tests/virt/libvirt/test_driver.py\", line 10182, in test_multinic_iptables\n            self.fw.prepare_instance_filter(instance_ref, network_info)\n          File \"nova/virt/firewall.py\", line 184, in prepare_instance_filter\n            self.refresh_provider_fw_rules()\n          File \"nova/virt/firewall.py\", line 474, in refresh_provider_fw_rules\n            self._do_refresh_provider_fw_rules()\n          File \"nova/openstack/common/lockutils.py\", line 267, in inner\n            with lock(name, lock_file_prefix, external, lock_path):\n          File \"/usr/lib64/python2.7/contextlib.py\", line 17, in __enter__\n            return self.gen.next()\n          File \"nova/openstack/common/lockutils.py\", line 231, in lock\n            ext_lock = external_lock(name, lock_file_prefix, lock_path)\n          File \"nova/openstack/common/lockutils.py\", line 180, in external_lock\n            lock_file_path = _get_lock_path(name, lock_file_prefix, lock_path)\n          File \"nova/openstack/common/lockutils.py\", line 171, in _get_lock_path\n            raise cfg.RequiredOptError('lock_path')\n        RequiredOptError: value required for option: lock_path\n    \n    The first workaround is to launch using (which run_tests.sh does)\n    \n     $ python -m nova.openstack.common.lockutils\n    \n    but it is nicer to developers if we just avoid the need for using\n    external lock files during the test suite execution entirely. This\n    can be done by mocking the 'external_lock' method to use a transient\n    semaphore instead of external lock file on disk.\n    \n    Closes-bug: #1369973\n    Change-Id: I3dcdf6353986ff35c7237644f467ee7e98423f76\n", 
            "date_created": "2014-09-19 21:53:05.534809+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}