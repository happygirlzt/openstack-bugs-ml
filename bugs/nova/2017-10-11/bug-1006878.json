{
    "status": "Invalid", 
    "last_updated": "2014-12-03 15:28:36.411699+00:00", 
    "description": "When i add group-to-group rule i get only TCP allowed to pass.\nShould be passed all traffic.\n\n\n# euca-add-group test1 -d test1\nGROUP   test1   test1\n\n# euca-add-group test2 -d test2\nGROUP   test2   test2\n\n# euca-authorize -o test1 test2\nGROUP   test2\nPERMISSION      test2   ALLOWS  tcp     GRPNAME test1   FROM    CIDR    0.0.0.0/0\n\n\n# euca-describe-groups\nGROUP   2fa3fa776ca346ba86e130720ddc94c9        default default\nGROUP   2fa3fa776ca346ba86e130720ddc94c9        test1   test1\nGROUP   2fa3fa776ca346ba86e130720ddc94c9        test2   test2\nPERMISSION      2fa3fa776ca346ba86e130720ddc94c9        test2   ALLOWS  tcp     1       65535   GRPNAME test1", 
    "tags": [
        "ec2"
    ], 
    "importance": "Medium", 
    "heat": 14, 
    "link": "https://bugs.launchpad.net/nova/+bug/1006878", 
    "owner": "None", 
    "id": 1006878, 
    "index": 2922, 
    "created": "2012-05-31 12:52:21.638639+00:00", 
    "title": "euca-authorize adds wrong rules for group-to-group rule", 
    "comments": [
        {
            "content": "When i add group-to-group rule i get only TCP allowed to pass.\nShould be passed all traffic.\n\n\n# euca-add-group test1 -d test1\nGROUP   test1   test1\n\n# euca-add-group test2 -d test2\nGROUP   test2   test2\n\n# euca-authorize -o test1 test2\nGROUP   test2\nPERMISSION      test2   ALLOWS  tcp     GRPNAME test1   FROM    CIDR    0.0.0.0/0\n\n\n# euca-describe-groups\nGROUP   2fa3fa776ca346ba86e130720ddc94c9        default default\nGROUP   2fa3fa776ca346ba86e130720ddc94c9        test1   test1\nGROUP   2fa3fa776ca346ba86e130720ddc94c9        test2   test2\nPERMISSION      2fa3fa776ca346ba86e130720ddc94c9        test2   ALLOWS  tcp     1       65535   GRPNAME test1", 
            "date_created": "2012-05-31 12:52:21.638639+00:00", 
            "author": "https://api.launchpad.net/1.0/~vkhomenko"
        }, 
        {
            "content": "Have you tried commands like euca-authorize -P icmp -t -1:-1 test2 or euca-authorize -P tcp -p 22 test2on test2? It is possible for a security group to have a default access control, which does not permit other traffic.", 
            "date_created": "2012-06-07 09:55:33.804918+00:00", 
            "author": "https://api.launchpad.net/1.0/~houshengbo"
        }, 
        {
            "content": "Hi.\nYes, adding custom rules works.\nQuestion is how group to group permission should work?\nIn diablo release that rule added 3 rules for tcp, udp and icmp.\nHere we have only tcp. I think it is bug.", 
            "date_created": "2012-06-07 10:26:53.063807+00:00", 
            "author": "https://api.launchpad.net/1.0/~vkhomenko"
        }, 
        {
            "content": "when running the same command on EC2 it returns:\n\n$ euca-authorize -o test1 test2\nNone: None\n\nand euca-describe-groups verifies no new rules are added.", 
            "date_created": "2012-09-10 21:43:19.146947+00:00", 
            "author": "https://api.launchpad.net/1.0/~jogo"
        }, 
        {
            "content": "Have been working on the above issue and came across this case.\n So would require some pointers/views on this when I execute the command,\n\neuca-authorize -P udp  -o test1 test2\n\nI get the following output,.\nGROUP   test2\nPERMISSION      test2   ALLOWS  udp     GRPNAME test1   FROM    CIDR    0.0.0.0/0\n\nThe custom rule of tcp is added to group test2 even without mentioning the -p(port number) switch as per the EC2 docs here,\n\nhttp://docs.aws.amazon.com/AWSEC2/latest/CommandLineReference/ApiReference-cmd-AuthorizeSecurityGroupIngress.html\n\nWhenever  the protocol udp/tcp is to be added one needs to mention the port number(-p) as well. Keeping, that in mind in the above example no port number has been mentioned and still the rule gets added. \n\nAn example from the EC2 docs highlighting the addition of custom rules are as follows(taken from the above link) are,\n\nPROMPT> ec2-authorize websrv -P tcp -p 80 -u 111122223333 -o OtherAccountGroup\nGROUP\t\t\twebsrv\nPERMISSION\t\twebsrv\tALLOWS\ttcp\t80\t80\tFROM\tUSER\t111122223333\tNAME OtherAccountGroup\t\tingress\n\nSo, I believe the behavior doesn't  seem to be correct as it does not comply with the EC2 API docs/specs. According to me it should raise validation error(stating insufficient parameters are supplied).\n\nA behavior similar to this,\neuca-authorize -P tcp  ntest2\nEC2APIError: [] Not enough parameters to build a valid rule\n\nIt would be nice to get some viewpoints on this and views on the above situation to get a clear idea.", 
            "date_created": "2013-05-22 05:51:53.127061+00:00", 
            "author": "https://api.launchpad.net/1.0/~avinash-prasad"
        }, 
        {
            "content": "This issue is quite old, I'd be curious to see if it's still valid (or broken even worse)", 
            "date_created": "2014-09-17 15:12:41.522379+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }
    ]
}