{
    "status": "Invalid", 
    "last_updated": "2016-05-17 09:34:18.693451+00:00", 
    "description": "Description:\n1.In /nova/compute/manager.py the function _rollback_live_migration, we should be catch exception of \n'remove_volume_connection', let the rollback process continue to clean up other resources. Becaue,the\n'remove_volume_connection' will visit cinder, the probability of an exception is relatively large.\n2.In /nova/compute/manager.py the function _post_live_migration, we should be catch all exception of \nsource host clean up resources. Because the vm has been migrated the dest host, we should try to make sure the vm run normally.", 
    "tags": [
        "live-migration"
    ], 
    "importance": "Undecided", 
    "heat": 10, 
    "link": "https://bugs.launchpad.net/nova/+bug/1582558", 
    "owner": "https://api.launchpad.net/1.0/~zheng-yao1", 
    "id": 1582558, 
    "index": 6215, 
    "created": "2016-05-17 07:04:31.422836+00:00", 
    "title": "Live-migration exception handling need improvement", 
    "comments": [
        {
            "content": "Description:\n1.In /nova/compute/manager.py the function _rollback_live_migration, we should be catch exception of \n'remove_volume_connection', let the rollback process continue to clean up other resources. Becaue,the\n'remove_volume_connection' will visit cinder, the probability of an exception is relatively large.\n2.In /nova/compute/manager.py the function _post_live_migration, we should be catch all exception of \nsource host clean up resources. Because the vm has been migrated the dest host, we should try to make sure the vm run normally.", 
            "date_created": "2016-05-17 07:04:31.422836+00:00", 
            "author": "https://api.launchpad.net/1.0/~zheng-yao1"
        }, 
        {
            "content": "I am a bit skeptical in ignoring the exception in both cases you described. For example during the roll_back if we fail calling cinder the risk is that we leave some open connections between the host and the cinder server, which is not good.\nThe same thing could happen during the _post_live_migration.\nI agree with you that would be good to not stop those two actions for errors which Nova can't control but ignoring those errors doesn't seem the right approach.\nProbably we need a new design for implementing the rollback and the post_live_migration tasks in a more async way but with the ability to control the results and take correct actions to fix potential errors but I reckon that to do that it is a complicated task which, probably, require some help from other services (Cidner, for example). I am seeing this more than a new spec than a bug, I'd suggest to come up with a more structured proposal and put a spec where we can get a discussion involving a broader audience.\n\nI am going to mark this bug as invalid as we do not have a real bug here.\nif you are not happy about this decision please join the IRC meeting for the nova live migration sub-team:\nhttps://wiki.openstack.org/wiki/Meetings/NovaLiveMigration\n\n\n\n", 
            "date_created": "2016-05-17 09:33:58.223589+00:00", 
            "author": "https://api.launchpad.net/1.0/~andrea-rosa-m"
        }
    ]
}