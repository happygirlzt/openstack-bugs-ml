{
    "status": "Fix Released", 
    "last_updated": "2015-10-15 08:57:41.138720+00:00", 
    "description": "If you increase the properties of a node which was already deployed the different will go to nova as available resources. For e.g, a node with properties/memory_mb=512 was deployed, and n-cpu is showing:\n\n2014-04-02 10:37:26.514 AUDIT nova.compute.resource_tracker [-] Free ram (MB): 0\n2014-04-02 10:37:26.514 AUDIT nova.compute.resource_tracker [-] Free disk (GB): 0\n2014-04-02 10:37:26.514 AUDIT nova.compute.resource_tracker [-] Free VCPUS: 0\n\nNow if we update that that to properties/memory_mb=1024, the difference will be shown in nova as available resources:\n\n2014-04-02 10:40:48.266 AUDIT nova.compute.resource_tracker [-] Free ram (MB): 512\n2014-04-02 10:40:48.266 AUDIT nova.compute.resource_tracker [-] Free disk (GB): 0\n2014-04-02 10:40:48.266 AUDIT nova.compute.resource_tracker [-] Free VCPUS: 0\n\nLOGs: http://paste.openstack.org/show/74806/", 
    "tags": [
        "ironic", 
        "nova-driver"
    ], 
    "importance": "Medium", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1301279", 
    "owner": "https://api.launchpad.net/1.0/~niu-zglinux", 
    "id": 1301279, 
    "index": 3862, 
    "created": "2014-04-02 09:42:51.353767+00:00", 
    "title": "Changing node's properties in Ironic after node is deployed will count as available resources in Nova", 
    "comments": [
        {
            "content": "If you increase the properties of a node which was already deployed the different will go to nova as available resources. For e.g, a node with properties/memory_mb=512 was deployed, and n-cpu is showing:\n\n2014-04-02 10:37:26.514 AUDIT nova.compute.resource_tracker [-] Free ram (MB): 0\n2014-04-02 10:37:26.514 AUDIT nova.compute.resource_tracker [-] Free disk (GB): 0\n2014-04-02 10:37:26.514 AUDIT nova.compute.resource_tracker [-] Free VCPUS: 0\n\nNow if we update that that to properties/memory_mb=1024, the difference will be shown in nova as available resources:\n\n2014-04-02 10:40:48.266 AUDIT nova.compute.resource_tracker [-] Free ram (MB): 512\n2014-04-02 10:40:48.266 AUDIT nova.compute.resource_tracker [-] Free disk (GB): 0\n2014-04-02 10:40:48.266 AUDIT nova.compute.resource_tracker [-] Free VCPUS: 0\n\nLOGs: http://paste.openstack.org/show/74806/", 
            "date_created": "2014-04-02 09:42:51.353767+00:00", 
            "author": "https://api.launchpad.net/1.0/~lucasagomes"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/84687", 
            "date_created": "2014-04-02 10:22:34.054433+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "The issue here is that the ironic nova driver attempts to calculate total node resources AND the used resources. However, calculating the the amount of resources available in the presence of an instance is handled by nova's resource_tracker and that overrides the *_used keys we set in the driver:\n\nhttps://git.openstack.org/cgit/openstack/nova/tree/nova/compute/resource_tracker.py#n596\n\nIf the properties of an Ironic node change while it is associated with an instance, I think the best we can do is lie about available resources until the instance has been deleted and the resource tracker hits the node when it is unused. ", 
            "date_created": "2014-04-17 23:36:13.001936+00:00", 
            "author": "https://api.launchpad.net/1.0/~gandelman-a"
        }, 
        {
            "content": "Discussed this on IRC with a few folks,  the suggestion is not allow property changes for a node that is deployed.  We should enforce that in Ironic API.  If this sounds like a solution, I can go ahead add the enforcement part in the API. ", 
            "date_created": "2014-06-04 20:07:00.403456+00:00", 
            "author": "https://api.launchpad.net/1.0/~linggao"
        }, 
        {
            "content": "It is conceivable that an operator may perform physical maintenance on a node, while an instance is deployed, that do in fact change its properties -- and I think we should continue to allow that to be reflected in Ironic's API.\n\nIf I understand correctly, the real problem here isn't whether nova sees additional resources -- it's whether nova will attempt to schedule a second instance on that node.\n\nI think the solution is to adjust the scheduler filters to prevent that situation, rather than add constraints in Ironic's API that do not reflect reality. We could also change the calculation of available resources to be based on the flavor, rather than the node, which would avoid this problem.", 
            "date_created": "2014-06-10 14:32:47.715496+00:00", 
            "author": "https://api.launchpad.net/1.0/~devananda"
        }, 
        {
            "content": "Perhaps we should add a scheduler filter that checks node.instance_uuid; if it is None, it may be scheduled, otherwise it may not.", 
            "date_created": "2014-06-10 14:41:01.480589+00:00", 
            "author": "https://api.launchpad.net/1.0/~jim-rollenhagen"
        }, 
        {
            "content": "Doing this in a baremetal-specific scheduler filter seems like the right approach.  Attempting to handle this in resource tracking on either end (nova or ironic) will end up in one side forcing fake calculation to emulate expected behavior and skewing accounting somewhere else.\n", 
            "date_created": "2014-06-17 00:12:11.891060+00:00", 
            "author": "https://api.launchpad.net/1.0/~gandelman-a"
        }, 
        {
            "content": "This seems to be fixed already, as I suggested in June: https://github.com/openstack/ironic/blob/2412946e25fcfc7c7776582a7b858c1b10340624/ironic/nova/virt/ironic/driver.py#L216-220", 
            "date_created": "2014-08-19 17:13:37.345060+00:00", 
            "author": "https://api.launchpad.net/1.0/~jim-rollenhagen"
        }, 
        {
            "content": "Will re-test looking into it", 
            "date_created": "2014-08-19 17:17:06.838160+00:00", 
            "author": "https://api.launchpad.net/1.0/~lucasagomes"
        }, 
        {
            "content": "Tested it today, this bug is not fixed, see logs: http://paste.openstack.org/show/102399/\n\nNow this would involve changing things in the Nova driver, which I don't think that we need to do in J3. So I'm bumping it to ironic-next", 
            "date_created": "2014-08-29 13:25:19.717274+00:00", 
            "author": "https://api.launchpad.net/1.0/~lucasagomes"
        }, 
        {
            "content": "hi Nha Pham (phqnha), are you still working on this, or maybe I can take over it, there has been no real activity for a long time.", 
            "date_created": "2015-06-29 08:38:42.238015+00:00", 
            "author": "https://api.launchpad.net/1.0/~niu-zglinux"
        }, 
        {
            "content": "Hi, feel free to take it. I am so sorry for my inactivity.", 
            "date_created": "2015-06-29 22:30:57.099728+00:00", 
            "author": "https://api.launchpad.net/1.0/~phqnha"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/204088", 
            "date_created": "2015-07-21 13:41:01.310740+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/204088\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=b99fb0a51c658301188bbc729d1437a9c8b75d00\nSubmitter: Jenkins\nBranch:    master\n\ncommit b99fb0a51c658301188bbc729d1437a9c8b75d00\nAuthor: Zhenguo Niu <email address hidden>\nDate:   Tue Jul 21 21:16:22 2015 +0800\n\n    [Ironic]Not count available resources of deployed ironic node\n    \n    Changing node's properties in Ironic after node is deployed will\n    count as available resources in Nova, as nova's resource_tracker\n    will override the *_used keys we set in the driver.\n    \n    This patch changes the caculation of available resources based on\n    the instance flavor instead of node to avoid the issue.\n    \n    Change-Id: I1a6e4501122c4781e103fd83a146e0914c7671c9\n    Closes-Bug: #1301279\n", 
            "date_created": "2015-09-03 03:39:27.031207+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "I don't believe there's anything to do here in Ironic, correct me if I'm wrong.", 
            "date_created": "2015-09-03 23:34:04.654482+00:00", 
            "author": "https://api.launchpad.net/1.0/~jim-rollenhagen"
        }
    ]
}