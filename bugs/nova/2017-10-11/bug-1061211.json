{
    "status": "Invalid", 
    "last_updated": "2012-10-25 18:17:18.549463+00:00", 
    "description": "I am guessing that this is an oversight, but there is no 'get_instance' or 'get_instance_metadata' inside the nova RPCAPI. Patch attached addresses this. Once applied, it's possible to do something like;\n\nresult = impl_kombu.call(CONF, cxt, FLAGS.compute_topic, {'method': 'get_instance', 'args': {'instance': 3}, 'version': '2.0'})\n\nand get back a dict with reservation_id, vm_state, ip's, etc.", 
    "tags": [
        "api", 
        "missing", 
        "nova", 
        "rpc"
    ], 
    "importance": "Undecided", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1061211", 
    "owner": "https://api.launchpad.net/1.0/~stef-ummon", 
    "id": 1061211, 
    "index": 3132, 
    "created": "2012-10-03 20:18:00.326955+00:00", 
    "title": "No 'get_instance' exposed in RPCAPI", 
    "comments": [
        {
            "content": "I am guessing that this is an oversight, but there is no 'get_instance' or 'get_instance_metadata' inside the nova RPCAPI. Patch attached addresses this. Once applied, it's possible to do something like;\n\nresult = impl_kombu.call(CONF, cxt, FLAGS.compute_topic, {'method': 'get_instance', 'args': {'instance': 3}, 'version': '2.0'})\n\nand get back a dict with reservation_id, vm_state, ip's, etc.", 
            "date_created": "2012-10-03 20:18:00.326955+00:00", 
            "author": "https://api.launchpad.net/1.0/~stef-ummon"
        }, 
        {
            "content": "", 
            "date_created": "2012-10-03 20:18:00.326955+00:00", 
            "author": "https://api.launchpad.net/1.0/~stef-ummon"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/14620", 
            "date_created": "2012-10-22 21:24:11.739629+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "not sure why this is necessary. Moreover we are removing db access from compute so at some point it may not be possible to get_instance this way. Can you add more detail about why you need this?", 
            "date_created": "2012-10-22 22:41:01.708385+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "Hey Vish,\n   We are building a system that uses RabbitMQ to listen for notifications/errors and the RPC interface. When getting an rpc notification for a new floating-ip, we don't get the instance information that it is binding to, merely the id. To then introspect the instance, it would make sense to have a method which allows us to do that. I would also expect the RPC interface to be the way to do this. \n\n   I am not sure how else I would get the information about an instance from a 3rd party system if not via RPC, since a 3rd party system will NOT have db access. If REST/HTTP has this, why not RPC ? If no interface has this, how does a 3rd party system get instance info ?", 
            "date_created": "2012-10-23 00:29:11.934664+00:00", 
            "author": "https://api.launchpad.net/1.0/~stef-ummon"
        }, 
        {
            "content": "It sounds like what you need is for the notification to pass the whole instance object. The rpcapi is not reallly intended to be used by external systems, it is an internal communication channel.", 
            "date_created": "2012-10-23 00:53:49.083886+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "If you really need to get information from the system, it is probably best to use the REST api, as that is guaranteed to be stable.", 
            "date_created": "2012-10-23 00:58:03.205134+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "Hey Vish,\n   It strikes me as slightly \"strange\" to (paraphrasing) answer the phone\n(RPC) and then reply to questions via mail (HTTP). Wouldn't it make more\nsense to use 1 communication layer for both incoming and outgoing ?\n\n   With that in mind, since notifications.info is not HTTP accessible, is\nthe advice then to install something like amqp-rest or some other http\nlayer for 3rd party access to notifications ? I would use the rabbitmq one,\nbut that's still considered an 'experimental plugin'. I still wouldn't feel\nlike this is a 'reliable' solution for a 3rd party system to 'ack' getting\na notification.\n\nOn Mon, Oct 22, 2012 at 8:58 PM, Vish Ishaya <email address hidden> wrote:\n\n> If you really need to get information from the system, it is probably\n> best to use the REST api, as that is guaranteed to be stable.\n>\n> --\n> You received this bug notification because you are subscribed to the bug\n> report.\n> https://bugs.launchpad.net/bugs/1061211\n>\n> Title:\n>   No 'get_instance' exposed in RPCAPI\n>\n> Status in OpenStack Compute (Nova):\n>   Incomplete\n>\n> Bug description:\n>   I am guessing that this is an oversight, but there is no\n>   'get_instance' or 'get_instance_metadata' inside the nova RPCAPI.\n>   Patch attached addresses this. Once applied, it's possible to do\n>   something like;\n>\n>   result = impl_kombu.call(CONF, cxt, FLAGS.compute_topic, {'method':\n>   'get_instance', 'args': {'instance': 3}, 'version': '2.0'})\n>\n>   and get back a dict with reservation_id, vm_state, ip's, etc.\n>\n> To manage notifications about this bug go to:\n> https://bugs.launchpad.net/nova/+bug/1061211/+subscriptions\n>\n", 
            "date_created": "2012-10-23 15:39:32+00:00", 
            "author": "https://api.launchpad.net/1.0/~stef-ummon"
        }, 
        {
            "content": "notifications are fundamentally different than api commands. We spew notifications into a messaging system; the communication is designed to be one-way. The only stable api we expose for requests is through HTTP. The currently implemented method for listening for notifications uses the common rpc code, but the idea is that ultimately this wouldn't be necessary.", 
            "date_created": "2012-10-23 23:07:52.012316+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }
    ]
}