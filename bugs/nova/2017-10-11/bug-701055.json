{
    "status": "Fix Released", 
    "last_updated": "2011-02-07 13:54:36.396936+00:00", 
    "description": "Running current trunk (bzr 534+patches up to 536), starting an instance, I get an instance numbered \"i-1\".\nInstance boots and can be reached by SSH.\n\nWhen trying to terminate instance however I get in nova-compute.log:\n\n(nova.compute.manager 2011.1-LOCALBRANCH:LOCALREVISION): AUDIT [854OSKQS1SHK8APLP0BI ttx IRT] Terminating instance 1\n(nova.compute.manager 2011.1-LOCALBRANCH:LOCALREVISION): DEBUG [854OSKQS1SHK8APLP0BI ttx IRT] Deallocating address 10.0.0.5 from MainProcess (pid=17008) terminate_instance /usr/lib/pymodules/python2.6/nova/compute/manager.py:231\nlibvir: QEMU error : Domain not found: no domain with matching name 'instance-00000001'\n(nova.root 2011.1-LOCALBRANCH:LOCALREVISION): ERROR [N/A] in looping call\n(nova.root): TRACE: Traceback (most recent call last):\n(nova.root): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/utils.py\", line 311, in _inner\n(nova.root): TRACE:     self.f(*self.args, **self.kw)\n(nova.root): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/virt/libvirt_conn.py\", line 208, in _wait_for_shutdown\n(nova.root): TRACE:     power_state.SHUTDOWN)\n(nova.root): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/db/api.py\", line 368, in instance_set_state\n(nova.root): TRACE:     return IMPL.instance_set_state(context, instance_id, state, description)\n(nova.root): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/db/sqlalchemy/api.py\", line 96, in wrapper\n(nova.root): TRACE:     return f(*args, **kwargs)\n(nova.root): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/db/sqlalchemy/api.py\", line 802, in instance_set_state\n(nova.root): TRACE:     'state_description': description})\n(nova.root): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/db/api.py\", line 377, in instance_update\n(nova.root): TRACE:     return IMPL.instance_update(context, instance_id, values)\n(nova.root): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/db/sqlalchemy/api.py\", line 107, in wrapper\n(nova.root): TRACE:     return f(*args, **kwargs)\n(nova.root): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/db/sqlalchemy/api.py\", line 809, in instance_update\n(nova.root): TRACE:     instance_ref = instance_get(context, instance_id, session=session)\n(nova.root): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/db/sqlalchemy/api.py\", line 107, in wrapper\n(nova.root): TRACE:     return f(*args, **kwargs)\n(nova.root): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/db/sqlalchemy/api.py\", line 668, in instance_get\n(nova.root): TRACE:     raise exception.NotFound(_('No instance for id %s') % instance_id)\n(nova.root): TRACE: NotFound: No instance for id 1\n\nThen I seem to need to restart nova-compute to be able to run instances again:\n\n(nova.compute.manager 2011.1-LOCALBRANCH:LOCALREVISION): ERROR [Y8B54GDPG7WX63RPWUKG ttx IRT] instance 2: Failed to spawn\n(nova.compute.manager): TRACE: Traceback (most recent call last):\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/compute/manager.py\", line 191, in run_instance\n(nova.compute.manager): TRACE:     self.driver.spawn(instance_ref)\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/exception.py\", line 82, in _wrap\n(nova.compute.manager): TRACE:     return f(*args, **kw)\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/virt/libvirt_conn.py\", line 367, in spawn\n(nova.compute.manager): TRACE:     self.firewall_driver.prepare_instance_filter(instance)\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/virt/libvirt_conn.py\", line 1009, in prepare_instance_filter\n(nova.compute.manager): TRACE:     self.apply_ruleset()\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/virt/libvirt_conn.py\", line 1014, in apply_ruleset\n(nova.compute.manager): TRACE:     new_filter = self.modify_rules(current_lines)\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/virt/libvirt_conn.py\", line 1043, in modify_rules\n(nova.compute.manager): TRACE:     ip_address = self._ip_for_instance(instance)\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/virt/libvirt_conn.py\", line 1140, in _ip_for_instance\n(nova.compute.manager): TRACE:     instance['id'])\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/db/api.py\", line 343, in instance_get_fixed_address\n(nova.compute.manager): TRACE:     return IMPL.instance_get_fixed_address(context, instance_id)\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/db/sqlalchemy/api.py\", line 107, in wrapper\n(nova.compute.manager): TRACE:     return f(*args, **kwargs)\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/db/sqlalchemy/api.py\", line 767, in instance_get_fixed_address\n(nova.compute.manager): TRACE:     instance_ref = instance_get(context, instance_id, session=session)\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/db/sqlalchemy/api.py\", line 107, in wrapper\n(nova.compute.manager): TRACE:     return f(*args, **kwargs)\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/db/sqlalchemy/api.py\", line 668, in instance_get\n(nova.compute.manager): TRACE:     raise exception.NotFound(_('No instance for id %s') % instance_id)\n(nova.compute.manager): TRACE: NotFound: No instance for id 1\n(nova.compute.manager): TRACE: \nlibvir: QEMU error : Domain not found: no domain with matching name 'instance-00000002'", 
    "tags": [], 
    "importance": "High", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/701055", 
    "owner": "https://api.launchpad.net/1.0/~sleepsonthefloor", 
    "id": 701055, 
    "index": 322, 
    "created": "2011-01-10 15:11:28.630978+00:00", 
    "title": "'No instance for id X' error terminating instances", 
    "comments": [
        {
            "content": "Running current trunk (bzr 534+patches up to 536), starting an instance, I get an instance numbered \"i-1\".\nInstance boots and can be reached by SSH.\n\nWhen trying to terminate instance however I get in nova-compute.log:\n\n(nova.compute.manager 2011.1-LOCALBRANCH:LOCALREVISION): AUDIT [854OSKQS1SHK8APLP0BI ttx IRT] Terminating instance 1\n(nova.compute.manager 2011.1-LOCALBRANCH:LOCALREVISION): DEBUG [854OSKQS1SHK8APLP0BI ttx IRT] Deallocating address 10.0.0.5 from MainProcess (pid=17008) terminate_instance /usr/lib/pymodules/python2.6/nova/compute/manager.py:231\nlibvir: QEMU error : Domain not found: no domain with matching name 'instance-00000001'\n(nova.root 2011.1-LOCALBRANCH:LOCALREVISION): ERROR [N/A] in looping call\n(nova.root): TRACE: Traceback (most recent call last):\n(nova.root): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/utils.py\", line 311, in _inner\n(nova.root): TRACE:     self.f(*self.args, **self.kw)\n(nova.root): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/virt/libvirt_conn.py\", line 208, in _wait_for_shutdown\n(nova.root): TRACE:     power_state.SHUTDOWN)\n(nova.root): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/db/api.py\", line 368, in instance_set_state\n(nova.root): TRACE:     return IMPL.instance_set_state(context, instance_id, state, description)\n(nova.root): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/db/sqlalchemy/api.py\", line 96, in wrapper\n(nova.root): TRACE:     return f(*args, **kwargs)\n(nova.root): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/db/sqlalchemy/api.py\", line 802, in instance_set_state\n(nova.root): TRACE:     'state_description': description})\n(nova.root): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/db/api.py\", line 377, in instance_update\n(nova.root): TRACE:     return IMPL.instance_update(context, instance_id, values)\n(nova.root): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/db/sqlalchemy/api.py\", line 107, in wrapper\n(nova.root): TRACE:     return f(*args, **kwargs)\n(nova.root): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/db/sqlalchemy/api.py\", line 809, in instance_update\n(nova.root): TRACE:     instance_ref = instance_get(context, instance_id, session=session)\n(nova.root): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/db/sqlalchemy/api.py\", line 107, in wrapper\n(nova.root): TRACE:     return f(*args, **kwargs)\n(nova.root): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/db/sqlalchemy/api.py\", line 668, in instance_get\n(nova.root): TRACE:     raise exception.NotFound(_('No instance for id %s') % instance_id)\n(nova.root): TRACE: NotFound: No instance for id 1\n\nThen I seem to need to restart nova-compute to be able to run instances again:\n\n(nova.compute.manager 2011.1-LOCALBRANCH:LOCALREVISION): ERROR [Y8B54GDPG7WX63RPWUKG ttx IRT] instance 2: Failed to spawn\n(nova.compute.manager): TRACE: Traceback (most recent call last):\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/compute/manager.py\", line 191, in run_instance\n(nova.compute.manager): TRACE:     self.driver.spawn(instance_ref)\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/exception.py\", line 82, in _wrap\n(nova.compute.manager): TRACE:     return f(*args, **kw)\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/virt/libvirt_conn.py\", line 367, in spawn\n(nova.compute.manager): TRACE:     self.firewall_driver.prepare_instance_filter(instance)\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/virt/libvirt_conn.py\", line 1009, in prepare_instance_filter\n(nova.compute.manager): TRACE:     self.apply_ruleset()\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/virt/libvirt_conn.py\", line 1014, in apply_ruleset\n(nova.compute.manager): TRACE:     new_filter = self.modify_rules(current_lines)\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/virt/libvirt_conn.py\", line 1043, in modify_rules\n(nova.compute.manager): TRACE:     ip_address = self._ip_for_instance(instance)\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/virt/libvirt_conn.py\", line 1140, in _ip_for_instance\n(nova.compute.manager): TRACE:     instance['id'])\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/db/api.py\", line 343, in instance_get_fixed_address\n(nova.compute.manager): TRACE:     return IMPL.instance_get_fixed_address(context, instance_id)\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/db/sqlalchemy/api.py\", line 107, in wrapper\n(nova.compute.manager): TRACE:     return f(*args, **kwargs)\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/db/sqlalchemy/api.py\", line 767, in instance_get_fixed_address\n(nova.compute.manager): TRACE:     instance_ref = instance_get(context, instance_id, session=session)\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/db/sqlalchemy/api.py\", line 107, in wrapper\n(nova.compute.manager): TRACE:     return f(*args, **kwargs)\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/db/sqlalchemy/api.py\", line 668, in instance_get\n(nova.compute.manager): TRACE:     raise exception.NotFound(_('No instance for id %s') % instance_id)\n(nova.compute.manager): TRACE: NotFound: No instance for id 1\n(nova.compute.manager): TRACE: \nlibvir: QEMU error : Domain not found: no domain with matching name 'instance-00000002'", 
            "date_created": "2011-01-10 15:11:28.630978+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "Looks like the instance is terminated correctly in nova/compute/manager.py:terminate_instance, which includes setting the instance \"deleted\" field to True (through self.db.instance_destroy).\n\nHowever when the instance is shut down, nova/virt/libvirt_conn:_wait_for_shutdown calls db.instance_set_state, but that fails due to instance_get not being able to return already-deleted instances.", 
            "date_created": "2011-01-12 16:28:22.263680+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "Then the instance is not cleaned up from the IptablesFirewallDriver instances table, so the next time you call modify_rules, the _ip_for_instance call for the extraneous instance fails (instance_get is still not able to return the deleted instance)", 
            "date_created": "2011-01-12 16:39:15.099564+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "The IptablesFirewallDriver issue is probably something soren can fix pretty quickly.", 
            "date_created": "2011-01-13 01:28:59.808738+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "The IptablesFirewallDriver issue is now bug 702370", 
            "date_created": "2011-01-13 14:08:43.248359+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }
    ]
}