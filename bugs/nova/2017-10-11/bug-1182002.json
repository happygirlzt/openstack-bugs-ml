{
    "status": "Won't Fix", 
    "last_updated": "2013-11-21 23:19:28.852625+00:00", 
    "description": "The nova/virt/powervm/operator.py contains a method to stop the lpar.\n\n    def stop_lpar(self, instance_name, timeout=30):\n        \"\"\"Stop a running LPAR.\n\n        :param instance_name: LPAR instance name\n        :param timeout: value in seconds for specifying\n                        how long to wait for the LPAR to stop\n        \"\"\"\n        cmd = self.command.chsysstate('-r lpar -o shutdown --immed -n %s' %\n                                      instance_name)\n        self.run_vios_command(cmd)\n\n        # poll instance until stopped or raise exception\n        lpar_obj = self.get_lpar(instance_name)\n        .\n        .\n        .\n\nThe problem is the code does not check for timeout until after chsysstate returns.  However, chsysstate does not return until the command completes which may exceed the timeout value.  The solution is to spawn a new thread for the run_vios_command so that you can properly check if it has timed out.", 
    "tags": [
        "powervm"
    ], 
    "importance": "High", 
    "heat": 12, 
    "link": "https://bugs.launchpad.net/nova/+bug/1182002", 
    "owner": "https://api.launchpad.net/1.0/~mengqxqx", 
    "id": 1182002, 
    "index": 1098, 
    "created": "2013-05-20 10:25:58.370630+00:00", 
    "title": "stop lpar method is not properly timing out", 
    "comments": [
        {
            "content": "The nova/virt/powervm/operator.py contains a method to stop the lpar.\n\n    def stop_lpar(self, instance_name, timeout=30):\n        \"\"\"Stop a running LPAR.\n\n        :param instance_name: LPAR instance name\n        :param timeout: value in seconds for specifying\n                        how long to wait for the LPAR to stop\n        \"\"\"\n        cmd = self.command.chsysstate('-r lpar -o shutdown --immed -n %s' %\n                                      instance_name)\n        self.run_vios_command(cmd)\n\n        # poll instance until stopped or raise exception\n        lpar_obj = self.get_lpar(instance_name)\n        .\n        .\n        .\n\nThe problem is the code does not check for timeout until after chsysstate returns.  However, chsysstate does not return until the command completes which may exceed the timeout value.  The solution is to spawn a new thread for the run_vios_command so that you can properly check if it has timed out.", 
            "date_created": "2013-05-20 10:25:58.370630+00:00", 
            "author": "https://api.launchpad.net/1.0/~gekun"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/29894", 
            "date_created": "2013-05-21 09:57:04.682113+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: stable/grizzly\nReview: https://review.openstack.org/30222", 
            "date_created": "2013-05-23 07:04:18.346144+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Marked as High since I'm seeing this causing failures in tempest with the powervm driver:\n\nhttps://github.com/openstack/tempest/blob/master/tempest/api/compute/images/test_images.py#L94\n\nThe stop lpar method hangs and then tempest times out after 10 minutes on the test case since the instance state never goes to SHUTOFF.", 
            "date_created": "2013-07-26 22:35:50.367950+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "The patch was abandoned a long time ago and now we have this: https://review.openstack.org/#/c/57774/", 
            "date_created": "2013-11-21 23:19:27.652538+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }
    ]
}