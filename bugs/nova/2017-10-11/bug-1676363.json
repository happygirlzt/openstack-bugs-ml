{
    "status": "Confirmed", 
    "last_updated": "2017-08-01 10:17:18.569407+00:00", 
    "description": "There are three issues affecting the useability of the network information presented to an instance via the metadata API:\n\n1. For networks using DHCP, the IP address information is omitted. There are however use cases where an instance would want to use static address configuration even when DHCP is available. So adding the information would make deploying such an instance easier.\n\n2. For IPv6 subnets, netmasks should not be presented as bitmasks, but in prefixlen notation instead, e.g. \"/16\" instead of \"ffff::\".\n\n3. For IPv6 subnets, the type is always \"ipv6_dhcp\", regardless of whether the subnet has mode \"slaac\", \"dhcpv6-stateless\" or \"dhcpv6-stateful\". This makes is impossible for an instance to decide whether it should use DHCPv6 for address and/or additional configuration.\n\nHere is the current output for an instance with one network for IPv4 and one for IPv6:\n\n{\n  \"services\": [\n    \n  ],\n  \"networks\": [\n    {\n      \"network_id\": \"fb1ca77c-624d-42ab-9102-16f21313a6cb\",\n      \"link\": \"tap92b3d1dd-12\",\n      \"type\": \"ipv4_dhcp\",\n      \"id\": \"network0\"\n    },\n    {\n      \"network_id\": \"6179a9e5-e370-4ee4-8ff6-d83f118b08fd\",\n      \"link\": \"tap2fa5e368-de\",\n      \"type\": \"ipv6_dhcp\",\n      \"id\": \"network1\"\n    }\n  ],\n  \"links\": [\n    {\n      \"ethernet_mac_address\": \"fa:16:3e:e0:b3:ad\",\n      \"mtu\": 1500,\n      \"type\": \"ovs\",\n      \"id\": \"tap92b3d1dd-12\",\n      \"vif_id\": \"92b3d1dd-12c2-49cd-82a5-298c071896fd\"\n    },\n    {\n      \"ethernet_mac_address\": \"fa:16:3e:aa:71:95\",\n      \"mtu\": 1500,\n      \"type\": \"ovs\",\n      \"id\": \"tap2fa5e368-de\",\n      \"vif_id\": \"2fa5e368-de18-416f-b6f7-063687d4b9e5\"\n    }\n  ]\n}", 
    "tags": [], 
    "importance": "Medium", 
    "heat": 8, 
    "link": "https://bugs.launchpad.net/nova/+bug/1676363", 
    "owner": "None", 
    "id": 1676363, 
    "index": 4780, 
    "created": "2017-03-27 10:28:24.156862+00:00", 
    "title": "The network metadata should be more useful", 
    "comments": [
        {
            "content": "There are two issues affecting the useability of the network information presented to an instance via the metadata API:\n\n1. For networks using DHCP, the IP address information is omitted. There are however use cases where an instance would want to use static address configuration even when DHCP is available. So adding the information would make deploying such an instance easier.\n\n2. For IPv6 subnets, the type is always \"ipv6_dhcp\", regardless of whether the subnet has mode \"slaac\", \"dhcpv6-stateless\" or \"dhcpv6-stateful\". This makes is impossible for an instance to decide whether it should use DHCPv6 for address and/or additional configuration.\n\nHere is the current output for an instance with one network for IPv4 and one for IPv6:\n\n{\n  \"services\": [\n    \n  ],\n  \"networks\": [\n    {\n      \"network_id\": \"fb1ca77c-624d-42ab-9102-16f21313a6cb\",\n      \"link\": \"tap92b3d1dd-12\",\n      \"type\": \"ipv4_dhcp\",\n      \"id\": \"network0\"\n    },\n    {\n      \"network_id\": \"6179a9e5-e370-4ee4-8ff6-d83f118b08fd\",\n      \"link\": \"tap2fa5e368-de\",\n      \"type\": \"ipv6_dhcp\",\n      \"id\": \"network1\"\n    }\n  ],\n  \"links\": [\n    {\n      \"ethernet_mac_address\": \"fa:16:3e:e0:b3:ad\",\n      \"mtu\": 1500,\n      \"type\": \"ovs\",\n      \"id\": \"tap92b3d1dd-12\",\n      \"vif_id\": \"92b3d1dd-12c2-49cd-82a5-298c071896fd\"\n    },\n    {\n      \"ethernet_mac_address\": \"fa:16:3e:aa:71:95\",\n      \"mtu\": 1500,\n      \"type\": \"ovs\",\n      \"id\": \"tap2fa5e368-de\",\n      \"vif_id\": \"2fa5e368-de18-416f-b6f7-063687d4b9e5\"\n    }\n  ]\n}", 
            "date_created": "2017-03-27 10:28:24.156862+00:00", 
            "author": "https://api.launchpad.net/1.0/~j-harbott"
        }, 
        {
            "content": "Hi Jens, I think you possibly make the case for splitting this into two bugs. One for the status IP addressing information and the other for the IPv6 specifics.", 
            "date_created": "2017-03-27 13:04:54.983002+00:00", 
            "author": "https://api.launchpad.net/1.0/~jaypipes"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/450211", 
            "date_created": "2017-03-27 13:14:52.644952+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/450212", 
            "date_created": "2017-03-27 13:15:04.332928+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/450297", 
            "date_created": "2017-03-27 15:38:00.864027+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "@Jay: During developing the patch series, I found even a third issue. As the patches stack quite nicely on top of each other, I would prefer keeping this together, though.", 
            "date_created": "2017-03-27 15:40:11.643599+00:00", 
            "author": "https://api.launchpad.net/1.0/~j-harbott"
        }, 
        {
            "content": "For reference, here is the sample output before and after my patch series, for an instance with three interfaces (dual-stack slaac, dhcpv6-stateless, dhcpv6-stateful):\n\nOld:\n\n{\n  \"services\": [\n    \n  ],\n  \"networks\": [\n    {\n      \"network_id\": \"58469bbc-1b36-4e2d-a098-4096ab0e956b\",\n      \"link\": \"tapd15840ff-85\",\n      \"type\": \"ipv4_dhcp\",\n      \"id\": \"network0\"\n    },\n    {\n      \"network_id\": \"58469bbc-1b36-4e2d-a098-4096ab0e956b\",\n      \"link\": \"tapd15840ff-85\",\n      \"type\": \"ipv6_dhcp\",\n      \"id\": \"network1\"\n    },\n    {\n      \"network_id\": \"7d398f31-1179-4dcd-b322-017f1dd3fa91\",\n      \"link\": \"tap6d9c3001-5a\",\n      \"type\": \"ipv6_dhcp\",\n      \"id\": \"network2\"\n    },\n    {\n      \"network_id\": \"b41c9da6-95b5-4d79-874a-8ff66eefe691\",\n      \"link\": \"tapee59b935-fe\",\n      \"type\": \"ipv6_dhcp\",\n      \"id\": \"network3\"\n    }\n  ],\n  \"links\": [\n    {\n      \"ethernet_mac_address\": \"fa:16:3e:21:90:c1\",\n      \"mtu\": 1450,\n      \"type\": \"ovs\",\n      \"id\": \"tapd15840ff-85\",\n      \"vif_id\": \"d15840ff-85cb-4d07-b101-9bc25e228705\"\n    },\n    {\n      \"ethernet_mac_address\": \"fa:16:3e:90:5f:b3\",\n      \"mtu\": 1450,\n      \"type\": \"ovs\",\n      \"id\": \"tap6d9c3001-5a\",\n      \"vif_id\": \"6d9c3001-5a51-4f76-a22e-724c9d31236b\"\n    },\n    {\n      \"ethernet_mac_address\": \"fa:16:3e:7a:38:15\",\n      \"mtu\": 1450,\n      \"type\": \"ovs\",\n      \"id\": \"tapee59b935-fe\",\n      \"vif_id\": \"ee59b935-fee0-41cb-b118-b6a2f28f455b\"\n    }\n  ]\n}\n\nNew:\n\n{\n  \"services\": [\n    \n  ],\n  \"networks\": [\n    {\n      \"network_id\": \"58469bbc-1b36-4e2d-a098-4096ab0e956b\",\n      \"type\": \"ipv4_dhcp\",\n      \"netmask\": \"255.255.255.192\",\n      \"link\": \"tapd15840ff-85\",\n      \"routes\": [\n        {\n          \"netmask\": \"0.0.0.0\",\n          \"network\": \"0.0.0.0\",\n          \"gateway\": \"10.0.0.1\"\n        }\n      ],\n      \"ip_address\": \"10.0.0.8\",\n      \"id\": \"network0\"\n    },\n    {\n      \"network_id\": \"58469bbc-1b36-4e2d-a098-4096ab0e956b\",\n      \"type\": \"ipv6_slaac\",\n      \"netmask\": \"\\/64\",\n      \"link\": \"tapd15840ff-85\",\n      \"routes\": [\n        {\n          \"netmask\": \"\\/0\",\n          \"network\": \"::\",\n          \"gateway\": \"fdcd:6ce3:aac5::1\"\n        }\n      ],\n      \"ip_address\": \"fdcd:6ce3:aac5:0:f816:3eff:fe21:90c1\",\n      \"id\": \"network1\"\n    },\n    {\n      \"network_id\": \"7d398f31-1179-4dcd-b322-017f1dd3fa91\",\n      \"type\": \"ipv6_dhcpv6-stateless\",\n      \"netmask\": \"\\/64\",\n      \"link\": \"tap6d9c3001-5a\",\n      \"routes\": [\n        {\n          \"netmask\": \"\\/0\",\n          \"network\": \"::\",\n          \"gateway\": \"fdcd:6ce3:aac5:1::1\"\n        }\n      ],\n      \"ip_address\": \"fdcd:6ce3:aac5:1:f816:3eff:fe90:5fb3\",\n      \"id\": \"network2\"\n    },\n    {\n      \"network_id\": \"b41c9da6-95b5-4d79-874a-8ff66eefe691\",\n      \"type\": \"ipv6_dhcpv6-stateful\",\n      \"netmask\": \"\\/64\",\n      \"link\": \"tapee59b935-fe\",\n      \"routes\": [\n        {\n          \"netmask\": \"\\/0\",\n          \"network\": \"::\",\n          \"gateway\": \"fdcd:6ce3:aac5:3::1\"\n        }\n      ],\n      \"ip_address\": \"fdcd:6ce3:aac5:3::c\",\n      \"id\": \"network3\"\n    }\n  ],\n  \"links\": [\n    {\n      \"ethernet_mac_address\": \"fa:16:3e:21:90:c1\",\n      \"mtu\": 1450,\n      \"type\": \"ovs\",\n      \"id\": \"tapd15840ff-85\",\n      \"vif_id\": \"d15840ff-85cb-4d07-b101-9bc25e228705\"\n    },\n    {\n      \"ethernet_mac_address\": \"fa:16:3e:90:5f:b3\",\n      \"mtu\": 1450,\n      \"type\": \"ovs\",\n      \"id\": \"tap6d9c3001-5a\",\n      \"vif_id\": \"6d9c3001-5a51-4f76-a22e-724c9d31236b\"\n    },\n    {\n      \"ethernet_mac_address\": \"fa:16:3e:7a:38:15\",\n      \"mtu\": 1450,\n      \"type\": \"ovs\",\n      \"id\": \"tapee59b935-fe\",\n      \"vif_id\": \"ee59b935-fee0-41cb-b118-b6a2f28f455b\"\n    }\n  ]\n}\n\nI would like to make the output even nicer, by combining network+netmask for routes and maybe even ip_address+netmask for addresses, at least for IPv6, please let me know what you think about this.", 
            "date_created": "2017-03-28 08:56:43.648642+00:00", 
            "author": "https://api.launchpad.net/1.0/~j-harbott"
        }, 
        {
            "content": "Looking at how the subnet type is being parsed by cloud-init here[1] it seems that \"ipv6_slaac\" and \"ipv6_dhcpv6-stateful\" will both work fine - at least in that regard -, but \"ipv6_dhcpv6-stateless\" will be interpreted as dhcpv6 instead of slaac.\n\nThey also seem to completely ignore any netmask and routes information.\n\n[1] https://git.launchpad.net/cloud-init/tree/cloudinit/sources/helpers/openstack.py#n571", 
            "date_created": "2017-03-28 11:45:52.858654+00:00", 
            "author": "https://api.launchpad.net/1.0/~j-harbott"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/450297\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=ccebded0cbb654be18db5b4e0e7f8b8a3a7cacdb\nSubmitter: Jenkins\nBranch:    master\n\ncommit ccebded0cbb654be18db5b4e0e7f8b8a3a7cacdb\nAuthor: Jens Rosenboom <email address hidden>\nDate:   Mon Mar 27 15:33:25 2017 +0000\n\n    Update network metadata type field for IPv6\n    \n    Currently it is not possible to decide from looking at the network\n    metadata whether an IPv6 subnet is using slaac, dhcpv6-stateless or\n    dhcpv6-stateful.\n    \n    So we add ipv6_address_mode information into the subnet metadata when\n    it is available and use that to construct the subnet type.\n    \n    As a result, the type for a subnet with mode SLAAC will be \"ipv6_slaac\"\n    instead of \"ipv6_dhcp\" and similarly for the other available modes.\n    \n    Change-Id: I751200a354ec9be2bfd5f94d3e4bbf53dab2c8bb\n    Partial-Bug: 1676363\n", 
            "date_created": "2017-04-15 12:11:54.099197+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Change abandoned by Matt Riedemann (<email address hidden>) on branch: master\nReview: https://review.openstack.org/336293\nReason: This hasn't been updated since May, has a -1 on it and is in merge conflict. If we need to discuss the -1 then I'd suggest bringing this up in the weekly nova meeting or the mailing list. Note that Thursday July 27 is feature freeze for Pike, so if this is going to get done this release it needs to move fast.", 
            "date_created": "2017-07-19 22:40:55.773977+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Found open reviews for this bug in gerrit, setting to In Progress. \n\nreview: https://review.openstack.org/450212 in branch: master\nreview: https://review.openstack.org/450211 in branch: master\n", 
            "date_created": "2017-07-24 14:47:14.895244+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "Change abandoned by Sean Dague (<email address hidden>) on branch: master\nReview: https://review.openstack.org/450212\nReason: This review is > 4 weeks without comment, and is not mergable in it's current state. We are abandoning this for now. Feel free to reactivate the review by pressing the restore button and leaving a 'recheck' comment to get fresh test results.", 
            "date_created": "2017-08-01 09:57:46.095238+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Change abandoned by Sean Dague (<email address hidden>) on branch: master\nReview: https://review.openstack.org/450211\nReason: This review is > 4 weeks without comment, and is not mergable in it's current state. We are abandoning this for now. Feel free to reactivate the review by pressing the restore button and leaving a 'recheck' comment to get fresh test results.", 
            "date_created": "2017-08-01 09:57:51.293496+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "There are no currently open reviews on this bug, changing the status back to the previous state and unassigning. If there are active reviews related to this bug, please include links in comments. ", 
            "date_created": "2017-08-01 10:17:15.768615+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }
    ]
}