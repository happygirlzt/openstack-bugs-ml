{
    "status": "Won't Fix", 
    "last_updated": "2016-04-26 21:47:05.834934+00:00", 
    "description": "The class _BaseMessage defines a method named _send_json_responses, which takes a named parameter neighbor_only. Later on in the same class, another method _send_response makes a call to _send_json_responses (on line 285), setting neighbor_only explicitly.\n\nHowever, a subclass of _BaseMessage, _BroadcastMessage overrides _send_json_responses with a definition that does not have neighbor_only as a named parameter. Therefore if _send_response is ever called on an object of type _BroadcastMessage, a TypeError will be raised.\n\nOne option would be to change the definition of _BroadcastMessage._send_json_reponses to allow neighbour_only to be passed even though it is not required.\n\n    def _send_json_responses(self, json_responses,neighbour_only=None):\n        \"\"\"Responses to broadcast messages always need to go to the\n        neighbor cell from which we received this message.  That\n        cell aggregates the responses and makes sure to forward them\n        to the correct source.\n        \"\"\"\n        return super(_BroadcastMessage, self)._send_json_responses(\n                json_responses, neighbor_only=True, fanout=True)", 
    "tags": [], 
    "importance": "Undecided", 
    "heat": 8, 
    "link": "https://bugs.launchpad.net/nova/+bug/1575285", 
    "owner": "None", 
    "id": 1575285, 
    "index": 6178, 
    "created": "2016-04-26 17:43:47.521110+00:00", 
    "title": "_BroadcastMessage._send_response raises TypeError", 
    "comments": [
        {
            "content": "The class _BaseMessage defines a method named _send_json_responses, which takes a named parameter neighbor_only. Later on in the same class, another method _send_response makes a call to _send_json_responses (on line 285), setting neighbor_only explicitly.\n\nHowever, a subclass of _BaseMessage, _BroadcastMessage overrides _send_json_responses with a definition that does not have neighbor_only as a named parameter. Therefore if _send_response is ever called on an object of type _BroadcastMessage, a TypeError will be raised.\n\nOne option would be to change the definition of _BroadcastMessage._send_json_reponses to allow neighbour_only to be passed even though it is not required.\n\n    def _send_json_responses(self, json_responses,neighbour_only=None):\n        \"\"\"Responses to broadcast messages always need to go to the\n        neighbor cell from which we received this message.  That\n        cell aggregates the responses and makes sure to forward them\n        to the correct source.\n        \"\"\"\n        return super(_BroadcastMessage, self)._send_json_responses(\n                json_responses, neighbor_only=True, fanout=True)", 
            "date_created": "2016-04-26 17:43:47.521110+00:00", 
            "author": "https://api.launchpad.net/1.0/~w-robin"
        }, 
        {
            "content": "It looks like this piece of code [1] is 3 years old without having any negative effect. These interfaces are all private and contained in one single module without leaking to the outside world, so I guess it's not worth to make a patch for that.\n\nReferences:\n[1] https://git.openstack.org/cgit/openstack/nova/tree/nova/cells/messaging.py?id=f9a868e86ce11f786538547c301b805bd68a1697#n462", 
            "date_created": "2016-04-26 21:46:57.928365+00:00", 
            "author": "https://api.launchpad.net/1.0/~mzoeller"
        }
    ]
}