{
    "status": "Fix Released", 
    "last_updated": "2011-04-21 07:16:02.950765+00:00", 
    "description": "Hi,\n\nI'm working on nova using ElasticFox (1.7 build 000116 (EC2 API 2010-06-15)\nand tAWS (0.5.0), and I noticed that current DescribeImages response contains\nincompatibility which prevents ElasticFox and tAWS from displaying the result correctly.\n\nThere are two issues.\n\nCurrently, _format_image called from describe_images() in nova/api/ec2/cloud.py:\n\n1) Appends 'name' property to <imageId> tag for images converted by\n   'nova-manage image convert'. (I.e., if 'name' exists)\n   ElasticFox and tAWS cannot handle this additional string and fail to display image listing.\n   I know that it's useful showing the original names, and so   I suggest appending it\n   to <imageLocation> tag instead of   <imageId> if 'name' exists.\n\n2) Uses <type> instead of <imageType>. This is not compliant to EC2 API spec.\n\nThe patch below fixes the above two issues, and here are results\nof euca-describe-images before/after applying it. \n\nWhat do you think about?\n\n=== modified file 'nova/api/ec2/cloud.py'\n--- nova/api/ec2/cloud.py       2011-04-01 16:44:12 +0000\n+++ nova/api/ec2/cloud.py       2011-04-04 16:37:20 +0000\n@@ -886,10 +886,7 @@\n         image_type = image['properties'].get('type')\n         ec2_id = self._image_ec2_id(image.get('id'), image_type)\n         name = image.get('name')\n-        if name:\n-            i['imageId'] = \"%s (%s)\" % (ec2_id, name)\n-        else:\n-            i['imageId'] = ec2_id\n+        i['imageId'] = ec2_id\n         kernel_id = image['properties'].get('kernel_id')\n         if kernel_id:\n             i['kernelId'] = self._image_ec2_id(kernel_id, 'kernel')\n@@ -897,11 +894,15 @@\n         if ramdisk_id:\n             i['ramdiskId'] = self._image_ec2_id(ramdisk_id, 'ramdisk')\n         i['imageOwnerId'] = image['properties'].get('owner_id')\n-        i['imageLocation'] = image['properties'].get('image_location')\n+        if name:\n+            i['imageLocation'] = \"%s (%s)\" % (image['properties'].\n+                                              get('image_location'), name)\n+        else:\n+            i['imageLocation'] = image['properties'].get('image_location')\n         i['imageState'] = image['properties'].get('image_state')\n-        i['displayName'] = image.get('name')\n+        i['displayName'] = name\n         i['description'] = image.get('description')\n-        i['type'] = image_type\n+        i['imageType'] = image_type\n         i['isPublic'] = str(image['properties'].get('is_public', '')) == 'True'\n         i['architecture'] = image['properties'].get('architecture')\n         return i\n\nBEFORE\n|root@shayol:/home/itoumsn# euca-describe-images\n|IMAGE   ari-26b4ed32 (ari-tty)  nova/tty-ramdisk        admin   available       public          x86_64  ramdisk\n|IMAGE   aki-303b6dd9 (aki-tty)  nova/tty-kernel admin   available       public          x86_64  kernel\n|IMAGE   ami-250c5dc3 (ami-tty)  demo/tty        admin   available       public          x86_64  machine aki-303b6dd9    ari-26b4ed32\n\nAFTER\n|root@shayol:/home/itoumsn# euca-describe-images\n|IMAGE   ari-26b4ed32    nova/tty-ramdisk (ari-tty)      admin   available       public          x86_64  ramdisk\n|IMAGE   aki-303b6dd9    nova/tty-kernel (aki-tty)       admin   available       public          x86_64  kernel\n|IMAGE   ami-250c5dc3    demo/tty (ami-tty)      admin   available       public          x86_64  machine aki-303b6dd9    ari-26b4ed32", 
    "tags": [], 
    "importance": "Medium", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/750482", 
    "owner": "https://api.launchpad.net/1.0/~itohm", 
    "id": 750482, 
    "index": 2351, 
    "created": "2011-04-04 17:01:44.843343+00:00", 
    "title": "DescribeImages response prevents listing images correctly for ElastixFox/tAWS", 
    "comments": [
        {
            "content": "Hi,\n\nI'm working on nova using ElasticFox (1.7 build 000116 (EC2 API 2010-06-15)\nand tAWS (0.5.0), and I noticed that current DescribeImages response contains\nincompatibility which prevents ElasticFox and tAWS from displaying the result correctly.\n\nThere are two issues.\n\nCurrently, _format_image called from describe_images() in nova/api/ec2/cloud.py:\n\n1) Appends 'name' property to <imageId> tag for images converted by\n   'nova-manage image convert'. (I.e., if 'name' exists)\n   ElasticFox and tAWS cannot handle this additional string and fail to display image listing.\n   I know that it's useful showing the original names, and so   I suggest appending it\n   to <imageLocation> tag instead of   <imageId> if 'name' exists.\n\n2) Uses <type> instead of <imageType>. This is not compliant to EC2 API spec.\n\nThe patch below fixes the above two issues, and here are results\nof euca-describe-images before/after applying it. \n\nWhat do you think about?\n\n=== modified file 'nova/api/ec2/cloud.py'\n--- nova/api/ec2/cloud.py       2011-04-01 16:44:12 +0000\n+++ nova/api/ec2/cloud.py       2011-04-04 16:37:20 +0000\n@@ -886,10 +886,7 @@\n         image_type = image['properties'].get('type')\n         ec2_id = self._image_ec2_id(image.get('id'), image_type)\n         name = image.get('name')\n-        if name:\n-            i['imageId'] = \"%s (%s)\" % (ec2_id, name)\n-        else:\n-            i['imageId'] = ec2_id\n+        i['imageId'] = ec2_id\n         kernel_id = image['properties'].get('kernel_id')\n         if kernel_id:\n             i['kernelId'] = self._image_ec2_id(kernel_id, 'kernel')\n@@ -897,11 +894,15 @@\n         if ramdisk_id:\n             i['ramdiskId'] = self._image_ec2_id(ramdisk_id, 'ramdisk')\n         i['imageOwnerId'] = image['properties'].get('owner_id')\n-        i['imageLocation'] = image['properties'].get('image_location')\n+        if name:\n+            i['imageLocation'] = \"%s (%s)\" % (image['properties'].\n+                                              get('image_location'), name)\n+        else:\n+            i['imageLocation'] = image['properties'].get('image_location')\n         i['imageState'] = image['properties'].get('image_state')\n-        i['displayName'] = image.get('name')\n+        i['displayName'] = name\n         i['description'] = image.get('description')\n-        i['type'] = image_type\n+        i['imageType'] = image_type\n         i['isPublic'] = str(image['properties'].get('is_public', '')) == 'True'\n         i['architecture'] = image['properties'].get('architecture')\n         return i\n\nBEFORE\n|root@shayol:/home/itoumsn# euca-describe-images\n|IMAGE   ari-26b4ed32 (ari-tty)  nova/tty-ramdisk        admin   available       public          x86_64  ramdisk\n|IMAGE   aki-303b6dd9 (aki-tty)  nova/tty-kernel admin   available       public          x86_64  kernel\n|IMAGE   ami-250c5dc3 (ami-tty)  demo/tty        admin   available       public          x86_64  machine aki-303b6dd9    ari-26b4ed32\n\nAFTER\n|root@shayol:/home/itoumsn# euca-describe-images\n|IMAGE   ari-26b4ed32    nova/tty-ramdisk (ari-tty)      admin   available       public          x86_64  ramdisk\n|IMAGE   aki-303b6dd9    nova/tty-kernel (aki-tty)       admin   available       public          x86_64  kernel\n|IMAGE   ami-250c5dc3    demo/tty (ami-tty)      admin   available       public          x86_64  machine aki-303b6dd9    ari-26b4ed32", 
            "date_created": "2011-04-04 17:01:44.843343+00:00", 
            "author": "https://api.launchpad.net/1.0/~itohm"
        }, 
        {
            "content": "Hi,\n\nI rebased lp:~itoumsn/nova/lp750482 to trunk rev 941, and I assigned this bug to me.\nIf it's confirmed, I will post a merge request.\n\nThanks,\n-Masanori\n", 
            "date_created": "2011-04-05 03:20:19.972919+00:00", 
            "author": "https://api.launchpad.net/1.0/~itohm"
        }
    ]
}