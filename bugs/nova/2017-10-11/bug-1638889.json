{
    "status": "Fix Released", 
    "last_updated": "2017-02-03 19:08:29.275486+00:00", 
    "description": "Currently if Nova is using the libvirt LXC driver, it is hardcoded to report 1 vCPU used on the host, regardless of how many containers are running.\n   \nMeanwhile for QEMU (aka TCG) guests, the guest.get_vcpu_info method is throwing an exception, since QEMU does not use a dedicated thread per vCPU currently. The effect is that on QEMU hosts, we're reporting 0 vCPUs used on the host regardless of how many guests are running\n\nThis causes the 'get_available_resources' method to report incorrect 'vcpus_used' values for the compute node:\n\neg with 2 instances running:\n\n$ nova list\n+--------------------------------------+-------+--------+------------+-------------+--------------------------------------------------------+\n| ID                                   | Name  | Status | Task State | Power State | Networks                                               |\n+--------------------------------------+-------+--------+------------+-------------+--------------------------------------------------------+\n| deee00d9-3903-43aa-aa33-40e869b61bf6 | demo1 | ACTIVE | -          | Running     | private=10.0.0.4, 2001:db8:8000:0:f816:3eff:fe8f:135d  |\n| 3d160f7c-18fb-4c62-8464-5477be7432d0 | demo2 | ACTIVE | -          | Running     | private=10.0.0.13, 2001:db8:8000:0:f816:3eff:fef6:58d9 |\n+--------------------------------------+-------+--------+------------+-------------+--------------------------------------------------------+\n\nWe're correctly recording that 2 vCPUs are used against the compute node\n\n$ nova hypervisor-show 1 | grep vcpus\n| vcpus                     | 12                                       |\n| vcpus_used                | 2                                        |\n\nbut when reporting the hypervisors view of available vCPUs the value never lowers from 12. eg it should be reporting 10, but it reports 12:\n\n$ grep 'Hypervisor: free VCPUs' ../logs/n-cpu.log | tail\n2016-11-03 11:17:24.003 19647 DEBUG nova.compute.resource_tracker [req-559dcffd-b4c8-494b-b1f2-f936346132cf - -] Hypervisor: free VCPUs: 12 _report_hypervisor_resource_view /home/ds-f23-master/openstack/nova/nova/compute/resource_tracker.py:623\n\n\nThe resource tracker ignores the vcpus_used value reported by the hypervisor (which is arguably a bug in itself, because it causes it to incorrectly over-count QEMU CPU usage), but at least it means it is not affected by this libvirt bug - it merely causes mis-leading log messages to be emitted. None the less we should fix the libvirt reporting so that it is possible to have resource tracker honour this data in the future.", 
    "tags": [], 
    "importance": "Low", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1638889", 
    "owner": "https://api.launchpad.net/1.0/~stephenfinucane", 
    "id": 1638889, 
    "index": 849, 
    "created": "2016-11-03 11:31:23.420540+00:00", 
    "title": "Libvirt get_available_resource is reporting incorrect vcpus_used data for QEMU/LXC instances", 
    "comments": [
        {
            "content": "Currently if Nova is using the libvirt LXC driver, it is hardcoded to report 1 vCPU used on the host, regardless of how many containers are running.\n   \nMeanwhile for QEMU (aka TCG) guests, the guest.get_vcpu_info method is throwing an exception, since QEMU does not use a dedicated thread per vCPU currently. The effect is that on QEMU hosts, we're reporting 0 vCPUs used on the host regardless of how many guests are running\n\nThis causes the 'get_available_resources' method to report incorrect 'vcpus_used' values for the compute node:\n\neg with 2 instances running:\n\n$ nova list\n+--------------------------------------+-------+--------+------------+-------------+--------------------------------------------------------+\n| ID                                   | Name  | Status | Task State | Power State | Networks                                               |\n+--------------------------------------+-------+--------+------------+-------------+--------------------------------------------------------+\n| deee00d9-3903-43aa-aa33-40e869b61bf6 | demo1 | ACTIVE | -          | Running     | private=10.0.0.4, 2001:db8:8000:0:f816:3eff:fe8f:135d  |\n| 3d160f7c-18fb-4c62-8464-5477be7432d0 | demo2 | ACTIVE | -          | Running     | private=10.0.0.13, 2001:db8:8000:0:f816:3eff:fef6:58d9 |\n+--------------------------------------+-------+--------+------------+-------------+--------------------------------------------------------+\n\nWe're correctly recording that 2 vCPUs are used against the compute node\n\n$ nova hypervisor-show 1 | grep vcpus\n| vcpus                     | 12                                       |\n| vcpus_used                | 2                                        |\n\nbut when reporting the hypervisors view of available vCPUs the value never lowers from 12. eg it should be reporting 10, but it reports 12:\n\n$ grep 'Hypervisor: free VCPUs' ../logs/n-cpu.log | tail\n2016-11-03 11:17:24.003 19647 DEBUG nova.compute.resource_tracker [req-559dcffd-b4c8-494b-b1f2-f936346132cf - -] Hypervisor: free VCPUs: 12 _report_hypervisor_resource_view /home/ds-f23-master/openstack/nova/nova/compute/resource_tracker.py:623\n\n\nThe resource tracker ignores the vcpus_used value reported by the hypervisor (which is arguably a bug in itself, because it causes it to incorrectly over-count QEMU CPU usage), but at least it means it is not affected by this libvirt bug - it merely causes mis-leading log messages to be emitted. None the less we should fix the libvirt reporting so that it is possible to have resource tracker honour this data in the future.", 
            "date_created": "2016-11-03 11:31:23.420540+00:00", 
            "author": "https://api.launchpad.net/1.0/~berrange"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/393254", 
            "date_created": "2016-11-03 11:37:48.143539+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/393254\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=2fdab3b922b0d99f415902462de967a910a6594b\nSubmitter: Jenkins\nBranch:    master\n\ncommit 2fdab3b922b0d99f415902462de967a910a6594b\nAuthor: Daniel P. Berrange <email address hidden>\nDate:   Wed Nov 2 14:46:06 2016 +0000\n\n    libvirt: fix vCPU usage reporing for LXC/QEMU guests\n    \n    Currently if Nova is using the libvirt LXC driver, it is\n    hardcoded to report 1 vCPU used on the host, regardless\n    of how many containers are running.\n    \n    Meanwhile for QEMU (aka TCG) guests, the guest.get_vcpu_info\n    method is throwing an exception, since QEMU does not use\n    a dedicated thread per vCPU currently. The effect is that\n    on QEMU hosts, we're reporting 0 vCPUs used on the host\n    regardless of how many guests are running\n    \n    This causes the 'get_available_resources' method to report\n    incorrect 'vcpus_used' values for the compute node. By a\n    stroke of luck, the resource tracker merely logs this\n    value and then throws it away, instead counting vcpu\n    usage based on vcpus declared against the flavour.  Now\n    ignoring the hypervisor reported data is arguably a bug\n    in the resource tracker, because it means it is overcounting\n    resource consumption for plain QEMU guests (they can only\n    ever consume 1 pCPU of time, regardless of vCPU count).\n    Fixing the resource tracker is out of scope for now, but\n    we should at least ensure we're reporting accurate data\n    to it, even if it is only used for logging at this time.\n    \n    If a host does not report detailed vCPU usage from libvirt\n    then we should default to reporting 1 vCPU per guest, so\n    that the 'vcpus_used' field reports some reasonably\n    meaningful data on host CPU usage.\n    \n    Closes-bug: #1638889\n    Change-Id: I627d30d61f8ead6211f78a1c79ffd79b81333f86\n", 
            "date_created": "2017-01-27 11:38:31.697039+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/nova 15.0.0.0rc1 release candidate.", 
            "date_created": "2017-02-03 19:08:28.752170+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}