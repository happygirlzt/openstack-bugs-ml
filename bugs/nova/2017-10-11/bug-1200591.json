{
    "status": "Fix Released", 
    "last_updated": "2014-10-16 08:28:27.335173+00:00", 
    "description": "As of now only XenAPI failures are retried in the upload_image method (for the glance_num_retries ).\nWe need to retry on \"error: [Errno 104] Connection reset by peer\".", 
    "tags": [
        "xenserver"
    ], 
    "importance": "Medium", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1200591", 
    "owner": "None", 
    "id": 1200591, 
    "index": 3484, 
    "created": "2013-07-12 11:09:46.589077+00:00", 
    "title": "virt xenapi driver does not retry upload_image on a socket error", 
    "comments": [
        {
            "content": "As of now only XenAPI failures are retried in the upload_image method (for the glance_num_retries ).\nWe need to retry on \"error: [Errno 104] Connection reset by peer\".", 
            "date_created": "2013-07-12 11:09:46.589077+00:00", 
            "author": "https://api.launchpad.net/1.0/~sridevik"
        }, 
        {
            "content": "Need a bit more detail on where that error occurs, and who gets what errors. It would be good to get a stack trace from nova-compute, and ideally the glance entries in the XenServer dom0 log.\n\nThere is some agressive retry logic around the upload_image, just wondering if _any_ retries occur in this case?", 
            "date_created": "2013-07-15 12:55:23.239480+00:00", 
            "author": "https://api.launchpad.net/1.0/~johngarbutt"
        }, 
        {
            "content": "I don't think we have seen this recently. Lets close this out for now, and keep watching.", 
            "date_created": "2013-09-20 07:56:04.337299+00:00", 
            "author": "https://api.launchpad.net/1.0/~johngarbutt"
        }, 
        {
            "content": "The retry code does not check for this:\n\n2014-04-19 00:37:39.354 13204 ERROR nova.compute.manager [req-e7e92354-6e42-4955-9519-08a65872372d XXXX YYYY]\n                     [instance: 7a2b7c97-f793-4666-888d-430dXXXXXXX] Error: [Errno 104] Connection reset by peer\n\nin xenapi/client/session.py:\n\n    def _is_retryable_exception(self, exc, fn):\n        _type, method, error = exc.details[:3]\n        if error == 'RetryableError':\n            LOG.debug(_(\"RetryableError, so retrying %(fn)s\"), {'fn': fn},\n                      exc_info=True)\n            return True\n        elif \"signal\" in method:\n            LOG.debug(_(\"Error due to a signal, retrying %(fn)s\"), {'fn': fn},\n                      exc_info=True)\n            return True\n        else:\n            return False", 
            "date_created": "2014-04-19 02:00:12.851166+00:00", 
            "author": "https://api.launchpad.net/1.0/~cbehrens"
        }, 
        {
            "content": "After looking at some logs for this it seems that the connection reset is between compute and xapi not between xen and glance which is where I initially thought it was.  As John mentioned there is aggressive retry logic in the xapi plugin, where essentially any failure causes a retry.", 
            "date_created": "2014-04-21 15:25:09.471800+00:00", 
            "author": "https://api.launchpad.net/1.0/~alaski"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/89406\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=69c9f41266e4353dfacc1cc28f1b80e948578e50\nSubmitter: Jenkins\nBranch:    master\n\ncommit 69c9f41266e4353dfacc1cc28f1b80e948578e50\nAuthor: Andrew Laski <email address hidden>\nDate:   Mon Apr 21 15:17:44 2014 -0400\n\n    Xen: Retry plugin call after connection reset\n    \n    When using the call_plugin_serialized_with_retry session method it will\n    retry if the plugin raises a RetryableError, but not if it loses the\n    connection to xenapi.  This adds a retry for the 'Connection reset by\n    peer' error that is occasionally seen.\n    \n    Change-Id: Ibb36a0170e0e807ad7a4198df7b6e574c4279bed\n    Closes-Bug: #1200591\n", 
            "date_created": "2014-04-23 15:55:15.235903+00:00", 
            "author": "https://api.launchpad.net/1.0/~openstack-gerrit"
        }
    ]
}