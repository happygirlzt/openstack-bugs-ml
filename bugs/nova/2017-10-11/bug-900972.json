{
    "status": "Invalid", 
    "last_updated": "2013-05-18 16:05:33.361590+00:00", 
    "description": "I ran an instance of oneiric and ran LIBVIRT_TYPE=lxc for devstack.\n\nWhen I ran an instance, of http://smoser.brickies.net/ubuntu/ttylinux-uec/ttylinux-uec-amd64-11.2_2.6.35-15_1.tar.gz , the console output of the instance came to the devstack screen's 0th window.\n\nI'm guessing that the ttylinux image is doing something less than ideal, but it should not really have access to that resource.\n\nI'm attaching the output from screen 0' window as I saw it.\n\nNote the messages from the lxc guest.", 
    "tags": [], 
    "importance": "Undecided", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/900972", 
    "owner": "None", 
    "id": 900972, 
    "index": 2417, 
    "created": "2011-12-06 22:18:11.276271+00:00", 
    "title": "lxc instance console output spewed to stdout", 
    "comments": [
        {
            "content": "I ran an instance of oneiric and ran LIBVIRT_TYPE=lxc for devstack.\n\nWhen I ran an instance, the console output of the instance came to the devstack screen's 0th window.\n\nI'm guessing that the ttylinux image is doing something less than ideal, but it should not really have access to that resource.\n\n\nI'm attaching the output from screen 0' window as I saw it.\n\nNote the messages from the lxc guest.", 
            "date_created": "2011-12-06 22:18:11.276271+00:00", 
            "author": "https://api.launchpad.net/1.0/~smoser"
        }, 
        {
            "content": "", 
            "date_created": "2011-12-06 22:18:11.276271+00:00", 
            "author": "https://api.launchpad.net/1.0/~smoser"
        }, 
        {
            "content": "Not sure I understand correctly... What would be the desired behavior ?  Devstack should ignore stuff ? Nova should filter the libvirt console ?", 
            "date_created": "2011-12-21 13:28:41.751426+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "devstack is not relevant here.  The issue is that from inside the guest, you can write to what is /dev/pts/0 (or some pts) that you should not have access to. \n\nThe console that I typed 'run-instances' on was just a console, sitting there at a prompt.  It wasn't the console that nova-compute was run on (or any other remotely relevant console).  Its *probably* pts/0 but i'd have to check that.\n\n", 
            "date_created": "2011-12-21 14:05:22.817439+00:00", 
            "author": "https://api.launchpad.net/1.0/~smoser"
        }, 
        {
            "content": "Got it. Looks like some LXC isolation issue though, more than a Nova thing ?", 
            "date_created": "2011-12-21 14:15:30.726854+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "I haven't yet looked back at your image, but I think this has to do with devtmpfs being mounted.\n\nI do believe this affects both lxc and libvirt (+lxc), but your reproduction of it happens with libvirt, right?\n\nThe tool creating containers (lxc or libvirt) has to mount a private instance of devpts on /dev/pts, after unmounting the host's version.  After that, every subsequent mount of devpts will be the private instance.\n\nSo what I need to figure out is where does the /dev/pts/0 from the host's devpts instance come from?\n", 
            "date_created": "2011-12-22 14:42:06.659052+00:00", 
            "author": "https://api.launchpad.net/1.0/~serge-hallyn"
        }, 
        {
            "content": "No, i can't reproduce this with lxc.", 
            "date_created": "2011-12-22 17:16:23.034075+00:00", 
            "author": "https://api.launchpad.net/1.0/~serge-hallyn"
        }, 
        {
            "content": "Hm, right now I'm not seeing it with libvirt either.", 
            "date_created": "2011-12-22 17:18:13.716012+00:00", 
            "author": "https://api.launchpad.net/1.0/~serge-hallyn"
        }, 
        {
            "content": "Scott, what release is this on?  Can you tell me exactly how you triggered it?", 
            "date_created": "2011-12-22 17:22:02.275569+00:00", 
            "author": "https://api.launchpad.net/1.0/~serge-hallyn"
        }, 
        {
            "content": "devstack fails to install for me:\n\n2011-12-22 18:32:12,674 INFO migrate.versioning.api [-] 63 -> 64... \n2011-12-22 18:32:12,684 ERROR nova [-] foreign key constraint couldn't be removed\n2011-12-22 18:32:12,684 DEBUG migrate.versioning.util [-] Disposing SQLAlchemy engine Engine(mysql://root:none@localhost/nova) from (pid=32095) with_engine /usr/lib/python2.7/dist-packages/migrate/versioning/util/__init__.py:162\n2011-12-22 18:32:12,685 CRITICAL nova [-] list index out of range\n(nova): TRACE: Traceback (most recent call last):\n(nova): TRACE:   File \"/opt/stack/nova/bin/nova-manage\", line 2336, in <module>\n(nova): TRACE:     main()\n(nova): TRACE:   File \"/opt/stack/nova/bin/nova-manage\", line 2324, in main\n(nova): TRACE:     fn(*fn_args, **fn_kwargs)\n(nova): TRACE:   File \"/opt/stack/nova/bin/nova-manage\", line 1161, in sync\n(nova): TRACE:     return migration.db_sync(version)\n(nova): TRACE:   File \"/opt/stack/nova/nova/db/migration.py\", line 35, in db_sync\n(nova): TRACE:     return IMPL.db_sync(version=version)\n(nova): TRACE:   File \"/opt/stack/nova/nova/db/sqlalchemy/migration.py\", line 51, in db_sync\n(nova): TRACE:     return versioning_api.upgrade(FLAGS.sql_connection, repo_path, version)\n(nova): TRACE:   File \"/usr/lib/python2.7/dist-packages/migrate/versioning/api.py\", line 186, in upgrade\n(nova): TRACE:     return _migrate(url, repository, version, upgrade=True, err=err, **opts)\n(nova): TRACE:   File \"<string>\", line 2, in _migrate\n(nova): TRACE:   File \"/usr/lib/python2.7/dist-packages/migrate/versioning/util/__init__.py\", line 159, in with_engine\n(nova): TRACE:     return f(*a, **kw)\n(nova): TRACE:   File \"/usr/lib/python2.7/dist-packages/migrate/versioning/api.py\", line 365, in _migrate\n(nova): TRACE:     schema.runchange(ver, change, changeset.step)\n(nova): TRACE:   File \"/usr/lib/python2.7/dist-packages/migrate/versioning/schema.py\", line 91, in runchange\n(nova): TRACE:     change.run(self.engine, step)\n(nova): TRACE:   File \"/usr/lib/python2.7/dist-packages/migrate/versioning/script/py.py\", line 145, in run\n(nova): TRACE:     script_func(engine)\n(nova): TRACE:   File \"/opt/stack/nova/nova/db/sqlalchemy/migrate_repo/versions/064_change_instance_id_to_uuid_in_instance_actions.py\", line 55, in upgrade\n(nova): TRACE:     fkey_name = list(instance_actions.c.instance_id.foreign_keys)[0].\\\n(nova): TRACE: IndexError: list index out of range\n(nova): TRACE: \nCommand failed, please check log for more info\n++ failed\n++ local r=1\n++ set +o xtrace\nstack.sh failed: full log in /home/ubuntu/devstack/stack.sh.31435.log\n+ for ret in '\"${PIPESTATUS[@]}\"'\n+ '[' 1 -eq 0 ']'\n+ exit 1\n\n\nHowever I can reproduce this on oneiric (but not precise) with just libvirt.", 
            "date_created": "2011-12-22 18:33:47.560393+00:00", 
            "author": "https://api.launchpad.net/1.0/~serge-hallyn"
        }, 
        {
            "content": "Adding 'newinstance' to the mount options in /etc/fstab in the brickies rootfs works around this bug.  Changing the priority to low to reflect the workaround exists.\n\nOf course this nevertheless shouldn't be happening.  libvirt mounts a devpts newinstance and that should be used in the container.", 
            "date_created": "2011-12-22 20:19:57.832908+00:00", 
            "author": "https://api.launchpad.net/1.0/~serge-hallyn"
        }, 
        {
            "content": "On oneiric, looking at /proc/pid/root/dev/pts for a task in the container shows the host's devpts.  On precise it shows a private one.  Need to pinpoint the patch which fixed that.", 
            "date_created": "2011-12-22 20:29:52.707697+00:00", 
            "author": "https://api.launchpad.net/1.0/~serge-hallyn"
        }, 
        {
            "content": "a couple things.\na.) I can't seem to reproduce this on precise at the moment.  I've used the attached devstack user-data on a stock ubuntu cloud image and then run an instance insdie the screen with 'euca-run-instances'.  I think that is what previously was failing, but I'm not sure.\nb.) calling it low because a workaround exists is invalid.  There is a bug in the hypervisor (lxc), working around by modifying guests means you can't run certain guests.", 
            "date_created": "2011-12-22 20:32:06.841643+00:00", 
            "author": "https://api.launchpad.net/1.0/~smoser"
        }, 
        {
            "content": "\"calling it low because a workaround exists is invalid\"\n\nAre you saying you consider this an invalid workaround?  If so please feel free to change it back to medium.  If not, then your opinion disagrees with the community docs (https://wiki.ubuntu.com/Bugs/Importance).\n\nI'm not saying this isn't a bug or shouldn't be fixed.  I'm saying that it is a lower priority than a bug which can't be fixed by tweaking the guest image.\n", 
            "date_created": "2011-12-22 20:52:40.992414+00:00", 
            "author": "https://api.launchpad.net/1.0/~serge-hallyn"
        }, 
        {
            "content": "On Thu, 22 Dec 2011, Serge Hallyn wrote:\n\n> \"calling it low because a workaround exists is invalid\"\n>\n> Are you saying you consider this an invalid workaround?  If so please\n> feel free to change it back to medium.  If not, then your opinion\n> disagrees with the community docs\n> (https://wiki.ubuntu.com/Bugs/Importance).\n\nMostly I'm just complaining.\nBut, from my perspective, saying \"guest can be modified\" is not a\nvalid response for lxc if you actually want lxc to be useful, especially\nin openstack.  There will of course be some limitations for lxc on\nopenstack, but assuming people are willing to modify guests that work\nperfectly well other places explicitly to fit inside lxc is not\nreasonable.\n\nSo, i'd consider \"modify guest to fit your hardware\" comment here, very\nsimilar to \"install windows to make your hardware work\".\n\n(yes, i reallize its completely unreasonable, but if you want \"lxc\neverywhere\", stuff has to \"just work\").\n", 
            "date_created": "2011-12-23 15:24:41+00:00", 
            "author": "https://api.launchpad.net/1.0/~smoser"
        }, 
        {
            "content": "I see no reason in a debdiff why it would be fixed in precise.  Will try precise's libvirt built on oneiric.\n\nRegarding modified guests, note:\n\nfor 11.04, the goal was to run unmodified ubuntu images, but with lxc-guest\n\tinstalled, in containers.\n\nfor 12.04, the goal is to run unmodified ubuntu precise images with no extra\n\tpackages needed.\n\nHowever, 'running any unmodified image' in a container is not a realistic\ngoal for 12.04.  But, for simple guests like yours, it certainly should be\nworking.\n", 
            "date_created": "2012-01-03 19:31:02.757628+00:00", 
            "author": "https://api.launchpad.net/1.0/~serge-hallyn"
        }, 
        {
            "content": "the kernel's devpts newinstance support is more limited than I remembered.  When you do 'mount -t devpts -o newinstance devpts /dev/pts; mount -t devpts devpts2 /mnt', then the second devpts mount under /mnt will be the global kernel instance, not the last instance you mounted with newinstance.\n\nI'm not sure yet why precise isn't exhibiting this behavior.  It would seem to be a neat trick, and whatever is stopping this from happening through the fstab entry in precise, in general the guest cannot be stopped from doing this (without LSM or user namespace interference).\n", 
            "date_created": "2012-01-03 22:25:33.697354+00:00", 
            "author": "https://api.launchpad.net/1.0/~serge-hallyn"
        }, 
        {
            "content": "I've instrumented libvirt from both oneiric and precise, both on a precise server, to print out all of the mount activity performed during container creation, and print out /proc/mounts and /proc/self/mountinfo right before the container's /sbin/init is exec'd.  Following is the result.  'XXX' is mount activity in the oneiric version, 'YYY' is mount activity in the precise version.  /proc/mounts and /proc/self/mountinfo are prefixed with 'AAA' for oneiric and 'BBB' for precise.\n\nI don't see any meaningful difference.  I'll summarize in a new comment.\n\n=====================================================\n00:13:29.994: 1: debug : lxcContainerPivotRoot:323 : XXX made / MS_PRIVATE\n00:13:29.994: 1: debug : lxcContainerPivotRoot:345 : XXX mounted tmprootfs onto /home/ubuntu/rootfs/.oldroot type tmpfs\n00:13:29.994: 1: debug : lxcContainerPivotRoot:367 : XXX bind-mounted /home/ubuntu/rootfs onto /home/ubuntu/rootfs/.oldroot/new\n00:13:29.994: 1: debug : lxcContainerPivotRoot:384 : XXX pivot-rooted . to .oldroot\n00:13:29.994: 1: debug : lxcContainerMountBasicFS:435 : XXX mounted devfs on /dev type tmpfs\n00:13:29.994: 1: debug : lxcContainerMountBasicFS:435 : XXX mounted /proc on /proc type proc\n00:13:29.994: 1: debug : lxcContainerMountBasicFS:435 : XXX mounted /sys on /sys type sysfs\n00:13:29.994: 1: debug : lxcContainerMountBasicFS:450 : XXX mounted /.oldroot/home/ubuntu/rootfs/dev/pts on /dev/pts (MS_MOVE)\n00:13:29.994: 1: debug : lxcContainerPopulateDevices:502 : XXX bind-mounted /dev/pts/ptmx on /dev/ptmx\n00:13:29.994: 1: debug : lxcContainerPopulateDevices:514 : XXX sym-linked /dev/tty1 to /dev/pts/0\n00:13:29.994: 1: debug : lxcContainerPopulateDevices:520 : XXX sym-linked /dev/console to /dev/pts/0\n00:13:29.994: 1: debug : lxcContainerUnmountOldFS:610 : XXX unmounted /.oldroot/sys/kernel/security\n00:13:29.994: 1: debug : lxcContainerUnmountOldFS:610 : XXX unmounted /.oldroot/sys/kernel/debug\n00:13:29.994: 1: debug : lxcContainerUnmountOldFS:610 : XXX unmounted /.oldroot/sys/fs/fuse/connections\n00:13:29.994: 1: debug : lxcContainerUnmountOldFS:610 : XXX unmounted /.oldroot/sys/fs/cgroup/perf_event\n00:13:29.994: 1: debug : lxcContainerUnmountOldFS:610 : XXX unmounted /.oldroot/sys/fs/cgroup/net_cls\n00:13:29.994: 1: debug : lxcContainerUnmountOldFS:610 : XXX unmounted /.oldroot/sys/fs/cgroup/memory\n00:13:29.994: 1: debug : lxcContainerUnmountOldFS:610 : XXX unmounted /.oldroot/sys/fs/cgroup/freezer\n00:13:29.994: 1: debug : lxcContainerUnmountOldFS:610 : XXX unmounted /.oldroot/sys/fs/cgroup/devices\n00:13:29.994: 1: debug : lxcContainerUnmountOldFS:610 : XXX unmounted /.oldroot/sys/fs/cgroup/cpuset\n00:13:29.994: 1: debug : lxcContainerUnmountOldFS:610 : XXX unmounted /.oldroot/sys/fs/cgroup/cpuacct\n00:13:29.995: 1: debug : lxcContainerUnmountOldFS:610 : XXX unmounted /.oldroot/sys/fs/cgroup/cpu\n00:13:29.995: 1: debug : lxcContainerUnmountOldFS:610 : XXX unmounted /.oldroot/sys/fs/cgroup/blkio\n00:13:29.995: 1: debug : lxcContainerUnmountOldFS:610 : XXX unmounted /.oldroot/sys/fs/cgroup\n00:13:29.995: 1: debug : lxcContainerUnmountOldFS:610 : XXX unmounted /.oldroot/sys\n00:13:29.995: 1: debug : lxcContainerUnmountOldFS:610 : XXX unmounted /.oldroot/run/shm\n00:13:29.995: 1: debug : lxcContainerUnmountOldFS:610 : XXX unmounted /.oldroot/run/lock\n00:13:29.995: 1: debug : lxcContainerUnmountOldFS:610 : XXX unmounted /.oldroot/run\n00:13:29.995: 1: debug : lxcContainerUnmountOldFS:610 : XXX unmounted /.oldroot/proc\n00:13:29.995: 1: debug : lxcContainerUnmountOldFS:610 : XXX unmounted /.oldroot/mnt\n00:13:29.995: 1: debug : lxcContainerUnmountOldFS:610 : XXX unmounted /.oldroot/home/ubuntu/rootfs/.oldroot\n00:13:29.995: 1: debug : lxcContainerUnmountOldFS:610 : XXX unmounted /.oldroot/dev/pts\n00:13:29.995: 1: debug : lxcContainerUnmountOldFS:610 : XXX unmounted /.oldroot/dev\n00:13:29.995: 1: debug : lxcContainerUnmountOldFS:610 : XXX unmounted /.oldroot\n00:13:29.997: 1: debug : lxcContainerUnmountOldFS:610 : XXX unmounted /.oldroot\n=====================================================\n\n=====================================================\n2012-01-06 03:13:44.156: 1: debug : lxcContainerPivotRoot:337 : YYY made / MS_PRIVATE\n2012-01-06 03:13:44.156: 1: debug : lxcContainerPivotRoot:359 : YYY mounted tmprootfs onto /home/ubuntu/rootfs/.oldroot type tmpfs\n2012-01-06 03:13:44.156: 1: debug : lxcContainerPivotRoot:381 : YYY recursive bind-mounted /home/ubuntu/rootfs onto /home/ubuntu/rootfs/.oldroot/new\n2012-01-06 03:13:44.156: 1: debug : lxcContainerPivotRoot:408 : YYY pivot-rooted . to .oldroot\n2012-01-06 03:13:44.156: 1: debug : lxcContainerMountBasicFS:494 : YYY mounted devfs onto /dev type tmpfs\n2012-01-06 03:13:44.156: 1: debug : lxcContainerMountBasicFS:494 : YYY mounted proc onto /proc type proc\n2012-01-06 03:13:44.156: 1: debug : lxcContainerMountBasicFS:494 : YYY mounted /proc/sys onto /proc/sys type (null)\n2012-01-06 03:13:44.156: 1: debug : lxcContainerMountBasicFS:494 : YYY mounted /proc/sys onto /proc/sys type (null)\n2012-01-06 03:13:44.156: 1: debug : lxcContainerMountBasicFS:494 : YYY mounted /.oldroot/sys onto /sys type (null)\n2012-01-06 03:13:44.156: 1: debug : lxcContainerMountBasicFS:494 : YYY mounted /.oldroot/sys onto /sys type (null)\n2012-01-06 03:13:44.156: 1: debug : lxcContainerMountBasicFS:494 : YYY mounted /.oldroot/selinux onto /selinux type (null)\n2012-01-06 03:13:44.156: 1: debug : lxcContainerMountBasicFS:494 : YYY mounted /.oldroot/selinux onto /selinux type (null)\n2012-01-06 03:13:44.156: 1: debug : lxcContainerMountDevFS:528 : YYY move-mounted /.oldroot/home/ubuntu/rootfs/dev/pts onto /dev/pts\n2012-01-06 03:13:44.157: 1: debug : lxcContainerPopulateDevices:580 : YYY mounted /dev/pts/ptmx onto /dev/ptmx\n2012-01-06 03:13:44.158: 1: debug : lxcContainerUnmountOldFS:1033 : YYY umounted /.oldroot/sys/kernel/security\n2012-01-06 03:13:44.158: 1: debug : lxcContainerUnmountOldFS:1033 : YYY umounted /.oldroot/sys/kernel/debug\n2012-01-06 03:13:44.158: 1: debug : lxcContainerUnmountOldFS:1033 : YYY umounted /.oldroot/sys/fs/fuse/connections\n2012-01-06 03:13:44.158: 1: debug : lxcContainerUnmountOldFS:1033 : YYY umounted /.oldroot/sys/fs/cgroup/perf_event\n2012-01-06 03:13:44.158: 1: debug : lxcContainerUnmountOldFS:1033 : YYY umounted /.oldroot/sys/fs/cgroup/net_cls\n2012-01-06 03:13:44.158: 1: debug : lxcContainerUnmountOldFS:1033 : YYY umounted /.oldroot/sys/fs/cgroup/memory\n2012-01-06 03:13:44.158: 1: debug : lxcContainerUnmountOldFS:1033 : YYY umounted /.oldroot/sys/fs/cgroup/freezer\n2012-01-06 03:13:44.158: 1: debug : lxcContainerUnmountOldFS:1033 : YYY umounted /.oldroot/sys/fs/cgroup/devices\n2012-01-06 03:13:44.158: 1: debug : lxcContainerUnmountOldFS:1033 : YYY umounted /.oldroot/sys/fs/cgroup/cpuset\n2012-01-06 03:13:44.158: 1: debug : lxcContainerUnmountOldFS:1033 : YYY umounted /.oldroot/sys/fs/cgroup/cpuacct\n2012-01-06 03:13:44.158: 1: debug : lxcContainerUnmountOldFS:1033 : YYY umounted /.oldroot/sys/fs/cgroup/cpu\n2012-01-06 03:13:44.158: 1: debug : lxcContainerUnmountOldFS:1033 : YYY umounted /.oldroot/sys/fs/cgroup/blkio\n2012-01-06 03:13:44.158: 1: debug : lxcContainerUnmountOldFS:1033 : YYY umounted /.oldroot/sys/fs/cgroup\n2012-01-06 03:13:44.158: 1: debug : lxcContainerUnmountOldFS:1033 : YYY umounted /.oldroot/sys\n2012-01-06 03:13:44.158: 1: debug : lxcContainerUnmountOldFS:1033 : YYY umounted /.oldroot/run/shm\n2012-01-06 03:13:44.158: 1: debug : lxcContainerUnmountOldFS:1033 : YYY umounted /.oldroot/run/lock\n2012-01-06 03:13:44.158: 1: debug : lxcContainerUnmountOldFS:1033 : YYY umounted /.oldroot/run\n2012-01-06 03:13:44.158: 1: debug : lxcContainerUnmountOldFS:1033 : YYY umounted /.oldroot/proc\n2012-01-06 03:13:44.158: 1: debug : lxcContainerUnmountOldFS:1033 : YYY umounted /.oldroot/mnt\n2012-01-06 03:13:44.158: 1: debug : lxcContainerUnmountOldFS:1033 : YYY umounted /.oldroot/home/ubuntu/rootfs/.oldroot\n2012-01-06 03:13:44.158: 1: debug : lxcContainerUnmountOldFS:1033 : YYY umounted /.oldroot/dev/pts\n2012-01-06 03:13:44.158: 1: debug : lxcContainerUnmountOldFS:1033 : YYY umounted /.oldroot/dev\n2012-01-06 03:13:44.158: 1: debug : lxcContainerUnmountOldFS:1033 : YYY umounted /.oldroot\n2012-01-06 03:13:44.165: 1: debug : lxcContainerUnmountOldFS:1033 : YYY umounted /.oldroot\n=====================================================\n\n=====================================================\nAAA before container init exec, /proc/mounts has:\n  AAA rootfs / rootfs rw 0 0\n\n  AAA devpts /dev/pts devpts rw,relatime,gid=5,mode=620,ptmxmode=666 0 0\n\n  AAA /dev/disk/by-label/cloudimg-rootfs / ext4 rw,relatime,user_xattr,barrier=1,data=ordered 0 0\n\n  AAA devpts /dev/pts devpts rw,relatime,gid=5,mode=620,ptmxmode=666 0 0\n\n  AAA /dev /dev tmpfs rw,relatime 0 0\n\n  AAA /proc /proc proc rw,relatime 0 0\n\n  AAA /sys /sys sysfs rw,relatime 0 0\n\n  AAA devpts /dev/ptmx devpts rw,relatime,gid=5,mode=620,ptmxmode=666 0 0\n\nAAA before container init exec, /proc/self/mountinfo has:\n  AAA 84 91 0:29 / /dev/pts rw,relatime - devpts devpts rw,gid=5,mode=620,ptmxmode=666\n\n  AAA 88 61 253:1 /home/ubuntu/rootfs / rw,relatime - ext4 /dev/disk/by-label/cloudimg-rootfs rw,user_xattr,barrier=1,data=ordered\n\n  AAA 89 88 0:29 / /dev/pts rw,relatime - devpts devpts rw,gid=5,mode=620,ptmxmode=666\n\n  AAA 91 88 0:33 / /dev rw,relatime - tmpfs /dev rw\n\n  AAA 92 88 0:31 / /proc rw,relatime - proc /proc rw\n\n  AAA 93 88 0:34 / /sys rw,relatime - sysfs /sys rw\n\n  AAA 94 91 0:29 /ptmx /dev/ptmx rw,relatime - devpts devpts rw,gid=5,mode=620,ptmxmode=666\n=====================================================\n\n=====================================================\nBBB before container init exec, /proc/mounts has:\n  BBB rootfs / rootfs rw 0 0\n\n  BBB devpts /dev/pts devpts rw,relatime,gid=5,mode=620,ptmxmode=666 0 0\n\n  BBB /dev/disk/by-label/cloudimg-rootfs / ext4 rw,relatime,user_xattr,barrier=1,data=ordered 0 0\n\n  BBB devpts /dev/pts devpts rw,relatime,gid=5,mode=620,ptmxmode=666 0 0\n\n  BBB devfs /dev tmpfs rw,nosuid,relatime,mode=755 0 0\n\n  BBB proc /proc proc rw,nosuid,nodev,noexec,relatime 0 0\n\n  BBB proc /proc/sys proc ro,relatime 0 0\n\n  BBB sysfs /sys sysfs ro,relatime 0 0\n\n  BBB /dev/disk/by-label/cloudimg-rootfs /selinux ext4 ro,relatime,user_xattr,barrier=1,data=ordered 0 0\n\n  BBB devpts /dev/ptmx devpts rw,relatime,gid=5,mode=620,ptmxmode=666 0 0\n\nBBB before container init exec, /proc/self/mountinfo has:\n  BBB 84 91 0:29 / /dev/pts rw,relatime - devpts devpts rw,gid=5,mode=620,ptmxmode=666\n\n  BBB 88 61 253:1 /home/ubuntu/rootfs / rw,relatime - ext4 /dev/disk/by-label/cloudimg-rootfs rw,user_xattr,barrier=1,data=ordered\n\n  BBB 89 88 0:29 / /dev/pts rw,relatime - devpts devpts rw,gid=5,mode=620,ptmxmode=666\n\n  BBB 91 88 0:33 / /dev rw,nosuid,relatime - tmpfs devfs rw,mode=755\n\n  BBB 92 88 0:31 / /proc rw,nosuid,nodev,noexec,relatime - proc proc rw\n\n  BBB 93 92 0:31 /sys /proc/sys ro,relatime - proc proc rw\n\n  BBB 94 88 0:14 / /sys ro,relatime - sysfs sysfs rw\n\n  BBB 95 88 253:1 /selinux /selinux ro,relatime - ext4 /dev/disk/by-label/cloudimg-rootfs rw,user_xattr,barrier=1,data=ordered\n\n  BBB 96 91 0:29 /ptmx /dev/ptmx rw,relatime - devpts devpts rw,gid=5,mode=620,ptmxmode=666\n\n=====================================================\n", 
            "date_created": "2012-01-06 20:03:47.002427+00:00", 
            "author": "https://api.launchpad.net/1.0/~serge-hallyn"
        }, 
        {
            "content": "In summary,\n\nthere are three robust ways this can be solved.\n\nOne would be for the kernel to implement a new (much nicer than the current) semantics, where once a task does 'mount -t devpts -o newinstance', all subsequent devpts mounts (until the next newinstance) mount the new instance.  This woudl be ideal.\n\nThe second is with user namespaces.  The /dev/pts/* will be owned by the user namespace which created it, so a child user namespace won't have access rights.  This won't fix the wrong devpts being mounted, but will prevent access to the ptys themselves.\n\nFinally, it can be handled with the LSMs.  In apparmor, there will soon the ability to specify allowed mount activity by profile.  So we can, after setting up the bulk of the container, switch to a profile not allowing devpts mounts or umounts.  (I hope - I don't recall offhand whether umount is covered).  So if a container tries to mount devpts, through fstab or otherwise, it will be denied.\n\nLastly, note that what I previously suggested as a workaround ,namely adding 'newinstance' to the devpts fstab entry, is not entirely correct as it may prevent getty on /dev/pts/0 from talking to libvirt's end of the console.", 
            "date_created": "2012-01-06 20:10:23.580760+00:00", 
            "author": "https://api.launchpad.net/1.0/~serge-hallyn"
        }, 
        {
            "content": "Marked as affecting the kernel as the ideal solution (solution 1 in comment #18) would be a kernel change.", 
            "date_created": "2012-01-06 20:11:54.586637+00:00", 
            "author": "https://api.launchpad.net/1.0/~serge-hallyn"
        }, 
        {
            "content": "This bug is missing log files that will aid in diagnosing the problem. From a terminal window please run:\n\napport-collect 900972\n\nand then change the status of the bug to 'Confirmed'.\n\nIf, due to the nature of the issue you have encountered, you are unable to run this command, please add a comment stating that fact and change the bug status to 'Confirmed'.\n\nThis change has been made by an automated script, maintained by the Ubuntu Kernel Team.", 
            "date_created": "2012-01-06 20:30:08.680674+00:00", 
            "author": "https://api.launchpad.net/1.0/~brad-figg"
        }
    ]
}