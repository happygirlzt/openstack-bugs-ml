{
    "status": "Opinion", 
    "last_updated": "2015-03-11 18:29:47.489096+00:00", 
    "description": "When we do the long running test, we got instance quota exceeded with many self.driver.spawn errors.\nBecause nova didn't cleanup db record when nova get self.driver.spawn error, then the number of instance reaches to the Quota value with no actual instance.", 
    "tags": [
        "quotas"
    ], 
    "importance": "Medium", 
    "heat": 8, 
    "link": "https://bugs.launchpad.net/nova/+bug/900939", 
    "owner": "https://api.launchpad.net/1.0/~yugsuo", 
    "id": 900939, 
    "index": 2675, 
    "created": "2011-12-06 21:16:37.149354+00:00", 
    "title": "Instance quota exceeded with many self.driver.spawn errors", 
    "comments": [
        {
            "content": "When we do the long running test, we got instance quota exceeded with many self.driver.spawn errors.\nBecause nova didn't cleanup db record when nova get self.driver.spawn error, then the number of instance reaches to the Quota value with no actual instance.", 
            "date_created": "2011-12-06 21:16:37.149354+00:00", 
            "author": "https://api.launchpad.net/1.0/~nati-ueno"
        }, 
        {
            "content": "Hello, I want to ask a question about this issue: \n\nI added \"raise Exception\" before self.driver.spawn() to find this error, like follows:\n\nraise Exception\nself.driver.spawn(context, instance, image_meta,\n                              injected_files, admin_password,\n                              self._legacy_nw_info(network_info),\n                              block_device_info)\n\nthen, I booted a new instance, and got the following result:\n\n$nova list\n+--------------------------------------+-------+--------+----------+\n| ID                                   | Name  | Status | Networks |\n+--------------------------------------+-------+--------+----------+\n| 3da5acb5-4a45-46e6-a80a-519bf43a050a | test1 | ERROR  |          |\n+--------------------------------------+-------+--------+----------+\n\n$ mysql> select resource,in_use from quota_usages;\n+-----------+--------+\n| resource  | in_use |\n+-----------+--------+\n| instances |      1 |\n| ram       |      512 |\n| cores     |      1 |\n+-----------+--------+\n\nthen, I deleted this instance:\n$ nova delete 3da5acb5-4a45-46e6-a80a-519bf43a050a\n\nand the quota_usages is reset to 0 like normally:\n$ mysql> select resource,in_use from quota_usages;\n+-----------+--------+\n| resource  | in_use |\n+-----------+--------+\n| instances |      0 |\n| ram       |      0 |\n| cores     |      0 |\n+-----------+--------+\n\nWhat I want to ask is that it is a bug ?  Even if we got an error instance, but it is still an instance.  After you delete it, the resources belonging to it will be released, and quota_usages table will be normal too. \n\nAm I right ?\n\n\n", 
            "date_created": "2012-12-28 06:40:29.249629+00:00", 
            "author": "https://api.launchpad.net/1.0/~yugsuo"
        }, 
        {
            "content": "If the instance isn't running on the hypervisor when it is in the error state then I feel it shouldn't count towards the quota.", 
            "date_created": "2013-03-09 14:57:43.191239+00:00", 
            "author": "https://api.launchpad.net/1.0/~mikal"
        }, 
        {
            "content": "As a user, I think error instance should not count quota. Because in most case the error instances are not caused by me. It's the system's fault, I just want a health instance to play. Couting the quota means I used the resource in the meantime I should pay for it. But error instance is useless to me that I don't need to pay it.\n", 
            "date_created": "2013-09-05 06:54:02.254350+00:00", 
            "author": "https://api.launchpad.net/1.0/~gtt116"
        }, 
        {
            "content": "OK, thanks, I got it, I will try to fix it.", 
            "date_created": "2013-09-05 12:36:27.264462+00:00", 
            "author": "https://api.launchpad.net/1.0/~yugsuo"
        }, 
        {
            "content": "Error state instances should be counted against the quotas, we don't 100% know the state of what happened so we default to safe. Also having some error state count and some not count is even more confusing.", 
            "date_created": "2015-03-11 18:29:40.360538+00:00", 
            "author": "https://api.launchpad.net/1.0/~jogo"
        }
    ]
}