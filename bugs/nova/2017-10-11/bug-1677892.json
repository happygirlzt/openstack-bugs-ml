{
    "status": "Won't Fix", 
    "last_updated": "2017-07-28 12:22:22.766250+00:00", 
    "description": "im using a Fuel deployed Liberty environment. I have a \"test team\" project and a \"dev team\" project.\n\nI set up an aggregate with metadata \"devhardware = true\". and put some older hypervisors in the aggregate. (this is so the dev team will create instances on the older hardware and the test team will get the newest hardware to test our cloud product on).\n\nI created a flavor that only the dev team will use that also has set:\naggregate_instance_extra_specs: devhardware = true\n\nI added AggregateInstanceExtraSpecsFilter,AggregateMultiTenancyIsolation to the scheduler_default_filters of nova.conf\n\nI could not create an instance using that flavor. Creation would fail:\n\n2017-03-30 16:51:07.670 7773 WARNING nova.scheduler.utils [req-f3e4c44e-2edd-4da0-98ee-265628f2c5c8 e581f58b4ab441f2bb61d3ec9c3bf735 bca6cc5337f44bd089ab4490124b3cff - - -] Failed to compute_task_build_instances: No valid host was found. There are not enough hosts available.\nTraceback (most recent call last):\n\n\u00a0\u00a0File \"/usr/lib/python2.7/dist-packages/oslo_messaging/rpc/server.py\", line 142, in inner\n\u00a0\u00a0\u00a0\u00a0return func(*args, **kwargs)\n\n\u00a0\u00a0File \"/usr/lib/python2.7/dist-packages/nova/scheduler/manager.py\", line 84, in select_destinations\n\u00a0\u00a0\u00a0\u00a0filter_properties)\n\n\u00a0\u00a0File \"/usr/lib/python2.7/dist-packages/nova/scheduler/filter_scheduler.py\", line 90, in select_destinations\n\u00a0\u00a0\u00a0\u00a0raise exception.NoValidHost(reason=reason)\n\nNoValidHost: No valid host was found. There are not enough hosts available.\n\n2017-03-30 16:51:07.671 7773 WARNING nova.scheduler.utils [req-f3e4c44e-2edd-4da0-98ee-265628f2c5c8 e581f58b4ab441f2bb61d3ec9c3bf735 bca6cc5337f44bd089ab4490124b3cff - - -] [instance: b430ff72-4d52-4768-ae75-8ddd06b31337] Setting instance to ERROR state.\n\nBut once I removed ComputeCapabilitiesFilter from scheduler_default_filters on nova.conf (which seems was there by default) I could create instances with that flavor!! (and they correctly were only created on the hypervisors in the aggregate)\n\nscheduler_default_filters=AggregateInstanceExtraSpecsFilter,AggregateMultiTenancyIsolation,RetryFilter,AvailabilityZoneFilter,RamFilter,CoreFilter,DiskFilter,ComputeFilter,ImagePropertiesFilter,ServerGroupAntiAffinityFilter,ServerGroupAffinityFilter\n\n#scheduler_default_filters=AggregateInstanceExtraSpecsFilter,AggregateMultiTenancyIsolation,RetryFilter,AvailabilityZoneFilter,RamFilter,CoreFilter,DiskFilter,ComputeFilter,ComputeCapabilitiesFilter,ImagePropertiesFilter,ServerGroupAntiAffinityFilter,ServerGroupAffinityFilter\n\nseems like a bug, but what do I know... thanks!", 
    "tags": [
        "aggregate", 
        "aggregateinstanceextraspecsfilter", 
        "aggregatemultitenancyisolation", 
        "computecapabilitiesfilter", 
        "error"
    ], 
    "importance": "Undecided", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1677892", 
    "owner": "None", 
    "id": 1677892, 
    "index": 6765, 
    "created": "2017-03-30 22:21:07.839069+00:00", 
    "title": "nova scheduler_default_filter ComputeCapabilities filter breaks other filters", 
    "comments": [
        {
            "content": "im using a Fuel deployed Liberty environment. I have a \"test team\" project and a \"dev team\" project.\n\nI set up an aggregate with metadata \"devhardware = true\". and put some older hypervisors in the aggregate. (this is so the dev team will create instances on the older hardware and the test team will get the newest hardware to test our cloud product on). \n\nI created a flavor that only the dev team will use that also has set:\naggregate_instance_extra_specs: devhardware = true\n\n\nI added AggregateInstanceExtraSpecsFilter,AggregateMultiTenancyIsolation to the scheduler_default_filters of nova.conf\n\n\n\n\nI could not create an instance using that flavor. Creation would fail:\n\n2017-03-30 16:51:07.670 7773 WARNING nova.scheduler.utils [req-f3e4c44e-2edd-4da0-98ee-265628f2c5c8 e581f58b4ab441f2bb61d3ec9c3bf735 bca6cc5337f44bd089ab4490124b3cff - - -] Failed to compute_task_build_instances: No valid host was found. There are not enough hosts available.\nTraceback (most recent call last):\n\n  File \"/usr/lib/python2.7/dist-packages/oslo_messaging/rpc/server.py\", line 142, in inner\n    return func(*args, **kwargs)\n\n  File \"/usr/lib/python2.7/dist-packages/nova/scheduler/manager.py\", line 84, in select_destinations\n    filter_properties)\n\n  File \"/usr/lib/python2.7/dist-packages/nova/scheduler/filter_scheduler.py\", line 90, in select_destinations\n    raise exception.NoValidHost(reason=reason)\n\nNoValidHost: No valid host was found. There are not enough hosts available.\n\n2017-03-30 16:51:07.671 7773 WARNING nova.scheduler.utils [req-f3e4c44e-2edd-4da0-98ee-265628f2c5c8 e581f58b4ab441f2bb61d3ec9c3bf735 bca6cc5337f44bd089ab4490124b3cff - - -] [instance: b430ff72-4d52-4768-ae75-8ddd06b31337] Setting instance to ERROR state.\n\n\n\n\n\n\nBut once I removed ComputeCapabilitiesFilter from scheduler_default_filters on nova.conf (which seems was there by default) I could create instances with that flavor!! (and they correctly were only created on the hypervisors in the aggregate)\n\n\n\nscheduler_default_filters=AggregateInstanceExtraSpecsFilter,AggregateMultiTenancyIsolation,RetryFilter,AvailabilityZoneFilter,RamFilter,CoreFilter,DiskFilter,ComputeFilter,ImagePropertiesFilter,ServerGroupAntiAffinityFilter,ServerGroupAffinityFilter\n\n\n#scheduler_default_filters=AggregateInstanceExtraSpecsFilter,AggregateMultiTenancyIsolation,RetryFilter,AvailabilityZoneFilter,RamFilter,CoreFilter,DiskFilter,ComputeFilter,ComputeCapabilitiesFilter,ImagePropertiesFilter,ServerGroupAntiAffinityFilter,ServerGroupAffinityFilter\n\n\n\nseems like a bug, thanks!", 
            "date_created": "2017-03-30 22:21:07.839069+00:00", 
            "author": "https://api.launchpad.net/1.0/~jokken"
        }, 
        {
            "content": "ugh, so appears I am wrong.\n\nif I had had a better understanding of what I was doing (not entirely my fault) then I would have noticed the warnings in a few spots.\n\nFor backward compatibility, AggregateInstanceExtraSpecsFilter also works with non-scoped specifications; this action is highly discouraged because it conflicts with ComputeCapabilitiesFilter filter when you enable both filters.\n\nSo, I had non-scoped specifications in the flavor metadata. once I removed them and ensured I only had the scoped metadata the AggregateInstanceExtraSpecsFilter and ComputeCapabilitiesFilter filters could be enabled together.\n\nbasically, this mean do this:\n\"nova flavor-key Dev_Flav set aggregate_instance_extra_specs:devhardware=true\"\nand not this:\n\"nova flavor-key Dev_Flav set devhardware=true\"\n\nthis link is one that says this:\nhttps://docs.openstack.org/liberty/config-reference/content/section_compute-scheduler.html\n\nthanks, sry!\n", 
            "date_created": "2017-03-31 20:24:19.212493+00:00", 
            "author": "https://api.launchpad.net/1.0/~jokken"
        }, 
        {
            "content": "\nI think their is similar  bug and solution available. \n\nKindly check these links, and use the provided solution in your system and test it once.\n\nhttps://bugs.launchpad.net/nova/+bug/1582589\n\nhttps://review.openstack.org/#/c/317306/15\n\n", 
            "date_created": "2017-04-13 06:23:56.432081+00:00", 
            "author": "https://api.launchpad.net/1.0/~rsritesh"
        }
    ]
}