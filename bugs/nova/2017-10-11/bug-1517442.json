{
    "status": "Confirmed", 
    "last_updated": "2017-05-18 06:49:12.069638+00:00", 
    "description": "Looking briefly at the code of other drivers that try to report this (xenapi and ironic) - it is also likely broken for at least xenapi.\n\nThe crux of the issue is that resource tracker works by looking at the instances Nova knows about, and also the ongoing migration, so anything that is reported by any of the virt drivers as part of the dictionary returned from get_available_resource should only be based on the available resources and should never try to factor in any resource usage. Only the resource tracker holding the global resource lock (COMPUTE_RESOURCE_SEMAPHORE) knows the current usage of resources since it can take into account migrations that are in flight etc.\n\nUnfortunately, both libvirt and xenapi (I think) try to look at the instance currently know by the hypervisor, which is not all instances we should be taking into account, and deduce the final disk_available_least number.\n\nTo fix this we would have to rework how disk_available least is calculated - we'd have to make sure the drivers only report the total available space, and then make sure we update the usage _for each instance and migration_ to come up with the final number.", 
    "tags": [
        "resource-tracker"
    ], 
    "importance": "High", 
    "heat": 18, 
    "link": "https://bugs.launchpad.net/nova/+bug/1517442", 
    "owner": "None", 
    "id": 1517442, 
    "index": 1840, 
    "created": "2015-11-18 11:58:29.561160+00:00", 
    "title": "instances being migrated are not accounting for disk_available_least", 
    "comments": [
        {
            "content": "Looking briefly at the code of other drivers that try to report this (xenapi and ironic) - it is also likely broken for at least xenapi.\n\nThe crux of the issue is that resource tracker works by looking at the instances Nova knows about, and also the ongoing migration, so anything that is reported by any of the virt drivers as part of the dictionary returned from get_available_resource should only be based on the available resources and should never try to factor in any resource usage. Only the resource tracker holding the global resource lock (COMPUTE_RESOURCE_SEMAPHORE) knows the current usage of resources since it can take into account migrations that are in flight etc.\n\nUnfortunately, both libvirt and xenapi (I think) try to look at the instance currently know by the hypervisor, which is not all instances we should be taking into account, and deduce the final disk_available_least number.\n\nTo fix this we would have to rework how disk_available least is calculated - we'd have to make sure the drivers only report the total available space, and then make sure we update the usage _for each instance and migration_ to come up with the final number.", 
            "date_created": "2015-11-18 11:58:29.561160+00:00", 
            "author": "https://api.launchpad.net/1.0/~ndipanov"
        }, 
        {
            "content": "I believe this should work already for XenAPI? we get the physical utilisation from the SR, not counting up from instances.  VDIs will be created for disks that are being live migrated at the start of the live migration.\n\nhttps://git.openstack.org/cgit/openstack/nova/tree/nova/virt/xenapi/driver.py#n448\nhttps://git.openstack.org/cgit/openstack/nova/tree/nova/virt/xenapi/host.py#n243\n\nWas the issue identifed by inspection or is there a failure case that has been seen?", 
            "date_created": "2015-11-20 11:57:43.829090+00:00", 
            "author": "https://api.launchpad.net/1.0/~bob-ball"
        }, 
        {
            "content": "Awesome - so re-reading I can see it was identified by inspection... Sorry for being blind.  I don't think XenAPI is affected by this.", 
            "date_created": "2015-11-20 11:58:51.258377+00:00", 
            "author": "https://api.launchpad.net/1.0/~bob-ball"
        }, 
        {
            "content": "Hi,\n\nI am new to Openstack .\n\nI just started taking a look at this defect. I understand from the comment above that it's was raised upon code inspection\nand there's a clarification that it's not applicable to xenapi.\n\nSo is this now valid only for libvirt driver and is this defect reproducible for libvirt driver?    Any one able to reproduce it?\n\nPlease let me know.\n\nThanks\nAshraf", 
            "date_created": "2016-02-28 03:22:17.833948+00:00", 
            "author": "https://api.launchpad.net/1.0/~mohammed-asharaf"
        }, 
        {
            "content": "Related fix proposed to branch: master\nReview: https://review.openstack.org/293272", 
            "date_created": "2016-03-16 06:34:31.489965+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Change abandoned by Michael Still (<email address hidden>) on branch: master\nReview: https://review.openstack.org/293272\nReason: Per discussion at the summit (https://etherpad.openstack.org/p/ocata-nova-summit-meetup), we are abandoning Newton specs that haven't merged. You may restore this patch and move it to Ocata if you'd like.", 
            "date_created": "2016-10-28 13:53:34.799530+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Unassigning. This is a real bug, yes. The issue Chris Friesen raised on the related patch (since abandoned) around accounting for the QCOW2 backing file should be tracked as a separate bug.\n\nThis bug is relatively straight-forward, as is the fix: ensure we track migrating instances for disk_available_least calculations.\n\nThe actual patch may be complicated, however, due to various side-effects and virt-driver-specific implementation details.", 
            "date_created": "2017-05-17 08:52:43.822898+00:00", 
            "author": "https://api.launchpad.net/1.0/~jaypipes"
        }
    ]
}