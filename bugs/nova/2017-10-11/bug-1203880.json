{
    "status": "Fix Released", 
    "last_updated": "2013-10-17 12:05:51.289947+00:00", 
    "description": "The previous bug and fix for \"Include error message in instance faults\" (https://bugs.launchpad.net/nova/+bug/1013350) was merged and uses the exceptions kwargs['value'] to try to coerce a readable message out of an exception, but this only applies to very few exceptions. \n\nWe should be using unicode(exception) for the error message, as that is the recommended way of getting an error message from an exception (see http://docs.python.org/2/library/exceptions.html#exceptions.BaseException) since BaseException.args and .message are deprecated as of python 2.6\n\nExample where resolving a message fails:\n\nIn the first example, IOError has no .kwargs or .message attributes, but unicode(exception) yields the message that is the first line in the 'details' item.\n\n| fault                               | {u'message': u'IOError', u'code': 500, u'details': u'[Errno 28] No space left on device     |\n|                                     |   File \"/opt/stack/nova/nova/compute/manager.py\", line 228, in decorated_function           |\n|                                     |     return function(self, context, *args, **kwargs)                                         |\n|                                     |   File \"/opt/stack/nova/nova/compute/manager.py\", line 1668, in rebuild_instance            |\n|                                     |     block_device_info=block_device_info)                                                    |\n|                                     |   File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 1527, in spawn                   |\n|                                     |     admin_pass=admin_password)                                                              |\n|                                     |   File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 1813, in _create_image           |\n|                                     |     project_id=instance[\\'project_id\\'])                                                    |\n|                                     |   File \"/opt/stack/nova/nova/virt/libvirt/imagebackend.py\", line 156, in cache              |\n|                                     |     *args, **kwargs)                                                                        |\n|                                     |   File \"/opt/stack/nova/nova/virt/libvirt/imagebackend.py\", line 254, in create_image       |\n|                                     |     prepare_template(target=base, *args, **kwargs)                                          |\n|                                     |   File \"/opt/stack/nova/nova/openstack/common/lockutils.py\", line 232, in inner             |\n|                                     |     retval = f(*args, **kwargs)                                                             |\n|                                     |   File \"/opt/stack/nova/nova/virt/libvirt/imagebackend.py\", line 144, in call_if_not_exists |\n|                                     |     fetch_func(target=target, *args, **kwargs)                                              |\n|                                     |   File \"/opt/stack/nova/nova/virt/libvirt/utils.py\", line 601, in fetch_image               |\n|                                     |     images.fetch_to_raw(context, image_id, target, user_id, project_id)                     |\n|                                     |   File \"/opt/stack/nova/nova/virt/images.py\", line 207, in fetch_to_raw                     |\n|                                     |     fetch(context, image_href, path_tmp, user_id, project_id)                               |\n|                                     |   File \"/opt/stack/nova/nova/virt/images.py\", line 202, in fetch                            |\n|                                     |     image_service.download(context, image_id, image_file)                                   |\n|                                     |   File \"/opt/stack/nova/nova/image/glance.py\", line 284, in download                        |\n|                                     |     data.write(chunk)", 
    "tags": [], 
    "importance": "Undecided", 
    "heat": 10, 
    "link": "https://bugs.launchpad.net/nova/+bug/1203880", 
    "owner": "https://api.launchpad.net/1.0/~bnemec", 
    "id": 1203880, 
    "index": 3868, 
    "created": "2013-07-22 21:20:09.607497+00:00", 
    "title": "Fix 'Include error message in instance faults' to resolve more messages", 
    "comments": [
        {
            "content": "The previous bug and fix for \"Include error message in instance faults\" (https://bugs.launchpad.net/nova/+bug/1013350) was merged and uses the exceptions kwargs['value'] to try to coerce a readable message out of an exception, but this only applies to very few exceptions. \n\nWe should be using unicode(exception) for the error message, as that is the recommended way of getting an error message from an exception (see http://docs.python.org/2/library/exceptions.html#exceptions.BaseException) since BaseException.args and .message are deprecated as of python 2.6\n\nExample where resolving a message fails:\n\nIn the first example, IOError has no .kwargs or .message attributes, but unicode(exception) yields the message that is the first line in the 'details' item.\n\n| fault                               | {u'message': u'IOError', u'code': 500, u'details': u'[Errno 28] No space left on device     |\n|                                     |   File \"/opt/stack/nova/nova/compute/manager.py\", line 228, in decorated_function           |\n|                                     |     return function(self, context, *args, **kwargs)                                         |\n|                                     |   File \"/opt/stack/nova/nova/compute/manager.py\", line 1668, in rebuild_instance            |\n|                                     |     block_device_info=block_device_info)                                                    |\n|                                     |   File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 1527, in spawn                   |\n|                                     |     admin_pass=admin_password)                                                              |\n|                                     |   File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 1813, in _create_image           |\n|                                     |     project_id=instance[\\'project_id\\'])                                                    |\n|                                     |   File \"/opt/stack/nova/nova/virt/libvirt/imagebackend.py\", line 156, in cache              |\n|                                     |     *args, **kwargs)                                                                        |\n|                                     |   File \"/opt/stack/nova/nova/virt/libvirt/imagebackend.py\", line 254, in create_image       |\n|                                     |     prepare_template(target=base, *args, **kwargs)                                          |\n|                                     |   File \"/opt/stack/nova/nova/openstack/common/lockutils.py\", line 232, in inner             |\n|                                     |     retval = f(*args, **kwargs)                                                             |\n|                                     |   File \"/opt/stack/nova/nova/virt/libvirt/imagebackend.py\", line 144, in call_if_not_exists |\n|                                     |     fetch_func(target=target, *args, **kwargs)                                              |\n|                                     |   File \"/opt/stack/nova/nova/virt/libvirt/utils.py\", line 601, in fetch_image               |\n|                                     |     images.fetch_to_raw(context, image_id, target, user_id, project_id)                     |\n|                                     |   File \"/opt/stack/nova/nova/virt/images.py\", line 207, in fetch_to_raw                     |\n|                                     |     fetch(context, image_href, path_tmp, user_id, project_id)                               |\n|                                     |   File \"/opt/stack/nova/nova/virt/images.py\", line 202, in fetch                            |\n|                                     |     image_service.download(context, image_id, image_file)                                   |\n|                                     |   File \"/opt/stack/nova/nova/image/glance.py\", line 284, in download                        |\n|                                     |     data.write(chunk)", 
            "date_created": "2013-07-22 21:20:09.607497+00:00", 
            "author": "https://api.launchpad.net/1.0/~locke105"
        }, 
        {
            "content": "Relevant to this topic are the comments on https://review.openstack.org/#/c/28391/\n\nBasically, the error information is available in the details field, but that's not supposed to be visible to end users.  So if this error were to happen in a production environment, the user would see \"500: IOError\" and have no idea whether the problem is on their end or the provider's.  That's rather unfriendly behavior IMHO, and it can be fixed as Matt suggests in the bug description above.\n\nI had also suggested maybe we take the message out of the details field and only put the stack trace there to avoid duplication.  That's probably a topic for when a fix gets proposed.", 
            "date_created": "2013-07-22 23:19:58.854494+00:00", 
            "author": "https://api.launchpad.net/1.0/~bnemec"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/38401", 
            "date_created": "2013-07-24 00:10:48.235576+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/38401\nCommitted: http://github.com/openstack/nova/commit/b50d0995552322cfd18a1190d4bdb6de0b23ac4b\nSubmitter: Jenkins\nBranch:    master\n\ncommit b50d0995552322cfd18a1190d4bdb6de0b23ac4b\nAuthor: Phong Ly <email address hidden>\nDate:   Thu May 16 01:21:42 2013 +0000\n\n    Put fault message in the correct field\n    \n    Currently when adding an instance fault, the message field looks\n    for kwargs['value'], which many exceptions do not have.  This\n    results in the message field being set to the name of the\n    exception class, which in some cases is not useful (see the bug\n    report for an example).\n    \n    This change puts the exception message in the message field, and\n    removes it from the details field since there's no need to put it\n    in both places.  That leaves the details field for actual details,\n    like stack traces.\n    \n    Fixes bug 1203880\n    \n    Change-Id: Ic92a9bd9cb2e139ce7a9f3f1299b7a6ccae82dd1\n", 
            "date_created": "2013-08-22 10:52:42.239048+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}