{
    "status": "Fix Released", 
    "last_updated": "2014-10-16 08:53:07.107542+00:00", 
    "description": "The detach_interface runs to the compute host via a cast rpc invocation (async).  As such, the validation that is done on the compute manager (example: an incorrect port id being passed in) is lost and the HTTP response code returned to the user is always 202.  Users would need to look in the logs to determine the error (and it would be indicated to them that nothing was wrong).\n\nThe attach_interface is a synchronous (call) rpc invocation.  This enables validation to be done and the error codes returned up to the user.\n\nThis behavior should be consistent between the two calls.  Propose that the detach_interface switch to a 'call' instead of a 'cast' to have similar behavior.\n\nIt appears that the detach_volume also has this similar issue.", 
    "tags": [
        "api", 
        "network", 
        "volumes"
    ], 
    "importance": "Undecided", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1339098", 
    "owner": "https://api.launchpad.net/1.0/~sdague", 
    "id": 1339098, 
    "index": 4983, 
    "created": "2014-07-08 14:47:59.729726+00:00", 
    "title": "detach_interface may hide issues due to async call", 
    "comments": [
        {
            "content": "The detach_interface runs to the compute host via a cast rpc invocation (async).  As such, the validation that is done on the compute manager (example: an incorrect port id being passed in) is lost and the HTTP response code returned to the user is always 202.  Users would need to look in the logs to determine the error (and it would be indicated to them that nothing was wrong).\n\nThe attach_interface is a synchronous (call) rpc invocation.  This enables validation to be done and the error codes returned up to the user.\n\nThis behavior should be consistent between the two calls.  Propose that the detach_interface switch to a 'call' instead of a 'cast' to have similar behavior.\n\nIt appears that the detach_volume also has this similar issue.", 
            "date_created": "2014-07-08 14:47:59.729726+00:00", 
            "author": "https://api.launchpad.net/1.0/~thorst"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/105485", 
            "date_created": "2014-07-08 15:20:04.235928+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Isn't there an instance fault stored on the instance when it fails in the compute manager?", 
            "date_created": "2014-07-08 15:28:54.626625+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "I don't see a fault stored on the server after this error.\n\nPerhaps the solution is to add the @wrap_instance_fault decorator to the following methods:\n- attach_interface\n- detach_interface\n- attach_volume\n- detach_volume\n\nThoughts?", 
            "date_created": "2014-07-08 16:18:34.758092+00:00", 
            "author": "https://api.launchpad.net/1.0/~thorst"
        }, 
        {
            "content": "I see that branch already has those decorators on attach/detach of the volumes.  I proposed a change set that adds those decorators to the interface methods.", 
            "date_created": "2014-07-08 16:47:31.532426+00:00", 
            "author": "https://api.launchpad.net/1.0/~thorst"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/105485\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=4f040295814c7c4bb694411ad6baf2d1c0db62a4\nSubmitter: Jenkins\nBranch:    master\n\ncommit 4f040295814c7c4bb694411ad6baf2d1c0db62a4\nAuthor: Drew Thorstensen <email address hidden>\nDate:   Tue Jul 8 10:14:36 2014 -0500\n\n    Pass errors from detach methods back to api proc\n    \n    The initial implementation of the detach_interface method was built as\n    cast invocations.  The respective attach method was built as a call\n    invocation.  What this led to was, if the user attempted to attach an\n    incorrect port, that error would be passed back up to the API\n    properly.\n    \n    However, if the user attempted to detach an invalid interface, the\n    response from the API would be an HTTP 202 (because the cast assumes\n    success).  The root error may be logged in the respective nova compute\n    log, but it did not make its way back up to the user.\n    \n    This change updates the decorators to the manager methods to update\n    the instance's fault when the attach or detach encounters an issue.\n    \n    Change-Id: I111b1c8a492f12587f86ab83825060029605390d\n    Closes-Bug: #1339098\n", 
            "date_created": "2014-07-25 22:29:08.000126+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: stable/icehouse\nReview: https://review.openstack.org/109916", 
            "date_created": "2014-07-28 06:51:02.063870+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Change abandoned by David Jia (<email address hidden>) on branch: stable/icehouse\nReview: https://review.openstack.org/109916", 
            "date_created": "2014-09-22 09:26:29.073887+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}