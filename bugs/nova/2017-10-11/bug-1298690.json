{
    "status": "Won't Fix", 
    "last_updated": "2015-08-02 23:29:28.096596+00:00", 
    "description": "In bug 1298494 I recently saw a case where the unit tests (using sqlite) behaved differently than devstack with mysql.\n\nThe issue seems to be when we do\n\nfilters = {'uuid': group.members, 'deleted_at': None}\ninstances = instance_obj.InstanceList.get_by_filters(\n                context, filters=filters)\n\n\nEventually down in db/sqlalchemy/api.py we end up calling\n\nquery = query.filter(column_attr.op(db_regexp_op)(\n                                 str(filters[filter_name])))\n\nwhere str(filters[filter_name]) is the string 'None'.\n\nWhen using mysql, a regexp comparison of the string 'None' against a NULL field fails to match.\n\nSince sqlite doesn't have its own regexp function we provide one in openstack/common/db/sqlalchemy/session.py.  In the buggy case we end up calling it as regexp('None', None), where the types are \"unicode\" and \"NoneType\".  However, we end up converting the second arg to text type before calling reg.search() on it, so it matches.\n\nThis is a bug, we want the unit tests to behave like the real system.", 
    "tags": [
        "db"
    ], 
    "importance": "Low", 
    "heat": 12, 
    "link": "https://bugs.launchpad.net/nova/+bug/1298690", 
    "owner": "None", 
    "id": 1298690, 
    "index": 6115, 
    "created": "2014-03-27 23:43:56.107088+00:00", 
    "title": "sqlite regexp() function doesn't behave like mysql", 
    "comments": [
        {
            "content": "In bug 1298494 I recently saw a case where the unit tests (using sqlite) behaved differently than devstack with mysql.\n\nThe issue seems to be when we do\n\nfilters = {'uuid': group.members, 'deleted_at': None}\ninstances = instance_obj.InstanceList.get_by_filters(\n                context, filters=filters)\n\n\nEventually down in db/sqlalchemy/api.py we end up calling\n\nquery = query.filter(column_attr.op(db_regexp_op)(\n                                 str(filters[filter_name])))\n\nwhere str(filters[filter_name]) is the string 'None'.\n\nWhen using mysql, a regexp comparison of the string 'None' against a NULL field fails to match.\n\nSince sqlite doesn't have its own regexp function we provide one in openstack/common/db/sqlalchemy/session.py.  In the buggy case we end up calling it as regexp('None', None), where the types are \"unicode\" and \"NoneType\".  However, we end up converting the second arg to text type before calling reg.search() on it, so it matches.\n\nThis is a bug, we want the unit tests to behave like the real system.", 
            "date_created": "2014-03-27 23:43:56.107088+00:00", 
            "author": "https://api.launchpad.net/1.0/~cbf123"
        }, 
        {
            "content": "If this is \"fix released\" in icehouse, could someone point to the patch that fixed it?", 
            "date_created": "2014-06-05 23:47:03.636317+00:00", 
            "author": "https://api.launchpad.net/1.0/~cbf123"
        }, 
        {
            "content": "Sorry, script misdetected \" (tracked under bug 1298690)\" from commit 40ae1eefe42f093631e2988814e60f45defdb3c3", 
            "date_created": "2014-06-07 11:06:30.894892+00:00", 
            "author": "https://api.launchpad.net/1.0/~apevec"
        }, 
        {
            "content": "Setting to Low priority because nobody uses SQLite in production. Would be nice to fix, but not medium priority...", 
            "date_created": "2015-03-31 04:05:02.293738+00:00", 
            "author": "https://api.launchpad.net/1.0/~jaypipes"
        }, 
        {
            "content": "Just in case anyone is interested...the regex used by SQLite is now in a separate package.  oslo.db/oslo_db/sqlalchemy/session.py", 
            "date_created": "2015-04-02 00:07:06.559795+00:00", 
            "author": "https://api.launchpad.net/1.0/~cbf123"
        }, 
        {
            "content": "I've opened bug 1439455 against oslo.db, so I'm not sure where that leaves this bug...", 
            "date_created": "2015-04-02 00:15:06.501860+00:00", 
            "author": "https://api.launchpad.net/1.0/~cbf123"
        }
    ]
}