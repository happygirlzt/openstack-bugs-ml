{
    "status": "Expired", 
    "last_updated": "2016-07-05 09:47:06.405989+00:00", 
    "description": "If you have two instances on the same compute node that each have a volume attached (using iscsi backend)\n\nIf you delete both of them triggering a disconnect volume the following happens:\n\nFirst request will delete the device\necho 1> /sys/block/sdr/device/delete\n\nThe second request triggers an iscsi_rescan which then rediscovers the device.\n\nThe volume is then deleted from the backend cinder.\n\nnow you have a device which is pointing back to a deleted volume.\n\nThis is using an NetApp device where all the devices are in the same IQN and using multipath on stable/havana", 
    "tags": [
        "multipath", 
        "volumes"
    ], 
    "importance": "Undecided", 
    "heat": 30, 
    "link": "https://bugs.launchpad.net/nova/+bug/1297635", 
    "owner": "None", 
    "id": 1297635, 
    "index": 4685, 
    "created": "2014-03-26 06:05:35.000567+00:00", 
    "title": "Race condition when deleting iscsi devices", 
    "comments": [
        {
            "content": "If you have two instances on the same compute node that each have a volume attached (using iscsi backend)\n\nIf you delete both of them triggering a disconnect volume the following happens:\n\nFirst request will delete the device\necho 1> /sys/block/sdr/device/delete\n\nThe second request triggers an iscsi_rescan which then rediscovers the device.\n\nThe volume is then deleted from the backend cinder.\n\nnow you have a device which is pointing back to a deleted volume.\n\nThis is using an NetApp device where all the devices are in the same IQN and using multipath on stable/havana", 
            "date_created": "2014-03-26 06:05:35.000567+00:00", 
            "author": "https://api.launchpad.net/1.0/~sorrison"
        }, 
        {
            "content": "If I understand correctly the deleted part happens only if volume is set to \"delete_on_termination\". Otherwise - yes, this seems like something we want to serialize in the libvirt iscsi volume driver.", 
            "date_created": "2014-03-27 18:14:46.057527+00:00", 
            "author": "https://api.launchpad.net/1.0/~ndipanov"
        }, 
        {
            "content": "Hmmm - I haven't tried to reproduce yet - so will leave the bug on \"New\" for now - but just by looking at the code,  I can't figure out where the rescan happens.", 
            "date_created": "2014-03-27 18:25:26.477960+00:00", 
            "author": "https://api.launchpad.net/1.0/~ndipanov"
        }, 
        {
            "content": "The rescan happens when the next volume is deleted, it happens too fast as the first volume hasn't been deleted by cinder yet and so the targe is still discoverable\n.\n\n", 
            "date_created": "2014-03-28 02:49:33.151074+00:00", 
            "author": "https://api.launchpad.net/1.0/~sorrison"
        }, 
        {
            "content": "OK I've just worked out that this is only a problem when using multipath", 
            "date_created": "2014-04-02 06:12:59.529942+00:00", 
            "author": "https://api.launchpad.net/1.0/~sorrison"
        }, 
        {
            "content": "Yep - after looking at the code - it does seem that there is a race when using multipath. A likely fix is to make an instance wide mutex on libvirt volume detach.", 
            "date_created": "2014-04-04 11:48:13.486497+00:00", 
            "author": "https://api.launchpad.net/1.0/~ndipanov"
        }, 
        {
            "content": "The same problem happens with fibre channel connected devices that use multipath.", 
            "date_created": "2014-06-05 06:05:34.863556+00:00", 
            "author": "https://api.launchpad.net/1.0/~madkinder"
        }, 
        {
            "content": "Great to know others have this issue! This is a serious issue for us as it's causing volume to get into really bad states and the only way to fix is to reboot the compute node", 
            "date_created": "2014-06-05 06:26:24.196877+00:00", 
            "author": "https://api.launchpad.net/1.0/~sorrison"
        }, 
        {
            "content": "Is this still an issue in liberty?  Otherwise see comment 6 in bug 1492026 - in mitaka I'd like to add some event callback code to the libvirt driver such that we can make the volume device attach/detach synchronous before we call off to cinder/os-brick to do the iscsi connect/disconnect volume work.", 
            "date_created": "2015-09-18 13:40:17.088795+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "\nThis is an automated cleanup. This bug report has been closed because it\nis older than 18 months and there is no open code change to fix this.\nAfter this time it is unlikely that the circumstances which lead to\nthe observed issue can be reproduced.\n\nIf you can reproduce the bug, please:\n* reopen the bug report (set to status \"New\")\n* AND add the detailed steps to reproduce the issue (if applicable)\n* AND leave a comment \"CONFIRMED FOR: <RELEASE_NAME>\"\n  Only still supported release names are valid (LIBERTY, MITAKA, OCATA, NEWTON).\n  Valid example: CONFIRMED FOR: LIBERTY\n", 
            "date_created": "2016-07-05 09:47:05.869708+00:00", 
            "author": "https://api.launchpad.net/1.0/~mzoeller"
        }
    ]
}