{
    "status": "Expired", 
    "last_updated": "2016-07-05 09:45:22.244447+00:00", 
    "description": "If VNC is enabled, we must allocate unique VNC ports for each created instance to avoid security issues with port collisions (see bug #1255609).\n\nOne way to guarantee uniqueness is to query vCenter for all allocated ports like this:\n\n    vnc_port_prop = 'config.extraConfig[\"RemoteDisplay.vnc.port\"]'\n    result = session._call_method(vim_util, \"get_objects\",\n                                  \"VirtualMachine\", [vnc_port_prop])\n\nand then choose port number which is not in the result set.\n\nThe drawback of this approach is that it guarantees uniqueness across the whole vCenter whereas we need uniqueness only per ESX host. As a result the maximum number of VMs (with VNC enabled) that can be provisioned on vCenter would be 65535. Given that the maximum number of registered VMs in vCenter is 15000 (source: http://goo.gl/u90zhZ) this looks acceptable but it is still annoying limitation.\n\nOne solution I can think of, is to change the spawn() method to do something like this:\n1. create VM\n2. retrieve the ESX host on which the VM was created\n3. create vim session to the ESX, run the query above and choose port number\n4. reconfig the VM with the port number from step 3\n\nI am not sure if creating sessions to ESX hosts is something that we want to do ...", 
    "tags": [
        "vmware"
    ], 
    "importance": "Undecided", 
    "heat": 14, 
    "link": "https://bugs.launchpad.net/nova/+bug/1256944", 
    "owner": "None", 
    "id": 1256944, 
    "index": 4346, 
    "created": "2013-12-02 15:06:24.299146+00:00", 
    "title": "VMware: find how to allocate unique VNC ports per host", 
    "comments": [
        {
            "content": "If VNC is enabled, we must allocate unique VNC ports for each created instance to avoid security issues with port collisions (see bug #1255609).\n\nOne way to guarantee uniqueness is to query vCenter for all allocated ports like this:\n\n    vnc_port_prop = 'config.extraConfig[\"RemoteDisplay.vnc.port\"]'\n    result = session._call_method(vim_util, \"get_objects\",\n                                  \"VirtualMachine\", [vnc_port_prop])\n\nand then choose port number which is not in the result set.\n\nThe drawback of this approach is that it guarantees uniqueness across the whole vCenter whereas we need uniqueness only per ESX host. As a result the maximum number of VMs (with VNC enabled) that can be provisioned on vCenter would be 65535. Given that the maximum number of registered VMs in vCenter is 15000 (source: http://goo.gl/u90zhZ) this looks acceptable but it is still annoying limitation.\n\nOne solution I can think of, is to change the spawn() method to do something like this:\n1. create VM\n2. retrieve the ESX host on which the VM was created\n3. create vim session to the ESX, run the query above and choose port number\n4. reconfig the VM with the port number from step 3\n\nI am not sure if creating sessions to ESX hosts is something that we want to do ...", 
            "date_created": "2013-12-02 15:06:24.299146+00:00", 
            "author": "https://api.launchpad.net/1.0/~rgerganov"
        }, 
        {
            "content": "Uniqueness should be at cluster level instead of host level , since DRS can migrate the VM to another host and it can result in 2 instances having the same port.", 
            "date_created": "2015-04-08 12:50:46.496297+00:00", 
            "author": "https://api.launchpad.net/1.0/~sagar-r-nikam"
        }, 
        {
            "content": "as i know, instance of vmware hypervisor supports migration,  while migrating to another vmware cluster,  does nova-compute reconfig the vnc port ?", 
            "date_created": "2015-04-21 14:00:49.388639+00:00", 
            "author": "https://api.launchpad.net/1.0/~shuaizi614"
        }, 
        {
            "content": "\nThis is an automated cleanup. This bug report has been closed because it\nis older than 18 months and there is no open code change to fix this.\nAfter this time it is unlikely that the circumstances which lead to\nthe observed issue can be reproduced.\n\nIf you can reproduce the bug, please:\n* reopen the bug report (set to status \"New\")\n* AND add the detailed steps to reproduce the issue (if applicable)\n* AND leave a comment \"CONFIRMED FOR: <RELEASE_NAME>\"\n  Only still supported release names are valid (LIBERTY, MITAKA, OCATA, NEWTON).\n  Valid example: CONFIRMED FOR: LIBERTY\n", 
            "date_created": "2016-07-05 09:45:21.637752+00:00", 
            "author": "https://api.launchpad.net/1.0/~mzoeller"
        }
    ]
}