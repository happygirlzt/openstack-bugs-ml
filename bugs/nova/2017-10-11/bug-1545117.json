{
    "status": "Fix Released", 
    "last_updated": "2016-03-16 18:03:57.391202+00:00", 
    "description": "It's possible to create a VM with nova using neutron as the backend and have no network information. If the tenant doesn't have any available network in neutron and doesn't request any network, the neutron backend will simply log a message and continue.\n\nIf you then later attempt to use the os-attach-interface API and don't provider a network, and the tenant still doesn't have any networks available in neutron, then the request fails in the neutronv2 API code with an IndexError because it's assuming there is at least one available network:\n\nhttp://paste.openstack.org/show/486856/\n\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions Traceback (most recent call last):\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions \n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions   File \"/usr/local/lib/python2.7/dist-packages/oslo_messaging/rpc/dispatcher.py\", line 143, in _dispatch_and_reply\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions     executor_callback))\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions \n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions   File \"/usr/local/lib/python2.7/dist-packages/oslo_messaging/rpc/dispatcher.py\", line 189, in _dispatch\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions     executor_callback)\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions \n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions   File \"/usr/local/lib/python2.7/dist-packages/oslo_messaging/rpc/dispatcher.py\", line 130, in _do_dispatch\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions     result = func(ctxt, **new_args)\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions \n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions   File \"/opt/stack/nova/nova/exception.py\", line 110, in wrapped\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions     payload)\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions \n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions   File \"/usr/local/lib/python2.7/dist-packages/oslo_utils/excutils.py\", line 204, in __exit__\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions     six.reraise(self.type_, self.value, self.tb)\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions \n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions   File \"/opt/stack/nova/nova/exception.py\", line 89, in wrapped\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions     return f(self, context, *args, **kw)\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions \n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions   File \"/opt/stack/nova/nova/compute/manager.py\", line 385, in decorated_function\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions     kwargs['instance'], e, sys.exc_info())\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions \n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions   File \"/usr/local/lib/python2.7/dist-packages/oslo_utils/excutils.py\", line 204, in __exit__\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions     six.reraise(self.type_, self.value, self.tb)\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions \n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions   File \"/opt/stack/nova/nova/compute/manager.py\", line 373, in decorated_function\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions     return function(self, context, *args, **kwargs)\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions \n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions   File \"/opt/stack/nova/nova/compute/manager.py\", line 4933, in attach_interface\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions     context, instance, port_id, network_id, requested_ip)\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions \n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions   File \"/opt/stack/nova/nova/network/neutronv2/api.py\", line 775, in allocate_port_for_instance\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions     requested_networks=requested_networks)\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions \n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions   File \"/opt/stack/nova/nova/network/neutronv2/api.py\", line 579, in allocate_for_instance\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions     objects.NetworkRequest(network_id=nets[0]['id']))\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions \n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions IndexError: list index out of range\n\nWe should at least handle that case and report a 400 to the user.", 
    "tags": [
        "network", 
        "neutron"
    ], 
    "importance": "Low", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1545117", 
    "owner": "https://api.launchpad.net/1.0/~mriedem", 
    "id": 1545117, 
    "index": 679, 
    "created": "2016-02-12 19:13:16.316925+00:00", 
    "title": "neutron: 500 error when trying to attach no network to an instance with no network", 
    "comments": [
        {
            "content": "It's possible to create a VM with nova using neutron as the backend and have no network information. If the tenant doesn't have any available network in neutron and doesn't request any network, the neutron backend will simply log a message and continue.\n\nIf you then later attempt to use the os-attach-interface API and don't provider a network, and the tenant still doesn't have any networks available in neutron, then the request fails in the neutronv2 API code with an IndexError because it's assuming there is at least one available network:\n\nhttp://paste.openstack.org/show/486856/\n\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions Traceback (most recent call last):\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions \n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions   File \"/usr/local/lib/python2.7/dist-packages/oslo_messaging/rpc/dispatcher.py\", line 143, in _dispatch_and_reply\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions     executor_callback))\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions \n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions   File \"/usr/local/lib/python2.7/dist-packages/oslo_messaging/rpc/dispatcher.py\", line 189, in _dispatch\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions     executor_callback)\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions \n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions   File \"/usr/local/lib/python2.7/dist-packages/oslo_messaging/rpc/dispatcher.py\", line 130, in _do_dispatch\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions     result = func(ctxt, **new_args)\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions \n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions   File \"/opt/stack/nova/nova/exception.py\", line 110, in wrapped\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions     payload)\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions \n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions   File \"/usr/local/lib/python2.7/dist-packages/oslo_utils/excutils.py\", line 204, in __exit__\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions     six.reraise(self.type_, self.value, self.tb)\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions \n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions   File \"/opt/stack/nova/nova/exception.py\", line 89, in wrapped\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions     return f(self, context, *args, **kw)\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions \n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions   File \"/opt/stack/nova/nova/compute/manager.py\", line 385, in decorated_function\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions     kwargs['instance'], e, sys.exc_info())\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions \n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions   File \"/usr/local/lib/python2.7/dist-packages/oslo_utils/excutils.py\", line 204, in __exit__\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions     six.reraise(self.type_, self.value, self.tb)\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions \n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions   File \"/opt/stack/nova/nova/compute/manager.py\", line 373, in decorated_function\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions     return function(self, context, *args, **kwargs)\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions \n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions   File \"/opt/stack/nova/nova/compute/manager.py\", line 4933, in attach_interface\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions     context, instance, port_id, network_id, requested_ip)\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions \n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions   File \"/opt/stack/nova/nova/network/neutronv2/api.py\", line 775, in allocate_port_for_instance\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions     requested_networks=requested_networks)\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions \n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions   File \"/opt/stack/nova/nova/network/neutronv2/api.py\", line 579, in allocate_for_instance\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions     objects.NetworkRequest(network_id=nets[0]['id']))\n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions \n2016-02-12 09:34:32.188 TRACE nova.api.openstack.extensions IndexError: list index out of range\n\nWe should at least handle that case and report a 400 to the user.", 
            "date_created": "2016-02-12 19:13:16.316925+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/279839", 
            "date_created": "2016-02-13 02:38:37.532580+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/279839\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=d90115c3e806f896dc90e226af7b06b21ba92abc\nSubmitter: Jenkins\nBranch:    master\n\ncommit d90115c3e806f896dc90e226af7b06b21ba92abc\nAuthor: Matt Riedemann <email address hidden>\nDate:   Fri Feb 12 18:34:59 2016 -0800\n\n    neutron: handle attach interface case with no networks\n    \n    It's possible to boot an instance without a network and it's\n    also possible to try and attach an interface without specifying\n    a port, network or fixed IP. If no network is specified on the\n    attach request and there are no networks available to the\n    instance's project (shared or not), then the\n    allocate_port_for_instance method fails with an IndexError.\n    \n    The code is currently checking for a case of ambiguous networks\n    when a specific network ID is not requested, but is not checking\n    for the case that no network ID is specified and no networks are\n    available. This change adds that check.\n    \n    A new type of exception is raised from the network API and handled\n    in the REST API so we return a 400 to the user rather than a 500.\n    \n    Note that we don't return an empty network_info to the compute\n    manager because that results in InterfaceAttachFailed raised to\n    the REST API which is interpreted as a 500.\n    \n    Closes-Bug: #1545117\n    \n    Change-Id: Iad762ebef08c259339ea5582e65266620fbab0ac\n", 
            "date_created": "2016-03-04 11:55:57.167672+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/nova 13.0.0.0rc1 release candidate.", 
            "date_created": "2016-03-16 18:03:56.534344+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }
    ]
}