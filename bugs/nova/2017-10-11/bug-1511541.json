{
    "status": "Invalid", 
    "last_updated": "2016-03-07 15:09:03.231202+00:00", 
    "description": "Multiple reports that the fix for [OSSA 2015-005] Websocket Hijacking Vulnerability in Nova VNC Server (CVE-2015-0259) is incomplete. \n\nhttps://bugs.launchpad.net/nova/+bug/1409142/comments/146\nhttps://bugs.launchpad.net/nova/+bug/1409142/comments/149\n\nFurther investigation is needed.", 
    "tags": [
        "console", 
        "security"
    ], 
    "importance": "Undecided", 
    "heat": 264, 
    "link": "https://bugs.launchpad.net/nova/+bug/1511541", 
    "owner": "None", 
    "id": 1511541, 
    "index": 5820, 
    "created": "2015-10-29 21:46:42.471295+00:00", 
    "title": "Possible incomplete fix for OSSA-2015-005", 
    "comments": [
        {
            "content": "Multiple reports that the fix for [OSSA 2015-005] Websocket Hijacking Vulnerability in Nova VNC Server (CVE-2015-0259) is incomplete. \n\nhttps://bugs.launchpad.net/nova/+bug/1409142/comments/146\nhttps://bugs.launchpad.net/nova/+bug/1409142/comments/149\n\nFurther investigation is needed.", 
            "date_created": "2015-10-29 21:46:42.471295+00:00", 
            "author": "https://api.launchpad.net/1.0/~gmurphy"
        }, 
        {
            "content": "I believe the fix is valid and complete.  I know how to recreate the exploit and have seen the patch block the attempt.  Let me know how I can help with the research to verify that this fix is indeed complete.", 
            "date_created": "2015-11-04 22:34:20.312055+00:00", 
            "author": "https://api.launchpad.net/1.0/~dave-mccowan"
        }, 
        {
            "content": "@Dave, here's my steps:\n1. start a localhost web server with python\n2. create a index.html file for localhost which has a <iframe> with an effective url of openstack web console page\n3. open the http://localhost page in browser and the web console is shown normally\n\nI tested with firefox38.3.0, chrome46.0, but can not find the Origin header in the get request of iframe, even I change the <iframe> to <a>,  Please correct me if the steps are wrong.", 
            "date_created": "2015-11-05 07:12:33.858882+00:00", 
            "author": "https://api.launchpad.net/1.0/~ry-dou"
        }, 
        {
            "content": "@Dave, can you test the procedure above ?\nIsn't there special trickery for http://localhost domain ?", 
            "date_created": "2015-11-09 15:15:47.897353+00:00", 
            "author": "https://api.launchpad.net/1.0/~tristan-cacqueray"
        }, 
        {
            "content": "Any progress on this? Or you can paste your test steps here and let me try it in our envs.", 
            "date_created": "2015-11-12 03:06:59.986491+00:00", 
            "author": "https://api.launchpad.net/1.0/~ry-dou"
        }, 
        {
            "content": "@Rui Yuan Dou (rydou) where \"localhost\" above is a physically different system than where you're running the websocketproxy.  right?", 
            "date_created": "2015-11-17 05:11:54.550128+00:00", 
            "author": "https://api.launchpad.net/1.0/~o-tony"
        }, 
        {
            "content": "@Tony, yes, \"localhost\" is a web server running in my own laptop, and openstack is running in datacenter.", 
            "date_created": "2015-11-17 10:31:19.260480+00:00", 
            "author": "https://api.launchpad.net/1.0/~ry-dou"
        }, 
        {
            "content": "@Tony do have any further input on this? I suspect that the header isn't being sent for the localhost in the testing scenario but need to confirm. Would like to move this bug along regardless. ", 
            "date_created": "2016-01-18 15:10:24.368552+00:00", 
            "author": "https://api.launchpad.net/1.0/~gmurphy"
        }, 
        {
            "content": "So I have recreated this report and Yes the Origin Header is *not* being sent.\n\nwe could enhance the code to look at the Referer header if the origin Header is absent.\n\n@Dave where did you see the Origin header being used?", 
            "date_created": "2016-01-18 18:23:06.507150+00:00", 
            "author": "https://api.launchpad.net/1.0/~o-tony"
        }, 
        {
            "content": "Ahh okay I understand things a little better now, the Referer check isn't something we can do in nova.  We'd need to do it in websockify.  I'll look at the original bug tomorrow.", 
            "date_created": "2016-01-18 19:38:57.813060+00:00", 
            "author": "https://api.launchpad.net/1.0/~o-tony"
        }, 
        {
            "content": "So I'm not certain this represents a security issue.   From comment 2:\n \n 1. start a localhost web server with python\n 2. create a index.html file for localhost which has a <iframe> with an effective url of openstack web console page\n 3. open the http://localhost page in browser and the web console is shown normally\n\nIn step 2 I created the index.html to look like: \n<iframe src=http://$MY_CLOUD_IP:6080/vnc_auto.html?token=$INSTANCE_TOKEN></iframe>\n\nWith this in place yes I can visit http://localhost/ and get a VNC console in my instance but this differs from the original bug in several ways\n1. I can't find a way to read the token/cookie in my browser and have it populate across domains\n2. The upgrade from http:// -> ws:// is all happening within the infrastructure of the (albeit small) cloud. and therefore is valid as far as the Origin: Header is concerned.\n\n If we can do either\n\n1. host vnc_auto.html on localhost, and stull get access to the console ; or\n2. Read the token/cookie from the browser from a domain NOT associated with $MY_CLOUD\n\nThen I agree we have an issue.", 
            "date_created": "2016-02-05 00:07:16.667197+00:00", 
            "author": "https://api.launchpad.net/1.0/~o-tony"
        }, 
        {
            "content": "@tony, correct.\n\nThe procedure in step 2 does not recreate the original bug.  By putting the link to src=http://$MY_CLOUD_IP:6080/vnc_auto.html?token=$INSTANCE_TOKEN> in the frame, the VNC code will be loaded from $MY_CLOUD and the origin header will show $MY_CLOUD.  \n\nTo recreate the bug, you need to install the VNC package on your local host (or another host), and then link to http://localhost/noVNC/vnc.html.  After entering $MY_CLOUD_IP in the served console page, a request will be made from the browser to $MY_CLOUD.\n\nThis request will be GET $MY_CLOUD_IP/websockify.   The origin header on this request will be null, indicating the script came from the local host.  The origin header will show $MY_CLOUD_IP on an acceptable request.  It will show attacker.example.com on a truly malicious request.\n", 
            "date_created": "2016-02-05 16:47:57.211178+00:00", 
            "author": "https://api.launchpad.net/1.0/~dave-mccowan"
        }, 
        {
            "content": "Given this analysis I propose we close this as notabug and remove the OSSA task.  Any objections?", 
            "date_created": "2016-02-29 16:40:45.705948+00:00", 
            "author": "https://api.launchpad.net/1.0/~gmurphy"
        }, 
        {
            "content": "Removed the OSSA task and marking invalid. ", 
            "date_created": "2016-03-07 15:09:02.577336+00:00", 
            "author": "https://api.launchpad.net/1.0/~gmurphy"
        }
    ]
}