{
    "status": "In Progress", 
    "last_updated": "2017-06-28 12:05:28.508978+00:00", 
    "description": "Description\n===========\n\nOur criteria for how we deal with conflicting image metadata and flavor extra specs on both 'cpu_policy' and 'cpu_thread_policy' is rather inconsistent. We should probably configure this such that image metadata is the defacto spec, and an competing flavor metadata causes issues. Original comment below from https://review.openstack.org/#/c/361140.\n\nSteps to reproduce\n==================\n\n1. Create a new image with 'hw_cpu_policy=dedicated', and a new flavor with 'hw:cpu_thread_policy=shared'\n2. Boot an instance using this image and flavor\n\nExpected result\n===============\n\nThe VM should fail to boot, citing a conflict in policies\n\nActual result\n=============\n\nThe VM boots.\n\nAdditional information\n======================\n\nThere are two NUMA related properties:\n\n* CPU allocation policy. Values: dedicated(stricter), shared(softer, default)\n* CPU thread allocation policy. Values: prefer(softer, default), isolate(medium), require(stricter)\n\nThe behaviour in case of conflicts [1]:\n\nCPU allocation policy:\n\n\u00a0\u00a0flavor          image        result\n\u00a0\u00a0-----------------------------------------------------------\n\u00a0\u00a0dedicated   shared       dedicated (stricter, non-default)\n\u00a0\u00a0shared      dedicated    exception\n\nCPU thread allocation policy:\n\n\u00a0\u00a0flavor          image                 result\n\u00a0\u00a0------------------------------------------------------------\n\u00a0\u00a0prefer         isolate/require     prefer  (softer, default)\n\u00a0\u00a0isolate        prefer/requre       exception\n\u00a0\u00a0require        prefer/isolate      exception\n\nAs you see we have two rather different behaviors for NUMA related properties. If first case we prefer stricter non-default value, in second case we prefer softer default value.\n\nAlso the **only** phrase in spec for all this stuff [2] is: \"Image property will only be honoured if the flavor does not already have a threads policy set. This ensures the cloud administrator can have absolute control over threads policy if desired.\"\nI'll repeat. This is the *only* phrase about conflicts. Flavor docs [3] says nothing about same image properties and conflict cases. So as user at this point I have no idea what will happen in a case of conflict.\n\nMoreover, in image metadata docs [4] we have brilliant phrase: \"Image metadata takes precedence over flavor extra specs. Thus, configuring competing policies causes an exception. By setting a shared policy through image metadata, administrators can prevent users configuring CPU policies in flavors and impacting resource utilization.\"\n\nSo now as user I will say \"WTF?\". I know that the last example is a docs bug. But even if we will replace \"image\" with \"flavor\" in image docs it wouldn't become a complitly true. There is no information about first lines in each policy conflicts table (at the begining of my message). in those cases we wouldn't get an exception, everything will work fine. But user don't know about it. And user don't know what is 'fine'? Will be used 'shared' policy or 'dedicated'?\nWe have such horrible docs about two years. The only way to figure out what is going on is to look at the code.\n\n[1]  https://github.com/openstack/nova/blob/master/nova/virt/hardware.py#L1141-L1172\n[2] https://specs.openstack.org/openstack/nova-specs/specs/juno/approved/virt-driver-cpu-pinning.html\n[3] http://docs.openstack.org/admin-guide/compute-flavors.html\n[4] http://docs.openstack.org/admin-guide/compute-cpu-topologies.html", 
    "tags": [
        "numa", 
        "openstack-version.juno", 
        "scheduler"
    ], 
    "importance": "Low", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1628504", 
    "owner": "None", 
    "id": 1628504, 
    "index": 823, 
    "created": "2016-09-28 12:46:42.883300+00:00", 
    "title": "Exception handling for cpu_policy and cpu_thread_policy image and flavor metadata is inconsistent", 
    "comments": [
        {
            "content": "Description\n===========\n\nOur criteria for how we deal with conflicting image metadata and flavor extra specs on both 'cpu_policy' and 'cpu_thread_policy' is rather inconsistent. We should probably configure this such that image metadata is the defacto spec, and an competing flavor metadata causes issues. Original comment below from https://review.openstack.org/#/c/361140.\n\nSteps to reproduce\n==================\n\n1. Create a new image with 'hw_cpu_policy=dedicated', and a new flavor with 'hw:cpu_thread_policy=shared' \n2. Boot an instance using this image and flavor\n\nExpected result\n===============\n\nThe VM should fail to boot, citing a conflict in policies\n\nActual result\n=============\n\nThe VM boots.\n\nAdditional information\n======================\n\nThere are two NUMA related properties:\n\n* CPU allocation policy. Values: dedicated(stricter), shared(softer, default)\n* CPU thread allocation policy. Values: prefer(softer, default), isolate(medium), require(stricter)\n\nThe behaviour in case of conflicts [1]:\n\nCPU allocation policy:\n\n  flavor          image        result\n  -----------------------------------------------------------\n  dedicated   shared       dedicated (stricter, non-default)\n  shared      dedicated    exception\n\nCPU thread allocation policy:\n\n  flavor          image                 result\n  ------------------------------------------------------------\n  prefer         isolate/require     prefer  (softer, default)\n  isolate        prefer/requre       exception\n  require        prefer/isolate      exception\n\nAs you see we have two rather different behaviors for NUMA related properties. If first case we prefer stricter non-default value, in second case we prefer softer default value.\n\nAlso the **only** phrase in spec for all this stuff [2] is: \"Image property will only be honoured if the flavor does not already have a threads policy set. This ensures the cloud administrator can have absolute control over threads policy if desired.\"\nI'll repeat. This is the *only* phrase about conflicts. Flavor docs [3] says nothing about same image properties and conflict cases. So as user at this point I have no idea what will happen in a case of conflict.\n\nMoreover, in image metadata docs [4] we have brilliant phrase: \"Image metadata takes precedence over flavor extra specs. Thus, configuring competing policies causes an exception. By setting a shared policy through image metadata, administrators can prevent users configuring CPU policies in flavors and impacting resource utilization.\"\n\nSo now as user I will say \"WTF?\". I know that the last example is a docs bug. But even we will replace \"image\" with \"flavour\" it wouldn't become a complitly true. There is no information about first lines in each policy conflicts table (at the begining of my message). in those cases we wouldn't get an exception, everything will work fine. But user don't know about it. And user don't know what is 'fine'? Will be used 'shared' policy or 'dedicated'?\nWe have such horrible docs about two years. The only way to figure out what is going on is to look at the code.\n\n[1]  https://github.com/openstack/nova/blob/master/nova/virt/hardware.py#L1141-L1172\n[2] https://specs.openstack.org/openstack/nova-specs/specs/juno/approved/virt-driver-cpu-pinning.html\n[3] http://docs.openstack.org/admin-guide/compute-flavors.html\n[4] http://docs.openstack.org/admin-guide/compute-cpu-topologies.html", 
            "date_created": "2016-09-28 12:46:42.883300+00:00", 
            "author": "https://api.launchpad.net/1.0/~stephenfinucane"
        }, 
        {
            "content": "Yeah, that's a common issue with some scheduler filters where the precedence is not really clarified between an image metadata and a flavor extraspec. We have a couple of filters that very poorly mention that.\n\nFrom a pure process perspective, I tho think that the proposed fix would require some behavioural change (about we now agree and what we now refuse) that would require some upgrade note mentioning the new UX. For that specific reason, I actually wonder whether it shouldn't be better to write a blueprint for that and track it spec-less (if agreed by consensus).\n\nFor the moment, tracking the bug as Low, but I'm very tempted into turning it into Wishlist.", 
            "date_created": "2016-09-29 09:41:38.969396+00:00", 
            "author": "https://api.launchpad.net/1.0/~sylvain-bauza"
        }, 
        {
            "content": "Automatically discovered version juno in description. If this is incorrect, please update the description to include 'nova version: ...'", 
            "date_created": "2017-06-27 15:54:16.899308+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }
    ]
}