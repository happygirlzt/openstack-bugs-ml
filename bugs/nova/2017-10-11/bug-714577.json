{
    "status": "Fix Released", 
    "last_updated": "2011-04-25 17:05:37.762176+00:00", 
    "description": "My automated tests frequently fail. It turns out that it's almost exclusively caused by dnsmasq refusing to hand out an IP to a guest, because an old instance from a previous test run still holds the lease.\n\nOnce a lease expires, dnsmasq calls the dhcpbridge which in turn calls the network worker and disassociates the IP. That's great.\n\nHowever, the compute worker also disassociates the IP when terminating an instance. This is almost always premature, since it's quite unlikely that it will coincide exactly with the expiration of the lease, so the IP doesn't belong back in the pool of available IP's. \n\nWe have a couple of options:\n\n1) Add a \"disassociated_at\" column to fixed_ips. That timestamp is set when the instance is terminated. When we grab an ip from the pool, it must have been disassociate at least 120s earlier (that's what we pass to dnsmasq as the lease time). We might want to call it \"recycle_after\"/\"keep_until\" and adjust the semantics accordingly.\n\n2) Leave it dnsmasq to release the IPs. We might leak IP's this way if dnsmasq is closed uncleanly or similar, but it does ensure that dnsmasq is willing to dish out this IP if we ask it to. We can probably solve this by doing some cleanup at startup.\n\n3) Other options\n\nNevertheless, leaving it exclusively to dnsmasq could cause leaks if dnsmasq gets shut down uncleanly.\n\nThere", 
    "tags": [], 
    "importance": "Undecided", 
    "heat": 10, 
    "link": "https://bugs.launchpad.net/nova/+bug/714577", 
    "owner": "None", 
    "id": 714577, 
    "index": 2024, 
    "created": "2011-02-07 13:55:15.537542+00:00", 
    "title": "IP's are recycled too quickly", 
    "comments": [
        {
            "content": "My automated tests frequently fail. It turns out that it's almost exclusively caused by dnsmasq refusing to hand out an IP to a guest, because an old instance from a previous test run still holds the lease.\n\nOnce a lease expires, dnsmasq calls the dhcpbridge which in turn calls the network worker and disassociates the IP. That's great.\n\nHowever, the compute worker also disassociates the IP when terminating an instance. This is almost always premature, since it's quite unlikely that it will coincide exactly with the expiration of the lease, so the IP doesn't belong back in the pool of available IP's. \n\nWe have a couple of options:\n\n1) Add a \"disassociated_at\" column to fixed_ips. That timestamp is set when the instance is terminated. When we grab an ip from the pool, it must have been disassociate at least 120s earlier (that's what we pass to dnsmasq as the lease time). We might want to call it \"recycle_after\"/\"keep_until\" and adjust the semantics accordingly.\n\n2) Leave it dnsmasq to release the IPs. We might leak IP's this way if dnsmasq is closed uncleanly or similar, but it does ensure that dnsmasq is willing to dish out this IP if we ask it to. We can probably solve this by doing some cleanup at startup.\n\n3) Other options\n\nNevertheless, leaving it exclusively to dnsmasq could cause leaks if dnsmasq gets shut down uncleanly.\n\nThere", 
            "date_created": "2011-02-07 13:55:15.537542+00:00", 
            "author": "https://api.launchpad.net/1.0/~soren"
        }, 
        {
            "content": "I think there is an easy solution to this.  If you are blowing the database away in between tests, kill the running dnsmasq instances as well.  Leases don't get returned to the pool until they have been released by dnsmasq or the timeout hits on the network periodic callback.  The release of the ip by the compute host does not return the ip to the pool (unless there is some sort of bug that has been recently added).\n\nVish\n\nOn Feb 7, 2011, at 5:55 AM, Soren Hansen wrote:\n\n> Public bug reported:\n> \n> My automated tests frequently fail. It turns out that it's almost\n> exclusively caused by dnsmasq refusing to hand out an IP to a guest,\n> because an old instance from a previous test run still holds the lease.\n> \n> Once a lease expires, dnsmasq calls the dhcpbridge which in turn calls\n> the network worker and disassociates the IP. That's great.\n> \n> However, the compute worker also disassociates the IP when terminating\n> an instance. This is almost always premature, since it's quite unlikely\n> that it will coincide exactly with the expiration of the lease, so the\n> IP doesn't belong back in the pool of available IP's.\n> \n> We have a couple of options:\n> \n> 1) Add a \"disassociated_at\" column to fixed_ips. That timestamp is set\n> when the instance is terminated. When we grab an ip from the pool, it\n> must have been disassociate at least 120s earlier (that's what we pass\n> to dnsmasq as the lease time). We might want to call it\n> \"recycle_after\"/\"keep_until\" and adjust the semantics accordingly.\n> \n> 2) Leave it dnsmasq to release the IPs. We might leak IP's this way if\n> dnsmasq is closed uncleanly or similar, but it does ensure that dnsmasq\n> is willing to dish out this IP if we ask it to. We can probably solve\n> this by doing some cleanup at startup.\n> \n> 3) Other options\n> \n> Nevertheless, leaving it exclusively to dnsmasq could cause leaks if\n> dnsmasq gets shut down uncleanly.\n> \n> There\n> \n> ** Affects: nova\n>     Importance: Undecided\n>         Status: New\n> \n> -- \n> You received this bug notification because you are a member of Nova Bug\n> Team, which is subscribed to OpenStack Compute (nova).\n> https://bugs.launchpad.net/bugs/714577\n> \n> Title:\n>  IP's are recycled too quickly\n> \n> Status in OpenStack Compute (Nova):\n>  New\n> \n> Bug description:\n>  My automated tests frequently fail. It turns out that it's almost\n>  exclusively caused by dnsmasq refusing to hand out an IP to a guest,\n>  because an old instance from a previous test run still holds the\n>  lease.\n> \n>  Once a lease expires, dnsmasq calls the dhcpbridge which in turn calls\n>  the network worker and disassociates the IP. That's great.\n> \n>  However, the compute worker also disassociates the IP when terminating\n>  an instance. This is almost always premature, since it's quite\n>  unlikely that it will coincide exactly with the expiration of the\n>  lease, so the IP doesn't belong back in the pool of available IP's.\n> \n>  We have a couple of options:\n> \n>  1) Add a \"disassociated_at\" column to fixed_ips. That timestamp is set\n>  when the instance is terminated. When we grab an ip from the pool, it\n>  must have been disassociate at least 120s earlier (that's what we pass\n>  to dnsmasq as the lease time). We might want to call it\n>  \"recycle_after\"/\"keep_until\" and adjust the semantics accordingly.\n> \n>  2) Leave it dnsmasq to release the IPs. We might leak IP's this way if\n>  dnsmasq is closed uncleanly or similar, but it does ensure that\n>  dnsmasq is willing to dish out this IP if we ask it to. We can\n>  probably solve this by doing some cleanup at startup.\n> \n>  3) Other options\n> \n>  Nevertheless, leaving it exclusively to dnsmasq could cause leaks if\n>  dnsmasq gets shut down uncleanly.\n> \n>  There\n> \n> \n\n", 
            "date_created": "2011-02-08 06:10:28+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "I don't generally blow away the db between tests. I can't say for sure whether there may have been a stray dnsmasq left over from a debugging session. I'll make sure that's not the case and see if it still happens.", 
            "date_created": "2011-02-08 17:03:44.367161+00:00", 
            "author": "https://api.launchpad.net/1.0/~soren"
        }, 
        {
            "content": "Problem found.\n\nIt turns out that converting the timeout timestamp to a string caused\nthe SQL to be very inclusive in it's recycling of IP's. The linked\nbranch makes my integration tests very, very happy indeed. No failures\nover the last several hours (it used to fail once very 5 minutes or\nso).\n", 
            "date_created": "2011-02-09 14:10:36+00:00", 
            "author": "https://api.launchpad.net/1.0/~soren"
        }, 
        {
            "content": "Nice.  Propose it?  Datetimes are still converted to isoformat if passed through json though, so it might be nice to know what the problem was.  Was it just that sql didn't like iso format?", 
            "date_created": "2011-02-09 17:30:48.583317+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "2011/2/9 Vish Ishaya <email address hidden>:\n> Nice. \u00a0Propose it? \u00a0Datetimes are still converted to isoformat if passed\n> through json though, so it might be nice to know what the problem was.\n> Was it just that sql didn't like iso format?\n\nThat's why I haven't proposed it. I can see *very* clearly that this\nhas solved my problem (having run hundreds of instances since I\napplied this patch, and not a single failure), and I could see in my\ndebugging that the periodic_task in VlanManager would frequently\ndisassociate a number of supposed stale fixed ip(s).\n\n-- \nSoren Hansen \u00a0 \u00a0 \u00a0 \u00a0| http://linux2go.dk/\nUbuntu Developer \u00a0 \u00a0| http://www.ubuntu.com/\nOpenStack Developer | http://www.openstack.org/\n", 
            "date_created": "2011-02-09 19:44:14+00:00", 
            "author": "https://api.launchpad.net/1.0/~soren"
        }, 
        {
            "content": "Ok, I've managed to replicate it now (I had to get an ip to deallocate,\nbut not get released):\n\nSELECT * FROM fixed_ips WHERE network_id IN (SELECT id FROM networks\nWHERE host = 'oxygen') AND updated_at < '2011-02-09T19:52:01.355919' AND\ninstance_id IS NOT NULL AND allocated = 0;\n\nGave me this result:\n2011-02-09 12:25:23.756273|2011-02-09 20:01:43.789045||0|4|10.0.0.3|1|363|0|1|0\n\nSo \"2011-02-09 20:01:43.789045\" sorts earlier than\n\"2011-02-09T19:52:01.355919\", strongly suggesting that because we're\npassing a string, we end up doing lexicographical comparison rather than\ntemporal ditto. We could probably be in good shape if the used\nisoformat(' ') instead of just isoformat(), but I think this handling\nbelongs in the db layer.\n\nI'll propose my branch as is.\n\n-- \nSoren Hansen \u00a0 \u00a0 \u00a0 \u00a0| http://linux2go.dk/\nUbuntu Developer \u00a0 \u00a0| http://www.ubuntu.com/\nOpenStack Developer | http://www.openstack.org/\n", 
            "date_created": "2011-02-09 20:09:41+00:00", 
            "author": "https://api.launchpad.net/1.0/~soren"
        }
    ]
}