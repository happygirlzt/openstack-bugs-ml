{
    "status": "Invalid", 
    "last_updated": "2013-10-18 15:10:47.179534+00:00", 
    "description": "When running:\n\n./run_tests.sh -N -P nova.tests.db.test_migrations.TestNovaMigrations.test_walk_versions\n\nthere's a bad failure when running the test against SQLite 3. It seems to be located 206_add_instance_cleaned.py, line 47, in downgrade.\n\nTraceback (most recent call last):\n  File \"/home/zigo/sources/openstack/havana/nova/build-area/nova-2013.2~rc2/nova/tests/db/test_migrations.py\", line 159, in test_walk_versions\n    self._walk_versions(engine, self.snake_walk)\n  File \"/home/zigo/sources/openstack/havana/nova/build-area/nova-2013.2~rc2/nova/tests/db/test_migrations.py\", line 381, in _walk_versions\n    engine, version - 1, with_data=True)\n  File \"/home/zigo/sources/openstack/havana/nova/build-area/nova-2013.2~rc2/nova/tests/db/test_migrations.py\", line 398, in _migrate_down\n    self.migration_api.downgrade(engine, self.REPOSITORY, version)\n  File \"/usr/lib/python2.7/dist-packages/migrate/versioning/api.py\", line 202, in downgrade\n    return _migrate(url, repository, version, upgrade=False, err=err, **opts)\n  File \"<string>\", line 2, in _migrate\n  File \"/home/zigo/sources/openstack/havana/nova/build-area/nova-2013.2~rc2/nova/db/sqlalchemy/migration.py\", line 40, in patched_with_engine\n    return f(*a, **kw)\n  File \"/usr/lib/python2.7/dist-packages/migrate/versioning/api.py\", line 366, in _migrate\n    schema.runchange(ver, change, changeset.step)\n  File \"/usr/lib/python2.7/dist-packages/migrate/versioning/schema.py\", line 91, in runchange\n    change.run(self.engine, step)\n  File \"/usr/lib/python2.7/dist-packages/migrate/versioning/script/py.py\", line 145, in run\n    script_func(engine)\n  File \"/home/zigo/sources/openstack/havana/nova/build-area/nova-2013.2~rc2/nova/db/sqlalchemy/migrate_repo/versions/206_add_instance_cleaned.py\", line 47, in downgrade\n    instances.columns.cleaned.drop()\n  File \"/usr/lib/python2.7/dist-packages/migrate/changeset/schema.py\", line 549, in drop\n    engine._run_visitor(visitorcallable, self, connection, **kwargs)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 1479, in _run_visitor\n    conn._run_visitor(visitorcallable, element, **kwargs)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 1122, in _run_visitor\n    **kwargs).traverse_single(element)\n  File \"/usr/lib/python2.7/dist-packages/migrate/changeset/ansisql.py\", line 53, in traverse_single\n    ret = super(AlterTableVisitor, self).traverse_single(elem)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/sql/visitors.py\", line 111, in traverse_single\n    return meth(obj, **kw)\n  File \"/usr/lib/python2.7/dist-packages/migrate/changeset/databases/sqlite.py\", line 90, in visit_column\n    super(SQLiteColumnDropper,self).visit_column(column)\n  File \"/usr/lib/python2.7/dist-packages/migrate/changeset/databases/sqlite.py\", line 53, in visit_column\n    self.recreate_table(table,column,delta)\n  File \"/usr/lib/python2.7/dist-packages/migrate/changeset/databases/sqlite.py\", line 40, in recreate_table\n    table.create(bind=self.connection)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/schema.py\", line 614, in create\n    checkfirst=checkfirst)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 1122, in _run_visitor\n    **kwargs).traverse_single(element)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/sql/visitors.py\", line 111, in traverse_single\n    return meth(obj, **kw)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/ddl.py\", line 93, in visit_table\n    self.traverse_single(index)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/sql/visitors.py\", line 111, in traverse_single\n    return meth(obj, **kw)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/ddl.py\", line 105, in visit_index\n    self.connection.execute(schema.CreateIndex(index))\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 662, in execute\n    params)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 720, in _execute_ddl\n    compiled\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 874, in _execute_context\n    context)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 1024, in _handle_dbapi_exception\n    exc_info\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/util/compat.py\", line 195, in raise_from_cause\n    reraise(type(exception), exception, tb=exc_tb)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 867, in _execute_context\n    context)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/default.py\", line 324, in do_execute\n    cursor.execute(statement, parameters)\nOperationalError: (OperationalError) table instances has no column named cleaned u'CREATE INDEX instances_host_deleted_cleaned_idx ON instances (host, deleted, cleaned)' ()", 
    "tags": [
        "db"
    ], 
    "importance": "Undecided", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1241038", 
    "owner": "None", 
    "id": 1241038, 
    "index": 4203, 
    "created": "2013-10-17 15:16:11.214721+00:00", 
    "title": "206_add_instance_cleaned.py fails to downgrade with SQLite 3", 
    "comments": [
        {
            "content": "When running:\n\n./run_tests.sh -N -P nova.tests.db.test_migrations.TestNovaMigrations.test_walk_versions\n\nthere's a bad failure when running the test against SQLite 3. It seems to be located 206_add_instance_cleaned.py, line 47, in downgrade.\n\nTraceback (most recent call last):\n  File \"/home/zigo/sources/openstack/havana/nova/build-area/nova-2013.2~rc2/nova/tests/db/test_migrations.py\", line 159, in test_walk_versions\n    self._walk_versions(engine, self.snake_walk)\n  File \"/home/zigo/sources/openstack/havana/nova/build-area/nova-2013.2~rc2/nova/tests/db/test_migrations.py\", line 381, in _walk_versions\n    engine, version - 1, with_data=True)\n  File \"/home/zigo/sources/openstack/havana/nova/build-area/nova-2013.2~rc2/nova/tests/db/test_migrations.py\", line 398, in _migrate_down\n    self.migration_api.downgrade(engine, self.REPOSITORY, version)\n  File \"/usr/lib/python2.7/dist-packages/migrate/versioning/api.py\", line 202, in downgrade\n    return _migrate(url, repository, version, upgrade=False, err=err, **opts)\n  File \"<string>\", line 2, in _migrate\n  File \"/home/zigo/sources/openstack/havana/nova/build-area/nova-2013.2~rc2/nova/db/sqlalchemy/migration.py\", line 40, in patched_with_engine\n    return f(*a, **kw)\n  File \"/usr/lib/python2.7/dist-packages/migrate/versioning/api.py\", line 366, in _migrate\n    schema.runchange(ver, change, changeset.step)\n  File \"/usr/lib/python2.7/dist-packages/migrate/versioning/schema.py\", line 91, in runchange\n    change.run(self.engine, step)\n  File \"/usr/lib/python2.7/dist-packages/migrate/versioning/script/py.py\", line 145, in run\n    script_func(engine)\n  File \"/home/zigo/sources/openstack/havana/nova/build-area/nova-2013.2~rc2/nova/db/sqlalchemy/migrate_repo/versions/206_add_instance_cleaned.py\", line 47, in downgrade\n    instances.columns.cleaned.drop()\n  File \"/usr/lib/python2.7/dist-packages/migrate/changeset/schema.py\", line 549, in drop\n    engine._run_visitor(visitorcallable, self, connection, **kwargs)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 1479, in _run_visitor\n    conn._run_visitor(visitorcallable, element, **kwargs)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 1122, in _run_visitor\n    **kwargs).traverse_single(element)\n  File \"/usr/lib/python2.7/dist-packages/migrate/changeset/ansisql.py\", line 53, in traverse_single\n    ret = super(AlterTableVisitor, self).traverse_single(elem)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/sql/visitors.py\", line 111, in traverse_single\n    return meth(obj, **kw)\n  File \"/usr/lib/python2.7/dist-packages/migrate/changeset/databases/sqlite.py\", line 90, in visit_column\n    super(SQLiteColumnDropper,self).visit_column(column)\n  File \"/usr/lib/python2.7/dist-packages/migrate/changeset/databases/sqlite.py\", line 53, in visit_column\n    self.recreate_table(table,column,delta)\n  File \"/usr/lib/python2.7/dist-packages/migrate/changeset/databases/sqlite.py\", line 40, in recreate_table\n    table.create(bind=self.connection)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/schema.py\", line 614, in create\n    checkfirst=checkfirst)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 1122, in _run_visitor\n    **kwargs).traverse_single(element)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/sql/visitors.py\", line 111, in traverse_single\n    return meth(obj, **kw)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/ddl.py\", line 93, in visit_table\n    self.traverse_single(index)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/sql/visitors.py\", line 111, in traverse_single\n    return meth(obj, **kw)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/ddl.py\", line 105, in visit_index\n    self.connection.execute(schema.CreateIndex(index))\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 662, in execute\n    params)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 720, in _execute_ddl\n    compiled\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 874, in _execute_context\n    context)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 1024, in _handle_dbapi_exception\n    exc_info\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/util/compat.py\", line 195, in raise_from_cause\n    reraise(type(exception), exception, tb=exc_tb)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 867, in _execute_context\n    context)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/default.py\", line 324, in do_execute\n    cursor.execute(statement, parameters)\nOperationalError: (OperationalError) table instances has no column named cleaned u'CREATE INDEX instances_host_deleted_cleaned_idx ON instances (host, deleted, cleaned)' ()", 
            "date_created": "2013-10-17 15:16:11.214721+00:00", 
            "author": "https://api.launchpad.net/1.0/~thomas-goirand"
        }, 
        {
            "content": "This is has nothing to do with Nova, but rather with sqlalchemy-migrate not supporting SQLAlchemy >= 0.8 versions properly.\n\nDue to limitation of ALTER statement in SQLite sqlachemy-migrate recreates a table when its column is dropped. If there is an index on this column - it's not recreated for a new table. For composite indexes it's a bit interesting: sqlalchemy-migrate authors tried to recreate composite indexes not including the column that was dropped. This worked fine till SQLAlchemy 0.8 was released, which brought support of expression indexes. sqlalchemy-migrate doesn't know nothing about expression columns, so it just ignores them. At the same time, SQLAlchemy versions >= 0.8 use expressions attribute of Index instance to emit DDL. This means, that sqlalchemy-migrate forces SQLAlchemy to create an index on column, that doesn't exist.\n\nI'll check, if I can fix this easily in sqlalchemy-migrate, so we could release later. Anyway, I wouldn't recommend anyone to use migrations with SQLite.", 
            "date_created": "2013-10-17 15:56:36.904273+00:00", 
            "author": "https://api.launchpad.net/1.0/~rpodolyaka"
        }, 
        {
            "content": "We've discussed this already, and the way to fix it was to re-create a temporary table as a copy of the old table, then drop the old table, and rename the temporary table. Probably this should be done directly in sqlalchemy-migrate so we don't have to think about it.", 
            "date_created": "2013-10-17 16:30:16.494988+00:00", 
            "author": "https://api.launchpad.net/1.0/~thomas-goirand"
        }, 
        {
            "content": "Oh, when I think about it, one solution for this one could be to simply not run the downgrade unit test when running with SQLite. We shouldn't care too much about that one, IMO.", 
            "date_created": "2013-10-17 16:39:26.232861+00:00", 
            "author": "https://api.launchpad.net/1.0/~thomas-goirand"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/52634", 
            "date_created": "2013-10-18 13:29:56.026744+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/52634\nCommitted: http://github.com/stackforge/sqlalchemy-migrate/commit/2485118c24b2293747dfafb3be58a6bdc65f7d66\nSubmitter: Jenkins\nBranch:    master\n\ncommit 2485118c24b2293747dfafb3be58a6bdc65f7d66\nAuthor: Roman Podolyaka <email address hidden>\nDate:   Fri Oct 18 14:23:11 2013 +0300\n\n    Fix dropping of indexed columns in sqlite/sa08\n    \n    Version 0.8 of SQLAlchemy added support of indexes\n    on expressions in addition to plain table columns,\n    which changed the way indexes are created.\n    \n    This broke support of dropping columns of composite\n    indexes for SQLite: due to limitations of ALTER in\n    SQLite every time a column is dropped, we recreate\n    the whole table without the given column; if a\n    column is a part of a composite index, we change the\n    index definition to omit that column and then indexes\n    are recreated too.\n    \n    SQLAlchemy versions starting from 0.8 no more pay\n    attention to 'columns' attribute of Index instances\n    when generating DDL for indexes, so when one of columns\n    of a composite index is dropped, we try to create a\n    new index on the column that doesn't exist anymore,\n    which of course fails.\n    \n    Closes-Bug: #1241038\n    \n    Change-Id: I777b8ce36e36f49bfb0889908811a063cf1a527b\n", 
            "date_created": "2013-10-18 15:10:46.109663+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}