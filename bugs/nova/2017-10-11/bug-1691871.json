{
    "status": "In Progress", 
    "last_updated": "2017-09-19 12:02:02.488170+00:00", 
    "description": "Forcing a service, like nova-compute, down is being used by people for routine planned maintenance/upgrades of their computes, but it's not really intended for that. Planned maintenance for a nova-compute service should disable the service so it's taken out of scheduling decisions, as discussed in the ops guide here:\n\nhttps://docs.openstack.org/ops-guide/ops-maintenance-compute.html#planned-maintenance\n\nAs described in the spec which added the force-down feature:\n\nhttps://specs.openstack.org/openstack/nova-specs/specs/liberty/implemented/mark-host-down.html\n\nIt's really about an external monitoring tool detect that a host is about to fail (maybe hardware faults), and the external service needs to force the service down (bypass the service group API heartbeat checks) and perform an evacuation.\n\nThe forced-down flag is checked during the evacuate API flow.\n\nForcing a host down for routine upgrades can be problematic as forced-down hosts are not part of the minimum service version checks:\n\nhttps://github.com/openstack/nova/blob/master/nova/objects/service.py#L307\nhttps://github.com/openstack/nova/blob/master/nova/db/sqlalchemy/api.py#L490\n\nSo if you force a mitaka nova-compute service down, and upgrade the rest of your computes to newton, when you try to set the mitaka service to forced_down=False, or simply restart the mitaka nova-compute service, it's going to fail with a ServiceTooOld exception. The only way out of that is (1) modify the flag in the database directly or (2) upgrade the compute to newton (in this example) and restart it.\n\nWe should add information about this to the compute API reference so that operators have a better understanding of what forced-down vs service disable means and in what cases you'd use them.", 
    "tags": [
        "api-ref", 
        "openstack-version.liberty", 
        "upgrade"
    ], 
    "importance": "Medium", 
    "heat": 10, 
    "link": "https://bugs.launchpad.net/nova/+bug/1691871", 
    "owner": "https://api.launchpad.net/1.0/~sdague", 
    "id": 1691871, 
    "index": 4821, 
    "created": "2017-05-18 22:29:57.070497+00:00", 
    "title": "forced-down vs service disable is not documented well in the compute API reference", 
    "comments": [
        {
            "content": "Forcing a service, like nova-compute, down is being used by people for routine planned maintenance/upgrades of their computes, but it's not really intended for that. Planned maintenance for a nova-compute service should disable the service so it's taken out of scheduling decisions, as discussed in the ops guide here:\n\nhttps://docs.openstack.org/ops-guide/ops-maintenance-compute.html#planned-maintenance\n\nAs described in the spec which added the force-down feature:\n\nhttps://specs.openstack.org/openstack/nova-specs/specs/liberty/implemented/mark-host-down.html\n\nIt's really about an external monitoring tool detect that a host is about to fail (maybe hardware faults), and the external service needs to force the service down (bypass the service group API heartbeat checks) and perform an evacuation.\n\nThe forced-down flag is checked during the evacuate API flow.\n\nForcing a host down for routine upgrades can be problematic as forced-down hosts are not part of the minimum service version checks:\n\nhttps://github.com/openstack/nova/blob/master/nova/objects/service.py#L307\nhttps://github.com/openstack/nova/blob/master/nova/db/sqlalchemy/api.py#L490\n\nSo if you force a mitaka nova-compute service down, and upgrade the rest of your computes to newton, when you try to set the mitaka service to forced_down=False, or simply restart the mitaka nova-compute service, it's going to fail with a ServiceTooOld exception. The only way out of that is (1) modify the flag in the database directly or (2) upgrade the compute to newton (in this example) and restart it.\n\nWe should add information about this to the compute API reference so that operators have a better understanding of what forced-down vs service disable means and in what cases you'd use them.", 
            "date_created": "2017-05-18 22:29:57.070497+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Automatically discovered version liberty in description. If this is incorrect, please update the description to include 'nova version: ...'", 
            "date_created": "2017-06-27 16:00:12.759333+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "There are no currently open reviews on this bug, changing the status back to the previous state and unassigning. If there are active reviews related to this bug, please include links in comments. ", 
            "date_created": "2017-06-27 19:31:24.301569+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/492533", 
            "date_created": "2017-08-10 13:35:18.910680+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Change abandoned by Sean Dague (<email address hidden>) on branch: master\nReview: https://review.openstack.org/492533", 
            "date_created": "2017-09-19 12:02:01.445900+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}