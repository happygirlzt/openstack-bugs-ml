{
    "status": "Fix Released", 
    "last_updated": "2014-10-16 08:37:44.300989+00:00", 
    "description": "Extending a disk during spawn races, which can result in failure. It is possible to hit this bug by launching a large number of instances of an image which isn't already cached, simultaneously. Some of them will race to extend the cached image, ultimately resulting in an error such as:\n\n2014-06-17 10:49:26.006 9177 WARNING nova.virt.vmwareapi.driver [-] Task [ExtendVirtualDisk_Task] \n   value = \"task-12073\"\n   _type = \"Task\"\n } status: error Unable to access file [datastore1] 172.16.0.13_base/326153d2-1226-415a-a194-2ca47ac3c48b/326153d2-1226-415a-a194-2ca47ac3c48b.1.vmdk since it is locked", 
    "tags": [
        "in-stable-icehouse", 
        "vmware"
    ], 
    "importance": "High", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1333587", 
    "owner": "https://api.launchpad.net/1.0/~mbooth-9", 
    "id": 1333587, 
    "index": 1519, 
    "created": "2014-06-24 08:42:01.297787+00:00", 
    "title": "VMware: ExtendVirtualDisk_Task fails due to locked file", 
    "comments": [
        {
            "content": "Extending a disk during spawn races, which can result in failure. It is possible to hit this bug by launching a large number of instances of an image which isn't already cached, simultaneously. Some of them will race to extend the cached image, ultimately resulting in an error such as:\n\n2014-06-17 10:49:26.006 9177 WARNING nova.virt.vmwareapi.driver [-] Task [ExtendVirtualDisk_Task] \n   value = \"task-12073\"\n   _type = \"Task\"\n } status: error Unable to access file [datastore1] 172.16.0.13_base/326153d2-1226-415a-a194-2ca47ac3c48b/326153d2-1226-415a-a194-2ca47ac3c48b.1.vmdk since it is locked", 
            "date_created": "2014-06-24 08:42:01.297787+00:00", 
            "author": "https://api.launchpad.net/1.0/~mbooth-9"
        }, 
        {
            "content": "https://review.openstack.org/#/c/102224/", 
            "date_created": "2014-06-24 14:02:05.386850+00:00", 
            "author": "https://api.launchpad.net/1.0/~mbooth-9"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/102224\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=994cdb234b2b16d97f0276c6356db65817944ee2\nSubmitter: Jenkins\nBranch:    master\n\ncommit 994cdb234b2b16d97f0276c6356db65817944ee2\nAuthor: Matthew Booth <email address hidden>\nDate:   Tue Jun 24 12:12:59 2014 +0100\n\n    VMware: Fix race in spawn() when resizing cached image\n    \n    spawn() guards against multiple threads simultaneously attempting to\n    cache the same image, but it wasn't guarding against them\n    simultanously trying to create a resized copy in the cache. Attempting\n    to create a large number of images simultaneously of an uncached image\n    would result in a race to create the resized image. This resulted in 2\n    classes of failed instance:\n    \n    1. Instances whose disk was a linked clone of a copy which had been\n       subsequently overwritten. These were corrupt.\n    2. Instances whose spawn() failed in ExtendVirtualDisk_Task due to a\n       locked image.\n    \n    This patch creates a Nova-local lock for the resized image. The image\n    is in a per-Nova directory on the datastore, so inter-Nova locking is\n    not a concern. The lock guards both testing for the existence of the\n    image, and its creation. Therefore when multiple processes race, only\n    1 will create the resized copy, and all others will find and use it.\n    In normal usage this will add the overhead of an additional\n    uncontended local lock creation and deletion in spawn().\n    \n    In wrapping this code in a lock, we also make certain that any failure\n    to create the resized image is appropriately cleaned up. Otherwise\n    subsequent users will attempt to use a corrupt copy.\n    \n    Change-Id: I3df3d614656e511c909b6c1837582c0d34bf84c6\n    Closes-bug: 1333587\n", 
            "date_created": "2014-07-04 19:45:23.261859+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: stable/icehouse\nReview: https://review.openstack.org/106979", 
            "date_created": "2014-07-15 09:55:38.019989+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/106979\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=a8b52c05ed27faf97f0b35ecf473e4cc7eac66ab\nSubmitter: Jenkins\nBranch:    stable/icehouse\n\ncommit a8b52c05ed27faf97f0b35ecf473e4cc7eac66ab\nAuthor: Matthew Booth <email address hidden>\nDate:   Tue Jun 24 12:12:59 2014 +0100\n\n    VMware: Fix race in spawn() when resizing cached image\n    \n    spawn() guards against multiple threads simultaneously attempting to\n    cache the same image, but it wasn't guarding against them\n    simultanously trying to create a resized copy in the cache. Attempting\n    to create a large number of images simultaneously of an uncached image\n    would result in a race to create the resized image. This resulted in 2\n    classes of failed instance:\n    \n    1. Instances whose disk was a linked clone of a copy which had been\n       subsequently overwritten. These were corrupt.\n    2. Instances whose spawn() failed in ExtendVirtualDisk_Task due to a\n       locked image.\n    \n    This patch creates a Nova-local lock for the resized image. The image\n    is in a per-Nova directory on the datastore, so inter-Nova locking is\n    not a concern. The lock guards both testing for the existence of the\n    image, and its creation. Therefore when multiple processes race, only\n    1 will create the resized copy, and all others will find and use it.\n    In normal usage this will add the overhead of an additional\n    uncontended local lock creation and deletion in spawn().\n    \n    In wrapping this code in a lock, we also make certain that any failure\n    to create the resized image is appropriately cleaned up. Otherwise\n    subsequent users will attempt to use a corrupt copy.\n    \n    Conflicts:\n    \tnova/virt/vmwareapi/vmops.py\n    \n    Required changes:\n      datastore.build_path -> ds_util.build_datastore_path\n      No datastore object\n      vm_util.copy_virtual_disk -> _copy_virtual_disk\n      self.fake_image_uuid -> 'fake_image_uuid'\n      removed use of _LE() for log message\n    \n    This change includes a test which depends on change\n    I2025bffa887582eaa9e9072d0400f90ca97d1898.\n    \n    Change-Id: I3df3d614656e511c909b6c1837582c0d34bf84c6\n    Closes-bug: 1333587\n    (cherry picked from commit 994cdb234b2b16d97f0276c6356db65817944ee2)\n", 
            "date_created": "2014-07-30 20:06:23.954613+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}