{
    "status": "Fix Released", 
    "last_updated": "2013-04-04 11:03:41.755100+00:00", 
    "description": "All of our REST resources are setup with the route.mapper (when you dig deep enough), which registers a set of default methods on all the resources in nova. It creates 5 methods:\n\nGET /resource - def index\nPOST /resource- def create\nPUT /resource/{id} - def update\nDELETE /resource/{id} - def delete\nGET /resource/{id} - def show\n\nShould a resource not support all those actions, the default behavior ends up returning 200 with some boilerplate HTML (a good example is doing a DELETE on /v2/ for nova). There doesn't seem to be any side effects from this action, however for correctness we should do the right thing here.\n\nThe correct behavior would be the return of an HTTP 405 (method not allowed) in these cases.", 
    "tags": [], 
    "importance": "Medium", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1088530", 
    "owner": "https://api.launchpad.net/1.0/~yugsuo", 
    "id": 1088530, 
    "index": 3173, 
    "created": "2012-12-10 15:55:38.548374+00:00", 
    "title": "wrong methods can be called on nova APIs", 
    "comments": [
        {
            "content": "All of our REST resources are setup with the route.mapper (when you dig deep enough), which registers a set of default methods on all the resources in nova. It creates 5 methods:\n\nGET /resource - def index\nPOST /resource- def create\nPUT /resource/{id} - def update\nDELETE /resource/{id} - def delete\nGET /resource/{id} - def show\n\nShould a resource not support all those actions, the default behavior ends up returning 200 with some boilerplate HTML (a good example is doing a DELETE on /v2/ for nova). There doesn't seem to be any side effects from this action, however for correctness we should do the right thing here.\n\nThe correct behavior would be the return of an HTTP 405 (method not allowed) in these cases.", 
            "date_created": "2012-12-10 15:55:38.548374+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "Hello, I found where is the problem :\n\nin nova/nova/api/openstack/compute/__init__.py, the APIRouter class\n\nmapper.connect(\"versions\", \"/\",\n                        controller=self.resources['versions'],\n                        action='show')\n\nit should add request method conditions like this:\n\nmapper.connect(\"versions\", \"/\",\n                        controller=self.resources['versions'],\n                        action='show',\n                        conditions={\"method\": ['GET']})\n\nBut this changes the result from HTTP 200 OK  to  HTTP 404 Not Found, not 405.\n\nAnd only versions have this problem, others are normal. \n\nYou can test like this:\n\n$ curl -X DELETE -v -H \"X-Auth-Token:$AUTH_TOKEN\" http://192.168.1.100:8774/v2/\n\n", 
            "date_created": "2012-12-31 07:51:54.046649+00:00", 
            "author": "https://api.launchpad.net/1.0/~yugsuo"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/18771", 
            "date_created": "2012-12-31 08:25:45.792176+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/18771\nCommitted: http://github.com/openstack/nova/commit/1ab59c999e918e86c4bd0224db9ef98b585138a4\nSubmitter: Jenkins\nBranch:    master\n\ncommit 1ab59c999e918e86c4bd0224db9ef98b585138a4\nAuthor: yugsuo <email address hidden>\nDate:   Mon Dec 31 16:03:54 2012 +0800\n\n    Add conditions in compute APIRouter\n    \n    The Route of versions should add HTTP GET methods conditions, because\n    it only has a 'show' action, thus other methods will not match.\n    \n    Fixes bug 1088530\n    \n    Change-Id: Ib21381324cf7067015d0a6e36a0f0292eb902fe9\n", 
            "date_created": "2013-01-06 02:30:39.352958+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}