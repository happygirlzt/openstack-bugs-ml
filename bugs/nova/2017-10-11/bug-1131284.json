{
    "status": "Invalid", 
    "last_updated": "2013-03-18 01:28:50.567046+00:00", 
    "description": "Requesting to add upstream stable commit:\nhttps://github.com/openstack/nova/commit/7ace55fcf9e1b7fea074f6c0331b6feafbbc4178\n\nreviewed here:\nhttps://review.openstack.org/#/c/20337/\n\nand which addresses this upstream bug:\nhttps://bugs.launchpad.net/nova/+bug/1097806\n\n(updated description of bug follows)\n\nLibvirt-managed qemu/KVM VMs can be paused outside of nova compute's workflow through a variety of means.\n\n* By issuing virsh suspend\n* By issuing virsh qemu-monitor-command '{\"execute\" : \"stop\"}'\n* By causing qemu to emit a STOP event, for example when attaching a GDB debugger and single-stepping\n* By connecting through an additional qemu monitor and issuing any commands that may cause qemu to emit a STOP event.\n\nStarting in Folsom (specifically https://github.com/openstack/nova/commit/129b87e17d3333aeaa9e855a70dea51e6581ea63#L6R2502 i.e. commit 129b87e diff line 2502) nova compute will destroy a VM if libvirt reports it as paused and this doesn't fit nova compute's recorded state for the VM.\n\nWhile the original rationale is to destroy VMs that are paused by IO errors or KVM emulation errors, which would also cause qemu to emit STOP events.\n\nThe problem is that this will also destroy VMs that are paused through a variety of valid reasons as outlined above.\n\nThe problem is exacerbated by a Libvirt bug (https://bugzilla.redhat.com/show_bug.cgi?id=892791) which latches the state of a VM to paused even though the VM is running. The fix is already committed upstream (http://libvirt.org/git/?p=libvirt.git;a=commit;h=aedfcce33e4c2f266668a39fd655574fe34f1265), as well as being integrated into Raring and triaged for backport into Precise: https://bugs.launchpad.net/bugs/1097824.\n\nEven with libvirt's bug fixed, there are still points in time at which nova-compute will check a VMs state, find it paused for a valid reason, and decide to erroneously destroy it.\n\nThe fix is to either remove this behavior, or to further query libvirt for the paused reason, which will show conclusively whether the VM is effectively crashed, or just paused.", 
    "tags": [], 
    "importance": "Undecided", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1131284", 
    "owner": "None", 
    "id": 1131284, 
    "index": 3432, 
    "created": "2013-02-21 16:51:44.929942+00:00", 
    "title": "Folsom erroneously destroys paused VMs", 
    "comments": [
        {
            "content": "Requesting to add upstream stable commit:\nhttps://github.com/openstack/nova/commit/7ace55fcf9e1b7fea074f6c0331b6feafbbc4178\n\nreviewed here:\nhttps://review.openstack.org/#/c/20337/\n\nand which addresses this upstream bug:\nhttps://bugs.launchpad.net/nova/+bug/1097806\n\n(updated description of bug follows)\n\nLibvirt-managed qemu/KVM VMs can be paused outside of nova compute's workflow through a variety of means.\n\n* By issuing virsh suspend\n* By issuing virsh qemu-monitor-command '{\"execute\" : \"stop\"}'\n* By causing qemu to emit a STOP event, for example when attaching a GDB debugger and single-stepping\n* By connecting through an additional qemu monitor and issuing any commands that may cause qemu to emit a STOP event.\n\nStarting in Folsom (specifically https://github.com/openstack/nova/commit/129b87e17d3333aeaa9e855a70dea51e6581ea63#L6R2502 i.e. commit 129b87e diff line 2502) nova compute will destroy a VM if libvirt reports it as paused and this doesn't fit nova compute's recorded state for the VM.\n\nWhile the original rationale is to destroy VMs that are paused by IO errors or KVM emulation errors, which would also cause qemu to emit STOP events.\n\nThe problem is that this will also destroy VMs that are paused through a variety of valid reasons as outlined above.\n\nThe problem is exacerbated by a Libvirt bug (https://bugzilla.redhat.com/show_bug.cgi?id=892791) which latches the state of a VM to paused even though the VM is running. The fix is already committed upstream (http://libvirt.org/git/?p=libvirt.git;a=commit;h=aedfcce33e4c2f266668a39fd655574fe34f1265), as well as being integrated into Raring and triaged for backport into Precise: https://bugs.launchpad.net/bugs/1097824.\n\nEven with libvirt's bug fixed, there are still points in time at which nova-compute will check a VMs state, find it paused for a valid reason, and decide to erroneously destroy it.\n\nThe fix is to either remove this behavior, or to further query libvirt for the paused reason, which will show conclusively whether the VM is effectively crashed, or just paused.", 
            "date_created": "2013-02-21 16:51:44.929942+00:00", 
            "author": "https://api.launchpad.net/1.0/~andreslc-x"
        }, 
        {
            "content": "Looks like this is just an Ubuntu issue, so I'm closing it out for nova.", 
            "date_created": "2013-03-01 15:50:55.479910+00:00", 
            "author": "https://api.launchpad.net/1.0/~russellb"
        }, 
        {
            "content": "As mentioned in the description, the issue has been fixed in nova grizzly and backported to nova folsom. Sorry for any confusion.", 
            "date_created": "2013-03-01 16:08:34.244034+00:00", 
            "author": "https://api.launchpad.net/1.0/~andreslc-x"
        }, 
        {
            "content": "Will a fix be released for the folsom (2012.2) packages? That is the intent of the bug filing. Thanks!", 
            "date_created": "2013-03-18 01:28:49.575372+00:00", 
            "author": "https://api.launchpad.net/1.0/~andreslc-x"
        }
    ]
}