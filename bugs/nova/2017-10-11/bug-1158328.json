{
    "status": "Won't Fix", 
    "last_updated": "2016-07-06 14:57:19.058243+00:00", 
    "description": "The credentials for database conenctions and the keystone authtoken are stored in plaintext within the nova.conf and apipaste config files.\n\nThese values should be encrypted.  A scheme similar to /etc/shadow would be great.", 
    "tags": [
        "security"
    ], 
    "importance": "Wishlist", 
    "heat": 38, 
    "link": "https://bugs.launchpad.net/nova/+bug/1158328", 
    "owner": "None", 
    "id": 1158328, 
    "index": 1332, 
    "created": "2013-03-21 14:14:59.487941+00:00", 
    "title": "passwords in config files stored in plaintext", 
    "comments": [
        {
            "content": "The credentials for database conenctions and the keystone authtoken are stored in plaintext within the nova.conf and apipaste config files.\n\nThese values should be encrypted.  A scheme similar to /etc/shadow would be great.", 
            "date_created": "2013-03-21 14:14:59.487941+00:00", 
            "author": "https://api.launchpad.net/1.0/~stuart-stent"
        }, 
        {
            "content": "I think we should consider this a \"hardening\" request as opposed to a private vulnerability.  Opinions from other VMT members?", 
            "date_created": "2013-03-21 19:50:31.959477+00:00", 
            "author": "https://api.launchpad.net/1.0/~russellb"
        }, 
        {
            "content": "Agreed. We need to be congnizant when we do this that it makes deployment harder as well. These config files are meant to only be readable by the nova user, right?", 
            "date_created": "2013-03-21 19:53:56.872117+00:00", 
            "author": "https://api.launchpad.net/1.0/~mikal"
        }, 
        {
            "content": "mikal: right", 
            "date_created": "2013-03-21 19:57:49.774074+00:00", 
            "author": "https://api.launchpad.net/1.0/~russellb"
        }, 
        {
            "content": "Even if it is only readable by the nova user (and root of course) it's still possible for someone to potentailly read that file and acquire  the passwords to the database, giving  them ALOT of access to that system.\n\nAt least if they are encrypted, even if they do manage to read it, it doesn't get them much.\n\n", 
            "date_created": "2013-03-22 16:02:35.339496+00:00", 
            "author": "https://api.launchpad.net/1.0/~stuart-stent"
        }, 
        {
            "content": "I see this bug is old and Wishlisted so it may never get fixed, but I'd like to add that plaintext passwords are generally a no-no when the service account auth is managed by Corporate AD or LDAP. It may complicate some deployments but it would be nice to have a solution to this.", 
            "date_created": "2014-02-24 21:53:31.752482+00:00", 
            "author": "https://api.launchpad.net/1.0/~mfisch"
        }, 
        {
            "content": "A shadow like password wouldn't be possible as it needs to be reversible.\nAnd as it's reversible anybody with access to the file would be able to\nreverse it with the encryption scheme. Making it security by obscurity.\n\nThis could probably best be solved with something like a pkcs7 key\nexchange, although this would be a little more work.\n\nD.\nOn Mar 4, 2014 10:35 AM, \"Matt Fischer\" <email address hidden> wrote:\n\n> I see this bug is old and Wishlisted so it may never get fixed, but I'd\n> like to add that plaintext passwords are generally a no-no when the\n> service account auth is managed by Corporate AD or LDAP. It may\n> complicate some deployments but it would be nice to have a solution to\n> this.\n>\n> --\n> You received this bug notification because you are a member of OpenStack\n> Security Group, which is subscribed to OpenStack.\n> https://bugs.launchpad.net/bugs/1158328\n>\n> Title:\n>   passwords in config files stored in plaintext\n>\n> Status in OpenStack Compute (Nova):\n>   Confirmed\n>\n> Bug description:\n>   The credentials for database conenctions and the keystone authtoken\n>   are stored in plaintext within the nova.conf and apipaste config\n>   files.\n>\n>   These values should be encrypted.  A scheme similar to /etc/shadow\n>   would be great.\n>\n> To manage notifications about this bug go to:\n> https://bugs.launchpad.net/nova/+bug/1158328/+subscriptions\n>\n> _______________________________________________\n> Openstack-security mailing list\n> <email address hidden>\n> http://lists.openstack.org/cgi-bin/mailman/listinfo/openstack-security\n>\n", 
            "date_created": "2014-03-04 09:59:09+00:00", 
            "author": "https://api.launchpad.net/1.0/~daniel-crompton"
        }, 
        {
            "content": "I see Barbican as the right tool for this job. The configuration file can get the secret identifier, and the secret itself can be stored in Barbican where it can be centrally fortified, access controlled, access logged, and could be revoked. The service would use an HTTPS request to retrieve the secret from its encrypted remote storage in Barbican on an as-needed basis.\n\n--\nAdrian\n\nOn Mar 4, 2014, at 2:01 AM, \"Dani\u00ebl W. Crompton\" <<email address hidden><mailto:<email address hidden>>> wrote:\n\n\nA shadow like password wouldn't be possible as it needs to be reversible. And as it's reversible anybody with access to the file would be able to reverse it with the encryption scheme. Making it security by obscurity.\n\nThis could probably best be solved with something like a pkcs7 key exchange, although this would be a little more work.\n\nD.\n\nOn Mar 4, 2014 10:35 AM, \"Matt Fischer\" <<email address hidden><mailto:<email address hidden>>> wrote:\nI see this bug is old and Wishlisted so it may never get fixed, but I'd\nlike to add that plaintext passwords are generally a no-no when the\nservice account auth is managed by Corporate AD or LDAP. It may\ncomplicate some deployments but it would be nice to have a solution to\nthis.\n\n--\nYou received this bug notification because you are a member of OpenStack\nSecurity Group, which is subscribed to OpenStack.\nhttps://bugs.launchpad.net/bugs/1158328\n\nTitle:\n  passwords in config files stored in plaintext\n\nStatus in OpenStack Compute (Nova):\n  Confirmed\n\nBug description:\n  The credentials for database conenctions and the keystone authtoken\n  are stored in plaintext within the nova.conf and apipaste config\n  files.\n\n  These values should be encrypted.  A scheme similar to /etc/shadow\n  would be great.\n\nTo manage notifications about this bug go to:\nhttps://bugs.launchpad.net/nova/+bug/1158328/+subscriptions\n\n_______________________________________________\nOpenstack-security mailing list\n<email address hidden><mailto:<email address hidden>>\nhttp://lists.openstack.org/cgi-bin/mailman/listinfo/openstack-security\n_______________________________________________\nOpenstack-security mailing list\n<email address hidden><mailto:<email address hidden>>\nhttp://lists.openstack.org/cgi-bin/mailman/listinfo/openstack-security\n", 
            "date_created": "2014-03-04 14:51:55+00:00", 
            "author": "https://api.launchpad.net/1.0/~aotto"
        }, 
        {
            "content": "I feel like this is pretty strongly out of scope. Applications that need to talk to databases that require passwords need access to those passwords in plain text. While we could do obfuscation, it doesn't really address the issue, it just makes you think you addressed it. Honestly better to leave things clear so people rightly understand that a compromise of that file means all bets are off.", 
            "date_created": "2014-09-03 20:14:05.379720+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "This issue should not be dismissed as out of scope or declared as Won't fix. If OpenStack wants enterprise adoption, this are the issues that will need to be addressed. \nAs a side note, It  doesn't help to have comments such as \"acquire the passwords to the database, giving them ALOT of access to that system\" in the thread then later dismiss the issue. It is not uncommon for IT auditors to assess risk to a given deployment and to come across this exchange. For someone not familiar with the inner workings of OpenStack - this becomes a major red flag in the audit report.\n\nPersonally I would like to see this issue addressed in some fashion other than plain text.", 
            "date_created": "2014-09-12 20:21:32.101459+00:00", 
            "author": "https://api.launchpad.net/1.0/~glenn-ferguson"
        }, 
        {
            "content": "With postgresql at least you can configure it with authenticate with GSSAPI+Kerberos at which point there is no need to use passwords at all. I'm not sure if MySQL has the same level of GSSAPI integration, but this is the kind of approach we need to take. \n\nUse of any kind of password auth is the root cause flaw, regardless of whether Nova has the passwd in a plain text file. So we need to identify recommendations on how to configure Nova + databases, etc with out use of passwords at all.", 
            "date_created": "2014-09-16 11:28:19.539966+00:00", 
            "author": "https://api.launchpad.net/1.0/~berrange"
        }, 
        {
            "content": "Agreed. Obfuscation or symmetric encryption of passwords does not actually solve anything either, and is ultimately no better than plain text under most circumstances. The actual solution to the issues raised here is to not use passwords at all. Hopefully \"enterprise\" auditors will encourage systems which don't use passwords rather than bandages over something we've agreed for decades is bad practice.\n\nAs for MySQL, 5.5.7 and later support pluggable authentication backends: http://dev.mysql.com/doc/refman/5.5/en/pluggable-authentication.html Perhaps this is something worth documenting in an upcoming revision of the security guide?", 
            "date_created": "2014-09-16 13:54:03.902504+00:00", 
            "author": "https://api.launchpad.net/1.0/~fungi"
        }, 
        {
            "content": "This affects cinder (and many other projects) - we'd welcome a good solution, though I've no idea what that might be", 
            "date_created": "2014-09-17 16:27:46.246175+00:00", 
            "author": "https://api.launchpad.net/1.0/~duncan-thomas"
        }, 
        {
            "content": "My two cents: Agree with encrypting the password doesn't solve much....   using pluggable options to db auth is the right answer here IMO.\n\nI don't believe this is a bug either, but a feature request.  I am certainly not discounting the importance of this feature, I'm receiving this question more and more from customers in the field deploying OpenStack in their internal cloud environments.  Maybe we can look at something in Kilo as a feature/enhancement.\n", 
            "date_created": "2014-09-17 18:43:05.474032+00:00", 
            "author": "https://api.launchpad.net/1.0/~john-griffith"
        }, 
        {
            "content": "The only way to solve problems like this is through a dedicated unit to store a secret like a TPM on each server, and even that won't help if someone can log in to the server as a privileged user and use the dedicated unit to generate an access key. Using Barbican isn't the total solution, as to allow the machine to retrieve a secret from Barbican requires that the machine have a secret it can use to access Barbican. GSSAPI doesn't help, as it requires a token, not significantly different than a password, to be available or embedded in the program to start the exchange. However, it's probably best to delegate the problem to Barbican and store the Cinder secrets there. This would leave it up to Barbican to support hardware plugins to securely store secrets, as well as leaving it as an exercise for the reader to properly protect access to the hardware device.  Otherwise, every service on each server is going to have to implement its own mechanism, and they will all be different.", 
            "date_created": "2015-01-03 23:07:49.514269+00:00", 
            "author": "https://api.launchpad.net/1.0/~john-haller"
        }
    ]
}