{
    "status": "Opinion", 
    "last_updated": "2017-05-25 14:31:28.432681+00:00", 
    "description": "On i386 and amd64, openstack puts 'OpenStack Nova', into the dmi platform\ninformation. OpenStack using kvm on ppc64el or ppc64, does not identify itself to the guest in any way.\n\nThe result is that cloud-init cannot identify it is running on openstack.\n\nWe need two things\n\u00a0a.) change openstack to provide that information through libvirt on ppc64\n\u00a0\u00a0\u00a0\u00a0\u00a0in some way.\n\u00a0b.) possibly changes in qemu to pass information through that the guest\n\u00a0\u00a0\u00a0\u00a0\u00a0can see.  Some options here might include putting information in\n\u00a0\u00a0\u00a0\u00a0\u00a0the device tree or possibly on the attached disk (model of the disk could be 'OpenStack disk XXXX').\n\nRelated bugs:\n\u00a0bug 1660385: Alert user of Ec2 Datasource on lookalike cloud\n https://bugs.launchpad.net/cloud-init/+bugs?field.tag=dsid-nova", 
    "tags": [
        "dsid", 
        "dsid-nova"
    ], 
    "importance": "Undecided", 
    "heat": 12, 
    "link": "https://bugs.launchpad.net/nova/+bug/1663315", 
    "owner": "None", 
    "id": 1663315, 
    "index": 6671, 
    "created": "2017-02-09 17:04:07.160715+00:00", 
    "title": " identify openstack kvm platform on ppc64", 
    "comments": [
        {
            "content": "On i386 and amd64, openstack puts 'OpenStack Nova', into the dmi platform\ninformation. OpenStack using kvm on ppc64el or ppc64, does not identify itself\nto the guest in any way.\n\nThe result is that cloud-init cannot identify it is running on openstack.\n\nWe need two things\n a.) change openstack to provide that information through libvirt on ppc64\n     in some way.\n b.) possibly changes in qemu to pass information through that the guest\n     can see.  Some options here might include putting information in\n     the device tree or possibly on the attached disk (model of the disk could be 'OpenStack disk XXXX').\n\nRelated bugs:\n bug 1660385: Alert user of Ec2 Datasource on lookalike cloud\n bug 1661797: identify lxd-nova platform to enable Openstack datasource\n bug 1661693: identify brightbox platform to enable Ec2 datasource\n bug 1663304: identify openstack kvm platform on arm64\n bug 1662345: [qemu] smbios parameter settings not visible in guest", 
            "date_created": "2017-02-09 17:04:07.160715+00:00", 
            "author": "https://api.launchpad.net/1.0/~smoser"
        }, 
        {
            "content": "Is there something that nova needs to do here? That's not clear to me.", 
            "date_created": "2017-02-09 23:03:32.613948+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Matt, maybe from the side of nova there could be an argument added to qemu that would pass the field that cloud-init wants? That is, other than through smbios arguments.", 
            "date_created": "2017-02-10 17:34:49.769311+00:00", 
            "author": "https://api.launchpad.net/1.0/~msmedved"
        }, 
        {
            "content": "Well, the guest shouldn't know which hypervisor type it's running IMHO. That looks like a security concern at least.\n\nThat said, it could be possible for operators explicitely wanting to pass that information to their guest OS that they use cloud-init for sure, but that doesn't look like something Nova would support IMHO.", 
            "date_created": "2017-02-15 16:12:04.993382+00:00", 
            "author": "https://api.launchpad.net/1.0/~sylvain-bauza"
        }, 
        {
            "content": "Just to be clear, either way, that wouldn't look like a bug from the Nova perspective, rather a new possibility to inform the guest and that would probably need at least a blueprint for describing the new feature\n\nhttps://docs.openstack.org/developer/nova/process.html#how-do-i-get-my-code-merged\n", 
            "date_created": "2017-02-15 16:22:00.664775+00:00", 
            "author": "https://api.launchpad.net/1.0/~sylvain-bauza"
        }, 
        {
            "content": "Sorry I was short on background information\n\nOpenstack Nova (libvirt) on i386 and amd64 arch already does this.  This bug is specifically for ppc64 lacking what x86 already does.\n\n(For info on how this is done see https://bugs.launchpad.net/cloud-init/+bug/1661693/comments/2)\n\nppc64 hardware (and qemu) does not have DMI data, so an exact copy of the implementation is not possible.\n\nIt is possible we do need a qemu function added.  I am looking to some ppc64 experts to get more information on whether we could have openstack utilize an existing function or if we would need feature added to qemu first.\n", 
            "date_created": "2017-02-16 17:20:56.597388+00:00", 
            "author": "https://api.launchpad.net/1.0/~smoser"
        }, 
        {
            "content": "Some observations:\n\n- DMTF defined an \"End of Life\" process for DMI, which ended on March 31, 2005. Using it extensively on x86 doesn't make it right thing to do, or to follow.\n\n- lshw has most of the information that dmidecode provides. It does not report a cloud instance with \"OpenStack Nova\" string as dmi does in the product_name field, though:\n    $ cat /sys/class/dmi/id/product_name\n    OpenStack Nova\n\n- qemu (ppc64le) does not have an equivalent to -smbios.\n\n- Ideally, this should be implemented as service through virtio-vsock, a host/guest communications device. Technically doable, a qemu ppc dev said.\n\n- As a placeholder until this is not addressed in qemu, IMHO, lshw could be used to detect KVM ppc guests:\n    description: Computer\n    product: IBM pSeries (emulated by qemu)\n    <...>\n\n", 
            "date_created": "2017-02-16 18:49:06.909640+00:00", 
            "author": "https://api.launchpad.net/1.0/~rafaelfolco"
        }, 
        {
            "content": "Beyond the bug vs. feature discussion (or which technical solution would be used to expose that information under ppc64) there is the question of whether exposing to the guest that it is running in a Nova-provided instance is desirable or not. In comment #3 Sylvain hints that it may create security concerns. As all security questions this is likely a trade-off, so we need to know what convenience we gain by leaking that extra information.\n\nScott: I suspect you want a reliable source of information so that cloud-init can be sure it's running under OpenStack before triggering some provider-specific actions ? What kind of actions would that be ?\n", 
            "date_created": "2017-02-17 09:56:15.759145+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "Thierry, you're right.  I'd like the platform to identify itself to the guest.  And openstack already does this in libvirt/kvm and i386/x86_64 (which I suggest is by far the most common deployment path).\n\nIn order to create cross cloud-platform images there has to be some way to determine where an image is running, so it can behave appropriately for the platform.\n\nEssentially, we have a communication mechanism in smbios/dmi where by the host says \"You're running on OpenStack\". Once that bit of information is established, cloud-init can then decide to reach the metadata service that openstack provides (http://169.254.169.254/openstack/).\n\nWithout the identification from the host, poking/polling at this network service can be problematic for many reasons.\n", 
            "date_created": "2017-02-17 17:34:18.390832+00:00", 
            "author": "https://api.launchpad.net/1.0/~smoser"
        }, 
        {
            "content": "Scott: that sounds reasonable...\n\nSylvain: any reason to think that leaking that information to the host would create security issues ? I bet there are plenty of creative ways to determine that a host is running on an OpenStack cloud already...", 
            "date_created": "2017-02-18 22:16:44.065630+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "As an example of one such \"creative\" way to determine that a host is OpenStack:\n  wget http://196.254.169.254/openstack/\n\nIe, openstack by-design identifies itself to guests.  Even if you didn't have a metadata service, you'd have a config drive.\n", 
            "date_created": "2017-03-01 19:31:30.366697+00:00", 
            "author": "https://api.launchpad.net/1.0/~smoser"
        }, 
        {
            "content": "IBM s390x guy here, `dmi` doesn't work for us either. Nevertheless how to resolve this, did I understand it correctly that the fallback is the \"old\" way, \"polling until something works\"?\nBug 1669675 describes this behavior:\n\n    \"If no result is found, keep cloud-init enabled. \n     cloud-init will search its normal list and issue \n     warnings.\"", 
            "date_created": "2017-03-30 12:44:24.352102+00:00", 
            "author": "https://api.launchpad.net/1.0/~mzoeller"
        }, 
        {
            "content": "What about appending something to the kernels command line instead of using smbios and/or dmi? For containers the commandline is considered as well (PID_1_PLATFORM), so why not for VMs as well?", 
            "date_created": "2017-04-03 15:48:56.568642+00:00", 
            "author": "https://api.launchpad.net/1.0/~andreas-scheuring"
        }, 
        {
            "content": "Seems like that libvirts cmdline argument is just for direct kernel boot [1]. So not an option...\n\n[1] https://libvirt.org/formatdomain.html#elementsOSKernel", 
            "date_created": "2017-04-04 12:12:55.347743+00:00", 
            "author": "https://api.launchpad.net/1.0/~andreas-scheuring"
        }, 
        {
            "content": "Markus,\n\nCurrently for non-x86 systems cloud-init falls back to looking polling for network metadata services.  We'd like to fix that and make non-x86 consistent with x86.  But until we can fix this bug, we can't really do that.\n\nAndreas, As you found, kernel command line is really not ideal at all, as modification from \"outside\" is not really possible.  We want to enable vendors to make images that \"just work\" on multiple clouds.  Requiring the image consumer to open the image and modify the kernel command line would break that.\n\nWe really need the cloud platform to identify itself to the running system in a deterministic way.", 
            "date_created": "2017-05-25 14:20:15.533182+00:00", 
            "author": "https://api.launchpad.net/1.0/~smoser"
        }, 
        {
            "content": "Markus,\nI removed the s390x tag from this bug and filed one for that at\n https://bugs.launchpad.net/nova/+bug/1693524\n\nI've also tagged these \"identify openstack\" bugs with dsid-nova.\nhttps://bugs.launchpad.net/cloud-init/+bugs?field.tag=dsid-nova\n\nThe reason for having one per arch is that they're likely to just use different mechanisms.", 
            "date_created": "2017-05-25 14:30:24.458500+00:00", 
            "author": "https://api.launchpad.net/1.0/~smoser"
        }
    ]
}