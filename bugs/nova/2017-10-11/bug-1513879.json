{
    "status": "Fix Released", 
    "last_updated": "2017-06-15 17:26:43.869760+00:00", 
    "description": "Tripleo isn't currently working with trunk nova, the undercloud is failing to build overcloud instances, nova compute is showing this exception\n\n\n\nNov 05 13:10:45 instack.localdomain nova-compute[21338]: 2015-11-05 13:10:45.163 21338 ERROR nova.virt.ironic.driver [req-7df4cae6-f00a-41a2-91e0-db1e6f130059 a800cb834fbd4a70915e2272dce924ac 102a2b78e079410f9afd8b8b46278c19 - - -] Error preparing deploy for instance 9ae5b605-58e3-40ee-b944-56cbf5806e51 on baremetal node f5c30846-4ada-444e-85d9-6e3be2a74782.\n\n\nNov 05 13:10:45 instack.localdomain nova-compute[21338]: 2015-11-05 13:10:45.434 21338 DEBUG nova.virt.ironic.driver [req-7df4cae6-f00a-41a2-91e0-db1e6f130059 a800cb834fbd4a70915e2272dce924ac 102a2b78e079410f9afd8b8b46278c19 - - -] unplug: instance_uuid=9ae5b605-58e3-40ee-b944-56cbf5806e51 vif=[] _unplug_vifs /usr/lib/python2.7/site-packages/nova/virt/ironic/driver.py:1093\n Instance failed to spawn\n Traceback (most recent call last):\n   File \"/usr/lib/python2.7/site-packages/nova/compute/manager.py\", line 2165, in _build_resources\n     yield resources\n   File \"/usr/lib/python2.7/site-packages/nova/compute/manager.py\", line 2012, in _build_and_run_instance\n     block_device_info=block_device_info)\n   File \"/usr/lib/python2.7/site-packages/nova/virt/ironic/driver.py\", line 791, in spawn\n     flavor=flavor)\n   File \"/usr/lib/python2.7/site-packages/oslo_utils/excutils.py\", line 197, in __exit__\n     six.reraise(self.type_, self.value, self.tb)\n   File \"/usr/lib/python2.7/site-packages/nova/virt/ironic/driver.py\", line 782, in spawn\n     self._plug_vifs(node, instance, network_info)\n   File \"/usr/lib/python2.7/site-packages/nova/virt/ironic/driver.py\", line 1058, in _plug_vifs\n     network_info_str = str(network_info)\n   File \"/usr/lib/python2.7/site-packages/nova/network/model.py\", line 515, in __str__\n     return self._sync_wrapper(fn, *args, **kwargs)\n   File \"/usr/lib/python2.7/site-packages/nova/network/model.py\", line 498, in _sync_wrapper\n     self.wait()\n   File \"/usr/lib/python2.7/site-packages/nova/network/model.py\", line 530, in wait\n     self[:] = self._gt.wait()\n   File \"/usr/lib/python2.7/site-packages/eventlet/greenthread.py\", line 175, in wait\n     return self._exit_event.wait()\n   File \"/usr/lib/python2.7/site-packages/eventlet/event.py\", line 125, in wait\n     current.throw(*self._exc)\n   File \"/usr/lib/python2.7/site-packages/eventlet/greenthread.py\", line 214, in main\n     result = function(*args, **kwargs)\n   File \"/usr/lib/python2.7/site-packages/nova/utils.py\", line 1178, in context_wrapper\n     return func(*args, **kwargs)\n   File \"/usr/lib/python2.7/site-packages/nova/compute/manager.py\", line 1574, in _allocate_network_async\n     six.reraise(*exc_info)\n   File \"/usr/lib/python2.7/site-packages/nova/compute/manager.py\", line 1557, in _allocate_network_async\n     dhcp_options=dhcp_options)\n   File \"/usr/lib/python2.7/site-packages/nova/network/neutronv2/api.py\", line 733, in allocate_for_instance\n     update_cells=True)\n   File \"/usr/lib/python2.7/site-packages/nova/network/base_api.py\", line 244, in get_instance_nw_info\n     result = self._get_instance_nw_info(context, instance, **kwargs)\n   File \"/usr/lib/python2.7/site-packages/nova/network/neutronv2/api.py\", line 930, in _get_instance_nw_info\n     preexisting_port_ids)\n   File \"/usr/lib/python2.7/site-packages/nova/network/neutronv2/api.py\", line 1708, in _build_network_info_model\n     current_neutron_port)\n   File \"/usr/lib/python2.7/site-packages/nova/network/neutronv2/api.py\", line 1560, in _nw_info_get_ips\n     client, fixed_ip['ip_address'], port['id'])\n   File \"/usr/lib/python2.7/site-packages/nova/network/neutronv2/api.py\", line 1491, in _get_floating_ips_by_fixed_and_port\n     port_id=port)\n   File \"/usr/lib/python2.7/site-packages/nova/network/neutronv2/api.py\", line 1475, in _safe_get_floating_ips\n     for k, v in six.iteritems(kwargs)]))\n   File \"/usr/lib/python2.7/site-packages/oslo_utils/excutils.py\", line 197, in __exit__\n     six.reraise(self.type_, self.value, self.tb)\n   File \"/usr/lib/python2.7/site-packages/nova/network/neutronv2/api.py\", line 1466, in _safe_get_floating_ips\n     return client.list_floatingips(**kwargs)['floatingips']\n   File \"/usr/lib/python2.7/site-packages/neutronclient/v2_0/client.py\", line 102, in with_params\n     ret = self.function(instance, *args, **kwargs)\n   File \"/usr/lib/python2.7/site-packages/neutronclient/v2_0/client.py\", line 734, in list_floatingips\n     **_params)\n   File \"/usr/lib/python2.7/site-packages/neutronclient/v2_0/client.py\", line 307, in list\n     for r in self._pagination(collection, path, **params):\n   File \"/usr/lib/python2.7/site-packages/neutronclient/v2_0/client.py\", line 320, in _pagination\n     res = self.get(path, params=params)\n   File \"/usr/lib/python2.7/site-packages/neutronclient/v2_0/client.py\", line 293, in get\n     headers=headers, params=params)\n   File \"/usr/lib/python2.7/site-packages/neutronclient/v2_0/client.py\", line 270, in retry_request\n     headers=headers, params=params)\n   File \"/usr/lib/python2.7/site-packages/neutronclient/v2_0/client.py\", line 211, in do_request\n     self._handle_fault_response(status_code, replybody)\n   File \"/usr/lib/python2.7/site-packages/neutronclient/v2_0/client.py\", line 185, in _handle_fault_response\n     exception_handler_v20(status_code, des_error_body)\n   File \"/usr/lib/python2.7/site-packages/neutronclient/v2_0/client.py\", line 83, in exception_handler_v20\n     message=message)\n NeutronClientException: 404 Not Found\n\n The resource could not be found.", 
    "tags": [], 
    "importance": "High", 
    "heat": 22, 
    "link": "https://bugs.launchpad.net/nova/+bug/1513879", 
    "owner": "https://api.launchpad.net/1.0/~danms", 
    "id": 1513879, 
    "index": 1835, 
    "created": "2015-11-06 15:17:25.117330+00:00", 
    "title": "NeutronClientException: 404 Not Found", 
    "comments": [
        {
            "content": "Tripleo isn't currently working with trunk nova, the undercloud is failing to build overcloud instances, nova compute is showing this exception\n\n\n\nNov 05 13:10:45 instack.localdomain nova-compute[21338]: 2015-11-05 13:10:45.163 21338 ERROR nova.virt.ironic.driver [req-7df4cae6-f00a-41a2-91e0-db1e6f130059 a800cb834fbd4a70915e2272dce924ac 102a2b78e079410f9afd8b8b46278c19 - - -] Error preparing deploy for instance 9ae5b605-58e3-40ee-b944-56cbf5806e51 on baremetal node f5c30846-4ada-444e-85d9-6e3be2a74782.\n\n\nNov 05 13:10:45 instack.localdomain nova-compute[21338]: 2015-11-05 13:10:45.434 21338 DEBUG nova.virt.ironic.driver [req-7df4cae6-f00a-41a2-91e0-db1e6f130059 a800cb834fbd4a70915e2272dce924ac 102a2b78e079410f9afd8b8b46278c19 - - -] unplug: instance_uuid=9ae5b605-58e3-40ee-b944-56cbf5806e51 vif=[] _unplug_vifs /usr/lib/python2.7/site-packages/nova/virt/ironic/driver.py:1093\n Instance failed to spawn\n Traceback (most recent call last):\n   File \"/usr/lib/python2.7/site-packages/nova/compute/manager.py\", line 2165, in _build_resources\n     yield resources\n   File \"/usr/lib/python2.7/site-packages/nova/compute/manager.py\", line 2012, in _build_and_run_instance\n     block_device_info=block_device_info)\n   File \"/usr/lib/python2.7/site-packages/nova/virt/ironic/driver.py\", line 791, in spawn\n     flavor=flavor)\n   File \"/usr/lib/python2.7/site-packages/oslo_utils/excutils.py\", line 197, in __exit__\n     six.reraise(self.type_, self.value, self.tb)\n   File \"/usr/lib/python2.7/site-packages/nova/virt/ironic/driver.py\", line 782, in spawn\n     self._plug_vifs(node, instance, network_info)\n   File \"/usr/lib/python2.7/site-packages/nova/virt/ironic/driver.py\", line 1058, in _plug_vifs\n     network_info_str = str(network_info)\n   File \"/usr/lib/python2.7/site-packages/nova/network/model.py\", line 515, in __str__\n     return self._sync_wrapper(fn, *args, **kwargs)\n   File \"/usr/lib/python2.7/site-packages/nova/network/model.py\", line 498, in _sync_wrapper\n     self.wait()\n   File \"/usr/lib/python2.7/site-packages/nova/network/model.py\", line 530, in wait\n     self[:] = self._gt.wait()\n   File \"/usr/lib/python2.7/site-packages/eventlet/greenthread.py\", line 175, in wait\n     return self._exit_event.wait()\n   File \"/usr/lib/python2.7/site-packages/eventlet/event.py\", line 125, in wait\n     current.throw(*self._exc)\n   File \"/usr/lib/python2.7/site-packages/eventlet/greenthread.py\", line 214, in main\n     result = function(*args, **kwargs)\n   File \"/usr/lib/python2.7/site-packages/nova/utils.py\", line 1178, in context_wrapper\n     return func(*args, **kwargs)\n   File \"/usr/lib/python2.7/site-packages/nova/compute/manager.py\", line 1574, in _allocate_network_async\n     six.reraise(*exc_info)\n   File \"/usr/lib/python2.7/site-packages/nova/compute/manager.py\", line 1557, in _allocate_network_async\n     dhcp_options=dhcp_options)\n   File \"/usr/lib/python2.7/site-packages/nova/network/neutronv2/api.py\", line 733, in allocate_for_instance\n     update_cells=True)\n   File \"/usr/lib/python2.7/site-packages/nova/network/base_api.py\", line 244, in get_instance_nw_info\n     result = self._get_instance_nw_info(context, instance, **kwargs)\n   File \"/usr/lib/python2.7/site-packages/nova/network/neutronv2/api.py\", line 930, in _get_instance_nw_info\n     preexisting_port_ids)\n   File \"/usr/lib/python2.7/site-packages/nova/network/neutronv2/api.py\", line 1708, in _build_network_info_model\n     current_neutron_port)\n   File \"/usr/lib/python2.7/site-packages/nova/network/neutronv2/api.py\", line 1560, in _nw_info_get_ips\n     client, fixed_ip['ip_address'], port['id'])\n   File \"/usr/lib/python2.7/site-packages/nova/network/neutronv2/api.py\", line 1491, in _get_floating_ips_by_fixed_and_port\n     port_id=port)\n   File \"/usr/lib/python2.7/site-packages/nova/network/neutronv2/api.py\", line 1475, in _safe_get_floating_ips\n     for k, v in six.iteritems(kwargs)]))\n   File \"/usr/lib/python2.7/site-packages/oslo_utils/excutils.py\", line 197, in __exit__\n     six.reraise(self.type_, self.value, self.tb)\n   File \"/usr/lib/python2.7/site-packages/nova/network/neutronv2/api.py\", line 1466, in _safe_get_floating_ips\n     return client.list_floatingips(**kwargs)['floatingips']\n   File \"/usr/lib/python2.7/site-packages/neutronclient/v2_0/client.py\", line 102, in with_params\n     ret = self.function(instance, *args, **kwargs)\n   File \"/usr/lib/python2.7/site-packages/neutronclient/v2_0/client.py\", line 734, in list_floatingips\n     **_params)\n   File \"/usr/lib/python2.7/site-packages/neutronclient/v2_0/client.py\", line 307, in list\n     for r in self._pagination(collection, path, **params):\n   File \"/usr/lib/python2.7/site-packages/neutronclient/v2_0/client.py\", line 320, in _pagination\n     res = self.get(path, params=params)\n   File \"/usr/lib/python2.7/site-packages/neutronclient/v2_0/client.py\", line 293, in get\n     headers=headers, params=params)\n   File \"/usr/lib/python2.7/site-packages/neutronclient/v2_0/client.py\", line 270, in retry_request\n     headers=headers, params=params)\n   File \"/usr/lib/python2.7/site-packages/neutronclient/v2_0/client.py\", line 211, in do_request\n     self._handle_fault_response(status_code, replybody)\n   File \"/usr/lib/python2.7/site-packages/neutronclient/v2_0/client.py\", line 185, in _handle_fault_response\n     exception_handler_v20(status_code, des_error_body)\n   File \"/usr/lib/python2.7/site-packages/neutronclient/v2_0/client.py\", line 83, in exception_handler_v20\n     message=message)\n NeutronClientException: 404 Not Found\n\n The resource could not be found.", 
            "date_created": "2015-11-06 15:17:25.117330+00:00", 
            "author": "https://api.launchpad.net/1.0/~derekh"
        }, 
        {
            "content": "proposed fix here https://review.openstack.org/#/c/242158/", 
            "date_created": "2015-11-09 09:13:19.186348+00:00", 
            "author": "https://api.launchpad.net/1.0/~derekh"
        }, 
        {
            "content": "This appears to be triggering because python-neutronclient is getting a non Neutron exception, from somewhere, and somewhere in the Neutron / Neutronclient path this isn't being translated.\n\nBefore just reverting the clean up in Nova, we should figure out exactly what that is. Because it's quite surprising that this kind of leak through is happening.", 
            "date_created": "2015-11-11 13:44:55.822267+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "It would be great to get the relevant request logs for these request flows to figure out where the root of this unexpected exception by neutronclient really is. The right fix is probably in the neutron side to be consistent here. ", 
            "date_created": "2015-11-11 13:47:22.352047+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "The existing understanding is that this is how python-neutronclient functions if there is no L3 agent. However, that seems really wrong. Because it means you have to know the topology of the services on the neutron side in order to use python-neutronclient correctly. \n\nThat someone defeats the purpose of having a library to access your service. This really should be fixed in python-neutronclient.", 
            "date_created": "2015-11-11 14:06:02.805149+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "Essentially whats happening on neutronclient is self.deserialize is throwing an exception as its trying to parse non json \n\n    response_body == '404 Not Found\\n\\nThe resource could not be found.\\n\\n   '\n\nexception_handler_v20 then throws a NeutronClientException as its \"probably not a Neutron error\", the nova code is then assuming a NotFound exception is being thrown (it used to catch the broader case NeutronClientException)\n\n    def _handle_fault_response(self, status_code, response_body):\n        # Create exception with HTTP status code and message\n        _logger.debug(\"Error message: %s\", response_body)\n        # Add deserialized error message to exception arguments\n        try:\n            des_error_body = self.deserialize(response_body, status_code)\n        except Exception:\n            # If unable to deserialized body it is probably not a\n            # Neutron error\n            des_error_body = {'message': response_body}\n        # Raise the appropriate exception\n        exception_handler_v20(status_code, des_error_body)\n\n\n\n", 
            "date_created": "2015-11-11 16:20:47.377690+00:00", 
            "author": "https://api.launchpad.net/1.0/~derekh"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/244219", 
            "date_created": "2015-11-11 17:04:05.502622+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/242158\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=cbbbaa93aeeb7c7902867842ac8890928894cf96\nSubmitter: Jenkins\nBranch:    master\n\ncommit cbbbaa93aeeb7c7902867842ac8890928894cf96\nAuthor: Derek Higgins <email address hidden>\nDate:   Thu Nov 5 16:36:55 2015 +0000\n\n    Handle a NeutronClientException 404 Error for floating ips\n    \n    I9229d882712df1ad57afbda7477fa4d72f4fd83c introduced _safe_get_floating_ips\n    which returns an empty list of floating ips in cases where neutron returns\n    a 404. It also switched a check for NeutronClientException with NotFound.\n    The NotFound Exception isn't used by neutron client so allow for both cases.\n    \n    Closes-bug: #1513879\n    Change-Id: I1d37a0dadd4c9055ba545906535bb3e40e70a0f0\n", 
            "date_created": "2015-11-12 12:57:32.178193+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/244219\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=69c39b731541415b6cd4c7b2d8b859f8134f7ed8\nSubmitter: Jenkins\nBranch:    master\n\ncommit 69c39b731541415b6cd4c7b2d8b859f8134f7ed8\nAuthor: Dan Smith <email address hidden>\nDate:   Wed Nov 11 09:13:47 2015 -0800\n\n    Add test coverage for both types of not-found-ness in neutronclient for floating\n    \n    This adds coverage for the exceptions.NotFound case when we're getting\n    floating IPs from neutronclient. It makes the NeutronClientException case\n    the \"legacy\" one that we can remove when we fix that bug.\n    \n    Change-Id: I9c8b20e076527f98085265755a2d2503c703f235\n    Partial-Bug: 1513879\n", 
            "date_created": "2015-11-12 18:50:35.770292+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "neutronclient at least should raise an exception corresponding to a status code returned from neutron server.", 
            "date_created": "2015-12-03 12:02:15.280475+00:00", 
            "author": "https://api.launchpad.net/1.0/~amotoki"
        }, 
        {
            "content": "In addition, this means neutron-server returns an exception in non-usual format. It is also better to be investigated.", 
            "date_created": "2015-12-03 12:05:06.377980+00:00", 
            "author": "https://api.launchpad.net/1.0/~amotoki"
        }, 
        {
            "content": "Akihiro is chasing this one down on both sides of neutron. Though the upcoming pecan switch will likely render this moot as well.", 
            "date_created": "2015-12-03 18:02:10.303958+00:00", 
            "author": "https://api.launchpad.net/1.0/~dougwig"
        }, 
        {
            "content": "I am now preparing a patch in neutronclient side which maps a response code into an exception (notfound, conflict or something) regardless of what message is returned. it will reduce pain points nova usually feels.\n\nOnce this patch lands, we don't need to rush to fix it in the server side and we can fix the root cause in the upcoming pecan switch.", 
            "date_created": "2015-12-03 18:05:37.364459+00:00", 
            "author": "https://api.launchpad.net/1.0/~amotoki"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/253267", 
            "date_created": "2015-12-03 23:47:38.333627+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/253267\nCommitted: https://git.openstack.org/cgit/openstack/python-neutronclient/commit/?id=af1a55bfd2e47b0e3cd8349f0a9b1277474fee18\nSubmitter: Jenkins\nBranch:    master\n\ncommit af1a55bfd2e47b0e3cd8349f0a9b1277474fee18\nAuthor: Akihiro Motoki <email address hidden>\nDate:   Fri Dec 4 01:53:58 2015 +0900\n\n    Ensure to use exception per status code for all cases\n    \n    Previously, only when an exception has a content with\n    {'NeutronError': {'type': xxxx, 'message': xxxx}},\n    exception per status code is raised from neutronclient library.\n    There are cases where this kind of message is not contained\n    in exception messages, for example, some extension is loaded.\n    \n    Library users expect an exception is raised based on response\n    status code and it should not depend on an exception message.\n    This commit applies a fallback logic to map generic per-status\n    exception to all exception types from the neutron server.\n    \n    Closes-Bug: #1513879\n    Change-Id: Ib3d0a8359aed444b12217b3404d40443d61fc2c0\n", 
            "date_created": "2016-02-28 18:01:32.617525+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/python-neutronclient 4.1.0 release.", 
            "date_created": "2016-03-03 15:45:55.368874+00:00", 
            "author": "https://api.launchpad.net/1.0/~doug-hellmann"
        }
    ]
}