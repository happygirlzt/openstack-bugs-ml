{
    "status": "Fix Released", 
    "last_updated": "2016-11-17 13:13:39.437747+00:00", 
    "description": "In version 1.0 of the placement API, 404 errors are logged at level ERROR with a traceback:\n\n```\n2016-09-22 10:37:20.033 22918 ERROR nova.api.openstack.placement.handler [req-8da084c1-467d-488c-941b-af73e18e086d admin admin] Uncaught exception\n2016-09-22 10:37:20.033 22918 ERROR nova.api.openstack.placement.handler Traceback (most recent call last):\n2016-09-22 10:37:20.033 22918 ERROR nova.api.openstack.placement.handler   File \"/opt/stack/nova/nova/api/openstack/placement/handler.py\", line 171, in __call__\n2016-09-22 10:37:20.033 22918 ERROR nova.api.openstack.placement.handler     return dispatch(environ, start_response, self._map)\n2016-09-22 10:37:20.033 22918 ERROR nova.api.openstack.placement.handler   File \"/opt/stack/nova/nova/api/openstack/placement/handler.py\", line 94, in dispatch\n2016-09-22 10:37:20.033 22918 ERROR nova.api.openstack.placement.handler     json_formatter=util.json_error_formatter)\n2016-09-22 10:37:20.033 22918 ERROR nova.api.openstack.placement.handler HTTPNotFound: The resource could not be found.\n2016-09-22 10:37:20.033 22918 ERROR nova.api.openstack.placement.handler \n```\n\nThis is then immediately followed by an INFO which provides most of what's needed to analyse why a 404 is a 404:\n\n```\n2016-09-22 10:37:20.034 22918 INFO nova.api.openstack.placement.requestlog [req-8da084c1-467d-488c-941b-af73e18e086d admin admin] 10.0.2.15 \" GET /placement\" status: 404 len: 52\n```\n\n(note this particular 404 represents a bug in the service ('' and '/' path info should be treated the same), which will be reported in another bug)\n\nFirst off, a 404 should probably not be logged as an error if we are assuming this is an api that people will be making diverse queries against. However, if we are choosing to log a traceback the not found message should include more information. The reason, at the moment, that there's not much there is that the placement handlers allow a NotFound from the objects in nova/objects/resource_providers.py to rise without being modified (until an outer layer), and those NotFound are bare: they include no messages about what was NotFound as it was assumed the calling context would know.\n\nWhat should probably happen here is that in the api handler code those places where a NotFound could happen, they should be caught, a debug log message made, and the NotFound transformed into more verbose webob.exc.HTTPNotFound at that layer, not the higher layer.", 
    "tags": [
        "api", 
        "placement", 
        "scheduler"
    ], 
    "importance": "Undecided", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1626489", 
    "owner": "https://api.launchpad.net/1.0/~cdent", 
    "id": 1626489, 
    "index": 6449, 
    "created": "2016-09-22 10:48:11.365082+00:00", 
    "title": "placement api 404 errors are logged poorly", 
    "comments": [
        {
            "content": "In version 1.0 of the placement API, 404 errors are logged at level ERROR with a traceback:\n\n```\n2016-09-22 10:37:20.033 22918 ERROR nova.api.openstack.placement.handler [req-8da084c1-467d-488c-941b-af73e18e086d admin admin] Uncaught exception\n2016-09-22 10:37:20.033 22918 ERROR nova.api.openstack.placement.handler Traceback (most recent call last):\n2016-09-22 10:37:20.033 22918 ERROR nova.api.openstack.placement.handler   File \"/opt/stack/nova/nova/api/openstack/placement/handler.py\", line 171, in __call__\n2016-09-22 10:37:20.033 22918 ERROR nova.api.openstack.placement.handler     return dispatch(environ, start_response, self._map)\n2016-09-22 10:37:20.033 22918 ERROR nova.api.openstack.placement.handler   File \"/opt/stack/nova/nova/api/openstack/placement/handler.py\", line 94, in dispatch\n2016-09-22 10:37:20.033 22918 ERROR nova.api.openstack.placement.handler     json_formatter=util.json_error_formatter)\n2016-09-22 10:37:20.033 22918 ERROR nova.api.openstack.placement.handler HTTPNotFound: The resource could not be found.\n2016-09-22 10:37:20.033 22918 ERROR nova.api.openstack.placement.handler \n```\n\nThis is then immediately followed by an INFO which provides most of what's needed to analyse why a 404 is a 404:\n\n```\n2016-09-22 10:37:20.034 22918 INFO nova.api.openstack.placement.requestlog [req-8da084c1-467d-488c-941b-af73e18e086d admin admin] 10.0.2.15 \" GET /placement\" status: 404 len: 52\n```\n\n(note this particular 404 represents a bug in the service ('' and '/' path info should be treated the same), which will be reported in another bug)\n\nFirst off, a 404 should probably not be logged as an error if we are assuming this is an api that people will be making diverse queries against. However, if we are choosing to log a traceback the not found message should include more information. The reason, at the moment, that there's not much there is that the placement handlers allow a NotFound from the objects in nova/objects/resource_providers.py to rise without being modified (until an outer layer), and those NotFound are bare: they include no messages about what was NotFound as it was assumed the calling context would know.\n\nWhat should probably happen here is that in the api handler code those places where a NotFound could happen, they should be caught, a debug log message made, and the NotFound transformed into more verbose webob.exc.HTTPNotFound at that layer, not the higher layer.", 
            "date_created": "2016-09-22 10:48:11.365082+00:00", 
            "author": "https://api.launchpad.net/1.0/~cdent"
        }, 
        {
            "content": "Discussion with sdague decided no specific need for a LOG.debug, the info log is sufficient.\n\nThere are some cases where a NotFound happens for something that is not the resource identified by the URL. Those cases I think are already dealt with and usually lead to an HTTPBadRequest/400.\n\nI'll make this so.", 
            "date_created": "2016-09-22 14:52:09.513811+00:00", 
            "author": "https://api.launchpad.net/1.0/~cdent"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/374955", 
            "date_created": "2016-09-22 16:07:41.428912+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/374955\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=1c859448055236ffb4b63184609b89dd7f5cd322\nSubmitter: Jenkins\nBranch:    master\n\ncommit 1c859448055236ffb4b63184609b89dd7f5cd322\nAuthor: Chris Dent <email address hidden>\nDate:   Thu Sep 22 16:03:21 2016 +0000\n\n    [placement] 404 responses do not cause exception logs\n    \n    Prior to this change, a 404 caused by a not possible route being\n    requested (such as /placement/hello) would result in a proper 404\n    response but also a log message about an uncaught exception. This\n    made it appear that a 404 response is unexpected and something that\n    needs exceptional attention. It doesn't. This change makes sure\n    that 404s propagate up the stack in a clean way and are logged only\n    by the existing INFO log used for all requests.\n    \n    Change-Id: I21f9411bd5154eddc582d5f38891be747de874b3\n    Closes-Bug: #1626489\n", 
            "date_created": "2016-09-26 10:45:48.355008+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/nova 15.0.0.0b1 development milestone.", 
            "date_created": "2016-11-17 13:13:38.586640+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}