{
    "status": "Won't Fix", 
    "last_updated": "2012-09-14 05:22:13.187084+00:00", 
    "description": "If we have many VMs on single compute-node, security groups with floating-ip as CIDR does not work properly.\n\nVM1:\n* fixed_ip = 10.10.10.1\n* floating_ip = 192.168.10.1\n\nVM2:\n* fixed_ip = 10.10.10.2\n* floating_ip = 192.168.10.2\n\nSec group:\n$ nova secgroup-add-rule default tcp 22 22 192.168.10.1\n$ nova secgroup-add-rule default tcp 22 22 192.168.10.2\n\nTraffic from VM1 to VM2 float IP is dropped.\n\nSecurity group chain is created in FORWARD iptables chain, and source nat (fixed_ip->float_ip) is created in postrouting - http://www.linuxhomenetworking.com/wiki/index.php/File:Iptables.gif\n\nIf VMs are on different compute-nodes everythings works perfect.", 
    "tags": [
        "floating", 
        "group", 
        "ip", 
        "security"
    ], 
    "importance": "Medium", 
    "heat": 20, 
    "link": "https://bugs.launchpad.net/nova/+bug/1048624", 
    "owner": "https://api.launchpad.net/1.0/~vishvananda", 
    "id": 1048624, 
    "index": 3040, 
    "created": "2012-09-10 12:49:19.210498+00:00", 
    "title": "Issue with security groups and floating ips on the same host", 
    "comments": [
        {
            "content": "If we have many VMs on single compute-node, security groups with floating-ip as CIDR does not work properly.\n\nVM1:\n* fixed_ip = 10.10.10.1\n* floating_ip = 192.168.10.1\n\nVM2:\n* fixed_ip = 10.10.10.2\n* floating_ip = 192.168.10.2\n\nSec group:\n$ nova secgroup-add-rule default tcp 22 22 192.168.10.1\n$ nova secgroup-add-rule default tcp 22 22 192.168.10.2\n\nTraffic from VM1 to VM2 float IP is dropped.\n\nSecurity group chain is created in FORWARD iptables chain, and source nat (fixed_ip->float_ip) is created in postrouting - http://www.linuxhomenetworking.com/wiki/index.php/File:Iptables.gif\n\nIf VMs are on different compute-nodes everythings works perfect.", 
            "date_created": "2012-09-10 12:49:19.210498+00:00", 
            "author": "https://api.launchpad.net/1.0/~zynzel"
        }, 
        {
            "content": "Traffic from vm to vm should be going across the fixed ips always, so I'm not surprised this doesn't work. Any ideas on how we could construct the table differently to make this work? Do we need to add an output rule in addition to a FORWARD rule?", 
            "date_created": "2012-09-10 19:22:25.412941+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "I'm going to try to verify this one", 
            "date_created": "2012-09-11 18:49:44.465203+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/12819", 
            "date_created": "2012-09-11 19:11:59.321998+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "So this is actually very difficult to fix. It definitely won't be done for folsom and may not be done at all. I'm going to put this in the Folsom release notes as a known issue with the following workaround:\n\nThe recommendation is to use fixed ip cidrs or source groups.  Source groups should work with floating ips as long as you specify a dmz_cidr=x.x.x.x/x for each of your floating ranges in your conf file. This will make sure that vm -> vm traffic is not snatted and the source groups should work", 
            "date_created": "2012-09-12 02:18:20.172232+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }
    ]
}