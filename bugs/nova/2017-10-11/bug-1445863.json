{
    "status": "Won't Fix", 
    "last_updated": "2016-02-10 15:49:27.509694+00:00", 
    "description": "When we create an instance, it's unable to pass the parameter hostname to nova-api.\nNow, we use display_name as hostname[1], but obviously this is not a good practice because they are independent, In addition, hostname must conform to RFC 952, RFC 1123 specification, but the display name is not necessary.\nSo we need to pass hostname from the Rest API, and set it into the instance.\n\nchange method API.create()  [nova/compute/api.py]\n\u00a0\u00a0\u00a0\u00a0def create(self, context, instance_type,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image_href, kernel_id=None, ramdisk_id=None,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0min_count=None, max_count=None,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0display_name=None, display_description=None,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0key_name=None, key_data=None, security_group=None,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0availability_zone=None, user_data=None, metadata=None,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0injected_files=None, admin_password=None,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0block_device_mapping=None, access_ip_v4=None,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0access_ip_v6=None, requested_networks=None, config_drive=None,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0auto_disk_config=None, scheduler_hints=None, legacy_bdm=True,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0shutdown_terminate=False, check_server_group_quota=False)\ninto:\n\u00a0\u00a0\u00a0\u00a0def create(self, context, instance_type,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image_href, kernel_id=None, ramdisk_id=None,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0min_count=None, max_count=None,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0display_name=None, display_description=None,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0key_name=None, key_data=None, security_group=None,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0availability_zone=None, user_data=None, metadata=None,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0injected_files=None, admin_password=None,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0block_device_mapping=None, access_ip_v4=None,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0access_ip_v6=None, requested_networks=None, config_drive=None,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0auto_disk_config=None, scheduler_hints=None, legacy_bdm=True,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0shutdown_terminate=False, check_server_group_quota=False,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0hostname=None)\n\nps.\n[1] nova/compute/api.py class API._populate_instance_for_create():\n\u00a0\u00a0\u00a0\u00a0def _populate_instance_names(self, instance, num_instances):\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"\"\"Populate instance display_name and hostname.\"\"\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0display_name = instance.get('display_name')\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if instance.obj_attr_is_set('hostname'):\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0hostname = instance.get('hostname')\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0else:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0hostname = None\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if display_name is None:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0display_name = self._default_display_name(instance.uuid)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0instance.display_name = display_name\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if hostname is None and num_instances == 1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0# NOTE(russellb) In the multi-instance case, we're going to\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0# overwrite the display_name using the\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0# multi_instance_display_name_template.  We need the default\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0# display_name set so that it can be used in the template, though.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0# Only set the hostname here if we're only creating one instance.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0# Otherwise, it will be built after the template based\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0# display_name.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0hostname = display_name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0instance.hostname = utils.sanitize_hostname(hostname)", 
    "tags": [], 
    "importance": "Undecided", 
    "heat": 8, 
    "link": "https://bugs.launchpad.net/nova/+bug/1445863", 
    "owner": "None", 
    "id": 1445863, 
    "index": 5511, 
    "created": "2015-04-19 05:57:24.227238+00:00", 
    "title": "Unable to pass the parameter hostname to nova-api, when creating an instance.", 
    "comments": [
        {
            "content": "When we create an instance, it's unable to pass the parameter hostname to nova-api.\nNow, we use display_name as hostname[1], but obviously this is not a good practice because they are independent, In addition, hostname must conform to RFC 952, RFC 1123 specification, but the display name is not necessary.\nSo we need to pass hostname from the Rest API, and set it into the instance.\n\nchange method API.create()  [nova/compute/api.py]\n    def create(self, context, instance_type,\n               image_href, kernel_id=None, ramdisk_id=None,\n               min_count=None, max_count=None,\n               display_name=None, display_description=None,\n               key_name=None, key_data=None, security_group=None,\n               availability_zone=None, user_data=None, metadata=None,\n               injected_files=None, admin_password=None,\n               block_device_mapping=None, access_ip_v4=None,\n               access_ip_v6=None, requested_networks=None, config_drive=None,\n               auto_disk_config=None, scheduler_hints=None, legacy_bdm=True,\n               shutdown_terminate=False, check_server_group_quota=False)\ninto:\n    def create(self, context, instance_type,\n               image_href, kernel_id=None, ramdisk_id=None,\n               min_count=None, max_count=None,\n               display_name=None, display_description=None,\n               key_name=None, key_data=None, security_group=None,\n               availability_zone=None, user_data=None, metadata=None,\n               injected_files=None, admin_password=None,\n               block_device_mapping=None, access_ip_v4=None,\n               access_ip_v6=None, requested_networks=None, config_drive=None,\n               auto_disk_config=None, scheduler_hints=None, legacy_bdm=True,\n               shutdown_terminate=False, check_server_group_quota=False,\n               hostname=None)\n\nps.\n[1] :\n    def _populate_instance_names(self, instance, num_instances):\n        \"\"\"Populate instance display_name and hostname.\"\"\"\n        display_name = instance.get('display_name')\n        if instance.obj_attr_is_set('hostname'):\n            hostname = instance.get('hostname')\n        else:\n            hostname = None\n\n        if display_name is None:\n            display_name = self._default_display_name(instance.uuid)\n            instance.display_name = display_name\n\n        if hostname is None and num_instances == 1:\n            # NOTE(russellb) In the multi-instance case, we're going to\n            # overwrite the display_name using the\n            # multi_instance_display_name_template.  We need the default\n            # display_name set so that it can be used in the template, though.\n            # Only set the hostname here if we're only creating one instance.\n            # Otherwise, it will be built after the template based\n            # display_name.\n            hostname = display_name\n            instance.hostname = utils.sanitize_hostname(hostname)", 
            "date_created": "2015-04-19 05:57:24.227238+00:00", 
            "author": "https://api.launchpad.net/1.0/~javaloveme"
        }, 
        {
            "content": "but this function do the RFC work, right ?\n\nalso, IMO , pass a host param is weird, API layer don't know where to deploy the instance\nadd a hostname is really confusing\n\n580 def sanitize_hostname(hostname):\n 581     \"\"\"Return a hostname which conforms to RFC-952 and RFC-1123 specs.\"\"\"\n 582     if isinstance(hostname, unicode):\n 583         hostname = hostname.encode('latin-1', 'ignore')\n 584\n 585     hostname = re.sub('[ _]', '-', hostname)\n 586     hostname = re.sub('[^\\w.-]+', '', hostname)\n 587     hostname = hostname.lower()\n 588     hostname = hostname.strip('.-')\n 589\n 590     return hostname\n", 
            "date_created": "2015-04-21 16:17:22.209368+00:00", 
            "author": "https://api.launchpad.net/1.0/~jichenjc"
        }, 
        {
            "content": "Cleanup\n=======\n\nThis bug report has the status \"Incomplete\" since more than 30 days\nand it looks like that there are no open reviews for it. To keep\nthe bug list sane, I close this bug with \"won't fix\". This does not\nmean that it is not a valid bug report, it's more to acknowledge that\nno progress can be expected here anymore. You are still free to push a\nnew patch for this bug. If you could reproduce it on the current master\ncode or on a maintained stable branch, please switch it to \"Confirmed\".", 
            "date_created": "2016-02-10 15:49:25.984716+00:00", 
            "author": "https://api.launchpad.net/1.0/~mzoeller"
        }
    ]
}