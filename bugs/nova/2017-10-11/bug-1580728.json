{
    "status": "Fix Released", 
    "last_updated": "2017-06-08 21:52:43.398200+00:00", 
    "description": "I saw this in the n-cpu logs for a xenproject CI run:\n\nhttp://logs.openstack.xenproject.org/00/315100/1/check/dsvm-tempest-xen/9649dc5/logs/screen-n-cpu.txt.gz\n\n2016-05-11 16:19:09.457 27252 INFO nova.virt.libvirt.driver [-] [instance: 76c4ad96-87dd-4300-acdc-cbe65d3aa0a6] Instance destroyed successfully.\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/logging/__init__.py\", line 851, in emit\n    msg = self.format(record)\n  File \"/usr/local/lib/python2.7/dist-packages/oslo_log/handlers.py\", line 73, in format\n    return logging.StreamHandler.format(self, record)\n  File \"/usr/lib/python2.7/logging/__init__.py\", line 724, in format\n    return fmt.format(record)\n  File \"/usr/local/lib/python2.7/dist-packages/oslo_log/formatters.py\", line 265, in format\n    return logging.Formatter.format(self, record)\n  File \"/usr/lib/python2.7/logging/__init__.py\", line 464, in format\n    record.message = record.getMessage()\n  File \"/usr/lib/python2.7/logging/__init__.py\", line 328, in getMessage\n    msg = msg % self.args\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 386: ordinal not in range(128)\nLogged from file vif.py, line 966\n\nThat would be logging the vif object in unplug:\n\nhttps://github.com/openstack/nova/blob/15abb39ef20ae76d602d50e67e43c3500a00cd3e/nova/virt/libvirt/vif.py#L966", 
    "tags": [
        "libvirt", 
        "unicode", 
        "xen"
    ], 
    "importance": "Medium", 
    "heat": 18, 
    "link": "https://bugs.launchpad.net/nova/+bug/1580728", 
    "owner": "https://api.launchpad.net/1.0/~melwitt", 
    "id": 1580728, 
    "index": 4527, 
    "created": "2016-05-11 18:31:55.055823+00:00", 
    "title": "UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 386: ordinal not in range(128) in nova.virt.libvirt.vif:unplug with unicode instance.display_name", 
    "comments": [
        {
            "content": "I saw this in the n-cpu logs for a xenproject CI run:\n\nhttp://logs.openstack.xenproject.org/00/315100/1/check/dsvm-tempest-xen/9649dc5/logs/screen-n-cpu.txt.gz\n\n2016-05-11 16:19:09.457 27252 INFO nova.virt.libvirt.driver [-] [instance: 76c4ad96-87dd-4300-acdc-cbe65d3aa0a6] Instance destroyed successfully.\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/logging/__init__.py\", line 851, in emit\n    msg = self.format(record)\n  File \"/usr/local/lib/python2.7/dist-packages/oslo_log/handlers.py\", line 73, in format\n    return logging.StreamHandler.format(self, record)\n  File \"/usr/lib/python2.7/logging/__init__.py\", line 724, in format\n    return fmt.format(record)\n  File \"/usr/local/lib/python2.7/dist-packages/oslo_log/formatters.py\", line 265, in format\n    return logging.Formatter.format(self, record)\n  File \"/usr/lib/python2.7/logging/__init__.py\", line 464, in format\n    record.message = record.getMessage()\n  File \"/usr/lib/python2.7/logging/__init__.py\", line 328, in getMessage\n    msg = msg % self.args\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 386: ordinal not in range(128)\nLogged from file vif.py, line 966\n\nThat would be logging the vif object in unplug:\n\nhttps://github.com/openstack/nova/blob/15abb39ef20ae76d602d50e67e43c3500a00cd3e/nova/virt/libvirt/vif.py#L966", 
            "date_created": "2016-05-11 18:31:55.055823+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Looks like this is the VIF object when we plug it:\n\nvif=VIF({'profile': None, 'ovs_interfaceid': None, 'preserve_on_delete': False, 'network': Network({'bridge': u'br100', 'subnets': [Subnet({'ips': [FixedIP({'meta': {}, 'version': 4, 'type': u'fixed', 'floating_ips': [], 'address': u'10.1.13.3'})], 'version': 4, 'meta': {u'dhcp_server': u'10.1.0.1'}, 'dns': [IP({'meta': {}, 'version': 4, 'type': u'dns', 'address': u'8.8.4.4'})], 'routes': [], 'cidr': u'10.1.0.0/20', 'gateway': IP({'meta': {}, 'version': 4, 'type': u'gateway', 'address': u'10.1.0.1'})}), Subnet({'ips': [], 'version': None, 'meta': {u'dhcp_server': None}, 'dns': [], 'routes': [], 'cidr': None, 'gateway': IP({'meta': {}, 'version': None, 'type': u'gateway', 'address': None})})], 'meta': {u'tenant_id': None, u'should_create_bridge': True, u'bridge_interface': u'br_flat'}, 'id': u'9a5f172f-de10-4cd0-af3c-d2f1568b206e', 'label': u'private'}), 'devname': None, 'vnic_type': u'normal', 'qbh_params': None, 'meta': {}, 'details': {}, 'address': u'fa:16:3e:33:4b:c0', 'active': False, 'type': u'bridge', 'id': u'7d1d85f4-086a-4400-88dd-f90e64af7756', 'qbg_params': None})", 
            "date_created": "2016-05-11 18:36:49.444512+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "From comment 1 the vif looks fine when it's plugged, something must be changing that before we unplug it.", 
            "date_created": "2016-05-11 18:37:42.810622+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "I guess it could be the instance that's got something that's failing to decode.", 
            "date_created": "2016-05-11 18:40:46.554508+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "This is the instance:\n\ninstance=Instance(access_ip_v4=None,access_ip_v6=None,architecture=None,auto_disk_config=False,availability_zone=None,cell_name=None,cleaned=False,config_drive='',created_at=2016-05-11T16:18:57Z,default_ephemeral_device=None,default_swap_device=None,deleted=False,deleted_at=None,disable_terminate=False,display_description='tempest.common.compute-instance-1871204054',display_name='tempest.common.compute-instance-1871204054',ec2_ids=EC2Ids,ephemeral_gb=0,ephemeral_key_uuid=None,fault=<?>,flavor=Flavor(11),host='ds-xen-1462964400',hostname='tempest.common.compute-instance-1871204054',id=80,image_ref='b388e343-1c9e-4169-b4c7-5880bda41689',info_cache=InstanceInfoCache,instance_type_id=11,kernel_id='d71b24f6-c0b5-4c6d-ab16-bbfbc79a2846',key_data=None,key_name=None,launch_index=0,launched_at=None,launched_on='ds-xen-1462964400',locked=False,locked_by=None,memory_mb=64,metadata={},migration_context=<?>,new_flavor=None,node='ds-xen-1462964400',numa_topology=None,old_flavor=None,os_type=None,pci_devices=PciDeviceList,pci_requests=InstancePCIRequests,power_state=0,progress=0,project_id='fc814a2e49064d999de62dbe32351bd5',ramdisk_id='c5ebf415-08ef-4c6d-a872-e707569c4fa7',reservation_id='r-lqqepx6k',root_device_name='/dev/xvda',root_gb=0,security_groups=SecurityGroupList,services=<?>,shutdown_terminate=False,system_metadata={image_base_image_ref='b388e343-1c9e-4169-b4c7-5880bda41689',image_container_format='ami',image_disk_format='ami',image_kernel_id='d71b24f6-c0b5-4c6d-ab16-bbfbc79a2846',image_min_disk='0',image_min_ram='0',image_ramdisk_id='c5ebf415-08ef-4c6d-a872-e707569c4fa7',network_allocated='True'},tags=<?>,task_state='spawning',terminated_at=None,updated_at=2016-05-11T16:18:58Z,user_data=None,user_id='f9c313947c0a4792bb13dde84e536cec',uuid=76c4ad96-87dd-4300-acdc-cbe65d3aa0a6,vcpu_model=None,vcpus=1,vm_mode=None,vm_state='building')", 
            "date_created": "2016-05-11 18:43:02.501923+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "OK, the problem is the instance in this test has a unicode name:\n\nhttp://git.openstack.org/cgit/openstack/tempest/tree/tempest/api/compute/servers/test_servers.py#n102\n\n    @test.idempotent_id('5e6ccff8-349d-4852-a8b3-055df7988dd2')\n    def test_update_server_name(self):\n        # The server name should be changed to the provided value\n        server = self.create_test_server(wait_until='ACTIVE')\n        # Update instance name with non-ASCII characters\n        prefix_name = u'\\u00CD\\u00F1st\\u00E1\\u00F1c\\u00E9'\n        self._update_server_name(server['id'], 'ACTIVE', prefix_name)", 
            "date_created": "2016-09-13 18:22:44.917055+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "This is the PUT:\n\nhttp://logs.openstack.org/98/282398/7/check/gate-tempest-dsvm-cells-ubuntu-xenial/55f5ceb/logs/tempest.txt.gz#_2016-09-13_17_48_58_799\n\n2016-09-13 17:48:58.799 17352 DEBUG tempest.lib.common.rest_client [req-e4190840-33d8-4a73-af7c-7ecfbd5b28db ] Request - Headers: {'X-Auth-Token': '<omitted>', 'Accept': 'application/json', 'Content-Type': 'application/json'}\n        Body: {\"server\": {\"name\": \"tempest-\\u00cd\\u00f1st\\u00e1\\u00f1c\\u00e9-1977980857\"}}\n    Response - Headers: {'openstack-api-version': 'compute 2.1', 'content-type': 'application/json', 'content-length': '1017', 'date': 'Tue, 13 Sep 2016 17:48:58 GMT', 'x-compute-request-id': 'req-e4190840-33d8-4a73-af7c-7ecfbd5b28db', 'status': '200', 'vary': 'X-OpenStack-Nova-API-Version', 'connection': 'close', 'x-openstack-nova-api-version': '2.1', 'content-location': 'http://127.0.0.1:8774/v2.1/servers/c1d0db5c-464b-4d98-b82d-f843a3f2b887'}\n        Body: {\"server\": {\"status\": \"ACTIVE\", \"updated\": \"2016-09-13T17:48:59Z\", \"hostId\": \"e9e1b80210cd3d668057493fef9cf9778bcea3a895ac720a0fadef31\", \"user_id\": \"8cbfc3b6125c43c69cebb7a2ebfc9c10\", \"name\": \"tempest-\\u00cd\\u00f1st\\u00e1\\u00f1c\\u00e9-1977980857\", \"links\": [{\"href\": \"http://127.0.0.1:8774/v2.1/servers/c1d0db5c-464b-4d98-b82d-f843a3f2b887\", \"rel\": \"self\"}, {\"href\": \"http://127.0.0.1:8774/servers/c1d0db5c-464b-4d98-b82d-f843a3f2b887\", \"rel\": \"bookmark\"}], \"created\": \"2016-09-13T17:48:53Z\", \"tenant_id\": \"869f26d125b14598928ab4a657065a44\", \"image\": {\"id\": \"4ebf1585-f4f0-442b-b941-894cefff648b\", \"links\": [{\"href\": \"http://127.0.0.1:8774/images/4ebf1585-f4f0-442b-b941-894cefff648b\", \"rel\": \"bookmark\"}]}, \"OS-DCF:diskConfig\": \"MANUAL\", \"addresses\": {\"private\": [{\"version\": 4, \"addr\": \"10.1.10.2\"}]}, \"accessIPv4\": \"\", \"accessIPv6\": \"\", \"progress\": 0, \"flavor\": {\"id\": \"42\", \"links\": [{\"href\": \"http://127.0.0.1:8774/flavors/42\", \"rel\": \"bookmark\"}]}, \"id\": \"c1d0db5c-464b-4d98-b82d-f843a3f2b887\", \"metadata\": {}}} _log_request_full tempest/lib/common/rest_client.py:431", 
            "date_created": "2016-09-13 18:23:40.789772+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "I thought about fixing this with using six.text_type here:\n\nhttps://github.com/openstack/oslo.versionedobjects/blob/7f0edcdb6430f5ccfdeed81806ecc780753da4d1/oslo_versionedobjects/base.py#L314\n\nBut I couldn't get a unit test to work that would recreate the failure, which makes me wonder if it's somehow related to how the logging module handles the formatting.", 
            "date_created": "2016-09-13 20:56:44.550570+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "I dug on this a bit further, and I don't think it's actually an issue with ovo, I think it's an issue with our environment (which I still have an issue replicating locally).\n\nThe unicode for the utf8 name turns into: \u00cd\u00f1st\u00e1\u00f1c\u00e9 \n\nHowever... in a devstack run we're setting LC_ALL=C because we grep the output of commands, and things get weird if people do those commands in other languages. This effectively squashes a lot of working utf8 support.\n\nThe following on a Linux desktop demonstrates what this issue would be:\n\nos4:~> python -c \"a = u'\\u00CD\\u00F1st\\u00E1\\u00F1c\\u00E9'; print a\"\n\u00cd\u00f1st\u00e1\u00f1c\u00e9\nos4:~> LC_ALL=C python -c \"a = u'\\u00CD\\u00F1st\\u00E1\\u00F1c\\u00E9'; print a\"\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\nUnicodeEncodeError: 'ascii' codec can't encode characters in position 0-1: ordinal not in range(128)\n\n", 
            "date_created": "2016-09-14 12:39:00.881380+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "Am I right or this bug duplicates this one?\nhttps://bugs.launchpad.net/oslo.db/+bug/1430399\n\nActually the reasons, that triggered this bug, were different,but we have the same place where the code crashes.", 
            "date_created": "2016-11-08 12:24:03.507582+00:00", 
            "author": "https://api.launchpad.net/1.0/~mdovgal"
        }, 
        {
            "content": "This started spiking in failures in the last 24 hours once oslo.log 3.26.0 was used in upper-constraints on master, and it's failing in the journal handler:\n\nhttps://github.com/openstack/oslo.log/blob/3.26.0/oslo_log/handlers.py#L120\n\nThe switch in devstack to use systemd by default happened yesterday too:\n\nhttps://github.com/openstack-dev/devstack/commit/7f8df450dbdfe754eb3f7311de56327878a3d1c3\n\nSo everything is running with that handler now and we're seeing the spike in failures:\n\nhttp://logstash.openstack.org/#dashboard/file/logstash.json?query=message%3A%5C%22Setting%20instance%20vm_state%20to%20ERROR%5C%22%20AND%20message%3A%5C%22_unplug_vifs%5C%22%20AND%20message%3A%5C%22UnicodeDecodeError%5C%22%20AND%20tags%3A%5C%22screen-n-cpu.txt%5C%22&from=7d\n\nIt's failing specifically hard in the cells v1 job, I'm not really sure why.", 
            "date_created": "2017-05-03 00:22:15.361898+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "melwitt tried this with devstack but it didn't help:\n\nhttps://review.openstack.org/#/c/461840/", 
            "date_created": "2017-05-03 00:23:47.267533+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Related fix proposed to branch: master\nReview: https://review.openstack.org/461975", 
            "date_created": "2017-05-03 03:19:41.893166+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Change abandoned by Matt Riedemann (<email address hidden>) on branch: master\nReview: https://review.openstack.org/461975", 
            "date_created": "2017-05-03 22:41:10.730213+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Similar error like UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 386: ordinal not in range(128) usually occurred when sys.getdefaultencoding != 'utf-8\".\ndefaultencoding is 'ascii' on Python 2, but 'uft-8' on Python 3 and there is now way to set on Python 3. So we prefer to use 'utf-8' on Python 2.\n\n[changboguo@localhost oslo.log]$ python\nPython 2.7.10 (default, Sep 24 2015, 17:50:09) \n[GCC 5.1.1 20150618 (Red Hat 5.1.1-4)] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import sys\n>>> sys.getdefaultencoding()\n'ascii'\n>>> \n[changboguo@localhost oslo.log]$ python3\nPython 3.4.2 (default, Jul  9 2015, 17:24:30) \n[GCC 5.1.1 20150618 (Red Hat 5.1.1-4)] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import sys\n>>> sys.getdefaultencoding()\n'utf-8'\n>>> \n\nThe following code may fix the issue. \n\nimport sys\ndefault_encoding = 'utf-8'\nif sys.getdefaultencoding() != default_encoding:\n   reload(sys)\n   sys.setdefaultencoding(default_encoding)\n", 
            "date_created": "2017-05-04 07:09:15.785994+00:00", 
            "author": "https://api.launchpad.net/1.0/~glongwave"
        }, 
        {
            "content": "Change abandoned by melanie witt (<email address hidden>) on branch: master\nReview: https://review.openstack.org/461840", 
            "date_created": "2017-05-04 14:24:52.159832+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/461912\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=564958dba6c280eb8e11ae9bbc819c7da6e204bd\nSubmitter: Jenkins\nBranch:    master\n\ncommit 564958dba6c280eb8e11ae9bbc819c7da6e204bd\nAuthor: melanie witt <email address hidden>\nDate:   Tue May 2 21:47:12 2017 +0000\n\n    Use six.text_type() when logging Instance object\n    \n    We're seeing a trace in gate jobs, for example:\n    \n      UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position\n      402: ordinal not in range(128)\n    \n    when attempting to log an Instance object with a unicode display name.\n    \n    This resurfaced relatively recently because of the change in devstack\n    to use the new OSJournalHandler with use_journal=True which is\n    suspected of causing some deadlock issues [1] unrelated to this bug.\n    \n    The problem occurs in code that logs an entire Instance object when\n    the object has a field with unicode characters in it (display_name).\n    When the object is sent to logging, the UnicodeDecodeError is raised\n    while formatting the log record here [2]. This implies an implicit\n    conversion attempt to unicode at this point.\n    \n    I found that with the Instance object, the conversion to unicode fails\n    with the UnicodeDecodeError unless the encoding 'utf-8' is explicitly\n    specified to six.text_type(). And when specifying an encoding to\n    six.text_type(), the argument to convert must be a string, not an\n    Instance object, so this does the conversion in two steps as a utility\n    function:\n    \n      1. Get the string representation of the Instance with repr()\n      2. Call six.text_type(instance_repr, 'utf-8') passing the encoding\n         if not six.PY3\n    \n    Closes-Bug: #1580728\n    \n    [1] https://review.openstack.org/#/c/462163\n    [2] https://github.com/python/cpython/blob/2e576f5/Lib/logging/__init__.py#L338\n    \n    Change-Id: I0fc3ae02cb2e401b3240faf0d8b6aa5dc52b91fc\n", 
            "date_created": "2017-05-04 17:00:47.057886+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/462735", 
            "date_created": "2017-05-04 20:59:32.063845+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/462735\nCommitted: https://git.openstack.org/cgit/openstack/oslo.log/commit/?id=72e5c3c1e258589957011506c36dd8af0a481513\nSubmitter: Jenkins\nBranch:    master\n\ncommit 72e5c3c1e258589957011506c36dd8af0a481513\nAuthor: melanie witt <email address hidden>\nDate:   Thu May 4 20:22:47 2017 +0000\n\n    Use dict arg values for unicode checks in ContextFormatter\n    \n    In ContextFormatter.format(), for python2 it checks each arg to\n    determine whether unicode should be used for the format message.\n    The problem is the code assumes the args are a list, when they can\n    also be a dict, for example:\n    \n      LOG.info('%(thing)s', {'thing': '...'})\n    \n    and in that case, the dict keys were implicitly being used for the\n    checks. The checks will always pass on string dict keys, so the\n    format message gets converted to unicode even though the corresponding\n    args will ultimately fail decoding to unicode. Then, the logging fails\n    with:\n    \n      UnicodeDecodeError: 'ascii' codec can't decode byte 0xc6 in\n      position 0: ordinal not in range(128)\n    \n    when the unicode format message causes an implicit conversion attempt\n    of the args to unicode [1].\n    \n    This adds a check for the args type and uses the dict values for the\n    unicode checks so that dict args with values that fail decoding will\n    have: should_use_unicode = False.\n    \n    Closes-Bug: #1580728\n    \n    [1] https://github.com/python/cpython/blob/2e576f5/Lib/logging/__init__.py#L338\n    \n    Change-Id: I8c479e507efcf8acd3e3faa4a702fa6e1f18772f\n", 
            "date_created": "2017-05-05 03:34:25.079126+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/oslo.log 3.26.1 release.", 
            "date_created": "2017-05-10 12:37:14.606764+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: stable/ocata\nReview: https://review.openstack.org/466677", 
            "date_created": "2017-05-22 10:57:38.640526+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/466677\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=62a5b4bd206d6feb509cd397cea51dcd3620a21e\nSubmitter: Jenkins\nBranch:    stable/ocata\n\ncommit 62a5b4bd206d6feb509cd397cea51dcd3620a21e\nAuthor: melanie witt <email address hidden>\nDate:   Tue May 2 21:47:12 2017 +0000\n\n    Use six.text_type() when logging Instance object\n    \n    We're seeing a trace in gate jobs, for example:\n    \n      UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position\n      402: ordinal not in range(128)\n    \n    when attempting to log an Instance object with a unicode display name.\n    \n    This resurfaced relatively recently because of the change in devstack\n    to use the new OSJournalHandler with use_journal=True which is\n    suspected of causing some deadlock issues [1] unrelated to this bug.\n    \n    The problem occurs in code that logs an entire Instance object when\n    the object has a field with unicode characters in it (display_name).\n    When the object is sent to logging, the UnicodeDecodeError is raised\n    while formatting the log record here [2]. This implies an implicit\n    conversion attempt to unicode at this point.\n    \n    I found that with the Instance object, the conversion to unicode fails\n    with the UnicodeDecodeError unless the encoding 'utf-8' is explicitly\n    specified to six.text_type(). And when specifying an encoding to\n    six.text_type(), the argument to convert must be a string, not an\n    Instance object, so this does the conversion in two steps as a utility\n    function:\n    \n      1. Get the string representation of the Instance with repr()\n      2. Call six.text_type(instance_repr, 'utf-8') passing the encoding\n         if not six.PY3\n    \n    Closes-Bug: #1580728\n    \n    [1] https://review.openstack.org/#/c/462163\n    [2] https://github.com/python/cpython/blob/2e576f5/Lib/logging/__init__.py#L338\n    \n    Change-Id: I0fc3ae02cb2e401b3240faf0d8b6aa5dc52b91fc\n    (cherry picked from commit 564958dba6c280eb8e11ae9bbc819c7da6e204bd)\n", 
            "date_created": "2017-05-24 06:16:55.967591+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/nova 15.0.5 release.", 
            "date_created": "2017-05-30 15:54:28.061604+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/nova 16.0.0.0b2 development milestone.", 
            "date_created": "2017-06-08 21:52:42.552575+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}