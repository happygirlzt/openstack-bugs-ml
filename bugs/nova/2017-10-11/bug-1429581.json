{
    "status": "Fix Released", 
    "last_updated": "2015-10-15 09:04:09.607782+00:00", 
    "description": "Attaching iSCSI volumes for VMware, using the following steps:\n1.Nova gets volume connector information(get_volume_connector), such as ESX iqn;\n2.Calling the cinder-volume initialize_connection, and will register the iqn of the ESX to the iSCSI server.It returns the connection information in the final, such as the iSCSI target;\n3.Nova attaches the volume to the VM with the connection_info.\n\nI try to attach an iSCSI volume to an instance, but it's failed in the 3rd step(unable to attach the volume to the VM).\nAfter analyzing the logs, I found the reason for it is the iqn 1th step returning was wrong.\n\nMy environment:\nMy vcenter cluster has two host: ESX-1 and ESX-2, and an instance(VM-2) on the host ESX-2.\nI try to attach an iSCSI volume to VM-2, I have found that it returns the iqn of ESX-1 while calling method get_volume_connector, I think it should return the iqn of the host running the VM (that is, ESX-2 iqn), rather than first host iqn, But it always returns the first ESX iqn, as in the following code.\n\nvmwareapi/volumeutils.py:\n\n\u00a0\u00a0\u00a0\u00a0def get_volume_connector(self, instance):\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"\"\"Return volume connector information.\"\"\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0try:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0vm_ref = vm_util.get_vm_ref(self._session, instance)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0except exception.InstanceNotFound:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0vm_ref = None\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0iqn = self._iscsi_get_host_iqn()\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0connector = {'ip': CONF.vmware.host_ip,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'initiator': iqn,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'host': CONF.vmware.host_ip}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if vm_ref:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0connector['instance'] = vm_ref.value\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return connector\n\n\u00a0\u00a0\u00a0\u00a0def _iscsi_get_host_iqn(self):\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"\"\"Return the host iSCSI IQN.\"\"\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0host_mor = vm_util.get_host_ref(self._session, self._cluster)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0hbas_ret = self._session._call_method(\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0vim_util, \"get_dynamic_property\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0host_mor, \"HostSystem\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"config.storageDevice.hostBusAdapter\")\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0# Meaning there are no host bus adapters on the host\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if hbas_ret is None:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0host_hbas = hbas_ret.HostHostBusAdapter\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if not host_hbas:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0for hba in host_hbas:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if hba.__class__.__name__ == 'HostInternetScsiHba':\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return hba.iScsiName\n\nvmwareapi/vm_util.py:\n\ndef get_host_ref(session, cluster=None):\n\u00a0\u00a0\u00a0\u00a0\"\"\"Get reference to a host within the cluster specified.\"\"\"\n\u00a0\u00a0\u00a0\u00a0if cluster is None:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0results = session._call_method(vim_util, \"get_objects\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"HostSystem\")\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_cancel_retrieve_if_necessary(session, results)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0host_mor = results.objects[0].obj\n\u00a0\u00a0\u00a0\u00a0else:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0host_ret = session._call_method(vim_util, \"get_dynamic_property\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cluster, \"ClusterComputeResource\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"host\")\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if not host_ret or not host_ret.ManagedObjectReference:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0msg = _('No host available on cluster')\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0raise exception.NoValidHost(reason=msg)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0host_mor = host_ret.ManagedObjectReference[0]\n\n\u00a0\u00a0\u00a0\u00a0return host_mor", 
    "tags": [
        "vmware"
    ], 
    "importance": "Medium", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1429581", 
    "owner": "https://api.launchpad.net/1.0/~javaloveme", 
    "id": 1429581, 
    "index": 4172, 
    "created": "2015-03-08 13:55:51.088502+00:00", 
    "title": "[VMware] Failed to attach volume due to wrong host iqn", 
    "comments": [
        {
            "content": "Attaching iSCSI volumes for VMware, using the following steps:\n1.Nova gets volume connector information(get_volume_connector), such as ESX iqn;\n2.Calling the cinder-volume initialize_connection, and will register the iqn of the ESX to the iSCSI server.It returns the connection information in the final, such as the iSCSI target;\n3.Nova attaches the volume to the VM with the connection_info.\n\nI try to attach an iSCSI volume to an instance, but it's failed in the 3rd step(unable to attach the volume to the VM).\nAfter analyzing the logs, I found the reason for it is the iqn 1th step returning was wrong.\n\nMy environment:\nMy vcenter cluster has two host: ESX-1 and ESX-2, and an instance (VM-2) on the host ESX-2.\nI try to attach an iSCSI volume to VM-2, I have found that it returns the iqn of ESX-1 while calling method get_volume_connector, I think it should return the iqn of the host running the VM (that is, ESX-2 iqn), rather than first host iqn, But it always returns the first ESX iqn, as in the following code.\n\n\nvmwareapi/volumeutils.py:\n\n    def get_volume_connector(self, instance):\n        \"\"\"Return volume connector information.\"\"\"\n        try:\n            vm_ref = vm_util.get_vm_ref(self._session, instance)\n        except exception.InstanceNotFound:\n            vm_ref = None\n        iqn = self._iscsi_get_host_iqn()\n        connector = {'ip': CONF.vmware.host_ip,\n                     'initiator': iqn,\n                     'host': CONF.vmware.host_ip}\n        if vm_ref:\n            connector['instance'] = vm_ref.value\n        return connector\n\n    def _iscsi_get_host_iqn(self):\n        \"\"\"Return the host iSCSI IQN.\"\"\"\n        host_mor = vm_util.get_host_ref(self._session, self._cluster)\n        hbas_ret = self._session._call_method(\n            vim_util, \"get_dynamic_property\",\n            host_mor, \"HostSystem\",\n            \"config.storageDevice.hostBusAdapter\")\n\n        # Meaning there are no host bus adapters on the host\n        if hbas_ret is None:\n            return\n        host_hbas = hbas_ret.HostHostBusAdapter\n        if not host_hbas:\n            return\n        for hba in host_hbas:\n            if hba.__class__.__name__ == 'HostInternetScsiHba':\n                return hba.iScsiName\n\n\nvmwareapi/vm_util.py:\n\ndef get_host_ref(session, cluster=None):\n    \"\"\"Get reference to a host within the cluster specified.\"\"\"\n    if cluster is None:\n        results = session._call_method(vim_util, \"get_objects\",\n                                       \"HostSystem\")\n        _cancel_retrieve_if_necessary(session, results)\n        host_mor = results.objects[0].obj\n    else:\n        host_ret = session._call_method(vim_util, \"get_dynamic_property\",\n                                        cluster, \"ClusterComputeResource\",\n                                        \"host\")\n        if not host_ret or not host_ret.ManagedObjectReference:\n            msg = _('No host available on cluster')\n            raise exception.NoValidHost(reason=msg)\n        host_mor = host_ret.ManagedObjectReference[0]\n\n    return host_mor", 
            "date_created": "2015-03-08 13:55:51.088502+00:00", 
            "author": "https://api.launchpad.net/1.0/~javaloveme"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/162700", 
            "date_created": "2015-03-09 17:31:25.960189+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Change abandoned by Michael Still (<email address hidden>) on branch: master\nReview: https://review.openstack.org/162700\nReason: This patch has been stalled for quite a while, so I am going to abandon it to keep the code review queue sane. Please restore the change when it is ready for review.", 
            "date_created": "2015-08-26 23:33:34.697139+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/162700\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=1e457566210559650b37095f9086557ffbf694e8\nSubmitter: Jenkins\nBranch:    master\n\ncommit 1e457566210559650b37095f9086557ffbf694e8\nAuthor: javeme <email address hidden>\nDate:   Tue Mar 10 00:53:02 2015 +0800\n\n    VMware: Update to return the correct ESX iqn\n    \n    By default, the return value of method get_volume_connector\n    is the first ESX's connection info. This patch will update it\n    to return the connection info of the host running the VM.\n    \n    Closes-Bug: #1429581\n    Change-Id: Iac4f199632a0196f7cb8e1e50b7c7c4bb285d97d\n", 
            "date_created": "2015-09-10 23:49:55.497120+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}