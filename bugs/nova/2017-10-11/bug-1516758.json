{
    "status": "Confirmed", 
    "last_updated": "2016-02-16 17:57:09.225731+00:00", 
    "description": "Remotefs drivers have to mount a filesystem while connecting a new volume and unmount it eventually. They do it with code like:\n\n\nconnect_volume:\nif not is_mounted():\n    do_mount()\n\n\ndisconnect_volume:\n    try:\n        umount()\n    except:\n        if error is not 'fs is busy':\n            raise\n\n\nThere is a race here - someone can umount fs between \"if not is_mounted():\" and  \"do_mount()\".\nI think there should be sort of reference counting, so that disconnect_volume will not unmount fs, is some instances use it.\n\n\nThe simple testcase:\n\n1. Configure cinder to use nfs driver\n\n2. Create 2 volume from an image\ncinder create --image <image_id> 4\ncinder create --image <image_id> 4\n\n3. boot 2 instances from these volumes\nnova boot inst1 --flavor m1.vz --block-device id=<vol1 id>,source=volume,dest=volume,bootindex=0\nnova boot inst2 --flavor m1.vz --block-device id=<vol2 id>,source=volume,dest=volume,bootindex=0\n\n4. Suspend first instance\nnova suspend inst1\n\n5. delete second instance\nnova delete inst2\n\n6. resume first instance\nnova resume inst1\n\nThe error should appear\n\n] Setting instance vm_state to ERROR\n] Traceback (most recent call last):\n]   File \"/opt/stack/nova/nova/compute/manager.py\", line 6374, in _error_out_instance_on_exception\n]     yield\n]   File \"/opt/stack/nova/nova/compute/manager.py\", line 4146, in resume_instance\n]     block_device_info)\n]   File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 2386, in resume\n]     vifs_already_plugged=True)\n]   File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 4577, in _create_domain_and_network\n]     xml, pause=pause, power_on=power_on)\n]   File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 4507, in _create_domain\n]     guest.launch(pause=pause)\n]   File \"/opt/stack/nova/nova/virt/libvirt/guest.py\", line 141, in launch\n]     self._encoded_xml, errors='ignore')\n]   File \"/usr/lib/python2.7/site-packages/oslo_utils/excutils.py\", line 197, in __exit__\n]     six.reraise(self.type_, self.value, self.tb)\n]   File \"/opt/stack/nova/nova/virt/libvirt/guest.py\", line 136, in launch\n]     return self._domain.createWithFlags(flags)\n]   File \"/usr/lib/python2.7/site-packages/eventlet/tpool.py\", line 183, in doit\n]     result = proxy_call(self._autowrap, f, *args, **kwargs)\n]   File \"/usr/lib/python2.7/site-packages/eventlet/tpool.py\", line 141, in proxy_call\n]     rv = execute(f, *args, **kwargs)\n]   File \"/usr/lib/python2.7/site-packages/eventlet/tpool.py\", line 122, in execute\n]     six.reraise(c, e, tb)\n]   File \"/usr/lib/python2.7/site-packages/eventlet/tpool.py\", line 80, in tworker\n]     rv = meth(*args, **kwargs)\n]   File \"/usr/lib64/python2.7/site-packages/libvirt.py\", line 1000, in createWithFlags\n]     if ret == -1: raise libvirtError ('virDomainCreateWithFlags() failed', dom=self)\n] libvirtError: Cannot access storage file '/opt/stack/data/nova/mnt/9f23aa85a377c87a8ad6b6462e329905/volume-97bfb953-5bc3-4dbe-b267-c9519a3a0282' (as uid:107, gid:107): No such file or directory", 
    "tags": [
        "libvirt", 
        "volumes"
    ], 
    "importance": "Undecided", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1516758", 
    "owner": "None", 
    "id": 1516758, 
    "index": 5850, 
    "created": "2015-11-16 19:30:28.501660+00:00", 
    "title": "synchronization problem in libvirt's remotefs volume drivers", 
    "comments": [
        {
            "content": "Remotefs drivers have to mount a filesystem while connecting a new volume and unmount it eventually. They do it with code like:\n\n\nconnect_volume:\nif not is_mounted():\n    do_mount()\n\n\ndisconnect_volume:\n    try:\n        umount()\n    except:\n        if error is not 'fs is busy':\n            raise\n\n\nThere is a race here - someone can umount fs between \"if not is_mounted():\" and  \"do_mount()\".\nI think there should be sort of reference counting, so that disconnect_volume will not unmount fs, is some instances use it.\n\n\nThe simple testcase:\n\n1. Configure cinder to use nfs driver\n\n2. Create 2 volume from an image\ncinder create --image <image_id> 4\ncinder create --image <image_id> 4\n\n3. boot 2 instances from these volumes\nnova boot inst1 --flavor m1.vz --block-device id=<vol1 id>,source=volume,dest=volume,bootindex=0\nnova boot inst2 --flavor m1.vz --block-device id=<vol2 id>,source=volume,dest=volume,bootindex=0\n\n4. Suspend first instance\nnova suspend inst1\n\n5. delete second instance\nnova delete inst2\n\n6. resume first instance\nnova resume inst1\n\nThe error should appear\n\n] Setting instance vm_state to ERROR\n] Traceback (most recent call last):\n]   File \"/opt/stack/nova/nova/compute/manager.py\", line 6374, in _error_out_instance_on_exception\n]     yield\n]   File \"/opt/stack/nova/nova/compute/manager.py\", line 4146, in resume_instance\n]     block_device_info)\n]   File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 2386, in resume\n]     vifs_already_plugged=True)\n]   File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 4577, in _create_domain_and_network\n]     xml, pause=pause, power_on=power_on)\n]   File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 4507, in _create_domain\n]     guest.launch(pause=pause)\n]   File \"/opt/stack/nova/nova/virt/libvirt/guest.py\", line 141, in launch\n]     self._encoded_xml, errors='ignore')\n]   File \"/usr/lib/python2.7/site-packages/oslo_utils/excutils.py\", line 197, in __exit__\n]     six.reraise(self.type_, self.value, self.tb)\n]   File \"/opt/stack/nova/nova/virt/libvirt/guest.py\", line 136, in launch\n]     return self._domain.createWithFlags(flags)\n]   File \"/usr/lib/python2.7/site-packages/eventlet/tpool.py\", line 183, in doit\n]     result = proxy_call(self._autowrap, f, *args, **kwargs)\n]   File \"/usr/lib/python2.7/site-packages/eventlet/tpool.py\", line 141, in proxy_call\n]     rv = execute(f, *args, **kwargs)\n]   File \"/usr/lib/python2.7/site-packages/eventlet/tpool.py\", line 122, in execute\n]     six.reraise(c, e, tb)\n]   File \"/usr/lib/python2.7/site-packages/eventlet/tpool.py\", line 80, in tworker\n]     rv = meth(*args, **kwargs)\n]   File \"/usr/lib64/python2.7/site-packages/libvirt.py\", line 1000, in createWithFlags\n]     if ret == -1: raise libvirtError ('virDomainCreateWithFlags() failed', dom=self)\n] libvirtError: Cannot access storage file '/opt/stack/data/nova/mnt/9f23aa85a377c87a8ad6b6462e329905/volume-97bfb953-5bc3-4dbe-b267-c9519a3a0282' (as uid:107, gid:107): No such file or directory", 
            "date_created": "2015-11-16 19:30:28.501660+00:00", 
            "author": "https://api.launchpad.net/1.0/~dguryanov"
        }
    ]
}