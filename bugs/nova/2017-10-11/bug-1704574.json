{
    "status": "Fix Released", 
    "last_updated": "2017-08-22 11:39:31.822401+00:00", 
    "description": "I made a typo while writing some gabbi tests and uncovered a 500 in the placement service. If you try to allocate to a resource provider that does not host that class of resource it can have a KeyError during capacity checking. given the following gabbi in microversion 1.10:\n\n- name: create a resource provider\n  POST: /resource_providers\n  data:\n      name: an rp\n  status: 201                                                                  \n  \n- name: get resource provider\n  GET: $LOCATION                                                               \n  status: 200\n  \n- name: create a resource class                                                \n  PUT: /resource_classes/CUSTOM_GOLD                                           \n  status: 201                                                                  \n      \n- name: add inventory to an rp\n  PUT: /resource_providers/$HISTORY['get resource provider'].$RESPONSE['$.uuid']/inventories\n  data:                                                                        \n      resource_provider_generation: 0                                          \n      inventories:\n          VCPU:\n              total: 24\n          CUSTOM_GOLD:                                                         \n              total: 5\n  status: 200\n      \n- name: allocate some of it                                                    \n  PUT: /allocations/6d9f83db-6eb5-49f6-84b0-5d03c6aa9fc8                       \n  data:                                                                        \n      allocations:\n          - resource_provider:\n                uuid: $HISTORY['get resource provider'].$RESPONSE['$.uuid']    \n            resources:\n                DISK_GB: 5                                                     \n                CUSTOM_GOLD: 1                                                 \n      project_id: 42a32c07-3eeb-4401-9373-68a8cdca6784                         \n      user_id: 66cb2f29-c86d-47c3-8af5-69ae7b778c70\n  status: 204\n\nwhen DISK_GB is checked for capacity, we get:\n\n2017-07-15 17:41:47,224 ERROR [nova.api.openstack.placement.handler] Uncaught exception\nTraceback (most recent call last):\n  File \"nova/api/openstack/placement/handler.py\", line 215, in __call__\n    return dispatch(environ, start_response, self._map)\n  File \"nova/api/openstack/placement/handler.py\", line 144, in dispatch\n    return handler(environ, start_response)\n  File \"/home/cdent/src/nova/.tox/cover/local/lib/python2.7/site-packages/webob/dec.py\", line 131, in __call__\n    resp = self.call_func(req, *args, **self.kwargs)\n  File \"nova/api/openstack/placement/wsgi_wrapper.py\", line 29, in call_func\n    super(PlacementWsgify, self).call_func(req, *args, **kwargs)\n  File \"/home/cdent/src/nova/.tox/cover/local/lib/python2.7/site-packages/webob/dec.py\", line 196, in call_func\n    return self.func(req, *args, **kwargs)\n  File \"nova/api/openstack/placement/microversion.py\", line 268, in decorated_func\n    return _find_method(f, version)(req, *args, **kwargs)\n  File \"nova/api/openstack/placement/util.py\", line 138, in decorated_function\n    return f(req)\n  File \"nova/api/openstack/placement/handlers/allocation.py\", line 285, in set_allocations\n    return _set_allocations(req, ALLOCATION_SCHEMA_V1_8)\n  File \"nova/api/openstack/placement/handlers/allocation.py\", line 249, in _set_allocations\n    allocations.create_all()\n  File \"nova/objects/resource_provider.py\", line 1851, in create_all\n    self._set_allocations(self._context, self.objects)\n  File \"/home/cdent/src/nova/.tox/cover/local/lib/python2.7/site-packages/oslo_db/sqlalchemy/enginefacade.py\", line 979, in wrapper\n    return fn(*args, **kwargs)\n  File \"nova/objects/resource_provider.py\", line 1811, in _set_allocations\n    before_gens = _check_capacity_exceeded(conn, allocs)\n  File \"nova/objects/resource_provider.py\", line 1615, in _check_capacity_exceeded\n    usage = usage_map[key]\nKeyError: ('14930a42-78df-4038-aafa-c959e18111e5', 2)", 
    "tags": [
        "placement"
    ], 
    "importance": "Medium", 
    "heat": 10, 
    "link": "https://bugs.launchpad.net/nova/+bug/1704574", 
    "owner": "https://api.launchpad.net/1.0/~cdent", 
    "id": 1704574, 
    "index": 4862, 
    "created": "2017-07-15 16:48:09.480600+00:00", 
    "title": "[placement] attempt to put allocation to resource provide that does not host class of resource causes 500", 
    "comments": [
        {
            "content": "I made a typo while writing some gabbi tests and uncovered a 500 in the placement service. If you try to allocate to a resource provider that does not host that class of resource it can have a KeyError during capacity checking. given the following gabbi in microversion 1.10:\n\n- name: create a resource provider\n  POST: /resource_providers\n  data:\n      name: an rp\n  status: 201                                                                  \n  \n- name: get resource provider\n  GET: $LOCATION                                                               \n  status: 200\n  \n- name: create a resource class                                                \n  PUT: /resource_classes/CUSTOM_GOLD                                           \n  status: 201                                                                  \n      \n- name: add inventory to an rp\n  PUT: /resource_providers/$HISTORY['get resource provider'].$RESPONSE['$.uuid']/inventories\n  data:                                                                        \n      resource_provider_generation: 0                                          \n      inventories:\n          VCPU:\n              total: 24\n          CUSTOM_GOLD:                                                         \n              total: 5\n  status: 200\n      \n- name: allocate some of it                                                    \n  PUT: /allocations/6d9f83db-6eb5-49f6-84b0-5d03c6aa9fc8                       \n  data:                                                                        \n      allocations:\n          - resource_provider:\n                uuid: $HISTORY['get resource provider'].$RESPONSE['$.uuid']    \n            resources:\n                DISK_GB: 5                                                     \n                CUSTOM_GOLD: 1                                                 \n      project_id: 42a32c07-3eeb-4401-9373-68a8cdca6784                         \n      user_id: 66cb2f29-c86d-47c3-8af5-69ae7b778c70\n  status: 204\n\nwhen DISK_GB is checked for capacity, we get:\n\n2017-07-15 17:41:47,224 ERROR [nova.api.openstack.placement.handler] Uncaught exception\nTraceback (most recent call last):\n  File \"nova/api/openstack/placement/handler.py\", line 215, in __call__\n    return dispatch(environ, start_response, self._map)\n  File \"nova/api/openstack/placement/handler.py\", line 144, in dispatch\n    return handler(environ, start_response)\n  File \"/home/cdent/src/nova/.tox/cover/local/lib/python2.7/site-packages/webob/dec.py\", line 131, in __call__\n    resp = self.call_func(req, *args, **self.kwargs)\n  File \"nova/api/openstack/placement/wsgi_wrapper.py\", line 29, in call_func\n    super(PlacementWsgify, self).call_func(req, *args, **kwargs)\n  File \"/home/cdent/src/nova/.tox/cover/local/lib/python2.7/site-packages/webob/dec.py\", line 196, in call_func\n    return self.func(req, *args, **kwargs)\n  File \"nova/api/openstack/placement/microversion.py\", line 268, in decorated_func\n    return _find_method(f, version)(req, *args, **kwargs)\n  File \"nova/api/openstack/placement/util.py\", line 138, in decorated_function\n    return f(req)\n  File \"nova/api/openstack/placement/handlers/allocation.py\", line 285, in set_allocations\n    return _set_allocations(req, ALLOCATION_SCHEMA_V1_8)\n  File \"nova/api/openstack/placement/handlers/allocation.py\", line 249, in _set_allocations\n    allocations.create_all()\n  File \"nova/objects/resource_provider.py\", line 1851, in create_all\n    self._set_allocations(self._context, self.objects)\n  File \"/home/cdent/src/nova/.tox/cover/local/lib/python2.7/site-packages/oslo_db/sqlalchemy/enginefacade.py\", line 979, in wrapper\n    return fn(*args, **kwargs)\n  File \"nova/objects/resource_provider.py\", line 1811, in _set_allocations\n    before_gens = _check_capacity_exceeded(conn, allocs)\n  File \"nova/objects/resource_provider.py\", line 1615, in _check_capacity_exceeded\n    usage = usage_map[key]\nKeyError: ('14930a42-78df-4038-aafa-c959e18111e5', 2)", 
            "date_created": "2017-07-15 16:48:09.480600+00:00", 
            "author": "https://api.launchpad.net/1.0/~cdent"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/484162", 
            "date_created": "2017-07-15 17:54:40.804092+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/484162\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=913149249cc00f50a6219d3ddc86f3600a610c00\nSubmitter: Jenkins\nBranch:    master\n\ncommit 913149249cc00f50a6219d3ddc86f3600a610c00\nAuthor: Chris Dent <email address hidden>\nDate:   Sat Jul 15 18:49:57 2017 +0100\n\n    [placement] fix 500 error when allocating to bad class\n    \n    Adjust exception handling when calling set_allocations so that a\n    KeyError in the usage_map raises an InvalidInventory. When making\n    allocations against a resource provider with >1 resource classes\n    and where one of those resource classes does not have inventory on the\n    provider, we can attempt to get info out of the usage_map that is not\n    there, and get a KeyError. This catches the KeyError and turns it into\n    an InvalidInventory which eventually results in a 409 response,\n    consistent with other responses to bad allocations. Since this is fixing\n    a 500, no microversion required.\n    \n    Change-Id: I52fa02b56f8e62dfa206a3969a99fab250508760\n    Closes-Bug: #1704574\n", 
            "date_created": "2017-07-18 16:27:40.229368+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: stable/ocata\nReview: https://review.openstack.org/485263", 
            "date_created": "2017-07-19 16:06:31.250662+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/nova 16.0.0.0b3 development milestone.", 
            "date_created": "2017-07-28 07:40:29.562960+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/485263\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=dc85c089702a9819fdab7c951d427de838a3dcc6\nSubmitter: Jenkins\nBranch:    stable/ocata\n\ncommit dc85c089702a9819fdab7c951d427de838a3dcc6\nAuthor: Chris Dent <email address hidden>\nDate:   Sat Jul 15 18:49:57 2017 +0100\n\n    [placement] fix 500 error when allocating to bad class\n    \n    Adjust exception handling when calling set_allocations so that a\n    KeyError in the usage_map raises an InvalidInventory. When making\n    allocations against a resource provider with >1 resource classes\n    and where one of those resource classes does not have inventory on the\n    provider, we can attempt to get info out of the usage_map that is not\n    there, and get a KeyError. This catches the KeyError and turns it into\n    an InvalidInventory which eventually results in a 409 response,\n    consistent with other responses to bad allocations. Since this is fixing\n    a 500, no microversion required.\n    \n    NOTE(mriedem): The functional test required some tweaks for Ocata since\n    we didn't have the 1.7 microversion in Ocata. In addition, inventories\n    in early days required that max_unit be set, otherwise it would default\n    to 0 and no allocations could be made. We might wish to consider that a\n    bug in older versions that we should fix?\n    \n    Change-Id: I52fa02b56f8e62dfa206a3969a99fab250508760\n    Closes-Bug: #1704574\n    (cherry picked from commit 913149249cc00f50a6219d3ddc86f3600a610c00)\n", 
            "date_created": "2017-08-12 06:18:44.758738+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/nova 15.0.7 release.", 
            "date_created": "2017-08-22 11:39:31.380118+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}