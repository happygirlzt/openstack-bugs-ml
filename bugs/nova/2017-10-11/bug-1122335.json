{
    "status": "Fix Released", 
    "last_updated": "2013-04-04 11:14:23.768174+00:00", 
    "description": "This is a fairly complicated networking problem that can happen when using an external gateway with fixed and floating ips on different interfaces that have no natting in between.\n\nBasically it works as follows:\n\nIf you ping an a floating ip from an instance with only a fixed ip, the traffic will be sent to the default gateway. If the default gateway has a route to the floating ip, it will then be sent to the host of the instance with the floating ip. Unfortunately the source address will be on the fixed network which will cause the receiving host to drop the packet due to rp_filter. Essentially, the route for the fixed range is on a different interface so it the kernel assumes the packet is spoofed and drops it.\n\nIn order for this scenario to work properly, it is necessary to snat packets on the source host that are going to the floating range.", 
    "tags": [], 
    "importance": "Low", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1122335", 
    "owner": "https://api.launchpad.net/1.0/~vishvananda", 
    "id": 1122335, 
    "index": 5667, 
    "created": "2013-02-11 19:26:48.557602+00:00", 
    "title": "Pinging a floating ip from an instance without floating can fail", 
    "comments": [
        {
            "content": "This is a fairly complicated networking problem that can happen when using an external gateway with fixed and floating ips on different interfaces that have no natting in between.\n\nBasically it works as follows:\n\nIf you ping an a floating ip from an instance with only a fixed ip, the traffic will be sent to the default gateway. If the default gateway has a route to the floating ip, it will then be sent to the host of the instance with the floating ip. Unfortunately the source address will be on the fixed network which will cause the receiving host to drop the packet due to rp_filter. Essentially, the route for the fixed range is on a different interface so it the kernel assumes the packet is spoofed and drops it.\n\nIn order for this scenario to work properly, it is necessary to snat packets on the source host that are going to the floating range.", 
            "date_created": "2013-02-11 19:26:48.557602+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/21689", 
            "date_created": "2013-02-11 20:54:31.928249+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/21689\nCommitted: http://github.com/openstack/nova/commit/d0c8f8a061125d6e4c3dce8f7f0741ff57a014b8\nSubmitter: Jenkins\nBranch:    master\n\ncommit d0c8f8a061125d6e4c3dce8f7f0741ff57a014b8\nAuthor: Vishvananda Ishaya <email address hidden>\nDate:   Mon Feb 11 12:08:35 2013 -0800\n\n    Allow fixed to float ping with external gateway.\n    \n    If you ping an a floating ip from an instance with only a fixed ip, the\n    traffic will be sent to the default gateway. If the default gateway has\n    a route to the floating ip, it will then be sent to the host of the\n    instance with the floating ip. The source address will be on the fixed\n    network, so if the floating addresses are on a different network, the\n    receiving host to drop the packet due to the default rp_filter.\n    Essentially, the route for the fixed range is on a different interface\n    so it the kernel assumes the packet is spoofed and drops it.\n    \n    In order to fix this issue this patch adds a new config option called\n    force_snat_range. Traffic that originates in fixed_range and has a\n    destination in force_snat_range will always be routed. This forces\n    the packet to hit the fallback floating roule and be snatted to\n    routing_source_ip. This means the traffic will originate from the\n    proper network and the packet will make it through.\n    \n    DocImpact\n    \n    Fixes bug 1122335\n    \n    Change-Id: I7e31c25d37a5c4fd02c8238aec58a28af3fd7f6a\n", 
            "date_created": "2013-02-20 02:48:40.439692+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}