{
    "status": "Invalid", 
    "last_updated": "2015-10-13 09:40:10.618878+00:00", 
    "description": "If an image has several volume in bdm, and a user adds one more volume for boot operation, then the new volume is not just added to a volume list, but becomes the second device. This can lead to problems if the image root device has various soft which settings point to other volumes.\n\nFor example:\n1 the image is a snapshot of a volume backed instance which had vda and vdb volumes\n2 the instance had an sql server, which used both vda and vdb for its database\n3 if a user runs a new instance from the image, either device names are restored (with xen), or they're reassigned (libvirt) to the same names, because the order of devices, which are passed in libvirt, is the same as it was for the original instance\n4 if a user runs a new instance, adding a new volume, the volume list becomes vda, new, vdb\n5 in this case libvirt reassings device names to vda=vda, new=vdb, vdb=vdc\n6 as a result the sql server will not find its data on vdb", 
    "tags": [
        "block-device-mapping", 
        "launch", 
        "volumes"
    ], 
    "importance": "Undecided", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1489442", 
    "owner": "None", 
    "id": 1489442, 
    "index": 5728, 
    "created": "2015-08-27 12:29:48.169519+00:00", 
    "title": "Invalid order of volumes with adding a volume in boot operation", 
    "comments": [
        {
            "content": "If an image has several volume in bdm, and a user adds one more volume for boot operation, then the new volume is not just added to a volume list, but becomes the second device. This can lead to problems if the image root device has various soft which settings point to other volumes.\n\nFor example:\n1 the image is a snapshot of a volume backed instance which had vda and vdb volumes\n2 the instance had an sql server, which used both vda and vdb for its database\n3 if a user runs a new instance from the image, either device names are restored (with xen), or they're reassigned (libvirt) to the same names, because the order of devices, which are passed in libvirt, is the same as it was for the original instance\n4 if a user runs a new instance, adding a new volume, the volume list becomes vda, new, vdb\n5 in this case libvirt reassings device names to vda=vda, new=vdb, vdb=vdc\n6 as a result the sql server will not find its data on vdb", 
            "date_created": "2015-08-27 12:29:48.169519+00:00", 
            "author": "https://api.launchpad.net/1.0/~ftersin"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/217743", 
            "date_created": "2015-08-27 14:47:34.504449+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "So I am not sure we actually want to fix this. We really don't want to guarantee the stability of device names in any way.  We'll want to use something like fs labels  in the instance for this.", 
            "date_created": "2015-09-17 10:33:42.557475+00:00", 
            "author": "https://api.launchpad.net/1.0/~ndipanov"
        }, 
        {
            "content": "Moving this to Invalid - but please feel free to move back if you disagree.", 
            "date_created": "2015-09-17 10:34:59.787812+00:00", 
            "author": "https://api.launchpad.net/1.0/~ndipanov"
        }, 
        {
            "content": "@Nikola,  the problem is not about device names, but about consistency and workability of volume backed instance snapshots.\r\n\r\nShould we support a use case:\r\n1 A user snapshots his volume backed instance which has more than one volume.\r\n2 A user creates a new instance from the snapshot.\r\n3 All services of guest OS work fine.\r\n\r\nI think we should, otherwise snapshots of volume backed instances are useless for such instances. But this leads us to need to guarantee the stability of device names in the custom case.\r\nNow we support this use case.\r\n\r\nWe support a use case:\r\n1 A user creates an instance from volume backed image, adding a new volume.\r\n2 The instance has the additional volume attached.\r\n\r\nWhat about a combined use case:\r\n1 A user snapshots his volume backed instance which has more than one volume.\r\n2 A user creates a new instance from the snapshot, adding a new volume.\r\n3 The instance has the additional volume attached.\r\n4 All services of guest OS work fine.\r\n\r\nTo have Nova consistent we should support this use case as well. Any objections?\r\n\r\nAs for fs labels, as i understand they could be usefull from outside only, not from inside an instance (guest OS).", 
            "date_created": "2015-09-23 04:27:36.042375+00:00", 
            "author": "https://api.launchpad.net/1.0/~ftersin"
        }, 
        {
            "content": "I agree with Nikola, even in bare metal it has long been considered bad practice to rely on device names when accessing disks. Instead users should rely on disk serial strings, filesystem uuids, or filesystem labels which are persistent no matter what device letter the volume appears at.", 
            "date_created": "2015-10-02 13:00:03.291019+00:00", 
            "author": "https://api.launchpad.net/1.0/~berrange"
        }, 
        {
            "content": "Well,  if all you guys say this is not a bug, it's not a bug. But it's sadly that Nova cannot guarantee device names even in this simple case.", 
            "date_created": "2015-10-13 09:37:49.799016+00:00", 
            "author": "https://api.launchpad.net/1.0/~ftersin"
        }, 
        {
            "content": "Change abandoned by Feodor Tersin (<email address hidden>) on branch: master\nReview: https://review.openstack.org/217743\nReason: ndipanov and danpb argued in the bug that this is not a feature which Nova has to support", 
            "date_created": "2015-10-13 09:40:10.076754+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}