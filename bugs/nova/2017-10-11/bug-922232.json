{
    "status": "Fix Released", 
    "last_updated": "2012-06-10 20:52:55.712443+00:00", 
    "description": "I'm not sure if this is a general bug or specific to the tgt iscsi helper (will compare with ietd soon)\n\nAttaching a volume to an instance results in the following errors in nova-compute.log on a libvirt compute node:  http://paste.ubuntu.com/817916/\n\nManually walking thru the initiator commands on the compute node ends in the same results, mainly:\n\n# iscsiadm -m node -T iqn.2010-10.org.openstack:volume-00000001 -p 192.168.20.4:3260\niscsiadm: no records found!\n\nIt's not until I send a discovery to the target can I list any records, which (I assume) is the first step toward a successful volume attachment in nova.\n\nroot@test-03:~# iscsiadm -m discovery -t sendtargets -p 192.168.20.4:3260\n192.168.20.4:3260,1 iqn.2010-10.org.openstack:volume-00000001\nroot@test-03:~# iscsiadm -m node -T iqn.2010-10.org.openstack:volume-00000001 -p 192.168.20.4:3260\n# BEGIN RECORD 2.0-871\nnode.name = iqn.2010-10.org.openstack:volume-00000001\nnode.tpgt = 1\nnode.startup = manual\niface.hwaddress = <empty>\niface.ipaddress = <empty>\niface.iscsi_ifacename = default\niface.net_ifacename = <empty>\niface.transport_name = tcp\niface.initiatorname = <empty>\nnode.discovery_address = 192.168.20.4\nnode.discovery_port = 3260\nnode.discovery_type = send_targets\nnode.session.initial_cmdsn = 0\nnode.session.initial_login_retry_max = 8\nnode.session.xmit_thread_priority = -20\nnode.session.cmds_max = 128\nnode.session.queue_depth = 32\nnode.session.auth.authmethod = None\nnode.session.auth.username = <empty>\nnode.session.auth.password = <empty>\nnode.session.auth.username_in = <empty>\nnode.session.auth.password_in = <empty>\nnode.session.timeo.replacement_timeout = 120\nnode.session.err_timeo.abort_timeout = 15\nnode.session.err_timeo.lu_reset_timeout = 20\nnode.session.err_timeo.host_reset_timeout = 60\nnode.session.iscsi.FastAbort = Yes\nnode.session.iscsi.InitialR2T = No\nnode.session.iscsi.ImmediateData = Yes\nnode.session.iscsi.FirstBurstLength = 262144\nnode.session.iscsi.MaxBurstLength = 16776192\nnode.session.iscsi.DefaultTime2Retain = 0\nnode.session.iscsi.DefaultTime2Wait = 2\nnode.session.iscsi.MaxConnections = 1\nnode.session.iscsi.MaxOutstandingR2T = 1\nnode.session.iscsi.ERL = 0\nnode.conn[0].address = 192.168.20.4\nnode.conn[0].port = 3260\nnode.conn[0].startup = manual\nnode.conn[0].tcp.window_size = 524288\nnode.conn[0].tcp.type_of_service = 0\nnode.conn[0].timeo.logout_timeout = 15\nnode.conn[0].timeo.login_timeout = 15\nnode.conn[0].timeo.auth_timeout = 45\nnode.conn[0].timeo.noop_out_interval = 5\nnode.conn[0].timeo.noop_out_timeout = 5\nnode.conn[0].iscsi.MaxRecvDataSegmentLength = 262144\nnode.conn[0].iscsi.HeaderDigest = None\nnode.conn[0].iscsi.DataDigest = None\nnode.conn[0].iscsi.IFMarker = No\nnode.conn[0].iscsi.OFMarker = No\n# END RECORD\nroot@test-03:~# \n\nI have found code in nova to do this kind of discovery, but it appears deprecated in favor of passing the target location directly through nova's messaging layer.  I'm wondering if discovery should be attempted as a fall-back if the initiator fails to find records directly.", 
    "tags": [], 
    "importance": "Medium", 
    "heat": 10, 
    "link": "https://bugs.launchpad.net/nova/+bug/922232", 
    "owner": "https://api.launchpad.net/1.0/~vishvananda", 
    "id": 922232, 
    "index": 2732, 
    "created": "2012-01-26 18:01:45.262377+00:00", 
    "title": "Volumes fail to attach without discovery using tgt", 
    "comments": [
        {
            "content": "I'm not sure if this is a general bug or specific to the tgt iscsi helper (will compare with ietd soon)\n\nAttaching a volume to an instance results in the following errors in nova-compute.log on a libvirt compute node:  http://paste.ubuntu.com/817916/\n\nManually walking thru the initiator commands on the compute node ends in the same results, mainly:\n\n# iscsiadm -m node -T iqn.2010-10.org.openstack:volume-00000001 -p 192.168.20.4:3260\niscsiadm: no records found!\n\nIt's not until I send a discovery to the target can I list any records, which (I assume) is the first step toward a successful volume attachment in nova.\n\nroot@test-03:~# iscsiadm -m discovery -t sendtargets -p 192.168.20.4:3260\n192.168.20.4:3260,1 iqn.2010-10.org.openstack:volume-00000001\nroot@test-03:~# iscsiadm -m node -T iqn.2010-10.org.openstack:volume-00000001 -p 192.168.20.4:3260\n# BEGIN RECORD 2.0-871\nnode.name = iqn.2010-10.org.openstack:volume-00000001\nnode.tpgt = 1\nnode.startup = manual\niface.hwaddress = <empty>\niface.ipaddress = <empty>\niface.iscsi_ifacename = default\niface.net_ifacename = <empty>\niface.transport_name = tcp\niface.initiatorname = <empty>\nnode.discovery_address = 192.168.20.4\nnode.discovery_port = 3260\nnode.discovery_type = send_targets\nnode.session.initial_cmdsn = 0\nnode.session.initial_login_retry_max = 8\nnode.session.xmit_thread_priority = -20\nnode.session.cmds_max = 128\nnode.session.queue_depth = 32\nnode.session.auth.authmethod = None\nnode.session.auth.username = <empty>\nnode.session.auth.password = <empty>\nnode.session.auth.username_in = <empty>\nnode.session.auth.password_in = <empty>\nnode.session.timeo.replacement_timeout = 120\nnode.session.err_timeo.abort_timeout = 15\nnode.session.err_timeo.lu_reset_timeout = 20\nnode.session.err_timeo.host_reset_timeout = 60\nnode.session.iscsi.FastAbort = Yes\nnode.session.iscsi.InitialR2T = No\nnode.session.iscsi.ImmediateData = Yes\nnode.session.iscsi.FirstBurstLength = 262144\nnode.session.iscsi.MaxBurstLength = 16776192\nnode.session.iscsi.DefaultTime2Retain = 0\nnode.session.iscsi.DefaultTime2Wait = 2\nnode.session.iscsi.MaxConnections = 1\nnode.session.iscsi.MaxOutstandingR2T = 1\nnode.session.iscsi.ERL = 0\nnode.conn[0].address = 192.168.20.4\nnode.conn[0].port = 3260\nnode.conn[0].startup = manual\nnode.conn[0].tcp.window_size = 524288\nnode.conn[0].tcp.type_of_service = 0\nnode.conn[0].timeo.logout_timeout = 15\nnode.conn[0].timeo.login_timeout = 15\nnode.conn[0].timeo.auth_timeout = 45\nnode.conn[0].timeo.noop_out_interval = 5\nnode.conn[0].timeo.noop_out_timeout = 5\nnode.conn[0].iscsi.MaxRecvDataSegmentLength = 262144\nnode.conn[0].iscsi.HeaderDigest = None\nnode.conn[0].iscsi.DataDigest = None\nnode.conn[0].iscsi.IFMarker = No\nnode.conn[0].iscsi.OFMarker = No\n# END RECORD\nroot@test-03:~# \n\nI have found code in nova to do this kind of discovery, but it appears deprecated in favor of passing the target location directly through nova's messaging layer.  I'm wondering if discovery should be attempted as a fall-back if the initiator fails to find records directly.", 
            "date_created": "2012-01-26 18:01:45.262377+00:00", 
            "author": "https://api.launchpad.net/1.0/~gandelman-a"
        }, 
        {
            "content": "Interesting.  I didn't think discovery was necessary if you had the rest of the data already.  Is there a way to work around this without using discovery? The fallback seems fine, but I was trying to deprecate discovery.  I assume this is passing in devstack because the volume host is the same host as the compute host so the record exists.\n\nOn Jan 26, 2012, at 10:01 AM, Adam Gandelman wrote:\n\n> Public bug reported:\n> \n> I'm not sure if this is a general bug or specific to the tgt iscsi\n> helper (will compare with ietd soon)\n> \n> Attaching a volume to an instance results in the following errors in\n> nova-compute.log on a libvirt compute node:\n> http://paste.ubuntu.com/817916/\n> \n> Manually walking thru the initiator commands on the compute node ends in\n> the same results, mainly:\n> \n> # iscsiadm -m node -T iqn.2010-10.org.openstack:volume-00000001 -p 192.168.20.4:3260\n> iscsiadm: no records found!\n> \n> It's not until I send a discovery to the target can I list any records,\n> which (I assume) is the first step toward a successful volume attachment\n> in nova.\n> \n> root@test-03:~# iscsiadm -m discovery -t sendtargets -p 192.168.20.4:3260\n> 192.168.20.4:3260,1 iqn.2010-10.org.openstack:volume-00000001\n> root@test-03:~# iscsiadm -m node -T iqn.2010-10.org.openstack:volume-00000001 -p 192.168.20.4:3260\n> # BEGIN RECORD 2.0-871\n> node.name = iqn.2010-10.org.openstack:volume-00000001\n> node.tpgt = 1\n> node.startup = manual\n> iface.hwaddress = <empty>\n> iface.ipaddress = <empty>\n> iface.iscsi_ifacename = default\n> iface.net_ifacename = <empty>\n> iface.transport_name = tcp\n> iface.initiatorname = <empty>\n> node.discovery_address = 192.168.20.4\n> node.discovery_port = 3260\n> node.discovery_type = send_targets\n> node.session.initial_cmdsn = 0\n> node.session.initial_login_retry_max = 8\n> node.session.xmit_thread_priority = -20\n> node.session.cmds_max = 128\n> node.session.queue_depth = 32\n> node.session.auth.authmethod = None\n> node.session.auth.username = <empty>\n> node.session.auth.password = <empty>\n> node.session.auth.username_in = <empty>\n> node.session.auth.password_in = <empty>\n> node.session.timeo.replacement_timeout = 120\n> node.session.err_timeo.abort_timeout = 15\n> node.session.err_timeo.lu_reset_timeout = 20\n> node.session.err_timeo.host_reset_timeout = 60\n> node.session.iscsi.FastAbort = Yes\n> node.session.iscsi.InitialR2T = No\n> node.session.iscsi.ImmediateData = Yes\n> node.session.iscsi.FirstBurstLength = 262144\n> node.session.iscsi.MaxBurstLength = 16776192\n> node.session.iscsi.DefaultTime2Retain = 0\n> node.session.iscsi.DefaultTime2Wait = 2\n> node.session.iscsi.MaxConnections = 1\n> node.session.iscsi.MaxOutstandingR2T = 1\n> node.session.iscsi.ERL = 0\n> node.conn[0].address = 192.168.20.4\n> node.conn[0].port = 3260\n> node.conn[0].startup = manual\n> node.conn[0].tcp.window_size = 524288\n> node.conn[0].tcp.type_of_service = 0\n> node.conn[0].timeo.logout_timeout = 15\n> node.conn[0].timeo.login_timeout = 15\n> node.conn[0].timeo.auth_timeout = 45\n> node.conn[0].timeo.noop_out_interval = 5\n> node.conn[0].timeo.noop_out_timeout = 5\n> node.conn[0].iscsi.MaxRecvDataSegmentLength = 262144\n> node.conn[0].iscsi.HeaderDigest = None\n> node.conn[0].iscsi.DataDigest = None\n> node.conn[0].iscsi.IFMarker = No\n> node.conn[0].iscsi.OFMarker = No\n> # END RECORD\n> root@test-03:~# \n> \n> I have found code in nova to do this kind of discovery, but it appears\n> deprecated in favor of passing the target location directly through\n> nova's messaging layer.  I'm wondering if discovery should be attempted\n> as a fall-back if the initiator fails to find records directly.\n> \n> ** Affects: nova\n>     Importance: Undecided\n>         Status: New\n> \n> -- \n> You received this bug notification because you are subscribed to\n> OpenStack Compute (nova).\n> https://bugs.launchpad.net/bugs/922232\n> \n> Title:\n>  Volumes fail to attach without discovery using tgt\n> \n> Status in OpenStack Compute (Nova):\n>  New\n> \n> Bug description:\n>  I'm not sure if this is a general bug or specific to the tgt iscsi\n>  helper (will compare with ietd soon)\n> \n>  Attaching a volume to an instance results in the following errors in\n>  nova-compute.log on a libvirt compute node:\n>  http://paste.ubuntu.com/817916/\n> \n>  Manually walking thru the initiator commands on the compute node ends\n>  in the same results, mainly:\n> \n>  # iscsiadm -m node -T iqn.2010-10.org.openstack:volume-00000001 -p 192.168.20.4:3260\n>  iscsiadm: no records found!\n> \n>  It's not until I send a discovery to the target can I list any\n>  records, which (I assume) is the first step toward a successful volume\n>  attachment in nova.\n> \n>  root@test-03:~# iscsiadm -m discovery -t sendtargets -p 192.168.20.4:3260\n>  192.168.20.4:3260,1 iqn.2010-10.org.openstack:volume-00000001\n>  root@test-03:~# iscsiadm -m node -T iqn.2010-10.org.openstack:volume-00000001 -p 192.168.20.4:3260\n>  # BEGIN RECORD 2.0-871\n>  node.name = iqn.2010-10.org.openstack:volume-00000001\n>  node.tpgt = 1\n>  node.startup = manual\n>  iface.hwaddress = <empty>\n>  iface.ipaddress = <empty>\n>  iface.iscsi_ifacename = default\n>  iface.net_ifacename = <empty>\n>  iface.transport_name = tcp\n>  iface.initiatorname = <empty>\n>  node.discovery_address = 192.168.20.4\n>  node.discovery_port = 3260\n>  node.discovery_type = send_targets\n>  node.session.initial_cmdsn = 0\n>  node.session.initial_login_retry_max = 8\n>  node.session.xmit_thread_priority = -20\n>  node.session.cmds_max = 128\n>  node.session.queue_depth = 32\n>  node.session.auth.authmethod = None\n>  node.session.auth.username = <empty>\n>  node.session.auth.password = <empty>\n>  node.session.auth.username_in = <empty>\n>  node.session.auth.password_in = <empty>\n>  node.session.timeo.replacement_timeout = 120\n>  node.session.err_timeo.abort_timeout = 15\n>  node.session.err_timeo.lu_reset_timeout = 20\n>  node.session.err_timeo.host_reset_timeout = 60\n>  node.session.iscsi.FastAbort = Yes\n>  node.session.iscsi.InitialR2T = No\n>  node.session.iscsi.ImmediateData = Yes\n>  node.session.iscsi.FirstBurstLength = 262144\n>  node.session.iscsi.MaxBurstLength = 16776192\n>  node.session.iscsi.DefaultTime2Retain = 0\n>  node.session.iscsi.DefaultTime2Wait = 2\n>  node.session.iscsi.MaxConnections = 1\n>  node.session.iscsi.MaxOutstandingR2T = 1\n>  node.session.iscsi.ERL = 0\n>  node.conn[0].address = 192.168.20.4\n>  node.conn[0].port = 3260\n>  node.conn[0].startup = manual\n>  node.conn[0].tcp.window_size = 524288\n>  node.conn[0].tcp.type_of_service = 0\n>  node.conn[0].timeo.logout_timeout = 15\n>  node.conn[0].timeo.login_timeout = 15\n>  node.conn[0].timeo.auth_timeout = 45\n>  node.conn[0].timeo.noop_out_interval = 5\n>  node.conn[0].timeo.noop_out_timeout = 5\n>  node.conn[0].iscsi.MaxRecvDataSegmentLength = 262144\n>  node.conn[0].iscsi.HeaderDigest = None\n>  node.conn[0].iscsi.DataDigest = None\n>  node.conn[0].iscsi.IFMarker = No\n>  node.conn[0].iscsi.OFMarker = No\n>  # END RECORD\n>  root@test-03:~# \n> \n>  I have found code in nova to do this kind of discovery, but it appears\n>  deprecated in favor of passing the target location directly through\n>  nova's messaging layer.  I'm wondering if discovery should be\n>  attempted as a fall-back if the initiator fails to find records\n>  directly.\n> \n> To manage notifications about this bug go to:\n> https://bugs.launchpad.net/nova/+bug/922232/+subscriptions\n\n", 
            "date_created": "2012-01-26 18:36:15+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "Vish-\n\nI think this is the problem, from the libvirt volume driver:\n\n        iscsi_properties = connection_info['data']\n        try:\n            # NOTE(vish): if we are on the same host as nova volume, the\n            #             discovery makes the target so we don't need to\n            #             run --op new\n            self._run_iscsiadm(iscsi_properties, ())\n        except exception.ProcessExecutionError:\n            self._run_iscsiadm(iscsi_properties, ('--op', 'new'))\n\n\nUnfortuantely, iscsiadm returns 0 if no records are found and an exception is never raised.  Deploying a multi-node setup right now test fix..\n", 
            "date_created": "2012-01-26 18:48:32.323111+00:00", 
            "author": "https://api.launchpad.net/1.0/~gandelman-a"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/3479", 
            "date_created": "2012-01-26 20:38:15.402798+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/3479\nCommitted: http://github.com/openstack/nova/commit/ea2c8c8b363dceb3c73be8f02f078d7b78b2c712\nSubmitter: Jenkins\nBranch:    master\n\ncommit ea2c8c8b363dceb3c73be8f02f078d7b78b2c712\nAuthor: Adam Gandelman <email address hidden>\nDate:   Thu Jan 26 12:36:55 2012 -0800\n\n    Fix multinode libvirt volume attachment lp #922232\n    \n    iscsiadm returns 0 if local db contains no target records.  As a result,\n    no exception is caught and no entry gets created (--op new) before continuing\n    to login.  Devstack/single-node users avoided this because, apparently, records\n    are created in initiator db on target creations.\n    \n    Update: Address smokestack failures if err == None\n    \n    fixes bug #922232\n    \n    Change-Id: I39c3574b8d75ca32eba3716efc3b488e596fbaf6\n", 
            "date_created": "2012-02-01 22:45:41.098058+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Hi! I have problem with this fix. I Use devstack on ubuntu 11.10. I need manually discover targets\n\n(nova.rpc): TRACE: Traceback (most recent call last):\n(nova.rpc): TRACE:   File \"/opt/stack/nova/nova/rpc/amqp.py\", line 249, in _process_data\n(nova.rpc): TRACE:     rval = node_func(context=ctxt, **node_args)\n(nova.rpc): TRACE:   File \"/opt/stack/nova/nova/exception.py\", line 126, in wrapped\n(nova.rpc): TRACE:     return f(*args, **kw)\n(nova.rpc): TRACE:   File \"/opt/stack/nova/nova/compute/manager.py\", line 150, in decorated_function\n(nova.rpc): TRACE:     function(self, context, instance_uuid, *args, **kwargs)\n(nova.rpc): TRACE:   File \"/opt/stack/nova/nova/compute/manager.py\", line 173, in decorated_function\n(nova.rpc): TRACE:     self.add_instance_fault_from_exc(context, instance_uuid, e)\n(nova.rpc): TRACE:   File \"/usr/lib/python2.7/contextlib.py\", line 24, in __exit__\n(nova.rpc): TRACE:     self.gen.next()\n(nova.rpc): TRACE:   File \"/opt/stack/nova/nova/compute/manager.py\", line 168, in decorated_function\n(nova.rpc): TRACE:     return function(self, context, instance_uuid, *args, **kwargs)\n(nova.rpc): TRACE:   File \"/opt/stack/nova/nova/compute/manager.py\", line 1635, in attach_volume\n(nova.rpc): TRACE:     connector)\n(nova.rpc): TRACE:   File \"/usr/lib/python2.7/contextlib.py\", line 24, in __exit__\n(nova.rpc): TRACE:     self.gen.next()\n(nova.rpc): TRACE:   File \"/opt/stack/nova/nova/compute/manager.py\", line 1627, in attach_volume\n(nova.rpc): TRACE:     mountpoint)\n(nova.rpc): TRACE:   File \"/opt/stack/nova/nova/exception.py\", line 126, in wrapped\n(nova.rpc): TRACE:     return f(*args, **kw)\n(nova.rpc): TRACE:   File \"/opt/stack/nova/nova/virt/libvirt/connection.py\", line 454, in attach_volume\n(nova.rpc): TRACE:     mount_device)\n(nova.rpc): TRACE:   File \"/opt/stack/nova/nova/virt/libvirt/connection.py\", line 446, in volume_driver_method\n(nova.rpc): TRACE:     return method(connection_info, *args, **kwargs)\n(nova.rpc): TRACE:   File \"/opt/stack/nova/nova/virt/libvirt/volume.py\", line 112, in connect_volume\n(nova.rpc): TRACE:     (out, err) = self._run_iscsiadm(iscsi_properties, ())\n(nova.rpc): TRACE:   File \"/opt/stack/nova/nova/virt/libvirt/volume.py\", line 96, in _run_iscsiadm\n(nova.rpc): TRACE:     check_exit_code=check_exit_code)\n(nova.rpc): TRACE:   File \"/opt/stack/nova/nova/utils.py\", line 232, in execute\n(nova.rpc): TRACE:     cmd=' '.join(cmd))\n(nova.rpc): TRACE: ProcessExecutionError: Unexpected error while running command.\n(nova.rpc): TRACE: Command: sudo iscsiadm -m node -T iqn.2010-10.org.openstack:volume-00000009 -p 10.100.0.34:3260\n(nova.rpc): TRACE: Exit code: 255\n(nova.rpc): TRACE: Stdout: ''\n(nova.rpc): TRACE: Stderr: 'iscsiadm: no records found!\\n'\n(nova.rpc): TRACE:\n", 
            "date_created": "2012-02-07 14:07:19.174242+00:00", 
            "author": "https://api.launchpad.net/1.0/~rsokolkov"
        }, 
        {
            "content": "hmm, looks like that fix wasn't quite right.  Let me try another one.", 
            "date_created": "2012-02-07 19:18:07.029493+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/3865", 
            "date_created": "2012-02-07 19:25:35.595811+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Roman: can you see if the above fix works for you?", 
            "date_created": "2012-02-07 19:26:11.315504+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/3865\nCommitted: http://github.com/openstack/nova/commit/a933e3628ba8cc2fb985665a724799ee0a58aa16\nSubmitter: Jenkins\nBranch:    master\n\ncommit a933e3628ba8cc2fb985665a724799ee0a58aa16\nAuthor: Vishvananda Ishaya <email address hidden>\nDate:   Tue Feb 7 11:23:59 2012 -0800\n\n    Check return code instead of output for iscsiadm\n    \n     * iscsiadm returns 255 on no records\n     * Refixes bug 922232\n    \n    Change-Id: If177c3c79c6ad974c2bed0ad72a62e956af451e0\n", 
            "date_created": "2012-02-08 19:04:36.206936+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "I have the same problem. The fix its ok?\n\nIn version Essex (Ubuntu 12.04), i create a new node compute (multinode), and add the volume to a instance.\n\nI have the error in the node compute (/var/log/nova/nova-compute.log):\n\nStderr: 'iscsiadm: No portal found.\\n', and manually:\n\n# iscsiadm -m node -T iqn.2010-10.org.openstack:volume-00000007 -p 192.168.56.2:3260 --rescan\niscsiadm: No portal found.\n\nBut if i make a discovery...\n\nroot@cloud02:~# iscsiadm -m discovery -t st -p 192.168.56.2 192.168.156.66:3260,1 iqn.2010-10.org.openstack:volume-00000007\n192.168.56.2:3260,1 iqn.2010-10.org.openstack:volume-00000006\n10.1.0.4:3260,1 iqn.2010-10.org.openstack:volume-00000006\n10.0.2.15:3260,1 iqn.2010-10.org.openstack:volume-00000006\n192.168.122.1:3260,1 iqn.2010-10.org.openstack:volume-00000006\n169.254.169.254:3260,1 iqn.2010-10.org.openstack:volume-00000006\n192.168.56.2:3260,1 iqn.2010-10.org.openstack:volume-00000007\n10.1.0.4:3260,1 iqn.2010-10.org.openstack:volume-00000007\n10.0.2.15:3260,1 iqn.2010-10.org.openstack:volume-00000007\n192.168.122.1:3260,1 iqn.2010-10.org.openstack:volume-00000007\n169.254.169.254:3260,1 iqn.2010-10.org.openstack:volume-00000007\n\nand then a login:\n\nroot@cloud02:~# iscsiadm -m node -T iqn.2010-10.org.openstack:volume-00000007 -p 192.168.56.2:3260 --login\nLogging in to [iface: default, target: iqn.2010-10.org.openstack:volume-00000007, portal: 192.168.56.2,3260]\nLogin to [iface: default, target: iqn.2010-10.org.openstack:volume-00000007, portal: 192.168.56.2,3260]: successful\n\nand rescan:\n\nroot@cloud02:~# iscsiadm -m node -T iqn.2010-10.org.openstack:volume-00000007 -p 192.168.56.2:3260 --rescan\nRescanning session [sid: 1, target: iqn.2010-10.org.openstack:volume-00000007, portal: 192.168.56.2,3260]\n\nand now the instance attached volume!\n\nit seems that the activation of a new node login is not automatic?\n\n\n\n\n", 
            "date_created": "2012-06-09 04:04:11.820425+00:00", 
            "author": "https://api.launchpad.net/1.0/~mdieder"
        }, 
        {
            "content": "Do you have iscsi_ip_address set on the volume host? It needs to be an ip that the compute hosts can hit. When the volume is created this ip is stored for connection information in the database, so if you don't have it set, you will probably need to set it, restart nova-volume and recreate volumes before attaching.", 
            "date_created": "2012-06-10 20:52:54.894676+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }
    ]
}