{
    "status": "Expired", 
    "last_updated": "2016-07-05 09:52:47.130676+00:00", 
    "description": "class SimpleDH(object):\n    \"\"\"This class wraps all the functionality needed to implement\n    basic Diffie-Hellman-Merkle key exchange in Python. It features\n    intelligent defaults for the prime and base numbers needed for the\n    calculation, while allowing you to supply your own. It requires that\n    the openssl binary be installed on the system on which this is run,\n    as it uses that to handle the encryption and decryption. If openssl\n    is not available, a RuntimeError will be raised.\n    \"\"\"\n    def __init__(self):\n        self._prime = 162259276829213363391578010288127\n        self._base = 5\n        self._public = None\n        self._shared = None\n        self.generate_private()\n\n    def generate_private(self):\n        self._private = int(binascii.hexlify(os.urandom(10)), 16)\n        return self._private\n\n    def get_public(self):\n        self._public = pow(self._base, self._private, self._prime)\n        return self._public\n\n    def compute_shared(self, other):\n        self._shared = pow(other, self._private, self._prime)\n        return self._shared\n\n    def _run_ssl(self, text, decrypt=False):\n        cmd = ['openssl', 'aes-128-cbc', '-A', '-a', '-pass',\n               'pass:%s' % self._shared, '-nosalt']\n        if decrypt:\n            cmd.append('-d')\n        out, err = utils.execute(*cmd, process_input=text)\n        if err:\n            raise RuntimeError(_('OpenSSL error: %s') % err)\n        return out\n\n    def encrypt(self, text):\n        return self._run_ssl(text).strip('\\n')\n\n    def decrypt(self, text):\n        return self._run_ssl(text, decrypt=True)\n\n        \ufeff\nNova use the SimpleDH to call the xen agent to set the root password of the instance.\n \nIn NIST,  the DH algorithm need |p| = 2048 bit, and |q| = 224 or 256 bits\nIn the SimpleDH, |q| = int(binascii.hexlify(os.urandom(10)), 16)\nIt was only 24*4 = 96bit\np = 162259276829213363391578010288127 is far less than 2048 bit\nSo the SimpleDH is not fit the NIST", 
    "tags": [
        "security"
    ], 
    "importance": "Undecided", 
    "heat": 18, 
    "link": "https://bugs.launchpad.net/nova/+bug/1368073", 
    "owner": "None", 
    "id": 1368073, 
    "index": 5149, 
    "created": "2014-09-11 07:50:20.281716+00:00", 
    "title": "[Security-NIST]SimpleDH in nova/virt/xenapi/agent.py does not fit the NIST", 
    "comments": [
        {
            "content": "class SimpleDH(object):\n    \"\"\"This class wraps all the functionality needed to implement\n    basic Diffie-Hellman-Merkle key exchange in Python. It features\n    intelligent defaults for the prime and base numbers needed for the\n    calculation, while allowing you to supply your own. It requires that\n    the openssl binary be installed on the system on which this is run,\n    as it uses that to handle the encryption and decryption. If openssl\n    is not available, a RuntimeError will be raised.\n    \"\"\"\n    def __init__(self):\n        self._prime = 162259276829213363391578010288127\n        self._base = 5\n        self._public = None\n        self._shared = None\n        self.generate_private()\n\n    def generate_private(self):\n        self._private = int(binascii.hexlify(os.urandom(10)), 16)\n        return self._private\n\n    def get_public(self):\n        self._public = pow(self._base, self._private, self._prime)\n        return self._public\n\n    def compute_shared(self, other):\n        self._shared = pow(other, self._private, self._prime)\n        return self._shared\n\n    def _run_ssl(self, text, decrypt=False):\n        cmd = ['openssl', 'aes-128-cbc', '-A', '-a', '-pass',\n               'pass:%s' % self._shared, '-nosalt']\n        if decrypt:\n            cmd.append('-d')\n        out, err = utils.execute(*cmd, process_input=text)\n        if err:\n            raise RuntimeError(_('OpenSSL error: %s') % err)\n        return out\n\n    def encrypt(self, text):\n        return self._run_ssl(text).strip('\\n')\n\n    def decrypt(self, text):\n        return self._run_ssl(text, decrypt=True)\n\n        \ufeff\nNova use the SimpleDH to call the xen agent to set the root password of the instance.\n \nIn NIST,  the DH algorithm need |p| = 2048 bit, and |q| = 224 or 256 bits\nIn the SimpleDH, |q| = int(binascii.hexlify(os.urandom(10)), 16)\nIt was only 24*4 = 96bit\np = 162259276829213363391578010288127 is far less than 2048 bit\nSo the SimpleDH is not fit the NIST", 
            "date_created": "2014-09-11 07:50:20.281716+00:00", 
            "author": "https://api.launchpad.net/1.0/~zhangyun"
        }, 
        {
            "content": "This feels like an interesting security strengthening, but I'm not sure there currently is an exploitable vulnerability here, so no need for a security advisory ?", 
            "date_created": "2014-09-11 12:26:31.025936+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "Please only open 1 bug for this class of issue, it doesn't really help to bug bomb when any possible fix is going to be unified.", 
            "date_created": "2014-09-11 14:57:38.993273+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "I propose the VMT treat this as a hardening fix unless you can provide evidence of an exploitable vulnerability here. We will switch it on Thursday if nobody complains before then.", 
            "date_created": "2014-09-15 14:36:05.116990+00:00", 
            "author": "https://api.launchpad.net/1.0/~fungi"
        }, 
        {
            "content": "\nThis is an automated cleanup. This bug report has been closed because it\nis older than 18 months and there is no open code change to fix this.\nAfter this time it is unlikely that the circumstances which lead to\nthe observed issue can be reproduced.\n\nIf you can reproduce the bug, please:\n* reopen the bug report (set to status \"New\")\n* AND add the detailed steps to reproduce the issue (if applicable)\n* AND leave a comment \"CONFIRMED FOR: <RELEASE_NAME>\"\n  Only still supported release names are valid (LIBERTY, MITAKA, OCATA, NEWTON).\n  Valid example: CONFIRMED FOR: LIBERTY\n", 
            "date_created": "2016-07-05 09:52:46.556216+00:00", 
            "author": "https://api.launchpad.net/1.0/~mzoeller"
        }
    ]
}