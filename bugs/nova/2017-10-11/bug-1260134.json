{
    "status": "Opinion", 
    "last_updated": "2013-12-24 20:49:48.706238+00:00", 
    "description": "This is a minor bug but it will produce a very confusing error message if the test ever fails. Examples include but are not limited to nova.tests.api.openstack.compute.test_servers.", 
    "tags": [
        "low-hanging-fruit"
    ], 
    "importance": "Wishlist", 
    "heat": 10, 
    "link": "https://bugs.launchpad.net/nova/+bug/1260134", 
    "owner": "https://api.launchpad.net/1.0/~mfisch", 
    "id": 1260134, 
    "index": 1458, 
    "created": "2013-12-12 00:55:18.235657+00:00", 
    "title": "in tests, many tests pass arguments to assertEqual backwards as (observed,expected) instead of (expected, observed)", 
    "comments": [
        {
            "content": "This is a minor bug but it will produce a very confusing error message if the test ever fails. Examples include but are not limited to nova.tests.api.openstack.compute.test_servers.", 
            "date_created": "2013-12-12 00:55:18.235657+00:00", 
            "author": "https://api.launchpad.net/1.0/~clint-fewbar"
        }, 
        {
            "content": "I have noticed this too, unfortunately I don't know any easy way to detect these cases so the fix  sounds pretty human intensive. And even worse I am not sure how to automatically enforce this in review. ", 
            "date_created": "2013-12-12 11:38:14.663130+00:00", 
            "author": "https://api.launchpad.net/1.0/~jogo"
        }, 
        {
            "content": "I'll take a look at this one.", 
            "date_created": "2013-12-12 19:13:59.588227+00:00", 
            "author": "https://api.launchpad.net/1.0/~mfisch"
        }, 
        {
            "content": "Excerpts from Joe Gordon's message of 2013-12-12 11:38:14 UTC:\n> I have noticed this too, unfortunately I don't know any easy way to\n> detect these cases so the fix  sounds pretty human intensive. And even\n> worse I am not sure how to automatically enforce this in review.\n> \n\nRight, it is not easy. We do need to raise awareness though, as reviewers\nshould stop approving if they see it. It also doesn't have to be corrected\nall in one commit. Going file by file may make more sense.\n\nOne automated thing that we can do is to enforce that literals must\nbe the first argument. Also None as the first argument should be\nassertIsNone. That won't help with a complex \"expected\", but it will at\nleast stop the easy cases.\n", 
            "date_created": "2013-12-12 19:39:48+00:00", 
            "author": "https://api.launchpad.net/1.0/~clint-fewbar"
        }, 
        {
            "content": "After some poking around the issue seems fairly extensive. I'd like to start on a few at least as I ramp up on the openstack dev process. Not sure whether fixing all these in one batch is feasible.", 
            "date_created": "2013-12-12 23:03:20.011047+00:00", 
            "author": "https://api.launchpad.net/1.0/~mfisch"
        }, 
        {
            "content": "Excerpts from Matt Fischer's message of 2013-12-12 23:03:20 UTC:\n> After some poking around the issue seems fairly extensive. I'd like to\n> start on a few at least as I ramp up on the openstack dev process. Not\n> sure whether fixing all these in one batch is feasible.\n> \n\nI think doing one test file at a time is a good start. You can mark them\nwith Partial-Bug: #1260134 and they'll all get linked back here.\n", 
            "date_created": "2013-12-12 23:27:19+00:00", 
            "author": "https://api.launchpad.net/1.0/~clint-fewbar"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/62102", 
            "date_created": "2013-12-13 23:07:33.890402+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/62102\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=8f25d2fd6cd79f12e0e5432f74cc2310c16dd47e\nSubmitter: Jenkins\nBranch:    master\n\ncommit 8f25d2fd6cd79f12e0e5432f74cc2310c16dd47e\nAuthor: Matt Fischer <email address hidden>\nDate:   Fri Dec 13 15:16:51 2013 -0700\n\n    barematal: Cleanup the calls to assertEqual\n    \n    Switch the ordering of assertEqual calls to match the correct\n    (expected, observed) ordering. This makes test failures easier to read.\n    \n    Change-Id: Iecad55e33be4ab8f7ddff3b4cdbe08aa6c1b8660\n    Partial-Bug: #1260134\n", 
            "date_created": "2013-12-18 04:21:43.128629+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "I don't think a cleanup like this is worth it at all.\n\npython unittest doesn't align with testtools here. unittest assertEqual has no ordering, but testtools does.\n\nhttp://docs.python.org/2/library/unittest.html#unittest.TestCase.assertEqual\nhttps://github.com/testing-cabal/testtools/blob/master/testtools/testcase.py#L313\n\nFurthermore unittests order is 'actual, expected' and testrools is 'expected, observed'. I assume 'actual'=='observed'.\n\nhttp://docs.python.org/2/library/unittest.html#unittest.TestCase.assertItemsEqual\n\nSo with testtools contradicting unittests ordering,  and the inability to automatically enforce this.  I think we we should just live with this inconsistency. ", 
            "date_created": "2013-12-24 16:37:27.690942+00:00", 
            "author": "https://api.launchpad.net/1.0/~jogo"
        }, 
        {
            "content": "I am setting this to invalid, but am welcome to discuss this further and be proven wrong. Also blocking any patches on this bug until we sort out of this is something to fix or not.\n\nhttps://review.openstack.org/#/c/63911/", 
            "date_created": "2013-12-24 16:39:41.637980+00:00", 
            "author": "https://api.launchpad.net/1.0/~jogo"
        }, 
        {
            "content": "Excerpts from Joe Gordon's message of 2013-12-24 16:37:27 UTC:\n> I don't think a cleanup like this is worth it at all.\n> \n> python unittest doesn't align with testtools here. unittest assertEqual\n> has no ordering, but testtools does.\n> \n> http://docs.python.org/2/library/unittest.html#unittest.TestCase.assertEqual\n> https://github.com/testing-cabal/testtools/blob/master/testtools/testcase.py#L313\n> \n> Furthermore unittests order is 'actual, expected' and testrools is\n> 'expected, observed'. I assume 'actual'=='observed'.\n> \n> http://docs.python.org/2/library/unittest.html#unittest.TestCase.assertItemsEqual\n> \n> So with testtools contradicting unittests ordering,  and the inability\n> to automatically enforce this.  I think we we should just live with this\n> inconsistency.\n> \n\nUGGGHHH <shakes fist at testtools for not being more careful>\n\nNonetheless, We don't use unittest, we use testtools. So there is a\nblocking bug which is that we should abolish direct usage of unittest.\n\nAlso I don't think \"we can't enforce this automatically\" is enough of\nan argument to not fix a problem which affects the errors spit out by\nthe unit test infrastructure when things break.\n", 
            "date_created": "2013-12-24 16:58:48+00:00", 
            "author": "https://api.launchpad.net/1.0/~clint-fewbar"
        }, 
        {
            "content": "As Clint pointed out on IRC, testtools outputs outputs actual and expected when a unit test fails, which is confusing to no end.\n\nI see this in the same boat as mox vs mock, we want to fix it -- but don't want to cause more churn just for this.  New tests should do it right, and if re factoring old tests, we should fix this. But I don't think fixing this by itself.", 
            "date_created": "2013-12-24 17:19:11.430817+00:00", 
            "author": "https://api.launchpad.net/1.0/~jogo"
        }, 
        {
            "content": "While debugging a review of another patch I was confused by the test's behaviour which I eventually realised was simply a case of swapped actual/expected.  I raised it in the review but we thought it was out of scope for that particular patch.\n\nLike mfisch above I was using this as an easy patch to submit while getting used to the Nova dev process, and I completely understand its low importance. But, this is an error in the Nova codebase - the error messages given by failing tests are incorrect.  I don't have the experience with OpenStack to know what the negative conseqences of this kind of churn are.\n\nAnyway, if this bug is not valid then please -1 my patch :) Especially if there's precedent in mox/mock for low-impact test framework usage bugs like this.", 
            "date_created": "2013-12-24 20:49:46.865293+00:00", 
            "author": "https://api.launchpad.net/1.0/~matthew-gilliard-u"
        }
    ]
}