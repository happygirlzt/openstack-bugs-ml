{
    "status": "Fix Released", 
    "last_updated": "2013-10-11 08:12:39.858350+00:00", 
    "description": "From http://logs.openstack.org/periodic/periodic-tempest-devstack-vm-check-hourly/404/logs/screen-n-cond.txt\nThere are lots of these.\n\n2012-11-29 19:17:30 29815 DEBUG nova.manager [-] Running periodic task ConductorManager.publish_service_capabilities periodic_tasks /opt/stack/nova/nova/manager.py:172\n2012-11-29 19:17:34 29815 DEBUG nova.openstack.common.rpc.amqp [-] received {u'_context_roles': [], u'_msg_id': u'971480bb48574994aebce24c9d2c4e68', u'_context_quota_class': None, u'_context_request_id': u'req-5acd8b17-cd50-4e52-9877-be572eda2c3b', u'_context_service_catalog': None, u'_context_user_name': None, u'_context_auth_token': '<SANITIZED>', u'args': {u'instance_uuid': u'cec91bce-bfb5-4544-9bd6-1d43aff47b19'}, u'_context_instance_lock_checked': False, u'_context_project_name': None, u'_context_is_admin': True, u'version': u'1.2', u'_context_project_id': None, u'_context_timestamp': u'2012-11-29T19:17:27.770893', u'_context_read_deleted': u'no', u'_context_user_id': None, u'method': u'instance_get_by_uuid', u'_context_remote_address': None} _safe_log /opt/stack/nova/nova/openstack/common/rpc/common.py:195\n2012-11-29 19:17:34 29815 DEBUG nova.openstack.common.rpc.amqp [-] unpacked context: {'project_name': None, 'user_id': None, 'roles': [], 'timestamp': u'2012-11-29T19:17:27.770893', 'auth_token': '<SANITIZED>', 'remote_address': None, 'quota_class': None, 'is_admin': True, 'service_catalog': None, 'request_id': u'req-5acd8b17-cd50-4e52-9877-be572eda2c3b', 'instance_lock_checked': False, 'project_id': None, 'user_name': None, 'read_deleted': u'no'} _safe_log /opt/stack/nova/nova/openstack/common/rpc/common.py:195\n2012-11-29 19:17:34 29815 ERROR nova.openstack.common.rpc.amqp [-] Exception during message handling\n2012-11-29 19:17:34 29815 TRACE nova.openstack.common.rpc.amqp Traceback (most recent call last):\n2012-11-29 19:17:34 29815 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/nova/nova/openstack/common/rpc/amqp.py\", line 276, in _process_data\n2012-11-29 19:17:34 29815 TRACE nova.openstack.common.rpc.amqp     rval = self.proxy.dispatch(ctxt, version, method, **args)\n2012-11-29 19:17:34 29815 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/nova/nova/openstack/common/rpc/dispatcher.py\", line 145, in dispatch\n2012-11-29 19:17:34 29815 TRACE nova.openstack.common.rpc.amqp     return getattr(proxyobj, method)(ctxt, **kwargs)\n2012-11-29 19:17:34 29815 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/nova/nova/conductor/manager.py\", line 66, in instance_get_by_uuid\n2012-11-29 19:17:34 29815 TRACE nova.openstack.common.rpc.amqp     self.db.instance_get_by_uuid(context, instance_uuid))\n2012-11-29 19:17:34 29815 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/nova/nova/db/api.py\", line 570, in instance_get_by_uuid\n2012-11-29 19:17:34 29815 TRACE nova.openstack.common.rpc.amqp     return IMPL.instance_get_by_uuid(context, uuid)\n2012-11-29 19:17:34 29815 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/nova/nova/db/sqlalchemy/api.py\", line 127, in wrapper\n2012-11-29 19:17:34 29815 TRACE nova.openstack.common.rpc.amqp     return f(*args, **kwargs)\n2012-11-29 19:17:34 29815 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/nova/nova/db/sqlalchemy/api.py\", line 1493, in instance_get_by_uuid\n2012-11-29 19:17:34 29815 TRACE nova.openstack.common.rpc.amqp     raise exception.InstanceNotFound(instance_id=uuid)\n2012-11-29 19:17:34 29815 TRACE nova.openstack.common.rpc.amqp InstanceNotFound: Instance cec91bce-bfb5-4544-9bd6-1d43aff47b19 could not be found.\n2012-11-29 19:17:34 29815 TRACE nova.openstack.common.rpc.amqp", 
    "tags": [
        "conductor"
    ], 
    "importance": "High", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1084706", 
    "owner": "https://api.launchpad.net/1.0/~danms", 
    "id": 1084706, 
    "index": 891, 
    "created": "2012-11-29 20:09:48.066846+00:00", 
    "title": "ERROR stacktraces in n-cond log after good tempest run", 
    "comments": [
        {
            "content": "From http://logs.openstack.org/periodic/periodic-tempest-devstack-vm-check-hourly/404/logs/screen-n-cond.txt\nThere are lots of these.\n\n2012-11-29 19:17:30 29815 DEBUG nova.manager [-] Running periodic task ConductorManager.publish_service_capabilities periodic_tasks /opt/stack/nova/nova/manager.py:172\n2012-11-29 19:17:34 29815 DEBUG nova.openstack.common.rpc.amqp [-] received {u'_context_roles': [], u'_msg_id': u'971480bb48574994aebce24c9d2c4e68', u'_context_quota_class': None, u'_context_request_id': u'req-5acd8b17-cd50-4e52-9877-be572eda2c3b', u'_context_service_catalog': None, u'_context_user_name': None, u'_context_auth_token': '<SANITIZED>', u'args': {u'instance_uuid': u'cec91bce-bfb5-4544-9bd6-1d43aff47b19'}, u'_context_instance_lock_checked': False, u'_context_project_name': None, u'_context_is_admin': True, u'version': u'1.2', u'_context_project_id': None, u'_context_timestamp': u'2012-11-29T19:17:27.770893', u'_context_read_deleted': u'no', u'_context_user_id': None, u'method': u'instance_get_by_uuid', u'_context_remote_address': None} _safe_log /opt/stack/nova/nova/openstack/common/rpc/common.py:195\n2012-11-29 19:17:34 29815 DEBUG nova.openstack.common.rpc.amqp [-] unpacked context: {'project_name': None, 'user_id': None, 'roles': [], 'timestamp': u'2012-11-29T19:17:27.770893', 'auth_token': '<SANITIZED>', 'remote_address': None, 'quota_class': None, 'is_admin': True, 'service_catalog': None, 'request_id': u'req-5acd8b17-cd50-4e52-9877-be572eda2c3b', 'instance_lock_checked': False, 'project_id': None, 'user_name': None, 'read_deleted': u'no'} _safe_log /opt/stack/nova/nova/openstack/common/rpc/common.py:195\n2012-11-29 19:17:34 29815 ERROR nova.openstack.common.rpc.amqp [-] Exception during message handling\n2012-11-29 19:17:34 29815 TRACE nova.openstack.common.rpc.amqp Traceback (most recent call last):\n2012-11-29 19:17:34 29815 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/nova/nova/openstack/common/rpc/amqp.py\", line 276, in _process_data\n2012-11-29 19:17:34 29815 TRACE nova.openstack.common.rpc.amqp     rval = self.proxy.dispatch(ctxt, version, method, **args)\n2012-11-29 19:17:34 29815 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/nova/nova/openstack/common/rpc/dispatcher.py\", line 145, in dispatch\n2012-11-29 19:17:34 29815 TRACE nova.openstack.common.rpc.amqp     return getattr(proxyobj, method)(ctxt, **kwargs)\n2012-11-29 19:17:34 29815 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/nova/nova/conductor/manager.py\", line 66, in instance_get_by_uuid\n2012-11-29 19:17:34 29815 TRACE nova.openstack.common.rpc.amqp     self.db.instance_get_by_uuid(context, instance_uuid))\n2012-11-29 19:17:34 29815 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/nova/nova/db/api.py\", line 570, in instance_get_by_uuid\n2012-11-29 19:17:34 29815 TRACE nova.openstack.common.rpc.amqp     return IMPL.instance_get_by_uuid(context, uuid)\n2012-11-29 19:17:34 29815 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/nova/nova/db/sqlalchemy/api.py\", line 127, in wrapper\n2012-11-29 19:17:34 29815 TRACE nova.openstack.common.rpc.amqp     return f(*args, **kwargs)\n2012-11-29 19:17:34 29815 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/nova/nova/db/sqlalchemy/api.py\", line 1493, in instance_get_by_uuid\n2012-11-29 19:17:34 29815 TRACE nova.openstack.common.rpc.amqp     raise exception.InstanceNotFound(instance_id=uuid)\n2012-11-29 19:17:34 29815 TRACE nova.openstack.common.rpc.amqp InstanceNotFound: Instance cec91bce-bfb5-4544-9bd6-1d43aff47b19 could not be found.\n2012-11-29 19:17:34 29815 TRACE nova.openstack.common.rpc.amqp", 
            "date_created": "2012-11-29 20:09:48.066846+00:00", 
            "author": "https://api.launchpad.net/1.0/~david-kranz"
        }, 
        {
            "content": "It looks like what's happening here is that we are raising an exception, but it's not an ERROR.  We need a way to tell rpc not to log exceptions that are expected and we just want to pass back to the caller to handle (and maybe log over there if they want to).", 
            "date_created": "2012-11-29 20:49:13.272132+00:00", 
            "author": "https://api.launchpad.net/1.0/~russellb"
        }, 
        {
            "content": "Related: https://bugs.launchpad.net/nova/+bug/1084707", 
            "date_created": "2012-11-29 20:55:35.689895+00:00", 
            "author": "https://api.launchpad.net/1.0/~russellb"
        }, 
        {
            "content": "If we think the root cause is the same as bug #1084707, we can just mark this as a duplicate", 
            "date_created": "2012-12-06 12:16:12.143402+00:00", 
            "author": "https://api.launchpad.net/1.0/~markmc"
        }, 
        {
            "content": "My bad marking the bugs as duplicates - since we're going to approach this by silently passing individual exceptions, it does make sense for individual cases of this to be filed as separate bugs.", 
            "date_created": "2012-12-11 13:52:45.952514+00:00", 
            "author": "https://api.launchpad.net/1.0/~markmc"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/17415\nCommitted: http://github.com/openstack/nova/commit/405c67b1c0b8154dbaec8d6cc838bc32125ce634\nSubmitter: Jenkins\nBranch:    master\n\ncommit 405c67b1c0b8154dbaec8d6cc838bc32125ce634\nAuthor: Dan Smith <email address hidden>\nDate:   Mon Dec 3 12:37:57 2012 -0800\n\n    Allow conductor exceptions to pass over RPC silently\n    \n    When one service performs an operation on behalf of another, the\n    act of passing back an exception (even a known one) causes a lot\n    of scary log messages about the (presumed to be) error case.\n    \n    This patch applies the new client_exceptions decorator to methods\n    in the conductor manager to prevent excess logging for known\n    situations.\n    \n    Fixes bug 1084706\n    \n    Change-Id: I56e472b0f08d584f5bbe5181ca909f2c11352120\n", 
            "date_created": "2012-12-12 21:57:04.688651+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "The same issue is showing up in current jobs http://logs.openstack.org/87/44287/9/check/gate-tempest-devstack-vm-full/c3a07eb/logs/screen-n-cond.txt.gz", 
            "date_created": "2013-09-26 19:35:35.423634+00:00", 
            "author": "https://api.launchpad.net/1.0/~david-kranz"
        }, 
        {
            "content": "It's the same log file, but a new problem.  This should really be a new bug report ...", 
            "date_created": "2013-09-30 22:25:47.504754+00:00", 
            "author": "https://api.launchpad.net/1.0/~russellb"
        }, 
        {
            "content": "OK, I created https://bugs.launchpad.net/nova/+bug/1233789", 
            "date_created": "2013-10-01 18:20:36.716782+00:00", 
            "author": "https://api.launchpad.net/1.0/~david-kranz"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/49245\nCommitted: http://github.com/openstack/nova/commit/3a5e1faee04671f2e88b28d805b191b480054254\nSubmitter: Jenkins\nBranch:    master\n\ncommit 3a5e1faee04671f2e88b28d805b191b480054254\nAuthor: Dan Smith <email address hidden>\nDate:   Tue Oct 1 12:12:13 2013 -0700\n\n    Avoid spamming conductor logs with object exceptions\n    \n    Conductor's logs should include tracebacks only when something\n    unexpected happened, which is why we have the client_exceptions()\n    decorator. The object_action() and object_class_action() methods\n    are used for direct remoting of object methods, and thus really\n    should forward *any* exception to the client.\n    \n    This patch does that, and also adds missing tests for these two\n    methods to verify the normal and exception-wrapped behavior.\n    \n    Closes-bug: #1233789\n    Closes-bug: #1084706\n    Change-Id: I505462fa429a6aa68e7b8a08ec2b704bf18d029c\n", 
            "date_created": "2013-10-03 00:31:13.495196+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: milestone-proposed\nReview: https://review.openstack.org/51075", 
            "date_created": "2013-10-10 23:49:18.424410+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/51075\nCommitted: http://github.com/openstack/nova/commit/b64ea7c2cb76c476a178deeed6ab9e83676faf05\nSubmitter: Jenkins\nBranch:    milestone-proposed\n\ncommit b64ea7c2cb76c476a178deeed6ab9e83676faf05\nAuthor: Dan Smith <email address hidden>\nDate:   Tue Oct 1 12:12:13 2013 -0700\n\n    Avoid spamming conductor logs with object exceptions\n    \n    Conductor's logs should include tracebacks only when something\n    unexpected happened, which is why we have the client_exceptions()\n    decorator. The object_action() and object_class_action() methods\n    are used for direct remoting of object methods, and thus really\n    should forward *any* exception to the client.\n    \n    This patch does that, and also adds missing tests for these two\n    methods to verify the normal and exception-wrapped behavior.\n    \n    Closes-bug: #1233789\n    Closes-bug: #1084706\n    Change-Id: I505462fa429a6aa68e7b8a08ec2b704bf18d029c\n    (cherry picked from commit 3a5e1faee04671f2e88b28d805b191b480054254)\n", 
            "date_created": "2013-10-11 08:12:39.001696+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}