{
    "status": "Fix Released", 
    "last_updated": "2013-04-04 11:02:09.964030+00:00", 
    "description": "The 'Creating a server with a name that already exists is allowed' test case stopped working.\n\nThe source of the test case is here:\nhttps://github.com/openstack/tempest/blob/ee3cc8dbe755d2abf15ad8cf46d3e2d57f85d355/tempest/tests/compute/servers/test_servers.py#L48\n\nI did not found any documentation about the expected behaviour, but it changed.\nI did not found any info how the  \"name\" parameter in the post request will be used for DNS entry creation, or any info  about the name must be unique.\n\nIn the \nhttp://logs.openstack.org/17781/1/check/gate-tempest-devstack-vm/21574/logs/screen-n-cpu.txt\n\"FloatingIpDNSExists_Remote: The DNS entry server670491 already exists in domain \" is related event.\nThe 2. server was created, but went into the error status around the DNS setting.\n\nIt occurred in the https://review.openstack.org/#/c/17781/  and in several other occasion.\nThe issue seams reproducible.\n\nIf the unique name is required constrain, the request should fail on create,\notherwise it should be able to boot (ACTIVE status) the second instance.", 
    "tags": [], 
    "importance": "High", 
    "heat": 20, 
    "link": "https://bugs.launchpad.net/nova/+bug/1088584", 
    "owner": "https://api.launchpad.net/1.0/~dan-prince", 
    "id": 1088584, 
    "index": 904, 
    "created": "2012-12-10 18:11:33.040921+00:00", 
    "title": "Creating a server with a name that already exists", 
    "comments": [
        {
            "content": "The 'Creating a server with a name that already exists is allowed' test case stopped working.\n\nThe source of the test case is here:\nhttps://github.com/openstack/tempest/blob/ee3cc8dbe755d2abf15ad8cf46d3e2d57f85d355/tempest/tests/compute/servers/test_servers.py#L48\n\nI did not found any documentation about the expected behaviour, but it changed.\nI did not found any info how the  \"name\" parameter in the post request will be used for DNS entry creation, or any info  about the name must be unique.\n\nIn the \nhttp://logs.openstack.org/17781/1/check/gate-tempest-devstack-vm/21574/logs/screen-n-cpu.txt\n\"FloatingIpDNSExists_Remote: The DNS entry server670491 already exists in domain \" is related event.\nThe 2. server was created, but went into the error status around the DNS setting.\n\nIt occurred in the https://review.openstack.org/#/c/17781/  and in several other occasion.\nThe issue seams reproducible.\n\nIf the unique name is required constrain, the request should fail on create,\notherwise it should be able to boot (ACTIVE status) the second instance.", 
            "date_created": "2012-12-10 18:11:33.040921+00:00", 
            "author": "https://api.launchpad.net/1.0/~afazekas"
        }, 
        {
            "content": "* both minidns and ldapdns do not allow duplicate hostnames. \n* this problem cropped up since we enabled minidns for the builds, earlier dnsdriver was being used which did not any validation\n\nDo we fix the test case? or is this a \"feature\" people depend on? Anyone know?", 
            "date_created": "2012-12-10 18:58:52.464218+00:00", 
            "author": "https://api.launchpad.net/1.0/~dims-v"
        }, 
        {
            "content": "Attila:\n\nHi. I just hit the same w/ SmokeStack.... The root cause of the issue is this Nova commit:\n\n  https://github.com/openstack/nova/commit/522ac62ad5cdc2164e6b9a72c86a889f94a7f23a\n\nThe solution I think is to switch Nova back to use a No-op DNS driver by default. To clear up any confusion I'm going to suggest we create a new (clearly marked) NoopDNSDriver so that it is hopefully clear the Nova default for this feature is to just pass.\n\nSee this review:\n\n  https://review.openstack.org/#/c/17799/", 
            "date_created": "2012-12-10 19:50:55.530024+00:00", 
            "author": "https://api.launchpad.net/1.0/~dan-prince"
        }, 
        {
            "content": "The test case can be changed to any well documented behavior.\n\nI even did not find documented evidence the \"name\" parameter has any relation to the \"hostname\". But I found a disabled test case which would test it on ssh. (I assume the disable is related to the xml to json auto-convert issues )\n\nThe test case originally added  with many others, I did not find any specific  reason.\n\nAny change which makes invalid the already duplicated name in the database,  have effect to the end users.\nMigration tools must exists for this case.\n\nauto_assign_floating_ip AFAIK is disabled, but I see \"FloatingIpDNSExists_Remote\"   exception.\n\nI wonder how  a fixed network got a domain. I do not remember it wan  an option when I created a network.\n\nAs we discussed  some name could be associated for multiple IP, but AFAIK even in this case the hosts usually have an additional  unique name. \n\nI think the name uniqueness should be configuration independent. But until I do not see a clear specification about the normal behavior, I think it is safer to go back to the original.\n\nJust the hostname alone SHOULD not be unique. \nFixed networks MAY have domain part for constructing the FQDN.\n\nThe RR kind  DNS entires SHOULD not be implicit when two server has the same \"name\".\n", 
            "date_created": "2012-12-10 22:06:58.596265+00:00", 
            "author": "https://api.launchpad.net/1.0/~afazekas"
        }, 
        {
            "content": "I have some notes for future consideration about auto creating internal domain names.\n\nProbably  all user expects, they can choose  user friendly \"name\"s  regardless \"name\"s used by any other tenant in all configuration.\n\nSome application may expect the FQDN has at least 3 part.\n <hostname>.<domain>.<TLD>.\n\nSomeone might want to use a single wildcard certificate even for the \"internal\" domain names.\n\nAFAIK in several configuration, a tenant can have multiple network, and someone might wants the  FQDN contains the network/subnet names too.\n\nSome user might want even more customization...\n\nOption: \nUse the VMs UUID in the auto-generated FQDN  and let the users to pick another names...\nAuto-generated FQDN should be based on the network/subnet topology.\nIf the VM has multiple interface, it might need at least one entry for all interface. \n", 
            "date_created": "2012-12-12 06:58:44.745431+00:00", 
            "author": "https://api.launchpad.net/1.0/~afazekas"
        }
    ]
}