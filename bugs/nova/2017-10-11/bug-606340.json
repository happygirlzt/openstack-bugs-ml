{
    "status": "Fix Released", 
    "last_updated": "2010-07-22 14:21:47.654218+00:00", 
    "description": "The nova.tests.network_unittest.NetworkTestCase.test_too_many_addresses test case is not idempotent and needs to be refactored so that when run alone does not fail.  In addition, the self.assertRaises() call needs to be refactored since (as shown below) the exception is not being caught at the right moment.\n\nError when running the entire test suite via run_tests.py:\n\n===============================================================================\n[ERROR]: nova.tests.network_unittest.NetworkTestCase.test_too_many_addresses\n\nTraceback (most recent call last):\n  File \"/home/jpipes/repos/nova/smoketest-refactor/nova/tests/network_unittest.py\", line 162, in test_too_many_addresses\n    addresses[i] = network.allocate_ip(\"netuser\", \"project0\", macs[i])\n  File \"/home/jpipes/repos/nova/smoketest-refactor/nova/compute/network.py\", line 562, in allocate_ip\n    return get_project_network(project_id).allocate_ip(user_id, project_id, mac)\n  File \"/home/jpipes/repos/nova/smoketest-refactor/nova/compute/network.py\", line 254, in allocate_ip\n    (project_id, str(self.network)))\nnova.compute.exception.NoMoreAddresses: Project project0 with network 10.0.0.0/27\n\nFailed test case when run alone:\n\njpipes@serialcoder:~/repos/nova/smoketest-refactor$ python run_tests.py nova.tests.network_unittest.NetworkTestCase.test_too_many_addresses\nsorry, we cannot include vendor open source libraries... :(\nINFO:root:Flushing redis datastore\nnova.tests.network_unittest\n  NetworkTestCase\n    test_too_many_addresses ...                                          [FAIL]\n\n===============================================================================\n[FAIL]: nova.tests.network_unittest.NetworkTestCase.test_too_many_addresses\n\nTraceback (most recent call last):\n  File \"/home/jpipes/repos/nova/smoketest-refactor/nova/tests/network_unittest.py\", line 165, in test_too_many_addresses\n    self.assertRaises(NoMoreAddresses, network.allocate_ip, \"netuser\", \"project0\", utils.generate_mac())\ntwisted.trial.unittest.FailTest: NoMoreAddresses not raised ('10.0.0.25' returned)\n-------------------------------------------------------------------------------\nRan 1 tests in 7.058s\n\nFAILED (failures=1)\n\nIf we take a look at the source, it seems that the reason for the lack of idempotency stems from an assumption that previous tests have established a fixture that, when this test case is run alone, is not setup properly:\n\nfrom nova/tests/network_uniitest.py:\n\n    def test_too_many_addresses(self):\n        \"\"\"\n        Network size is 32, there are 5 addresses reserved for VPN.\n        So we should get 23 usable addresses\n        \"\"\"\n        net = network.get_project_network(\"project0\", \"default\")\n        hostname = \"toomany-hosts\"\n        macs = {}\n        addresses = {}\n        for i in range(0, 22):\n            macs[i] = utils.generate_mac()\n            addresses[i] = network.allocate_ip(\"netuser\", \"project0\", macs[i])\n            self.dnsmasq.issue_ip(macs[i], addresses[i], hostname, net.bridge_name)\n\n        self.assertRaises(NoMoreAddresses, network.allocate_ip, \"netuser\", \"project0\", utils.generate_mac())\n\n        for i in range(0, 22):\n            rv = network.deallocate_ip(addresses[i])\n            self.dnsmasq.release_ip(macs[i], addresses[i], hostname, net.bridge_name)", 
    "tags": [
        "tests"
    ], 
    "importance": "Low", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/606340", 
    "owner": "https://api.launchpad.net/1.0/~jaypipes", 
    "id": 606340, 
    "index": 4919, 
    "created": "2010-07-16 15:59:07.906456+00:00", 
    "title": "test_too_many_addresses is not idempotent", 
    "comments": [
        {
            "content": "The nova.tests.network_unittest.NetworkTestCase.test_too_many_addresses test case is not idempotent and needs to be refactored so that when run alone does not fail.  In addition, the self.assertRaises() call needs to be refactored since (as shown below) the exception is not being caught at the right moment.\n\nError when running the entire test suite via run_tests.py:\n\n===============================================================================\n[ERROR]: nova.tests.network_unittest.NetworkTestCase.test_too_many_addresses\n\nTraceback (most recent call last):\n  File \"/home/jpipes/repos/nova/smoketest-refactor/nova/tests/network_unittest.py\", line 162, in test_too_many_addresses\n    addresses[i] = network.allocate_ip(\"netuser\", \"project0\", macs[i])\n  File \"/home/jpipes/repos/nova/smoketest-refactor/nova/compute/network.py\", line 562, in allocate_ip\n    return get_project_network(project_id).allocate_ip(user_id, project_id, mac)\n  File \"/home/jpipes/repos/nova/smoketest-refactor/nova/compute/network.py\", line 254, in allocate_ip\n    (project_id, str(self.network)))\nnova.compute.exception.NoMoreAddresses: Project project0 with network 10.0.0.0/27\n\nFailed test case when run alone:\n\njpipes@serialcoder:~/repos/nova/smoketest-refactor$ python run_tests.py nova.tests.network_unittest.NetworkTestCase.test_too_many_addresses\nsorry, we cannot include vendor open source libraries... :(\nINFO:root:Flushing redis datastore\nnova.tests.network_unittest\n  NetworkTestCase\n    test_too_many_addresses ...                                          [FAIL]\n\n===============================================================================\n[FAIL]: nova.tests.network_unittest.NetworkTestCase.test_too_many_addresses\n\nTraceback (most recent call last):\n  File \"/home/jpipes/repos/nova/smoketest-refactor/nova/tests/network_unittest.py\", line 165, in test_too_many_addresses\n    self.assertRaises(NoMoreAddresses, network.allocate_ip, \"netuser\", \"project0\", utils.generate_mac())\ntwisted.trial.unittest.FailTest: NoMoreAddresses not raised ('10.0.0.25' returned)\n-------------------------------------------------------------------------------\nRan 1 tests in 7.058s\n\nFAILED (failures=1)\n\nIf we take a look at the source, it seems that the reason for the lack of idempotency stems from an assumption that previous tests have established a fixture that, when this test case is run alone, is not setup properly:\n\nfrom nova/tests/network_uniitest.py:\n\n    def test_too_many_addresses(self):\n        \"\"\"\n        Network size is 32, there are 5 addresses reserved for VPN.\n        So we should get 23 usable addresses\n        \"\"\"\n        net = network.get_project_network(\"project0\", \"default\")\n        hostname = \"toomany-hosts\"\n        macs = {}\n        addresses = {}\n        for i in range(0, 22):\n            macs[i] = utils.generate_mac()\n            addresses[i] = network.allocate_ip(\"netuser\", \"project0\", macs[i])\n            self.dnsmasq.issue_ip(macs[i], addresses[i], hostname, net.bridge_name)\n\n        self.assertRaises(NoMoreAddresses, network.allocate_ip, \"netuser\", \"project0\", utils.generate_mac())\n\n        for i in range(0, 22):\n            rv = network.deallocate_ip(addresses[i])\n            self.dnsmasq.release_ip(macs[i], addresses[i], hostname, net.bridge_name)", 
            "date_created": "2010-07-16 15:59:07.906456+00:00", 
            "author": "https://api.launchpad.net/1.0/~jaypipes"
        }, 
        {
            "content": "Adding some debugging information revealed a few things...\n\n    def test_too_many_addresses(self):\n        \"\"\"\n        Network size is 32, there are 5 addresses reserved for VPN.\n        So we should get 23 usable addresses\n        \"\"\"\n        logging.debug(\"Running too_many_addresses\")\n        net = network.get_project_network(\"project0\", \"default\")\n        logging.debug(\"too_many_addresses: before iteration num IPs allocated: %d\" % len(net.hosts.keys()))\n        hostname = \"toomany-hosts\"\n        macs = {}\n        addresses = {}\n        for i in range(0, 22):\n            macs[i] = utils.generate_mac()\n            logging.debug(\"too_many_addresses: Attempting allocation of IP for iteration %d and MAC: %s\" % (i, str(macs[i])))\n            addresses[i] = network.allocate_ip(\"netuser\", \"project0\", macs[i])\n            self.dnsmasq.issue_ip(macs[i], addresses[i], hostname, net.bridge_name)\n\n        self.assertRaises(NoMoreAddresses, network.allocate_ip, \"netuser\", \"project0\", utils.generate_mac())\n\n        for i in range(0, 22):\n            rv = network.deallocate_ip(addresses[i])\n            self.dnsmasq.release_ip(macs[i], addresses[i], hostname, net.bridge_name)\n\nShows the following in the error log:\n\nDEBUG:root:Running too_many_addresses\nDEBUG:root:too_many_addresses: before iteration num IPs allocated: 3\nDEBUG:root:too_many_addresses: Attempting allocation of IP for iteration 0 and MAC: 00:16:3e:16:1b:a9\nDEBUG:root:Allocating IP 10.0.0.6 to project0\nDEBUG:root:FAKE NET: ifconfig vlan100\nDEBUG:root:FAKE NET: ifconfig br100\nDEBUG:root:Starting dnsmasq server for network with vlan 100\nDEBUG:root:FAKE NET: sudo dnsmasq --strict-order --bind-interfaces --conf-file= --pid-file=/home/jpipes/repos/nova/smoketest-refactor/networks/nova-100.pid --listen-address=10.0.0.1 --except-interface=lo --dhcp-range=10.0.0.3,static,600s --dhcp-hostsfile=/home/jpipes/repos/nova/smoketest-refactor/networks/nova-100.conf --dhcp-script=/home/jpipes/repos/nova/smoketest-refactor/bin/dhcpleasor.py --leasefile-ro\nDEBUG:root:FAKE NET: sudo iptables --delete FORWARD -d 10.0.0.2 -p udp --dport 1194 -j ACCEPT\nDEBUG:root:FAKE NET: sudo iptables -I FORWARD -d 10.0.0.2 -p udp --dport 1194 -j ACCEPT\nDEBUG:root:FAKE NET: sudo iptables --delete PREROUTING -t nat -d 127.0.0.1 -p udp --dport 1831 -j DNAT --to 10.0.0.2:1194\nDEBUG:root:FAKE NET: sudo iptables -I PREROUTING -t nat -d 127.0.0.1 -p udp --dport 1831 -j DNAT --to 10.0.0.2:1194\nDEBUG:root:Result was 1\nDEBUG:root:ISSUE_IP: warning: no vendor libraries included\n, DEBUG:root:Called add for mac 00:16:3e:16:1b:a9 with ip 10.0.0.6 and hostname toomany-hosts on interface br100\nTraceback (most recent call last):\n  File \"/home/jpipes/repos/nova/smoketest-refactor/bin/dhcpleasor.py\", line 90, in <module>\n    sys.exit(main())\n  File \"/home/jpipes/repos/nova/smoketest-refactor/bin/dhcpleasor.py\", line 84, in main\n    globals()[action+'_lease'](mac, ip, hostname, interface)\n  File \"/home/jpipes/repos/nova/smoketest-refactor/bin/dhcpleasor.py\", line 44, in add_lease\n    network.lease_ip(ip)\nAttributeError: 'module' object has no attribute 'lease_ip'\n...\n\nThe above shows that the assumption in the test case that 5 IPs will be allocated before this test is run is incorrect (at least for some environments).  There are 3 IPs allocated when this test is run on my laptop, not 5.", 
            "date_created": "2010-07-16 16:25:37.847494+00:00", 
            "author": "https://api.launchpad.net/1.0/~jaypipes"
        }, 
        {
            "content": "The 5 ips for vpns aren't actually ALLOCATED, they're reserved. I believe this is a name collision between the network module, and an instance of the network controller class, both being named 'network'. I'll go verify and patch.", 
            "date_created": "2010-07-16 16:38:01.954764+00:00", 
            "author": "https://api.launchpad.net/1.0/~joshua-mckenty"
        }, 
        {
            "content": "Pushed a fix to lp:~jaypipes/nova/bug606340 that runs properly when run the test_too_many_addresses case is run singly or with the main test runner.", 
            "date_created": "2010-07-16 17:03:40.720342+00:00", 
            "author": "https://api.launchpad.net/1.0/~jaypipes"
        }
    ]
}