{
    "status": "Fix Released", 
    "last_updated": "2013-09-19 13:49:23.405576+00:00", 
    "description": "Currently backing files are resized (from <uuid> to <uuid>_40 for example) using a copy, which is extremely slow. It would be nice to either:\n\na) allow resizing by making the <uuid>_40 a qcow image with <uuid> as a backing file and performing a resize on the qcow.\n\nof\n\nb) allow the disk file to directly back to <uuid> and perform the resize on disk directly\n\nboth of these have some concerns when relating to image cache cleanup, but overall option b) seems far better. It also makes resizing the image later much easier.", 
    "tags": [], 
    "importance": "Low", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1087031", 
    "owner": "https://api.launchpad.net/1.0/~mikal", 
    "id": 1087031, 
    "index": 727, 
    "openned": "2012-12-05 22:30:01.124725+00:00", 
    "created": "2012-12-05 22:30:01.124725+00:00", 
    "title": "libvirt: better performance for resizing backing files", 
    "comments": [
        {
            "content": "Currently backing files are resized (from <uuid> to <uuid>_40 for example) using a copy, which is extremely slow. It would be nice to either:\n\na) allow resizing by making the <uuid>_40 a qcow image with <uuid> as a backing file and performing a resize on the qcow.\n\nof\n\nb) allow the disk file to directly back to <uuid> and perform the resize on disk directly\n\nboth of these have some concerns when relating to image cache cleanup, but overall option b) seems far better. It also makes resizing the image later much easier.", 
            "date_created": "2012-12-05 22:30:01.124725+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/18276\nCommitted: http://github.com/openstack/nova/commit/c82be9f4b997d252cfc84350a067a64d6d4b380b\nSubmitter: Jenkins\nBranch:    master\n\ncommit c82be9f4b997d252cfc84350a067a64d6d4b380b\nAuthor: Michael Still <email address hidden>\nDate:   Mon Dec 17 14:56:19 2012 +1100\n\n    libvirt: Skip intermediate base files with qcow2.\n    \n    Instead of having two files in _base (the original and a resized\n    copy), let's just keep the originals and resize with the qcow2\n    image in the instance's directory. This will reduce the size of\n    _base and simplify cleanup. This also simplifies resizing of\n    instance disk images later.\n    \n    Resolves bug 1087031.\n    \n    Change-Id: Id91426e3cb9f75f31339b5156785e3782a4cb98f\n", 
            "date_created": "2012-12-22 20:36:40.080424+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "I've a query about the change.\n\nNow resizes are always done on qcow file in the instance directory.\nThat will introduce a possibly unexpected change when using\nunpartitioned ext[234] images, as they'll no longer have their\nfile system resized up (as resize2fs will fail on the qcow2 file).\n\nMaybe we document this in release notes, that the limited\nfile system resizing is no longer supported?\nOr perhaps we key this new behaviour on whether the\nimage in base could be resized (disk.can_resize_fs(_base_image, size))\n\n", 
            "date_created": "2013-02-25 03:12:41.459003+00:00", 
            "author": "https://api.launchpad.net/1.0/~p-draigbrady"
        }, 
        {
            "content": "The question in comment 2 is now addressed with the following since Havana milestone 3\n\nhttps://review.openstack.org/#/c/42160/\nhttps://review.openstack.org/#/c/45742/", 
            "date_created": "2013-09-19 13:49:22.652744+00:00", 
            "author": "https://api.launchpad.net/1.0/~p-draigbrady"
        }
    ], 
    "closed": "2013-01-09 10:24:12.589129+00:00"
}