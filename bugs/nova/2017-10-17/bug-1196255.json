{
    "status": "Won't Fix", 
    "last_updated": "2013-09-09 05:10:38.516947+00:00", 
    "description": "In nova-api, both DELETED and SOFT_DELETED are mapped to 'DELETED'. Thus we cannot filer 'soft-deleted' instances via nova-api, like:  \n\nnova list --status SOFT_DELETED", 
    "tags": [
        "api"
    ], 
    "importance": "Undecided", 
    "heat": 12, 
    "link": "https://bugs.launchpad.net/nova/+bug/1196255", 
    "owner": "None", 
    "id": 1196255, 
    "index": 5074, 
    "openned": "2013-06-30 14:19:14.204991+00:00", 
    "created": "2013-06-30 14:19:14.204991+00:00", 
    "title": "Cannot filter 'soft-deletd' instances via nova api", 
    "comments": [
        {
            "content": "In nova-api, both DELETED and SOFT_DELETED are mapped to 'DELETED'. Thus we cannot filer 'soft-deleted' instances via nova-api, like:  \n\nnova list --status SOFT_DELETED", 
            "date_created": "2013-06-30 14:19:14.204991+00:00", 
            "author": "https://api.launchpad.net/1.0/~yufang521247"
        }, 
        {
            "content": "I took a look at the blame around this in nova.api.openstack.common and there is some blueprint work and vm_state/task_state management cleanup history here, but I can't tell if this was just an oversight or intentional.\n\nSee here: http://wiki.openstack.org/VMState", 
            "date_created": "2013-06-30 19:27:46.461997+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "My guess is because the ec2 API doesn't appear to make a distinction between deleted and soft-delete (it considers both states as terminated), maybe the same assumption was made in the OS API and was just an oversight.  I can take a crack at changing the OS API mapping and if it's obviously wrong it can be shot down in review.", 
            "date_created": "2013-06-30 19:30:19.812553+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Looking at the OS API server list code, it doesn't do a great job of letting the user know if they gave an invalid status value either, it just returns nothing:\n\nhttps://github.com/openstack/nova/blob/master/nova/api/openstack/compute/servers.py#L514\n\nAt a minimum this should be logging something because if you get that far, the user is obviously trying to filter on status, they just aren't using the right thing.  The problem I see after that is how the user does know what the right thing is, since I don't see it listed as available options in the docs for the server list API.  To be harsh, we could raise a bad request exception if the status value isn't mapped to a vm_state, I'll see what the feelings are on that in a review.", 
            "date_created": "2013-06-30 20:30:28.965705+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/35061", 
            "date_created": "2013-06-30 20:57:47.176335+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Dropping my review due to a -2 from the PTL with this:\n\n\"This patch only allows SOFT_DELETED as a filter as input. As far as I can tell, SOFT_DELETED is never exposed via the API. I don't think it makes sense to allow it as input unless there is a more sweeping change to expose this concept via the API. If we did *that* (expose the concept of a soft delete), I would also expect the ability to undo a delete that is pending ... basically I think it should be nothing, or much more change than this (I think I just prefer nothing personally).\"", 
            "date_created": "2013-08-13 22:03:30.715136+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }
    ], 
    "closed": "2013-09-09 05:10:36.658267+00:00"
}