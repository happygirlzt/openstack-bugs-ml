{
    "status": "Fix Released", 
    "last_updated": "2012-04-05 11:05:14.145981+00:00", 
    "description": "We need to sanitize the keypair name input to only accept ASCII characters. Otherwise you get this:\n\nREQ BODY: {\"keypair\": {\"name\": \"yay\\u090\"}}\n\nRESP:{'date': 'Thu, 01 Dec 2011 20:39:06 GMT', 'status': '500', 'content-length': '133', 'content-type': 'application/json; charset=UTF-8'} {\"cloudServersFault\": {\"message\": \"The server has either erred or is incapable of performing the requested operation.\", \"code\": 500}}", 
    "tags": [], 
    "importance": "Low", 
    "heat": 14, 
    "link": "https://bugs.launchpad.net/nova/+bug/898808", 
    "owner": "https://api.launchpad.net/1.0/~novas0x2a", 
    "id": 898808, 
    "index": 374, 
    "openned": "2011-12-17 22:00:00.602140+00:00", 
    "created": "2011-12-01 20:43:19.659149+00:00", 
    "title": "unicode characters in keypair name cause 500 server errors", 
    "comments": [
        {
            "content": "We need to sanitize the keypair name input to only accept ASCII characters. Otherwise you get this:\n\nREQ BODY: {\"keypair\": {\"name\": \"yay\\u090\"}}\n\nRESP:{'date': 'Thu, 01 Dec 2011 20:39:06 GMT', 'status': '500', 'content-length': '133', 'content-type': 'application/json; charset=UTF-8'} {\"cloudServersFault\": {\"message\": \"The server has either erred or is incapable of performing the requested operation.\", \"code\": 500}}", 
            "date_created": "2011-12-01 20:43:19.659149+00:00", 
            "author": "https://api.launchpad.net/1.0/~gabriel-hurley"
        }, 
        {
            "content": "Not sure if we want to only allow ASCII...  I think it is (or should be) valid to have servers named with unicode - so we should allow unicode in keynames?", 
            "date_created": "2011-12-01 20:53:50.999635+00:00", 
            "author": "https://api.launchpad.net/1.0/~anotherjesse"
        }, 
        {
            "content": "I'm 100% in agreement that it *should* handle unicode characters. But right now Nova raises an unhandled exception if you try to, so we should disable it o our end until such time as Nova does support it.", 
            "date_created": "2011-12-01 22:16:02.068548+00:00", 
            "author": "https://api.launchpad.net/1.0/~gabriel-hurley"
        }, 
        {
            "content": "This is definitely an issue.  What is the right expectation here?  If a customer specifies unicode in the server name, the unix hostname will not contain those characters, correct?  What if all the characters are unicode?   In addition, I think the initial migrations might have to be changed, since this affects how they are stored in the db.   I haven't traced this at all, but I don't think its straightforward to support unicode.  In the meantime perhaps we should disallow users from using unicode in the hostname.\n\nHere's a Traceback just for fun:\n\n2012-01-15 12:38:35,641 ERROR nova.api.openstack.v2 [f00369f6-ec7d-4239-b71d-b6d6affd300a username projectid] Caught error: 'utf8' codec can't decode byte 0xa8 in position 5: invalid start byte\n(nova.api.openstack.v2): TRACE: Traceback (most recent call last):\n(nova.api.openstack.v2): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/api/openstack/v2/__init__.py\", line 59, in __call__\n(nova.api.openstack.v2): TRACE:     return req.get_response(self.application)\n(nova.api.openstack.v2): TRACE:   File \"/usr/lib/pymodules/python2.6/webob/request.py\", line 919, in get_response\n(nova.api.openstack.v2): TRACE:     application, catch_exc_info=False)\n(nova.api.openstack.v2): TRACE:   File \"/usr/lib/pymodules/python2.6/webob/request.py\", line 887, in call_application\n(nova.api.openstack.v2): TRACE:     app_iter = application(self.environ, start_response)\n(nova.api.openstack.v2): TRACE:   File \"/usr/lib/python2.6/dist-packages/keystone/middleware/auth_token.py\", line 209, in __call__\n(nova.api.openstack.v2): TRACE:     return self._forward_request(env, start_response, proxy_headers)\n(nova.api.openstack.v2): TRACE:   File \"/usr/lib/python2.6/dist-packages/keystone/middleware/auth_token.py\", line 325, in _forward_request\n(nova.api.openstack.v2): TRACE:     return self.app(env, start_response)\n(nova.api.openstack.v2): TRACE:   File \"/usr/lib/pymodules/python2.6/webob/dec.py\", line 159, in __call__\n(nova.api.openstack.v2): TRACE:     return resp(environ, start_response)\n(nova.api.openstack.v2): TRACE:   File \"/usr/lib/pymodules/python2.6/webob/dec.py\", line 147, in __call__\n(nova.api.openstack.v2): TRACE:     resp = self.call_func(req, *args, **self.kwargs)\n(nova.api.openstack.v2): TRACE:   File \"/usr/lib/pymodules/python2.6/webob/dec.py\", line 208, in call_func\n(nova.api.openstack.v2): TRACE:     return self.func(req, *args, **kwargs)\n(nova.api.openstack.v2): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/api/openstack/wsgi.py\", line 501, in __call__\n(nova.api.openstack.v2): TRACE:     response = req.get_response(self.application)\n(nova.api.openstack.v2): TRACE:   File \"/usr/lib/pymodules/python2.6/webob/request.py\", line 919, in get_response\n(nova.api.openstack.v2): TRACE:     application, catch_exc_info=False)\n(nova.api.openstack.v2): TRACE:   File \"/usr/lib/pymodules/python2.6/webob/request.py\", line 887, in call_application\n(nova.api.openstack.v2): TRACE:     app_iter = application(self.environ, start_response)\n(nova.api.openstack.v2): TRACE:   File \"/usr/lib/pymodules/python2.6/webob/dec.py\", line 159, in __call__\n(nova.api.openstack.v2): TRACE:     return resp(environ, start_response)\n(nova.api.openstack.v2): TRACE:   File \"/usr/lib/pymodules/python2.6/routes/middleware.py\", line 131, in __call__\n(nova.api.openstack.v2): TRACE:     response = self.app(environ, start_response)\n(nova.api.openstack.v2): TRACE:   File \"/usr/lib/pymodules/python2.6/webob/dec.py\", line 159, in __call__\n(nova.api.openstack.v2): TRACE:     return resp(environ, start_response)\n(nova.api.openstack.v2): TRACE:   File \"/usr/lib/pymodules/python2.6/webob/dec.py\", line 159, in __call__\n(nova.api.openstack.v2): TRACE:     return resp(environ, start_response)\n(nova.api.openstack.v2): TRACE:   File \"/usr/lib/pymodules/python2.6/routes/middleware.py\", line 131, in __call__\n(nova.api.openstack.v2): TRACE:     response = self.app(environ, start_response)\n(nova.api.openstack.v2): TRACE:   File \"/usr/lib/pymodules/python2.6/webob/dec.py\", line 159, in __call__\n(nova.api.openstack.v2): TRACE:     return resp(environ, start_response)\n(nova.api.openstack.v2): TRACE:   File \"/usr/lib/pymodules/python2.6/webob/dec.py\", line 147, in __call__\n(nova.api.openstack.v2): TRACE:     resp = self.call_func(req, *args, **self.kwargs)\n(nova.api.openstack.v2): TRACE:   File \"/usr/lib/pymodules/python2.6/webob/dec.py\", line 208, in call_func\n(nova.api.openstack.v2): TRACE:     return self.func(req, *args, **kwargs)\n(nova.api.openstack.v2): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/api/openstack/wsgi.py\", line 589, in __call__\n(nova.api.openstack.v2): TRACE:     action=action)\n(nova.api.openstack.v2): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/api/openstack/wsgi.py\", line 463, in serialize\n(nova.api.openstack.v2): TRACE:     action)\n(nova.api.openstack.v2): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/api/openstack/wsgi.py\", line 475, in serialize_body\n(nova.api.openstack.v2): TRACE:     response.body = utils.dumps(data)\n(nova.api.openstack.v2): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/utils.py\", line 742, in dumps\n(nova.api.openstack.v2): TRACE:     return json.dumps(value)\n(nova.api.openstack.v2): TRACE:   File \"/usr/lib/python2.6/json/__init__.py\", line 230, in dumps \n(nova.api.openstack.v2): TRACE:     return _default_encoder.encode(obj) \n(nova.api.openstack.v2): TRACE:   File \"/usr/lib/python2.6/json/encoder.py\", line 367, in encode \n(nova.api.openstack.v2): TRACE:     chunks = list(self.iterencode(o)) \n(nova.api.openstack.v2): TRACE:   File \"/usr/lib/python2.6/json/encoder.py\", line 309, in _iterencode \n(nova.api.openstack.v2): TRACE:     for chunk in self._iterencode_dict(o, markers): \n(nova.api.openstack.v2): TRACE:   File \"/usr/lib/python2.6/json/encoder.py\", line 275, in _iterencode_dict \n(nova.api.openstack.v2): TRACE:     for chunk in self._iterencode(value, markers): \n(nova.api.openstack.v2): TRACE:   File \"/usr/lib/python2.6/json/encoder.py\", line 306, in _iterencode \n(nova.api.openstack.v2): TRACE:     for chunk in self._iterencode_list(o, markers): \n(nova.api.openstack.v2): TRACE:   File \"/usr/lib/python2.6/json/encoder.py\", line 204, in _iterencode_list \n(nova.api.openstack.v2): TRACE:     for chunk in self._iterencode(value, markers): \n(nova.api.openstack.v2): TRACE:   File \"/usr/lib/python2.6/json/encoder.py\", line 309, in _iterencode \n(nova.api.openstack.v2): TRACE:     for chunk in self._iterencode_dict(o, markers): \n(nova.api.openstack.v2): TRACE:   File \"/usr/lib/python2.6/json/encoder.py\", line 275, in _iterencode_dict \n(nova.api.openstack.v2): TRACE:     for chunk in self._iterencode(value, markers): \n(nova.api.openstack.v2): TRACE:   File \"/usr/lib/python2.6/json/encoder.py\", line 294, in _iterencode \n(nova.api.openstack.v2): TRACE:     yield encoder(o) \n(nova.api.openstack.v2): TRACE: UnicodeDecodeError: 'utf8' codec can't decode byte 0xa8 in position 5: invalid start byte \n(nova.api.openstack.v2): TRACE:  ", 
            "date_created": "2012-01-15 17:52:29.382281+00:00", 
            "author": "https://api.launchpad.net/1.0/~westmaas"
        }, 
        {
            "content": "Related to Bug #925748", 
            "date_created": "2012-02-02 22:03:08.343902+00:00", 
            "author": "https://api.launchpad.net/1.0/~justin-fathomdb"
        }, 
        {
            "content": "@bcwaldon: Why did you mark as incomplete? This seems to have a pretty simple repro.", 
            "date_created": "2012-02-16 23:23:50.896705+00:00", 
            "author": "https://api.launchpad.net/1.0/~devcamcar"
        }, 
        {
            "content": "No idea, I went on a bug triaging spree and may have mis-marked this one.", 
            "date_created": "2012-02-16 23:26:34.458915+00:00", 
            "author": "https://api.launchpad.net/1.0/~bcwaldon"
        }, 
        {
            "content": "I did some work on this the other day. The issue is actually in Nova/deployment:\n\nNova handles the unicode characters correctly at the Python level, but if not backed by a DB that supports a unicode character set it raises a useless exception. Even more unfortunately, MySQL has a 1000-byte limit for key names, which is exceeded by something in Nova's migrations when run with a 3-byte unicode charset instead of a 1-byte latin charset. PostgreSQL does not have this problem.", 
            "date_created": "2012-02-17 20:05:00.465042+00:00", 
            "author": "https://api.launchpad.net/1.0/~gabriel-hurley"
        }, 
        {
            "content": "Bumping to 2012.1 since there isn't a patch yet.", 
            "date_created": "2012-02-29 08:30:05.222656+00:00", 
            "author": "https://api.launchpad.net/1.0/~gabriel-hurley"
        }, 
        {
            "content": "what is the keypair  in openstack and how it will be usefull to openstack?\n", 
            "date_created": "2012-03-01 09:45:11.075665+00:00", 
            "author": "https://api.launchpad.net/1.0/~adapaka-prasad"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/4787", 
            "date_created": "2012-03-02 01:24:58.228688+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/4787\nCommitted: http://github.com/openstack/nova/commit/27013e87f53cccbfd2e203f065e416437ba08987\nSubmitter: Jenkins\nBranch:    master\n\ncommit 27013e87f53cccbfd2e203f065e416437ba08987\nAuthor: Mike Lundy <email address hidden>\nDate:   Fri Mar 2 00:15:04 2012 +0000\n\n    Fail gracefully when the db doesn't speak unicode\n    \n    When sqlalchemy/mysql doesn't contain the charset=utf8 or use_unicode=1\n    parameters (and the default mysql connection charset is not utf8),\n    sqlalchemy will connect to mysql in ascii mode; In ascii mode, it will\n    attempt to reencode all input data to latin-1 regardless of the\n    database/table collation setting. This catches that error and turns it\n    into an invalid parameter.\n    \n    (The error message associated with this is something like\n    UnicodeEncodeError: 'latin-1' codec can't encode character u'\\u2026' in\n    position 30: ordinal not in range(256))\n    \n    This fixes bug 944034 and is related to bug 898808\n    \n    Change-Id: I082b7568ef9e9d2104e13aa58d207535ef201bd3\n", 
            "date_created": "2012-03-02 05:47:09.330320+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "I haven't tested the above fix in the context of this bug (just in terms of bug 944034) but I suspect you will now get a 400 instead of a 500 when you use a non-ascii keypair with a mysql connection that doesn't support non-ascii. \n\nThere might also be a bit of a documentation fix necessary here: if you back nova with mysql and you want to use unicode in various place that are stored in the db, you must use a sql_connection string with charset=utf8 or use_unicode=1 (see http://docs.sqlalchemy.org/en/latest/dialects/mysql.html#unicode) or set the default connection charset to utf8 in mysql.\n\nQuoting from the above link:\n\n\"Without this setting, many MySQL server installations default to a latin1 encoding for client connections, which has the effect of all data being converted into latin1, even if you have utf8 or another character set configured on your tables and columns.\"", 
            "date_created": "2012-03-02 07:28:58.318668+00:00", 
            "author": "https://api.launchpad.net/1.0/~novas0x2a"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/4783\nCommitted: http://github.com/openstack/horizon/commit/86bb083c9d24f770e0a14c50ee8f53453f938deb\nSubmitter: Jenkins\nBranch:    master\n\ncommit 86bb083c9d24f770e0a14c50ee8f53453f938deb\nAuthor: Joshua McKenty <email address hidden>\nDate:   Thu Mar 1 23:40:25 2012 +0000\n\n    Form errors should be very apparent.\n    \n      * Adding the required control-group css class to the form fields.\n      * bug #898808\n    \n    Change-Id: I1c09200e1e58204f5e651d57967f4e3aa4c41919\n", 
            "date_created": "2012-03-05 22:28:50.996812+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2012-03-20 08:46:57.072601+00:00"
}