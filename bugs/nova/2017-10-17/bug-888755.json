{
    "status": "Invalid", 
    "last_updated": "2012-09-20 19:51:30.807913+00:00", 
    "description": "the external flag in utils.synchronized uses a file based lock for concurrency control. If the process crashed, the lock remains in the file system and will prevent future lock acquire actions.", 
    "tags": [], 
    "importance": "Low", 
    "heat": 8, 
    "link": "https://bugs.launchpad.net/nova/+bug/888755", 
    "owner": "https://api.launchpad.net/1.0/~mikeyp-3", 
    "id": 888755, 
    "index": 363, 
    "openned": "2011-11-10 21:10:12.412050+00:00", 
    "created": "2011-11-10 21:10:12.412050+00:00", 
    "title": "stale external locks causing deadlock (after process crash)", 
    "comments": [
        {
            "content": "the external flag in utils.synchronized uses a file based lock for concurrency control. If the process crashed or the server is rebooted, the lock remains in the file system and will prevent future lock acquire actions.", 
            "date_created": "2011-11-10 21:10:12.412050+00:00", 
            "author": "https://api.launchpad.net/1.0/~yunmao"
        }, 
        {
            "content": "From my quick survey, this bug is inherent in using the third party lockfile package. Maybe we can come up with a workaround, but it seems like the right thing to do is to think about dropping this dependency and picking one that works through more traditional advisory file locking.", 
            "date_created": "2011-12-20 18:52:44.058305+00:00", 
            "author": "https://api.launchpad.net/1.0/~markwash"
        }, 
        {
            "content": "Also see https://bugs.launchpad.net/nova/+bug/785955, which covers the same deadlock at process startup.\n\n\n\n", 
            "date_created": "2012-02-23 21:46:20.350026+00:00", 
            "author": "https://api.launchpad.net/1.0/~mikeyp-3"
        }, 
        {
            "content": "I think we should treat this as a duplicate of 785955 - we now cleanup the locks on process restart, which helps.\n\nWe still have an issue with locks left behind if a process crashes.  Believe the correct solution there is to implement lock timeouts to avoid indefinite stalls.\n\n", 
            "date_created": "2012-03-02 18:36:04.851411+00:00", 
            "author": "https://api.launchpad.net/1.0/~mikeyp-3"
        }, 
        {
            "content": "Keeping this one around to cover the case of crashes. Editing description to match.", 
            "date_created": "2012-06-07 08:45:59.642634+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "This code has been reworked in master so I believe this is no longer an issue.  Feel free to reopen if you think I'm missing something, though.", 
            "date_created": "2012-09-20 19:51:29.591855+00:00", 
            "author": "https://api.launchpad.net/1.0/~russellb"
        }
    ], 
    "closed": "2012-09-20 19:50:59.462673+00:00"
}