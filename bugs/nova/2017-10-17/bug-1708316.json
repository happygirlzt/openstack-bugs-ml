{
    "status": "In Progress", 
    "last_updated": "2017-08-12 03:40:42.834161+00:00", 
    "description": "Description\n===========\nNova send wrong information when there are\nseveral networks which have same name and\nVM uses more than one of them\n\nSteps to reproduce\n==================\n1. Create two networks which have same name\n2. Create VM with the networks created in 1st step.\n3. Check the VM using \"nova show <VM>\"\n\nExpected result\n===============\n...\n| tenant_id                            | 92f3ea23c5b84fd69b56583f322d213e                         |\n| testnet1 network                     | 192.168.0.12                                             |\n| testnet1 network                     | 192.168.1.4                                              |\n| updated                              | 2017-07-31T14:33:49Z                                     |\n...\n\nActual result\n=============\n...\n| tenant_id                            | 92f3ea23c5b84fd69b56583f322d213e                         |\n| testnet1 network                     | 192.168.0.12, 192.168.1.4                                |\n| updated                              | 2017-07-31T14:33:49Z                                     |\n...\n\nEnvironment\n===========\n1. Openstack Version : I tested this using Mitaka & Ocata\n2. Network : Neutron with LinuxBridge", 
    "tags": [
        "api"
    ], 
    "importance": "Undecided", 
    "heat": 14, 
    "link": "https://bugs.launchpad.net/nova/+bug/1708316", 
    "owner": "https://api.launchpad.net/1.0/~forhim-park", 
    "id": 1708316, 
    "index": 8236, 
    "openned": "2017-08-03 00:54:55.409907+00:00", 
    "created": "2017-08-03 00:54:55.409907+00:00", 
    "title": "Nova send wrong information when there are several networks which have same name and VM uses more than one of them", 
    "comments": [
        {
            "content": "Description\n===========\nNova send wrong information when there are \nseveral networks which have same name and \nVM uses more than one of them\n\n\nSteps to reproduce\n==================\n1. Create two networks which have same name\n2. Create VM with the networks created in 1st step.\n3. Check the VM using \"nova show <VM>\"\n\nExpected result\n===============\n...\n| tenant_id                            | 92f3ea23c5b84fd69b56583f322d213e                         |\n| testnet network                      | 192.168.0.12                                             |\n| testnet network                      | 192.168.1.4                                              |\n| updated                              | 2017-07-31T14:33:49Z                                     |\n...\n\nActual result\n=============\n...\n| tenant_id                            | 92f3ea23c5b84fd69b56583f322d213e                         |\n| testnet network                      | 192.168.0.12, 192.168.1.4                                |\n| updated                              | 2017-07-31T14:33:49Z                                     |\n...\n\nEnvironment\n===========\n1. Openstack Version : I tested this using Mitaka & Ocata\n2. Network : Neutron with LinuxBridge", 
            "date_created": "2017-08-03 00:54:55.409907+00:00", 
            "author": "https://api.launchpad.net/1.0/~forhim-park"
        }, 
        {
            "content": "From the debug messages, below part are releated to this problem.\n\n# nova --debug show testvm\n.......\nDEBUG (session:248) REQ: curl -g -i -X GET http://10.251.214.128:8774/v2/99324deb5cbc4225bcf461cb5263f073/servers/dff73b1e-c52d-4eb0-b2bf-0aac6a323a8e -H \"User-Agent: python-novaclient\" -H \"Accept: application/json\" -H \"X-Auth-Token: {SHA1}8c47607eaf5f705b9b6803c9c1c430601dcea72d\"\nDEBUG (connectionpool:401) \"GET /v2/99324deb5cbc4225bcf461cb5263f073/servers/dff73b1e-c52d-4eb0-b2bf-0aac6a323a8e HTTP/1.1\" 200 2101\nDEBUG (session:277) RESP: [200] Content-Length: 2101 Content-Type: application/json X-Compute-Request-Id: req-2ca57fe2-c873-44e6-a09b-3be7f183a0e7 Date: Sat, 22 Jul 2017 06:51:58 GMT Connection: keep-alive \nRESP BODY: {\"server\": {\"status\": \"ACTIVE\", \"updated\": \"2017-07-21T10:07:05Z\", \"hostId\": \"b5b56d2e7c70f50d4f72d2d071592b35949398832f1bbb3c3cca43f8\", \"OS-EXT-SRV-ATTR:host\": \"dellnova1\", \"addresses\": {\"testnet1\": [{\"OS-EXT-IPS-MAC:mac_addr\": \"fa:16:3e:65:83:12\", \"version\": 4, \"addr\": \"192.168.0.1\", \"OS-EXT-IPS:type\": \"fixed\"}, {\"OS-EXT-IPS-MAC:mac_addr\": \"fa:16:3e:7c:67:72\", \"version\": 4, \"addr\": \"192.168.0.1\", \"OS-EXT-IPS:type\": \"fixed\"}, {\"OS-EXT-IPS-MAC:mac_addr\": \"fa:16:3e:12:5c:47\", \"version\": 4, \"addr\": \"192.168.0.1\", \"OS-EXT-IPS:type\": \"fixed\"}, {\"OS-EXT-IPS-MAC:mac_addr\": \"fa:16:3e:7e:0b:64\", \"version\": 4, \"addr\": \"192.168.0.1\", \"OS-EXT-IPS:type\": \"fixed\"}]}, \"links\": [{\"href\": \"http://10.251.214.128:8774/v2/99324deb5cbc4225bcf461cb5263f073/servers/dff73b1e-c52d-4eb0-b2bf-0aac6a323a8e\", \"rel\": \"self\"}, {\"href\": \"http://10.251.214.128:8774/99324deb5cbc4225bcf461cb5263f073/servers/dff73b1e-c52d-4eb0-b2bf-0aac6a323a8e\", \"rel\": \"bookmark\"}], \"key_name\": null, \"image\": {\"id\": \"6479dc43-c7b0-4b4b-bcf6-7f566aec3535\", \"links\": [{\"href\": \"http://10.251.214.128:8774/99324deb5cbc4225bcf461cb5263f073/images/6479dc43-c7b0-4b4b-bcf6-7f566aec3535\", \"rel\": \"bookmark\"}]}, \"OS-EXT-STS:task_state\": null, \"OS-EXT-STS:vm_state\": \"active\", \"OS-EXT-SRV-ATTR:instance_name\": \"testvm\", \"OS-SRV-USG:launched_at\": \"2017-07-21T10:07:05.000000\", \"OS-EXT-SRV-ATTR:hypervisor_hostname\": \"dellnova1\", \"flavor\": {\"id\": \"1\", \"links\": [{\"href\": \"http://10.251.214.128:8774/99324deb5cbc4225bcf461cb5263f073/flavors/1\", \"rel\": \"bookmark\"}]}, \"id\": \"dff73b1e-c52d-4eb0-b2bf-0aac6a323a8e\", \"security_groups\": [{\"name\": \"default\"}, {\"name\": \"default\"}, {\"name\": \"default\"}, {\"name\": \"default\"}], \"OS-SRV-USG:terminated_at\": null, \"OS-EXT-AZ:availability_zone\": \"nova\", \"user_id\": \"419724e2c52a462dbb9efc45db9ebc14\", \"name\": \"testvm\", \"created\": \"2017-07-21T10:06:54Z\", \"tenant_id\": \"99324deb5cbc4225bcf461cb5263f073\", \"OS-DCF:diskConfig\": \"AUTO\", \"os-extended-volumes:volumes_attached\": [], \"accessIPv4\": \"\", \"accessIPv6\": \"\", \"progress\": 0, \"OS-EXT-STS:power_state\": 1, \"config_drive\": \"\", \"metadata\": {}}}\n.......\n\nLet's isolate JSON data.\n\n\"addresses\": {\n  \"testnet1\": \n  [\n\t{\"OS-EXT-IPS-MAC:mac_addr\": \"fa:16:3e:65:83:12\", \"version\": 4, \"addr\": \"192.168.0.12\", \"OS-EXT-IPS:type\": \"fixed\"}, \n\t{\"OS-EXT-IPS-MAC:mac_addr\": \"fa:16:3e:7c:67:72\", \"version\": 4, \"addr\": \"192.168.1.4\", \"OS-EXT-IPS:type\": \"fixed\"}\n  ]\n}\n\n", 
            "date_created": "2017-08-03 00:58:41.201806+00:00", 
            "author": "https://api.launchpad.net/1.0/~forhim-park"
        }, 
        {
            "content": "This is the JSON data when VM has two ports for connecting different networks :\n\n\"addresses\": {\n    \"nfs_mgmt\": \n    [\n      {\"OS-EXT-IPS-MAC:mac_addr\": \"fa:16:3e:f3:ba:c0\", \"version\": 4, \"addr\": \"128.0.0.2\", \"OS-EXT-IPS:type\": \"fixed\"}\n    ], \n    \"public_network\": \n    [\n      {\"OS-EXT-IPS-MAC:mac_addr\": \"fa:16:3e:31:52:c5\", \"version\": 4, \"addr\": \"10.251.214.52\", \"OS-EXT-IPS:type\": \"fixed\"}\n    ]\n}\n\nSo I think the JSON data should be like below:\n\n\"addresses\": {\n  \"testnet1_35cb3d55-cd\": \n  [\n\t{\"OS-EXT-IPS-MAC:mac_addr\": \"fa:16:3e:65:83:12\", \"version\": 4, \"addr\": \"192.168.0.12\", \"OS-EXT-IPS:type\": \"fixed\"}\n  ],\n  \"testNetwork_f8fad107-4a\" :\n  [\n\t{\"OS-EXT-IPS-MAC:mac_addr\": \"fa:16:3e:7c:67:72\", \"version\": 4, \"addr\": \"192.168.0.1\", \"OS-EXT-IPS:type\": \"fixed\"}\n  ]\n}", 
            "date_created": "2017-08-03 01:26:14.031337+00:00", 
            "author": "https://api.launchpad.net/1.0/~forhim-park"
        }, 
        {
            "content": "Found same bug in Mitaka.", 
            "date_created": "2017-08-03 02:08:31.232043+00:00", 
            "author": "https://api.launchpad.net/1.0/~mhban"
        }, 
        {
            "content": "API spec is wrong. For example:\nhttps://developer.openstack.org/api-ref/compute/#servers-ips-servers-ips\nAddresses field is a dict not a list. Therefore it is not expected that network name is non-unique.\n\nI see following options:\n - Network names should be forced to be unique\n - API shall allow multiple networks with the same name (change dict to list)\n - API shall allow special postfix in network label\n", 
            "date_created": "2017-08-09 10:39:30.994574+00:00", 
            "author": "https://api.launchpad.net/1.0/~maciejkucia"
        }, 
        {
            "content": "This is going to need to come in as a spec, as it would be an API change. I'd also want the Neutron folks involved in this to figure out if this is their desired state.", 
            "date_created": "2017-08-09 10:47:41.845341+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "network names are definitely not unique in neutron and I don't think it would be tenable to make them that way. Ignoring the backward-compatibility, it would make the acceptable name field values for a given tenant completely unpredictable because they can't see all of the names that are in use.\n\nEven if we scoped uniqueness to (network tenant_id, network name), it would still result in cases where just the name collides when you have networks shared to a tenant either globally or via an RBAC entry.\n\nI think the Nova API is going to have to change to key based on network IDs instead of names or one of the other solutions. ", 
            "date_created": "2017-08-09 22:52:45.368669+00:00", 
            "author": "https://api.launchpad.net/1.0/~kevinbenton"
        }
    ]
}