{
    "status": "Opinion", 
    "last_updated": "2014-09-16 13:10:58.877061+00:00", 
    "description": "This is related to the fix for bug #939580\n\nReading the code:\n\n        # NOTE(francois.charlier): in some cases the instance might be                                                                     \n        # deleted before the IPs are released, so we need to get deleted                                                                   \n        # instances too                                                                                                                    \n        read_deleted_context = context.elevated(read_deleted='yes')\n        ....\n        try:\n            fixed_ips = self.db.fixed_ip_get_by_instance(read_deleted_context,\n                                                         instance_id)\n        except exception.FixedIpNotFoundForInstance:\n\nthen:\n\n  def fixed_ip_get_by_instance(context, instance_id):\n      result = model_query(context, models.FixedIp, read_deleted=\"no\").\\\n                   filter_by(instance_id=instance_id).\\\n                   all()\n\nthen:\n\n  def model_query(context, *args, **kwargs):\n      ...\n      read_deleted = kwargs.get('read_deleted') or context.read_deleted\n\nIt's obvious the read_deleted flag is ignored here. And, in any case, we only want to read deleted instances, not deleted fixed IPs.\n\nNow, I understand what's going on - later, in _disassociate_floating_ip(), we do:\n\n    instance = self.db.instance_get(context, fixed_ip['instance_id'])\n\nand it's *this* call we want to pass the read_deleted flag.\n\nI started moving the setting of read_deleted on the context closer to where we actually needed, but it's hard to do this with confidence because there are many DB calls which the author of the fix may have intended to pass read_deleted='yes' to.  This is a sign that we've seriously confused the code by setting read_deleted='yes' in a fairly arbitrary place.", 
    "tags": [], 
    "importance": "Wishlist", 
    "heat": 8, 
    "link": "https://bugs.launchpad.net/nova/+bug/964763", 
    "owner": "None", 
    "id": 964763, 
    "index": 2490, 
    "openned": "2012-03-25 20:25:00.697368+00:00", 
    "created": "2012-03-25 20:25:00.697368+00:00", 
    "title": "confusing network manager read_deleted usage ", 
    "comments": [
        {
            "content": "This is related to the fix for bug #939580\n\nReading the code:\n\n        # NOTE(francois.charlier): in some cases the instance might be                                                                     \n        # deleted before the IPs are released, so we need to get deleted                                                                   \n        # instances too                                                                                                                    \n        read_deleted_context = context.elevated(read_deleted='yes')\n        ....\n        try:\n            fixed_ips = self.db.fixed_ip_get_by_instance(read_deleted_context,\n                                                         instance_id)\n        except exception.FixedIpNotFoundForInstance:\n\nthen:\n\n  def fixed_ip_get_by_instance(context, instance_id):\n      result = model_query(context, models.FixedIp, read_deleted=\"no\").\\\n                   filter_by(instance_id=instance_id).\\\n                   all()\n\nthen:\n\n  def model_query(context, *args, **kwargs):\n      ...\n      read_deleted = kwargs.get('read_deleted') or context.read_deleted\n\nIt's obvious the read_deleted flag is ignored here. And, in any case, we only want to read deleted instances, not deleted fixed IPs.\n\nNow, I understand what's going on - later, in _disassociate_floating_ip(), we do:\n\n    instance = self.db.instance_get(context, fixed_ip['instance_id'])\n\nand it's *this* call we want to pass the read_deleted flag.\n\nI started moving the setting of read_deleted on the context closer to where we actually needed, but it's hard to do this with confidence because there are many DB calls which the author of the fix may have intended to pass read_deleted='yes' to.  This is a sign that we've seriously confused the code by setting read_deleted='yes' in a fairly arbitrary place.", 
            "date_created": "2012-03-25 20:25:00.697368+00:00", 
            "author": "https://api.launchpad.net/1.0/~markmc"
        }, 
        {
            "content": "Is this still valid? The code has changed a lot since this was filed", 
            "date_created": "2014-09-09 23:15:35.825128+00:00", 
            "author": "https://api.launchpad.net/1.0/~jogo"
        }, 
        {
            "content": "While there is definitely debt in here, I'm not convinced that this artifact helps us move forward on it. I'm going to mark as Opinion. Feel free to reopen.", 
            "date_created": "2014-09-16 13:10:58.357829+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }
    ], 
    "closed": "2014-09-16 13:10:15.477124+00:00"
}