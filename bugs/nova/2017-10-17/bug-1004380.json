{
    "status": "Invalid", 
    "last_updated": "2013-04-04 09:30:11.027999+00:00", 
    "description": "Currently you can only download the ssh private  key once you created a new keypair. If you forget to download it or delete the downloaded key file by mistake, you won't be able to get it via  a downloadable link. This is not convenient for user.", 
    "tags": [], 
    "importance": "Undecided", 
    "heat": 14, 
    "link": "https://bugs.launchpad.net/nova/+bug/1004380", 
    "owner": "None", 
    "id": 1004380, 
    "index": 4108, 
    "openned": "2012-07-10 01:20:03.361764+00:00", 
    "created": "2012-05-25 09:04:30.949000+00:00", 
    "title": "Need downloadable link for private keys", 
    "comments": [
        {
            "content": "Currently you can only download the ssh private  key once you created a new keypair. If you forget to download it or delete the downloaded key file by mistake, you won't be able to get it via  a downloadable link. This is not convenient for user.", 
            "date_created": "2012-05-25 09:04:30.949000+00:00", 
            "author": "https://api.launchpad.net/1.0/~zhang-hare"
        }, 
        {
            "content": "This is true, however I don't think we can get the private key afterwards from nova unfortunately.", 
            "date_created": "2012-05-27 17:48:34.424638+00:00", 
            "author": "https://api.launchpad.net/1.0/~thingee"
        }, 
        {
            "content": "Confirmed that nova only returns the private key on creation and it's not retained. The private key is downloaded automatically on creation anyways, so hard to forget. ;)", 
            "date_created": "2012-05-27 18:09:29.990526+00:00", 
            "author": "https://api.launchpad.net/1.0/~thingee"
        }, 
        {
            "content": "That's a feature, not a bug.  We really don't want nova to retain private keys.  Even generating them server-side is not ideal from a security perspective, but is a compromise for convenience.  At one point pre-keystone I remember a discussion about using javascript to do key generation so the client's private key never touched the server.  However, an alternative key rescue approach might be to allow a new public key to be injected into a running instance?  \n\n-------------------------------------------------\nBrian Schott, CTO\nNimbis Services, Inc.\n<email address hidden>\nph: 443-274-6064  fx: 443-274-6060\n\n\n\nOn May 27, 2012, at 2:09 PM, Mike Perez wrote:\n\n> Confirmed that nova only returns the private key on creation and it's\n> not retained. The private key is downloaded automatically on creation\n> anyways, so hard to forget. ;)\n> \n> -- \n> You received this bug notification because you are subscribed to\n> OpenStack Dashboard (Horizon).\n> https://bugs.launchpad.net/bugs/1004380\n> \n> Title:\n>  Need downloadable link for private keys\n> \n> Status in OpenStack Dashboard (Horizon):\n>  Confirmed\n> \n> Bug description:\n>  Currently you can only download the ssh private  key once you created\n>  a new keypair. If you forget to download it or delete the downloaded\n>  key file by mistake, you won't be able to get it via  a downloadable\n>  link. This is not convenient for user.\n> \n> To manage notifications about this bug go to:\n> https://bugs.launchpad.net/horizon/+bug/1004380/+subscriptions\n\n", 
            "date_created": "2012-05-27 18:50:57+00:00", 
            "author": "https://api.launchpad.net/1.0/~bfschott"
        }, 
        {
            "content": "From security perspective,  it would be better to leverage PKI to  protect and retain private keys if possible.  This seems to complicate this feature.\nanother approach is provide user an option (disable by default) to save the private key in system for download with some warning message for security compromise to do this. To protect these keys in system, a pin code could be used to encrypt/decrypt the private key. Once the key pair generated, provide user a  destroy link to erase the private key from system, a download link for private key protected by the pin code.  It would be easier to manager lots of keys with this feature in some cases. ", 
            "date_created": "2012-05-28 08:37:14.986708+00:00", 
            "author": "https://api.launchpad.net/1.0/~zhang-hare"
        }, 
        {
            "content": "Current design of the keypair download link doesn't work if the private key file is not saved automatically.  Click the link, you'll  get an error like this:\nError: Unable to create keypair: Key pair 'demokey' already exists. (HTTP 409) (Request-ID: req-35f28aea-4b43-4bed-9168-d9400e4de08e)\nIt is a little confusing here.", 
            "date_created": "2012-05-29 05:32:11.129677+00:00", 
            "author": "https://api.launchpad.net/1.0/~zhang-hare"
        }, 
        {
            "content": "The solutions being discussed are now in the realm of Nova and Keystone, so I'm adding those projects to this bug report.\r\n\r\nFor Horizon this is 100% a wontfix. We're not ever going to store a user's private key file.", 
            "date_created": "2012-07-10 01:21:03.413047+00:00", 
            "author": "https://api.launchpad.net/1.0/~gabriel-hurley"
        }, 
        {
            "content": "In the V3 API for Keystone (starting implementation now - in Folsom release timeframe), there's an explicit set up for storing and retrieving credentials. Once that aspect of the API is available, this kind of feature will be able to be implemented in Horizon, and used as a service by Nova over the current mechanisms it has for dealing with the keypairs.", 
            "date_created": "2012-07-12 15:02:51.227482+00:00", 
            "author": "https://api.launchpad.net/1.0/~heckj"
        }, 
        {
            "content": "Looks like the fix belongs to Keystone... reopen Nova task if anything needs to be done on Nova's side", 
            "date_created": "2012-07-12 16:29:21.259053+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "Identity API v3 introduced a /v3/credentials API that could be utilized for this purpose, with proper adjustments to policy.json (only the owning user should be able to download a private key, for example. policy.json is also now capable of filtering by both owning user ID and credential type.", 
            "date_created": "2013-03-06 15:32:15.486098+00:00", 
            "author": "https://api.launchpad.net/1.0/~dolph"
        }
    ], 
    "closed": "2012-07-12 16:29:22.722048+00:00"
}