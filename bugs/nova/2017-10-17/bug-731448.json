{
    "status": "Invalid", 
    "last_updated": "2011-07-26 12:36:59.224245+00:00", 
    "description": "We keep seeing issues because the different image stores have different formats for their image metadata (or because the formats are changing underneath us?)\n\nI propose a big picture fix: adding a layer of abstraction.  We will add a \"strongly typed\" class, like our database models, and we will marshall the raw image metadata into this.  Currently I believe each image service is returning a dictionary.\n\nRather than using unnamed properties, we'll rely on methods or PyLint compatible properties for error checking.", 
    "tags": [], 
    "importance": "Wishlist", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/731448", 
    "owner": "None", 
    "id": 731448, 
    "index": 2283, 
    "openned": "2011-03-08 17:03:35.343142+00:00", 
    "created": "2011-03-08 17:03:35.343142+00:00", 
    "title": "Image Format Instability", 
    "comments": [
        {
            "content": "We keep seeing issues because the different image stores have different formats for their image metadata (or because the formats are changing underneath us?)\n\nI propose a big picture fix: adding a layer of abstraction.  We will add a \"strongly typed\" class, like our database models, and we will marshall the raw image metadata into this.  Currently I believe each image service is returning a dictionary.\n\nRather than using unnamed properties, we'll rely on methods or PyLint compatible properties for error checking.", 
            "date_created": "2011-03-08 17:03:35.343142+00:00", 
            "author": "https://api.launchpad.net/1.0/~justin-fathomdb"
        }, 
        {
            "content": "\"Rather than using unnamed properties, we'll rely on methods or PyLint compatible properties for error checking.\"\n\nSorry, I don't understand what that means. Could you elaborate?", 
            "date_created": "2011-03-08 17:19:08.572465+00:00", 
            "author": "https://api.launchpad.net/1.0/~jaypipes"
        }, 
        {
            "content": "\"We keep seeing issues because the different image stores have different formats for their image metadata\"\n\nNo, we see issues when the API in BaseImageService is ignored and one or another image service adapter's returned data is not transformed into the API contract of BaseImageService.\n\nAFAIK, the API contract of BaseImageService has not changed, so:\n\nSince Glance now returns 'disk_format' and 'container_format' instead of 'type' and the old 'type' is now returned from Glance in properties['type'], then the GlanceImageService adapter class should transform this new mapping to what BaseImageService expects (a 'type' column). ", 
            "date_created": "2011-03-08 17:21:37.107824+00:00", 
            "author": "https://api.launchpad.net/1.0/~jaypipes"
        }, 
        {
            "content": "In other words, change the GlanceImageService and not anything else.", 
            "date_created": "2011-03-08 17:22:16.483713+00:00", 
            "author": "https://api.launchpad.net/1.0/~jaypipes"
        }, 
        {
            "content": "Hey Justin.\n\nI actually worked on a bit of standardization across the image services in:\n\n  lp:~dan-prince/nova/os_api_images_709355 (which is proposed for merging).\n\nIn that branch I actually eliminate the method to lookup the kernel id and ramdisk within the Openstack API which has been so problematic.\n\nNote that I just discovered today that Vish has also reworked things within the image services to to kill the objectstore. His branch at lp:~vishvananda/nova/kill-objectstore will likely cause conflicts to changes we make to standardize things.", 
            "date_created": "2011-03-08 17:39:39.187184+00:00", 
            "author": "https://api.launchpad.net/1.0/~dan-prince"
        }, 
        {
            "content": "I'd like to fix the issue once and for all.  In a strongly-typed language, all these issues would be caught by the compiler.\n\nI'm working on seeing how much help we can get from the Python language & compiler to enforce the contract, rather than relying on a docstring contract.  DocString contracts aren't working (I personally lost 2 hours to them yesterday) \"Insanity is doing the same thing over and over again and expecting different results\" and all that.\n\nSo my though is that rather than have a dictionary a['id'], we would use \"a.id\".  Or maybe we'd just have a method \"a.id()\".  I'm experimenting as we speak!", 
            "date_created": "2011-03-08 17:39:46.281408+00:00", 
            "author": "https://api.launchpad.net/1.0/~justin-fathomdb"
        }, 
        {
            "content": "There are a number of changes to the images in my kill-objectstore branch,  So I caution against making extensive changes to that part of the code to avoid merge headaches.  I'd like to consider the data returned by glance to be the \"standard\" format, and have LocalImageService copy that format.  I need to add in code to move from type => container format.\n\nJay: While, I'm on the subject I'm not sure we need 'ami' as a format, since it is a an ami is just a raw disk partition. Perhaps it is because we are differentiating between 'whole disk' and 'one partition'?\n\nVish\n\nOn Mar 8, 2011, at 9:22 AM, Jay Pipes wrote:\n\n> In other words, change the GlanceImageService and not anything else.\n> \n> -- \n> You received this bug notification because you are a member of Nova Bug\n> Team, which is subscribed to OpenStack Compute (nova).\n> https://bugs.launchpad.net/bugs/731448\n> \n> Title:\n>  Image Format Instability\n> \n> Status in OpenStack Compute (Nova):\n>  New\n> \n> Bug description:\n>  We keep seeing issues because the different image stores have\n>  different formats for their image metadata (or because the formats are\n>  changing underneath us?)\n> \n>  I propose a big picture fix: adding a layer of abstraction.  We will\n>  add a \"strongly typed\" class, like our database models, and we will\n>  marshall the raw image metadata into this.  Currently I believe each\n>  image service is returning a dictionary.\n> \n>  Rather than using unnamed properties, we'll rely on methods or PyLint\n>  compatible properties for error checking.\n\n", 
            "date_created": "2011-03-08 17:39:43+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "Dan: Thanks for the links - I'd like to go a bit further and get more help from Python / PyLint (though this may not be possible.)  Nonetheless, both branches are very helpful for me to look at!", 
            "date_created": "2011-03-08 17:42:55.711459+00:00", 
            "author": "https://api.launchpad.net/1.0/~justin-fathomdb"
        }, 
        {
            "content": "I've put up a proof-of-concept of what I'm talking about.  It was great to see PyLint and Eclipse auto-complete working - it was much faster, and likely much more reliable.  I think I spotted a handful of bugs that we'd essentially wipe out just by better structuring the code.\n\nIf you're interested, I put in a merge request because it's the best way I know of to get input (though I don't want it to merge!!):\nhttps://code.launchpad.net/~justin-fathomdb/nova/strongly-typed-image-model/+merge/52602\n\nVish: If we like this, I was thinking I would rebase it off your kill-objectstore branch.", 
            "date_created": "2011-03-08 19:55:38.297642+00:00", 
            "author": "https://api.launchpad.net/1.0/~justin-fathomdb"
        }, 
        {
            "content": "I've opened a blueprint for discussion of this at the summit:\nhttps://blueprints.launchpad.net/nova/+spec/engineer-in-quality", 
            "date_created": "2011-03-15 04:18:00.322180+00:00", 
            "author": "https://api.launchpad.net/1.0/~justin-fathomdb"
        }, 
        {
            "content": "@Justin: could you update this bug with the result of the discussion ? Like unassign yourself if you're no longer working on that, or mark the bug invalid if it's no longer relevant ?", 
            "date_created": "2011-05-16 12:16:31.653479+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "Apparently not being worked on, please reassign yourself if this is actually in progress.", 
            "date_created": "2011-07-22 07:45:25.096795+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "Not sure this is really valid anymore, Thierry.", 
            "date_created": "2011-07-26 03:07:38.177052+00:00", 
            "author": "https://api.launchpad.net/1.0/~bcwaldon"
        }, 
        {
            "content": "I agree there is little value in keeping this open if nobody works on it. Please reopen if you intend to fix it.", 
            "date_created": "2011-07-26 12:36:57.098312+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }
    ], 
    "closed": "2011-07-26 12:36:58.332244+00:00"
}