{
    "status": "Expired", 
    "last_updated": "2017-08-23 04:18:06.835427+00:00", 
    "description": "Description\n===========\nwhen getting in instance's detail info, AZ info is wrong\n\nSteps to reproduce\n==================\n1.\nin nova.conf, set memcached_servers = None\n\n2.current az info:\nnova aggregate-list\nId name     Availability Zone\n1 cas1-agg  cas1\nmodifiy az info:\nnova aggregate-update 1 cas1-agg cas2\n\n3.get instance az info:\nnova show ID\n\n \nExpected result\n===============\nAZ info is cas2\n\nActual result\n=============\nAZ info is not stable.sometimes AZ is cas1, sometimes is cas2\n\nReason\n===============\nnova-api is multi-processing. When setting memcache server to none, nova-api will cache az in process memory. But nova-api processes caches are not consistent.\nSo I suggest nova-api does not cache az info in process memory.\nRelated file is nova/openstack/common/memorycached.py\nRelated class is Client.", 
    "tags": [], 
    "importance": "Undecided", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1633323", 
    "owner": "None", 
    "id": 1633323, 
    "index": 7750, 
    "openned": "2016-10-14 04:45:37.134505+00:00", 
    "created": "2016-10-14 04:45:37.134505+00:00", 
    "title": "[available-zone]az cachee in process make mistake", 
    "comments": [
        {
            "content": "Description\n===========\nwhen getting in instance's detail info, AZ info is wrong\n\nSteps to reproduce\n==================\n1.\nin nova.conf, set memcached_servers = None\n\n2.current az info:\nnova aggregate-list\nId name     Availability Zone\n1 cas1-agg  cas1\nmodifiy az info:\nnova aggregate-update 1 cas1-agg cas2\n\n3.get instance az info:\nnova show ID\n\n \nExpected result\n===============\nAZ info is cas2\n\nActual result\n=============\nAZ info is not stable.sometimes AZ is cas1, sometimes is cas2\n\nReason\n===============\nnova-api is multi-processing. When setting memcache server to none, nova-api will cache az in process memory. But nova-api processes caches are not consistent.\nSo I suggest nova-api does not cache az info in process memory.\nRelated file is nova/openstack/common/memorycached.py\nRelated class is Client.", 
            "date_created": "2016-10-14 04:45:37.134505+00:00", 
            "author": "https://api.launchpad.net/1.0/~guoyongxhzhf"
        }, 
        {
            "content": "1. which version of your openstack environment?\n2. The memcached_servers option has deprecated in Mitaka for compute, So in my master branch of openstack after Newton the relation options is \n[cache]\nenabled=False\n3.The result follow your step doesn't match your description.The az option of instance detail and the az info of the aggregate is same.\n4.But when i follow the step , the result occurs again:\n  1) nova az list----> internal / nova\n  2) nova aggregate-create agg nova1\n  3) nova aggregate-add-host agg <hostname>    a VM running on the <hostname>\n  4) nova show <vmname>   focused on the az option of vm\n    Excepted result\n    ===============\n    vm az info alway nova1\n    Actual result\n    ===============\n    AZ info of vm is not stable, sometime is nova, sometime is nova1\nI think your <Reason> description is right for above steps. \n\n\n\n\n\n     \n\n\n\n\n ", 
            "date_created": "2016-12-02 01:35:30.345977+00:00", 
            "author": "https://api.launchpad.net/1.0/~cissy.liu"
        }, 
        {
            "content": "As the reporter of this bug hasn't updated the details, marking this bug as incomplete. Please provide the details about which version of your Openstack environment and change the status to new.", 
            "date_created": "2017-01-18 23:02:38.196357+00:00", 
            "author": "https://api.launchpad.net/1.0/~anusha-unnam"
        }, 
        {
            "content": "[Expired for OpenStack Compute (nova) because there has been no activity for 60 days.]", 
            "date_created": "2017-08-23 04:18:03.382034+00:00", 
            "author": "https://api.launchpad.net/1.0/~janitor"
        }
    ], 
    "closed": "2017-08-23 04:18:04.114466+00:00"
}