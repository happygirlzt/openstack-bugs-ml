{
    "status": "Fix Released", 
    "last_updated": "2017-06-16 17:23:35.212748+00:00", 
    "description": "The 'isolate' policy is supposed to function on both hosts with HyperThreading (HT) and those without. The former works, but the latter does not. This appears to be a regression. Results below.\n\n---\n\n# Platform\n\nTesting was conducted on two single-node, Fedora 23-based\n(4.3.5-300.fc23.x86_64) OpenStack instances (built with devstack). The systems\nare a dual-socket, ten core, systems with HT enabled on one and disabled\non the other (2 sockets * 10 cores * 1/2 threads\n= 20/40 \"pCPUs\". 0-9/0-9,20-29 = node0, 10-19/10-19,30-39 = node1).\n\nCommit `8bafc9` of Nova was used.\n\n# Steps\n\n## Create flavors\n\n    $ openstack flavor create pinned.isolate \\\n        --id 103 --ram 2048 --disk 0 --vcpus 4\n    $ openstack flavor set pinned.isolate \\\n        --property \"hw:cpu_policy=dedicated\" \\\n        --property \"hw:cpu_thread_policy=isolate\"\n\n## Validate a HT-enabled node\n\nThis should match the expectations of the spec and provide a single thread\nto guests while avoiding other guests scheduling on the other host\nsibling threads. Therefore, the guest should see four sockets, one core\nper socket, and one thread per core.\n\n    $ openstack server create --flavor=pinned.isolate \\\n        --image=cirros-0.3.4-x86_64-uec --wait test1\n\n    $ sudo virsh list\n     Id    Name                           State\n    ----------------------------------------------------\n     3     instance-00000003              running\n\n    $ sudo virsh dumpxml 3\n    <domain type='kvm' id='3'>\n      <name>instance-00000003</name>\n      ...\n      <vcpu placement='static'>4</vcpu>\n      <cputune>\n        <shares>4096</shares>\n        <vcpupin vcpu='0' cpuset='1'/>\n        <vcpupin vcpu='1' cpuset='0'/>\n        <vcpupin vcpu='2' cpuset='25'/>\n        <vcpupin vcpu='3' cpuset='8'/>\n        <emulatorpin cpuset='0-1,8,25'/>\n      </cputune>\n      <numatune>\n        <memory mode='strict' nodeset='0'/>\n        <memnode cellid='0' mode='strict' nodeset='0'/>\n      </numatune>\n      ...\n      <cpu>\n        <topology sockets='4' cores='1' threads='1'/>\n        <numa>\n          <cell id='0' cpus='0-3' memory='2097152' unit='KiB'/>\n        </numa>\n      </cpu>\n      ...\n    </domain>\n\n    $ openstack server delete test1\n\nNo problems here.\n\n## Validate a HT-disabled node\n\nThis should work exactly the same here as it did on the HT-enabled host,\nminus the reservation of any thread sibling (there aren't any)\n\n    $ openstack server create --flavor=pinned.isolate \\\n        --image=cirros-0.3.4-x86_64-uec --wait test1\n    Error creating server: test1\n\n    Error creating server\n\n    $ openstack server list\n    +--------------------------------------+-------+--------+----------+\n    | ID                                   | Name  | Status | Networks |\n    +--------------------------------------+-------+--------+----------+\n    | 1f212d45-585e-41df-abd7-6abb12ca86a1 | test1 | ERROR  |          |\n    +--------------------------------------+-------+--------+----------+", 
    "tags": [
        "mitaka-backport-potential"
    ], 
    "importance": "Medium", 
    "heat": 20, 
    "link": "https://bugs.launchpad.net/nova/+bug/1550317", 
    "owner": "https://api.launchpad.net/1.0/~stephenfinucane", 
    "id": 1550317, 
    "index": 4458, 
    "openned": "2016-02-26 12:25:21.067908+00:00", 
    "created": "2016-02-26 12:25:21.067908+00:00", 
    "title": "'hw:cpu_thread_policy=isolate' does not schedule on non-HT hosts", 
    "comments": [
        {
            "content": "The 'isolate' policy is supposed to function on both hosts with HyperThreading (HT) and those without. The former works, but the latter does not. This appears to be a regression. Results below.\n\n---\n\n# Platform\n\nTesting was conducted on two single-node, Fedora 23-based\n(4.3.5-300.fc23.x86_64) OpenStack instances (built with devstack). The systems\nare a dual-socket, ten core, systems with HT enabled on one and disabled\non the other (2 sockets * 10 cores * 1/2 threads\n= 20/40 \"pCPUs\". 0-9/0-9,20-29 = node0, 10-19/10-19,30-39 = node1).\n\nCommit `8bafc9` of Nova was used.\n\n# Steps\n\n## Create flavors\n\n    $ openstack flavor create pinned.isolate \\\n        --id 103 --ram 2048 --disk 0 --vcpus 4\n    $ openstack flavor set pinned.isolate \\\n        --property \"hw:cpu_policy=dedicated\" \\\n        --property \"hw:cpu_thread_policy=isolate\"\n\n## Validate a HT-enabled node\n\nThis should match the expectations of the spec and provide a single thread\nto guests while avoiding other guests scheduling on the other host\nsibling threads. Therefore, the guest should see four sockets, one core\nper socket, and one thread per core.\n\n    $ openstack server create --flavor=pinned.isolate \\\n        --image=cirros-0.3.4-x86_64-uec --wait test1\n\n    $ sudo virsh list\n     Id    Name                           State\n    ----------------------------------------------------\n     3     instance-00000003              running\n\n    $ sudo virsh dumpxml 3\n    <domain type='kvm' id='3'>\n      <name>instance-00000003</name>\n      ...\n      <vcpu placement='static'>4</vcpu>\n      <cputune>\n        <shares>4096</shares>\n        <vcpupin vcpu='0' cpuset='1'/>\n        <vcpupin vcpu='1' cpuset='0'/>\n        <vcpupin vcpu='2' cpuset='25'/>\n        <vcpupin vcpu='3' cpuset='8'/>\n        <emulatorpin cpuset='0-1,8,25'/>\n      </cputune>\n      <numatune>\n        <memory mode='strict' nodeset='0'/>\n        <memnode cellid='0' mode='strict' nodeset='0'/>\n      </numatune>\n      ...\n      <cpu>\n        <topology sockets='4' cores='1' threads='1'/>\n        <numa>\n          <cell id='0' cpus='0-3' memory='2097152' unit='KiB'/>\n        </numa>\n      </cpu>\n      ...\n    </domain>\n\n    $ openstack server delete test1\n\nNo problems here.\n\n## Validate a HT-disabled node\n\nThis should work exactly the same here as it did on the HT-enabled host,\nminus the reservation of any thread sibling (there aren't any)\n\n    $ openstack server create --flavor=pinned.isolate \\\n        --image=cirros-0.3.4-x86_64-uec --wait test1\n    Error creating server: test1\n\n    Error creating server\n\n    $ openstack server list\n    +--------------------------------------+-------+--------+----------+\n    | ID                                   | Name  | Status | Networks |\n    +--------------------------------------+-------+--------+----------+\n    | 1f212d45-585e-41df-abd7-6abb12ca86a1 | test1 | ERROR  |          |\n    +--------------------------------------+-------+--------+----------+", 
            "date_created": "2016-02-26 12:25:21.067908+00:00", 
            "author": "https://api.launchpad.net/1.0/~stephenfinucane"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/285321", 
            "date_created": "2016-02-26 14:17:51.103493+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/285321\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=0b2e34f92507fd490faaec3285049b28446dc94c\nSubmitter: Jenkins\nBranch:    master\n\ncommit 0b2e34f92507fd490faaec3285049b28446dc94c\nAuthor: Stephen Finucane <email address hidden>\nDate:   Fri Feb 26 13:07:56 2016 +0000\n\n    virt/hardware: Fix 'isolate' case on non-SMT hosts\n    \n    The 'isolate' policy is supposed to function on both hosts with an\n    SMT architecture (e.g. HyperThreading) and those without. The former\n    is true, but the latter is broken due to a an underlying implementation\n    detail in how vCPUs are \"packed\" onto pCPUs.\n    \n    The '_pack_instance_onto_cores' function expects to work with a list of\n    sibling sets. Since non-SMT hosts don't have siblings, the function is\n    being given a list of all cores as one big sibling set. However, this\n    conflicts with the idea that, in the 'isolate' case, only one sibling\n    from each sibling set should be used. Using one sibling from the one\n    available sibling set means it is not possible to schedule instances\n    with more than one vCPU.\n    \n    Resolve this mismatch by instead providing the function with a list of\n    multiple sibling sets, each containing a single core.\n    \n    This also resolves another bug. When booting instances on a non-HT\n    host, the resulting NUMA topology should not define threads. By\n    correctly considering the cores on these systems as non-siblings,\n    the resulting instance topology will contain multiple cores with only\n    a single thread in each.\n    \n    Change-Id: I2153f25fdb6382ada8e62fddf4215d9a0e3a6aa7\n    Closes-bug: #1550317\n    Closes-bug: #1417723\n", 
            "date_created": "2016-05-11 22:28:27.313734+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/nova 14.0.0.0b1 development milestone.", 
            "date_created": "2016-06-02 19:33:50.959176+00:00", 
            "author": "https://api.launchpad.net/1.0/~dims-v"
        }, 
        {
            "content": "Fix proposed to branch: stable/mitaka\nReview: https://review.openstack.org/326944", 
            "date_created": "2016-06-08 09:20:45.161301+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/326944\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=57638a8c83f98a8c139378b3b1e920b4f1c49a95\nSubmitter: Jenkins\nBranch:    stable/mitaka\n\ncommit 57638a8c83f98a8c139378b3b1e920b4f1c49a95\nAuthor: Stephen Finucane <email address hidden>\nDate:   Fri Feb 26 13:07:56 2016 +0000\n\n    virt/hardware: Fix 'isolate' case on non-SMT hosts\n    \n    The 'isolate' policy is supposed to function on both hosts with an\n    SMT architecture (e.g. HyperThreading) and those without. The former\n    is true, but the latter is broken due to a an underlying implementation\n    detail in how vCPUs are \"packed\" onto pCPUs.\n    \n    The '_pack_instance_onto_cores' function expects to work with a list of\n    sibling sets. Since non-SMT hosts don't have siblings, the function is\n    being given a list of all cores as one big sibling set. However, this\n    conflicts with the idea that, in the 'isolate' case, only one sibling\n    from each sibling set should be used. Using one sibling from the one\n    available sibling set means it is not possible to schedule instances\n    with more than one vCPU.\n    \n    Resolve this mismatch by instead providing the function with a list of\n    multiple sibling sets, each containing a single core.\n    \n    This also resolves another bug. When booting instances on a non-HT\n    host, the resulting NUMA topology should not define threads. By\n    correctly considering the cores on these systems as non-siblings,\n    the resulting instance topology will contain multiple cores with only\n    a single thread in each.\n    \n    Change-Id: I2153f25fdb6382ada8e62fddf4215d9a0e3a6aa7\n    Closes-bug: #1550317\n    Closes-bug: #1417723\n    (cherry picked from commit 0b2e34f92507fd490faaec3285049b28446dc94c)\n", 
            "date_created": "2016-08-03 22:32:59.935251+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/nova 13.1.1 release.", 
            "date_created": "2016-08-09 18:25:21.649553+00:00", 
            "author": "https://api.launchpad.net/1.0/~doug-hellmann"
        }
    ], 
    "closed": "2016-05-11 22:28:24.650379+00:00"
}