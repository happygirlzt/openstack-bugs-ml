{
    "status": "Invalid", 
    "last_updated": "2017-06-19 10:38:15.666032+00:00", 
    "description": "Description\n===========\n\nWhen I use horizon UI to update name of an existing subnet (through \"Edit Subnet\" dialog), the relevant message that gets posted to nova message queue (RabbitMQ) is inconsistent in both \"event_type\" field and structure in general.\n\n\nSteps to reproduce\n==================\nPrerequisite: Project should contain a network.\n\nIn Horizon UI:\n1. In sidebar go to Project -> Network -> Networks.\n2. In Subnets list click \"Create subnet\", fill the details and bind it to an existing network, click Next -> Create.\n3. On networks screen click \"Edit Subnet\" button next to newly created subnet.\n4. Change name to a new value, click Next -> Save.\nRepeat steps 3-4 at least 3 times (preferably, each time use a previously unused name).\n\nFor \"Expected/actual result\" sections I'll refer to the subnet as \"test-subnet\". The sequence of updated names is the following:\n\"test-subnet\" -> \"test-subnet1\" -> \"test-subnet2\" -> \"test-subnet3\" -> \"test-subnet4\" -> \"test-subnet5\" -> \"test-subnet6\"\n\n\nExpected result\n===============\n\nFor each update a message is posted to RabbitMQ of the following structure (only important fields specified): \n\n{\n  \"event_type\": \"subnet.update.end\",\n  \"payload\": {\n    \"subnet\": {\n      \"id\": uuid of subnet,\n      \"name\": updated subnet name \n    }\n  }\n}\n\n\nActual result\n=============\nFor these consequential updates the pattern observed is the following:\n\n1) \"test-subnet\" -> \"test-subnet1\"\n{\n  \"event_type\": \"subnet.update.end\",\n  \"payload\": {\n    \"subnet\": {\n      \"id\": uuid of subnet,\n      \"name\": \"test-subnet1\"\n    }\n  }\n}\n\n2) \"test-subnet1\" -> \"test-subnet2\"\n{\n  \"event_type\": \"subnet.update.start\" (different event type),\n  \"payload\": {\n    \"id\": uuid of subnet (note the location of field)\n    \"subnet\": {\n      \"name\": \"test-subnet2\" (note the absence of id on this level)\n    }\n  }\n}\n\n\n3) \"test-subnet2\" -> \"test-subnet3\"\nNo message was caught at all\n\n4) \"test-subnet3\" -> \"test-subnet4\"\n{\n  \"event_type\": \"subnet.update.end\",\n  \"payload\": {\n    \"subnet\": {\n      \"id\": uuid of subnet,\n      \"name\": \"test-subnet4\"\n    }\n  }\n}\n// The same as in p.1, except for the new name\n5) \"test-subnet4\" -> \"test-subnet5\"\n// The same as in p.2, except for the new name\n6) \"test-subnet5\" -> \"test-subnet6\"\n// The same as in p.3\n\nThis cycle repeats in this very order indefinitely.\n\n\nEnvironment\n===========\n1. Mirantis-Mitaka (nova version 13.1.2)\n2. libvirt+KVM\n3. LVM\n4. neutron with OVS\n5. Python AMQP listener - kombu 4.0.2", 
    "tags": [
        "notifications"
    ], 
    "importance": "Undecided", 
    "heat": 8, 
    "link": "https://bugs.launchpad.net/nova/+bug/1696759", 
    "owner": "None", 
    "id": 1696759, 
    "index": 8157, 
    "openned": "2017-06-08 14:05:22.007221+00:00", 
    "created": "2017-06-08 14:05:22.007221+00:00", 
    "title": "Inconsistent notifications after subnet update", 
    "comments": [
        {
            "content": "Description\n===========\n\nWhen I use horizon UI to update name of an existing subnet (through \"Edit Subnet\" dialog), the relevant message that gets posted to nova message queue (RabbitMQ) is inconsistent in both \"event_type\" field and structure in general.\n\n\nSteps to reproduce\n==================\nPrerequisite: Project should contain a network.\n\nIn Horizon UI:\n1. In sidebar go to Project -> Network -> Networks.\n2. In Subnets list click \"Create subnet\", fill the details and bind it to an existing network, click Next -> Create.\n3. On networks screen click \"Edit Subnet\" button next to newly created subnet.\n4. Change name to a new value, click Next -> Save.\nRepeat steps 3-4 at least 3 times (preferably, each time use a previously unused name).\n\nFor \"Expected/actual result\" sections I'll refer to the subnet as \"test-subnet\". The sequence of updated names is the following:\n\"test-subnet\" -> \"test-subnet1\" -> \"test-subnet2\" -> \"test-subnet3\" -> \"test-subnet4\" -> \"test-subnet5\" -> \"test-subnet6\"\n\n\nExpected result\n===============\n\nFor each update a message is posted to RabbitMQ of the following structure (only important fields specified): \n\n{\n  \"event_type\": \"subnet.update.end\",\n  \"payload\": {\n    \"subnet\": {\n      \"id\": uuid of subnet,\n      \"name\": updated subnet name \n    }\n  }\n}\n\n\nActual result\n=============\nFor these consequential updates the pattern observed is the following:\n\n1) \"test-subnet\" -> \"test-subnet1\"\n{\n  \"event_type\": \"subnet.update.end\",\n  \"payload\": {\n    \"subnet\": {\n      \"id\": uuid of subnet,\n      \"name\": \"test-subnet1\"\n    }\n  }\n}\n\n2) \"test-subnet1\" -> \"test-subnet2\"\n{\n  \"event_type\": \"subnet.update.start\" (different event type),\n  \"payload\": {\n    \"id\": uuid of subnet (note the location of field)\n    \"subnet\": {\n      \"name\": \"test-subnet2\" (note the absence of id on this level)\n    }\n  }\n}\n\n\n3) \"test-subnet2\" -> \"test-subnet3\"\nNo message was caught at all\n\n4) \"test-subnet3\" -> \"test-subnet4\"\n{\n  \"event_type\": \"subnet.update.end\",\n  \"payload\": {\n    \"subnet\": {\n      \"id\": uuid of subnet,\n      \"name\": \"test-subnet4\"\n    }\n  }\n}\n// The same as in p.1, except for the new name\n5) \"test-subnet4\" -> \"test-subnet5\"\n// The same as in p.2, except for the new name\n6) \"test-subnet5\" -> \"test-subnet6\"\n// The same as in p.3\n\nThis cycle repeats in this very order indefinitely.\n\n\nEnvironment\n===========\n1. Mirantis-Mitaka (nova version 13.1.2)\n2. libvirt+KVM\n3. LVM\n4. neutron with OVS\n5. Python AMQP listener - kombu 4.0.2", 
            "date_created": "2017-06-08 14:05:22.007221+00:00", 
            "author": "https://api.launchpad.net/1.0/~abashinos"
        }, 
        {
            "content": "Reassigning to the Neutron project as the notification is emitted by it.", 
            "date_created": "2017-06-09 15:20:29.741010+00:00", 
            "author": "https://api.launchpad.net/1.0/~sylvain-bauza"
        }, 
        {
            "content": "Can you test this on master?  I believe the message should now contain 'original_subnet' and 'subnet' fields.", 
            "date_created": "2017-06-09 16:20:28.828097+00:00", 
            "author": "https://api.launchpad.net/1.0/~brian-haley"
        }, 
        {
            "content": "Hi Brian.\nA large part of the issue is that some messages are not posted at all (as described in issue text), some have event_type \"subnet.update.start\" and the rest have event_type \"subnet.update.end\". This is a larger problem than placement of fields inside the message.\nIs this also fixed on master?\nThanks.", 
            "date_created": "2017-06-13 16:13:43.706378+00:00", 
            "author": "https://api.launchpad.net/1.0/~abashinos"
        }, 
        {
            "content": "Do you have something else taking notifications off of the queue?\n\nEach API request should result in both a subnet.update.start and a subnet.update.end event. However, the missing events makes it look like there is another subscriber on the queue removing the events.", 
            "date_created": "2017-06-19 10:38:14.756215+00:00", 
            "author": "https://api.launchpad.net/1.0/~kevinbenton"
        }
    ], 
    "closed": "2017-06-09 15:20:41.554051+00:00"
}