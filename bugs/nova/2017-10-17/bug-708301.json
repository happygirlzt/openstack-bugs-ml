{
    "status": "Fix Released", 
    "last_updated": "2011-02-07 13:58:12.871971+00:00", 
    "description": "Using build revision 623.\n\nI get the following stack trace when running a euca-describe-images.\n\nGetting the following stack trace in nova-api.log when trying to use the S3 API.\n\n2011-01-26 20:21:35,068 AUDIT nova.api [7C2Z8EPC8WZF9OG9EPLK admin admin] Authenticated Request For admin:admin)\n2011-01-26 20:21:35,069 DEBUG nova.api [-] action: DescribeImages from MainProcess (pid=12033) __call__ /usr/lib/pymodules/python2.6/nova/api/ec2/__init__.py:211\n2011-01-26 20:21:35,069 DEBUG nova.api [-] arg: Owner.1         val: self from MainProcess (pid=12033) __call__ /usr/lib/pymodules/python2.6/nova/api/ec2/__init__.py:213\n2011-01-26 20:21:35,393 ERROR nova.api [7C2Z8EPC8WZF9OG9EPLK admin admin] Unexpected error raised: global name '_fix_image_id' is not defined\n(nova.api): TRACE: Traceback (most recent call last):\n(nova.api): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/api/ec2/__init__.py\", line 315, in __call__\n(nova.api): TRACE:     result = api_request.invoke(context)\n(nova.api): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/api/ec2/apirequest.py\", line 127, in invoke\n(nova.api): TRACE:     result = method(context, **args)\n(nova.api): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/api/ec2/cloud.py\", line 844, in describe_images\n(nova.api): TRACE:     images = self.image_service.index(context)\n(nova.api): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/image/s3.py\", line 82, in index", 
    "tags": [], 
    "importance": "Undecided", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/708301", 
    "owner": "https://api.launchpad.net/1.0/~sandy-walsh", 
    "id": 708301, 
    "index": 3283, 
    "openned": "2011-01-26 21:07:46.574070+00:00", 
    "created": "2011-01-26 21:07:46.574070+00:00", 
    "title": "s3.py global name '_fix_image_id' is not defined", 
    "comments": [
        {
            "content": "Using build revision 623.\n\nI get the following stack trace when running a euca-describe-images.\n\nGetting the following stack trace in nova-api.log when trying to use the S3 API.\n\n2011-01-26 20:21:35,068 AUDIT nova.api [7C2Z8EPC8WZF9OG9EPLK admin admin] Authenticated Request For admin:admin)\n2011-01-26 20:21:35,069 DEBUG nova.api [-] action: DescribeImages from MainProcess (pid=12033) __call__ /usr/lib/pymodules/python2.6/nova/api/ec2/__init__.py:211\n2011-01-26 20:21:35,069 DEBUG nova.api [-] arg: Owner.1         val: self from MainProcess (pid=12033) __call__ /usr/lib/pymodules/python2.6/nova/api/ec2/__init__.py:213\n2011-01-26 20:21:35,393 ERROR nova.api [7C2Z8EPC8WZF9OG9EPLK admin admin] Unexpected error raised: global name '_fix_image_id' is not defined\n(nova.api): TRACE: Traceback (most recent call last):\n(nova.api): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/api/ec2/__init__.py\", line 315, in __call__\n(nova.api): TRACE:     result = api_request.invoke(context)\n(nova.api): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/api/ec2/apirequest.py\", line 127, in invoke\n(nova.api): TRACE:     result = method(context, **args)\n(nova.api): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/api/ec2/cloud.py\", line 844, in describe_images\n(nova.api): TRACE:     images = self.image_service.index(context)\n(nova.api): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/image/s3.py\", line 82, in index", 
            "date_created": "2011-01-26 21:07:46.574070+00:00", 
            "author": "https://api.launchpad.net/1.0/~dan-prince"
        }, 
        {
            "content": "Should be fixed in lp:~dan-prince/nova/fix_image_id_s3.", 
            "date_created": "2011-01-26 21:15:57.810438+00:00", 
            "author": "https://api.launchpad.net/1.0/~dan-prince"
        }, 
        {
            "content": "[dan.prince@dovetail nova-fix_image_id_s3]$ bzr diff -r623\n=== modified file 'nova/image/s3.py'\n--- nova/image/s3.py\t2011-01-25 21:06:05 +0000\n+++ nova/image/s3.py\t2011-01-26 21:11:22 +0000\n@@ -65,7 +65,7 @@\n                                  'image_id': image_id}))\n         return image_id\n \n-    def _fix_image_id(images):\n+    def _fix_image_id(self, images):\n         \"\"\"S3 has imageId but OpenStack wants id\"\"\"\n         for image in images:\n             if 'imageId' in image:\n@@ -79,7 +79,7 @@\n         response = self._conn(context).make_request(\n             method='GET',\n             bucket='_images')\n-        return _fix_image_id(json.loads(response.read()))\n+        return self._fix_image_id(json.loads(response.read()))\n \n     def show(self, context, image_id):\n         \"\"\"return a image object if the context has permissions\"\"\"\n", 
            "date_created": "2011-01-26 21:19:17.937575+00:00", 
            "author": "https://api.launchpad.net/1.0/~dan-prince"
        }, 
        {
            "content": "The initial merge request failed because I was not in 'Authors'. I added myself to the Authors file and pushed fix_image_id_s3 again.\n\nShould be all set.", 
            "date_created": "2011-01-26 23:45:02.976085+00:00", 
            "author": "https://api.launchpad.net/1.0/~dan-prince"
        }
    ], 
    "closed": "2011-02-07 13:58:11.175202+00:00"
}