{
    "status": "Expired", 
    "last_updated": "2017-08-08 04:17:28.089231+00:00", 
    "description": "Description\n===========\n\nnova-compute still report service up when libvirtd stop response,and it's fake  up  state easily make the api request failed.\n\nnotice, we can see the libvirtd process is running but it have no response to client request.\n\n\nSteps to reproduce\n==================\n\nit's hard to reproduce the libvirtd  death, but it easy to make libvirtd stop response, \nu can use gdb attach libvirtd process to simulate the issue:\n\ngdb -p `pidof libvirtd`\n\n\nExpected result\n===============\n\nnova-compute should report the down state if encounter libvirtd failed\n\n| 9  | nova-compute     | zztest04 | nova     | disabled | up    | 2017-05-31T11:18:58.000000 | AUTO: Connection to libvirt lost: 1 |\n\n\n\nActual result\n=============\n\nnova-compute not sensitive enough and still report state up.\n\n| 9  | nova-compute     | zztest04 | nova     | enabled | up    | 2017-05-31T11:18:58.000000 | -               |\n\nEnvironment\n===========\n\n\n[root@zztest04 nova]# git describe --tags\n15.0.0.0rc1-313-g5cf6bbf \n\ni think this bug existed widely no matter what nova version is.\n\n\nReason\n===========\n\nnova-compute collect libvirtd event through Python libvirt module, and  there are no event dispatched to compute eventlet handler when libvirtd dead.\n\nplease read more from libvirt guide about event handling:\nhttp://libvirt.org/docs/libvirt-appdev-guide-python/en-US/html/libvirt_application_development_guide_using_python-Events_and_Timers.html", 
    "tags": [
        "libvirt"
    ], 
    "importance": "Undecided", 
    "heat": 8, 
    "link": "https://bugs.launchpad.net/nova/+bug/1694584", 
    "owner": "None", 
    "id": 1694584, 
    "index": 8137, 
    "openned": "2017-05-31 04:00:54.467072+00:00", 
    "created": "2017-05-31 04:00:54.467072+00:00", 
    "title": "nova-compute still report service up when libvirtd stop response", 
    "comments": [
        {
            "content": "Description\n===========\n\nnova-compute still report service up when libvirtd stop response,and it's fake  up  state easily make the api request failed.\n\nnotice, we can see the libvirtd process is running but it have no response to client request.\n\n\nSteps to reproduce\n==================\n\nit's hard to reproduce the libvirtd  death, but it easy to make libvirtd stop response, \nu can use gdb attach libvirtd process to simulate the issue:\n\ngdb -p `pidof libvirtd`\n\n\nExpected result\n===============\n\nnova-compute should report the down state if encounter libvirtd failed\n\n| 9  | nova-compute     | zztest04 | nova     | disabled | up    | 2017-05-31T11:18:58.000000 | AUTO: Connection to libvirt lost: 1 |\n\n\n\nActual result\n=============\n\nnova-compute not sensitive enough and still report state up.\n\n| 9  | nova-compute     | zztest04 | nova     | enabled | up    | 2017-05-31T11:18:58.000000 | -               |\n\nEnvironment\n===========\n\n\n[root@zztest04 nova]# git describe --tags\n15.0.0.0rc1-313-g5cf6bbf \n\ni think this bug existed widely no matter what nova version is.\n\n\nReason\n===========\n\nnova-compute collect libvirtd event through Python libvirt module, and  there are no event dispatched to compute eventlet handler when libvirtd dead.\n\nplease read more from libvirt guide about event handling:\nhttp://libvirt.org/docs/libvirt-appdev-guide-python/en-US/html/libvirt_application_development_guide_using_python-Events_and_Timers.html", 
            "date_created": "2017-05-31 04:00:54.467072+00:00", 
            "author": "https://api.launchpad.net/1.0/~zzfancy"
        }, 
        {
            "content": "The libvirt driver will auto-disable the nova-compute service when it receives an event from libvirt that it's stopping/crashed.\n\nhttps://github.com/openstack/nova/blob/046149825c5d6d5ac56a5f5d4498c996dfe8c7ee/nova/virt/libvirt/host.py#L412\n\nhttps://github.com/openstack/nova/blob/046149825c5d6d5ac56a5f5d4498c996dfe8c7ee/nova/virt/libvirt/driver.py#L3469\n\nBut it sounds like in your case, libvirt isn't sending a down connection event, or failing to connect, but it's hanging or something else? Does the connection get made but all requests to it fail? Do you have an example error from the nova-compute log?", 
            "date_created": "2017-06-02 13:09:14.161517+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "We definitely seem to be handling libvirt crashes (it triggers gate fails from time to time). Are you saying there is another failure mode where libvirt just locks up? Are there details on the environment and libvirt version to figure out why that's happening?", 
            "date_created": "2017-06-08 12:41:12.797846+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "[Expired for OpenStack Compute (nova) because there has been no activity for 60 days.]", 
            "date_created": "2017-08-08 04:17:25.510767+00:00", 
            "author": "https://api.launchpad.net/1.0/~janitor"
        }
    ], 
    "closed": "2017-08-08 04:17:26.078827+00:00"
}