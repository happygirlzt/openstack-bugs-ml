{
    "status": "Fix Released", 
    "last_updated": "2014-05-19 09:04:20.897447+00:00", 
    "description": "In the libguestfs driver for Nova VFS, certain errors in the setup method can cause a libguestfs process to remain running, even after the VM is terminated and/or the method that spawned the libguestfs VM has finished.  These processes become zombies when killed, and can only be destroyed by restarting nova-compute.\n\nIn the particular issue encountered, when using gluster as a cinder backend and attempting to launch a VM before adding a keypair, the error would occur.  However, it is feasible that the error could occur elsewhere.", 
    "tags": [
        "in-stable-havana", 
        "libguestfs", 
        "libvirt"
    ], 
    "importance": "Undecided", 
    "heat": 38, 
    "link": "https://bugs.launchpad.net/nova/+bug/1270304", 
    "owner": "https://api.launchpad.net/1.0/~sross-7", 
    "id": 1270304, 
    "index": 5754, 
    "openned": "2014-01-17 21:27:50.119731+00:00", 
    "created": "2014-01-17 21:27:50.119731+00:00", 
    "title": "error in guestfs driver setup causes orphaned libguestfs processes", 
    "comments": [
        {
            "content": "In the libguestfs driver for Nova VFS, certain errors in the setup method can cause a libguestfs process to remain running, even after the VM is terminated and/or the method that spawned the libguestfs VM has finished.  These processes become zombies when killed, and can only be destroyed by restarting nova-compute.\n\nIn the particular issue encountered, when using gluster as a cinder backend and attempting to launch a VM before adding a keypair, the error would occur.  However, it is feasible that the error could occur elsewhere.", 
            "date_created": "2014-01-17 21:27:50.119731+00:00", 
            "author": "https://api.launchpad.net/1.0/~sross-7"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/67586", 
            "date_created": "2014-01-17 21:41:48.413550+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Here are the qemu-kvm zombie processes which I'm seeing as a result of this same issue:\n\n/usr/libexec/qemu-kvm -global virtio-blk-pci.scsi=off -nodefconfig -nodefaults -nographic -machine accel=kvm:tcg -cpu host,+kvmclock -m 500 -no-reboot -kernel /var/tmp/.guestfs-162/kernel.16420 -initrd /var/tmp/.guestfs-162/initrd.16420 -device virtio-scsi-pci,id=scsi -drive file=/var/lib/nova/instances/c1c6ab55-b09a-498e-b007-47195911b084/disk,cache=none,format=qcow2,id=hd0,if=none -device scsi-hd,drive=hd0 -drive file=/var/tmp/.guestfs-162/root.16420,snapshot=on,id=appliance,if=none,cache=unsafe -device scsi-hd,drive=appliance -device virtio-serial -serial stdio -device sga -chardev socket,path=/tmp/libguestfs9AiaSX/guestfsd.sock,id=channel0 -device virtserialport,chardev=channel0,name=org.libguestfs.channel.0 -append panic=1 console=ttyS0 udevtimeout=600 no_timer_check acpi=off printk.time=1 cgroup_disable=memory root=/dev/sdb selinux=0 TERM=xterm\n\nSolly, can you restore your abandoned changes in Gerrit? I don't know why that gate failed but your patch LGTM and it fixed my issue.", 
            "date_created": "2014-01-29 16:41:17.435283+00:00", 
            "author": "https://api.launchpad.net/1.0/~david-wittman"
        }, 
        {
            "content": "@david-wittman: the change has been restored (it was a common gate bug).  Hopefully I someone can review it soon.", 
            "date_created": "2014-02-11 21:54:08.581893+00:00", 
            "author": "https://api.launchpad.net/1.0/~sross-7"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/67586\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=fa62cfe15fd6dddecf657966d166a2d3a2bdd317\nSubmitter: Jenkins\nBranch:    master\n\ncommit fa62cfe15fd6dddecf657966d166a2d3a2bdd317\nAuthor: Solly Ross <email address hidden>\nDate:   Fri Jan 17 16:43:48 2014 -0500\n\n    Explicity teardown on error in libguestfs setup()\n    \n    Previously, in the setup method of the libguestfs driver\n    for Nova's VFS, on an error the handle object was simply\n    dereferenced (set to None), and then an new error was thrown.\n    This relied on an implicit close() on the handle being called\n    by GC.  However, in some cases the setup progresses far enough\n    that the implicit close is not enough, and leaves an \"orphaned\"\n    libguestfs VM.\n    \n    Now, the teardown() method is called explicitly, which ensures that\n    no \"orphaned\" VMs are left around in case of an error.\n    \n    Change-Id: I7fbe470046ce6c76bc13d77d8df360351a3ef715\n    Fixes: bug #1270304\n", 
            "date_created": "2014-03-04 00:40:17.744924+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: stable/havana\nReview: https://review.openstack.org/77914", 
            "date_created": "2014-03-04 15:41:48.543167+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/77914\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=06dd47f3dcdd33da62a41e6c8a238257ff38ea62\nSubmitter: Jenkins\nBranch:    stable/havana\n\ncommit 06dd47f3dcdd33da62a41e6c8a238257ff38ea62\nAuthor: Solly Ross <email address hidden>\nDate:   Fri Jan 17 16:43:48 2014 -0500\n\n    Explicity teardown on error in libguestfs setup()\n    \n    Previously, in the setup method of the libguestfs driver\n    for Nova's VFS, on an error the handle object was simply\n    dereferenced (set to None), and then an new error was thrown.\n    This relied on an implicit close() on the handle being called\n    by GC.  However, in some cases the setup progresses far enough\n    that the implicit close is not enough, and leaves an \"orphaned\"\n    libguestfs VM.\n    \n    Now, the teardown() method is called explicitly, which ensures that\n    no \"orphaned\" VMs are left around in case of an error.\n    \n    Change-Id: I7fbe470046ce6c76bc13d77d8df360351a3ef715\n    Fixes: bug #1270304\n    (cherry picked from commit fa62cfe15fd6dddecf657966d166a2d3a2bdd317)\n", 
            "date_created": "2014-03-19 13:53:53.939267+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "I can still see qemu-kvm process not exit using stable icehouse code, which also makes nova process hang. Can anybody have a look at https://bugs.launchpad.net/nova/+bug/1313477 ?\n\nIs there any way to diagnose why qemu-kvm process fork by libguestfs does not exit?", 
            "date_created": "2014-05-19 09:04:19.754080+00:00", 
            "author": "https://api.launchpad.net/1.0/~zhaoqin"
        }
    ], 
    "closed": "2014-03-05 13:21:06.986262+00:00"
}