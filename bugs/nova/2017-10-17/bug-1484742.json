{
    "status": "Invalid", 
    "last_updated": "2015-08-17 14:50:08.398856+00:00", 
    "description": "There seems to be a bug in the NUMATopologyFilter where it doesn't properly account for cpu_allocation_ratio or ram_allocation_ratio.  (Detected on stable/kilo, not sure if it applies to current master.)\n\nTo reproduce:\n\n1) Create a flavor with a moderate number of CPUs (5, for example) and enable hugepages by setting   \"hw:mem_page_size=2048\" in the flavor extra specs.  Do not specify dedicated CPUs on the flavor.\n\n2) Ensure that the available compute nodes have fewer CPUs free than the number of CPUs in the flavor above.\n\n3) Ensure that the \"cpu_allocation_ratio\" is big enough that \"num_free_cpus * cpu_allocation_ratio\" is more than the number of CPUs in the flavor above.\n\n4) Enable the NUMATopologyFilter for the nova filter scheduler.\n\n5) Try to boot an instance with the specified flavor.\n\nThis should pass, because we're not using dedicated CPUs and so the \"cpu_allocation_ratio\" should apply.  However, the NUMATopologyFilter returns 0 hosts.\n\nIt seems like the NUMATopologyFilter is failing to properly account for the cpu_allocation_ratio when checking whether an instance can fit onto a given host.", 
    "tags": [
        "compute", 
        "scheduler"
    ], 
    "importance": "Undecided", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1484742", 
    "owner": "https://api.launchpad.net/1.0/~cbf123", 
    "id": 1484742, 
    "index": 6974, 
    "openned": "2015-08-14 00:23:49.982133+00:00", 
    "created": "2015-08-14 00:23:49.982133+00:00", 
    "title": "NUMATopologyFilter doesn't account for CPU/RAM overcommit", 
    "comments": [
        {
            "content": "There seems to be a bug in the NUMATopologyFilter where it doesn't properly account for cpu_allocation_ratio.\n\nTo reproduce:\n\n1) Create a flavor with a moderate number of CPUs (5, for example) and enable hugepages by setting   \"hw:mem_page_size=2048\" in the flavor extra specs.  Do not specify dedicated CPUs on the flavor.\n\n2) Ensure that the available compute nodes have fewer CPUs free than the number of CPUs in the flavor above.\n\n3) Ensure that the \"cpu_allocation_ratio\" is big enough that \"num_free_cpus * cpu_allocation_ratio\" is more than the number of CPUs in the flavor above.\n\n4) Enable the NUMATopologyFilter for the nova filter scheduler.\n\n5) Try to boot an instance with the specified flavor.\n\nThis should pass, because we're not using dedicated CPUs and so the \"cpu_allocation_ratio\" should apply.  However, the NUMATopologyFilter returns 0 hosts.\n\nIt seems like the NUMATopologyFilter is failing to properly account for the cpu_allocation_ratio when checking whether an instance can fit onto a given host.", 
            "date_created": "2015-08-14 00:23:49.982133+00:00", 
            "author": "https://api.launchpad.net/1.0/~cbf123"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/213268", 
            "date_created": "2015-08-14 17:43:57.117681+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "As commented on the code review:\n\nThe idea was that it's OK to have overcommit, but an instance larger than a NUMA node should _never_ land on that NUMA noda, as it would effectively be overcommiting against itself.\n\nThis is not how overcommit on host level works - but it should probably get fixed there as it is questionable whether overcommitting an instance against itself makes sense. So maybe we want to have a new bug for that and close this one?\n\nIf you are seeing the opposite, that the instance is not larger than the whole of NUMA node itself. but still won't get considered for CPU overcommit with non-pinned NUMA requested - than that's a different bug and your patch won't fix it and we should investigate more.\n\n\n\n", 
            "date_created": "2015-08-15 07:39:21.003886+00:00", 
            "author": "https://api.launchpad.net/1.0/~ndipanov"
        }, 
        {
            "content": "I've been testing the case where a single instance is larger than the number of host logical CPUs, so that would fit with your explanation.  I can see why one might chose to implement that, though as you say it's not great to have different overcommit behaviour depending on whether or not the NUMA filter is involved.\n\nI may do as you suggest and open up a separate bug specifically addressing the behaviour difference.", 
            "date_created": "2015-08-17 05:12:08.854121+00:00", 
            "author": "https://api.launchpad.net/1.0/~cbf123"
        }, 
        {
            "content": "Closing as \"invalid\" based on Nikola's comments above.  Bug 1485631 has been opened to unify the logic between the two cases.", 
            "date_created": "2015-08-17 14:48:47.560868+00:00", 
            "author": "https://api.launchpad.net/1.0/~cbf123"
        }, 
        {
            "content": "Change abandoned by Chris Friesen (<email address hidden>) on branch: master\nReview: https://review.openstack.org/213268\nReason: Abandoning change based on Nikola's comments.  Bug 1485631 has been opened to unify the logic between the NUMA-topology case and the no-NUMA-topoology case.", 
            "date_created": "2015-08-17 14:50:07.692142+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2015-08-17 14:37:06.116931+00:00"
}