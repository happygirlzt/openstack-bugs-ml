{
    "status": "Invalid", 
    "last_updated": "2017-02-21 20:22:18.803607+00:00", 
    "description": "Latest Kilo code\n\n\nReproduce steps:\n\n1. Do not define any host aggregate. AZ of host is 'nova'. Boot one instance named 'zhaoqin-nova' whose AZ is 'nova'\n\n2. Create host aggregate 'zhaoqin' whose AZ is 'zhaoqin-az'. Add host to 'zhaoqin' aggregate.  Now AZ of instance 'zhaoqin-nova' in db is still 'nova'; and 'nova list' displays AZ of 'zhaoqin-nova' is 'zhaoqin-az'.\n\n3. Resize 'zhaoqin-nova' fails, no valid host.\n\n4. Boot another instance 'zhaoqin-my-az' whose AZ is 'zhaoqin-az'. Resize 'zhaoqin-my-az' succeed.\n\n5. Remove host from aggregate 'zhaoqin'.\n\n6. Resize 'zhaoqin-nova' succeed.  Resize 'zhaoqin-my-az' fails, no valid host.", 
    "tags": [
        "kilo-backport-potential", 
        "resize"
    ], 
    "importance": "Medium", 
    "heat": 10, 
    "link": "https://bugs.launchpad.net/nova/+bug/1444841", 
    "owner": "None", 
    "id": 1444841, 
    "index": 4225, 
    "openned": "2015-04-16 07:38:44.190926+00:00", 
    "created": "2015-04-16 07:38:44.190926+00:00", 
    "title": "Resize instance fails after creating host aggregate", 
    "comments": [
        {
            "content": "Latest Kilo code\n\n\nReproduce steps:\n\n1. Do not define any host aggregate. AZ of host is 'nova'. Boot one instance named 'zhaoqin-nova' whose AZ is 'nova'\n\n2. Create host aggregate 'zhaoqin' whose AZ is 'zhaoqin-az'. Add host to 'zhaoqin' aggregate.  Now AZ of instance 'zhaoqin-nova' in db is still 'nova'; and 'nova list' displays AZ of 'zhaoqin-nova' is 'zhaoqin-az'.\n\n3. Resize 'zhaoqin-nova' fails, no valid host.\n\n4. Boot another instance 'zhaoqin-my-az' whose AZ is 'zhaoqin-az'. Resize 'zhaoqin-my-az' succeed.\n\n5. Remove host from aggregate 'zhaoqin'.\n\n6. Resize 'zhaoqin-nova' succeed.  Resize 'zhaoqin-my-az' fails, no valid host.", 
            "date_created": "2015-04-16 07:38:44.190926+00:00", 
            "author": "https://api.launchpad.net/1.0/~zhaoqin"
        }, 
        {
            "content": "nova-scheduler reports 'no valid host', because AvailabilityZoneFilter gets AZ from instance property. If instance availability_zone column in db is inconsistent with host AZ, this filter will not select the host.\n\nWhen we add one host to a host aggregate, should we update instance AZ who running on this host? Or should we make instance AZ obsolete, and make AvailabilityZoneFilter to get AZ from host as 'nova list' does?\n", 
            "date_created": "2015-04-16 07:55:15.847050+00:00", 
            "author": "https://api.launchpad.net/1.0/~zhaoqin"
        }, 
        {
            "content": "nova-scheduler reports 'no valid host', because AvailabilityZoneFilter gets AZ from instance property. If instance availability_zone column in db is inconsistent with host AZ, this filter will not select the host.\n\nWhen we add one host to a host aggregate, should we update instance AZ who running on this host? Or should we make instance AZ obsolete, and make AvailabilityZoneFilter to get AZ from host as 'nova list' does?\n", 
            "date_created": "2015-04-16 07:55:16.777818+00:00", 
            "author": "https://api.launchpad.net/1.0/~zhaoqin"
        }, 
        {
            "content": "nova-scheduler reports 'no valid host', because AvailabilityZoneFilter gets AZ from instance property. If instance availability_zone column in db is inconsistent with host AZ, this filter will not select the host.\n\nWhen we add one host to a host aggregate, should we update instance AZ who running on this host? Or should we make instance AZ obsolete, and make AvailabilityZoneFilter to get AZ from host as 'nova list' does?\n", 
            "date_created": "2015-04-16 07:55:17.503235+00:00", 
            "author": "https://api.launchpad.net/1.0/~zhaoqin"
        }, 
        {
            "content": "nova-scheduler reports 'no valid host', because AvailabilityZoneFilter gets AZ from instance property. If instance availability_zone column in db is inconsistent with host AZ, this filter will not select the host.\n\nWhen we add one host to a host aggregate, should we update instance AZ who running on this host? Or should we make instance AZ obsolete, and make AvailabilityZoneFilter to get AZ from host as 'nova list' does?\n", 
            "date_created": "2015-04-16 07:55:18.785682+00:00", 
            "author": "https://api.launchpad.net/1.0/~zhaoqin"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/174269", 
            "date_created": "2015-04-16 09:14:21.849184+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "I guess we need make the instance update its az otherwise there might be other potential inconsistent bugs", 
            "date_created": "2015-04-16 19:10:47.318312+00:00", 
            "author": "https://api.launchpad.net/1.0/~jichenjc"
        }, 
        {
            "content": "Is this a duplicate of bug 1431194?", 
            "date_created": "2015-05-20 15:51:40.858088+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "yes, this bug is really duplicated with bug 1431194, at least the root cause is the same, the workaround i submmited is not so perfect. and according to the discussion with Sylvain, maybe we should work together to solve related issues like this after the Vancouver Summit.\n\nbtw, please refer to https://etherpad.openstack.org/p/YVR-nova-scheduler-in-liberty if you're interested.", 
            "date_created": "2015-05-21 02:09:24.436247+00:00", 
            "author": "https://api.launchpad.net/1.0/~kong"
        }, 
        {
            "content": "@kong, are you in Vancouver now?", 
            "date_created": "2015-05-21 17:29:46.264500+00:00", 
            "author": "https://api.launchpad.net/1.0/~zhaoqin"
        }, 
        {
            "content": "hi qin,\n\nUnfortunately, I'm not in Vancouver. You can refer to Rui Chen if you wanna a discussion about this problem.\n\nBTW, you could join #openstack-chinese if you don't mind :)", 
            "date_created": "2015-05-22 02:25:20.634237+00:00", 
            "author": "https://api.launchpad.net/1.0/~kong"
        }, 
        {
            "content": "So having talked to bauzas about this a bit, it seems like instance.az should go away. Instead, all code should refer to instance.host.az (accepting that this may not be set immediately) and/or the instance's request_spec.az. Sylvain is still working on getting request spec committed and has a giant tail of patches on that already. He says alaski will provide a means of looking up the request spec for an instance. Once that is available we can get rid of the get_instance_availability_zone method entirely.", 
            "date_created": "2015-07-22 19:36:54.007538+00:00", 
            "author": "https://api.launchpad.net/1.0/~alexisl"
        }, 
        {
            "content": "Okay, so I feel the bug should be marked as Invalid. Why ? Let me explain :\n\nWhile any instance can be shown with an AZ, it doesn't mean that the instance.az field is set with that value but rather showing the value of CONF.default_availability_zone if that field is left blank.\nHow to the instance.az field is set ? That's populated once in the instance lifetime at the Compute API level here:\nhttps://github.com/openstack/nova/blob/79fe4d8e076c9c7bb76f0afb1b2787d51b2c5037/nova/compute/api.py#L1147-L1161\n\nAs you can see, it calls _handle_availability_zone which reads what the API received and defaults to CONF.default_schedule_zone :\nhttps://github.com/openstack/nova/blob/79fe4d8e076c9c7bb76f0afb1b2787d51b2c5037/nova/compute/api.py#L596-L597\n\nAs CONF.default_schedule_zone is defaulted to None ( https://github.com/openstack/nova/blob/79fe4d8e076c9c7bb76f0afb1b2787d51b2c5037/nova/compute/api.py#L92-L93 ) that means that a default nova boot command (without using the --availability_zone flag) will create an Instance entry in the table with an AZ field equals to NULL.\n\nWhen it comes to the AZ filter, if the instance.az field is set to None, then the filter always returns True (which makes sense because the user didn't specify an AZ to stick with).\n\n\nSo, now that I explained how it works, lemme explain the error here : by specifying an AZ in the boot command, it will do the exact opposite : it will stick the instance to be created to the AZ provided. Since the bug reporter provided a value (even for the default value of \"nova\"), it means that then the instance.az field became \"nova\".\n\nFor the original boot, the AZ filter checked if the host was having an aggregate. Since it was not the case, it checked if the instance AZ (here \"nova') was equal to CONF.default_availability_zone (defaulted to \"nova') https://github.com/openstack/nova/blob/3aff2d7bff7f6e9edb5fa8b688287265722c27fb/nova/scheduler/filters/availability_zone_filter.py#L54 Yay, it worked.\n\nNow, what happened once the host was part of the aggregate ? It didn't change the instance.AZ field since that field doesn't change for the whole lifetime of the instance (kept as an information of what the user requested) but it ends to the AZ Filter which then sees that the host belongs now to an aggregate and consequently matches the host.AZ with the instance.az which was False this time https://github.com/openstack/nova/blob/3aff2d7bff7f6e9edb5fa8b688287265722c27fb/nova/scheduler/filters/availability_zone_filter.py#L51\n\nTo be honest, rule of thumb : Never ever calls explicitely an AZ \"nova\", either when booting an instance or when putting an AZ to an aggregate, that will just prevent the default behaviour to work unless you modify CONF.default_schedule_zone\n", 
            "date_created": "2015-09-14 19:33:28.019487+00:00", 
            "author": "https://api.launchpad.net/1.0/~sylvain-bauza"
        }, 
        {
            "content": "I'm trying to pursue options to prevent a user from getting into this situation in the first place.  It seems if we can detect that the user is requesting an instance in the CONF.default_availability_zone explicitly but that's not actually in an aggregate, we could return a 400 (maybe that would have to take into account CONF.default_schedule_zone if it's set).", 
            "date_created": "2015-09-15 20:05:15.118838+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Related fix proposed to branch: master\nReview: https://review.openstack.org/223802", 
            "date_created": "2015-09-15 20:45:11.185042+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "By the way, isn't it a bug that the admin can add the host to the AZ when there are instances running on that host which have a different AZ?  Since that's going to essentially break those instances from migrating somewhere?", 
            "date_created": "2015-09-15 21:16:53.883789+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "If I do not specify 'nova' as instance's AZ name... Assuming that I create two aggregates, whose AZ name is \"abc\" and \"xyz\". Host A is in AZ abc.  If I boot one instance 'zhaoqin' with  \"--availability_zone abc\", its az property will be abc. And then, I move the host A to AZ xyz, and attempt to resize instance 'zhaoqin', I think this resize will still fail.\n\nI think this should be a valid bug.", 
            "date_created": "2015-09-23 05:43:32.385254+00:00", 
            "author": "https://api.launchpad.net/1.0/~zhaoqin"
        }, 
        {
            "content": "In my comprehension, the available zone for vms should be the same with the host(compute node) or none, which means  the vm can be scheduled to any host, even though the host belong to an AZ. And from the bug, we know the AZ for the host may changed from the default(nova) to aggrate's AZ,  when adding host to the aggregate; on the opposite, when removing the host from the aggregate, the AZ for the host will return to the default one. This is where the bug comes, when the AZ for the host changed, the AZ for the VMs on this host is still the old the one, for example, when added to a aggregate, AZ for the vms on this host will still be the default(none is reasonable), and when removed from the aggregate, the AZ for vms on this host may stay the aggregate'a AZ. That will lead to AZ inconsistence between vms and the host, and will casue potential issue like this one. So we should add some sync mechanism to make the vm's az is the same with the host, when using aggregate.     ", 
            "date_created": "2015-09-23 07:09:07.015637+00:00", 
            "author": "https://api.launchpad.net/1.0/~leejian0612"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/226683", 
            "date_created": "2015-09-23 10:27:31.598001+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/223802\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=74abd14baf0f664a94d88272d43283ac7e6bbc1f\nSubmitter: Jenkins\nBranch:    master\n\ncommit 74abd14baf0f664a94d88272d43283ac7e6bbc1f\nAuthor: Sylvain Bauza <email address hidden>\nDate:   Tue Sep 15 22:33:24 2015 +0200\n\n    Add some devref for AZs\n    \n    Since the AZ knowledge is mostly tribal and can have some corner cases, we could\n    help the operators by giving more visibility on how it's made and what to prevent.\n    \n    The related ticket mentioned below is one example of a common mistake that is\n    quite not easily fixable from the Nova standpoint since the design is mostly broken.\n    \n    Change-Id: I092c8caa9e450a68a7a952940b0bb288b8fe6fb0\n    Related-Bug: #1444841\n", 
            "date_created": "2015-09-23 10:48:16.722658+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/251788", 
            "date_created": "2015-12-01 11:00:33.559709+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Change abandoned by Matt Riedemann (<email address hidden>) on branch: master\nReview: https://review.openstack.org/174269\nReason: No updates since July, considering this abandoned.", 
            "date_created": "2015-12-02 03:12:56.487942+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Change abandoned by Michael Still (<email address hidden>) on branch: master\nReview: https://review.openstack.org/251788\nReason: This patch has been idle for a long time, so I am abandoning it to keep the review clean sane. If you're interested in still working on this patch, then please unabandon it and upload a new patchset.", 
            "date_created": "2016-05-26 20:12:20.734518+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "@Sylvain Bauza (sylvain-bauza) \n@Matt Riedemann (mriedem)\n@Qin Zhao (zhaoqin)\nAvailability_zone field in instance table would be set value by boot instance with  --availability_zone flag\uff0cshowing which physical resource could be used by this instance. \n\nWhen instance'host reset a new host aggregate with a different availability_zone, admin role should do some maintenance work for influential instances.\n\n1. admin modify influential instances' availability_zone value to the new az name.\n2. admin do nothing, instances' host is not consistent with instances' instances' availability_zone. That's OK, because this is mean these instances should be in their original physical az. When any migration occur, nova will select new host from it's original physical az, and if no valid host, please Contact the administrator.\n\nBut a question, does nova have a api to update instance's availability_zone filed?", 
            "date_created": "2016-05-27 03:52:23.902411+00:00", 
            "author": "https://api.launchpad.net/1.0/~hanrong"
        }, 
        {
            "content": "@hanrong, I did not look at this bug for a long while... I see in api doc that \"Update server\" api can have AZ in request, but I did not ever test it.", 
            "date_created": "2016-05-27 05:32:02.706956+00:00", 
            "author": "https://api.launchpad.net/1.0/~zhaoqin"
        }, 
        {
            "content": "Change abandoned by Michael Still (<email address hidden>) on branch: master\nReview: https://review.openstack.org/226683\nReason: This code hasn't been updated in a long time, and is in merge conflict. I am going to abandon this review, but feel free to restore it if you're still working on this.", 
            "date_created": "2016-07-19 19:43:51.895312+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Marking the bug as invalid as it was explained in c#12 and also as the doc describes the problem which is a configuration issue https://docs.openstack.org/developer/nova/aggregates.html#availability-zones-azs", 
            "date_created": "2017-02-21 19:13:10.039759+00:00", 
            "author": "https://api.launchpad.net/1.0/~sylvain-bauza"
        }, 
        {
            "content": "I spent some time on this today (downstream), so I figured I should probably add my notes here.\n\nI was indeed able to reproduce the issue described in this bug, but only if I used the Horizon dashboard to create instances before creating my first real availability zone. My manual testing notes can be found here on GitHub (using devstack, stable/ocata).\n\n    https://github.com/dianaclarke/openstack-notes/wiki/host%20aggregates\n\nA quick summary:\n\n    0. On a fresh install without instances or availability zones\n    1. Create an instance via the Horizon dashboard (instance-1)\n    2. Create an availability zone and host aggregate for the same host\n    3. Attempt to resize instance-1 (and note the following error)\n\n    ERROR (BadRequest): No valid host was found. No valid host found for resize (HTTP 400)\n\nThe trouble appears to be that the Horizon dashboard doesn't allow you to not specify an availability zone when you create an instance, and if you haven't yet created any \"real\" availability zones, it will send the name of the default availability zone (\"nova\").\n\nThis is a documented, known, no-no: \"it is highly recommended for users to never ever ask for booting an instance by specifying an explicit AZ named 'nova'\"\n\n    https://docs.openstack.org/developer/nova/aggregates.html#availability-zones-azs\n\nIf you use the command line interface to create instances (nova boot) and don't specify an availability zone, you will get a NULL in the database for 'availability_zone' (this is correct). If you use Horizon, you will get the string \"nova\" which will result in resize issues once you create other \"real\" availability zones.\n\nPerhaps reassign this to Horizon?\n\n", 
            "date_created": "2017-02-21 20:22:18.232789+00:00", 
            "author": "https://api.launchpad.net/1.0/~diana-clarke"
        }
    ], 
    "closed": "2017-02-21 19:14:28.855477+00:00"
}