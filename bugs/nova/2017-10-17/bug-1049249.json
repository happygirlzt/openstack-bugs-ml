{
    "status": "Fix Released", 
    "last_updated": "2013-10-17 11:45:36.632338+00:00", 
    "description": "Nova currently has the following options:\n\n    cfg.StrOpt('compute_api_class',\n                default='nova.compute.api.API',\n                help='The full class name of the compute API class to use'),\n    cfg.StrOpt('network_api_class',\n                default='nova.network.api.API',\n                help='The full class name of the network API class to use'),\n    cfg.StrOpt('volume_api_class',\n                default='nova.volume.api.API',\n                help='The full class name of the volume API class to use'),\n\nThese options came from the following commit:\n\ncommit c729ba8c0aa4d283e84d139bc98e0e89fd933c4a\nAuthor: Chris Behrens <email address hidden>\nDate:   Sun Jan 15 23:29:41 2012 -0800\n\n    Core modifications for future zones service.\n    \n    Makes compute/network/volume API classes pluggable\n    Splits some code out in compute/api\n    Adds some race condition checking on deletes in compute/api\n    Make instance_delete support UUIDs\n    Add support to RPC to cast to specific servers\n    Migrations for future zones\n    \n    Change-Id: Ibee126cd6d325e11770f27589e79dfd0e6104b99\n\n\nNova should not expose the ability to replace internal classes in the configuration.  These classes are internal implementation details.  Exposing it via configuration like this commits us to some level of maintaining these implementation details in case someone has put in their own version.  It also seems like a support nightmare.\n\nBased on the commit when these went in, it sounds like we can just remove these options completely and handle what is necessary internally.  For example, if these classes need to be swapped out for cells, then when you enable cells, it can be done automatically internally instead of allowing anyone to replace these classes with anything.", 
    "tags": [], 
    "importance": "High", 
    "heat": 20, 
    "link": "https://bugs.launchpad.net/nova/+bug/1049249", 
    "owner": "https://api.launchpad.net/1.0/~senhuang", 
    "id": 1049249, 
    "index": 803, 
    "openned": "2012-09-11 16:57:11.197363+00:00", 
    "created": "2012-09-11 16:57:11.197363+00:00", 
    "title": "Remove plugging of internal classes from configuration", 
    "comments": [
        {
            "content": "Nova currently has the following options:\n\n    cfg.StrOpt('compute_api_class',\n                default='nova.compute.api.API',\n                help='The full class name of the compute API class to use'),\n    cfg.StrOpt('network_api_class',\n                default='nova.network.api.API',\n                help='The full class name of the network API class to use'),\n    cfg.StrOpt('volume_api_class',\n                default='nova.volume.api.API',\n                help='The full class name of the volume API class to use'),\n\nThese options came from the following commit:\n\ncommit c729ba8c0aa4d283e84d139bc98e0e89fd933c4a\nAuthor: Chris Behrens <email address hidden>\nDate:   Sun Jan 15 23:29:41 2012 -0800\n\n    Core modifications for future zones service.\n    \n    Makes compute/network/volume API classes pluggable\n    Splits some code out in compute/api\n    Adds some race condition checking on deletes in compute/api\n    Make instance_delete support UUIDs\n    Add support to RPC to cast to specific servers\n    Migrations for future zones\n    \n    Change-Id: Ibee126cd6d325e11770f27589e79dfd0e6104b99\n\n\nNova should not expose the ability to replace internal classes in the configuration.  These classes are internal implementation details.  Exposing it via configuration like this commits us to some level of maintaining these implementation details in case someone has put in their own version.  It also seems like a support nightmare.\n\nBased on the commit when these went in, it sounds like we can just remove these options completely and handle what is necessary internally.  For example, if these classes need to be swapped out for cells, then when you enable cells, it can be done automatically internally instead of allowing anyone to replace these classes with anything.", 
            "date_created": "2012-09-11 16:57:11.197363+00:00", 
            "author": "https://api.launchpad.net/1.0/~russellb"
        }, 
        {
            "content": "Makes total sense to me - something like enable_zones=True should just automatically hook in the zones code", 
            "date_created": "2012-09-11 19:22:19.616152+00:00", 
            "author": "https://api.launchpad.net/1.0/~markmc"
        }, 
        {
            "content": "I started looking at pulling these out a bit today.  Removing 'compute_api_class' is easy.  Removing the other two will be a bit more work.  It looks like these options are used when configuring nova to use Quantum or Cinder.  I think we'll need something like \"enable_quantum\" and \"enable_cinder\" and have them do the right things when enabled.", 
            "date_created": "2012-09-11 19:34:06.945994+00:00", 
            "author": "https://api.launchpad.net/1.0/~russellb"
        }, 
        {
            "content": "I removed the assignee since it has been a couple of months, so it doesn't seem to be active.\n\nThe concensus around this seems to be that we should be moving to entrypoints for all of these types of options and have short names that we tell everyone to use in the configuration.", 
            "date_created": "2013-03-01 16:18:49.128089+00:00", 
            "author": "https://api.launchpad.net/1.0/~russellb"
        }, 
        {
            "content": "It seems only the first configuration option \"compute_api_class\" exists in nova/compute/__init__.py. The other two options are gone. Is the bug still valid?", 
            "date_created": "2013-03-26 18:32:35.368300+00:00", 
            "author": "https://api.launchpad.net/1.0/~senhuang"
        }, 
        {
            "content": "Proposed fix:\nAdd a function \"get_compute_api_class_name\" that returns appropriate class name in nova/compute/__init__.py. This function basically returns \"nova.compute.cells_api.ComputeCellsAPI\" if Cell is used; and nova.compute.API otherwise. \n\nTo check whether cell is used, the function reads the nova.conf, and see whether [cells|enable] is set to true.\n\nPlease advise whether the above is appropriate. \n\n\n\n", 
            "date_created": "2013-05-07 23:28:46.948464+00:00", 
            "author": "https://api.launchpad.net/1.0/~senhuang"
        }, 
        {
            "content": "This will not work.  When cells is enabled, it needs this special class in the API cell.  But it needs the normal class in a child cell.  Simply switching the class based on whether or not cells is enabled will break cells, because the child cell will use the wrong class.", 
            "date_created": "2013-05-10 01:47:00.533448+00:00", 
            "author": "https://api.launchpad.net/1.0/~cbehrens"
        }, 
        {
            "content": "Hi Chris,\n\nThanks for the comments. Just to clarify the issue a bilt. There are several cases. \n- Users set compute.api.class as \"nova.compute.ComputeAPI\" and [cells|enable] as False, nova will run without cell functionality\n- Users set compute.api.class as \"nova.compute.cells_api.ComputeCellsAPI \" and [cells|enable] as True, nova will run with cell functionality correctly. Internally, API cell will use nova.compute.cells_api.ComputeCellsAPI while child cells use nova.compute.ComputeAPI (and the corresponding HostAPI and InstanceActionAPI).\nWhat if users set compute.api.class as \"nova.compute.ComputeAPI \" and [cells|enable] as True? Maybe I am missing something important here.. It seems cells|enable == True is the only condition that cells_api.ComputeCellsAPI is used by API cell. \n\nBut I agree on your other comment that we should  depreciate the old options first rather than remove them. \n\n", 
            "date_created": "2013-05-10 19:31:03.119838+00:00", 
            "author": "https://api.launchpad.net/1.0/~senhuang"
        }, 
        {
            "content": "https://review.openstack.org/#/c/28750/", 
            "date_created": "2013-05-28 21:26:58.358101+00:00", 
            "author": "https://api.launchpad.net/1.0/~russellb"
        }, 
        {
            "content": "Pushing back to H2, please set back to H1 if this is milestone-critical (in which case the fix needs to land in master first and then be backported to milestone-proposed before tomorrow)", 
            "date_created": "2013-05-29 08:37:40.755281+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/28750\nCommitted: http://github.com/openstack/nova/commit/40c6c1a9d29608a04f2062e63dcc395acbb0dffd\nSubmitter: Jenkins\nBranch:    master\n\ncommit 40c6c1a9d29608a04f2062e63dcc395acbb0dffd\nAuthor: Senhua Huang <email address hidden>\nDate:   Thu May 23 07:17:38 2013 -0700\n\n    Deprecate compute_api_class option in the config\n    \n    Add a function \"get_compute_api_class_name\" within nova.compute\n    that returns nova.compute.cells_api.ComputeCellsAPI if cell is\n    enabled and this cell is an API cell, and returns compute.api.API\n    otherwise.\n    Add an option \"cell_type\" to the config in group \"cells\".\n    Use the default value of \"cell_type\" (None) for legacy configuration.\n    \n    Change-Id: I32f5ccf789c657b563c165bfa8244e819b1a79a6\n    Fixes: bug #1049249\n", 
            "date_created": "2013-06-06 09:32:57.416467+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2013-07-17 12:11:15.309140+00:00"
}