{
    "status": "Invalid", 
    "last_updated": "2014-12-03 16:31:14.882697+00:00", 
    "description": "Nova uses thread-unsafe memcache client objects in multiple threads. For instance, nova-api's metadata WSGI server uses the same nova.api.metadata.handler.MetadataRequestHandler._cache object for every request. A memcache client object is thread unsafe because it has a single open socket connection to memcached. Thus the multiple threads will read from & write to the same socket fd.\n\nKeystoneclient has the same bug. See https://bugs.launchpad.net/python-keystoneclient/+bug/1289074 for a patch to fix the problem.", 
    "tags": [
        "api"
    ], 
    "importance": "Undecided", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1291637", 
    "owner": "None", 
    "id": 1291637, 
    "index": 5915, 
    "openned": "2014-03-12 21:58:07.119565+00:00", 
    "created": "2014-03-12 21:58:07.119565+00:00", 
    "title": "memcache client race", 
    "comments": [
        {
            "content": "Nova uses thread-unsafe memcache client objects in multiple threads. For instance, nova-api's metadata WSGI server uses the same nova.api.metadata.handler.MetadataRequestHandler._cache object for every request. A memcache client object is thread unsafe because it has a single open socket connection to memcached. Thus the multiple threads will read from & write to the same socket fd.\n\nKeystoneclient has the same bug. See https://bugs.launchpad.net/python-keystoneclient/+bug/1289074 for a patch to fix the problem.", 
            "date_created": "2014-03-12 21:58:07.119565+00:00", 
            "author": "https://api.launchpad.net/1.0/~pete5"
        }, 
        {
            "content": "Have you seen this actually happen in nova or are you assuming the same problem exists? Do you have a traceback equivalent to the keystone one for nova?", 
            "date_created": "2014-03-19 16:56:25.834710+00:00", 
            "author": "https://api.launchpad.net/1.0/~danms"
        }, 
        {
            "content": "Hi Dan,\n\nI can't recall if I actually saw it in nova. I don't have a stack trace.\n\nPeter\n\nOn Wed, Mar 19, 2014 at 12:56 PM, Dan Smith <email address hidden> wrote:\n> Have you seen this actually happen in nova or are you assuming the same\n> problem exists? Do you have a traceback equivalent to the keystone one\n> for nova?\n>\n> --\n> You received this bug notification because you are subscribed to the bug\n> report.\n> https://bugs.launchpad.net/bugs/1291637\n>\n> Title:\n>   memcache client race\n>\n> Status in OpenStack Identity (Keystone):\n>   New\n> Status in OpenStack Compute (Nova):\n>   New\n>\n> Bug description:\n>   Nova uses thread-unsafe memcache client objects in multiple threads.\n>   For instance, nova-api's metadata WSGI server uses the same\n>   nova.api.metadata.handler.MetadataRequestHandler._cache object for\n>   every request. A memcache client object is thread unsafe because it\n>   has a single open socket connection to memcached. Thus the multiple\n>   threads will read from & write to the same socket fd.\n>\n>   Keystoneclient has the same bug. See https://bugs.launchpad.net\n>   /python-keystoneclient/+bug/1289074 for a patch to fix the problem.\n>\n> To manage notifications about this bug go to:\n> https://bugs.launchpad.net/keystone/+bug/1291637/+subscriptions\n", 
            "date_created": "2014-03-19 17:40:02+00:00", 
            "author": "https://api.launchpad.net/1.0/~pete5"
        }, 
        {
            "content": "well then i think we'll remove it from rc1 as we need more info here.", 
            "date_created": "2014-03-19 21:53:10.959523+00:00", 
            "author": "https://api.launchpad.net/1.0/~tjones-i"
        }, 
        {
            "content": "Is there anything more to fix in keystone than was just fixed ?", 
            "date_created": "2014-03-27 09:01:06.431331+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "You have a cross-linked bug (with stack traces!) which has been deemed of critical importance and linked to a CVE security vulnerability.\n\nYou are reusing *identical* code.\n\nYou choose to ignore the risk because there is no stack trace.\n\n(mindblown) ", 
            "date_created": "2014-03-27 15:55:16.623060+00:00", 
            "author": "https://api.launchpad.net/1.0/~andreslc-x"
        }, 
        {
            "content": "Admittedly I didn't look too deeply into this on nova's side, but it appears that nova would not be affected due to nova's implicit monkey patching of thread:\n\n  https://github.com/openstack/nova/blob/0861fc2d22ae40b82dfe6fc0469db84339464923/nova/cmd/__init__.py\n\nSimilar to nova, keystone only avoids monkey patching thread for debugging purposes.\n\nIf there's a way to reproduce an issue here, I'm not aware of it. Please enlighten us!", 
            "date_created": "2014-03-27 17:19:32.216726+00:00", 
            "author": "https://api.launchpad.net/1.0/~dolph"
        }, 
        {
            "content": "[Expired for Keystone because there has been no activity for 60 days.]", 
            "date_created": "2014-06-01 04:17:30.870093+00:00", 
            "author": "https://api.launchpad.net/1.0/~janitor"
        }
    ], 
    "closed": "2014-12-03 16:31:10.411707+00:00"
}