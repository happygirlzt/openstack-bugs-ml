{
    "status": "Won't Fix", 
    "last_updated": "2016-02-20 01:51:01.987400+00:00", 
    "description": "EP-0274 introduced dict comprehensions to replace dict constructor\nwith a sequence of length-2 sequences, these are benefits copied\nfrom [1]:\n  The dictionary constructor approach has two distinct disadvantages\n  from the proposed syntax though.  First, it isn't as legible as a\n  dict comprehension.  Second, it forces the programmer to create an\n  in-core list object first, which could be expensive.\nThere is deep dive about PEP-0274[2] and basic tests about\nperformance[3].\n\n[1]http://legacy.python.org/dev/peps/pep-0274/\n[2]http://doughellmann.com/2012/11/12/the-performance-impact-of-using-dict-instead-of-in-cpython-2-7-2.html\n[3]http://paste.openstack.org/show/154798/", 
    "tags": [], 
    "importance": "Low", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1405772", 
    "owner": "https://api.launchpad.net/1.0/~glongwave", 
    "id": 1405772, 
    "index": 1472, 
    "openned": "2014-12-26 12:08:47.512027+00:00", 
    "created": "2014-12-26 12:08:47.512027+00:00", 
    "title": "Don't use dict constructor with a sequence of length-2 sequences", 
    "comments": [
        {
            "content": "EP-0274 introduced dict comprehensions to replace dict constructor\nwith a sequence of length-2 sequences, these are benefits copied\nfrom [1]:\n  The dictionary constructor approach has two distinct disadvantages\n  from the proposed syntax though.  First, it isn't as legible as a\n  dict comprehension.  Second, it forces the programmer to create an\n  in-core list object first, which could be expensive.\nThere is deep dive about PEP-0274[2] and basic tests about\nperformance[3].\n\n[1]http://legacy.python.org/dev/peps/pep-0274/\n[2]http://doughellmann.com/2012/11/12/the-performance-impact-of-using-dict-instead-of-in-cpython-2-7-2.html\n[3]http://paste.openstack.org/show/154798/", 
            "date_created": "2014-12-26 12:08:47.512027+00:00", 
            "author": "https://api.launchpad.net/1.0/~glongwave"
        }, 
        {
            "content": "This basic tests:\n[gcb@localhost nova]$ python2.7 -m timeit -n 1000000 -r 5 -v '{i: i for i in [\"a\", \"b\", \"c\", \"d\"]}'\nraw times: 0.445 0.444 0.443 0.443 0.443\n1000000 loops, best of 5: 0.443 usec per loop\n[gcb@localhost nova]$ python2.7 -m timeit -n 1000000 -r 5 -v 'dict([(i, i) for i in [\"a\", \"b\", \"c\", \"d\"]])'\nraw times: 1 1 1 1 1.16\n1000000 loops, best of 5: 1 usec per loop\n[gcb@localhost nova]$ python2.7 -m timeit -n 1000000 -r 5 -v 'dict((i, i) for i in [\"a\", \"b\", \"c\", \"d\"])'\nraw times: 1.14 1.13 1.13 1.13 1.13\n1000000 loops, best of 5: 1.13 usec per loop\n", 
            "date_created": "2014-12-26 12:11:48.209639+00:00", 
            "author": "https://api.launchpad.net/1.0/~glongwave"
        }, 
        {
            "content": "These kind of micro optimizations aren't relevant to our codebase. Please never submit patches for things like this. ", 
            "date_created": "2016-02-20 01:51:01.486009+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }
    ], 
    "closed": "2016-02-20 01:50:34.710336+00:00"
}