{
    "status": "Fix Released", 
    "last_updated": "2016-01-21 23:17:36.811349+00:00", 
    "description": "On a clean kilo install using source security groups I am seeing the following trace on boot and delete\n\n\n\na2413f7] Deallocating network for instance _deallocate_network /usr/lib/python2.7/dist-packages/nova/compute/manager.py:2098\n2015-08-14 09:46:06.688 11618 ERROR oslo_messaging.rpc.dispatcher [req-b8f44d34-96b2-4e40-ac22-15ccc6e44e59 - - - - -] Exception during message handling: 'metadata'\n2015-08-14 09:46:06.688 11618 TRACE oslo_messaging.rpc.dispatcher Traceback (most recent call last):\n2015-08-14 09:46:06.688 11618 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/lib/python2.7/dist-packages/oslo_messaging/rpc/dispatcher.py\", line 142, in _dispatch_and_reply\n2015-08-14 09:46:06.688 11618 TRACE oslo_messaging.rpc.dispatcher     executor_callback))\n2015-08-14 09:46:06.688 11618 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/lib/python2.7/dist-packages/oslo_messaging/rpc/dispatcher.py\", line 186, in _dispatch\n2015-08-14 09:46:06.688 11618 TRACE oslo_messaging.rpc.dispatcher     executor_callback)\n2015-08-14 09:46:06.688 11618 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/lib/python2.7/dist-packages/oslo_messaging/rpc/dispatcher.py\", line 130, in _do_dispatch\n2015-08-14 09:46:06.688 11618 TRACE oslo_messaging.rpc.dispatcher     result = func(ctxt, **new_args)\n2015-08-14 09:46:06.688 11618 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/lib/python2.7/dist-packages/nova/compute/manager.py\", line 6772, in refresh_instance_security_rules\n2015-08-14 09:46:06.688 11618 TRACE oslo_messaging.rpc.dispatcher     return self.manager.refresh_instance_security_rules(ctxt, instance)\n2015-08-14 09:46:06.688 11618 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/lib/python2.7/dist-packages/nova/compute/manager.py\", line 434, in decorated_function\n2015-08-14 09:46:06.688 11618 TRACE oslo_messaging.rpc.dispatcher     args = (_load_instance(args[0]),) + args[1:]\n2015-08-14 09:46:06.688 11618 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/lib/python2.7/dist-packages/nova/compute/manager.py\", line 425, in _load_instance\n2015-08-14 09:46:06.688 11618 TRACE oslo_messaging.rpc.dispatcher     expected_attrs=metas)\n2015-08-14 09:46:06.688 11618 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/lib/python2.7/dist-packages/nova/objects/instance.py\", line 506, in _from_db_object\n2015-08-14 09:46:06.688 11618 TRACE oslo_messaging.rpc.dispatcher     instance['metadata'] = utils.instance_meta(db_inst)\n2015-08-14 09:46:06.688 11618 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/lib/python2.7/dist-packages/nova/utils.py\", line 817, in instance_meta\n2015-08-14 09:46:06.688 11618 TRACE oslo_messaging.rpc.dispatcher     if isinstance(instance['metadata'], dict):\n2015-08-14 09:46:06.688 11618 TRACE oslo_messaging.rpc.dispatcher KeyError: 'metadata'", 
    "tags": [
        "compute", 
        "security-groups"
    ], 
    "importance": "High", 
    "heat": 10, 
    "link": "https://bugs.launchpad.net/nova/+bug/1484738", 
    "owner": "https://api.launchpad.net/1.0/~mriedem", 
    "id": 1484738, 
    "index": 1793, 
    "openned": "2015-08-13 23:50:03.417163+00:00", 
    "created": "2015-08-13 23:50:03.417163+00:00", 
    "title": "keyerror when refreshing instance security groups", 
    "comments": [
        {
            "content": "On a clean kilo install using source security groups I am seeing the following trace on boot and delete\n\n\n\na2413f7] Deallocating network for instance _deallocate_network /usr/lib/python2.7/dist-packages/nova/compute/manager.py:2098\n2015-08-14 09:46:06.688 11618 ERROR oslo_messaging.rpc.dispatcher [req-b8f44d34-96b2-4e40-ac22-15ccc6e44e59 - - - - -] Exception during message handling: 'metadata'\n2015-08-14 09:46:06.688 11618 TRACE oslo_messaging.rpc.dispatcher Traceback (most recent call last):\n2015-08-14 09:46:06.688 11618 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/lib/python2.7/dist-packages/oslo_messaging/rpc/dispatcher.py\", line 142, in _dispatch_and_reply\n2015-08-14 09:46:06.688 11618 TRACE oslo_messaging.rpc.dispatcher     executor_callback))\n2015-08-14 09:46:06.688 11618 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/lib/python2.7/dist-packages/oslo_messaging/rpc/dispatcher.py\", line 186, in _dispatch\n2015-08-14 09:46:06.688 11618 TRACE oslo_messaging.rpc.dispatcher     executor_callback)\n2015-08-14 09:46:06.688 11618 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/lib/python2.7/dist-packages/oslo_messaging/rpc/dispatcher.py\", line 130, in _do_dispatch\n2015-08-14 09:46:06.688 11618 TRACE oslo_messaging.rpc.dispatcher     result = func(ctxt, **new_args)\n2015-08-14 09:46:06.688 11618 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/lib/python2.7/dist-packages/nova/compute/manager.py\", line 6772, in refresh_instance_security_rules\n2015-08-14 09:46:06.688 11618 TRACE oslo_messaging.rpc.dispatcher     return self.manager.refresh_instance_security_rules(ctxt, instance)\n2015-08-14 09:46:06.688 11618 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/lib/python2.7/dist-packages/nova/compute/manager.py\", line 434, in decorated_function\n2015-08-14 09:46:06.688 11618 TRACE oslo_messaging.rpc.dispatcher     args = (_load_instance(args[0]),) + args[1:]\n2015-08-14 09:46:06.688 11618 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/lib/python2.7/dist-packages/nova/compute/manager.py\", line 425, in _load_instance\n2015-08-14 09:46:06.688 11618 TRACE oslo_messaging.rpc.dispatcher     expected_attrs=metas)\n2015-08-14 09:46:06.688 11618 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/lib/python2.7/dist-packages/nova/objects/instance.py\", line 506, in _from_db_object\n2015-08-14 09:46:06.688 11618 TRACE oslo_messaging.rpc.dispatcher     instance['metadata'] = utils.instance_meta(db_inst)\n2015-08-14 09:46:06.688 11618 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/lib/python2.7/dist-packages/nova/utils.py\", line 817, in instance_meta\n2015-08-14 09:46:06.688 11618 TRACE oslo_messaging.rpc.dispatcher     if isinstance(instance['metadata'], dict):\n2015-08-14 09:46:06.688 11618 TRACE oslo_messaging.rpc.dispatcher KeyError: 'metadata'", 
            "date_created": "2015-08-13 23:50:03.417163+00:00", 
            "author": "https://api.launchpad.net/1.0/~sorrison"
        }, 
        {
            "content": "@Sam Morrison: \nCould you please add more information about how this can reproduced? What does your setup look like? Are all services running on the Kilo release or is it mixed Kilo/Liberty code? Can you reproduce it on Liberty as well?", 
            "date_created": "2015-08-17 11:05:13.985858+00:00", 
            "author": "https://api.launchpad.net/1.0/~mzoeller"
        }, 
        {
            "content": "I tried on my devstack environment with latest Liberty code, cannot reproduce it. Need more info as asked by Markus.", 
            "date_created": "2015-08-18 01:57:04.324482+00:00", 
            "author": "https://api.launchpad.net/1.0/~zhenzan-zhou"
        }, 
        {
            "content": "This is using stable/kilo and happens when I boot or  delete an instance with source security groups and an instance with the source exists already.\n\nLiberty isn't released yet so haven't looked at that.\n\n", 
            "date_created": "2015-08-18 02:10:34.829966+00:00", 
            "author": "https://api.launchpad.net/1.0/~sorrison"
        }, 
        {
            "content": "info provided", 
            "date_created": "2015-08-18 02:10:52.394875+00:00", 
            "author": "https://api.launchpad.net/1.0/~sorrison"
        }, 
        {
            "content": "This happens to me each time I try to create or delete an instance.  It appears to be preventing any notifications from being sent, which is playing hell with designate.", 
            "date_created": "2015-09-09 20:08:58.298374+00:00", 
            "author": "https://api.launchpad.net/1.0/~andrewbogott"
        }, 
        {
            "content": "Running a kilo/stable install which I just now upgraded from (working) Juno.", 
            "date_created": "2015-09-09 20:09:31.975866+00:00", 
            "author": "https://api.launchpad.net/1.0/~andrewbogott"
        }, 
        {
            "content": "Looks similar to bug 1452510 which was invalidated for some reason, no explanation.", 
            "date_created": "2015-09-10 02:27:23.671700+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Andrews trace from comment 6:\n\n2015-09-10 02:20:20.408 6436 INFO nova.virt.libvirt.driver [req-b79a0b96-5fee-4178-8db6-6516305307c5 novaadmin testlabs - - -] [instance: d8ebcc1b-b1bf-461b-9c13-592b02848ff5] Creating image\n2015-09-10 02:20:20.559 6436 ERROR oslo_messaging.rpc.dispatcher [req-dd34a875-8f3d-4dbd-bf85-87ddddc53189 - - - - -] Exception during message handling: 'metadata'\n2015-09-10 02:20:20.559 6436 TRACE oslo_messaging.rpc.dispatcher Traceback (most recent call last):\n2015-09-10 02:20:20.559 6436 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/lib/python2.7/dist-packages/oslo_messaging/rpc/dispatcher.py\", line 142, in _dispatch_and_reply\n2015-09-10 02:20:20.559 6436 TRACE oslo_messaging.rpc.dispatcher     executor_callback))\n2015-09-10 02:20:20.559 6436 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/lib/python2.7/dist-packages/oslo_messaging/rpc/dispatcher.py\", line 186, in _dispatch\n2015-09-10 02:20:20.559 6436 TRACE oslo_messaging.rpc.dispatcher     executor_callback)\n2015-09-10 02:20:20.559 6436 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/lib/python2.7/dist-packages/oslo_messaging/rpc/dispatcher.py\", line 130, in _do_dispatch\n2015-09-10 02:20:20.559 6436 TRACE oslo_messaging.rpc.dispatcher     result = func(ctxt, **new_args)\n2015-09-10 02:20:20.559 6436 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/lib/python2.7/dist-packages/nova/compute/manager.py\", line 6772, in refresh_instance_security_rules\n2015-09-10 02:20:20.559 6436 TRACE oslo_messaging.rpc.dispatcher     return self.manager.refresh_instance_security_rules(ctxt, instance)\n2015-09-10 02:20:20.559 6436 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/lib/python2.7/dist-packages/nova/compute/manager.py\", line 434, in decorated_function\n2015-09-10 02:20:20.559 6436 TRACE oslo_messaging.rpc.dispatcher     args = (_load_instance(args[0]),) + args[1:]\n2015-09-10 02:20:20.559 6436 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/lib/python2.7/dist-packages/nova/compute/manager.py\", line 425, in _load_instance\n2015-09-10 02:20:20.559 6436 TRACE oslo_messaging.rpc.dispatcher     expected_attrs=metas)\n2015-09-10 02:20:20.559 6436 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/lib/python2.7/dist-packages/nova/objects/instance.py\", line 506, in _from_db_object\n2015-09-10 02:20:20.559 6436 TRACE oslo_messaging.rpc.dispatcher     instance['metadata'] = utils.instance_meta(db_inst)\n2015-09-10 02:20:20.559 6436 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/lib/python2.7/dist-packages/nova/utils.py\", line 817, in instance_meta\n2015-09-10 02:20:20.559 6436 TRACE oslo_messaging.rpc.dispatcher     if isinstance(instance['metadata'], dict):\n2015-09-10 02:20:20.559 6436 TRACE oslo_messaging.rpc.dispatcher KeyError: 'metadata'\n2015-09-10 02:20:20.559 6436 TRACE oslo_messaging.rpc.dispatcher", 
            "date_created": "2015-09-10 02:31:50.757341+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Andrew/Sam - which version of kilo?  trunk stable/kilo or 2015.1?  2015.1.1?\n\nAlso, using neutron or nova-network?", 
            "date_created": "2015-09-10 02:33:52.829802+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "(9:32:31 PM) mriedem: andrewbogott: btw, are you on trunk stable/kilo or like 2015.1?\n(9:32:43 PM) andrewbogott: I\u2019m using the cloud archive\n(9:32:58 PM) andrewbogott: nova-compute                        1:2015.1.1-0ubuntu1~cloud2\n(9:34:00 PM) mriedem: nova-network?\n(9:34:14 PM) andrewbogott: afraid so :(\n(9:35:43 PM) mriedem: i was wondering if it was https://review.openstack.org/#/c/211162/\n(9:36:32 PM) mriedem: i think that was actually an AttributeError though, not a KeyError", 
            "date_created": "2015-09-10 02:36:50.037131+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "The code obviously looks wrong, if you look at the call chain, we're in:\n\nhttps://github.com/openstack/nova/blob/stable/kilo/nova/compute/manager.py#L6798\n\nWhich is calling the method in the compute manager which has the object_compat decorator:\n\nhttps://github.com/openstack/nova/blob/stable/kilo/nova/compute/manager.py#L1345\n\nThen we get here:\n\nhttps://github.com/openstack/nova/blob/stable/kilo/nova/compute/manager.py#L421\n\nAnd metas is:\n\nmetas = ['metadata', 'system_metadata'] and used above:\n\nexpected_attrs=metas\n\nBut metas wouldn't be set there?\n\nSo we get the KeyError and then try this:\n\nargs = (_load_instance(args[0]),) + args[1:]\n\nbut again metas isn't set, right?\n\nI guess it must be in scope though otherwise there would be a different error.\n\nPlus we get here:\n\nhttps://github.com/openstack/nova/blob/stable/kilo/nova/objects/instance.py#L506\n\nWhich means metadata was asked for, but it's not in the instance from the database so it blows up.  Which means that whatever in the nova-api was calling refresh_instance_security_rules wasn't originally asking for 'metadata' so it's not in the db instance passed to refresh_instance_security_rules which goes into the object_compat decorator and we fail.", 
            "date_created": "2015-09-10 02:55:12.343993+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "We're using stable/kilo, haven't resynced from upstream for about a week but having a look I can't see anything that we're missing that would fix it.", 
            "date_created": "2015-09-10 03:04:02.918750+00:00", 
            "author": "https://api.launchpad.net/1.0/~sorrison"
        }, 
        {
            "content": "https://review.openstack.org/#/c/187537/ is the reason why this isn't a problem in liberty - because we pass an instance object from compute API to the compute manager so when the object_compat decorator is hit, we already have an instance object and we don't need to call _from_db_object.\n\nThat change has RPC API version changes though so we can't backport it to stable/kilo.\n\nWe should just have checks in the object_compat decorator to not try and load attributes that aren't actually in the db instance (dict).", 
            "date_created": "2015-09-10 03:07:16.435882+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/222022", 
            "date_created": "2015-09-10 03:31:06.117568+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: stable/kilo\nReview: https://review.openstack.org/222023", 
            "date_created": "2015-09-10 03:38:07.744025+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: stable/juno\nReview: https://review.openstack.org/222026", 
            "date_created": "2015-09-10 03:44:07.939235+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/222022\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=9369aab04e37b7818d49b00e65857be8b3564e9e\nSubmitter: Jenkins\nBranch:    master\n\ncommit 9369aab04e37b7818d49b00e65857be8b3564e9e\nAuthor: Matt Riedemann <email address hidden>\nDate:   Wed Sep 9 20:29:09 2015 -0700\n\n    Don't expect meta attributes in object_compat that aren't in the db obj\n    \n    The object_compat decorator expects to get the Instance object with\n    'metadata' and 'system_metadata' attributes but if those aren't in the\n    db instance dict object, Instance._from_db_object will fail with a\n    KeyError.\n    \n    In Kilo this happens per refresh_instance_security_rules because in the\n    compute API code, the instance passed to refresh_instance_security_rules\n    comes from the call to get the security group(s) which joins on the\n    instances column, but that doesn't join on the metadata/system_metadata\n    fields for the instances.  So when the instances get to object_compat in\n    the compute manager and the db instance dict is converted to the\n    Instance object, it expects fields that aren't in the dict and we get\n    the KeyError.\n    \n    The refresh_instance_security_rules case is fixed in Liberty per commit\n    12fbe6f082ef9b70b89302e15daa12e851e507a7 - in that case the compute API\n    passes Instance objects to the compute manager so object_compat doesn't\n    have anything to do, _load_instance just sees instance_or_dict isn't a\n    dict and ignores it.\n    \n    We're making this change since (1) it's an obviously wrong assumption in\n    object_compat and should be fixed and (2) we need to backport this fix\n    to stable/kilo since it's an upgrade impact for users there.\n    \n    Closes-Bug: #1484738\n    \n    Change-Id: I36a954c095a9aa35879200784dc18e35edf689e6\n", 
            "date_created": "2015-09-10 21:39:58.538237+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/222026\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=dc5ced25c61fc742c513abc03b92e2d8f8042d8c\nSubmitter: Jenkins\nBranch:    stable/juno\n\ncommit dc5ced25c61fc742c513abc03b92e2d8f8042d8c\nAuthor: Matt Riedemann <email address hidden>\nDate:   Wed Sep 9 20:29:09 2015 -0700\n\n    Don't expect meta attributes in object_compat that aren't in the db obj\n    \n    The object_compat decorator expects to get the Instance object with\n    'metadata' and 'system_metadata' attributes but if those aren't in the\n    db instance dict object, Instance._from_db_object will fail with a\n    KeyError.\n    \n    In Kilo this happens per refresh_instance_security_rules because in the\n    compute API code, the instance passed to refresh_instance_security_rules\n    comes from the call to get the security group(s) which joins on the\n    instances column, but that doesn't join on the metadata/system_metadata\n    fields for the instances.  So when the instances get to object_compat in\n    the compute manager and the db instance dict is converted to the\n    Instance object, it expects fields that aren't in the dict and we get\n    the KeyError.\n    \n    The refresh_instance_security_rules case is fixed in Liberty per commit\n    12fbe6f082ef9b70b89302e15daa12e851e507a7 - in that case the compute API\n    passes Instance objects to the compute manager so object_compat doesn't\n    have anything to do, _load_instance just sees instance_or_dict isn't a\n    dict and ignores it.\n    \n    We're making this change since (1) it's an obviously wrong assumption in\n    object_compat and should be fixed and (2) we need to backport this fix\n    to stable/kilo since it's an upgrade impact for users there.\n    \n    Closes-Bug: #1484738\n    \n    Conflicts:\n            nova/tests/unit/compute/test_compute.py\n    \n    NOTE(mriedem): The conflict is due to the unit tests being moved in\n    kilo, otherwise this is unchanged.\n    \n    Change-Id: I36a954c095a9aa35879200784dc18e35edf689e6\n    (cherry picked from commit 9369aab04e37b7818d49b00e65857be8b3564e9e)\n    (cherry picked from commit 08d1153d3be9f8d59aa0acc03eedd45a1697ed7b)\n", 
            "date_created": "2015-09-11 02:32:13.445203+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Interesting, we've actually hit this in the gate:\n\nhttp://logstash.openstack.org/#eyJzZWFyY2giOiJtZXNzYWdlOlwiS2V5RXJyb3I6ICdtZXRhZGF0YSdcIiBBTkQgbWVzc2FnZTpcInJlZnJlc2hfaW5zdGFuY2Vfc2VjdXJpdHlfcnVsZXNcIiBBTkQgdGFnczpcInNjcmVlbi1uLWNwdS50eHRcIiIsImZpZWxkcyI6W10sIm9mZnNldCI6MCwidGltZWZyYW1lIjoiNjA0ODAwIiwiZ3JhcGhtb2RlIjoiY291bnQiLCJ0aW1lIjp7InVzZXJfaW50ZXJ2YWwiOjB9LCJzdGFtcCI6MTQ0MTk3ODU4MzAyMywibW9kZSI6IiIsImFuYWx5emVfZmllbGQiOiIifQ==", 
            "date_created": "2015-09-11 13:38:35.092450+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/222023\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=08d1153d3be9f8d59aa0acc03eedd45a1697ed7b\nSubmitter: Jenkins\nBranch:    stable/kilo\n\ncommit 08d1153d3be9f8d59aa0acc03eedd45a1697ed7b\nAuthor: Matt Riedemann <email address hidden>\nDate:   Wed Sep 9 20:29:09 2015 -0700\n\n    Don't expect meta attributes in object_compat that aren't in the db obj\n    \n    The object_compat decorator expects to get the Instance object with\n    'metadata' and 'system_metadata' attributes but if those aren't in the\n    db instance dict object, Instance._from_db_object will fail with a\n    KeyError.\n    \n    In Kilo this happens per refresh_instance_security_rules because in the\n    compute API code, the instance passed to refresh_instance_security_rules\n    comes from the call to get the security group(s) which joins on the\n    instances column, but that doesn't join on the metadata/system_metadata\n    fields for the instances.  So when the instances get to object_compat in\n    the compute manager and the db instance dict is converted to the\n    Instance object, it expects fields that aren't in the dict and we get\n    the KeyError.\n    \n    The refresh_instance_security_rules case is fixed in Liberty per commit\n    12fbe6f082ef9b70b89302e15daa12e851e507a7 - in that case the compute API\n    passes Instance objects to the compute manager so object_compat doesn't\n    have anything to do, _load_instance just sees instance_or_dict isn't a\n    dict and ignores it.\n    \n    We're making this change since (1) it's an obviously wrong assumption in\n    object_compat and should be fixed and (2) we need to backport this fix\n    to stable/kilo since it's an upgrade impact for users there.\n    \n    Closes-Bug: #1484738\n    \n    Change-Id: I36a954c095a9aa35879200784dc18e35edf689e6\n    (cherry picked from commit 9369aab04e37b7818d49b00e65857be8b3564e9e)\n", 
            "date_created": "2015-09-14 14:30:01.355115+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "OSSA bug 1491307 is fixed by the same fix for this bug.", 
            "date_created": "2015-09-25 13:50:16.391153+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }
    ], 
    "closed": "2015-09-24 07:01:00.804410+00:00"
}