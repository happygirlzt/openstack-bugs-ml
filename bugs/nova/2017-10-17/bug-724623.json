{
    "status": "Fix Released", 
    "last_updated": "2011-04-21 07:14:26.405332+00:00", 
    "description": "Dan Prince reported this in bug 724143, but this is a separate issue.  When metadata is specified, inserting into the database fails.  This is because the dictionaries for InstanceMetadata aren't mapped into the database model automatically, and apparently the unit tests didn't hit this.\n\nDan wrote:\nI also tried to create a server with metadata:\n\n  cs.create_server(:name => \"Yo\", :imageId => 3, :flavorId => 1, :metadata=>{\"foo\" => \"bar\"} )\n\nWhen trying with metadata I get a totally different exception:\n\n(nova.api.openstack): TRACE: File \"/usr/lib/python2.6/dist-packages/sqlalchemy/orm/collections.py\", line 660, in bulk_replace\n(nova.api.openstack): TRACE: constants = idset(existing_adapter or ()).intersection(values or ())\n(nova.api.openstack): TRACE: File \"/usr/lib/python2.6/dist-packages/sqlalchemy/util.py\", line 1104, in intersection\n(nova.api.openstack): TRACE: self._working_set(self._member_id_tuples()).intersection(_iter_id(iterable)))\n(nova.api.openstack): TRACE: TypeError: unhashable type: 'dict'", 
    "tags": [], 
    "importance": "Medium", 
    "heat": 8, 
    "link": "https://bugs.launchpad.net/nova/+bug/724623", 
    "owner": "https://api.launchpad.net/1.0/~justin-fathomdb", 
    "id": 724623, 
    "index": 2297, 
    "openned": "2011-02-24 22:46:25.556581+00:00", 
    "created": "2011-02-24 22:46:25.556581+00:00", 
    "title": "Creating servers with metadata fails", 
    "comments": [
        {
            "content": "Dan Prince reported this in bug 724143, but this is a separate issue.  When metadata is specified, inserting into the database fails.  This is because the dictionaries for InstanceMetadata aren't mapped into the database model automatically, and apparently the unit tests didn't hit this.\n\nDan wrote:\nI also tried to create a server with metadata:\n\n  cs.create_server(:name => \"Yo\", :imageId => 3, :flavorId => 1, :metadata=>{\"foo\" => \"bar\"} )\n\nWhen trying with metadata I get a totally different exception:\n\n(nova.api.openstack): TRACE: File \"/usr/lib/python2.6/dist-packages/sqlalchemy/orm/collections.py\", line 660, in bulk_replace\n(nova.api.openstack): TRACE: constants = idset(existing_adapter or ()).intersection(values or ())\n(nova.api.openstack): TRACE: File \"/usr/lib/python2.6/dist-packages/sqlalchemy/util.py\", line 1104, in intersection\n(nova.api.openstack): TRACE: self._working_set(self._member_id_tuples()).intersection(_iter_id(iterable)))\n(nova.api.openstack): TRACE: TypeError: unhashable type: 'dict'", 
            "date_created": "2011-02-24 22:46:25.556581+00:00", 
            "author": "https://api.launchpad.net/1.0/~justin-fathomdb"
        }, 
        {
            "content": "For anyone curious as to how this snuck through, when I tested it I created the DB model objects in the API layer.  I did manual functional testing at that stage.  I also created unit tests.  However, as part of the review process, it was pointed out that I shouldn't be touching DB objects in the API layer, and so I changed them to simple dictionaries.  The tests still passed, but apparently they didn't actually write to the DB, because when this was tried 'for real' it failed, because SQLAlchemy had trouble mapping nested object types (I believe).\n\nIn this patch, I've got real testing using the OpenStack API, writing to the DB.  It's got a long list of dependencies sadly...", 
            "date_created": "2011-02-24 23:02:34.869759+00:00", 
            "author": "https://api.launchpad.net/1.0/~justin-fathomdb"
        }
    ], 
    "closed": "2011-04-21 07:14:24.532943+00:00"
}