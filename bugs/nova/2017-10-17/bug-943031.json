{
    "status": "Fix Released", 
    "last_updated": "2012-12-12 14:42:08.575095+00:00", 
    "description": "After a prolonged period of inactivity, it looks like the MySQL connection times out but Keystone (Redux) does not reconnect\n\n...\n  File \"/usr/lib/pymodules/python2.7/routes/middleware.py\", line 131, in __call__\n    response = self.app(environ, start_response)\n  File \"/usr/lib/python2.7/dist-packages/webob/dec.py\", line 159, in __call__\n    return resp(environ, start_response)\n  File \"/usr/lib/python2.7/dist-packages/webob/dec.py\", line 159, in __call__\n    return resp(environ, start_response)\n  File \"/usr/lib/pymodules/python2.7/routes/middleware.py\", line 131, in __call__\n    response = self.app(environ, start_response)\n  File \"/usr/lib/python2.7/dist-packages/webob/dec.py\", line 159, in __call__\n    return resp(environ, start_response)\n  File \"/usr/lib/python2.7/dist-packages/webob/dec.py\", line 147, in __call__\n    resp = self.call_func(req, *args, **self.kwargs)\n  File \"/usr/lib/python2.7/dist-packages/webob/dec.py\", line 208, in call_func\n    return self.func(req, *args, **kwargs)\n  File \"/opt/stack/keystone/keystone/common/wsgi.py\", line 180, in __call__\n    result = method(context, **params)\n  File \"/opt/stack/keystone/keystone/service.py\", line 231, in authenticate\n    context=context, user_name=username)\n  File \"/opt/stack/keystone/keystone/common/manager.py\", line 34, in _wrapper\n    return f(*args, **kw)\n  File \"/opt/stack/keystone/keystone/identity/backends/sql.py\", line 188, in get_user_by_name\n    return _filter_user(self._get_user_by_name(user_name))\n  File \"/opt/stack/keystone/keystone/identity/backends/sql.py\", line 179, in _get_user_by_name\n    user_ref = session.query(User).filter_by(name=user_name).first()\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/query.py\", line 1652, in first\n    ret = list(self[0:1])\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/query.py\", line 1560, in __getitem__\n    return list(res)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/query.py\", line 1721, in __iter__\n    return self._execute_and_instances(context)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/query.py\", line 1726, in _execute_and_instances\n    mapper=self._mapper_zero_or_none())\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/session.py\", line 724, in execute\n    clause, params or {})\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 1191, in execute\n    params)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 1271, in _execute_clauseelement\n    return self.__execute_context(context)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 1302, in __execute_context\n    context.parameters[0], context=context)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 1401, in _cursor_execute\n    context)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 1394, in _cursor_execute\n    context)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/default.py\", line 299, in do_execute\n    cursor.execute(statement, parameters)\n  File \"/usr/lib/pymodules/python2.7/MySQLdb/cursors.py\", line 174, in execute\n    self.errorhandler(self, exc, value)\n  File \"/usr/lib/pymodules/python2.7/MySQLdb/connections.py\", line 36, in defaulterrorhandler\n    raise errorclass, errorvalue\nOperationalError: (OperationalError) (2006, 'MySQL server has gone away') 'SELECT user.id AS user_id, user.name AS user_name, user.extra AS user_extra \\nFROM user \\nWHERE user.name = %s \\n LIMIT 0, 1' ('demo',)", 
    "tags": [], 
    "importance": "High", 
    "heat": 52, 
    "link": "https://bugs.launchpad.net/nova/+bug/943031", 
    "owner": "https://api.launchpad.net/1.0/~ppyy", 
    "id": 943031, 
    "index": 600, 
    "openned": "2012-03-13 06:38:35.975572+00:00", 
    "created": "2012-02-29 02:10:29.392107+00:00", 
    "title": "After MySQL connection failure (or timeout), first request reports MySQL Server has gone away, following requests work", 
    "comments": [
        {
            "content": "After a prolonged period of inactivity, it looks like the MySQL connection times out but Keystone (Redux) does not reconnect\n\n...\n  File \"/usr/lib/pymodules/python2.7/routes/middleware.py\", line 131, in __call__\n    response = self.app(environ, start_response)\n  File \"/usr/lib/python2.7/dist-packages/webob/dec.py\", line 159, in __call__\n    return resp(environ, start_response)\n  File \"/usr/lib/python2.7/dist-packages/webob/dec.py\", line 159, in __call__\n    return resp(environ, start_response)\n  File \"/usr/lib/pymodules/python2.7/routes/middleware.py\", line 131, in __call__\n    response = self.app(environ, start_response)\n  File \"/usr/lib/python2.7/dist-packages/webob/dec.py\", line 159, in __call__\n    return resp(environ, start_response)\n  File \"/usr/lib/python2.7/dist-packages/webob/dec.py\", line 147, in __call__\n    resp = self.call_func(req, *args, **self.kwargs)\n  File \"/usr/lib/python2.7/dist-packages/webob/dec.py\", line 208, in call_func\n    return self.func(req, *args, **kwargs)\n  File \"/opt/stack/keystone/keystone/common/wsgi.py\", line 180, in __call__\n    result = method(context, **params)\n  File \"/opt/stack/keystone/keystone/service.py\", line 231, in authenticate\n    context=context, user_name=username)\n  File \"/opt/stack/keystone/keystone/common/manager.py\", line 34, in _wrapper\n    return f(*args, **kw)\n  File \"/opt/stack/keystone/keystone/identity/backends/sql.py\", line 188, in get_user_by_name\n    return _filter_user(self._get_user_by_name(user_name))\n  File \"/opt/stack/keystone/keystone/identity/backends/sql.py\", line 179, in _get_user_by_name\n    user_ref = session.query(User).filter_by(name=user_name).first()\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/query.py\", line 1652, in first\n    ret = list(self[0:1])\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/query.py\", line 1560, in __getitem__\n    return list(res)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/query.py\", line 1721, in __iter__\n    return self._execute_and_instances(context)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/query.py\", line 1726, in _execute_and_instances\n    mapper=self._mapper_zero_or_none())\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/session.py\", line 724, in execute\n    clause, params or {})\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 1191, in execute\n    params)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 1271, in _execute_clauseelement\n    return self.__execute_context(context)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 1302, in __execute_context\n    context.parameters[0], context=context)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 1401, in _cursor_execute\n    context)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 1394, in _cursor_execute\n    context)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/default.py\", line 299, in do_execute\n    cursor.execute(statement, parameters)\n  File \"/usr/lib/pymodules/python2.7/MySQLdb/cursors.py\", line 174, in execute\n    self.errorhandler(self, exc, value)\n  File \"/usr/lib/pymodules/python2.7/MySQLdb/connections.py\", line 36, in defaulterrorhandler\n    raise errorclass, errorvalue\nOperationalError: (OperationalError) (2006, 'MySQL server has gone away') 'SELECT user.id AS user_id, user.name AS user_name, user.extra AS user_extra \\nFROM user \\nWHERE user.name = %s \\n LIMIT 0, 1' ('demo',)", 
            "date_created": "2012-02-29 02:10:29.392107+00:00", 
            "author": "https://api.launchpad.net/1.0/~justin-fathomdb"
        }, 
        {
            "content": "Not sure if this is related to redux... Nati and I have seen it happen quite a bit in TryStack, and that is deployed with Diablo, not Essex... so this might be something vestigial?", 
            "date_created": "2012-02-29 03:53:10.954802+00:00", 
            "author": "https://api.launchpad.net/1.0/~jaypipes"
        }, 
        {
            "content": "justinsb - could you let us know what specific version of keystone you saw this with (either commitish or date you checked it out or something)?", 
            "date_created": "2012-03-06 17:50:53.891750+00:00", 
            "author": "https://api.launchpad.net/1.0/~heckj"
        }, 
        {
            "content": "I 've seen this on master recently, I think  the commit was: https://github.com/openstack/keystone/commit/b69885596ba03d7e307082e902e541a85ca68fe0.  Are you working on this? I think this should make into Essex, If nobody is working on this I can do it, borrowing some code from nova (see https://github.com/openstack/nova/blob/master/nova/db/sqlalchemy/session.py#L47 and https://github.com/openstack/nova/blob/master/nova/exception.py#L87) it should be quite easy.\n\nBye", 
            "date_created": "2012-03-06 22:51:44.345536+00:00", 
            "author": "https://api.launchpad.net/1.0/~rafadurancastaneda"
        }, 
        {
            "content": "As additional note this easily reproducilble just restarting MySQL, then next request will fail and the following will work. In my previous post I pontied to using wrap_db_error, which I think would be great, but probably not the best place to solve this. After researching a bit, it seems using SQLAlchemy pool (I think pool is only configured for SQLite and using sqlalchemy.pool.NullPool) with a suitable 'recycle' value.", 
            "date_created": "2012-03-07 10:05:56.297545+00:00", 
            "author": "https://api.launchpad.net/1.0/~rafadurancastaneda"
        }, 
        {
            "content": "Confirming Rafael's details - it does reconnect, but the first attempt through it throwing a failure, subsequent queries work correctly.", 
            "date_created": "2012-03-07 17:35:39.731846+00:00", 
            "author": "https://api.launchpad.net/1.0/~heckj"
        }, 
        {
            "content": "Since it seems nobody is working so  I will do it myself. I think two possible approach:\n- Wrap DB calls and catch the error, retrying when we detect MySQL has gone away error. In addition it might be useful wait some time before retrying since in some cases, e.g.: server reboot, MySQL might not be available intermediately but after some time,  so it can be worthy adding a flag how many seconds before re-trying.\n\n-DB pool and suitable 'recycle' value should work too on long idle connections, but I'm not sure if this would fix the case where MySQL is rebooted too. In this case, it might be worthy too adding a flag, so DB pool class is configurable.\n\nFor now, I will borrow some code from Nova for wrapping DB calls since this can fix all situations and has some extra advantages. Any thought about this?", 
            "date_created": "2012-03-07 20:52:15.731931+00:00", 
            "author": "https://api.launchpad.net/1.0/~rafadurancastaneda"
        }, 
        {
            "content": "Rafael - \n\nsounds like a good plan of attack - thank you for working on this!", 
            "date_created": "2012-03-07 22:16:55.469357+00:00", 
            "author": "https://api.launchpad.net/1.0/~heckj"
        }, 
        {
            "content": "You are welcomed Joseph. Wrapping query and flush (as Nova does) first approach is no working, I will try to find another way later today.", 
            "date_created": "2012-03-08 08:10:59.731024+00:00", 
            "author": "https://api.launchpad.net/1.0/~rafadurancastaneda"
        }, 
        {
            "content": "I've noticed same error on Glance, so I think thys might be affecting not just keystone but all \"SQL enabled\" services.  Do I must report new bugs? \n\nAfter restarting MySQL:\n\nglance -A 9841b5bc284d478c97fad6ca6932efaf index\n\nFailed to show index. Got error:\nInternal Server error: Traceback (most recent call last):\n  File \"/usr/lib/python2.7/dist-packages/eventlet/wsgi.py\", line 336, in handle_one_response\n    result = self.application(self.environ, start_response)\n  File \"/usr/lib/python2.7/dist-packages/webob/dec.py\", line 147, in __call__\n    resp = self.call_func(req, *args, **self.kwargs)\n  File \"/usr/lib/python2.7/dist-packages/webob/dec.py\", line 208, in call_func\n    return self.func(req, *args, **kwargs)\n  File \"/usr/lib/python2.7/dist-packages/glance/common/wsgi.py\", line 279, in __call__\n    response = req.get_response(self.application)\n  File \"/usr/lib/python2.7/dist-packages/webob/request.py\", line 1053, in get_response\n    application, catch_exc_info=False)\n  File \"/usr/lib/python2.7/dist-packages/webob/request.py\", line 1022, in call_application\n    app_iter = application(self.environ, start_response)\n  File \"/usr/local/lib/python2.7/dist-packages/keystone/middleware/auth_token.py\", line 166, in __call__\n    return self.app(env, start_response)\n  File \"/usr/lib/python2.7/dist-packages/webob/dec.py\", line 147, in __call__\n    resp = self.call_func(req, *args, **self.kwargs)\n  File \"/usr/lib/python2.7/dist-packages/webob/dec.py\", line 208, in call_func\n    return self.func(req, *args, **kwargs)\n  File \"/usr/lib/python2.7/dist-packages/glance/common/wsgi.py\", line 279, in __call__\n    response = req.get_response(self.application)\n  File \"/usr/lib/python2.7/dist-packages/webob/request.py\", line 1053, in get_response\n    application, catch_exc_info=False)\n  File \"/usr/lib/python2.7/dist-packages/webob/request.py\", line 1022, in call_application\n    app_iter = application(self.environ, start_response)\n  File \"/usr/lib/python2.7/dist-packages/webob/dec.py\", line 159, in __call__\n    return resp(environ, start_response)\n  File \"/usr/lib/pymodules/python2.7/routes/middleware.py\", line 131, in __call__\n    response = self.app(environ, start_response)\n  File \"/usr/lib/python2.7/dist-packages/webob/dec.py\", line 159, in __call__\n    return resp(environ, start_response)\n  File \"/usr/lib/python2.7/dist-packages/webob/dec.py\", line 147, in __call__\n    resp = self.call_func(req, *args, **self.kwargs)\n  File \"/usr/lib/python2.7/dist-packages/webob/dec.py\", line 208, in call_func\n    return self.func(req, *args, **kwargs)\n  File \"/usr/lib/python2.7/dist-packages/glance/common/wsgi.py\", line 477, in __call__\n    request, **action_args)\n  File \"/usr/lib/python2.7/dist-packages/glance/common/wsgi.py\", line 494, in dispatch\n    return method(*args, **kwargs)\n  File \"/usr/lib/python2.7/dist-packages/glance/api/v1/images.py\", line 135, in index\n    images = registry.get_images_list(req.context, **params)\n  File \"/usr/lib/python2.7/dist-packages/glance/registry/__init__.py\", line 103, in get_images_list\n    return c.get_images(**kwargs)\n  File \"/usr/lib/python2.7/dist-packages/glance/registry/client.py\", line 74, in get_images\n    res = self.do_request(\"GET\", \"/images\", params=params)\n  File \"/usr/lib/python2.7/dist-packages/glance/common/client.py\", line 58, in wrapped\n    return func(self, *args, **kwargs)\n  File \"/usr/lib/python2.7/dist-packages/glance/common/client.py\", line 390, in do_request\n    headers=headers)\n  File \"/usr/lib/python2.7/dist-packages/glance/common/client.py\", line 75, in wrapped\n    return func(self, method, url, body, headers)\n  File \"/usr/lib/python2.7/dist-packages/glance/common/client.py\", line 512, in _do_request\n    raise Exception(\"Internal Server error: %s\" % res.read())\nException: Internal Server error: Traceback (most recent call last):\n  File \"/usr/lib/python2.7/dist-packages/eventlet/wsgi.py\", line 336, in handle_one_response\n    result = self.application(self.environ, start_response)\n  File \"/usr/local/lib/python2.7/dist-packages/keystone/middleware/auth_token.py\", line 166, in __call__\n    return self.app(env, start_response)\n  File \"/usr/lib/python2.7/dist-packages/webob/dec.py\", line 147, in __call__\n    resp = self.call_func(req, *args, **self.kwargs)\n  File \"/usr/lib/python2.7/dist-packages/webob/dec.py\", line 208, in call_func\n    return self.func(req, *args, **kwargs)\n  File \"/usr/lib/python2.7/dist-packages/glance/common/wsgi.py\", line 279, in __call__\n    response = req.get_response(self.application)\n  File \"/usr/lib/python2.7/dist-packages/webob/request.py\", line 1053, in get_response\n    application, catch_exc_info=False)\n  File \"/usr/lib/python2.7/dist-packages/webob/request.py\", line 1022, in call_application\n    app_iter = application(self.environ, start_response)\n  File \"/usr/lib/python2.7/dist-packages/webob/dec.py\", line 159, in __call__\n    return resp(environ, start_response)\n  File \"/usr/lib/pymodules/python2.7/routes/middleware.py\", line 131, in __call__\n    response = self.app(environ, start_response)\n  File \"/usr/lib/python2.7/dist-packages/webob/dec.py\", line 159, in __call__\n    return resp(environ, start_response)\n  File \"/usr/lib/python2.7/dist-packages/webob/dec.py\", line 147, in __call__\n    resp = self.call_func(req, *args, **self.kwargs)\n  File \"/usr/lib/python2.7/dist-packages/webob/dec.py\", line 208, in call_func\n    return self.func(req, *args, **kwargs)\n  File \"/usr/lib/python2.7/dist-packages/glance/common/wsgi.py\", line 477, in __call__\n    request, **action_args)\n  File \"/usr/lib/python2.7/dist-packages/glance/common/wsgi.py\", line 494, in dispatch\n    return method(*args, **kwargs)\n  File \"/usr/lib/python2.7/dist-packages/glance/registry/api/v1/images.py\", line 94, in index\n    images = self._get_images(req.context, **params)\n  File \"/usr/lib/python2.7/dist-packages/glance/registry/api/v1/images.py\", line 68, in _get_images\n    return db_api.image_get_all(context, **params)\n  File \"/usr/lib/python2.7/dist-packages/glance/registry/db/api.py\", line 347, in image_get_all\n    return query.all()\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/query.py\", line 1611, in all\n    return list(self)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/query.py\", line 1721, in __iter__\n    return self._execute_and_instances(context)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/query.py\", line 1726, in _execute_and_instances\n    mapper=self._mapper_zero_or_none())\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/session.py\", line 724, in execute\n    clause, params or {})\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 1191, in execute\n    params)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 1271, in _execute_clauseelement\n    return self.__execute_context(context)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 1302, in __execute_context\n    context.parameters[0], context=context)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 1401, in _cursor_execute\n    context)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 1394, in _cursor_execute\n    context)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/default.py\", line 299, in do_execute\n    cursor.execute(statement, parameters)\n  File \"/usr/lib/pymodules/python2.7/MySQLdb/cursors.py\", line 174, in execute\n    self.errorhandler(self, exc, value)\n  File \"/usr/lib/pymodules/python2.7/MySQLdb/connections.py\", line 36, in defaulterrorhandler\n    raise errorclass, errorvalue\nOperationalError: (OperationalError) (2006, 'MySQL server has gone away') 'SELECT anon_1.images_created_at AS anon_1_images_created_at, anon_1.images_updated_at AS anon_1_images_updated_at, anon_1.images_deleted_at AS anon_1_images_deleted_at, anon_1.images_deleted AS anon_1_images_deleted, anon_1.images_id AS anon_1_images_id, anon_1.images_name AS anon_1_images_name, anon_1.images_disk_format AS anon_1_images_disk_format, anon_1.images_container_format AS anon_1_images_container_format, anon_1.images_size AS anon_1_images_size, anon_1.images_status AS anon_1_images_status, anon_1.images_is_public AS anon_1_images_is_public, anon_1.images_location AS anon_1_images_location, anon_1.images_checksum AS anon_1_images_checksum, anon_1.images_min_disk AS anon_1_images_min_disk, anon_1.images_min_ram AS anon_1_images_min_ram, anon_1.images_owner AS anon_1_images_owner, anon_1.images_protected AS anon_1_images_protected, image_properties_1.created_at AS image_properties_1_created_at, image_properties_1.updated_at AS image_properties_1_updated_at, image_properties_1.deleted_at AS image_properties_1_deleted_at, image_properties_1.deleted AS image_properties_1_deleted, image_properties_1.id AS image_properties_1_id, image_properties_1.image_id AS image_properties_1_image_id, image_properties_1.name AS image_properties_1_name, image_properties_1.value AS image_properties_1_value, image_members_1.created_at AS image_members_1_created_at, image_members_1.updated_at AS image_members_1_updated_at, image_members_1.deleted_at AS image_members_1_deleted_at, image_members_1.deleted AS image_members_1_deleted, image_members_1.id AS image_members_1_id, image_members_1.image_id AS image_members_1_image_id, image_members_1.member AS image_members_1_member, image_members_1.can_share AS image_members_1_can_share \\nFROM (SELECT images.created_at AS images_created_at, images.updated_at AS images_updated_at, images.deleted_at AS images_deleted_at, images.deleted AS images_deleted, images.id AS images_id, images.name AS images_name, images.disk_format AS images_disk_format, images.container_format AS images_container_format, images.size AS images_size, images.status AS images_status, images.is_public AS images_is_public, images.location AS images_location, images.checksum AS images_checksum, images.min_disk AS images_min_disk, images.min_ram AS images_min_ram, images.owner AS images_owner, images.protected AS images_protected \\nFROM images \\nWHERE (images.is_public = %s OR images.owner = %s OR (EXISTS (SELECT 1 \\nFROM image_members \\nWHERE images.id = image_members.image_id AND image_members.member = %s AND image_members.deleted = %s))) AND images.deleted = %s AND images.status != %s ORDER BY images.created_at DESC, images.created_at DESC, images.id DESC \\n LIMIT 10) AS anon_1 LEFT OUTER JOIN image_properties AS image_properties_1 ON anon_1.images_id = image_properties_1.image_id LEFT OUTER JOIN image_members AS image_members_1 ON anon_1.images_id = image_members_1.image_id ORDER BY anon_1.images_created_at DESC, anon_1.images_created_at DESC, anon_1.images_id DESC' (1, u'service_tenant', u'service_tenant', 0, 0, 'killed')", 
            "date_created": "2012-03-08 10:42:30.321947+00:00", 
            "author": "https://api.launchpad.net/1.0/~rafadurancastaneda"
        }, 
        {
            "content": "bug confirmed", 
            "date_created": "2012-03-11 03:04:28.357205+00:00", 
            "author": "https://api.launchpad.net/1.0/~ppyy"
        }, 
        {
            "content": "here is a patch:\n\nhttps://review.openstack.org/#change,5212", 
            "date_created": "2012-03-11 10:37:56.844190+00:00", 
            "author": "https://api.launchpad.net/1.0/~ppyy"
        }, 
        {
            "content": "Hi,\n\nJust some comments since I was working on this too. So far I've just got the same solution as Peng Yong (no exactly the same implementation, but very close) and I don't like this \"pessimistic ask permission approach\"; however it seems to be the only working solution. Peng Yong I've saw your patches and your comments on git review, why don't you use just \"select 1\" instead of \"select now()\"?\n\nBye", 
            "date_created": "2012-03-12 09:20:57.422069+00:00", 
            "author": "https://api.launchpad.net/1.0/~rafadurancastaneda"
        }, 
        {
            "content": "update the patch. thanks Rafael Dur\u00e1n Casta\u00f1eda ", 
            "date_created": "2012-03-12 14:54:55.507681+00:00", 
            "author": "https://api.launchpad.net/1.0/~ppyy"
        }, 
        {
            "content": "Re-assigning based on progress in merge prop.", 
            "date_created": "2012-03-12 17:03:32.009596+00:00", 
            "author": "https://api.launchpad.net/1.0/~dolph"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/5213\nCommitted: http://github.com/openstack/nova/commit/42a96d7ca0d6dc1fe5c048e67d5649bf5b513d0d\nSubmitter: Jenkins\nBranch:    master\n\ncommit 42a96d7ca0d6dc1fe5c048e67d5649bf5b513d0d\nAuthor: Peng Yong <email address hidden>\nDate:   Sun Mar 11 11:51:31 2012 +0800\n\n    refactoring code, check connection in Listener. refer to Bug #943031\n    \n    Change-Id: Ic04d1a918fedd5fd71f58af8e27b58deef070ee2\n", 
            "date_created": "2012-03-13 19:08:53.459437+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/5212\nCommitted: http://github.com/openstack/keystone/commit/e65a22c43a7fe44621080cee01f394c90b54320d\nSubmitter: Jenkins\nBranch:    master\n\ncommit e65a22c43a7fe44621080cee01f394c90b54320d\nAuthor: Peng Yong <email address hidden>\nDate:   Sun Mar 11 10:35:15 2012 +0800\n\n    Bug #943031 MySQL Server has gone away\n    added docnotes of error messages caught for mysql and reference\n    \n    Change-Id: I147b32193436be891e54e36c6adc1b16fda886d3\n", 
            "date_created": "2012-03-13 22:43:41.360289+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Is this fix going to be merged in the 'milestone-proposed' branch?", 
            "date_created": "2012-03-14 13:29:39.279118+00:00", 
            "author": "https://api.launchpad.net/1.0/~unmesh-gurjar"
        }, 
        {
            "content": "The milestone-proposed branch will be rebased on the master branch at RC1 time, so yes.", 
            "date_created": "2012-03-14 14:04:40.000189+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/5220\nCommitted: http://github.com/openstack/quantum/commit/189b89a9c87b1eae9f55e5b8c98cf907d3acd61d\nSubmitter: Jenkins\nBranch:    master\n\ncommit 189b89a9c87b1eae9f55e5b8c98cf907d3acd61d\nAuthor: Peng Yong <email address hidden>\nDate:   Mon Mar 12 00:06:53 2012 +0800\n\n    check connection in Listener. refer to Bug #943031\n    \n    Change-Id: I5a0c975ab7998627a213ac4c69c037e9e2d95bfa\n", 
            "date_created": "2012-03-14 16:51:46.383754+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Verified on Horizon. To repro I set wait_timeout in my.conf to 5 seconds and then tried to reproduce. Looks good.", 
            "date_created": "2012-03-16 21:10:42.683815+00:00", 
            "author": "https://api.launchpad.net/1.0/~tres"
        }, 
        {
            "content": "I can still verify the bug against Glance. Adding Glance to the also affects list.", 
            "date_created": "2012-03-16 21:21:14.367368+00:00", 
            "author": "https://api.launchpad.net/1.0/~tres"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/5486", 
            "date_created": "2012-03-18 16:23:34.602414+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "fix for glance:\nhttps://review.openstack.org/5486", 
            "date_created": "2012-03-18 16:23:51.849252+00:00", 
            "author": "https://api.launchpad.net/1.0/~ppyy"
        }, 
        {
            "content": "@tres, i have't find fix for horizon, can you give me the git version?", 
            "date_created": "2012-03-18 16:26:58.870238+00:00", 
            "author": "https://api.launchpad.net/1.0/~ppyy"
        }, 
        {
            "content": "No fix required for Horizon since it no longer requires MySQL, however, since Horizon is downstream from the rest of OpenStack it surfaced this bug across multiple services which is why it's in the affected list.", 
            "date_created": "2012-03-18 18:44:46.258295+00:00", 
            "author": "https://api.launchpad.net/1.0/~tres"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/5486\nCommitted: http://github.com/openstack/glance/commit/1f0c4ba67aced9a7ad857cddc0602b243bf38a10\nSubmitter: Jenkins\nBranch:    master\n\ncommit 1f0c4ba67aced9a7ad857cddc0602b243bf38a10\nAuthor: Peng Yong <email address hidden>\nDate:   Mon Mar 19 00:23:03 2012 +0800\n\n    check connection in Listener. refer to Bug #943031\n    \n    Change-Id: I78ec4304a4122c2854799d42737ba3b7bbb76137\n", 
            "date_created": "2012-03-19 15:39:59.331876+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2012-03-20 08:41:05.246874+00:00"
}