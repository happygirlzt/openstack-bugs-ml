{
    "status": "Fix Released", 
    "last_updated": "2012-04-05 10:55:08.209987+00:00", 
    "description": "For reasons beyond my understanding, when a nova-compute node (KVM) retrieves an image from the objectstore, it tries to resize it to a minimal size of 10GB. The image itself is 3GB, qcow2 format. The resize command however fails, so the first run of an instance on that compute node will fail.\nIf I start a second instance of that same image on that same compute node, a copy of the image is already there (not resized, because it failed earlier on), and it will start perfectly.\n\nnova-compute.log\n2011-12-16 13:57:14,400 ERROR nova.rpc [-] Exception during message handling\n(nova.rpc): TRACE: Traceback (most recent call last):\n(nova.rpc): TRACE:   File \"/usr/lib64/python2.7/site-packages/nova/rpc/impl_kombu.py\", line 620, in _process_data\n(nova.rpc): TRACE:     rval = node_func(context=ctxt, **node_args)\n(nova.rpc): TRACE:   File \"/usr/lib64/python2.7/site-packages/nova/exception.py\", line 115, in wrapped\n(nova.rpc): TRACE:     return f(*args, **kw)\n(nova.rpc): TRACE:   File \"/usr/lib64/python2.7/site-packages/nova/compute/manager.py\", line 532, in run_instance\n(nova.rpc): TRACE:     self._run_instance(context, instance_uuid, **kwargs)\n(nova.rpc): TRACE:   File \"/usr/lib64/python2.7/site-packages/nova/compute/manager.py\", line 362, in _run_instance\n(nova.rpc): TRACE:     self.add_instance_fault_from_exc(context, instance_uuid, e)\n(nova.rpc): TRACE:   File \"/usr/lib64/python2.7/contextlib.py\", line 24, in __exit__\n(nova.rpc): TRACE:     self.gen.next()\n(nova.rpc): TRACE:   File \"/usr/lib64/python2.7/site-packages/nova/compute/manager.py\", line 348, in _run_instance\n(nova.rpc): TRACE:     self._deallocate_network(context, instance)\n(nova.rpc): TRACE:   File \"/usr/lib64/python2.7/contextlib.py\", line 24, in __exit__\n(nova.rpc): TRACE:     self.gen.next()\n(nova.rpc): TRACE:   File \"/usr/lib64/python2.7/site-packages/nova/compute/manager.py\", line 345, in _run_instance\n(nova.rpc): TRACE:     injected_files, admin_password)\n(nova.rpc): TRACE:   File \"/usr/lib64/python2.7/site-packages/nova/compute/manager.py\", line 479, in _spawn\n(nova.rpc): TRACE:     network_info, block_device_info)\n(nova.rpc): TRACE:   File \"/usr/lib64/python2.7/site-packages/nova/exception.py\", line 115, in wrapped\n(nova.rpc): TRACE:     return f(*args, **kw)\n(nova.rpc): TRACE:   File \"/usr/lib64/python2.7/site-packages/nova/virt/libvirt/connection.py\", line 670, in spawn\n(nova.rpc): TRACE:     block_device_info=block_device_info)\n(nova.rpc): TRACE:   File \"/usr/lib64/python2.7/site-packages/nova/virt/libvirt/connection.py\", line 917, in _create_image\n(nova.rpc): TRACE:     size=size)\n(nova.rpc): TRACE:   File \"/usr/lib64/python2.7/site-packages/nova/virt/libvirt/connection.py\", line 811, in _cache_image\n(nova.rpc): TRACE:     call_if_not_exists(base, fn, *args, **kwargs)\n(nova.rpc): TRACE:   File \"/usr/lib64/python2.7/site-packages/nova/utils.py\", line 764, in inner\n(nova.rpc): TRACE:     retval = f(*args, **kwargs)\n(nova.rpc): TRACE:   File \"/usr/lib64/python2.7/site-packages/nova/virt/libvirt/connection.py\", line 809, in call_if_not_exists\n(nova.rpc): TRACE:     fn(target=base, *args, **kwargs)\n(nova.rpc): TRACE:   File \"/usr/lib64/python2.7/site-packages/nova/virt/libvirt/utils.py\", line 259, in fetch_image\n(nova.rpc): TRACE:     disk.extend(target, size)\n(nova.rpc): TRACE:   File \"/usr/lib64/python2.7/site-packages/nova/virt/disk.py\", line 103, in extend\n(nova.rpc): TRACE:     utils.execute('qemu-img', 'resize', image, size)\n(nova.rpc): TRACE:   File \"/usr/lib64/python2.7/site-packages/nova/utils.py\", line 216, in execute\n(nova.rpc): TRACE:     cmd=' '.join(cmd))\n(nova.rpc): TRACE: ProcessExecutionError: Unexpected error while running command.\n(nova.rpc): TRACE: Command: qemu-img resize /var/lib/nova/instances/_base/95e7a40163132fe81772983826549481928e28c2 10737418240\n(nova.rpc): TRACE: Exit code: 1\n(nova.rpc): TRACE: Stdout: ''\n(nova.rpc): TRACE: Stderr: 'qemu-img: This image format does not support resize\\n'\n\nIf I run it by hand:\ncompute11.internal _base # qemu-img resize /var/lib/nova/instances/_base/95e7a40163132fe81772983826549481928e28c2 10737418240\nqemu-img: This image format does not support resize\n\ncompute11.internal _base # qemu-img resize /var/lib/nova/instances/_base/95e7a40163132fe81772983826549481928e28c2 +10737418240\nImage resized.\n\nApparently, the qemu-img resize command only works with qcow2 images if you indicate either a grow or shrink operation, by using + | - size.\n\nIf I convert it to raw, then resize it, it works though:\ncompute11.internal _base # qemu-img convert 95e7a40163132fe81772983826549481928e28c2 -O raw 95e7a40163132fe81772983826549481928e28c2.raw\ncompute11.internal _base # qemu-img resize 95e7a40163132fe81772983826549481928e28c2.raw 10737418240\nImage resized.\n\nThe resize command got changed in this commit from using truncate to using qemu-img: https://github.com/openstack/nova/commit/dd7aa0234080d5c3512d0e9bab831a621aac10aa\n\nMaybe change it to qemu-img resize image +(size - file_size) in case of qcow2 images if possible?\n\nWe're running nova trunk.", 
    "tags": [], 
    "importance": "Medium", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/905350", 
    "owner": "https://api.launchpad.net/1.0/~motokentsai", 
    "id": 905350, 
    "index": 2693, 
    "openned": "2011-12-16 14:42:29.002399+00:00", 
    "created": "2011-12-16 14:42:29.002399+00:00", 
    "title": "nova-compute qemu-img resize command fails", 
    "comments": [
        {
            "content": "For reasons beyond my understanding, when a nova-compute node (KVM) retrieves an image from the objectstore, it tries to resize it to a minimal size of 10GB. The image itself is 3GB, qcow2 format. The resize command however fails, so the first run of an instance on that compute node will fail.\nIf I start a second instance of that same image on that same compute node, a copy of the image is already there (not resized, because it failed earlier on), and it will start perfectly.\n\nHowever, the qemu-img resize command only works with qcow2 images if you indicate either a grow or shrink operation, using + | -: \n\nnova-compute.log\n2011-12-16 13:57:14,400 ERROR nova.rpc [-] Exception during message handling\n(nova.rpc): TRACE: Traceback (most recent call last):\n(nova.rpc): TRACE:   File \"/usr/lib64/python2.7/site-packages/nova/rpc/impl_kombu.py\", line 620, in _process_data\n(nova.rpc): TRACE:     rval = node_func(context=ctxt, **node_args)\n(nova.rpc): TRACE:   File \"/usr/lib64/python2.7/site-packages/nova/exception.py\", line 115, in wrapped\n(nova.rpc): TRACE:     return f(*args, **kw)\n(nova.rpc): TRACE:   File \"/usr/lib64/python2.7/site-packages/nova/compute/manager.py\", line 532, in run_instance\n(nova.rpc): TRACE:     self._run_instance(context, instance_uuid, **kwargs)\n(nova.rpc): TRACE:   File \"/usr/lib64/python2.7/site-packages/nova/compute/manager.py\", line 362, in _run_instance\n(nova.rpc): TRACE:     self.add_instance_fault_from_exc(context, instance_uuid, e)\n(nova.rpc): TRACE:   File \"/usr/lib64/python2.7/contextlib.py\", line 24, in __exit__\n(nova.rpc): TRACE:     self.gen.next()\n(nova.rpc): TRACE:   File \"/usr/lib64/python2.7/site-packages/nova/compute/manager.py\", line 348, in _run_instance\n(nova.rpc): TRACE:     self._deallocate_network(context, instance)\n(nova.rpc): TRACE:   File \"/usr/lib64/python2.7/contextlib.py\", line 24, in __exit__\n(nova.rpc): TRACE:     self.gen.next()\n(nova.rpc): TRACE:   File \"/usr/lib64/python2.7/site-packages/nova/compute/manager.py\", line 345, in _run_instance\n(nova.rpc): TRACE:     injected_files, admin_password)\n(nova.rpc): TRACE:   File \"/usr/lib64/python2.7/site-packages/nova/compute/manager.py\", line 479, in _spawn\n(nova.rpc): TRACE:     network_info, block_device_info)\n(nova.rpc): TRACE:   File \"/usr/lib64/python2.7/site-packages/nova/exception.py\", line 115, in wrapped\n(nova.rpc): TRACE:     return f(*args, **kw)\n(nova.rpc): TRACE:   File \"/usr/lib64/python2.7/site-packages/nova/virt/libvirt/connection.py\", line 670, in spawn\n(nova.rpc): TRACE:     block_device_info=block_device_info)\n(nova.rpc): TRACE:   File \"/usr/lib64/python2.7/site-packages/nova/virt/libvirt/connection.py\", line 917, in _create_image\n(nova.rpc): TRACE:     size=size)\n(nova.rpc): TRACE:   File \"/usr/lib64/python2.7/site-packages/nova/virt/libvirt/connection.py\", line 811, in _cache_image\n(nova.rpc): TRACE:     call_if_not_exists(base, fn, *args, **kwargs)\n(nova.rpc): TRACE:   File \"/usr/lib64/python2.7/site-packages/nova/utils.py\", line 764, in inner\n(nova.rpc): TRACE:     retval = f(*args, **kwargs)\n(nova.rpc): TRACE:   File \"/usr/lib64/python2.7/site-packages/nova/virt/libvirt/connection.py\", line 809, in call_if_not_exists\n(nova.rpc): TRACE:     fn(target=base, *args, **kwargs)\n(nova.rpc): TRACE:   File \"/usr/lib64/python2.7/site-packages/nova/virt/libvirt/utils.py\", line 259, in fetch_image\n(nova.rpc): TRACE:     disk.extend(target, size)\n(nova.rpc): TRACE:   File \"/usr/lib64/python2.7/site-packages/nova/virt/disk.py\", line 103, in extend\n(nova.rpc): TRACE:     utils.execute('qemu-img', 'resize', image, size)\n(nova.rpc): TRACE:   File \"/usr/lib64/python2.7/site-packages/nova/utils.py\", line 216, in execute\n(nova.rpc): TRACE:     cmd=' '.join(cmd))\n(nova.rpc): TRACE: ProcessExecutionError: Unexpected error while running command.\n(nova.rpc): TRACE: Command: qemu-img resize /var/lib/nova/instances/_base/95e7a40163132fe81772983826549481928e28c2 10737418240\n(nova.rpc): TRACE: Exit code: 1\n(nova.rpc): TRACE: Stdout: ''\n(nova.rpc): TRACE: Stderr: 'qemu-img: This image format does not support resize\\n'\n\nIf I run it by hand:\ncompute11.internal _base # qemu-img resize /var/lib/nova/instances/_base/95e7a40163132fe81772983826549481928e28c2 10737418240\nqemu-img: This image format does not support resize\n\ncompute11.internal _base # qemu-img resize /var/lib/nova/instances/_base/95e7a40163132fe81772983826549481928e28c2 +10737418240\nImage resized.\n\nIf I convert it to raw, then resize it, it works though:\ncompute11.internal _base # qemu-img convert 95e7a40163132fe81772983826549481928e28c2 -O raw 95e7a40163132fe81772983826549481928e28c2.raw\ncompute11.internal _base # qemu-img resize 95e7a40163132fe81772983826549481928e28c2.raw 10737418240\nImage resized.\n\nThe resize command got changed in this commit from using truncate to using qemu-img: https://github.com/openstack/nova/commit/dd7aa0234080d5c3512d0e9bab831a621aac10aa\n\nMaybe change it to qemu-img resize image +(size - file_size) in case of qcow2 images if possible?\n\nWe're running nova trunk.", 
            "date_created": "2011-12-16 14:42:29.002399+00:00", 
            "author": "https://api.launchpad.net/1.0/~maartenvandenbogaard"
        }, 
        {
            "content": "FYI, both absolute and relative resizing works fine with qemu-img-0.12.1.2-2.209.el6.x86_64 and qemu-img-0.14.0-7.fc15.x86_64 here (with qcow images)\nThe only caveat is that one can't shrink images.\nAre you sure the _virtual size_ reported by `qemu-img info` was < 10G?\n", 
            "date_created": "2011-12-21 13:35:10.090182+00:00", 
            "author": "https://api.launchpad.net/1.0/~p-draigbrady"
        }, 
        {
            "content": "Where did qemu-img come from?  What is its version?\nqemu-img resize *does* work fine for resizing a disk image in qcow2 or raw as seen here:\n$ bytes_1G=$((1*1024*1024*1024))\n$ bytes_2G=$((2*1024*1024*1024))\n$ FMTS=\"qcow qcow2 raw\"\n\n$ for f in $FMTS; do \\\n  rm -f disk-$f.img; qemu-img create -f $f disk-$f.img $bytes_1G; done\nFormatting 'disk-qcow.img', fmt=qcow size=1073741824 encryption=off \nFormatting 'disk-qcow2.img', fmt=qcow2 size=1073741824 encryption=off cluster_size=65536 \nFormatting 'disk-raw.img', fmt=raw size=1073741824 \n\n$ for f in $FMTS; do \\\n  qemu-img resize disk-$f.img $bytes_2G || \\\n     echo \"failed resize for $f\"; done\nqemu-img: This image format does not support resize\nfailed resize for qcow\nImage resized.\nImage resized.\n\n$ for f in $FMTS; do echo == $f ==; \\\n   qemu-img info disk-$f.img ; done== qcow ==\nimage: disk-qcow.img\nfile format: qcow\nvirtual size: 1.0G (1073741824 bytes)\ndisk size: 8.0K\ncluster_size: 4096\n== qcow2 ==\nimage: disk-qcow2.img\nfile format: qcow2\nvirtual size: 2.0G (2147483648 bytes)\ndisk size: 140K\ncluster_size: 65536\n== raw ==\nimage: disk-raw.img\nfile format: raw\nvirtual size: 2.0G (2147483648 bytes)\ndisk size: 0\n\n\nthe image was correctly resized to the target bytes for qcow2 and raw.  Apparently it does fail (with sane error message) for qcow format.\n\ncould you please collect:\n $ qemu-img info $YOUR_IMAGE\nand the version of qemu-img you have (possibly modified for whatever package manager you have for your distro)\n $ dpkg-query --show $(dpkg -S `which qemu-img` | cut -d: -f1)\n", 
            "date_created": "2011-12-21 13:45:04.528976+00:00", 
            "author": "https://api.launchpad.net/1.0/~smoser"
        }, 
        {
            "content": "The rason that we use qemu-img is that if you did use truncate (as before) the actual file would be grown, but the qcow metadata would not have been updated, so the disk to the guest would not be any different.  Ie, truncate doesn't do anything on qcow2 images.", 
            "date_created": "2011-12-21 13:46:23.825685+00:00", 
            "author": "https://api.launchpad.net/1.0/~smoser"
        }, 
        {
            "content": "Hmm unfortunately I did not make a correct distinction between disk size and virtual size in my bug report. The 3GB is the disk size, the virtual size is 29GB. So why it tries to resize to 10GB I don't know. Maybe the sizes got mixed up, so that it assumes the disk size is the virtual size and therefore tries to resize it to 10GB, as defined in:\n\nnova/virt/disk.py\nflags.DEFINE_integer('minimum_root_size', 1024 * 1024 * 1024 * 10,\n                     'minimum size in bytes of root partition')\n\nqemu-img info output:\ncompute3.internal _base # qemu-img info 95e7a40163132fe81772983826549481928e28c2 \nimage: 95e7a40163132fe81772983826549481928e28c2\nfile format: qcow2\nvirtual size: 29G (31247838720 bytes)\ndisk size: 2.9G\ncluster_size: 65536\n\nSo the virtual size is actually > 10GB\n\n(we're running Gentoo)\ncompute3.internal ~ # equery belongs qemu-img\n * Searching for qemu-img ... \napp-emulation/qemu-kvm-0.15.1-r1 (/usr/bin/qemu-img)\n\nWe need > 0.15 for the qemu savevm to work (which is used by nova image-create <instance_id>).", 
            "date_created": "2011-12-21 14:21:12.159715+00:00", 
            "author": "https://api.launchpad.net/1.0/~maartenvandenbogaard"
        }, 
        {
            "content": "I did not set a minimum_root_size flag by the way.", 
            "date_created": "2011-12-21 14:42:45.500543+00:00", 
            "author": "https://api.launchpad.net/1.0/~maartenvandenbogaard"
        }, 
        {
            "content": "OK that concurs with my guess in comment #1\nMaarten it seems like you should set minimum_root_size to 30G.\nIn general it would be nice for `qemu-img resize` to support an \"at least\" operator.\nFor example, the truncate command supports that like `truncate -s >30G`.\nA work around I suppose would be to implement that within openstack,\nusing `qemu-img info $image ...`\n", 
            "date_created": "2011-12-21 15:09:37.282961+00:00", 
            "author": "https://api.launchpad.net/1.0/~p-draigbrady"
        }, 
        {
            "content": "The minimum_root_size and flavor types is inconsistent and confusing.\n\nIMO, there should not be a \"minimum_root_size\", but the flavor's attributes should limit what images can be run in that given type.\n\nIe, your attempt to run in the flavor m1.small should have failed because it has a 10G root filesystem attached.\n\nThere was discussion of this at ODS in November, and I believe there was a general acceptance that the root disk size in the instance type should determine the root disk size, and also that ephemeral disks should be described in flavor type.  If that were implemented correctly, then you could have actually gotten a fail on your request to launch an instance, sayign it would not fit.\n\nI think the session was \"VM disk management in Nova\"\nhttp://essexdesignsummit.sched.org/event/e9c0baa7a606f320777e04baf531469c .\n\n\nThere is a bug here, in that qemu-img resize left around something that could later be used.  It should have cleaned up better and the subsequent attempts also failed.", 
            "date_created": "2011-12-21 16:22:56.333217+00:00", 
            "author": "https://api.launchpad.net/1.0/~smoser"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/5071", 
            "date_created": "2012-03-08 08:00:26.840678+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/5071\nCommitted: http://github.com/openstack/nova/commit/77664b256856980cfaf35173d59d463c16562673\nSubmitter: Jenkins\nBranch:    master\n\ncommit 77664b256856980cfaf35173d59d463c16562673\nAuthor: MotoKen <email address hidden>\nDate:   Thu Mar 8 15:37:53 2012 +0800\n\n    Checks image virtual size before qemu-img resize.\n    \n    Checks virtual size instead of file size. Fixes bug 905350.\n    \n    Change-Id: I1772b0996b7c9a2e07d3e298b156f777df67ef5f\n", 
            "date_created": "2012-03-12 22:56:14.699593+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2012-03-20 08:43:09.550540+00:00"
}