{
    "status": "Fix Released", 
    "last_updated": "2014-04-17 09:11:36.141221+00:00", 
    "description": "I was playing around with cloud-init. I wanted to use cloud init as substitute for the missing environment variables feature.\nThe basic idea is to define variables in the user data and inject the them before starting the service.\n\nFollowing:\ndocker run -e \"MY_Variable=MyValue\" -d centos\n\nwould look like in openstack:\n\nnova boot --image centos:latest --user-data \"MY_Variable=MyValue\" myinstance\n\nUnfortunately does the metadata service not work inside of a docker container. After some testing I figured out that the reason for that is that a container uses as default gateway the docker network (docker ip address). The metadata service simple rejects the call since the IP address of docker container is not associated with the nova instance.\n\nNote: The metadata service itself can be accessed (http://169.254.169.254) but it is not possible to access the actual data (http://169.254.169.254/2009-04-04 - Status 404)\n\nI was able to work around the issue by simply changing the route inside the container:\n\n# Hack: In order to receive data from the metadata service we must make sure we resolve the data via our nova network.\n#\n# A docker container in openstack has two NICs.\n# - eth0 has a IP address on the docker0 bridge which is usually an e.g. 172.0.0.0 IP address.\n# - pvnetXXXX is a IP address assigned by nova.\n#\n# Extract the NIC name of the nova network.\n#\nNOVA_NIC=$(ip a | grep pvnet | head -n 1 | cut -d: -f2)\n\nwhile [ \"$NOVA_NIC\" == \"\" ] ; do\n\u00a0\u00a0\u00a0echo \"Find nova NIC...\"\n\u00a0\u00a0\u00a0sleep 1\n\u00a0\u00a0\u00a0NOVA_NIC=$(ip a | grep pvnet | head -n 1 | cut -d: -f2)\ndone\n\necho \"Device $NOVA_NIC found. Wait until ready.\"\nsleep 3\n\n# Setup a network route to insure we use the nova network.\n#\necho \"[INFO] Create default route for $NOVA_NIC. Gateway 10.0.0.1\"\nip r r default via 10.0.0.1 dev $NOVA_NIC\n\n# Shutdown eth0 since icps will fetch enabled enterface for streaming.\nip l set down dev eth0\n\nThis approach is obviously a poor solution since it has certain expectation of the network.\n\nAnother solution might be extend the docker driver to add a firewall rule which will masquerade requests on 169.254.169.254 with the actual nova network IP address\n\nI third solution would need improvements in docker. If docker would have a network mode which allows to assign the IP from outside this issue would be solved. That of course is a just which must be accepted by the docker community.\n\nNetwork Threads:\n- https://groups.google.com/forum/#!topic/docker-dev/YfCeX8TBweA\n\n\n\n\n\n\nSimple script to test metadata inside the container:\n\n#!/bin/bash\nstatus=$(curl -I -s -o /dev/null -w \"%{http_code}\" http://169.254.169.254/2009-04-04)\n\nwhile [ $status != '200' ]; do\n   echo \"Cannot access metadata, status: '$status', try again...\"\n   date # easier to see in docker logs that loop is still running.\n   status=$(curl -I -s -o /dev/null -w \"%{http_code}\" http://169.254.169.254/2009-04-04)\n   sleep 1\ndone\n\necho \"Yes we got some user data:\"\ncurl http://169.254.169.254/2009-04-04", 
    "tags": [
        "docker"
    ], 
    "importance": "Undecided", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1259267", 
    "owner": "https://api.launchpad.net/1.0/~daniel-kuffner", 
    "id": 1259267, 
    "index": 5642, 
    "openned": "2013-12-09 18:07:57.785297+00:00", 
    "created": "2013-12-09 18:07:57.785297+00:00", 
    "title": "Nova Docker: Metadata service doesn't work", 
    "comments": [
        {
            "content": "\nI was playing around with cloud-init. I wanted to use cloud init as substitute for the mission environment variables.\nThe basic idea is to define variables in the user data and inject the them before starting the service. \n\nFollowing:\ndocker run -e \"MY_Variable=MyValue\" -d centos \n\nwould look like in openstack:\n\nnova boot --image centos:latest --userdata \"MY_Variable=MyValue\" myinstance\n\nUnfortunately does the metadata service not work inside of a docker container. \nAfter some testing I figured out that the reason for that is that a container \nuses as default gateway the docker network (docker ip address). The metadata service\nsimple rejects the call since the IP address of docker container is not associated with \nthe nova instance.\n\nI was able to work around the issue by simply changing the route inside the container:\n\n\n# Hack: In order to receive data from the metadata service we must make sure we resolve the data via our nova network.\n#\n# A docker container in openstack has two NICs. \n# - eth0 has a IP address on the docker0 bridge which is usually an e.g. 172.0.0.0 IP address.\n# - pvnetXXXX is a IP address assigned by nova.\n#\n# Extract the NIC name of the nova network.\n#\nNOVA_NIC=$(ip a | grep pvnet | head -n 1 | cut -d: -f2)\n\nwhile [ \"$NOVA_NIC\" == \"\" ] ; do\n   echo \"Find nova NIC...\"\n   sleep 1\n   NOVA_NIC=$(ip a | grep pvnet | head -n 1 | cut -d: -f2)\ndone\n\necho \"Device $NOVA_NIC found. Wait until ready.\"\nsleep 3\n\n# Setup a network route to insure we use the nova network.\n#\necho \"[INFO] Create default route for $NOVA_NIC. Gateway 10.0.0.1\"\nip r r default via 10.0.0.1 dev $NOVA_NIC\n\n# Shutdown eth0 since icps will fetch enabled enterface for streaming.\nip l set down dev eth0\n\nThis approach is obviously a poor solution since it has certain expectation of the network.\n\nAnother solution might be extend the docker driver to add a firewall rule which will masquerade requests on 169.254.169.254 with the actual nova network IP address", 
            "date_created": "2013-12-09 18:07:57.785297+00:00", 
            "author": "https://api.launchpad.net/1.0/~daniel-kuffner"
        }, 
        {
            "content": "Change Set: https://review.openstack.org/#/c/62220/\nIt seems to be good enough to just change the default route of the container to the nova network. ", 
            "date_created": "2013-12-15 12:23:50.660294+00:00", 
            "author": "https://api.launchpad.net/1.0/~daniel-kuffner"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/62220\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=709410d243a97d35c3da314b41bab039eac75736\nSubmitter: Jenkins\nBranch:    master\n\ncommit 709410d243a97d35c3da314b41bab039eac75736\nAuthor: Daniel Kuffner <email address hidden>\nDate:   Sun Dec 15 09:53:17 2013 +0100\n\n    Nova Docker: Metadata service doesn't work\n    \n    The metadata services rejects the request because the remote IP address\n    belongs to the docker network. The remote IP address is correct by using\n    the nova network as default route.\n    \n    Change-Id: I410a9bfea560f669515b31db7f007515b4d5c4e7\n    Closes-Bug: #1259267\n    Closes-Bug: #1261021\n", 
            "date_created": "2014-02-07 20:03:49.938842+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2014-03-05 13:20:01.241068+00:00"
}