{
    "status": "Invalid", 
    "last_updated": "2014-09-04 17:51:05.760100+00:00", 
    "description": "I just got this during verification of one of my changes.  I don't think it's related to the change (https://review.openstack.org/#/c/33478/) so I'm reporting it here before I reverify.\n\nFull log: http://logs.openstack.org/33478/1/gate/gate-tempest-devstack-vm-quantum/32609/logs/screen-n-cpu.txt.gz\n\nAlso, this was for stable/grizzly.  I'm not sure how to specify that in LP.\n\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/new/nova/nova/openstack/common/rpc/amqp.py\", line 430, in _process_data\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp     rval = self.proxy.dispatch(ctxt, version, method, **args)\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/new/nova/nova/openstack/common/rpc/dispatcher.py\", line 133, in dispatch\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp     return getattr(proxyobj, method)(ctxt, **kwargs)\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/new/nova/nova/exception.py\", line 117, in wrapped\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp     temp_level, payload)\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp   File \"/usr/lib/python2.7/contextlib.py\", line 24, in __exit__\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp     self.gen.next()\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/new/nova/nova/exception.py\", line 94, in wrapped\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp     return f(self, context, *args, **kw)\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/new/nova/nova/compute/manager.py\", line 209, in decorated_function\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp     pass\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp   File \"/usr/lib/python2.7/contextlib.py\", line 24, in __exit__\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp     self.gen.next()\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/new/nova/nova/compute/manager.py\", line 195, in decorated_function\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp     return function(self, context, *args, **kwargs)\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/new/nova/nova/compute/manager.py\", line 237, in decorated_function\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp     e, sys.exc_info())\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp   File \"/usr/lib/python2.7/contextlib.py\", line 24, in __exit__\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp     self.gen.next()\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/new/nova/nova/compute/manager.py\", line 224, in decorated_function\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp     return function(self, context, *args, **kwargs)\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/new/nova/nova/compute/manager.py\", line 2854, in reserve_block_device_name\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp     return do_reserve()\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/new/nova/nova/openstack/common/lockutils.py\", line 242, in inner\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp     retval = f(*args, **kwargs)\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/new/nova/nova/compute/manager.py\", line 2843, in do_reserve\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp     context, instance, bdms, device)\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/new/nova/nova/compute/utils.py\", line 165, in get_device_name_for_instance\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp     raise exception.DevicePathInUse(path=device)\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp DevicePathInUse: The supplied device path (/dev/vdb) is in use.", 
    "tags": [
        "compute", 
        "volumes"
    ], 
    "importance": "High", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1193113", 
    "owner": "None", 
    "id": 1193113, 
    "index": 1132, 
    "openned": "2013-07-12 14:36:48.113679+00:00", 
    "created": "2013-06-20 20:29:30.613648+00:00", 
    "title": "DevicePathInUse exception in devstack-vm-quantum", 
    "comments": [
        {
            "content": "I just got this during verification of one of my changes.  I don't think it's related to the change (https://review.openstack.org/#/c/33478/) so I'm reporting it here before I reverify.\n\nFull log: http://logs.openstack.org/33478/1/gate/gate-tempest-devstack-vm-quantum/32609/logs/screen-n-cpu.txt.gz\n\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/new/nova/nova/openstack/common/rpc/amqp.py\", line 430, in _process_data\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp     rval = self.proxy.dispatch(ctxt, version, method, **args)\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/new/nova/nova/openstack/common/rpc/dispatcher.py\", line 133, in dispatch\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp     return getattr(proxyobj, method)(ctxt, **kwargs)\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/new/nova/nova/exception.py\", line 117, in wrapped\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp     temp_level, payload)\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp   File \"/usr/lib/python2.7/contextlib.py\", line 24, in __exit__\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp     self.gen.next()\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/new/nova/nova/exception.py\", line 94, in wrapped\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp     return f(self, context, *args, **kw)\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/new/nova/nova/compute/manager.py\", line 209, in decorated_function\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp     pass\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp   File \"/usr/lib/python2.7/contextlib.py\", line 24, in __exit__\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp     self.gen.next()\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/new/nova/nova/compute/manager.py\", line 195, in decorated_function\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp     return function(self, context, *args, **kwargs)\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/new/nova/nova/compute/manager.py\", line 237, in decorated_function\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp     e, sys.exc_info())\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp   File \"/usr/lib/python2.7/contextlib.py\", line 24, in __exit__\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp     self.gen.next()\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/new/nova/nova/compute/manager.py\", line 224, in decorated_function\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp     return function(self, context, *args, **kwargs)\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/new/nova/nova/compute/manager.py\", line 2854, in reserve_block_device_name\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp     return do_reserve()\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/new/nova/nova/openstack/common/lockutils.py\", line 242, in inner\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp     retval = f(*args, **kwargs)\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/new/nova/nova/compute/manager.py\", line 2843, in do_reserve\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp     context, instance, bdms, device)\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/new/nova/nova/compute/utils.py\", line 165, in get_device_name_for_instance\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp     raise exception.DevicePathInUse(path=device)\n2013-06-20 19:26:25.981 23879 TRACE nova.openstack.common.rpc.amqp DevicePathInUse: The supplied device path (/dev/vdb) is in use.", 
            "date_created": "2013-06-20 20:29:30.613648+00:00", 
            "author": "https://api.launchpad.net/1.0/~bnemec"
        }, 
        {
            "content": "The devstack volumes.sh exercise creates a volume and then issues 'nova volume-attach' to attach the volume to /dev/vdb.\r\n\r\nhttp://logs.openstack.org/33478/1/gate/gate-tempest-devstack-vm-quantum/32609/console.html.gz\r\n\r\nSomehow, /dev/vdb seems to be in the block_device.instance_block_mapping. In the screen-n-cpu.txt log, the instance has u'default_ephemeral_device': u'/dev/vdb' which looks related as the default_ephemeral_device does get returned as part of the mappings. If the requested device is found in the mappings, DevicePathInUse will be raised.\r\n\r\nI'm not yet sure when/how  default_ephemeral_device gets set. I looked at a recent gate run and didn't see it set to anything other than None.\r\n\r\nhttp://logs.openstack.org/35361/15/gate/gate-tempest-devstack-vm-neutron/4343/logs/screen-n-cpu.txt.gz", 
            "date_created": "2013-07-17 02:50:39.444627+00:00", 
            "author": "https://api.launchpad.net/1.0/~melwitt"
        }, 
        {
            "content": "The real solution here is to completely disregard the passed in device name when running libvirt/KVM as it cannot honor it. The API option is there only for hypervisors that support it such as Xen.\n\nRoughly this can be done by the following steps:\n\n1) Exposing a way for drivers to generate device names - much like is done now when booting (but not when attaching volumes to running instances for which we use a general helper method compute_utils.get_device_name_for_instance)\n2) Make libvirt disregard what is passed into the new method and simply use it's own assignment methods. Fall back on the utils method in the other driver's implementations (much like is done when booting)", 
            "date_created": "2014-05-29 09:22:19.406257+00:00", 
            "author": "https://api.launchpad.net/1.0/~ndipanov"
        }, 
        {
            "content": "Not seeing this stacktrace anymore, marking as incomplete.", 
            "date_created": "2014-06-19 21:38:47.598726+00:00", 
            "author": "https://api.launchpad.net/1.0/~jogo"
        }, 
        {
            "content": "Old incomplete bug, moving to invalid", 
            "date_created": "2014-09-04 17:51:05.146071+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }
    ], 
    "closed": "2014-09-04 17:50:42.042809+00:00"
}