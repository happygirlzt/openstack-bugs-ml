{
    "status": "Fix Released", 
    "last_updated": "2016-06-22 00:35:07.804239+00:00", 
    "description": "\nI'm trying to use SR-IOV in openstack havana.\n\nAfter a pci device(virtual function in my case) is allocated to a vm, the status of  according record in table 'nova.pci_devices' is updated to allocated.\nHowever,   when I restart the openstack services,  the devices' records are updated to available again.   Actually, the pci devices are allocated to vm.\n\nI looked into the code and found the problem below.\n\nIn the __init__ function of PciDevTracker in pci/pci_manager.py ,  it requires node_id. \n        If a node_id is passed in, it will fetch pci devices information\n        from database, otherwise, it will create an empty devices list\n\nHowever, the code initiating PciDevTracker (in compute/resource_tracker.py) never passes node_id.   So  it will never fetch pci devices information from database and the status will be updated to 'available' every time we restart services.\n\n\n=================\n\n\nThen I  try do add the node id and  want to see what will happen.\n\nThen I got this error\n     self.pci_tracker = pci_manager.PciDevTracker(node_id=1)\n   File \"/usr/lib/python2.6/site-packages/nova/pci/pci_manager.py\", line 67, in __init__\n     context, node_id)\n   File \"/usr/lib/python2.6/site-packages/nova/objects/base.py\", line 106, in wrapper\n     args, kwargs)\n   File \"/usr/lib/python2.6/site-packages/nova/conductor/rpcapi.py\", line 492, in object_class_action\n     objver=objver, args=args, kwargs=kwargs)\n   File \"/usr/lib/python2.6/site-packages/nova/rpcclient.py\", line 85, in call\n     return self._invoke(self.proxy.call, ctxt, method, **kwargs)\n   File \"/usr/lib/python2.6/site-packages/nova/rpcclient.py\", line 63, in _invoke\n     return cast_or_call(ctxt, msg, **self.kwargs)\n   File \"/usr/lib/python2.6/site-packages/nova/openstack/common/rpc/proxy.py\", line 126, in call\n     result = rpc.call(context, real_topic, msg, timeout)\n   File \"/usr/lib/python2.6/site-packages/nova/openstack/common/rpc/__init__.py\", line 139, in call\n     return _get_impl().call(CONF, context, topic, msg, timeout)\n   File \"/usr/lib/python2.6/site-packages/nova/openstack/common/rpc/impl_qpid.py\", line 783, in call\n     rpc_amqp.get_connection_pool(conf, Connection))\n   File \"/usr/lib/python2.6/site-packages/nova/openstack/common/rpc/amqp.py\", line 572, in call\n     rv = multicall(conf, context, topic, msg, timeout, connection_pool)\n   File \"/usr/lib/python2.6/site-packages/nova/openstack/common/rpc/amqp.py\", line 558, in multicall\n     pack_context(msg, context)\n   File \"/usr/lib/python2.6/site-packages/nova/openstack/common/rpc/amqp.py\", line 308, in pack_context\n     for (key, value) in context.to_dict().iteritems()])\n AttributeError: 'module' object has no attribute 'to_dict'\n\n\nIt pass the module context to pci_device_obj.PciDeviceList.get_by_compute_node.  But to_dict is a function of RequestContext in module context.     It seems that it should pass a RequestContext instance instead of the module context.", 
    "tags": [
        "compute", 
        "pci"
    ], 
    "importance": "Low", 
    "heat": 22, 
    "link": "https://bugs.launchpad.net/nova/+bug/1333498", 
    "owner": "https://api.launchpad.net/1.0/~yongli-he", 
    "id": 1333498, 
    "index": 1289, 
    "openned": "2014-06-24 02:59:04.552103+00:00", 
    "created": "2014-06-24 02:59:04.552103+00:00", 
    "title": "table nova.pci_devices  lost device status every time. && PciDeviceList.get_by_compute_node pass a wrong parameter", 
    "comments": [
        {
            "content": "\nI'm trying to use SR-IOV in openstack havana.\n\nAfter a pci device(virtual function in my case) is allocated to a vm, the status of  according record in table 'nova.pci_devices' is updated to allocated.\nHowever,   when I restart the openstack services,  the devices' records are updated to available again.   Actually, the pci devices are allocated to vm.\n\nI looked into the code and found the problem below.\n\nIn the __init__ function of PciDevTracker in pci/pci_manager.py ,  it requires node_id. \n        If a node_id is passed in, it will fetch pci devices information\n        from database, otherwise, it will create an empty devices list\n\nHowever, the code initiating PciDevTracker (in compute/resource_tracker.py) never passes node_id.   So  it will never fetch pci devices information from database and the status will be updated to 'available' every time we restart services.\n\n\n=================\n\n\nThen I  try do add the node id and  want to see what will happen.\n\nThen I got this error\n     self.pci_tracker = pci_manager.PciDevTracker(node_id=1)\n   File \"/usr/lib/python2.6/site-packages/nova/pci/pci_manager.py\", line 67, in __init__\n     context, node_id)\n   File \"/usr/lib/python2.6/site-packages/nova/objects/base.py\", line 106, in wrapper\n     args, kwargs)\n   File \"/usr/lib/python2.6/site-packages/nova/conductor/rpcapi.py\", line 492, in object_class_action\n     objver=objver, args=args, kwargs=kwargs)\n   File \"/usr/lib/python2.6/site-packages/nova/rpcclient.py\", line 85, in call\n     return self._invoke(self.proxy.call, ctxt, method, **kwargs)\n   File \"/usr/lib/python2.6/site-packages/nova/rpcclient.py\", line 63, in _invoke\n     return cast_or_call(ctxt, msg, **self.kwargs)\n   File \"/usr/lib/python2.6/site-packages/nova/openstack/common/rpc/proxy.py\", line 126, in call\n     result = rpc.call(context, real_topic, msg, timeout)\n   File \"/usr/lib/python2.6/site-packages/nova/openstack/common/rpc/__init__.py\", line 139, in call\n     return _get_impl().call(CONF, context, topic, msg, timeout)\n   File \"/usr/lib/python2.6/site-packages/nova/openstack/common/rpc/impl_qpid.py\", line 783, in call\n     rpc_amqp.get_connection_pool(conf, Connection))\n   File \"/usr/lib/python2.6/site-packages/nova/openstack/common/rpc/amqp.py\", line 572, in call\n     rv = multicall(conf, context, topic, msg, timeout, connection_pool)\n   File \"/usr/lib/python2.6/site-packages/nova/openstack/common/rpc/amqp.py\", line 558, in multicall\n     pack_context(msg, context)\n   File \"/usr/lib/python2.6/site-packages/nova/openstack/common/rpc/amqp.py\", line 308, in pack_context\n     for (key, value) in context.to_dict().iteritems()])\n AttributeError: 'module' object has no attribute 'to_dict'\n\n\nIt pass the module context to pci_device_obj.PciDeviceList.get_by_compute_node.  But to_dict is a function of RequestContext in module context.     It seems that it should pass a RequestContext instance instead of the module context.", 
            "date_created": "2014-06-24 02:59:04.552103+00:00", 
            "author": "https://api.launchpad.net/1.0/~afe-young"
        }, 
        {
            "content": "https://review.openstack.org/#/c/102298/", 
            "date_created": "2014-06-26 03:07:32.897784+00:00", 
            "author": "https://api.launchpad.net/1.0/~afe-young"
        }, 
        {
            "content": "Thanks for your bug report. There is already a patch proposed for removing cn_id in PCITracker here: https://review.openstack.org/102298\n\nSorry that doesn't triage your bug any further but I believe it will address the issue.", 
            "date_created": "2014-06-26 03:51:40.497751+00:00", 
            "author": "https://api.launchpad.net/1.0/~annegentle"
        }, 
        {
            "content": "Upstream patch is stalled in merge conflict for a week, not sure that it's really in progress any more.", 
            "date_created": "2014-09-17 20:26:35.341541+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "Change abandoned by Sean Dague (<email address hidden>) on branch: master\nReview: https://review.openstack.org/103759\nReason: This review is > 4 weeks without comment, and failed Jenkins the last time it was checked. We are abandoning this for now. Feel free to reactivate the review by pressing the restore button and leaving a 'recheck' comment to get fresh test results.", 
            "date_created": "2015-01-23 15:30:46.741703+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "addressed by:\n   https://review.openstack.org/#/c/148904/", 
            "date_created": "2015-04-03 08:50:45.973973+00:00", 
            "author": "https://api.launchpad.net/1.0/~yongli-he"
        }, 
        {
            "content": "Change abandoned by Joe Gordon (<email address hidden>) on branch: master\nReview: https://review.openstack.org/102298\nReason: This review is > 4 weeks without comment, and failed Jenkins the last time it was checked. We are abandoning this for now. Feel free to reactivate the review by pressing the restore button and leaving a 'recheck' comment to get fresh test results.", 
            "date_created": "2015-05-13 17:26:27.938054+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "A previous comment indicated this bug had been addressed by https://review.openstack.org/#/c/148904/ so marking this as Fix Released.", 
            "date_created": "2016-06-22 00:34:49.573019+00:00", 
            "author": "https://api.launchpad.net/1.0/~auggy"
        }
    ], 
    "closed": "2016-06-22 00:35:05.278085+00:00"
}