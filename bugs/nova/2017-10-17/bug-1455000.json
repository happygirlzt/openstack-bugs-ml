{
    "status": "Fix Released", 
    "last_updated": "2015-10-15 08:51:19.882778+00:00", 
    "description": "The \"nova delete\" command can be issued while the instance is spawning and even Ironic support aborting a deployment mid-operation (when node is in WAITDEPLOY state).\n\nBut if you issue a \"nova delete\" while the instance is spawming with the Ironic driver the instance will be stuck there and nothing will happen. That's because of a lock[1], basically the Ironic driver won't return from spawn() until the node have been successfully deployed or error out and that's holding the lock. \n\nWORKAROUND:\n\nAs a work around, you can issue \"nova delete\" to the instance and that will mark the task_state as \"deleting\". And then you can delete the instance directly via the Ironic API as well by doing:\n\n$ ironic node-set-provision-state <node uuid> deleted\n\nThat will realease the instance.\n\n[1]  https://github.com/openstack/nova/blob/3841b8254e0dd820d26377312b6c004f4bd9b58e/nova/compute/manager.py#L2431", 
    "tags": [
        "ironic"
    ], 
    "importance": "Medium", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1455000", 
    "owner": "https://api.launchpad.net/1.0/~lucasagomes", 
    "id": 1455000, 
    "index": 4255, 
    "openned": "2015-05-14 08:57:38.047306+00:00", 
    "created": "2015-05-14 08:57:38.047306+00:00", 
    "title": "Ironic: 'nova delete' doesn't work when instance is spawning", 
    "comments": [
        {
            "content": "The \"nova delete\" command can be issued while the instance is spawning and even Ironic support aborting a deployment mid-operation (when node is in WAITDEPLOY state).\n\nBut if you issue a \"nova delete\" while the instance is spawming with the Ironic driver the instance will be stuck there and nothing will happen. That's because of a lock[1], basically the Ironic driver won't return from spawn() until the node have been successfully deployed or error out and that's holding the lock. \n\nWORKAROUND:\n\nAs a work around, you can issue \"nova delete\" to the instance and that will mark the task_state as \"deleting\". And then you can delete the instance directly via the Ironic API as well by doing:\n\n$ ironic node-set-provision-state <node uuid> deleted\n\nThat will realease the instance.\n\n[1]  https://github.com/openstack/nova/blob/3841b8254e0dd820d26377312b6c004f4bd9b58e/nova/compute/manager.py#L2431", 
            "date_created": "2015-05-14 08:57:38.047306+00:00", 
            "author": "https://api.launchpad.net/1.0/~lucasagomes"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/182992", 
            "date_created": "2015-05-14 09:57:50.551470+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/182992\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=ea3967a1fb47297608defd680286fd9051ff5bbe\nSubmitter: Jenkins\nBranch:    master\n\ncommit ea3967a1fb47297608defd680286fd9051ff5bbe\nAuthor: Lucas Alvares Gomes <email address hidden>\nDate:   Thu May 14 10:56:13 2015 +0100\n\n    Ironic: Fix delete instance when spawning\n    \n    Nova allows issuing a \"nova delete\" command when the instance is being\n    spawned, that wasn't working in Ironic because the spawn() in the Ironic\n    nova driver doesn't return until the node have been deployed or errored\n    out and that causes Ironic to hold a lock that prevents the instance\n    termination to call destroy() in the Ironic nova driver.\n    \n    This patch fixes that problem by making the loop waiting on the node to\n    get active (or error) in Ironic to also look at the instance task_state\n    and see if it's being deleted. In case the instance is being deleted\n    mid deployment operation we break the loop releasing the lock and then\n    destroy() gets called in Ironic aborting the deployment there.\n    \n    Closes-Bug: #1455000\n    Change-Id: I315b8430a92907d27534f7b4828c35792371d6dc\n", 
            "date_created": "2015-05-21 18:09:51.906768+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2015-06-24 12:18:54.719456+00:00"
}