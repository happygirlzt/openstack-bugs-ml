{
    "status": "Invalid", 
    "last_updated": "2014-09-18 12:31:45.667372+00:00", 
    "description": "http://docs.openstack.org/folsom/openstack-compute/admin/content/ch_scheduling.html\n(likewise, http://docs.openstack.org/grizzly/openstack-compute/admin/content/ch_scheduling.html)\n\nIndicate that the default scheduler uses:\nscheduler_default_filters=AvailabilityZoneFilter,RamFilter,ComputeFilter\nbut no CoreFilter is in the default list.\n\nAccordingly, if the compute node with the least amount of memory is already has all available (possibly overcommitted) vCPUs in use, then the scheduler will happily launch the next instance on a node that CANNOT run the instance, and nova show will somewhat unclearly report:\n\n| fault                  | {u'message': u'NoValidHost', u'code': 500, u'created': u'2013-06-13T14:40:46Z'}     |\n\nAt the very minimum, NO scheduler should be considered functional if it schedules an instance on a node that refuses to run it, while there are nodes that would be able to.\n\nThis is running on Ubuntu Precise with Folsom deployed from the cloud archive.", 
    "tags": [
        "canonical-sysadmin", 
        "canonical-webops"
    ], 
    "importance": "Low", 
    "heat": 8, 
    "link": "https://bugs.launchpad.net/nova/+bug/1190635", 
    "owner": "None", 
    "id": 1190635, 
    "index": 895, 
    "openned": "2013-06-13 14:54:58.370290+00:00", 
    "created": "2013-06-13 14:54:58.370290+00:00", 
    "title": "default scheduler fails when CPUs are the limiting resource", 
    "comments": [
        {
            "content": "http://docs.openstack.org/folsom/openstack-compute/admin/content/ch_scheduling.html\n(likewise, http://docs.openstack.org/grizzly/openstack-compute/admin/content/ch_scheduling.html)\n\nIndicate that the default scheduler uses:\nscheduler_default_filters=AvailabilityZoneFilter,RamFilter,ComputeFilter\nbut no CoreFilter is in the default list.\n\nAccordingly, if the compute node with the least amount of memory is already has all available (possibly overcommitted) vCPUs in use, then the scheduler will happily launch the next instance on a node that CANNOT run the instance, and nova show will somewhat unclearly report:\n\n| fault                  | {u'message': u'NoValidHost', u'code': 500, u'created': u'2013-06-13T14:40:46Z'}     |\n\nAt the very minimum, NO scheduler should be considered functional if it schedules an instance on a node that refuses to run it, while there are nodes that would be able to.", 
            "date_created": "2013-06-13 14:54:58.370290+00:00", 
            "author": "https://api.launchpad.net/1.0/~lamont"
        }, 
        {
            "content": "if you are using Filter Scheduler then the scheduler will get a list of hosts that can fulfill the instance resource requirement at first, and then choose one from those hosts.", 
            "date_created": "2013-07-11 09:11:53.590124+00:00", 
            "author": "https://api.launchpad.net/1.0/~ljjjustin"
        }, 
        {
            "content": "Seems you are right and we should change default value for scheduler_default_filters", 
            "date_created": "2013-07-12 06:45:13.776754+00:00", 
            "author": "https://api.launchpad.net/1.0/~boris-42"
        }, 
        {
            "content": "It seems that by default core crossing is normal, so this bug was closed.", 
            "date_created": "2013-07-15 09:20:11.526555+00:00", 
            "author": "https://api.launchpad.net/1.0/~jvarlamova"
        }, 
        {
            "content": "This bug sounds like it may be valid to me, by default we allow core subscription in the scheduler.   So the default settings should allow over-subscription of CPUs.  That being said,  the bug is fairly vague and doesn't prove the NoValidHost is coming from a core restriction, so marking this as incomplete.", 
            "date_created": "2013-07-29 19:24:14.452890+00:00", 
            "author": "https://api.launchpad.net/1.0/~jogo"
        }, 
        {
            "content": "My question is why \"CoreFilter\" isn't default in \"scheduler_default_filters\"? That cause nova scheduler do not check the vcpu resource when run \"nova resize\" and \"nova boot\".  Without checking vcpu resource, nova resize or boot will fail with no NoValidHost exception warning messages if there is no enough resource.", 
            "date_created": "2014-04-29 07:02:10.848550+00:00", 
            "author": "https://api.launchpad.net/1.0/~chestack"
        }, 
        {
            "content": "The default filters are dramatically different now. I think we should take this to Invalid because the new defaults might cover this. Also there has been a bunch of recent patches about clearing up the error messages.", 
            "date_created": "2014-09-18 12:31:44.955226+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }
    ], 
    "closed": "2014-09-18 12:30:48.956074+00:00"
}