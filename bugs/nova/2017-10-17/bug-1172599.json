{
    "status": "Fix Released", 
    "last_updated": "2013-10-17 11:43:05.050066+00:00", 
    "description": "reproduce steps:\n1. create an instance\n2. get a floating ip from pool\n3. associate the ip to instance created at step 1\n4. delete the instance and the ip at a very little interval\n\nthen \"ERROR: Floating ip is not associated (HTTP 400) (Request-ID: req-7af58a3e-7198-42d1-afce-61e2a30d607c)\" was returned, and the floating ip is still there by ubuntu@ubuntu:/opt/stack/nova$ nova floating-ip-list       \n+--------------+-------------+----------+------+\n| Ip           | Instance Id | Fixed Ip | Pool |\n+--------------+-------------+----------+------+\n| 172.24.4.225 | None        | None     | nova |\n+--------------+-------------+----------+------+\nand the instance is deleted successfully.\n\nthis is a race issue, so you may need to hack in the nova-api codes to reproduce it, like what I did as bellow:\ndiff --git a/nova/api/openstack/compute/contrib/floating_ips.py b/nova/api/openstack/compute/contrib/floating_ips.py\nindex bf1246c..d9cb2c2 100644\n--- a/nova/api/openstack/compute/contrib/floating_ips.py\n+++ b/nova/api/openstack/compute/contrib/floating_ips.py\n@@ -181,11 +181,15 @@ class FloatingIPController(object):\n             raise webob.exc.HTTPNotFound(explanation=msg)\n         address = floating_ip['address']\n \n         # get the associated instance object (if any)\n         instance = get_instance_by_floating_ip_addr(self, context, address)\n \n         # disassociate if associated\n         if floating_ip.get('fixed_ip_id'):\n+            import time\n+            LOG.debug(_(\"xxxxxxxxxxxxxxxxx------------------------- sleep 10s start ----------xxxxxxxxxxxxxx\"))\n+            time.sleep(10)\n             disassociate_floating_ip(self, context, instance, address)\n \n         # release ip from project\n\nthen you can delete floating ip at first, and wait for the nova-api debug log of 'sleep 10s', delete the instance when you see this log, this bug will occurs at most of time.\n\nreason may be that:\n1. the action of delete ip find the ip is associated to a fixed ip at first(at api level where my debug log is added)\n2. and then the fixed ip is released when the instance is deleted\n3. so nova-network manager find this issue and raise exception.FloatingIpNotAssociated(address=floating_address)\n\nI think the expected result is that the floating ip is deleted successfully on this condition.", 
    "tags": [], 
    "importance": "Medium", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1172599", 
    "owner": "https://api.launchpad.net/1.0/~hzwangpan", 
    "id": 1172599, 
    "index": 3370, 
    "openned": "2013-04-25 07:50:16.701032+00:00", 
    "created": "2013-04-25 07:50:16.701032+00:00", 
    "title": "race condition between delete instance(with floating ip associated) and delete floating ip", 
    "comments": [
        {
            "content": "reproduce steps:\n1. create an instance\n2. get a floating ip from pool\n3. associate the ip to instance created at step 1\n4. delete the instance and the ip at a very little interval\n\nthen \"ERROR: Floating ip is not associated (HTTP 400) (Request-ID: req-7af58a3e-7198-42d1-afce-61e2a30d607c)\" was returned, and the floating ip is still there by ubuntu@ubuntu:/opt/stack/nova$ nova floating-ip-list       \n+--------------+-------------+----------+------+\n| Ip           | Instance Id | Fixed Ip | Pool |\n+--------------+-------------+----------+------+\n| 172.24.4.225 | None        | None     | nova |\n+--------------+-------------+----------+------+\nand the instance is deleted successfully.\n\nthis is a race issue, so you may need to hack in the nova-api codes to reproduce it, like what I did as bellow:\ndiff --git a/nova/api/openstack/compute/contrib/floating_ips.py b/nova/api/openstack/compute/contrib/floating_ips.py\nindex bf1246c..d9cb2c2 100644\n--- a/nova/api/openstack/compute/contrib/floating_ips.py\n+++ b/nova/api/openstack/compute/contrib/floating_ips.py\n@@ -181,11 +181,15 @@ class FloatingIPController(object):\n             raise webob.exc.HTTPNotFound(explanation=msg)\n         address = floating_ip['address']\n \n         # get the associated instance object (if any)\n         instance = get_instance_by_floating_ip_addr(self, context, address)\n \n         # disassociate if associated\n         if floating_ip.get('fixed_ip_id'):\n+            import time\n+            LOG.debug(_(\"xxxxxxxxxxxxxxxxx------------------------- sleep 10s start ----------xxxxxxxxxxxxxx\"))\n+            time.sleep(10)\n             disassociate_floating_ip(self, context, instance, address)\n \n         # release ip from project\n\nthen you can delete floating ip at first, and wait for the nova-api debug log of 'sleep 10s', delete the instance when you see this log, this bug will occurs at most of time.\n\nreason may be that:\n1. the action of delete ip find the ip is associated to a fixed ip at first(at api level where my debug log is added)\n2. and then the fixed ip is released when the instance is deleted\n3. so nova-network manager find this issue and raise exception.FloatingIpNotAssociated(address=floating_address)\n\nI think the expected result is that the floating ip is deleted successfully on this condition.", 
            "date_created": "2013-04-25 07:50:16.701032+00:00", 
            "author": "https://api.launchpad.net/1.0/~hzwangpan"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/27470", 
            "date_created": "2013-04-25 09:28:26.647612+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/27470\nCommitted: http://github.com/openstack/nova/commit/a5923541e990326a9b850926e74026d5947ae142\nSubmitter: Jenkins\nBranch:    master\n\ncommit a5923541e990326a9b850926e74026d5947ae142\nAuthor: Wangpan <email address hidden>\nDate:   Thu Apr 25 17:22:50 2013 +0800\n\n    Fixes race condition of deleting floating ip\n    \n    Fixes bug #1172599\n    reproduce steps:\n    1. create an instance\n    2. get a floating ip from pool\n    3. associate the ip to instance created at step 1\n    4. delete the instance and the ip at a very little interval\n    \n    reason may be that:\n    1. the action of delete ip find the ip is associated to a fixed ip at\n       first(at api level)\n    2. and then the fixed ip is released when the instance is deleted\n    3. so nova-network manager findes this issue and raises\n       exception.FloatingIpNotAssociated(address=floating_address)\n    \n    Change-Id: I253d0b240451e8a728532639e9857894f6fc6870\n", 
            "date_created": "2013-04-29 16:27:04.790778+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: stable/grizzly\nReview: https://review.openstack.org/27744", 
            "date_created": "2013-04-29 18:57:23.811942+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/27744\nCommitted: http://github.com/openstack/nova/commit/726ae59b82d94e5f81e2512991776c001f22daa0\nSubmitter: Jenkins\nBranch:    stable/grizzly\n\ncommit 726ae59b82d94e5f81e2512991776c001f22daa0\nAuthor: Wangpan <email address hidden>\nDate:   Thu Apr 25 17:22:50 2013 +0800\n\n    Fixes race condition of deleting floating ip\n    \n    Fixes bug #1172599\n    reproduce steps:\n    1. create an instance\n    2. get a floating ip from pool\n    3. associate the ip to instance created at step 1\n    4. delete the instance and the ip at a very little interval\n    \n    reason may be that:\n    1. the action of delete ip find the ip is associated to a fixed ip at\n       first(at api level)\n    2. and then the fixed ip is released when the instance is deleted\n    3. so nova-network manager findes this issue and raises\n       exception.FloatingIpNotAssociated(address=floating_address)\n    \n    Change-Id: I253d0b240451e8a728532639e9857894f6fc6870\n    (cherry picked from commit a5923541e990326a9b850926e74026d5947ae142)\n", 
            "date_created": "2013-05-21 13:01:39.395402+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2013-05-29 10:21:34.544608+00:00"
}