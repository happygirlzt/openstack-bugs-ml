{
    "status": "Confirmed", 
    "last_updated": "2016-08-16 04:42:01.875983+00:00", 
    "description": "Now nova support detach a device dynamically, but it is not guaranteed to succeed.\n\n\nWhat happens is that the hypervisor injects an ACPI request to unplug the device. The guest OS must co-operate by releasing the device, before the hypervisor will complete the action of physically removing it. So when require a guest OS that supports ACPI unplug of course, and if the guest is crashed or being malicious there is no guarantee the unplug will succeed. Libvirt will wait a short while for success, but nova must monitor for libvirt events to see if/when it finally completes. This delayed release has implications for when Nova can mark the PCI device as unused and available for other guests to assign.\n\nhere is the libvirt doc string about detachDeviceFlags.\n http://paste.openstack.org/show/480330/\n \n it says \n To check whether the device was successfully removed, either recheck domain\n configuration using virDomainGetXMLDesc() or add handler for\n VIR_DOMAIN_EVENT_ID_DEVICE_REMOVED\n If so we  can sync check by virDomainGetXMLDesc().\n Or async notification that the device is removed by an event handler.\n and this is the nova code about detach_interface.\n https://github.com/openstack/nova/blob/master/nova/compute/manager.py#L4940", 
    "tags": [
        "libvirt"
    ], 
    "importance": "Undecided", 
    "heat": 12, 
    "link": "https://bugs.launchpad.net/nova/+bug/1522400", 
    "owner": "None", 
    "id": 1522400, 
    "index": 7146, 
    "openned": "2015-12-03 13:09:29.604371+00:00", 
    "created": "2015-12-03 13:09:29.604371+00:00", 
    "title": "check the libvirt driver  finally detach a device", 
    "comments": [
        {
            "content": "Now nova support detach a device dynamically, but it is not guaranteed to succeed.\n\n\nWhat happens is that the hypervisor injects an ACPI request to unplug the device. The guest OS must co-operate by releasing the device, before the hypervisor will complete the action of physically removing it. So when require a guest OS that supports ACPI unplug of course, and if the guest is crashed or being malicious there is no guarantee the unplug will succeed. Libvirt will wait a short while for success, but nova must monitor for libvirt events to see if/when it finally completes. This delayed release has implications for when Nova can mark the PCI device as unused and available for other guests to assign.\n\nhere is the libvirt doc string about detachDeviceFlags.\n http://paste.openstack.org/show/480330/\n \n it says \n To check whether the device was successfully removed, either recheck domain\n configuration using virDomainGetXMLDesc() or add handler for\n VIR_DOMAIN_EVENT_ID_DEVICE_REMOVED\n If so we  can sync check by virDomainGetXMLDesc().\n Or async notification that the device is removed by an event handler.\n and this is the nova code about detach_interface.\n https://github.com/openstack/nova/blob/master/nova/compute/manager.py#L4940", 
            "date_created": "2015-12-03 13:09:29.604371+00:00", 
            "author": "https://api.launchpad.net/1.0/~shaohef"
        }, 
        {
            "content": "I also file a spec: https://review.openstack.org/#/c/251141/\n\nBut all  agree to file a bug. ", 
            "date_created": "2015-12-03 13:10:20.924060+00:00", 
            "author": "https://api.launchpad.net/1.0/~shaohef"
        }, 
        {
            "content": "We don't need a spec for this.  Just code to register the event listener.  There is a similar bug somewhere for this same issue.\n\nAlso note change https://review.openstack.org/#/c/227851/ which has made things a bit better, but we still don't have an event listener for the detach.", 
            "date_created": "2016-03-03 22:35:39.748489+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "lvmxh, do you still work on this bug? If so, please reassign yourself - I am removing you right now as there is no progress.", 
            "date_created": "2016-08-16 04:41:53.633383+00:00", 
            "author": "https://api.launchpad.net/1.0/~mszankin"
        }
    ]
}