{
    "status": "Invalid", 
    "last_updated": "2016-12-02 17:55:44.587605+00:00", 
    "description": "The 'except Exception' catch in nova/api/openstack/placement/handler.py can duplicate the same trap and logging done by the FaultWrapper class in the event of a truly unexpected exception.\n\nWe should clarify the associated error message so that it is clear that it is logging all non-success conditions. The FaultWrapper won't get these because it calls the WSGI application as req.get_response which will see and properly handle (turn into responses to the client) exceptions which are webob.exc classes.\n\nThe logging in handler.py is still needed because it operates as a stand in for more extensive failure logging throughout the handlers.\n\nAnd the logging in FaultWrapper is still required because it catches truly unexpected exceptions and makes them into effective responses to send to the client.\n\nSince FaultWrapper is not optional (none of the Placement middleware is) we can rely on it.\nSince it wraps the placement its try and except will bound the entire placement API and catch any exceptions.", 
    "tags": [
        "api", 
        "placement", 
        "scheduler"
    ], 
    "importance": "Undecided", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1620352", 
    "owner": "https://api.launchpad.net/1.0/~cdent", 
    "id": 1620352, 
    "index": 7683, 
    "openned": "2016-09-05 15:24:17.681092+00:00", 
    "created": "2016-09-05 15:24:17.681092+00:00", 
    "title": "placement api handler duplicates exception logging", 
    "comments": [
        {
            "content": "The 'except Exception' catch in nova/api/openstack/placement/handler.py can duplicate the same trap and logging done by the FaultWrapper class in the event of a truly unexpected exception.\n\nWe should clarify the associated error message so that it is clear that it is logging all non-success conditions. The FaultWrapper won't get these because it calls the WSGI application as req.get_response which will see and properly handle (turn into responses to the client) exceptions which are webob.exc classes.\n\nThe logging in handler.py is still needed because it operates as a stand in for more extensive failure logging throughout the handlers.\n\nAnd the logging in FaultWrapper is still required because it catches truly unexpected exceptions and makes them into effective responses to send to the client.\n\nSince FaultWrapper is not optional (none of the Placement middleware is) we can rely on it.\nSince it wraps the placement its try and except will bound the entire placement API and catch any exceptions.", 
            "date_created": "2016-09-05 15:24:17.681092+00:00", 
            "author": "https://api.launchpad.net/1.0/~cdent"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/365719", 
            "date_created": "2016-09-05 15:42:55.711208+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Change abandoned by Chris Dent (<email address hidden>) on branch: master\nReview: https://review.openstack.org/365719\nReason: Other changes have made this less of an issue, and the remaining issues would be better to fix per exception.", 
            "date_created": "2016-09-26 11:19:29.415855+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "See comment #2 for why I marked this invalid", 
            "date_created": "2016-12-02 17:55:43.956818+00:00", 
            "author": "https://api.launchpad.net/1.0/~cdent"
        }
    ], 
    "closed": "2016-12-02 17:55:24.245192+00:00"
}