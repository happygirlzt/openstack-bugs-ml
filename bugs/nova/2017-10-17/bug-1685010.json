{
    "status": "Expired", 
    "last_updated": "2017-09-24 04:18:41.535367+00:00", 
    "description": "Description of problem:\nWhile attempting to achieve even distribution of tiny instances across 31 compute nodes (Some with 64GiB and some with 128GiB of memory) I tried to use the NumInstancesFilter to limit the number of instance per each compute to 2 instances. (Total limit of 62 instances for this testbed then 31 x 2 = 62)  I then launched 70 guests serially (concurrency of 1) using a rally scenario built for this with persisting rally instances.  67 instances were able to be booted and only 3 failed.\n\nTwo hosts ended up with 4 instances, one ended up with 3 instances and the rest with 2 instances as they should have.\n\n\nI used the following settings in nova.conf on all controllers (3):\n[filter_scheduler]\nhost_subset_size = 4\nmax_instances_per_host = 2\nenabled_filters = NumInstancesFilter,RetryFilter,RamFilter,ComputeFilter\nram_weight_multiplier = 0\n\nAfter setting above I had restarted services:\n        - openstack-nova-scheduler\n        - openstack-nova-api\n        - openstack-nova-conductor\n        - openstack-nova-novncproxy\n        - openstack-nova-consoleauth\n        - httpd\n\n*httpd hosts the nova placement api\n\n\n\nVersion-Release number of selected component (if applicable):\nOpenStack Ocata\npython-nova-15.0.2-1.el7ost.noarch\nopenstack-nova-cert-15.0.2-1.el7ost.noarch\nopenstack-nova-console-15.0.2-1.el7ost.noarch\npuppet-nova-10.4.0-3.el7ost.noarch\nopenstack-nova-novncproxy-15.0.2-1.el7ost.noarch\nopenstack-nova-placement-api-15.0.2-1.el7ost.noarch\npython-novaclient-7.1.0-1.el7ost.noarch\nopenstack-nova-common-15.0.2-1.el7ost.noarch\nopenstack-nova-scheduler-15.0.2-1.el7ost.noarch\nopenstack-nova-conductor-15.0.2-1.el7ost.noarch\nopenstack-nova-compute-15.0.2-1.el7ost.noarch\nopenstack-nova-api-15.0.2-1.el7ost.noarch\n\n\nHow reproducible:\nProduced above result once.  Unsure if reproduces every single time due to time limitations on testbed.\n\nSteps to Reproduce:\n1. Set max_instances_per_host to 2, set enabled_filters to include NumInstancesFilter\n2. Restart nova services, attempt to boot > max_instances_per_host*$HOST_COUNT and witness more instances than should be possible\n3.\n\nActual results:\nThree hosts had > max_instances_per_host\n\nExpected results:\nOnly 62 instances to be booted\n\nAdditional info:\n\nPerhaps I configured something wrong with Nova?", 
    "tags": [
        "openstack-version.ocata"
    ], 
    "importance": "Undecided", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1685010", 
    "owner": "None", 
    "id": 1685010, 
    "index": 8075, 
    "openned": "2017-04-20 19:53:05.252324+00:00", 
    "created": "2017-04-20 19:53:05.252324+00:00", 
    "title": "Able to spawn > max_instances_per_host with NumInstancesFilter", 
    "comments": [
        {
            "content": "Description of problem:\nWhile attempting to achieve even distribution of tiny instances across 31 compute nodes (Some with 64GiB and some with 128GiB of memory) I tried to use the NumInstancesFilter to limit the number of instance per each compute to 2 instances. (Total limit of 62 instances for this testbed then 31 x 2 = 62)  I then launched 70 guests serially (concurrency of 1) using a rally scenario built for this with persisting rally instances.  67 instances were able to be booted and only 3 failed.\n\nTwo hosts ended up with 4 instances, one ended up with 3 instances and the rest with 2 instances as they should have.\n\n\nI used the following settings in nova.conf on all controllers (3):\n[filter_scheduler]\nhost_subset_size = 4\nmax_instances_per_host = 2\nenabled_filters = NumInstancesFilter,RetryFilter,RamFilter,ComputeFilter\nram_weight_multiplier = 0\n\nAfter setting above I had restarted services:\n        - openstack-nova-scheduler\n        - openstack-nova-api\n        - openstack-nova-conductor\n        - openstack-nova-novncproxy\n        - openstack-nova-consoleauth\n        - httpd\n\n*httpd hosts the nova placement api\n\n\n\nVersion-Release number of selected component (if applicable):\nOpenStack Ocata\npython-nova-15.0.2-1.el7ost.noarch\nopenstack-nova-cert-15.0.2-1.el7ost.noarch\nopenstack-nova-console-15.0.2-1.el7ost.noarch\npuppet-nova-10.4.0-3.el7ost.noarch\nopenstack-nova-novncproxy-15.0.2-1.el7ost.noarch\nopenstack-nova-placement-api-15.0.2-1.el7ost.noarch\npython-novaclient-7.1.0-1.el7ost.noarch\nopenstack-nova-common-15.0.2-1.el7ost.noarch\nopenstack-nova-scheduler-15.0.2-1.el7ost.noarch\nopenstack-nova-conductor-15.0.2-1.el7ost.noarch\nopenstack-nova-compute-15.0.2-1.el7ost.noarch\nopenstack-nova-api-15.0.2-1.el7ost.noarch\n\n\nHow reproducible:\nProduced above result once.  Unsure if reproduces every single time due to time limitations on testbed.\n\nSteps to Reproduce:\n1. Set max_instances_per_host to 2, set enabled_filters to include NumInstancesFilter\n2. Restart nova services, attempt to boot > max_instances_per_host*$HOST_COUNT and witness more instances than should be possible\n3.\n\nActual results:\nThree hosts had > max_instances_per_host\n\nExpected results:\nOnly 62 instances to be booted\n\nAdditional info:\n\nPerhaps I configured something wrong with Nova?", 
            "date_created": "2017-04-20 19:53:05.252324+00:00", 
            "author": "https://api.launchpad.net/1.0/~akrzos"
        }, 
        {
            "content": "Try set scheduler_default_filters to include NumInstancesFilter", 
            "date_created": "2017-05-16 11:18:58.464677+00:00", 
            "author": "https://api.launchpad.net/1.0/~falseuser"
        }, 
        {
            "content": "I had included NumInstancesFilter in scheduler_default_filters / enabled_filters.  \n", 
            "date_created": "2017-05-16 12:06:54.552418+00:00", 
            "author": "https://api.launchpad.net/1.0/~akrzos"
        }, 
        {
            "content": "Automatically discovered version ocata in description. If this is incorrect, please update the description to include 'nova version: ...'", 
            "date_created": "2017-06-27 15:58:42.618008+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "When you say serially, did you wait for every host to go ACTIVE before the next one was booted? or just serial sends of api requests. ", 
            "date_created": "2017-07-25 17:03:49.777643+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "[Expired for OpenStack Compute (nova) because there has been no activity for 60 days.]", 
            "date_created": "2017-09-24 04:18:38.811686+00:00", 
            "author": "https://api.launchpad.net/1.0/~janitor"
        }
    ], 
    "closed": "2017-09-24 04:18:39.323765+00:00"
}