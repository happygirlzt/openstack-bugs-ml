{
    "status": "Fix Released", 
    "last_updated": "2013-04-04 11:09:32.251763+00:00", 
    "description": "The IPAddress() Macro in nova/db/sqlalchemy/types.py only provides a column with 39 characters.  In theory if someone provided a complete IPv6 address and a 3-digit CIDR mask it wouldn't fit in the 39 characters.  security_group_rules \"cidr\" column was truncated to 39 characters in db revision 149 as well.\n\nThe determination should be made if the use of a complete IPv6 address and a CIDR mask should be supported.  If so should the IPAddress() macro should be used or should a new CIDR() macro should be created.", 
    "tags": [], 
    "importance": "High", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1127696", 
    "owner": "https://api.launchpad.net/1.0/~mdrnstm", 
    "id": 1127696, 
    "index": 970, 
    "openned": "2013-02-17 02:10:05.280384+00:00", 
    "created": "2013-02-17 02:10:05.280384+00:00", 
    "title": "IPAddress() macro only provides 39 characters where ipv6 cidr could be 43 characters", 
    "comments": [
        {
            "content": "The IPAddress() Macro in nova/db/sqlalchemy/types.py only provides a column with 39 characters.  In theory if someone provided a complete IPv6 address and a 3-digit CIDR mask it wouldn't fit in the 39 characters.  security_group_rules \"cidr\" column was truncated to 39 characters in db revision 149 as well.\n\nThe determination should be made if the use of a complete IPv6 address and a CIDR mask should be supported.  If so should the IPAddress() macro should be used or should a new CIDR() macro should be created.", 
            "date_created": "2013-02-17 02:10:05.280384+00:00", 
            "author": "https://api.launchpad.net/1.0/~mdrnstm"
        }, 
        {
            "content": "Can we at least log an error when this happens with grizzly?", 
            "date_created": "2013-02-18 02:45:33.783092+00:00", 
            "author": "https://api.launchpad.net/1.0/~dims-v"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/22238\nCommitted: http://github.com/openstack/nova/commit/30c2a8f66edb9f9601a519fb525a46cc4486ab2a\nSubmitter: Jenkins\nBranch:    master\n\ncommit 30c2a8f66edb9f9601a519fb525a46cc4486ab2a\nAuthor: Sean Dague <email address hidden>\nDate:   Mon Feb 18 15:50:36 2013 -0500\n\n    create new cidr type for data storage\n    \n    it turns out that the 149 migration was overly agressive in its\n    IPAddress conversion, as we actually have a few columns that are\n    really CIDR values. This means that 39 chars isn't enough space to\n    store even a normalized IPv6 cidr in the worst case (you need 4\n    more to support /127).\n    \n    We must also normalize IPv6 address cidrs otherwise 43 chars isn't\n    long enough. This was more of a problem in theory, than in practice,\n    as real IPv6 addresses rarely are non compressible.\n    \n    This adds a migration to bump up the CIDR columns to 43 characters.\n    There is an infinitessimal chance that someone using mysql and long\n    IPv6 values might loose data in 149 because of truncation. This\n    doesn't address that, which would require modifying 149.\n    \n    The native pg CIDR column type is not used because it would require\n    additional scrubbing of the data as CIDR is invalid if any host bits\n    are set (and it will fail on type conversion).\n    \n    Fixes bug #1127696\n    \n    Change-Id: I54539ac9c257d726bc4db5943169b5284cc847d3\n", 
            "date_created": "2013-02-19 08:17:50.053497+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2013-02-21 08:51:43.437621+00:00"
}