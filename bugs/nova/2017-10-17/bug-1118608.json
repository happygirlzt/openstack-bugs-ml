{
    "status": "Fix Released", 
    "last_updated": "2013-04-04 11:11:54.285090+00:00", 
    "description": "Using a source-group type of rule with nova networking leads to VM not spawning (going into ERROR), when the source and destination group are the same.\n\nSteps:\n- Fresh devstack with default services (n-net and not quantum)\n-  nova secgroup-create nasty nasty\n- nova secgroup-add-group-rule nasty nasty icmp -1 -1\n-  nova boot --image 68e97f3c-f160-48f9-9ce1-b6d8871c1f8b --flavor 1 --security-group nasty testvm0001\n\nVM goes into error.\nThe issue is reproducible consistently.\n\nUsing Grizzly-2\n\nubuntu@devstack02:/opt/stack/nova$ git log -1 | head -2\ncommit 9ba00e5ab8eec49fddd9ca03fdd9c07c41b088b7\nMerge: d2dad24 905b784", 
    "tags": [], 
    "importance": "Undecided", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1118608", 
    "owner": "https://api.launchpad.net/1.0/~philip-day", 
    "id": 1118608, 
    "index": 4657, 
    "openned": "2013-02-07 18:14:48.898770+00:00", 
    "created": "2013-02-07 18:14:48.898770+00:00", 
    "title": "source-group security group rule not working with nova networking", 
    "comments": [
        {
            "content": "Using a source-group type of rule with nova networking leads to VM not spawning (going into ERROR).\n\nSteps:\n- Fresh devstack with default services (n-net and not quantum)\n-  nova secgroup-create nasty nasty\n- nova secgroup-add-group-rule nasty nasty icmp -1 -1\n-  nova boot --image 68e97f3c-f160-48f9-9ce1-b6d8871c1f8b --flavor 1 --security-group nasty testvm0001\n\nVM goes into error. \nThe issue is reproducible consistently.\n\nUsing Grizzly-2\n\nubuntu@devstack02:/opt/stack/nova$ git log -1 | head -2\ncommit 9ba00e5ab8eec49fddd9ca03fdd9c07c41b088b7\nMerge: d2dad24 905b784", 
            "date_created": "2013-02-07 18:14:48.898770+00:00", 
            "author": "https://api.launchpad.net/1.0/~andrea-frittoli"
        }, 
        {
            "content": "", 
            "date_created": "2013-02-07 18:14:48.898770+00:00", 
            "author": "https://api.launchpad.net/1.0/~andrea-frittoli"
        }, 
        {
            "content": "Stack trace shows:\n\n2013-02-08 13:58:05.300 ERROR nova.openstack.common.rpc.amqp [req-2e8fe45b-10db-49a9-8935-a6186d2377d4 None None] Exception during message handling\n2013-02-08 13:58:05.300 TRACE nova.openstack.common.rpc.amqp Traceback (most recent call last):\n2013-02-08 13:58:05.300 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/nova/nova/openstack/common/rpc/amqp.py\", line 276, in _process_data\n2013-02-08 13:58:05.300 TRACE nova.openstack.common.rpc.amqp     rval = self.proxy.dispatch(ctxt, version, method, **args)\n2013-02-08 13:58:05.300 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/nova/nova/openstack/common/rpc/dispatcher.py\", line 133, in dispatch\n2013-02-08 13:58:05.300 TRACE nova.openstack.common.rpc.amqp     return getattr(proxyobj, method)(ctxt, **kwargs)\n2013-02-08 13:58:05.300 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/nova/nova/exception.py\", line 109, in wrapped\n2013-02-08 13:58:05.300 TRACE nova.openstack.common.rpc.amqp     temp_level, payload)\n2013-02-08 13:58:05.300 TRACE nova.openstack.common.rpc.amqp   File \"/usr/lib/python2.7/contextlib.py\", line 24, in __exit__\n2013-02-08 13:58:05.300 TRACE nova.openstack.common.rpc.amqp     self.gen.next()\n2013-02-08 13:58:05.300 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/nova/nova/exception.py\", line 88, in wrapped\n2013-02-08 13:58:05.300 TRACE nova.openstack.common.rpc.amqp     return f(self, context, *args, **kw)\n2013-02-08 13:58:05.300 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/nova/nova/compute/manager.py\", line 583, in refresh_instance_security_rules\n2013-02-08 13:58:05.300 TRACE nova.openstack.common.rpc.amqp     return self.driver.refresh_instance_security_rules(instance)\n2013-02-08 13:58:05.300 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 2437, in refresh_instance_security_rules\n2013-02-08 13:58:05.300 TRACE nova.openstack.common.rpc.amqp     self.firewall_driver.refresh_instance_security_rules(instance)\n2013-02-08 13:58:05.300 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/nova/nova/virt/firewall.py\", line 433, in refresh_instance_security_rules\n2013-02-08 13:58:05.300 TRACE nova.openstack.common.rpc.amqp     self.do_refresh_instance_rules(instance)\n2013-02-08 13:58:05.300 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/nova/nova/virt/firewall.py\", line 451, in do_refresh_instance_rules\n2013-02-08 13:58:05.300 TRACE nova.openstack.common.rpc.amqp     ipv4_rules, ipv6_rules = self.instance_rules(instance, network_info)\n2013-02-08 13:58:05.300 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/nova/nova/virt/firewall.py\", line 403, in instance_rules\n2013-02-08 13:58:05.300 TRACE nova.openstack.common.rpc.amqp     instance)\n2013-02-08 13:58:05.300 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/nova/nova/network/api.py\", line 88, in wrapped\n2013-02-08 13:58:05.300 TRACE nova.openstack.common.rpc.amqp     return func(self, context, *args, **kwargs)\n2013-02-08 13:58:05.300 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/nova/nova/network/api.py\", line 338, in get_instance_nw_info\n2013-02-08 13:58:05.300 TRACE nova.openstack.common.rpc.amqp     result = self._get_instance_nw_info(context, instance)\n2013-02-08 13:58:05.300 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/nova/nova/network/api.py\", line 347, in _get_instance_nw_info\n2013-02-08 13:58:05.300 TRACE nova.openstack.common.rpc.amqp     'rxtx_factor': instance['instance_type']['rxtx_factor'],\n2013-02-08 13:58:05.300 TRACE nova.openstack.common.rpc.amqp TypeError: string indices must be integers\n2013-02-08 13:58:05.300 TRACE nova.openstack.common.rpc.amqp ", 
            "date_created": "2013-02-08 14:01:57.005025+00:00", 
            "author": "https://api.launchpad.net/1.0/~philip-day"
        }, 
        {
            "content": "It looks as if the instance structure being passed across from compute/api/trigger_rules_refresh  doesn't have the instance_type structure populated.\n\nThe instance comes from db.security_group_get()\n\nNot sure why this would be, not why it should matter in this context.", 
            "date_created": "2013-02-08 14:11:36.568702+00:00", 
            "author": "https://api.launchpad.net/1.0/~philip-day"
        }, 
        {
            "content": "Actually there are multiple exception in here, and I think the first may be a race condition:\n\nDuring creating the instance, compute manager will rpc call \"allocate_for_instance\" from the network manager, which will in turn end up making a rpc cast back to the compute_manager to call  refresh_instance_security_rules.   Since the instance being created is in a group that has a rule referring to itself, that  will end up trying to refresh the rules for the new instance.\n\nThat call will find its way down to do_refresh_instance_rules() in libvirt/firewall - which will try to get network_info from the global \"network_infos\" in firewall. \n\nBut the entry in network_infos for this instance might not of been added yet, as that only happens when the create of the instance calls \"prepare_instance_filter  which comes later in the sequence as part of driver.spawn\n\nI *think* that explains the first exception - I don;t know if there is a knock on effect for the others.", 
            "date_created": "2013-02-08 16:36:48.063469+00:00", 
            "author": "https://api.launchpad.net/1.0/~philip-day"
        }, 
        {
            "content": "The line in the compute log from Andrea that I think is the most telling is this:\n\n2013-02-07 17:27:48.97 TRACE nova.openstack.common.rpc.amqp RemoteError: Remote error: DetachedInstanceError Parent instance <Instance at 0x4338190> is not bound to a Session; lazy load operation of attribute 'system_metadata' cannot proceed\n\nPretty sure that DB session handling will be the culprit here.", 
            "date_created": "2013-02-08 18:40:50.961544+00:00", 
            "author": "https://api.launchpad.net/1.0/~jaypipes"
        }, 
        {
            "content": "I believe that the second issue here is a problem in jsonutils/to_primitive - which imposes a seemingly arbitrary maximum recursion depth of 3. \n\nThe query that is breaking this is  security_group_rule_get_by_security_group, which returns a set of rules, which can hae teh structure:\n\nrule -> grantee_group -> Instance -> Instance_type\n\nRunning devstack with this max level set to 4 fixes the issue.\n", 
            "date_created": "2013-02-10 21:22:10.201904+00:00", 
            "author": "https://api.launchpad.net/1.0/~philip-day"
        }, 
        {
            "content": "https://review.openstack.org/#/c/21529/", 
            "date_created": "2013-03-14 14:16:14.858199+00:00", 
            "author": "https://api.launchpad.net/1.0/~philip-day"
        }
    ], 
    "closed": "2013-03-18 10:25:57.266032+00:00"
}