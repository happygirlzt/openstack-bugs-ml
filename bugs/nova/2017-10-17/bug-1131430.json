{
    "status": "Fix Released", 
    "last_updated": "2013-04-04 11:21:25.347233+00:00", 
    "description": "If a baremetal node is created, but has no interfaces associated with it, API calls to list all nodes, show that node, or delete that node will fail until an interface is associated with it.\n\nThese API calls should work regardless of whether the node has any interfaces associated.\n\nErrors from python-novaclient:\n\n$ nova baremetal-node-list\nERROR: The resource could not be found. (HTTP 404) (Request-ID: req-11cc3b25-0b08-4b48-afa8-849a071a6ab9)\n$ nova baremetal-node-delete 1\nERROR: No baremetalnode with a name or ID of '1' exists.\n\n\nError in nova-api:\n\n2013-02-21 21:52:26.215 TRACE nova.api.openstack   File \"/opt/stack/nova/nova/api/openstack/compute/contrib/baremetal_nodes.py\", line 106, in index\n2013-02-21 21:52:26.215 TRACE nova.api.openstack     context, node_from_db['id'])\n2013-02-21 21:52:26.215 TRACE nova.api.openstack   File \"/opt/stack/nova/nova/virt/baremetal/db/api.py\", line 186, in bm_interface_get_all_by_bm_node_id\n2013-02-21 21:52:26.215 TRACE nova.api.openstack     return IMPL.bm_interface_get_all_by_bm_node_id(context, bm_node_id)\n2013-02-21 21:52:26.215 TRACE nova.api.openstack   File \"/opt/stack/nova/nova/db/sqlalchemy/api.py\", line 95, in wrapper\n2013-02-21 21:52:26.215 TRACE nova.api.openstack     return f(*args, **kwargs)\n2013-02-21 21:52:26.215 TRACE nova.api.openstack   File \"/opt/stack/nova/nova/virt/baremetal/db/sqlalchemy/api.py\", line 428, in bm_interface_get_all_by_bm_node_id\n2013-02-21 21:52:26.215 TRACE nova.api.openstack     raise exception.NodeNotFound(node_id=bm_node_id)\n2013-02-21 21:52:26.215 TRACE nova.api.openstack NodeNotFound: Node 1 could not be found.\n\n\nThe fix is simple: don't raise an exception in bm_interface_get_all_by_bm_node_id when there are no interfaces for that node id.", 
    "tags": [
        "baremetal"
    ], 
    "importance": "Medium", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1131430", 
    "owner": "https://api.launchpad.net/1.0/~devananda", 
    "id": 1131430, 
    "index": 3243, 
    "openned": "2013-02-21 21:55:09.072839+00:00", 
    "created": "2013-02-21 21:55:09.072839+00:00", 
    "title": "API for baremetal nodes fails if node has no interfaces", 
    "comments": [
        {
            "content": "If a baremetal node is created, but has no interfaces associated with it, API calls to list all nodes, show that node, or delete that node will fail until an interface is associated with it.\n\nThese API calls should work regardless of whether the node has any interfaces associated.\n\nErrors from python-novaclient:\n\n$ nova baremetal-node-list\nERROR: The resource could not be found. (HTTP 404) (Request-ID: req-11cc3b25-0b08-4b48-afa8-849a071a6ab9)\n$ nova baremetal-node-delete 1\nERROR: No baremetalnode with a name or ID of '1' exists.\n\n\nError in nova-api:\n\n2013-02-21 21:52:26.215 TRACE nova.api.openstack   File \"/opt/stack/nova/nova/api/openstack/compute/contrib/baremetal_nodes.py\", line 106, in index\n2013-02-21 21:52:26.215 TRACE nova.api.openstack     context, node_from_db['id'])\n2013-02-21 21:52:26.215 TRACE nova.api.openstack   File \"/opt/stack/nova/nova/virt/baremetal/db/api.py\", line 186, in bm_interface_get_all_by_bm_node_id\n2013-02-21 21:52:26.215 TRACE nova.api.openstack     return IMPL.bm_interface_get_all_by_bm_node_id(context, bm_node_id)\n2013-02-21 21:52:26.215 TRACE nova.api.openstack   File \"/opt/stack/nova/nova/db/sqlalchemy/api.py\", line 95, in wrapper\n2013-02-21 21:52:26.215 TRACE nova.api.openstack     return f(*args, **kwargs)\n2013-02-21 21:52:26.215 TRACE nova.api.openstack   File \"/opt/stack/nova/nova/virt/baremetal/db/sqlalchemy/api.py\", line 428, in bm_interface_get_all_by_bm_node_id\n2013-02-21 21:52:26.215 TRACE nova.api.openstack     raise exception.NodeNotFound(node_id=bm_node_id)\n2013-02-21 21:52:26.215 TRACE nova.api.openstack NodeNotFound: Node 1 could not be found.\n\n\nThe fix is simple: don't raise an exception in bm_interface_get_all_by_bm_node_id when there are no interfaces for that node id.", 
            "date_created": "2013-02-21 21:55:09.072839+00:00", 
            "author": "https://api.launchpad.net/1.0/~devananda"
        }, 
        {
            "content": "Actually, better solution - change the exception handling in nova/api/openstack/compute/contrib/baremetal_nodes.py to catch the right exceptions.", 
            "date_created": "2013-02-21 22:06:55.295703+00:00", 
            "author": "https://api.launchpad.net/1.0/~devananda"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/22627", 
            "date_created": "2013-02-21 22:54:20.937352+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/22627\nCommitted: http://github.com/openstack/nova/commit/3aace2a610d8b5e7027ef141970e23cddba0294d\nSubmitter: Jenkins\nBranch:    master\n\ncommit 3aace2a610d8b5e7027ef141970e23cddba0294d\nAuthor: Devananda van der Veen <email address hidden>\nDate:   Thu Feb 21 13:56:25 2013 -0800\n\n    Fix exception handling in baremetal API.\n    \n    In patch ab9f8667c63d901f37d1662c5204fb2938be44fe, several\n    baremetal/db/api methods' exceptions were changed from InstanceNotFound\n    to NodeNotFound. The API extension for baremetal was not updated to\n    catch these, and this was not caught by unit testing. This resulted in\n    unhandled exceptions within nova-api if any baremetal node lacked an\n    associated interface.\n    \n    While fixing that bug, a few other unit tests for the baremetal API\n    were added, and a missing exception was added to db/api bm_node_destroy.\n    \n    Fixes bug 1131430.\n    \n    Change-Id: I15f7624723754f9d7b217b609663a2d709acb056\n", 
            "date_created": "2013-02-22 22:57:03.776505+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2013-03-20 16:12:43.703315+00:00"
}