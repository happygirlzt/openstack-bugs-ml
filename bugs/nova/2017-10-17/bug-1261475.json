{
    "status": "Fix Released", 
    "last_updated": "2014-04-17 09:00:57.906488+00:00", 
    "description": "By default libguestfs will register an atexit() handler to cleanup any open libguestfs handles when the process exits. Since libguestfs does not provide any mutex locking in its APIs, the atexit handlers are not safe in multi-threaded processes. If they run they are liable to cause memory corruption as multiple threads access the same libguestfs handle. As such at atexit handlers should be disabled in any multi-threaded program using libguestfs. eg by using\n\n  guestfs.GuestFS (close_on_exit = False)\n\ninstead of\n\n  guestfs.GuestFS()", 
    "tags": [
        "compute"
    ], 
    "importance": "Low", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1261475", 
    "owner": "https://api.launchpad.net/1.0/~mikal", 
    "id": 1261475, 
    "index": 1108, 
    "openned": "2013-12-16 17:40:14.748448+00:00", 
    "created": "2013-12-16 17:40:14.748448+00:00", 
    "title": "Nova should disable libguestfs' automatic cleanup", 
    "comments": [
        {
            "content": "By default libguestfs will register an atexit() handler to cleanup any open libguestfs handles when the process exits. Since libguestfs does not provide any mutex locking in its APIs, the atexit handlers are not safe in multi-threaded processes. If they run they are liable to cause memory corruption as multiple threads access the same libguestfs handle. As such at atexit handlers should be disabled in any multi-threaded program using libguestfs. eg by using\n\n  guestfs.GuestFS (close_on_exit = False)\n\ninstead of\n\n  guestfs.GuestFS()", 
            "date_created": "2013-12-16 17:40:14.748448+00:00", 
            "author": "https://api.launchpad.net/1.0/~berrange"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/64384", 
            "date_created": "2013-12-30 00:32:07.287005+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/64384\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=02abbef960b12deaa7a911788dbc56f3a0bd555a\nSubmitter: Jenkins\nBranch:    master\n\ncommit 02abbef960b12deaa7a911788dbc56f3a0bd555a\nAuthor: Michael Still <email address hidden>\nDate:   Mon Dec 30 10:55:20 2013 +1100\n\n    Disable libguestfs' default atexit handlers.\n    \n    These aren't safe for multi-threaded applications, per the bug\n    report from Daniel Berrange.\n    \n    Closes-bug: #1261475\n    \n    Change-Id: I4cc5eaded2e21f1b2cd55615242a27b9773f0b42\n", 
            "date_created": "2013-12-31 22:43:19.535608+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "I hit a bug on Ice-house due to this fix.   Basically now that ice-house is doing the call guestfs.GuestFS (close_on_exit = False), there are different requirements on the version of libguestfs.x86_64   and python-libguestfs.x86_64.     \n\nDuring the deployment of a VM I would get the following error on the compute node:\n\n2014-01-20 16:51:32.395 7723 ERROR nova.compute.manager [req-482a2eec-238c-4696-8aab-acc0d404e627 45a71543cb6f4022ac4f56855a7ff197 4a5f610e660347b6a629a27ffea92240] [instance: d4083a7f-0c2d-44b3-a79b-7f498ea75ecd] Error: __init__() got an unexpected keyword argument 'close_on_exit'\n2014-01-20 16:51:32.395 7723 TRACE nova.compute.manager [instance: d4083a7f-0c2d-44b3-a79b-7f498ea75ecd] Traceback (most recent call last):\n2014-01-20 16:51:32.395 7723 TRACE nova.compute.manager [instance: d4083a7f-0c2d-44b3-a79b-7f498ea75ecd]   File \"/usr/lib/python2.6/site-packages/nova/compute/manager.py\", line 1062, in _build_instance\n2014-01-20 16:51:32.395 7723 TRACE nova.compute.manager [instance: d4083a7f-0c2d-44b3-a79b-7f498ea75ecd]     set_access_ip=set_access_ip)\n2014-01-20 16:51:32.395 7723 TRACE nova.compute.manager [instance: d4083a7f-0c2d-44b3-a79b-7f498ea75ecd]   File \"/usr/lib/python2.6/site-packages/nova/compute/manager.py\", line 362, in decorated_function\n2014-01-20 16:51:32.395 7723 TRACE nova.compute.manager [instance: d4083a7f-0c2d-44b3-a79b-7f498ea75ecd]     return function(self, context, *args, **kwargs)\n2014-01-20 16:51:32.395 7723 TRACE nova.compute.manager [instance: d4083a7f-0c2d-44b3-a79b-7f498ea75ecd]   File \"/usr/lib/python2.6/site-packages/nova/compute/manager.py\", line 1497, in _spawn\n2014-01-20 16:51:32.395 7723 TRACE nova.compute.manager [instance: d4083a7f-0c2d-44b3-a79b-7f498ea75ecd]     LOG.exception(_('Instance failed to spawn'), instance=instance)\n2014-01-20 16:51:32.395 7723 TRACE nova.compute.manager [instance: d4083a7f-0c2d-44b3-a79b-7f498ea75ecd]   File \"/usr/lib/python2.6/site-packages/nova/openstack/common/excutils.py\", line 68, in __exit__\n2014-01-20 16:51:32.395 7723 TRACE nova.compute.manager [instance: d4083a7f-0c2d-44b3-a79b-7f498ea75ecd]     six.reraise(self.type_, self.value, self.tb)\n2014-01-20 16:51:32.395 7723 TRACE nova.compute.manager [instance: d4083a7f-0c2d-44b3-a79b-7f498ea75ecd]   File \"/usr/lib/python2.6/site-packages/nova/compute/manager.py\", line 1483, in _spawn\n2014-01-20 16:51:32.395 7723 TRACE nova.compute.manager [instance: d4083a7f-0c2d-44b3-a79b-7f498ea75ecd]     block_device_info)\n2014-01-20 16:51:32.395 7723 TRACE nova.compute.manager [instance: d4083a7f-0c2d-44b3-a79b-7f498ea75ecd]   File \"/usr/lib/python2.6/site-packages/nova/virt/libvirt/driver.py\", line 2174, in spawn\n2014-01-20 16:51:32.395 7723 TRACE nova.compute.manager [instance: d4083a7f-0c2d-44b3-a79b-7f498ea75ecd]     admin_pass=admin_password)\n2014-01-20 16:51:32.395 7723 TRACE nova.compute.manager [instance: d4083a7f-0c2d-44b3-a79b-7f498ea75ecd]   File \"/usr/lib/python2.6/site-packages/nova/virt/libvirt/driver.py\", line 2477, in _create_image\n2014-01-20 16:51:32.395 7723 TRACE nova.compute.manager [instance: d4083a7f-0c2d-44b3-a79b-7f498ea75ecd]     project_id=instance['project_id'])\n2014-01-20 16:51:32.395 7723 TRACE nova.compute.manager [instance: d4083a7f-0c2d-44b3-a79b-7f498ea75ecd]   File \"/usr/lib/python2.6/site-packages/nova/virt/libvirt/imagebackend.py\", line 187, in cache\n2014-01-20 16:51:32.395 7723 TRACE nova.compute.manager [instance: d4083a7f-0c2d-44b3-a79b-7f498ea75ecd]     *args, **kwargs)\n2014-01-20 16:51:32.395 7723 TRACE nova.compute.manager [instance: d4083a7f-0c2d-44b3-a79b-7f498ea75ecd]   File \"/usr/lib/python2.6/site-packages/nova/virt/libvirt/imagebackend.py\", line 337, in create_image\n2014-01-20 16:51:32.395 7723 TRACE nova.compute.manager [instance: d4083a7f-0c2d-44b3-a79b-7f498ea75ecd]     copy_qcow2_image(base, self.path, size)\n2014-01-20 16:51:32.395 7723 TRACE nova.compute.manager [instance: d4083a7f-0c2d-44b3-a79b-7f498ea75ecd]   File \"/usr/lib/python2.6/site-packages/nova/openstack/common/lockutils.py\", line 249, in inner\n2014-01-20 16:51:32.395 7723 TRACE nova.compute.manager [instance: d4083a7f-0c2d-44b3-a79b-7f498ea75ecd]     return f(*args, **kwargs)\n2014-01-20 16:51:32.395 7723 TRACE nova.compute.manager [instance: d4083a7f-0c2d-44b3-a79b-7f498ea75ecd]   File \"/usr/lib/python2.6/site-packages/nova/virt/libvirt/imagebackend.py\", line 303, in copy_qcow2_image\n2014-01-20 16:51:32.395 7723 TRACE nova.compute.manager [instance: d4083a7f-0c2d-44b3-a79b-7f498ea75ecd]     disk.extend(target, size, use_cow=True)\n2014-01-20 16:51:32.395 7723 TRACE nova.compute.manager [instance: d4083a7f-0c2d-44b3-a79b-7f498ea75ecd]   File \"/usr/lib/python2.6/site-packages/nova/virt/disk/api.py\", line 149, in extend\n2014-01-20 16:51:32.395 7723 TRACE nova.compute.manager [instance: d4083a7f-0c2d-44b3-a79b-7f498ea75ecd]     if not is_image_partitionless(image, use_cow):\n2014-01-20 16:51:32.395 7723 TRACE nova.compute.manager [instance: d4083a7f-0c2d-44b3-a79b-7f498ea75ecd]   File \"/usr/lib/python2.6/site-packages/nova/virt/disk/api.py\", line 189, in is_image_partitionless\n2014-01-20 16:51:32.395 7723 TRACE nova.compute.manager [instance: d4083a7f-0c2d-44b3-a79b-7f498ea75ecd]     fs.setup()\n2014-01-20 16:51:32.395 7723 TRACE nova.compute.manager [instance: d4083a7f-0c2d-44b3-a79b-7f498ea75ecd]   File \"/usr/lib/python2.6/site-packages/nova/virt/disk/vfs/guestfs.py\", line 111, in setup\n2014-01-20 16:51:32.395 7723 TRACE nova.compute.manager [instance: d4083a7f-0c2d-44b3-a79b-7f498ea75ecd]     self.handle = tpool.Proxy(guestfs.GuestFS(close_on_exit=False))\n2014-01-20 16:51:32.395 7723 TRACE nova.compute.manager [instance: d4083a7f-0c2d-44b3-a79b-7f498ea75ecd] TypeError: __init__() got an unexpected keyword argument 'close_on_exit'\n\nAfter doing some research I found out that the close_on_exit parameter is supported only on the newer versions of libguestfs.x86_64   and python-libguestfs.x86_64.\n\nIn my system I had \nlibguestfs.x86_64                          1:1.16.34-2.el6         \npython-libguestfs.x86_64           1:1.16.34-2.el6        \n\nAfter updating to the following versions the deploy operation started working again.\nlibguestfs.x86_64                  1:1.20.11-2.el6         \npython-libguestfs.x86_64           1:1.20.11-2.el6       \n\n\nShould we report this as a bug in ice-house? ", 
            "date_created": "2014-01-21 19:49:06.415944+00:00", 
            "author": "https://api.launchpad.net/1.0/~jorgedr"
        }, 
        {
            "content": "Yes, please report new bugs for new problems. We'll have to make this new usage conditional based on version", 
            "date_created": "2014-01-22 10:22:00.284661+00:00", 
            "author": "https://api.launchpad.net/1.0/~berrange"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/70354\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=fd621ef05a024b8319f2c67f7e5c084b9ab77755\nSubmitter: Jenkins\nBranch:    master\n\ncommit fd621ef05a024b8319f2c67f7e5c084b9ab77755\nAuthor: Russell Bryant <email address hidden>\nDate:   Fri Jan 31 09:28:50 2014 -0500\n\n    Deal with old versions of libguestfs\n    \n    Commit 02abbef960b12deaa7a911788dbc56f3a0bd555a added the use of the\n    close_on_exit parameter.  This is supported by libguestfs 1.20 and up.\n    Catch the exeption raised when this parameter isn't supported and retry\n    without it.\n    \n    Change-Id: Ic47c1cb997ece3710f8c4465733148fcfa94068d\n    Closes-Bug: #1271562\n    Related-Bug: #1261475\n", 
            "date_created": "2014-01-31 18:56:10.335761+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Related fix proposed to branch: master\nReview: https://review.openstack.org/70419", 
            "date_created": "2014-01-31 19:41:21.348959+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/70419\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=a154ff8e54478d6b2a2396eada97eb5229d74811\nSubmitter: Jenkins\nBranch:    master\n\ncommit a154ff8e54478d6b2a2396eada97eb5229d74811\nAuthor: Russell Bryant <email address hidden>\nDate:   Fri Jan 31 14:30:13 2014 -0500\n\n    Test guestfs without support for close_on_exit\n    \n    A previous commit, fd621ef05a024b8319f2c67f7e5c084b9ab77755, fixed support for\n    versions of libguestfs that did not support the close_on_exit parameter.  This\n    patch adds unit test coverage for that code path.\n    \n    Change-Id: Ic3cc0057e24ac00e6435a9555a19c076ddc9b02e\n    Related-Bug: #1271562\n    Related-Bug: #1261475\n", 
            "date_created": "2014-02-10 19:20:25.770021+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2014-01-22 16:17:53.705298+00:00"
}