{
    "status": "Fix Released", 
    "last_updated": "2016-04-18 19:18:03.856002+00:00", 
    "description": "Documentation [1] about `block_device_mapping_v2` when creating a server instance is misleading as it doesn't explain that it must actually be an array of mappings and there is no complete list of the supported keys. For example `volume_size` and `uuid` are not even mentioned.\n\nThanks to an unrelated github bug [2] I figured it's something like this:\n        \"block_device_mapping_v2\": [\n          {\n            \"boot_index\": \"0\",\n            \"uuid\": \"ac408821-c95a-448f-9292-73986c790911\",\n            \"source_type\": \"image\",\n            \"volume_size\": \"25\",\n            \"destination_type\": \"volume\",\n            \"delete_on_termination\": true\n          }\n\nThe above example is something that very quickly gets you to the point. In block_device_mapping.rst doc I see some of the things explained but first I could only find that doc grepping nova's sources and I still couldn't figure from that doc how in hell should I construct my API call.\n\nWhat I wanted to do is to basically launch an instance off a new custom sized volume. That turned out very easy and conscious eventually but finding that out took hours for me as I'm simply an API user and I have no experience whatsoever installing, configuring, even less hacking on OpenStack.\n\nP.S. I'm using a similar feature in GCE. They have it even nicer. When you specify the instance disks, it supports any options that are supported by the api call creating a standalone disk. I guess values are then passed to the disk api as is. Might be worth considering for a future API version. e.g. at the moment I can't specify a name for the new volume or many of the other options supported by the OS volumes API.\n\n[1] http://developer.openstack.org/api-ref-compute-v2.1.html#createServer\n[2] https://github.com/ggiamarchi/vagrant-openstack-provider/issues/209#issuecomment-73961050", 
    "tags": [
        "api", 
        "doc", 
        "low-hanging-fruit", 
        "volumes"
    ], 
    "importance": "Medium", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1553152", 
    "owner": "None", 
    "id": 1553152, 
    "index": 4476, 
    "openned": "2016-03-04 11:28:24.134293+00:00", 
    "created": "2016-03-04 11:28:24.134293+00:00", 
    "title": "misleading API documentation for block_device_mapping_v2", 
    "comments": [
        {
            "content": "Documentation [1] about `block_device_mapping_v2` when creating a server instance is misleading as it doesn't explain that it must actually be an array of mappings and there is no complete list of the supported keys. For example `volume_size` and `uuid` are not even mentioned.\n\nThanks to an unrelated github bug [2] I figured it's something like this:\n        \"block_device_mapping_v2\": [\n          {\n            \"boot_index\": \"0\",\n            \"uuid\": \"ac408821-c95a-448f-9292-73986c790911\",\n            \"source_type\": \"image\",\n            \"volume_size\": \"25\",\n            \"destination_type\": \"volume\",\n            \"delete_on_termination\": true\n          }\n\nThe above example is something that very quickly gets you to the point. In block_device_mapping.rst doc I see some of the things explained but first I could only find that doc grepping nova's sources and I still couldn't figure from that doc how in hell should I construct my API call.\n\nWhat I wanted to do is to basically launch an instance off a new custom sized volume. That turned out very easy and conscious eventually but finding that out took hours for me as I'm simply an API user and I have no experience whatsoever installing, configuring, even less hacking on OpenStack.\n\nP.S. I'm using a similar feature in GCE. They have it even nicer. When you specify the instance disks, it supports any options that are supported by the api call creating a standalone disk. I guess values are then passed to the disk api as is. Might be worth considering for a future API version. e.g. at the moment I can't specify a name for the new volume or many of the other options supported by the OS volumes API.\n\n[1] http://developer.openstack.org/api-ref-compute-v2.1.html#createServer\n[2] https://github.com/ggiamarchi/vagrant-openstack-provider/issues/209#issuecomment-73961050", 
            "date_created": "2016-03-04 11:28:24.134293+00:00", 
            "author": "https://api.launchpad.net/1.0/~balidubiba"
        }, 
        {
            "content": "The API schema for block_device_mapping_v2 is here:\n\nhttps://github.com/openstack/nova/blob/3be36fcb7bdc0f48eae06f5378f3ba2e4a4975bd/nova/api/openstack/compute/schemas/block_device_mapping.py\n\nYou're right that the API docs aren't helpful here.\n\nAs for the last comment, \"at the moment I can't specify a name for the new volume or many of the other options supported by the OS volumes API.\", that's more or less not going to change because of this policy:\n\nhttp://docs.openstack.org/developer/nova/project_scope.html?highlight=proxy#no-more-api-proxies\n\nWhich basically says, if you want to specify the volume type or name/description, you would create the volume via the Cinder API first, then provide that to nova when creating the server, so nova just attaches that volume.", 
            "date_created": "2016-03-04 21:34:23.526238+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "FWIW, I've asked in the #openstack-doc channel on IRC freenode how to handle this in the api-site guide, no immediate response. I'm going to mark this as low-hanging-fruit so someone can hopefully pick this up and work on it.", 
            "date_created": "2016-03-04 21:45:21.094162+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Adding openstack-api-site as the openstack/api-site repo is where this type of info should go. It's the source for http://developer.openstack.org/api-ref-compute-v2.1.html#createServer. \n\nHere's the file to add the JSON schema info, parameter by parameter I believe:\n\nhttps://github.com/openstack/api-site/blob/master/api-ref/src/wadls/compute-api/src/v2.1/wadl/servers-v2.1.wadl", 
            "date_created": "2016-03-04 21:58:03.242448+00:00", 
            "author": "https://api.launchpad.net/1.0/~annegentle"
        }, 
        {
            "content": "Can you please  mention the openstack version?\n", 
            "date_created": "2016-03-18 06:52:42.639802+00:00", 
            "author": "https://api.launchpad.net/1.0/~anseela-m00"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/291270\nCommitted: https://git.openstack.org/cgit/openstack/api-site/commit/?id=f98db59e9856abc19c57837460a5404e4fd75dfb\nSubmitter: Jenkins\nBranch:    master\n\ncommit f98db59e9856abc19c57837460a5404e4fd75dfb\nAuthor: Sean Dague <email address hidden>\nDate:   Thu Mar 10 11:05:10 2016 -0500\n\n    Put in example block_device_mapping structure\n    \n    The documentation on the block_device_mapping_v2 structure doesn't\n    really explain much. This provides a sample structure so that it at\n    least gives a starting point for people. It would be best if this was\n    expanded on further, but it's a start.\n    \n    Closes-Bug: #1553152\n    \n    Change-Id: If559035fbcf3d4c79bae5672abf6718915917d72\n", 
            "date_created": "2016-03-29 13:17:45.531651+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2016-04-18 19:18:01.316846+00:00"
}