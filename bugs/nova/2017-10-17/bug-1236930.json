{
    "status": "Fix Released", 
    "last_updated": "2014-04-17 08:50:17.042491+00:00", 
    "description": "I am running Havana from precise-proposed in the UCA (nova 1:2013.2~b3-0ubuntu1~cloud0).\n\nTo reproduce:\n\n- start an instance\n- reboot (sudo reboot) the compute node on which it is running\n-  after the compute node is done booting, the instance will be off:\n\nroot@xen10:~# nova list\n+--------------------------------------+------+---------+------------+-------------+-------------------------+\n| ID                                   | Name | Status  | Task State | Power State | Networks                |\n+--------------------------------------+------+---------+------------+-------------+-------------------------+\n| 4824dce8-d876-4022-a446-3fc8d708ac62 | test | SHUTOFF | None       | Shutdown    | novanetwork=172.20.46.3 |\n+--------------------------------------+------+---------+------------+-------------+-------------------------+\n\n(note that although my hostname has \"xen\" in it, I'm using KVM. Haven't updated DNS yet...)\n\n- attempt to reboot the instance (nova reboot 4824dce8-d876-4022-a446-3fc8d708ac62)\n\n# nova show 4824dce8-d876-4022-a446-3fc8d708ac62\n+--------------------------------------+----------------------------------------------------------+\n| Property                             | Value                                                    |\n+--------------------------------------+----------------------------------------------------------+\n| status                               | SHUTOFF                                                  |\n| updated                              | 2013-10-08T15:28:47Z                                     |\n| OS-EXT-STS:task_state                | rebooting                                                |\n\nThe reboot fails. The compute node will log:\n\n2013-10-08 11:28:55.579 1400 WARNING nova.compute.manager [req-11fe1624-22f6-4348-81c5-185d0ce0d3a0 a70453729dd84bfd8f31019b1bb91e40 46ab32189ab64a4c92f8f64e6c9ed028] [instance: 4824dce8-d876-4022-a446-3fc8d708ac62] trying to reboot a non-running instance: (state: 4 expected: 1)\n\n- attempt to start the instance (nova start 4824dce8-d876-4022-a446-3fc8d708ac62):\n\nproduces console output:\nERROR: Instance 4824dce8-d876-4022-a446-3fc8d708ac62 in task_state rebooting. Cannot start while the instance is in this state. (HTTP 400) (Request-ID: req-732224e1-8c34-4754-84f7-7a8476673185)\n\n- wait about 120 seconds, and the compute node will log:\n2013-10-08 11:30:56.082 1400 WARNING nova.virt.libvirt.driver [req-11fe1624-22f6-4348-81c5-185d0ce0d3a0 a70453729dd84bfd8f31019b1bb91e40 46ab32189ab64a4c92f8f64e6c9ed028] [instance: 4824dce8-d876-4022-a446-3fc8d708ac62] Failed to soft reboot instance. Trying hard reboot.\n\nAfterwards, the instance will be running.\n\nIt's confusing that the reboot logs a failure for a very obvious reason (an instance that is not running can't be *re*booted), yet the instance's state remains as \"rebooting\". I had expected that the reboot had failed, and openstack was in some consistant state. I was then again suprised when in fact it *was* still rebooting -- it just took two minutes to do so. Less confusing would be to catch the original error, and report the reboot as failed. The log messages are confusing, because the first sets the expectation that a non-running instance can't be rebooted, but it can (two minutes later).", 
    "tags": [
        "havana-backport-potential"
    ], 
    "importance": "Medium", 
    "heat": 14, 
    "link": "https://bugs.launchpad.net/nova/+bug/1236930", 
    "owner": "https://api.launchpad.net/1.0/~jay-lau-513", 
    "id": 1236930, 
    "index": 3642, 
    "openned": "2013-10-08 15:46:17.229592+00:00", 
    "created": "2013-10-08 15:46:17.229592+00:00", 
    "title": "attempting to reboot a shutdown/suspened/crashed/paused instance appears to have failed, but then surprisingly succeeds two minutes later", 
    "comments": [
        {
            "content": "I am running Havana from precise-proposed in the UCA (nova 1:2013.2~b3-0ubuntu1~cloud0).\n\nTo reproduce:\n\n- start an instance\n- reboot (sudo reboot) the compute node on which it is running\n-  after the compute node is done booting, the instance will be off:\n\nroot@xen10:~# nova list\n+--------------------------------------+------+---------+------------+-------------+-------------------------+\n| ID                                   | Name | Status  | Task State | Power State | Networks                |\n+--------------------------------------+------+---------+------------+-------------+-------------------------+\n| 4824dce8-d876-4022-a446-3fc8d708ac62 | test | SHUTOFF | None       | Shutdown    | novanetwork=172.20.46.3 |\n+--------------------------------------+------+---------+------------+-------------+-------------------------+\n\n(note that although my hostname has \"xen\" in it, I'm using KVM. Haven't updated DNS yet...)\n\n- attempt to reboot the instance (nova reboot 4824dce8-d876-4022-a446-3fc8d708ac62)\n\n# nova show 4824dce8-d876-4022-a446-3fc8d708ac62\n+--------------------------------------+----------------------------------------------------------+\n| Property                             | Value                                                    |\n+--------------------------------------+----------------------------------------------------------+\n| status                               | SHUTOFF                                                  |\n| updated                              | 2013-10-08T15:28:47Z                                     |\n| OS-EXT-STS:task_state                | rebooting                                                |\n\nThe reboot fails. The compute node will log:\n\n2013-10-08 11:28:55.579 1400 WARNING nova.compute.manager [req-11fe1624-22f6-4348-81c5-185d0ce0d3a0 a70453729dd84bfd8f31019b1bb91e40 46ab32189ab64a4c92f8f64e6c9ed028] [instance: 4824dce8-d876-4022-a446-3fc8d708ac62] trying to reboot a non-running instance: (state: 4 expected: 1)\n\n- attempt to start the instance (nova start 4824dce8-d876-4022-a446-3fc8d708ac62):\n\nproduces console output:\nERROR: Instance 4824dce8-d876-4022-a446-3fc8d708ac62 in task_state rebooting. Cannot start while the instance is in this state. (HTTP 400) (Request-ID: req-732224e1-8c34-4754-84f7-7a8476673185)\n\n- wait about 120 seconds, and the compute node will log:\n2013-10-08 11:30:56.082 1400 WARNING nova.virt.libvirt.driver [req-11fe1624-22f6-4348-81c5-185d0ce0d3a0 a70453729dd84bfd8f31019b1bb91e40 46ab32189ab64a4c92f8f64e6c9ed028] [instance: 4824dce8-d876-4022-a446-3fc8d708ac62] Failed to soft reboot instance. Trying hard reboot.\n\nAfterwards, the instance will be running.\n\nIt's confusing that the reboot logs a failure for a very obvious reason (an instance that is not running can't be *re*booted), yet the instance's state remains as \"rebooting\". I had expected that the reboot had failed, and openstack was in some consistant state. I was then again suprised when in fact it *was* still rebooting -- it just took two minutes to do so. Less confusing would be to catch the original error, and report the reboot as failed. The log messages are confusing, because the first sets the expectation that a non-running instance can't be rebooted, but it can (two minutes later).", 
            "date_created": "2013-10-08 15:46:17.229592+00:00", 
            "author": "https://api.launchpad.net/1.0/~bitglue"
        }, 
        {
            "content": "We  may need some discussion on this. Actually, for now, nova CAN reboot a STOPPED instance.\n\nThe logic is as following(as you append):\n1)\n2013-10-10 15:20:16.980 WARNING nova.compute.manager [req-975a1bd2-5c69-4a59-b506-7318bf599874 admin admin] [instance: 6105f3bf-7f58-4d42-bbbb-ff7186c16c36] trying to reboot a non-running instance: (state: 4 expected: 1)\n2) soft reboot failed and try hard reboot.\n2013-10-10 15:22:17.524 WARNING nova.virt.libvirt.driver [req-975a1bd2-5c69-4a59-b506-7318bf599874 admin admin] [instance: 6105f3bf-7f58-4d42-bbbb-ff7186c16c36] Failed to soft reboot instance. Trying hard reboot.\n3) hard reboot will first destroy the instance then re-create and power on the instance.\n\nSo it seems to be a valid case. Phil, what do you think? Thanks.", 
            "date_created": "2013-10-10 07:47:36.077279+00:00", 
            "author": "https://api.launchpad.net/1.0/~jay-lau-513"
        }, 
        {
            "content": "On 10/10/2013 03:47 AM, Jay Lau wrote:\n> So it seems to be a valid case. Phil, what do you think? Thanks.\n\nI agree it's a valid case, and the logic seems to make sense, after it\nall happens and has been investigated. The problem is just that in the\ntwo minutes between the failed soft reboot, and when the hard reboot is\ndone, it's really confusing. Here's what went through my mind:\n\n- let's reboot the instance\n- hum...that's taking a while. Why?\n- the logs say it failed, but the API indicates that it's still rebooting.\n- let's see if I can reproduce\n- let's file a bug report, and manually reset the instance state in the\ndatabase (I've run into this before, with other operations)\n- what the hell? My instance is running now!\n\nBesides being confusing, it's also unnecessarily slow. In those two\nminutes between soft and hard reboot attempts, nothing else can be done\nto the instance.\n\nI think this could be avoided two ways:\n\n1) the reboot procedure can check if the instance is not running, and if\nso, just start it, instead of attempting to reboot it, since that's\nbound to fail\n\n2) the first soft reboot attempt can do a better job of checking for\nfailures, and if they are encountered, bypass the two minute timeout and\nproceed directly to the hard reboot attempt.\n", 
            "date_created": "2013-10-10 11:23:25+00:00", 
            "author": "https://api.launchpad.net/1.0/~bitglue"
        }, 
        {
            "content": "Thanks Phil.\n\n>>>>>>>>1) the reboot procedure can check if the instance is not running, and if\nso, just start it, instead of attempting to reboot it, since that's\nbound to fail\n<<<<<<<< The instance has many power state, so we may want to handle those state separately.\n\nNOSTATE = 0x00\nRUNNING = 0x01\nPAUSED = 0x03\nSHUTDOWN = 0x04  # the VM is powered off\nCRASHED = 0x06\nSUSPENDED = 0x07\n\nIf RUNNING, reboot\nIf PAUSED, unpause\nIf SHUTDOWN, start\nIf SUSPENDED, resume\nIf CRASHED, hard reboot\n\nBut this might make the logic of reboot too complicated. I think that for this, \nwhat about simply let nova compute report error directly if reboot a not \nrunning vm? \n\n>>>>>>>>2) the first soft reboot attempt can do a better job of checking for\nfailures, and if they are encountered, bypass the two minute timeout and\nproceed directly to the hard reboot attempt.\n<<<<<<<< How to enable \"soft reboot attempt can do a better job of checking for\nfailures\"? Can you please give more detail?\n\nThanks!\n", 
            "date_created": "2013-10-10 12:00:51.313604+00:00", 
            "author": "https://api.launchpad.net/1.0/~jay-lau-513"
        }, 
        {
            "content": "On 10/10/2013 08:00 AM, Jay Lau wrote:\n> what about simply let nova compute report error directly if reboot a not \n> running vm?\n\nThat's fine by me, though it would mean an incompatible change in\nbehavior. I don't what the policy is on such things.\n\n> How to enable \"soft reboot attempt can do a better job of checking for\n> failures\"? Can you please give more detail?\n\nI mean currently, I'm guessing the logic is something like this:\n\nsoft_reboot()\nwhile 2 minutes have not elapsed {\n  if instance has rebooted {\n    return success\n  }\n}\nhard_reboot()\n\nWhen the soft reboot is attempted, there must be some error, because it\nis logged (can't reboot a shutdown instance). But, it has absolutely no\nbearing on the reboot procedure; it just waits two minutes, even though\nit's clear (from the error) that the soft reboot has failed. The logic\ncould be this:\n\ntry {\n  soft_reboot()\n} catch {\n  hard_reboot()\n}\nwhile 2 minutes have not elapsed {\n  if instance has rebooted {\n    return success\n  }\n}\nhard_reboot()\n\nOr, if a change in behavior is acceptable, as you suggest, it could be:\n\nif instance is not running {\n  return failure \"can not reboot a non-running instance\"\n}\n...reboot as it is currently done\n\nEither way, the confusion is eliminated.\n", 
            "date_created": "2013-10-10 13:11:01+00:00", 
            "author": "https://api.launchpad.net/1.0/~bitglue"
        }, 
        {
            "content": "Thanks Phil, the same issue occurred for reboot a suspended, paused, crashed VM. I will fix those issues together.", 
            "date_created": "2013-10-11 01:27:13.501479+00:00", 
            "author": "https://api.launchpad.net/1.0/~jay-lau-513"
        }, 
        {
            "content": "Will handle paused VM case in https://bugs.launchpad.net/nova/+bug/1238435", 
            "date_created": "2013-10-11 06:16:51.871376+00:00", 
            "author": "https://api.launchpad.net/1.0/~jay-lau-513"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/51130", 
            "date_created": "2013-10-11 07:01:09.035685+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/51130\nCommitted: http://github.com/openstack/nova/commit/2392313f562ba6a90ed1ec3fbc507862043fa44f\nSubmitter: Jenkins\nBranch:    master\n\ncommit 2392313f562ba6a90ed1ec3fbc507862043fa44f\nAuthor: Jay Lau <email address hidden>\nDate:   Sat Oct 12 13:52:38 2013 +0800\n\n    compute api should throw exception if soft reboot invalid state VM\n    \n    When user perform soft reboot to a VM which in suspended/paused/\n    stopped/error state, nova compute api should throw exception for\n    such state.\n    \n    Change-Id: Ic365c6360f6b7407d9de0dac6ff1093484692cf4\n    Closes-Bug: #1236930\n", 
            "date_created": "2013-10-14 08:02:39.603936+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2013-12-04 10:20:29.258767+00:00"
}