{
    "status": "Fix Released", 
    "last_updated": "2011-04-15 08:33:14.932177+00:00", 
    "description": "I'm trying to put a new image like described in the documentation on http://glance.openstack.org/client.html.\n\nI started glance_registry on port 9191 and used swift as the default storage.\n\nNo I get the following error from glance_registry:\n\nDEBUG:routes.middleware:Match dict: {'action': u'create', 'controller': <glance.registry.server.ImageController object at 0xc50110>}\nTraceback (most recent call last):\n  File \"/usr/lib64/python2.6/site-packages/eventlet/wsgi.py\", line 336, in handle_one_response\n    result = self.application(self.environ, start_response)\n  File \"/usr/lib64/python2.6/site-packages/webob/dec.py\", line 159, in __call__\n    return resp(environ, start_response)\n  File \"/usr/lib64/python2.6/site-packages/routes/middleware.py\", line 131, in __call__\n    response = self.app(environ, start_response)\n  File \"/usr/lib64/python2.6/site-packages/webob/dec.py\", line 159, in __call__\n    return resp(environ, start_response)\n  File \"/usr/lib64/python2.6/site-packages/webob/dec.py\", line 147, in __call__\n    resp = self.call_func(req, *args, **self.kwargs)\n  File \"/usr/lib64/python2.6/site-packages/webob/dec.py\", line 208, in call_func\n    return self.func(req, *args, **kwargs)\n  File \"/usr/lib64/python2.6/site-packages/glance/common/wsgi.py\", line 239, in __call__\n    result = method(**arg_dict)\n  File \"/usr/lib64/python2.6/site-packages/glance/registry/server.py\", line 106, in create\n    image_data = json.loads(req.body)['image']\n  File \"/usr/lib64/python2.6/json/__init__.py\", line 307, in loads\n    return _default_decoder.decode(s)\n  File \"/usr/lib64/python2.6/json/decoder.py\", line 319, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"/usr/lib64/python2.6/json/decoder.py\", line 338, in raw_decode\n    raise ValueError(\"No JSON object could be decoded\")\nValueError: No JSON object could be decoded\n\n\nThis is the python code I used:\n\n#!/usr/bin/python\n\nfrom glance.client import Client\n\nc = Client(\"lemon.colo.b1-systems.de\", 9191)\n\nprint c.get_images()\n\nmeta = {'name': 'Ubuntu 10.10 5G',\n        'type': 'machine',\n        'is_public': True,\n        'properties': {'distro': 'Ubuntu 10.10'}}\n\nnew_meta = c.add_image(meta, open('/root/ubuntu-10.10-server-uec-amd64.tar.gz'))\n\nprint 'Stored image. Got identifier: %s' % new_meta['id']", 
    "tags": [], 
    "importance": "High", 
    "heat": 8, 
    "link": "https://bugs.launchpad.net/nova/+bug/712782", 
    "owner": "https://api.launchpad.net/1.0/~devcamcar", 
    "id": 712782, 
    "index": 346, 
    "openned": "2011-02-03 22:03:00.824200+00:00", 
    "created": "2011-02-03 22:03:00.824200+00:00", 
    "title": "Nova EC2 /images  returned mapping has wrong keys for euca-describe-images", 
    "comments": [
        {
            "content": "I'm trying to put a new image like described in the documentation on http://glance.openstack.org/client.html.\n\nI started glance_registry on port 9191 and used swift as the default storage.\n\nNo I get the following error from glance_registry:\n\nDEBUG:routes.middleware:Match dict: {'action': u'create', 'controller': <glance.registry.server.ImageController object at 0xc50110>}\nTraceback (most recent call last):\n  File \"/usr/lib64/python2.6/site-packages/eventlet/wsgi.py\", line 336, in handle_one_response\n    result = self.application(self.environ, start_response)\n  File \"/usr/lib64/python2.6/site-packages/webob/dec.py\", line 159, in __call__\n    return resp(environ, start_response)\n  File \"/usr/lib64/python2.6/site-packages/routes/middleware.py\", line 131, in __call__\n    response = self.app(environ, start_response)\n  File \"/usr/lib64/python2.6/site-packages/webob/dec.py\", line 159, in __call__\n    return resp(environ, start_response)\n  File \"/usr/lib64/python2.6/site-packages/webob/dec.py\", line 147, in __call__\n    resp = self.call_func(req, *args, **self.kwargs)\n  File \"/usr/lib64/python2.6/site-packages/webob/dec.py\", line 208, in call_func\n    return self.func(req, *args, **kwargs)\n  File \"/usr/lib64/python2.6/site-packages/glance/common/wsgi.py\", line 239, in __call__\n    result = method(**arg_dict)\n  File \"/usr/lib64/python2.6/site-packages/glance/registry/server.py\", line 106, in create\n    image_data = json.loads(req.body)['image']\n  File \"/usr/lib64/python2.6/json/__init__.py\", line 307, in loads\n    return _default_decoder.decode(s)\n  File \"/usr/lib64/python2.6/json/decoder.py\", line 319, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"/usr/lib64/python2.6/json/decoder.py\", line 338, in raw_decode\n    raise ValueError(\"No JSON object could be decoded\")\nValueError: No JSON object could be decoded\n\n\nThis is the python code I used:\n\n#!/usr/bin/python\n\nfrom glance.client import Client\n\nc = Client(\"lemon.colo.b1-systems.de\", 9191)\n\nprint c.get_images()\n\nmeta = {'name': 'Ubuntu 10.10 5G',\n        'type': 'machine',\n        'is_public': True,\n        'properties': {'distro': 'Ubuntu 10.10'}}\n\nnew_meta = c.add_image(meta, open('/root/ubuntu-10.10-server-uec-amd64.tar.gz'))\n\nprint 'Stored image. Got identifier: %s' % new_meta['id']", 
            "date_created": "2011-02-03 22:03:00.824200+00:00", 
            "author": "https://api.launchpad.net/1.0/~berendt"
        }, 
        {
            "content": "Hi!\n\nCould you try using the bin/glance-upload tool and tell me if you get the same error?  Thanks!\n\nAlso, please specify what version of Glance you are using...\n\n-jay", 
            "date_created": "2011-02-03 22:34:11.364395+00:00", 
            "author": "https://api.launchpad.net/1.0/~jaypipes"
        }, 
        {
            "content": "I'm using Glance 0.1.7.\n\n/usr/bin/python /usr/bin/glance-api --verbose --api_host=FQDN --default_store=swift\ntcp        0      0 172.19.134.24:9292      0.0.0.0:*               LISTEN      0          1972934    18364/python\n\nglance-upload --host FQDN ../ubuntu-10.10-server-uec-amd64.tar.gz testing\n\nI tried glance-upload, now getting the following error:\n\nMatched POST /images\nDEBUG:routes.middleware:Matched POST /images\nRoute path: '/images', defaults: {'action': u'create', 'controller': <glance.server.Controller object at 0xbc9210>}\nDEBUG:routes.middleware:Route path: '/images', defaults: {'action': u'create', 'controller': <glance.server.Controller object at 0xbc9210>}\nMatch dict: {'action': u'create', 'controller': <glance.server.Controller object at 0xbc9210>}\nDEBUG:routes.middleware:Match dict: {'action': u'create', 'controller': <glance.server.Controller object at 0xbc9210>}\nTraceback (most recent call last):\n  File \"/usr/lib64/python2.6/site-packages/eventlet/wsgi.py\", line 336, in handle_one_response\n    result = self.application(self.environ, start_response)\n  File \"/usr/lib64/python2.6/site-packages/webob/dec.py\", line 159, in __call__\n    return resp(environ, start_response)\n  File \"/usr/lib64/python2.6/site-packages/routes/middleware.py\", line 131, in __call__\n    response = self.app(environ, start_response)\n  File \"/usr/lib64/python2.6/site-packages/webob/dec.py\", line 159, in __call__\n    return resp(environ, start_response)\n  File \"/usr/lib64/python2.6/site-packages/webob/dec.py\", line 147, in __call__\n    resp = self.call_func(req, *args, **self.kwargs)\n  File \"/usr/lib64/python2.6/site-packages/webob/dec.py\", line 208, in call_func\n    return self.func(req, *args, **kwargs)\n  File \"/usr/lib64/python2.6/site-packages/glance/common/wsgi.py\", line 239, in __call__\n    result = method(**arg_dict)\n  File \"/usr/lib64/python2.6/site-packages/glance/server.py\", line 325, in create\n    image_meta = self._reserve(req)\n  File \"/usr/lib64/python2.6/site-packages/glance/server.py\", line 186, in _reserve\n    image_meta = registry.add_image_metadata(image_meta)\n  File \"/usr/lib64/python2.6/site-packages/glance/registry/__init__.py\", line 54, in add_image_metadata\n    return c.add_image(image_data)\n  File \"/usr/lib64/python2.6/site-packages/glance/registry/client.py\", line 85, in add_image\n    res = self.do_request(\"POST\", \"/images\", body)\n  File \"/usr/lib64/python2.6/site-packages/glance/client.py\", line 162, in do_request\n    \"server. Got error: %s\" % e)\nClientConnectionError: Unable to connect to server. Got error: [Errno 111] ECONNREFUSED\n\nTraceback (most recent call last):\n  File \"/usr/bin/glance-upload\", line 85, in <module>\n    main()\n  File \"/usr/bin/glance-upload\", line 79, in main\n    new_meta = client.add_image(meta, f)\n  File \"/usr/lib64/python2.6/site-packages/glance/client.py\", line 259, in add_image\n    res = self.do_request(\"POST\", \"/images\", body, headers)\n  File \"/usr/lib64/python2.6/site-packages/glance/client.py\", line 158, in do_request\n    raise Exception(\"Unknown error occurred! %s\" % res.__dict__)\nException: Unknown error occurred! {'fp': <socket._fileobject object at 0x7f978ab4b410>, 'status': 500, 'will_close': True, 'chunk_left': 'UNKNOWN', 'length': 1696, 'strict': 0, 'reason': 'Internal Server Error', 'version': 11, 'debuglevel': 0, 'msg': <httplib.HTTPMessage instance at 0x7a5a70>, 'chunked': 0, '_method': 'POST'}\nXXX.XXX.XXX.XXX - - [04/Feb/2011 08:05:44] \"POST /images HTTP/1.1\" 500 1838 0.869227\n\n\n", 
            "date_created": "2011-02-04 07:09:49.946820+00:00", 
            "author": "https://api.launchpad.net/1.0/~berendt"
        }, 
        {
            "content": "On Fri, Feb 4, 2011 at 2:09 AM, Christian Berendt\n<email address hidden> wrote:\n> I'm using Glance 0.1.7.\n\nOK, thanks.\n\n> /usr/bin/python /usr/bin/glance-api --verbose --api_host=FQDN --default_store=swift\n> tcp \u00a0 \u00a0 \u00a0 \u00a00 \u00a0 \u00a0 \u00a00 172.19.134.24:9292 \u00a0 \u00a0 \u00a00.0.0.0:* \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 LISTEN \u00a0 \u00a0 \u00a00 \u00a0 \u00a0 \u00a0 \u00a0 \u00a01972934 \u00a0 \u00a018364/python\n\nNot related to this particular bug, but we have not completed the POST\nfunctionality for Swift. Aiming to get this done by 2011-02-21. Please\nsee https://bugs.launchpad.net/glance/+bug/713126.\n\nUntil the above bug is fixed, you may want to start your API node with\n--filesystem_store_datadir=/path/to/images instead of\n--default_store=swift.\n\nIn addition, Cactus has code committed that removes the use of GFlags\nand instead uses the standard optparse module, so when you test with\nCactus, please use --filesystem-store-datadir instead of\n--filesystem_store_datadir. Just a heads up...\n\n> glance-upload --host FQDN ../ubuntu-10.10-server-uec-amd64.tar.gz\n> testing\n>\n> I tried glance-upload, now getting the following error:\n>\n> Matched POST /images\n> DEBUG:routes.middleware:Matched POST /images\n> Route path: '/images', defaults: {'action': u'create', 'controller': <glance.server.Controller object at 0xbc9210>}\n> DEBUG:routes.middleware:Route path: '/images', defaults: {'action': u'create', 'controller': <glance.server.Controller object at 0xbc9210>}\n> Match dict: {'action': u'create', 'controller': <glance.server.Controller object at 0xbc9210>}\n> DEBUG:routes.middleware:Match dict: {'action': u'create', 'controller': <glance.server.Controller object at 0xbc9210>}\n> Traceback (most recent call last):\n> \u00a0File \"/usr/lib64/python2.6/site-packages/eventlet/wsgi.py\", line 336, in handle_one_response\n> \u00a0 \u00a0result = self.application(self.environ, start_response)\n> \u00a0File \"/usr/lib64/python2.6/site-packages/webob/dec.py\", line 159, in __call__\n> \u00a0 \u00a0return resp(environ, start_response)\n> \u00a0File \"/usr/lib64/python2.6/site-packages/routes/middleware.py\", line 131, in __call__\n> \u00a0 \u00a0response = self.app(environ, start_response)\n> \u00a0File \"/usr/lib64/python2.6/site-packages/webob/dec.py\", line 159, in __call__\n> \u00a0 \u00a0return resp(environ, start_response)\n> \u00a0File \"/usr/lib64/python2.6/site-packages/webob/dec.py\", line 147, in __call__\n> \u00a0 \u00a0resp = self.call_func(req, *args, **self.kwargs)\n> \u00a0File \"/usr/lib64/python2.6/site-packages/webob/dec.py\", line 208, in call_func\n> \u00a0 \u00a0return self.func(req, *args, **kwargs)\n> \u00a0File \"/usr/lib64/python2.6/site-packages/glance/common/wsgi.py\", line 239, in __call__\n> \u00a0 \u00a0result = method(**arg_dict)\n> \u00a0File \"/usr/lib64/python2.6/site-packages/glance/server.py\", line 325, in create\n> \u00a0 \u00a0image_meta = self._reserve(req)\n> \u00a0File \"/usr/lib64/python2.6/site-packages/glance/server.py\", line 186, in _reserve\n> \u00a0 \u00a0image_meta = registry.add_image_metadata(image_meta)\n> \u00a0File \"/usr/lib64/python2.6/site-packages/glance/registry/__init__.py\", line 54, in add_image_metadata\n> \u00a0 \u00a0return c.add_image(image_data)\n> \u00a0File \"/usr/lib64/python2.6/site-packages/glance/registry/client.py\", line 85, in add_image\n> \u00a0 \u00a0res = self.do_request(\"POST\", \"/images\", body)\n> \u00a0File \"/usr/lib64/python2.6/site-packages/glance/client.py\", line 162, in do_request\n> \u00a0 \u00a0\"server. Got error: %s\" % e)\n> ClientConnectionError: Unable to connect to server. Got error: [Errno 111] ECONNREFUSED\n\nHave you started a Glance registry server?\n\nYou can do so with glance-registry --sql_connection=CONNECTION_STRING\n\nwhere CONNECTION_STRING is an valid SQLAlchemy connection string. You\ncan try this for testing:\n\n--sql_connection=sqlite:///glance.sqlite\n\n-jay\n", 
            "date_created": "2011-02-04 14:36:48+00:00", 
            "author": "https://api.launchpad.net/1.0/~jaypipes"
        }, 
        {
            "content": "With --filesystem_storage_datadire=/path/ it's working fine, I can now upload and register a new image with glance-upload. I receive the follwing metadata:\n\nStored image. Got identifier: {u'created_at': u'2011-02-04T17:52:39.121125',\n u'deleted': False,\n u'deleted_at': None,\n u'id': 3,\n u'is_public': True,\n u'location': u'file:///srv/images/3',\n u'name': u'ttylinux',\n u'properties': {u'kernel_id': u'2', u'ramdisk_id': u'1'},\n u'size': 25165824,\n u'status': u'active',\n u'type': u'machine',\n u'updated_at': None}\n\nOk. Now I configured Nova in /etc/nova/nova.conf:\n\n--glance_host=API-HOST\n--glance_port=9292\n--image_service=nova.image.glance.GlanceImageService\n\nAnd run euca-describe-images:\n\n# euca-describe-images \nIMAGE   1       None    None    None    private                 ramdisk\nIMAGE   2       None    None    None    private                 kernel\nIMAGE   3       None    None    None    private                 machine\n\nI fetched the detailled information of all 3 images and all images are set to be public. Why does euca-describe-images show them as private and why don't they have the correct name and why there are missing some information?\n\n[{u'status': u'active', u'name': u'ttylinux-ramdisk', u'deleted': False, u'created_at': u'2011-02-04T17:51:39.410508', u'updated_at': u'2011-02-04T17:51:39.678406', u'properties': {}, u'location': u'file:///srv/images/1', u'is_public': True, u'deleted_at': None, u'type': u'ramdisk', u'id': 1, u'size': 5882349}, {u'status': u'active', u'name': u'ttylinux-vmlinuz', u'deleted': False, u'created_at': u'2011-02-04T17:52:10.732856', u'updated_at': u'2011-02-04T17:52:10.988391', u'properties': {}, u'location': u'file:///srv/images/2', u'is_public': True, u'deleted_at': None, u'type': u'kernel', u'id': 2, u'size': 4404752}, {u'status': u'active', u'name': u'ttylinux', u'deleted': False, u'created_at': u'2011-02-04T17:52:39.121125', u'updated_at': u'2011-02-04T17:52:39.449930', u'properties': {u'kernel_id': u'2', u'ramdisk_id': u'1'}, u'location': u'file:///srv/images/3', u'is_public': True, u'deleted_at': None, u'type': u'machine', u'id': 3, u'size': 25165824}]", 
            "date_created": "2011-02-04 18:05:11.318533+00:00", 
            "author": "https://api.launchpad.net/1.0/~berendt"
        }, 
        {
            "content": "\"I fetched the detailled information of all 3 images and all images are set to be public. Why does euca-describe-images show them as private and why don't they have the correct name and why there are missing some information?\"\n\n:( I'm not sure. euca-describe-images only works with S3-backed image stores. nova-objectstore is the only image service that speaks the S3 protocol. Glance does not. What is weird is why euca-describe-images is returning *any* images at all, since you set nova's image_service to Glance, and not S3 (which is nova-objectstore). Perhaps the nova-objectstore images bucket had some old data in it?\n\nI'm going to ask Devin to see if he thinks that might be the issue...", 
            "date_created": "2011-02-04 19:02:46.419143+00:00", 
            "author": "https://api.launchpad.net/1.0/~jaypipes"
        }, 
        {
            "content": "Hello again, Christian!\n\nIs it at all possible that the euca-describe-images call was picking up previous images that had been stored in nova-objectstore when FLAGS.image_service had not been changed?\n\n-jay", 
            "date_created": "2011-02-04 19:12:10.791912+00:00", 
            "author": "https://api.launchpad.net/1.0/~jaypipes"
        }, 
        {
            "content": "OK, Christian, we think we've figured it out...\n\nSwitching this to Nova.  Basically, here is the issue.\n\nIn euca-describe-images, the display_images() method looks like this:\n\n\timage_string = '%s\\t%s\\t%s\\t%s' % (image.id, image.location, image.ownerId, image.state)\n\tif image.is_public:\n  \t    image_string += '\\tpublic'\n\telse:\n\t    image_string += '\\tprivate'\n\nThe keys returned in the mapping from Nova are not matching with Boto/euca-describe-images is expecting, and therefore the fields appear as None and the is_public setting is not shown properly...\n\n-jay", 
            "date_created": "2011-02-04 19:25:14.775781+00:00", 
            "author": "https://api.launchpad.net/1.0/~jaypipes"
        }, 
        {
            "content": "This issues seems to be somewhat related to what I was hitting in #709355 where I was trying to use the Openstack API with the S3ImageService.\n\nThe issue is that GlanceImageService and S3ImageService return image dictionaries that have different keys. It would be nice to implement these interfaces such that we don't have to work around the differences between them inside the API controllers (Openstack and EC2).", 
            "date_created": "2011-02-07 21:24:38.262636+00:00", 
            "author": "https://api.launchpad.net/1.0/~dan-prince"
        }
    ], 
    "closed": "2011-04-15 08:33:13.469650+00:00"
}