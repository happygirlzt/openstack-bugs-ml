{
    "status": "Fix Released", 
    "last_updated": "2014-10-16 08:45:57.752801+00:00", 
    "description": "If FlatDhcpManager is used to create specific networks per tenant, a tenant\nwill get all networks by default instead of just his or her assigned network.\nDue to context elevation, the network manager doesn't properly ensure that the network is owned by the tenant before it creates a nic.\n\nnova network-create --interface eth0 --bridge-interface br100 --project-id <foo-tenant-id> --fixed-range 100.0.0.0/24 foonet\nnova network-create --interface eth1 --bridge-interface br200 --project-id <bar-tenant-id> --fixed-range 100.0.0.0/24 barnet\n\nA instance create inside the foo tenant will get an interface on both foonet and barnet.", 
    "tags": [], 
    "importance": "High", 
    "heat": 8, 
    "link": "https://bugs.launchpad.net/nova/+bug/1331092", 
    "owner": "https://api.launchpad.net/1.0/~sdague", 
    "id": 1331092, 
    "index": 1517, 
    "openned": "2014-06-17 17:25:41.595801+00:00", 
    "created": "2014-06-17 17:25:41.595801+00:00", 
    "title": "FlatDHCP manager will hand out networks from other tenants", 
    "comments": [
        {
            "content": "With Vlan Manager it is possible to connect to another tenant's network if the uuid is known. This is done by passing the uuid in along with requested networks. For example\n\nnova boot --flavor m1.tiny --image test-image --nic net-id=<otheruuid> foo\n\nThe network manager doesn't properly ensure that the network is owned by the tenant before it creates a nic.", 
            "date_created": "2014-06-17 17:25:41.595801+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "Fix + test for trunk", 
            "date_created": "2014-06-17 17:33:29.703293+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "So it turns out that we elevate context on the compute manager side as well. The above fix will raise an exception during validate, but we also should prevent the wrong networks from being returned during allocate as well. This fix adds the secondary safety fix as well.", 
            "date_created": "2014-06-17 21:25:20.075698+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "So it turns out this isn't really exploitable because the validate_networks call doesn't elevate the context so user requests for specific networks will fail. It only affects the default network selection in complex FlatDHCP setups. This is useful to fix as part of the multiple-networks blueprint however.", 
            "date_created": "2014-06-17 21:53:10.827364+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/100707", 
            "date_created": "2014-06-17 22:00:34.442372+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Removing OSSA task since we don't need an advisory (non-exploitable).", 
            "date_created": "2014-06-17 23:10:55.314158+00:00", 
            "author": "https://api.launchpad.net/1.0/~fungi"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/100707\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=d8c19e7823096bcdbc714e81fafabffe8a70a22e\nSubmitter: Jenkins\nBranch:    master\n\ncommit d8c19e7823096bcdbc714e81fafabffe8a70a22e\nAuthor: Vishvananda Ishaya <email address hidden>\nDate:   Tue Jun 17 10:31:36 2014 -0700\n\n    Fix ownership checking in get_networks_by_uuid\n    \n    The code was elevating context before requesting networks which\n    means that the project_only code is skipped and all networks\n    could be retrieved. This means that the default networks returned\n    by FlatDhcpManager could include networks that belong to other\n    projects.\n    \n    This fixes the issue by requesting the network without elevating\n    the context, re-enabling the proper project checking. It includes\n    tests to verify that the proper exception is raised when an\n    illegal network is requested and that the context has not been\n    elevated by the compute manager.\n    \n    Partially-implements blueprint better-support-for-multiple-networks\n    \n    Change-Id: Icd3bc521003725cc3da9875dfd6532d5c5524f43\n    Closes-Bug: 1331092\n", 
            "date_created": "2014-08-04 08:39:04.295205+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2014-09-05 09:47:59.776974+00:00"
}