{
    "status": "Opinion", 
    "last_updated": "2017-06-27 19:26:56.957187+00:00", 
    "description": "While spawning a new VM, Nova waits for event from Neutron that its port is configured. In some cases Neutron event is lost (e.g. RabbitMQ issue) and if vif_plugging_is_fatal=True (it is by default) the instance is set to ERROR state. It happens even if in fact port is ACTIVE on Neutron side and all should work fine.\n\nThis workflow could be improved by calling Neutron before failing.\nNova could check real state of each port in Neutron just before setting the instance in ERROR (if at least one port is not ACTIVE).", 
    "tags": [
        "neutron", 
        "notification", 
        "plugging", 
        "vif"
    ], 
    "importance": "Wishlist", 
    "heat": 8, 
    "link": "https://bugs.launchpad.net/nova/+bug/1627044", 
    "owner": "None", 
    "id": 1627044, 
    "index": 3095, 
    "openned": "2016-09-23 14:12:55.532577+00:00", 
    "created": "2016-09-23 14:12:55.532577+00:00", 
    "title": "Last chance call to neutron if VIF plugin notification is lost", 
    "comments": [
        {
            "content": "If vif_plugging_is_fatal is set to True (by default) Nova waits to resume new instance while spawning it. In some cases Neutron notification is lost (e.g. Rabbitmq issue) and a instance is set to ERROR state. It happens even if in fact port is ACTIVE on Neutron side and all should work fine.\n\nThis patch improves this workflow. Nova will check real state of each port in Neutron just before setting the instance in ERROR (if at least one port is not ACTIVE).", 
            "date_created": "2016-09-23 14:12:55.532577+00:00", 
            "author": "https://api.launchpad.net/1.0/~adam-kijak"
        }, 
        {
            "content": "Seems like a decent idea worth pushing a patch to see how this looks, but it could get complicated based on how this code is plumbed. It's really the spawn method in the virt driver that's waiting for the event, not the compute manager, and the virt driver doesn't have a handle to the network API to make the port GET call to neutron to check this. I'm sure something could be worked into the wait code for a final callback method to use if provided and a timeout is reached.", 
            "date_created": "2016-09-24 00:45:34.251479+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/378278", 
            "date_created": "2016-09-28 06:42:01.811822+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Change abandoned by Matt Riedemann (<email address hidden>) on branch: master\nReview: https://review.openstack.org/378278", 
            "date_created": "2017-03-24 21:15:40.697911+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "There are no currently open reviews on this bug, changing the status back to the previous state and unassigning. If there are active reviews related to this bug, please include links in comments. ", 
            "date_created": "2017-06-27 19:26:54.235127+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }
    ], 
    "closed": "2017-06-27 19:26:52.148474+00:00"
}