{
    "status": "Fix Released", 
    "last_updated": "2017-09-25 21:49:18.483886+00:00", 
    "description": "\nnova master as of 20170831\n\nThe _set_allocations method used to write allocations to the placement API will raise a 400 when a resource class results in a NotFound exception. We want that 400. The problem is that the message associated with the error users the resource provider uuid from whatever resource provider was the last one in a loop, not the one that creates the error. See:\n\nhttps://github.com/openstack/nova/blob/master/nova/api/openstack/placement/handlers/allocation.py#L231-L234\n\nand the loop prior.\n\nThis is not a huge deal because it's unlikely that people are inspecting error responses all that much, but it would be nice to fix.", 
    "tags": [
        "note-to-self", 
        "placement"
    ], 
    "importance": "Low", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1714402", 
    "owner": "https://api.launchpad.net/1.0/~cdent", 
    "id": 1714402, 
    "index": 2228, 
    "openned": "2017-09-01 02:51:00.314398+00:00", 
    "created": "2017-09-01 02:51:00.314398+00:00", 
    "title": "When setting an allocation with multiple resource providers and one of them does not exist the error message can be wrong", 
    "comments": [
        {
            "content": "\nnova master as of 20170831\n\nThe _set_allocations method used to write allocations to the placement API will raise a 400 when a resource class results in a NotFound exception. We want that 400. The problem is that the message associated with the error users the resource provider uuid from whatever resource provider was the last one in a loop, not the one that creates the error. See:\n\nhttps://github.com/openstack/nova/blob/master/nova/api/openstack/placement/handlers/allocation.py#L231-L234\n\nand the loop prior.\n\nThis is not a huge deal because it's unlikely that people are inspecting error responses all that much, but it would be nice to fix.", 
            "date_created": "2017-09-01 02:51:00.314398+00:00", 
            "author": "https://api.launchpad.net/1.0/~cdent"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/502205", 
            "date_created": "2017-09-09 01:50:22.905056+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/502205\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=ad2c7a3c80edc78945b295c2dafe5681004a66fd\nSubmitter: Jenkins\nBranch:    master\n\ncommit ad2c7a3c80edc78945b295c2dafe5681004a66fd\nAuthor: Chris Dent <email address hidden>\nDate:   Sat Sep 9 02:47:30 2017 +0100\n\n    [placement] correct error on bad resource class in allocation\n    \n    A 400 is returned when making an allocation with a resource class that\n    does not exist, however the error message refers to whatever the most\n    recent resource provider uuid was rather than the one that was given\n    the bad resource class. Since the exception happens outside the loop\n    that creates the allocations we don't have the association to resource\n    provider uuid, but we do know which consumer uuid, so report that\n    instead.\n    \n    Change-Id: I81dc6b566c6cca0b7d2ac267c3e632c8ae8cfb47\n    Closes-Bug: #1714402\n", 
            "date_created": "2017-09-25 21:49:17.278728+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2017-09-25 21:49:12.543717+00:00"
}