{
    "status": "Fix Released", 
    "last_updated": "2011-09-22 13:26:39.428821+00:00", 
    "description": "Using 2011.2~bzr971.\n\nWhen running nova-compute with connection_type=xenapi I get the following exception when when nova-compute tries to stream data to the VBD:\n\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/compute/manager.py\", line 234, in run_instance\n(nova.compute.manager): TRACE:     self.driver.spawn(instance_ref)\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/virt/xenapi_conn.py\", line 188, in spawn\n(nova.compute.manager): TRACE:     self._vmops.spawn(instance)\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/virt/xenapi/vmops.py\", line 117, in spawn\n(nova.compute.manager): TRACE:     vdi_uuid = self._create_disk(instance)\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/virt/xenapi/vmops.py\", line 113, in _create_disk\n(nova.compute.manager): TRACE:     instance.image_id, user, project, disk_image_type)\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/virt/xenapi/vm_utils.py\", line 386, in fetch_image\n(nova.compute.manager): TRACE:     access, image_type)\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/virt/xenapi/vm_utils.py\", line 541, in _fetch_image_glance\n(nova.compute.manager): TRACE:     session, instance_id, image, access, image_type)\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/virt/xenapi/vm_utils.py\", line 456, in _fetch_image_glance_disk\n(nova.compute.manager): TRACE:     lambda dev:\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/virt/xenapi/vm_utils.py\", line 944, in with_vdi_attached_here\n(nova.compute.manager): TRACE:     return f(dev)\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/virt/xenapi/vm_utils.py\", line 458, in <lambda>\n(nova.compute.manager): TRACE:     virtual_size, image_file))\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/virt/xenapi/vm_utils.py\", line 1017, in _stream_disk\n(nova.compute.manager): TRACE:     with open('/dev/%s' % dev, 'wb') as f:\n(nova.compute.manager): TRACE: IOError: [Errno 13] Permission denied: '/dev/sdb'\n(nova.compute.manager): TRACE: \n\n----\n\nCouple of ways to go about fixing this. Adding a 'sudo chown' to give nova permission to write to the device seems like the simplest way ((especially since nova already has sudo privs). We could also mess with /etc/udev/ and have the devices show up to a special group that the nova user belongs to and thus has write access. Given that we remap the devices for Maverick support already the sudo looks more appealing for now.", 
    "tags": [], 
    "importance": "Medium", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/757868", 
    "owner": "https://api.launchpad.net/1.0/~dan-prince", 
    "id": 757868, 
    "index": 2378, 
    "openned": "2011-04-11 18:28:34.639191+00:00", 
    "created": "2011-04-11 18:28:34.639191+00:00", 
    "title": "nova-compute requires root /w connection_type=xenapi", 
    "comments": [
        {
            "content": "Using 2011.2~bzr971.\n\nWhen running nova-compute with connection_type=xenapi I get the following exception when when nova-compute tries to stream data to the VBD:\n\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/compute/manager.py\", line 234, in run_instance\n(nova.compute.manager): TRACE:     self.driver.spawn(instance_ref)\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/virt/xenapi_conn.py\", line 188, in spawn\n(nova.compute.manager): TRACE:     self._vmops.spawn(instance)\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/virt/xenapi/vmops.py\", line 117, in spawn\n(nova.compute.manager): TRACE:     vdi_uuid = self._create_disk(instance)\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/virt/xenapi/vmops.py\", line 113, in _create_disk\n(nova.compute.manager): TRACE:     instance.image_id, user, project, disk_image_type)\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/virt/xenapi/vm_utils.py\", line 386, in fetch_image\n(nova.compute.manager): TRACE:     access, image_type)\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/virt/xenapi/vm_utils.py\", line 541, in _fetch_image_glance\n(nova.compute.manager): TRACE:     session, instance_id, image, access, image_type)\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/virt/xenapi/vm_utils.py\", line 456, in _fetch_image_glance_disk\n(nova.compute.manager): TRACE:     lambda dev:\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/virt/xenapi/vm_utils.py\", line 944, in with_vdi_attached_here\n(nova.compute.manager): TRACE:     return f(dev)\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/virt/xenapi/vm_utils.py\", line 458, in <lambda>\n(nova.compute.manager): TRACE:     virtual_size, image_file))\n(nova.compute.manager): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/virt/xenapi/vm_utils.py\", line 1017, in _stream_disk\n(nova.compute.manager): TRACE:     with open('/dev/%s' % dev, 'wb') as f:\n(nova.compute.manager): TRACE: IOError: [Errno 13] Permission denied: '/dev/sdb'\n(nova.compute.manager): TRACE: \n\n----\n\nCouple of ways to go about fixing this. Adding a 'sudo chown' to give nova permission to write to the device seems like the simplest way ((especially since nova already has sudo privs). We could also mess with /etc/udev/ and have the devices show up to a special group that the nova user belongs to and thus has write access. Given that we remap the devices for Maverick support already the sudo looks more appealing for now.", 
            "date_created": "2011-04-11 18:28:34.639191+00:00", 
            "author": "https://api.launchpad.net/1.0/~dan-prince"
        }
    ], 
    "closed": "2011-09-22 13:26:37.866020+00:00"
}