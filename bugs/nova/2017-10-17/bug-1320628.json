{
    "status": "Fix Released", 
    "last_updated": "2014-10-16 08:37:29.594301+00:00", 
    "description": "http://logs.openstack.org/52/73152/8/check/check-tempest-dsvm-full/9352c04/console.html.gz#_2014-05-13_18_12_38_547\n\nAt client side the only way to know an instance action is doable is to making sure the status  is a permanent status like ACTIVE or SHUTOFF and no action in progress, so the task-state is None.\n\nIn the above linked case tempest stopped the instance and the instance reached the  \"SHUTOFF/None\".\n'State transition \"ACTIVE/powering-off\" ==> \"SHUTOFF/None\" after 10 second wait'\n\nCool, at this time we can start the instance right ? No, other attribute needs to be checked.\n\nThe start attempt was rewarded with 409 :\n\u00a0u'Instance 7bc9de3b-1960-476f-b964-2ab2da986ec7 in task_state powering-off. Cannot start while the instance is in this  state'\n\nThe below line indicates the  task state, silently moved back to \"SHUTOFF/powering-off\"  , before the 'start' attempt.\n\n2014-05-13 18:09:13,610 State transition \"SHUTOFF/powering-off\" ==> \"SHUTOFF/None\" after 1 second wait\n\nPlease do not set the 'None' task-state when the 'powering-off' is not finished.", 
    "tags": [
        "compute"
    ], 
    "importance": "High", 
    "heat": 10, 
    "link": "https://bugs.launchpad.net/nova/+bug/1320628", 
    "owner": "https://api.launchpad.net/1.0/~melwitt", 
    "id": 1320628, 
    "index": 1493, 
    "openned": "2014-05-18 13:08:23.883791+00:00", 
    "created": "2014-05-18 13:08:23.883791+00:00", 
    "title": "Double powering-off state confuses the clients and causes gate failure", 
    "comments": [
        {
            "content": "http://logs.openstack.org/52/73152/8/check/check-tempest-dsvm-full/9352c04/console.html.gz#_2014-05-13_18_12_38_547\n\nAt client side the only way to know an instance action is doable is to making sure the status  is a permanent status like ACTIVE or SHUTOFF and no action in progress, so the task-state is None.\n\nIn the above linked case tempest stopped the instance and the instance reached the  \"SHUTOFF/None\".\n'State transition \"ACTIVE/powering-off\" ==> \"SHUTOFF/None\" after 10 second wait'\n\nCool, at this time we can start the instance right ? No, other attribute needs to be checked. \n\nThe start attempt was rewarded with 409 :\n u'Instance 7bc9de3b-1960-476f-b964-2ab2da986ec7 in task_state powering-off. Cannot start while the instance is in this  state\n\nThe below line indicates the  task state, silently moved back to \"SHUTOFF/powering-off\"  , before the 'start' attempt.\n\n2014-05-13 18:09:13,610 State transition \"SHUTOFF/powering-off\" ==> \"SHUTOFF/None\" after 1 second wait\n\nPlease do not set the 'None' task-state when the 'powering-off' is not finished.", 
            "date_created": "2014-05-18 13:08:23.883791+00:00", 
            "author": "https://api.launchpad.net/1.0/~afazekas"
        }, 
        {
            "content": "Similar issue can happen at \"/opt/stack/new/tempest/tempest/api/compute/images/test_list_image_filters.py\", line 57, in setUpClass.\n\nThis test does not stops the server, but it creates multiple snapshot.", 
            "date_created": "2014-06-26 19:32:53.328095+00:00", 
            "author": "https://api.launchpad.net/1.0/~afazekas"
        }, 
        {
            "content": "It seems the problem is a race with _sync_instance_power_state.\n\nIn rebuild_instance, after the rebuild is finished, if the original vm_state was STOPPED, it sets task_state to POWERING_OFF and calls stop_instance.\n\nIn the nova-compute log I see the message from _sync_instance_power_state, \"Instance is not stopped. Calling the stop API.\" [1] It observed vm_state STOPPED and power state not off from the driver, and called compute api force_stop [2] which sets task_state to POWERING_OFF again and stops it again.\n\n[1] http://logs.openstack.org/52/73152/8/check/check-tempest-dsvm-full/9352c04/logs/screen-n-cpu.txt.gz?level=DEBUG#_2014-05-13_18_09_11_515", 
            "date_created": "2014-06-27 05:32:40.744150+00:00", 
            "author": "https://api.launchpad.net/1.0/~melwitt"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/103174", 
            "date_created": "2014-06-27 15:49:37.983833+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Increasing this to high because it affects the gate.", 
            "date_created": "2014-07-04 02:15:26.843134+00:00", 
            "author": "https://api.launchpad.net/1.0/~melwitt"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/103174\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=cc5388bbe81aba635fb757e202d860aeed98f3e8\nSubmitter: Jenkins\nBranch:    master\n\ncommit cc5388bbe81aba635fb757e202d860aeed98f3e8\nAuthor: melanie witt <email address hidden>\nDate:   Fri Jun 27 15:45:15 2014 +0000\n\n    synchronize 'stop' and power state periodic task\n    \n    This change adds the synchronized decorator to the stop function and\n    _sync_instance_power_state to address a race condition when powering\n    off and updating the database for an instance. The power off and\n    database update should be protected so the periodic task sees a\n    consistent view when it checks power state from the driver and\n    VM state from the database in order to take action.\n    \n    In the bug, a stopped instance is in the middle of being rebuilt,\n    and while it is in the process of being returned to the original\n    STOPPED state, _sync_power_states sees the combination of the\n    power state from the driver being 'on' and the vm_state from\n    the database as being STOPPED. This patch aims to ensure power\n    'off' and vm_state set to STOPPED happen atomically in the\n    stop_instance function. Thus, the read by _sync_power_states\n    must also be synced on the instance UUID.\n    \n    Change-Id: I8aa83ab8dca35878cf792ae2d46feaa9912ffd38\n    Closes-Bug: #1320628\n", 
            "date_created": "2014-07-12 23:42:31.848442+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Sadly it looks like we actually made the UnexpectedTaskStateError message in the logs worse after the sync patch merged on 7/14:\n\nhttp://logstash.openstack.org/#eyJzZWFyY2giOiJtZXNzYWdlOlwiVW5leHBlY3RlZFRhc2tTdGF0ZUVycm9yOiBVbmV4cGVjdGVkIHRhc2sgc3RhdGU6IGV4cGVjdGluZyAodSdwb3dlcmluZy1vZmYnLCkgYnV0IHRoZSBhY3R1YWwgc3RhdGUgaXMgTm9uZVwiIEFORCB0YWdzOlwic2NyZWVuLW4tY3B1LnR4dFwiIiwiZmllbGRzIjpbXSwib2Zmc2V0IjowLCJ0aW1lZnJhbWUiOiJjdXN0b20iLCJncmFwaG1vZGUiOiJjb3VudCIsInRpbWUiOnsiZnJvbSI6IjIwMTQtMDctMDRUMTM6MDY6MzcrMDA6MDAiLCJ0byI6IjIwMTQtMDctMThUMTM6MDY6MzcrMDA6MDAiLCJ1c2VyX2ludGVydmFsIjoiMCJ9LCJzdGFtcCI6MTQwNTY4ODg4MTUwMn0=\n\nMaybe the sync patch just syncs it in such a way that it makes the race less racey.", 
            "date_created": "2014-07-18 13:11:32.203148+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Looks like this is contributing to bug 1266611 also.", 
            "date_created": "2014-07-18 13:42:31.005787+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Related fix proposed to branch: master\nReview: https://review.openstack.org/108014", 
            "date_created": "2014-07-18 13:59:03.599836+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This patch fixes the described locking condition, but introduces a locking bug:\n\nhttps://bugs.launchpad.net/nova/+bug/1363231", 
            "date_created": "2014-08-29 19:47:16.952965+00:00", 
            "author": "https://api.launchpad.net/1.0/~belliott"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/108014\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=aa1792eb4c1d10e9a192142ce7e20d37871d916a\nSubmitter: Jenkins\nBranch:    master\n\ncommit aa1792eb4c1d10e9a192142ce7e20d37871d916a\nAuthor: Matt Riedemann <email address hidden>\nDate:   Tue Sep 2 12:11:55 2014 -0700\n\n    Stop stack tracing when trying to auto-stop a stopped instance\n    \n    Commit cc5388bbe81aba635fb757e202d860aeed98f3e8 added locks to\n    stop_instance and the _sync_power_states periodic task to try and fix a\n    race between stopping the instance via the API where the task_state is\n    set to powering-off, and the periodic task seeing the instance\n    power_state as shutdown in _sync_instance_power_state and calling the\n    stop API again, at which point the task_state is already None from the\n    first stop API call and we get an UnexpectedTaskStateError.\n    \n    The handle_lifecycle_event method is getting callbacks from the libvirt\n    driver on state changes on the VM and calling the\n    _sync_instance_power_state method which may try to stop the instance\n    asynchronously, and lead to UnexpectedTaskStateError if the instance is\n    already stopped by the time it gets the lock and the task_state has\n    changed.\n    \n    Attempting to lock in handle_lifecycle_event just moves the race around\n    so this change adds logic to stop_instance such that if the instance\n    says it's active but the virt driver says it's not running, then we add\n    None to the expected_task_state so we don't stacktrace on\n    instance.save().\n    \n    An alternative and/or additional change to this would be doing a call\n    rather than a cast when _sync_instance_power_state calls the stop API\n    but in some previous testing it doesn't appear to make a significant\n    difference in the race found when we hit the stop_instance method.\n    \n    Adds a bunch of debug logging since this code is inherently racey and\n    is needed when looking at failures around these operations.\n    \n    Closes-Bug: #1339235\n    Closes-Bug: #1266611\n    Related-Bug: #1320628\n    \n    Change-Id: Ib495a5ab15de88051c5fa7abfb58a5445691dcad\n", 
            "date_created": "2014-09-12 20:14:21.636556+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2014-07-23 14:53:51.729912+00:00"
}