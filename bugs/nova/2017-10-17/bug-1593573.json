{
    "status": "Expired", 
    "last_updated": "2017-09-02 04:17:39.508683+00:00", 
    "description": "With OpenStack Mitaka 14.0 release:\n\nRunning list server, images and flavor with http://[host-ip]/identity/v2.0 token has no issue but when switching to http://[host-ip]/identity/v3, error is returned for image listing and flavor listing but server listing is working fine.\n\nI did:\n\n(A) Obtaining a token from http://[host-ip]/identity/v2.0, token [203f7cfba41645cabddf06ea644dcc66]\n\n(B) Obtaining a token from http://[host-ip]/identity/v3, token [9cb08a8f126844318e7052ab7f62f14f]\n\nAnd by using the tokens, I did:\n\na) With token from v2.0 [203f7cfba41645cabddf06ea644dcc66]\n\n- Get server listing\n\ncurl --request GET 'http://[host-ip]:8774/v2.1/servers' --header 'X-Auth-Token:203f7cfba41645cabddf06ea644dcc66'\n\nOutcome: Get server listing with no error. Result in JSON is returned.\n\n-  Get image listing\n\ncurl --request GET 'http://[host-ip]:8774/v2.1/images' --header 'X-Auth-Token:203f7cfba41645cabddf06ea644dcc66'\n\nOutcome: Get image listing with no error. Result in JSON is returned.\n\n- Get flavor listing\n\ncurl --request GET 'http://[host-ip]:8774/v2.1/flavors' --header 'X-Auth-Token:203f7cfba41645cabddf06ea644dcc66'\n\nOutcome: Get flavor listing with no error. Result in JSON is returned.\n\nAll above are working perfectly with v.20 token.\n\nb) With token from v3 [9cb08a8f126844318e7052ab7f62f14f]\n\n- Get server listing\ncurl --request GET 'http://[host-ip]:8774/v2.1/servers' --header 'X-Auth-Token:9cb08a8f126844318e7052ab7f62f14f'\n\nOutcome: Get server listing with no error. Result in JSON is returned.\n\n-  Get image listing\n\ncurl --request GET 'http://[host-ip]:8774/v2.1/images' --header 'X-Auth-Token:9cb08a8f126844318e7052ab7f62f14f'\n\n{\n\u00a0\"computeFault\": {\n\u00a0\u00a0\"message\": \"Unexpected API Error. Please report this at http://bugs.launchpad.net/nova/ and attach the Nova API log if possible.\\n<type 'exceptions.TypeError'>\",\n\u00a0\u00a0\"code\": 500\n\u00a0}\n}\n\nOutcome: Error\n\n- Get flavor listing\n\ncurl --request GET 'http://[host-ip]:8774/v2.1/flavors' --header 'X-Auth-Token:9cb08a8f126844318e7052ab7f62f14f'\n\n{\n\u00a0\"computeFault\": {\n\u00a0\u00a0\"message\": \"Unexpected API Error. Please report this at http://bugs.launchpad.net/nova/ and attach the Nova API log if possible.\\n<type 'exceptions.TypeError'>\",\n\u00a0\u00a0\"code\": 500\n\u00a0}\n}\n\nOutcome: Error", 
    "tags": [
        "api"
    ], 
    "importance": "Undecided", 
    "heat": 8, 
    "link": "https://bugs.launchpad.net/nova/+bug/1593573", 
    "owner": "None", 
    "id": 1593573, 
    "index": 7550, 
    "openned": "2016-06-17 06:19:23.636703+00:00", 
    "created": "2016-06-17 06:19:23.636703+00:00", 
    "title": "flavor image listing failed while calling Nova API with token from http://[host-ip]/identity/v3 ", 
    "comments": [
        {
            "content": "With OpenStack Mitaka 14.0 release:\n\nRunning list server, images and flavor with http://[host-ip]/identity/v2.0 token has no issue but when switching to http://[host-ip]/identity/v3, error is returned for image listing and flavor listing but server listing is working fine.\n\nI did:\n\n(A) Obtaining a token from http://[host-ip]/identity/v2.0, token [203f7cfba41645cabddf06ea644dcc66]\n\n(B) Obtaining a token from http://[host-ip]/identity/v3, token [9cb08a8f126844318e7052ab7f62f14f]\n\nAnd by using the tokens, I did:\n\na) With token from v2.0 [203f7cfba41645cabddf06ea644dcc66]\n\n- Get server listing \n\ncurl --request GET 'http://[host-ip]:8774/v2.1/servers' --header 'X-Auth-Token:203f7cfba41645cabddf06ea644dcc66'\n\nOutcome: Get server listing with no error. Result in JSON ia returned.\n\n\n-  Get image listing\n\ncurl --request GET 'http://[host-ip]:8774/v2.1/images' --header 'X-Auth-Token:203f7cfba41645cabddf06ea644dcc66'\n\nOutcome: Get image listing with no error. Result in JSON ia returned.\n\n\n- Get flavor listing\n\ncurl --request GET 'http://[host-ip]:8774/v2.1/flavors' --header 'X-Auth-Token:203f7cfba41645cabddf06ea644dcc66'\n\nOutcome: Get flavor listing with no error. Result in JSON ia returned.\n\n\nAll above are working perfectly with v.20 token.\n\n\n\nb) With token from v3 [9cb08a8f126844318e7052ab7f62f14f]\n\n- Get server listing\ncurl --request GET 'http://[host-ip]:8774/v2.1/servers' --header 'X-Auth-Token:9cb08a8f126844318e7052ab7f62f14f'\n\nOutcome: Get server listing with no error. Result in JSON ia returned.\n\n\n-  Get image listing\n\ncurl --request GET 'http://[host-ip]:8774/v2.1/images' --header 'X-Auth-Token:9cb08a8f126844318e7052ab7f62f14f'\n\n{\n\t\"computeFault\": {\n\t\t\"message\": \"Unexpected API Error. Please report this at http://bugs.launchpad.net/nova/ and attach the Nova API log if possible.\\n<type 'exceptions.TypeError'>\",\n\t\t\"code\": 500\n\t}\n}\n\nOutcome: Error\n\n\n- Get flavor listing\n\ncurl --request GET 'http://[host-ip]:8774/v2.1/flavors' --header 'X-Auth-Token:9cb08a8f126844318e7052ab7f62f14f'\n\n{\n\t\"computeFault\": {\n\t\t\"message\": \"Unexpected API Error. Please report this at http://bugs.launchpad.net/nova/ and attach the Nova API log if possible.\\n<type 'exceptions.TypeError'>\",\n\t\t\"code\": 500\n\t}\n}\n\nOutcome: Error", 
            "date_created": "2016-06-17 06:19:23.636703+00:00", 
            "author": "https://api.launchpad.net/1.0/~chee-leong-dew"
        }, 
        {
            "content": "", 
            "date_created": "2016-06-17 06:19:23.636703+00:00", 
            "author": "https://api.launchpad.net/1.0/~chee-leong-dew"
        }, 
        {
            "content": "Code review: https://review.openstack.org/#/c/363530/", 
            "date_created": "2016-08-31 09:37:42.190455+00:00", 
            "author": "https://api.launchpad.net/1.0/~viswesn"
        }, 
        {
            "content": "Is this still reproducable? I feel like we definitely should always have this value set in our context, and am pretty confused that it is not.", 
            "date_created": "2016-09-20 15:15:42.874241+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "this is not an issue for me, tried this with newton at around the RC period:\n\n$ openstack --version\nopenstack 3.2.0\n\n$ env | grep OS\nOS_USER_DOMAIN_NAME=Default\nOS_PROJECT_NAME=admin\nOS_IDENTITY_API_VERSION=3\nOS_PASSWORD=openstack\nOS_AUTH_URL=http://172.16.240.200:5000/v3\nOS_USERNAME=admin\nOS_TENANT_NAME=admin\nOS_PROJECT_DOMAIN_NAME=Default\n\n$ openstack token issue\n+------------+----------------------------------+\n| Field      | Value                            |\n+------------+----------------------------------+\n| expires    | 2016-09-20 16:44:03+00:00        |\n| id         | 71258fa66cb14080acf11018bf26adcc |\n| project_id | 28b6647498c643f8ac4edcb21e3ddee7 |\n| user_id    | 2d08fb5bee33448caa6021a18060744c |\n+------------+----------------------------------+\n\n$ curl --request GET 'http://172.16.240.200:8774/v2.1/flavors' --header 'X-Auth-Token:71258fa66cb14080acf11018bf26adcc'\n{\"flavors\": [{\"id\": \"1\", \"links\": [{\"href\": \"http://172.16.240.200:8774/v2.1/flavors/1\", \"rel\": \"self\"}, {\"href\": \"http://172.16.240.200:8774/flavors/1\", \"rel\": \"bookmark\"}], \"name\": \"m1.tiny\"}, {\"id\": \"2\", \"links\": [{\"href\": \"http://172.16.240.200:8774/v2.1/flavors/2\", \"rel\": \"self\"}, {\"href\": \"http://172.16.240.200:8774/flavors/2\", \"rel\": \"bookmark\"}], \"name\": \"m1.small\"}, {\"id\": \"3\", \"links\": [{\"href\": \"http://172.16.240.200:8774/v2.1/flavors/3\", \"rel\": \"self\"}, {\"href\": \"http://172.16.240.200:8774/flavors/3\", \"rel\": \"bookmark\"}], \"name\": \"m1.medium\"}, {\"id\": \"4\", \"links\": [{\"href\": \"http://172.16.240.200:8774/v2.1/flavors/4\", \"rel\": \"self\"}, {\"href\": \"http://172.16.240.200:8774/flavors/4\", \"rel\": \"bookmark\"}], \"name\": \"m1.large\"}, {\"id\": \"5\", \"links\": [{\"href\": \"http://172.16.240.200:8774/v2.1/flavors/5\", \"rel\": \"self\"}, {\"href\": \"http://172.16.240.200:8774/flavors/5\", \"rel\": \"bookmark\"}], \"name\": \"m1.xlarge\"}, {\"id\": \"c1\", \"links\": [{\"href\": \"http://172.16.240.200:8774/v2.1/flavors/c1\", \"rel\": \"self\"}, {\"href\": \"http://172.16.240.200:8774/flavors/c1\", \"rel\": \"bookmark\"}], \"name\": \"cirros256\"}, {\"id\": \"d1\", \"links\": [{\"href\": \"http://172.16.240.200:8774/v2.1/flavors/d1\", \"rel\": \"self\"}, {\"href\": \"http://172.16.240.200:8774/flavors/d1\", \"rel\": \"bookmark\"}], \"name\": \"ds512M\"}, {\"id\": \"d2\", \"links\": [{\"href\": \"http://172.16.240.200:8774/v2.1/flavors/d2\", \"rel\": \"self\"}, {\"href\": \"http://172.16.240.200:8774/flavors/d2\", \"rel\": \"bookmark\"}], \"name\": \"ds1G\"}, {\"id\": \"d3\", \"links\": [{\"href\": \"http://172.16.240.200:8774/v2.1/flavors/d3\", \"rel\": \"self\"}, {\"href\": \"http://172.16.240.200:8774/flavors/d3\", \"rel\": \"bookmark\"}], \"name\": \"ds2G\"}, {\"id\": \"d4\", \"links\": [{\"href\": \"http://172.16.240.200:8774/v2.1/flavors/d4\", \"rel\": \"self\"}, {\"href\": \"http://172.16.240.200:8774/flavors/d4\", \"rel\": \"bookmark\"}], \"name\": \"ds4G\"}]}\n\n$ curl --request GET 'http://172.16.240.200:8774/v2.1/images' --header 'X-Auth-Token:71258fa66cb14080acf11018bf26adcc'\n{\"images\": [{\"id\": \"ec9666e8-9acc-4995-9586-4bcaaaf18f8f\", \"links\": [{\"href\": \"http://172.16.240.200:8774/v2.1/images/ec9666e8-9acc-4995-9586-4bcaaaf18f8f\", \"rel\": \"self\"}, {\"href\": \"http://172.16.240.200:8774/images/ec9666e8-9acc-4995-9586-4bcaaaf18f8f\", \"rel\": \"bookmark\"}, {\"href\": \"http://172.16.240.200:9292/images/ec9666e8-9acc-4995-9586-4bcaaaf18f8f\", \"type\": \"application/vnd.openstack.image\", \"rel\": \"alternate\"}], \"name\": \"cirros-0.3.4-x86_64-uec\"}, {\"id\": \"92663e46-2763-48f0-8666-a57722c29311\", \"links\": [{\"href\": \"http://172.16.240.200:8774/v2.1/images/92663e46-2763-48f0-8666-a57722c29311\", \"rel\": \"self\"}, {\"href\": \"http://172.16.240.200:8774/images/92663e46-2763-48f0-8666-a57722c29311\", \"rel\": \"bookmark\"}, {\"href\": \"http://172.16.240.200:9292/images/92663e46-2763-48f0-8666-a57722c29311\", \"type\": \"application/vnd.openstack.image\", \"rel\": \"alternate\"}], \"name\": \"cirros-0.3.4-x86_64-uec-ramdisk\"}, {\"id\": \"c60ce54e-3dd1-4520-984c-f88abebfc59a\", \"links\": [{\"href\": \"http://172.16.240.200:8774/v2.1/images/c60ce54e-3dd1-4520-984c-f88abebfc59a\", \"rel\": \"self\"}, {\"href\": \"http://172.16.240.200:8774/images/c60ce54e-3dd1-4520-984c-f88abebfc59a\", \"rel\": \"bookmark\"}, {\"href\": \"http://172.16.240.200:9292/images/c60ce54e-3dd1-4520-984c-f88abebfc59a\", \"type\": \"application/vnd.openstack.image\", \"rel\": \"alternate\"}], \"name\": \"cirros-0.3.4-x86_64-uec-kernel\"}]}\n\n$ curl --request GET 'http://172.16.240.200:8774/v2.1/servers' --header 'X-Auth-Token:71258fa66cb14080acf11018bf26adcc'\n{\"servers\": []}stevemar@ubuntu:/opt/stack$ \n\n", 
            "date_created": "2016-09-20 15:48:13.384828+00:00", 
            "author": "https://api.launchpad.net/1.0/~stevemar"
        }, 
        {
            "content": "@stevemar and @sdague\n\nI couldn't able to reproduce the issue in current master branch; Let me know how to do want to take this bug further? Can we keep the check in _get_project_id function or not? I will submit UT code based on further comments to take this bug to closure. Thanks ", 
            "date_created": "2016-09-23 11:40:23.075280+00:00", 
            "author": "https://api.launchpad.net/1.0/~viswesn"
        }, 
        {
            "content": "Change abandoned by viswesuwara nathan (<email address hidden>) on branch: master\nReview: https://review.openstack.org/363530", 
            "date_created": "2016-11-17 16:21:23.457623+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "There are no currently open reviews on this bug, changing the status back to the previous state and unassigning. If there are active reviews related to this bug, please include links in comments. ", 
            "date_created": "2017-06-27 19:23:47.035133+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "I'm having this problem as well, and I know why I'm having this problem. (Note that we're running Newton, but it certainly appears the problem should exist in newer versions of nova, given that the code in question hasn't changed.)\n\nAs long as I'm using a token that is project scoped, everything's fine:\n[root@[redacted] ~]# env | grep OS\nOS_REGION_NAME=RegionOne\nOS_USER_DOMAIN_NAME=Default\nOS_PROJECT_NAME=admin\nOS_IDENTITY_API_VERSION=3\nOS_PASSWORD=[redacted]\nOS_AUTH_URL=http://[redacted]:5000/v3\nOS_USERNAME=admin\nOS_INTERFACE=public\n\n[root@[redacted] ~]# openstack flavor list                            \n+----+-----------+-------+------+-----------+-------+-----------+\n| ID | Name      |   RAM | Disk | Ephemeral | VCPUs | Is Public |\n+----+-----------+-------+------+-----------+-------+-----------+\n| 1  | m1.tiny   |   512 |    1 |         0 |     1 | True      |\n| 2  | m1.small  |  2048 |   20 |         0 |     1 | True      |\n| 3  | m1.medium |  4096 |   40 |         0 |     2 | True      |\n| 4  | m1.large  |  8192 |   80 |         0 |     4 | True      |\n| 5  | m1.xlarge | 16384 |  160 |         0 |     8 | True      |\n+----+-----------+-------+------+-----------+-------+-----------+\n\n\n\n\nBut if I'm using an account that's set up in the cloudadmin domain and doesn't have a project scope, then it all goes to hell:\n\n[root@[redacted] ~]# env | grep OS\nOS_REGION_NAME=RegionOne\nOS_USER_DOMAIN_NAME=cloudadmin\nOS_IDENTITY_API_VERSION=3\nOS_PASSWORD=[redacted]\nOS_DOMAIN_NAME=cloudadmin\nOS_AUTH_URL=https://[redacted]:5000/v3\nOS_USERNAME=rdavidso\nOS_INTERFACE=public\n\n[rdavidso@[redacted] ~]$ openstack flavor list\nUnexpected API Error. Please report this at http://bugs.launchpad.net/nova/ and attach the Nova API log if possible.\n<type 'exceptions.TypeError'> (HTTP 500) (Request-ID: req-a9a4f011-6d08-40d7-b37f-4fd09388461f)\n\nThe error is the same reported earlier:\n2017-07-03 16:53:27.739 23251 ERROR nova.api.openstack.extensions   File \"/usr/lib/python2.7/site-packages/nova/api/openstack/common.py\", line 399, in _get_project_id\n2017-07-03 16:53:27.739 23251 ERROR nova.api.openstack.extensions     if project_id in request.url:\n2017-07-03 16:53:27.739 23251 ERROR nova.api.openstack.extensions TypeError: 'in <string>' requires string as left operand, not NoneType\n\n\nIt's pretty clear that the issue is that \"request.environ[\"nova.context\"].project_id\" doesn't return a string if there is no project_id associated with the token, causing it to choke and die.\n\nYes, you can get around this by having the cloudadmin user associated with any project via an OS_PROJECT_NAME export, but every other openstack component I've worked with is fine with a bare domain-scoped token, and I can't see any good reason for nova to be any different.\n", 
            "date_created": "2017-07-03 19:47:22.344890+00:00", 
            "author": "https://api.launchpad.net/1.0/~rdavidso"
        }, 
        {
            "content": "[Expired for OpenStack Compute (nova) because there has been no activity for 60 days.]", 
            "date_created": "2017-09-02 04:17:35.595778+00:00", 
            "author": "https://api.launchpad.net/1.0/~janitor"
        }
    ], 
    "closed": "2017-09-02 04:17:36.307032+00:00"
}