{
    "status": "Fix Released", 
    "last_updated": "2011-09-22 13:40:10.080435+00:00", 
    "description": "The current rate limiting implementation has hard-coded defaults from the original Cloud Servers 1.0 spec. The issue is that this doesn't allow for any sort of robustness testing. Additionally, the only way to change the rate limiting functionality is to implement a separately running service, via the WSGIAppProxy. While useful, I think this limits the ability to configure rate limiting. \n\nInstead, I suggest we allow the Rate Limiting driver to be interchangeable via flags just like most of the components in Nova. That way, a very simply NoOpRateLimiter can be implemented, as well as any other form of configurable rate limiting. The current, default rate limiter should be retained, and the WSGIAppProxy rate limiter re-implemented as a separate ProxyingRateLimiter.", 
    "tags": [], 
    "importance": "Wishlist", 
    "heat": 20, 
    "link": "https://bugs.launchpad.net/nova/+bug/759978", 
    "owner": "https://api.launchpad.net/1.0/~klmitch", 
    "id": 759978, 
    "index": 2312, 
    "openned": "2011-04-13 16:21:47.504591+00:00", 
    "created": "2011-04-13 16:21:47.504591+00:00", 
    "title": "Openstack API Rate limiting isn't flexible enough", 
    "comments": [
        {
            "content": "The current rate limiting implementation has hard-coded defaults from the original Cloud Servers 1.0 spec. The issue is that this doesn't allow for any sort of robustness testing. Additionally, the only way to change the rate limiting functionality is to implement a separately running service, via the WSGIAppProxy. While useful, I think this limits the ability to configure rate limiting. \n\nInstead, I suggest we allow the Rate Limiting driver to be interchangeable via flags just like most of the components in Nova. That way, a very simply NoOpRateLimiter can be implemented, as well as any other form of configurable rate limiting. The current, default rate limiter should be retained, and the WSGIAppProxy rate limiter re-implemented as a separate ProxyingRateLimiter.", 
            "date_created": "2011-04-13 16:21:47.504591+00:00", 
            "author": "https://api.launchpad.net/1.0/~cerberus"
        }, 
        {
            "content": "Hey Matt, can you go in to a big more detail about \"robustness testing\"? Currently a NoOpRateLimiter can be achieved by removing the current rate-limiting middleware from the paste deploy if that helps at all. Also, what sort of limits are you looking at which aren't available to the current system? While it's 'hard-coded' the system is moderately flexible already and I'd love to discuss use cases where it breaks down. Thanks!", 
            "date_created": "2011-05-05 15:26:20.787482+00:00", 
            "author": "https://api.launchpad.net/1.0/~blamar"
        }, 
        {
            "content": "The particular case we ran into was the integration tests I wrote (lp:~klmitch/nova/os_int_tests).  Since they're threaded, there were a lot of requests coming in simultaneously, and rate limiting triggered badly enough to make it impossible to see what was actually breaking.  The only way Matt and I found to affect the rate limiting was to modify the hard-coded limits directly.  Wish I had known that I could have just removed the rate-limiting middleware from the paste deploy!\n\nIn longer term, what we're thinking of is that there should be a way to modify the rate limits per user account.  This would allow the integration tests to be run against any nova installation at all: the tests would create a user, set the rate limits to absurdly high values for only that user, then run all the tests; at the end, all we'd need to do would be delete the user, and any left-over trash from the tests would go away as well.  Without that ability to modify rate limits, we have to apply workarounds like modifying the running cluster (what good are integration tests then?), or creating tons of different users (could still run into rate limits trying to create all the users that would be needed), or trying to throttle the integration test suite (how good would that be if we're trying to stress-test the cluster?).\n\n(I'm sure it's already a long-term goal to have such per-user rate limiting, so here's a documented use case...)", 
            "date_created": "2011-05-06 17:29:02.653267+00:00", 
            "author": "https://api.launchpad.net/1.0/~klmitch"
        }, 
        {
            "content": "\"rate limiting triggered badly enough\"\n\nCan you go into more detail? As in, did it work as intended, but was just really 'spammy' or did something break for you? I'd love to help out with your testing and/or specific concerns regarding the current implementation.\n\nI could see a patch which support modifying current limits based on a given username, but honestly I'd suggest doing load testing without rate limiting enabled at all (which I believe is what you're doing now).", 
            "date_created": "2011-05-09 16:35:17.518656+00:00", 
            "author": "https://api.launchpad.net/1.0/~blamar"
        }, 
        {
            "content": "On Mon, 2011-05-09 at 16:35 +0000, Brian Lamar wrote:\n> \"rate limiting triggered badly enough\"\n> \n> Can you go into more detail? As in, did it work as intended, but was\n> just really 'spammy' or did something break for you? I'd love to help\n> out with your testing and/or specific concerns regarding the current\n> implementation.\n\nIt worked as intended.  That intention, however, interfered with the\nfunction of the testing, in that it prevented the creation of instances\nthat were necessary to perform the tests in the first place.\n\n> I could see a patch which support modifying current limits based on a\n> given username, but honestly I'd suggest doing load testing without rate\n> limiting enabled at all (which I believe is what you're doing now).\n\nPretty much, yes, but the intent is to be able to apply this against any\nOpenStack installation, say, for stress testing purposes.\n-- \nKevin L. Mitchell <email address hidden>\n", 
            "date_created": "2011-05-09 16:50:21+00:00", 
            "author": "https://api.launchpad.net/1.0/~klmitch"
        }
    ], 
    "closed": "2011-09-22 13:40:08.606894+00:00"
}