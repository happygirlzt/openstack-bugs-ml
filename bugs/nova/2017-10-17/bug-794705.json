{
    "status": "Fix Released", 
    "last_updated": "2011-09-22 13:24:44.820845+00:00", 
    "description": "take \"bin/nova-manager network create\" as an example. With multi-nic it has the following parameters\nlabel, fixed_range, num_networks, network_size, vlan_start, vpn_start, fixed_range_v6, gateway_v6, flat_network_bridge, bridge_interface\nThere will be times you want to create v4 networks specifying flat_network_bridge or bridge_interface, there is not way to skip over the args in between, and no way to use keyword args on the command line so you end up having to do something like\nnova-manage network create public 10.0.0.0/8 1 15 0 0 0 0 xenbr1 eth1\nwhere you fill the gaps with zeros.\nnova-manage network create public 10.0.0.0/8 1 15 --flat-network_bridge xenbr1 --bridge_interface eth1\nwould be much more readable", 
    "tags": [], 
    "importance": "Wishlist", 
    "heat": 8, 
    "link": "https://bugs.launchpad.net/nova/+bug/794705", 
    "owner": "https://api.launchpad.net/1.0/~klmitch", 
    "id": 794705, 
    "index": 2335, 
    "openned": "2011-06-08 18:59:41.938143+00:00", 
    "created": "2011-06-08 18:59:41.938143+00:00", 
    "title": "need a real argparser for the bin/nova-manage commands", 
    "comments": [
        {
            "content": "take \"bin/nova-manager network create\" as an example. With multi-nic it has the following parameters\nlabel, fixed_range, num_networks, network_size, vlan_start, vpn_start, fixed_range_v6, gateway_v6, flat_network_bridge, bridge_interface\nThere will be times you want to create v4 networks specifying flat_network_bridge or bridge_interface, there is not way to skip over the args in between, and no way to use keyword args on the command line so you end up having to do something like\nnova-manage network create public 10.0.0.0/8 1 15 0 0 0 0 xenbr1 eth1\nwhere you fill the gaps with zeros.\nnova-manage network create public 10.0.0.0/8 1 15 --flat-network_bridge xenbr1 --bridge_interface eth1\nwould be much more readable", 
            "date_created": "2011-06-08 18:59:41.938143+00:00", 
            "author": "https://api.launchpad.net/1.0/~tr3buchet"
        }, 
        {
            "content": "I would love to see this same idea applied to all of our command line utilities", 
            "date_created": "2011-06-08 19:10:09.452054+00:00", 
            "author": "https://api.launchpad.net/1.0/~bcwaldon"
        }, 
        {
            "content": "You know, it should be easy if you're willing to drop the '--': simply take any command-line arguments containing '=' and turn them into keyword arguments, then pass them in.  So for instance:\n\n  nova-manage network create public 10.0.0.0/8 1 15 flat_network_bridge=xenbr1 bridge_interface=eth1\n\nThen you'd have something like:\n\ndef parse_args(argv):\n    args = {}\n", 
            "date_created": "2011-06-30 19:13:52.194914+00:00", 
            "author": "https://api.launchpad.net/1.0/~klmitch"
        }, 
        {
            "content": "(I hate launchpad.  To continue:)\n\n    args = ()\n    kwargs = {}\n    for arg in argv:\n        if '=' in arg:\n            k, v = arg.split('=', 1)\n            kwargs[k] = v\n        else:\n            args.append(arg)\n    return args, kwargs\n\nThen, in main():\n\n    args, kwargs = parse_args(argv)\n    try:\n        fn(*args, **kwargs)\n        sys.exit(0)\n    [...]\n\nThere are more subtleties we could try to take account of, too, like either prohibiting non-'=' arguments after encountering '=' arguments, or making such arguments be assigned to the parameters after the key.", 
            "date_created": "2011-06-30 19:18:38.847984+00:00", 
            "author": "https://api.launchpad.net/1.0/~klmitch"
        }, 
        {
            "content": "Incidentally, glance's CLI tool (bin/glance) uses exactly the same approach that Kevin takes above...", 
            "date_created": "2011-07-01 15:40:30.440703+00:00", 
            "author": "https://api.launchpad.net/1.0/~jaypipes"
        }
    ], 
    "closed": "2011-09-22 13:24:43.645341+00:00"
}