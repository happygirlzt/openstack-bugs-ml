{
    "status": "Invalid", 
    "last_updated": "2014-02-10 04:32:14.794862+00:00", 
    "description": "testsuite as dfar as I can tell is currently s fiasco, needs upgrading to match the change of name from quantum to neutron.\n\nFor;\n\narchtester nova-2013.1.9999 # nosetests -v\nFailure: ImportError (No module named quantumclient) ... ERROR\n\nOR\n\narchtester nova-2013.1.3 # nosetests -v\n\nyield\n\nFailure: ImportError (No module named quantumclient.common) ... ERROR\nFailure: ImportError (No module named quantumclient.common) ... ERROR\nFailure: ImportError (No module named quantumclient.common) ... ERROR\nnova.tests.api.ec2.test_faults.TestFaults.test_fault_exception ... ERROR\nnova.tests.api.ec2.test_faults.TestFaults.test_fault_exception_status_int ... ERROR\nnova.tests.api.ec2.test_middleware.ExecutorTestCase.test_instance_not_found ... ERROR\nnova.tests.api.ec2.test_middleware.ExecutorTestCase.test_instance_not_found_none ... ERROR\nnova.tests.api.ec2.test_middleware.ExecutorTestCase.test_snapshot_not_found ... ERROR\nnova.tests.api.ec2.test_middleware.ExecutorTestCase.test_volume_not_found ... ERROR\nnova.tests.api.ec2.test_middleware.LockoutTestCase.test_lockout ... ^X^Z\n[1]+  Stopped                 nosetests -v\n\nOn 'sed'ing quantumclient.common to neutrom.common you still get an import error for \n(No module named quantum)\n\nand so forth.  Seeing it doesn't even cite the .py file that is attempting to import it, it's a fiasco.\n\nquantum has been renamed to neutron and afaict the testsuite is still utilising quantum\n\nPlease upgrade the entitr test suite unless I'm missing something", 
    "tags": [
        "testing"
    ], 
    "importance": "Undecided", 
    "heat": 8, 
    "link": "https://bugs.launchpad.net/nova/+bug/1235955", 
    "owner": "None", 
    "id": 1235955, 
    "index": 5421, 
    "openned": "2013-10-06 12:31:54.575045+00:00", 
    "created": "2013-10-06 12:31:54.575045+00:00", 
    "title": "testsuite needs upgrading", 
    "comments": [
        {
            "content": "testsuite as dfar as I can tell is currently s fiasco, needs upgrading to match the change of name from quantum to neutron.\n\nFor;\n\narchtester nova-2013.1.9999 # nosetests -v\nFailure: ImportError (No module named quantumclient) ... ERROR\n\nOR\n\narchtester nova-2013.1.3 # nosetests -v\n\nyield\n\nFailure: ImportError (No module named quantumclient.common) ... ERROR\nFailure: ImportError (No module named quantumclient.common) ... ERROR\nFailure: ImportError (No module named quantumclient.common) ... ERROR\nnova.tests.api.ec2.test_faults.TestFaults.test_fault_exception ... ERROR\nnova.tests.api.ec2.test_faults.TestFaults.test_fault_exception_status_int ... ERROR\nnova.tests.api.ec2.test_middleware.ExecutorTestCase.test_instance_not_found ... ERROR\nnova.tests.api.ec2.test_middleware.ExecutorTestCase.test_instance_not_found_none ... ERROR\nnova.tests.api.ec2.test_middleware.ExecutorTestCase.test_snapshot_not_found ... ERROR\nnova.tests.api.ec2.test_middleware.ExecutorTestCase.test_volume_not_found ... ERROR\nnova.tests.api.ec2.test_middleware.LockoutTestCase.test_lockout ... ^X^Z\n[1]+  Stopped                 nosetests -v\n\nOn 'sed'ing quantumclient.common to neutrom.common you still get an import error for \n(No module named quantum)\n\nand so forth.  Seeing it doesn't even cite the .py file that is attempting to import it, it's a fiasco.\n\nquantum has been renamed to neutron and afaict the testsuite is still utilising quantum\n\nPlease upgrade the entitr test suite unless I'm missing something", 
            "date_created": "2013-10-06 12:31:54.575045+00:00", 
            "author": "https://api.launchpad.net/1.0/~johneed"
        }, 
        {
            "content": "Is this using trunk on stable/grizzly?  This is probably an environment issue on your end.  If you use 'tox --recreate -e py27,pep8' this shouldn't be an issue since tox will pull the proper dependencies down into the local virtual environment for running the tests.\n\nWhat does 'pip show python-neutronclient' show on your system?", 
            "date_created": "2013-10-13 19:57:51.937351+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "No and no and again no.\nHANG tox and pip.\n\nSee https://bugs.launchpad.net/python-swiftclient/+bug/1251507\n\nDon't want NO  toxicity around here.  I'm maintaining gentoo packages and would prefer as I stated in that other one to use nosetests or a python tests/test_all.py.  I made this on an first or early attempt at a testsuite of an openstack package.  I now get the gist of the releases grizzly and havana.\n\nHowever, It was nova-2013.1.9999 I was trying to run which is grizzly. The pip equal to pip show python-neutron-client yields\n\ntestuser@archtester ~/cvsPortage/gentoo-x86/sys-cluster/cinder $ eix python-neutronclient\n* dev-python/python-neutronclient\n     Available versions:  (~)2.2.3 (~)2.2.6-r2 (~)2.3.0-r2 {PYTHON_TARGETS=\"python2_7\"}\n     Homepage:            https://launchpad.net/neutron\n     Description:         A client for the OpenStack Quantum API\n\nindicating the old name still in place in the description.  Seeing nova-2013.1.9999 is now an old release it has lowered priority.  While the notion of the tests needing re-writing might alreadt be done, the notion of using a test runner like nose or pytest or running them from python /path/to/test_all.py file still has full merit", 
            "date_created": "2013-11-15 08:16:56.389306+00:00", 
            "author": "https://api.launchpad.net/1.0/~johneed"
        }, 
        {
            "content": "ok to balance this somewhat, I have a better result from running nosetests from work/neutron-2013.2/.\n\nFirstly, nova is now last on my list of openstack packages to examine.   On taking on openstack within gentoo I kind of stumbled onto nova and tried it out still somewhat naive to how openstack packages are put together and released under those (county) names.\n\nI am currently running nosetests from work/neutron-2013.2/ and it's a monster, still going.  There is a \n\nlooping call') -> None\nEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE.....SSSSS\n\nbut not until many dozens of tests passed ok.  This means nosetests cana at least sometimes be run as a testrunner out of the openstack package box with little or no modifying.  I shall add comment again later when it has completed.", 
            "date_created": "2013-11-15 10:20:22.985807+00:00", 
            "author": "https://api.launchpad.net/1.0/~johneed"
        }, 
        {
            "content": "ok;  \n\nRan 9376 tests in 7497.388s\n\nFAILED (SKIP=328, errors=35, failures=1)\n\nHere's the faul;\n\nERROR: Failure: TypeError (expected string or buffer)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python2.7/site-packages/nose/loader.py\", line 413, in loadTestsFromName\n    addr.filename, addr.module)\n  File \"/usr/lib64/python2.7/site-packages/nose/importer.py\", line 47, in importFromPath\n    return self.importFromDir(dir_path, fqname)\n  File \"/usr/lib64/python2.7/site-packages/nose/importer.py\", line 94, in importFromDir\n    mod = load_module(part_fqname, fh, filename, desc)\n  File \"/mnt/gen2/TmpDir/portage/sys-cluster/neutron-2013.2/work/neutron-2013.2/quantum/api/__init__.py\", line 29, in <module>\n    _('You are using old configuration values for the api-paste config. '\nTypeError: expected string or buffer\n\nSo, blow torch to the belly here.  Why on earth does neutron-2013.2 havea folder of the past name, quantum, complete with __init__.py?  Just waiting to be tripped over!\n\nThe errors=35 are split between \nERROR: neutron.tests.unit.openvswitch.test_ovs_tunnel. \nand\nneutron.tests.unit.test_wsgi.\n\nDo you wish for an uipload of the whole errors?  Considering they probably pass under tox I make no assumption here.\n\n", 
            "date_created": "2013-11-15 11:22:54.144119+00:00", 
            "author": "https://api.launchpad.net/1.0/~johneed"
        }, 
        {
            "content": "Hi!\n\nSo, \"hang tox and pip\" is fine- it's fine if you want to do things differently thant he project does, but expressing your views to us in that way is a rude way to get your point across.\n\nI do believe that our tests should work outside of tox. I don't believe that they should work under nose, because we don't use nose, because nose violates and ignores the python unit testing protocol. I suggest running the tests with the test runner we use, which is testrepository. There is absolutely no need to involve pip or tox or really anything that is packager unfriendly to do so. You'll simply want to run:\n\nif [ ! -d .testrepository ] ; then\n  testr init\nfi\ntestr run\n\nOR\n\npython setup.py test\n\nEven if you don't want to use tox because you're doing packaging, you might be interested in knowing that you can read the tox.ini file youself and see how unittests are intended to be run. Specifically, in the [testenv] section, you'll see an entry for commands. \n\nHowever, I do suggest being less aggressively rude in bug reports. A simple indication that you are doing distro packaging and that tox/pip are inappropriate for you would suffice. Also, it might be helpful for you to know that a bug filed against python-swiftclient is not likely to have been read by people working on nova, so being frustrated that you feel like you are repeating yourself is also not likely to be well received.\n\nThank you for your contributions!", 
            "date_created": "2013-12-31 15:41:52.622612+00:00", 
            "author": "https://api.launchpad.net/1.0/~mordred"
        }, 
        {
            "content": "The key question for me is why you thought nosetests was appropriate at all? nose is neither forward nor backward compatible with unittest (though it does have a lot of common overlap, so some test suites will work with nose and unittest). \n\nWe used to use nose - did you find some stale documentation we haven't purged that suggests nose is still in use? Or is it that we haven't finished migrating all our projects (I think glance might still be unmigrated).", 
            "date_created": "2013-12-31 22:51:53.143399+00:00", 
            "author": "https://api.launchpad.net/1.0/~lifeless"
        }, 
        {
            "content": "I'd kind of abandoned this bug.  In way of an explanation, Initially used nose because most python packages do and it usually works.  I managed to learn of / deduce the use of \n\nif [ ! -d .testrepository ] ; then\n  testr init\nfi\ntestr run\n\n& python  setup.py test\n\nsome weeks after making this bug in a kind of knee jerk reaction style.  The use of testrepository was new and an unknown to me and in fact is still just that to gentoo python devs.  At the time being pointed back to tox basically amounted to a kind of circular dead end.   By rights I could have should have commented accordingly around late Nov. but I'd moved on and dismissed it in my own mind.   sorry.\nPlease close it since it seems I can't ", 
            "date_created": "2014-02-10 03:33:51.304310+00:00", 
            "author": "https://api.launchpad.net/1.0/~johneed"
        }
    ], 
    "closed": "2014-02-10 04:32:11.926155+00:00"
}