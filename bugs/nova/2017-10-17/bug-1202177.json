{
    "status": "Fix Released", 
    "last_updated": "2013-10-17 12:09:17.488971+00:00", 
    "description": "When I tried to assign one of my successfully-allocated floating IPs to one of my instances, my nova-network.log showed this rather unhelpful traceback: http://paste.openstack.org/show/40674/\n\nI'm running nova-network 1:2013.1.2-0ubuntu1~cloud0 from the cloud archive, on Ubuntu 12.04 LTS.\n\nMy searches through bugs while trying to find the *real* error turned up bug#1119817 which seems to be of a type with this one (although apparently more thoroughly researched).", 
    "tags": [
        "network"
    ], 
    "importance": "Medium", 
    "heat": 8, 
    "link": "https://bugs.launchpad.net/nova/+bug/1202177", 
    "owner": "https://api.launchpad.net/1.0/~russellb", 
    "id": 1202177, 
    "index": 3493, 
    "openned": "2013-07-17 12:36:18.712989+00:00", 
    "created": "2013-07-17 12:36:18.712989+00:00", 
    "title": "Missing exception data for exceptions raised in floating ip assignment when ebtables is missing", 
    "comments": [
        {
            "content": "When I tried to assign one of my successfully-allocated floating IPs to one of my instances, my nova-network.log showed this rather unhelpful traceback: http://paste.openstack.org/show/40674/\n\nI'm running nova-network 1:2013.1.2-0ubuntu1~cloud0 from the cloud archive, on Ubuntu 12.04 LTS.\n\nMy searches through bugs while trying to find the *real* error turned up bug#1119817 which seems to be of a type with this one (although apparently more thoroughly researched).", 
            "date_created": "2013-07-17 12:36:18.712989+00:00", 
            "author": "https://api.launchpad.net/1.0/~nick-moffitt"
        }, 
        {
            "content": "Okay, I\"ve tracked this down to:\n\n2013-07-17 12:44:34.849 12414 TRACE nova.api.openstack.compute.contrib.floating_ips   File \"/usr/lib/python2.7/dist-packages/nova/network/floating_ips.py\", line 375, in do_associate\n2013-07-17 12:44:34.849 12414 TRACE nova.api.openstack.compute.contrib.floating_ips     raise\n2013-07-17 12:44:34.849 12414 TRACE nova.api.openstack.compute.contrib.floating_ips TypeError: exceptions must be old-style classes or derived from BaseException, not NoneType\n\nAnd making line 375 of that file say \"raise e\" instead of just a bare raise gets me this:\n\n2013-07-17 12:50:59.518 12414 TRACE nova.api.openstack.compute.contrib.floating_ips ProcessExecutionError: Unexpected error while running command.\n2013-07-17 12:50:59.518 12414 TRACE nova.api.openstack.compute.contrib.floating_ips Command: sudo nova-rootwrap /etc/nova/rootwrap.conf ebtables -t nat -I PREROUTING --logical-in br3812 -p ipv4 --ip-src 10.55.224.3 ! --ip-dst 10.55.224.0/29 -j redirect --redirect-target ACCEPT\n2013-07-17 12:50:59.518 12414 TRACE nova.api.openstack.compute.contrib.floating_ips Exit code: 96\n2013-07-17 12:50:59.518 12414 TRACE nova.api.openstack.compute.contrib.floating_ips Stdout: '/usr/bin/nova-rootwrap: Executable not found: /sbin/ebtables (filter match = ebtables)\\n'\n2013-07-17 12:50:59.518 12414 TRACE nova.api.openstack.compute.contrib.floating_ips Stderr: ''\n\nSo this is a problem in my deployment, but the error handling isn't helping me work it out right now.  I'll update the subject to be more specific.", 
            "date_created": "2013-07-17 12:53:21.065958+00:00", 
            "author": "https://api.launchpad.net/1.0/~nick-moffitt"
        }, 
        {
            "content": "https://review.openstack.org/#/c/45750/", 
            "date_created": "2013-09-09 21:30:33.006641+00:00", 
            "author": "https://api.launchpad.net/1.0/~russellb"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/45750\nCommitted: http://github.com/openstack/nova/commit/3e1e2448bf162bd2750416efe5d7c1010b51b52a\nSubmitter: Jenkins\nBranch:    master\n\ncommit 3e1e2448bf162bd2750416efe5d7c1010b51b52a\nAuthor: Russell Bryant <email address hidden>\nDate:   Mon Sep 9 16:14:38 2013 -0400\n\n    Don't lose exception info\n    \n    Using eventlet introduces some extra fun into exception handling.  After\n    catching an exception, it is required to save off the exception details\n    if you want to be able to re-raise it later after doing other operations\n    which may do a greenthread switch.  That's what this patch does.  It\n    saves off the original exception that we intend to re-raise later and\n    ensures that nothing stomps on it in the meantime.\n    \n    A test case was also added to exercise this code path to make sure the\n    exception saving and re-raising worked as expected.\n    \n    Change-Id: Ibf5f06a30839b93ece500ce7dbb714f6509f85af\n    Closes-bug: #1202177\n", 
            "date_created": "2013-09-24 00:28:16.138123+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2013-10-03 07:52:21.499088+00:00"
}