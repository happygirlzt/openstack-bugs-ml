{
    "status": "Invalid", 
    "last_updated": "2017-04-17 15:34:49.756722+00:00", 
    "description": "The resource provider generation is used to provide consistency guarantees for concurrent changes to a provider's inventory/allocations. Because right now, the nova-compute worker holds a lock for the duration of any instance claim, we didn't have to pass a generation marker for resource providers involved in allocations on a compute node (because only one writer was allowed at a time).\n\nWith the move to claiming in the conductor, no such lock will be used and we will want to pass the resource provider generation value that we receive from GET /resource_providers to the PUT /allocations call that the conductor makes.\n\nTherefore, we should add the generation field to the request payload of PUT /allocations", 
    "tags": [
        "placement"
    ], 
    "importance": "Medium", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1683377", 
    "owner": "https://api.launchpad.net/1.0/~jaypipes", 
    "id": 1683377, 
    "index": 4799, 
    "openned": "2017-04-17 14:41:24.096143+00:00", 
    "created": "2017-04-17 14:41:24.096143+00:00", 
    "title": "[placement] PUT /allocations should include resource provider generations", 
    "comments": [
        {
            "content": "The resource provider generation is used to provide consistency guarantees for concurrent changes to a provider's inventory/allocations. Because right now, the nova-compute worker holds a lock for the duration of any instance claim, we didn't have to pass a generation marker for resource providers involved in allocations on a compute node (because only one writer was allowed at a time).\n\nWith the move to claiming in the conductor, no such lock will be used and we will want to pass the resource provider generation value that we receive from GET /resource_providers to the PUT /allocations call that the conductor makes.\n\nTherefore, we should add the generation field to the request payload of PUT /allocations", 
            "date_created": "2017-04-17 14:41:24.096143+00:00", 
            "author": "https://api.launchpad.net/1.0/~jaypipes"
        }, 
        {
            "content": "Turns out we don't actually need this... the set_allocations() call ensures that inventory capacity is never exceeded.", 
            "date_created": "2017-04-17 15:34:43.778467+00:00", 
            "author": "https://api.launchpad.net/1.0/~jaypipes"
        }
    ], 
    "closed": "2017-04-17 15:34:48.148705+00:00"
}