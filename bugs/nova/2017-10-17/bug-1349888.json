{
    "status": "Fix Released", 
    "last_updated": "2016-01-14 20:47:33.815269+00:00", 
    "description": "[Impact]\n\n\u00a0* Ensure attching already attached volume to second instance does not\n\u00a0\u00a0\u00a0interfere with attached instance volume record.\n\n[Test Case]\n\n\u00a0* Create cinder volume vol1 and two instances vm1 and vm2\n\n\u00a0* Attach vol1 to vm1 and check that attach was successful by doing:\n\n\u00a0\u00a0\u00a0- cinder list\n\u00a0\u00a0\u00a0- nova show <vm1>\n\n\u00a0\u00a0\u00a0e.g. http://paste.ubuntu.com/12314443/\n\n\u00a0* Attach vol1 to vm2 and check that attach fails and, crucially, that the\n\u00a0\u00a0\u00a0first attach is unaffected (as above). You can also check the Nova db as\n\u00a0\u00a0\u00a0follows:\n\n\u00a0\u00a0\u00a0select * from block_device_mapping where source_type='volume' and \\\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0(instance_uuid='<vm1>' or instance_uuid='<vm2>');\n\n\u00a0\u00a0\u00a0from which you would expect e.g. http://paste.ubuntu.com/12314416/ which\n\u00a0\u00a0\u00a0shows that vol1 is attached to vm1 and vm2 attach failed.\n\n\u00a0* finally detach vol1 from vm1 and ensure that it succeeds.\n\n[Regression Potential]\n\n\u00a0* none\n\n---- ---- ---- ----\n\nnova assumes there is only ever one bdm per volume. When an attach is initiated a new bdm is created, if the attach fails a bdm for the volume is deleted however it is not necessarily the one that was just created. The following steps show how a volume can get stuck detaching because of this.\n\n$ nova list\nc+--------------------------------------+--------+--------+------------+-------------+------------------+\n| ID                                   | Name   | Status | Task State | Power State | Networks         |\n+--------------------------------------+--------+--------+------------+-------------+------------------+\n| cb5188f8-3fe1-4461-8a9d-3902f7cc8296 | test13 | ACTIVE | -          | Running     | private=10.0.0.2 |\n+--------------------------------------+--------+--------+------------+-------------+------------------+\n\n$ cinder list\n+--------------------------------------+-----------+--------+------+-------------+----------+-------------+\n|                  ID                  |   Status  |  Name  | Size | Volume Type | Bootable | Attached to |\n+--------------------------------------+-----------+--------+------+-------------+----------+-------------+\n| c1e38e93-d566-4c99-bfc3-42e77a428cc4 | available | test10 |  1   |     lvm1    |  false   |             |\n+--------------------------------------+-----------+--------+------+-------------+----------+-------------+\n\n$ nova volume-attach test13 c1e38e93-d566-4c99-bfc3-42e77a428cc4\n+----------+--------------------------------------+\n| Property | Value                                |\n+----------+--------------------------------------+\n| device   | /dev/vdb                             |\n| id       | c1e38e93-d566-4c99-bfc3-42e77a428cc4 |\n| serverId | cb5188f8-3fe1-4461-8a9d-3902f7cc8296 |\n| volumeId | c1e38e93-d566-4c99-bfc3-42e77a428cc4 |\n+----------+--------------------------------------+\n\n$ cinder list\n+--------------------------------------+--------+--------+------+-------------+----------+--------------------------------------+\n|                  ID                  | Status |  Name  | Size | Volume Type | Bootable |             Attached to              |\n+--------------------------------------+--------+--------+------+-------------+----------+--------------------------------------+\n| c1e38e93-d566-4c99-bfc3-42e77a428cc4 | in-use | test10 |  1   |     lvm1    |  false   | cb5188f8-3fe1-4461-8a9d-3902f7cc8296 |\n+--------------------------------------+--------+--------+------+-------------+----------+--------------------------------------+\n\n$ nova volume-attach test13 c1e38e93-d566-4c99-bfc3-42e77a428cc4\nERROR (BadRequest): Invalid volume: status must be 'available' (HTTP 400) (Request-ID: req-1fa34b54-25b5-4296-9134-b63321b0015d)\n\n$ nova volume-detach test13 c1e38e93-d566-4c99-bfc3-42e77a428cc4\n\n$ cinder list\n+--------------------------------------+-----------+--------+------+-------------+----------+--------------------------------------+\n|                  ID                  |   Status  |  Name  | Size | Volume Type | Bootable |             Attached to              |\n+--------------------------------------+-----------+--------+------+-------------+----------+--------------------------------------+\n| c1e38e93-d566-4c99-bfc3-42e77a428cc4 | detaching | test10 |  1   |     lvm1    |  false   | cb5188f8-3fe1-4461-8a9d-3902f7cc8296 |\n+--------------------------------------+-----------+--------+------+-------------+----------+--------------------------------------+\n\n2014-07-29 14:47:13.952 ERROR oslo.messaging.rpc.dispatcher [req-134dfd17-14da-4de0-93fc-5d8d7bbf65a5 admin admin] Exception during message handling: <type 'NoneType'> can't be decoded\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher Traceback (most recent call last):\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/local/lib/python2.7/dist-packages/oslo/messaging/rpc/dispatcher.py\", line 134, in _dispatch_and_reply\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher     incoming.message))\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/local/lib/python2.7/dist-packages/oslo/messaging/rpc/dispatcher.py\", line 177, in _dispatch\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher     return self._do_dispatch(endpoint, method, ctxt, args)\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/local/lib/python2.7/dist-packages/oslo/messaging/rpc/dispatcher.py\", line 123, in _do_dispatch\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher     result = getattr(endpoint, method)(ctxt, **new_args)\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/compute/manager.py\", line 406, in decorated_function\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher     return function(self, context, *args, **kwargs)\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/exception.py\", line 88, in wrapped\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher     payload)\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/openstack/common/excutils.py\", line 82, in __exit__\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher     six.reraise(self.type_, self.value, self.tb)\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/exception.py\", line 71, in wrapped\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher     return f(self, context, *args, **kw)\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/compute/manager.py\", line 291, in decorated_function\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher     pass\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/openstack/common/excutils.py\", line 82, in __exit__\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher     six.reraise(self.type_, self.value, self.tb)\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/compute/manager.py\", line 277, in decorated_function\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher     return function(self, context, *args, **kwargs)\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/compute/manager.py\", line 319, in decorated_function\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher     kwargs['instance'], e, sys.exc_info())\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/openstack/common/excutils.py\", line 82, in __exit__\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher     six.reraise(self.type_, self.value, self.tb)\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/compute/manager.py\", line 307, in decorated_function\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher     return function(self, context, *args, **kwargs)\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/compute/manager.py\", line 4363, in detach_volume\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher     self._detach_volume(context, instance, bdm)\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/compute/manager.py\", line 4309, in _detach_volume\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher     connection_info = jsonutils.loads(bdm.connection_info)\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/openstack/common/jsonutils.py\", line 176, in loads\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher     return json.loads(strutils.safe_decode(s, encoding), **kwargs)\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/openstack/common/strutils.py\", line 134, in safe_decode\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher     raise TypeError(\"%s can't be decoded\" % type(text))\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher TypeError: <type 'NoneType'> can't be decoded\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher", 
    "tags": [
        "verification-done"
    ], 
    "importance": "High", 
    "heat": 30, 
    "link": "https://bugs.launchpad.net/nova/+bug/1349888", 
    "owner": "https://api.launchpad.net/1.0/~git-harry", 
    "id": 1349888, 
    "index": 1550, 
    "openned": "2014-07-29 14:58:58.505715+00:00", 
    "created": "2014-07-29 14:58:58.505715+00:00", 
    "title": "[SRU] Attempting to attach the same volume multiple times can cause bdm record for existing attachment to be deleted.", 
    "comments": [
        {
            "content": "nova assumes there is only ever one bdm per volume. When an attach is initiated a new bdm is created, if the attach fails a bdm for the volume is deleted however it is not necessarily the one that was just created. The following steps show how a volume can get stuck detaching because of this.\n\n\n$ nova list\nc+--------------------------------------+--------+--------+------------+-------------+------------------+\n| ID                                   | Name   | Status | Task State | Power State | Networks         |\n+--------------------------------------+--------+--------+------------+-------------+------------------+\n| cb5188f8-3fe1-4461-8a9d-3902f7cc8296 | test13 | ACTIVE | -          | Running     | private=10.0.0.2 |\n+--------------------------------------+--------+--------+------------+-------------+------------------+\n\n$ cinder list\n+--------------------------------------+-----------+--------+------+-------------+----------+-------------+\n|                  ID                  |   Status  |  Name  | Size | Volume Type | Bootable | Attached to |\n+--------------------------------------+-----------+--------+------+-------------+----------+-------------+\n| c1e38e93-d566-4c99-bfc3-42e77a428cc4 | available | test10 |  1   |     lvm1    |  false   |             |\n+--------------------------------------+-----------+--------+------+-------------+----------+-------------+\n\n$ nova volume-attach test13 c1e38e93-d566-4c99-bfc3-42e77a428cc4\n+----------+--------------------------------------+\n| Property | Value                                |\n+----------+--------------------------------------+\n| device   | /dev/vdb                             |\n| id       | c1e38e93-d566-4c99-bfc3-42e77a428cc4 |\n| serverId | cb5188f8-3fe1-4461-8a9d-3902f7cc8296 |\n| volumeId | c1e38e93-d566-4c99-bfc3-42e77a428cc4 |\n+----------+--------------------------------------+\n\n$ cinder list\n+--------------------------------------+--------+--------+------+-------------+----------+--------------------------------------+\n|                  ID                  | Status |  Name  | Size | Volume Type | Bootable |             Attached to              |\n+--------------------------------------+--------+--------+------+-------------+----------+--------------------------------------+\n| c1e38e93-d566-4c99-bfc3-42e77a428cc4 | in-use | test10 |  1   |     lvm1    |  false   | cb5188f8-3fe1-4461-8a9d-3902f7cc8296 |\n+--------------------------------------+--------+--------+------+-------------+----------+--------------------------------------+\n\n$ nova volume-attach test13 c1e38e93-d566-4c99-bfc3-42e77a428cc4\nERROR (BadRequest): Invalid volume: status must be 'available' (HTTP 400) (Request-ID: req-1fa34b54-25b5-4296-9134-b63321b0015d)\n\n$ nova volume-detach test13 c1e38e93-d566-4c99-bfc3-42e77a428cc4\n\n$ cinder list\n+--------------------------------------+-----------+--------+------+-------------+----------+--------------------------------------+\n|                  ID                  |   Status  |  Name  | Size | Volume Type | Bootable |             Attached to              |\n+--------------------------------------+-----------+--------+------+-------------+----------+--------------------------------------+\n| c1e38e93-d566-4c99-bfc3-42e77a428cc4 | detaching | test10 |  1   |     lvm1    |  false   | cb5188f8-3fe1-4461-8a9d-3902f7cc8296 |\n+--------------------------------------+-----------+--------+------+-------------+----------+--------------------------------------+\n\n\n\n\n2014-07-29 14:47:13.952 ERROR oslo.messaging.rpc.dispatcher [req-134dfd17-14da-4de0-93fc-5d8d7bbf65a5 admin admin] Exception during message handling: <type 'NoneType'> can't be decoded\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher Traceback (most recent call last):\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/local/lib/python2.7/dist-packages/oslo/messaging/rpc/dispatcher.py\", line 134, in _dispatch_and_reply\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher     incoming.message))\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/local/lib/python2.7/dist-packages/oslo/messaging/rpc/dispatcher.py\", line 177, in _dispatch\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher     return self._do_dispatch(endpoint, method, ctxt, args)\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/local/lib/python2.7/dist-packages/oslo/messaging/rpc/dispatcher.py\", line 123, in _do_dispatch\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher     result = getattr(endpoint, method)(ctxt, **new_args)\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/compute/manager.py\", line 406, in decorated_function\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher     return function(self, context, *args, **kwargs)\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/exception.py\", line 88, in wrapped\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher     payload)\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/openstack/common/excutils.py\", line 82, in __exit__\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher     six.reraise(self.type_, self.value, self.tb)\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/exception.py\", line 71, in wrapped\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher     return f(self, context, *args, **kw)\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/compute/manager.py\", line 291, in decorated_function\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher     pass\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/openstack/common/excutils.py\", line 82, in __exit__\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher     six.reraise(self.type_, self.value, self.tb)\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/compute/manager.py\", line 277, in decorated_function\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher     return function(self, context, *args, **kwargs)\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/compute/manager.py\", line 319, in decorated_function\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher     kwargs['instance'], e, sys.exc_info())\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/openstack/common/excutils.py\", line 82, in __exit__\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher     six.reraise(self.type_, self.value, self.tb)\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/compute/manager.py\", line 307, in decorated_function\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher     return function(self, context, *args, **kwargs)\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/compute/manager.py\", line 4363, in detach_volume\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher     self._detach_volume(context, instance, bdm)\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/compute/manager.py\", line 4309, in _detach_volume\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher     connection_info = jsonutils.loads(bdm.connection_info)\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/openstack/common/jsonutils.py\", line 176, in loads\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher     return json.loads(strutils.safe_decode(s, encoding), **kwargs)\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/openstack/common/strutils.py\", line 134, in safe_decode\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher     raise TypeError(\"%s can't be decoded\" % type(text))\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher TypeError: <type 'NoneType'> can't be decoded\n2014-07-29 14:47:13.952 31588 TRACE oslo.messaging.rpc.dispatcher", 
            "date_created": "2014-07-29 14:58:58.505715+00:00", 
            "author": "https://api.launchpad.net/1.0/~git-harry"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/110319", 
            "date_created": "2014-07-29 15:06:21.030356+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Interesting. So for clarity - the bug is that BlockDeviceMapping.get_by_volume_id() (actually db_api.block_device_mapping_get_by_volume_id() under the hood) will return the first volume it gets, even if there is more.", 
            "date_created": "2014-07-30 09:52:28.557679+00:00", 
            "author": "https://api.launchpad.net/1.0/~ndipanov"
        }, 
        {
            "content": "Yes, that is essentially it.", 
            "date_created": "2014-07-30 12:49:41.390387+00:00", 
            "author": "https://api.launchpad.net/1.0/~git-harry"
        }, 
        {
            "content": "The review linked to this bug appears to still be being actively worked on.", 
            "date_created": "2014-09-24 01:48:10.004076+00:00", 
            "author": "https://api.launchpad.net/1.0/~mikal"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/110319\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=339a97d0f2d17f531cfc79e09cd8b8bc75ce6e2a\nSubmitter: Jenkins\nBranch:    master\n\ncommit 339a97d0f2d17f531cfc79e09cd8b8bc75ce6e2a\nAuthor: git-harry <email address hidden>\nDate:   Mon Aug 4 15:17:29 2014 +0100\n\n    Fix creating bdm for failed volume attachment\n    \n    This commit modifies the reserve_block_device_name method to return the\n    bdm object, when the corresponding keyword argument is True. This\n    ensures the correct bdm is destroyed if the attach fails. Currently the\n    code assumes only one bdm per volume and so retrieving it can cause the\n    incorrect db entry to be returned.\n    \n    Change-Id: I22a6db76d2044331d1a846eb4b6d7338c50270e2\n    Closes-Bug: #1349888\n", 
            "date_created": "2014-09-30 10:07:41.274796+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "I have a vm that looks like its in this state....\n\nI do have rdo juno on sl7 with ceph backend and the patch above is already there...\n\nin the dashboard for the instance, I see:\n\nVolumes Attached\nAttached To\n    LIFT-Dev Extra Storage 2 on /dev/vdb \nAttached To\n    LIFT-Dev Extra Storage on /dev/vdc \nAttached To\n    LIFT-Dev Extra Storage on /dev/vdd \n\nTwo attachments of the same volume. In the vm, I only see one though /dev/vdc.\n\nIf I try and delete the attachment, it goes into detaching forever.\n\nOn the compute node:\n2015-01-23 11:54:15.894 17425 AUDIT nova.compute.manager [req-5c64523f-765b-441d-9559-aa10cd130ab4 None] [instance: e674bf94-a7f4-4483-bfb8-0a065f2c327f] Detach volume 7be1f689-617d-4d90-909d-2e03139a2920 from m\nountpoint /dev/vdc\n2015-01-23 11:54:16.464 17425 INFO nova.scheduler.client.report [req-5c64523f-765b-441d-9559-aa10cd130ab4 None] Compute_service record updated for ('rcn44.cloud.pnnl.gov', 'rcn44.cloud.pnnl.gov')\n2015-01-23 11:54:16.475 17425 ERROR oslo.messaging.rpc.dispatcher [req-5c64523f-765b-441d-9559-aa10cd130ab4 ] Exception during message handling: <type 'NoneType'> can't be decoded\n2015-01-23 11:54:16.475 17425 TRACE oslo.messaging.rpc.dispatcher Traceback (most recent call last):\n2015-01-23 11:54:16.475 17425 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.7/site-packages/oslo/messaging/rpc/dispatcher.py\", line 134, in _dispatch_and_reply\n2015-01-23 11:54:16.475 17425 TRACE oslo.messaging.rpc.dispatcher     incoming.message))\n2015-01-23 11:54:16.475 17425 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.7/site-packages/oslo/messaging/rpc/dispatcher.py\", line 177, in _dispatch\n2015-01-23 11:54:16.475 17425 TRACE oslo.messaging.rpc.dispatcher     return self._do_dispatch(endpoint, method, ctxt, args)\n2015-01-23 11:54:16.475 17425 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.7/site-packages/oslo/messaging/rpc/dispatcher.py\", line 123, in _do_dispatch\n2015-01-23 11:54:16.475 17425 TRACE oslo.messaging.rpc.dispatcher     result = getattr(endpoint, method)(ctxt, **new_args)\n2015-01-23 11:54:16.475 17425 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.7/site-packages/nova/compute/manager.py\", line 414, in decorated_function\n2015-01-23 11:54:16.475 17425 TRACE oslo.messaging.rpc.dispatcher     return function(self, context, *args, **kwargs)\n2015-01-23 11:54:16.475 17425 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.7/site-packages/nova/exception.py\", line 88, in wrapped\n2015-01-23 11:54:16.475 17425 TRACE oslo.messaging.rpc.dispatcher     payload)\n2015-01-23 11:54:16.475 17425 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.7/site-packages/nova/openstack/common/excutils.py\", line 82, in __exit__\n2015-01-23 11:54:16.475 17425 TRACE oslo.messaging.rpc.dispatcher     six.reraise(self.type_, self.value, self.tb)\n2015-01-23 11:54:16.475 17425 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.7/site-packages/nova/exception.py\", line 71, in wrapped\n2015-01-23 11:54:16.475 17425 TRACE oslo.messaging.rpc.dispatcher     return f(self, context, *args, **kw)\n2015-01-23 11:54:16.475 17425 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.7/site-packages/nova/compute/manager.py\", line 298, in decorated_function\n2015-01-23 11:54:16.475 17425 TRACE oslo.messaging.rpc.dispatcher     pass\n2015-01-23 11:54:16.475 17425 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.7/site-packages/nova/openstack/common/excutils.py\", line 82, in __exit__\n2015-01-23 11:54:16.475 17425 TRACE oslo.messaging.rpc.dispatcher     six.reraise(self.type_, self.value, self.tb)\n2015-01-23 11:54:16.475 17425 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.7/site-packages/nova/compute/manager.py\", line 284, in decorated_function\n2015-01-23 11:54:16.475 17425 TRACE oslo.messaging.rpc.dispatcher     return function(self, context, *args, **kwargs)\n2015-01-23 11:54:16.475 17425 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.7/site-packages/nova/compute/manager.py\", line 326, in decorated_function\n2015-01-23 11:54:16.475 17425 TRACE oslo.messaging.rpc.dispatcher     kwargs['instance'], e, sys.exc_info())\n2015-01-23 11:54:16.475 17425 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.7/site-packages/nova/openstack/common/excutils.py\", line 82, in __exit__\n2015-01-23 11:54:16.475 17425 TRACE oslo.messaging.rpc.dispatcher     six.reraise(self.type_, self.value, self.tb)\n2015-01-23 11:54:16.475 17425 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.7/site-packages/nova/compute/manager.py\", line 314, in decorated_function\n2015-01-23 11:54:16.475 17425 TRACE oslo.messaging.rpc.dispatcher     return function(self, context, *args, **kwargs)\n2015-01-23 11:54:16.475 17425 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.7/site-packages/nova/compute/manager.py\", line 4636, in detach_volume\n2015-01-23 11:54:16.475 17425 TRACE oslo.messaging.rpc.dispatcher     self._detach_volume(context, instance, bdm)\n2015-01-23 11:54:16.475 17425 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.7/site-packages/nova/compute/manager.py\", line 4582, in _detach_volume\n2015-01-23 11:54:16.475 17425 TRACE oslo.messaging.rpc.dispatcher     connection_info = jsonutils.loads(bdm.connection_info)\n2015-01-23 11:54:16.475 17425 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.7/site-packages/nova/openstack/common/jsonutils.py\", line 188, in loads\n2015-01-23 11:54:16.475 17425 TRACE oslo.messaging.rpc.dispatcher     return json.loads(strutils.safe_decode(s, encoding), **kwargs)\n2015-01-23 11:54:16.475 17425 TRACE oslo.messaging.rpc.dispatcher   File \"/usr/lib/python2.7/site-packages/nova/openstack/common/strutils.py\", line 145, in safe_decode\n2015-01-23 11:54:16.475 17425 TRACE oslo.messaging.rpc.dispatcher     raise TypeError(\"%s can't be decoded\" % type(text))\n2015-01-23 11:54:16.475 17425 TRACE oslo.messaging.rpc.dispatcher TypeError: <type 'NoneType'> can't be decoded\n2015-01-23 11:54:16.475 17425 TRACE oslo.messaging.rpc.dispatcher\n\n", 
            "date_created": "2015-01-23 20:14:54.586855+00:00", 
            "author": "https://api.launchpad.net/1.0/~kevpn"
        }, 
        {
            "content": "Hello git-harry, or anyone else affected,\n\nAccepted nova into trusty-proposed. The package will build now and be available at https://launchpad.net/ubuntu/+source/nova/1:2014.1.5-0ubuntu1.3 in a few hours, and then in the -proposed repository.\n\nPlease help us by testing this new package.  See https://wiki.ubuntu.com/Testing/EnableProposed for documentation how to enable and use -proposed.  Your feedback will aid us getting this update out to other Ubuntu users.\n\nIf this package fixes the bug for you, please add a comment to this bug, mentioning the version of the package you tested, and change the tag from verification-needed to verification-done. If it does not fix the bug for you, please add a comment stating that, and change the tag to verification-failed.  In either case, details of your testing will help us make a better decision.\n\nFurther information regarding the verification process can be found at https://wiki.ubuntu.com/QATeam/PerformingSRUVerification .  Thank you in advance!", 
            "date_created": "2015-09-16 15:37:31.438777+00:00", 
            "author": "https://api.launchpad.net/1.0/~arges"
        }, 
        {
            "content": "Deployed Trusty Icehouse with this nova version, ran the test described above and lgtm +1.", 
            "date_created": "2015-09-17 11:23:53.101063+00:00", 
            "author": "https://api.launchpad.net/1.0/~hopem"
        }, 
        {
            "content": "The verification of the Stable Release Update for nova has completed successfully and the package has now been released to -updates.  Subsequently, the Ubuntu Stable Release Updates Team is being unsubscribed and will not receive messages about this bug report.  In the event that you encounter a regression using the package from -updates please report a new bug using ubuntu-bug and tag the bug report regression-update so we can easily find any regressions.", 
            "date_created": "2015-09-23 18:59:05.449744+00:00", 
            "author": "https://api.launchpad.net/1.0/~arges"
        }, 
        {
            "content": "This bug was fixed in the package nova - 1:2014.1.5-0ubuntu1.3\n\n---------------\nnova (1:2014.1.5-0ubuntu1.3) trusty; urgency=medium\n\n  * Attempting to attach the same volume multiple times can cause\n    bdm record for existing attachment to be deleted. (LP: #1349888)\n    - d/p/fix-creating-bdm-for-failed-volume-attachment.patch\n\n -- Edward Hope-Morley <email address hidden>  Tue, 08 Sep 2015 12:32:45 +0100", 
            "date_created": "2015-09-23 19:09:05.911440+00:00", 
            "author": "https://api.launchpad.net/1.0/~janitor"
        }
    ], 
    "closed": "2014-10-01 07:36:45.654234+00:00"
}