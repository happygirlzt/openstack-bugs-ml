{
    "status": "Fix Released", 
    "last_updated": "2014-10-16 08:39:37.275819+00:00", 
    "description": "I am using config drive to boot VMs. In icehouse, I observed that nova rescue fails and leaves the VM in SHUTOFF state.\n\nShort error log:\ninstances/270e299b-90b2-46d5-bf9a-e7f6efe3742e/disk.config.rescue': No such file or directory\n\nDifference in Havana and Icehouse code path:\n\n# Havana\n# Config drive\n\u00a0if configdrive.required_by(instance):\n\u00a0\u00a0\u00a0\u00a0  LOG.info(_('Using config drive'), instance=instance)\n\u00a0\u00a0\u00a0\u00a0  extra_md = {}\n\u00a0\u00a0\u00a0\u00a0\u00a0 if admin_pass:\n\u00a0\u00a0\u00a0\u00a0\u00a0     extra_md['admin_pass'] = admin_pass\n\n\u00a0\u00a0\u00a0\u00a0 \u00a0for f in ('user_name', 'project_name'):\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if hasattr(context, f):\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0    extra_md[f] = getattr(context, f, None)\n\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0inst_md = instance_metadata.InstanceMetadata(instance,\n\u00a0\u00a0\u00a0\u00a0\u00a0  \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0content=files, extra_md=extra_md, network_info=network_info)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0with configdrive.ConfigDriveBuilder(instance_md=inst_md) as cdb:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0    configdrive_path = basepath(fname='disk.config')\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0LOG.info(_('Creating config drive at %(path)s'),\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{'path': configdrive_path}, instance=instance)\n\ndef basepath(fname='', suffix=suffix): << Adds suffix .rescue to disk.config.\n\u00a0\u00a0\u00a0\u00a0return os.path.join(libvirt_utils.get_instance_path(instance),\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fname + suffix)\n\n# Icehouse:\n# Config drive\nif configdrive.required_by(instance):\n\u00a0\u00a0\u00a0\u00a0LOG.info(_('Using config drive'), instance=instance)\n\u00a0\u00a0\u00a0\u00a0extra_md = {}\n\u00a0\u00a0\u00a0\u00a0if admin_pass:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0extra_md['admin_pass'] = admin_pass\n\n\u00a0\u00a0\u00a0\u00a0for f in ('user_name', 'project_name'):\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if hasattr(context, f):\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0extra_md[f] = getattr(context, f, None)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0inst_md = instance_metadata.InstanceMetadata(instance,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0content=files, extra_md=extra_md, network_info=network_info)\n\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0with configdrive.ConfigDriveBuilder(instance_md=inst_md) as cdb:\n\u00a0\u00a0\u00a0\u00a0\u00a0    \u00a0\u00a0\u00a0configdrive_path = self._get_disk_config_path(instance)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0LOG.info(_('Creating config drive at %(path)s'),\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{'path': configdrive_path}, instance=instance)\n\n@staticmethod\ndef _get_disk_config_path(instance):\n\u00a0\u00a0\u00a0\u00a0return os.path.join(libvirt_utils.get_instance_path(instance),\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'disk.config')\n\nThe suffix .rescue is missed here and hence, original disk.config is overwritten.\n\nFollowing change fixed the issue for me:\n\nconfigdrive_path = self._get_disk_config_path(instance, suffix)\n\n@staticmethod\ndef _get_disk_config_path(instance, suffix=''):\n\u00a0\u00a0\u00a0\u00a0return os.path.join(libvirt_utils.get_instance_path(instance),\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'disk.config' + suffix)", 
    "tags": [
        "icehouse-backport-potential", 
        "libvirt"
    ], 
    "importance": "Medium", 
    "heat": 8, 
    "link": "https://bugs.launchpad.net/nova/+bug/1334024", 
    "owner": "https://api.launchpad.net/1.0/~shraddha-pandhe", 
    "id": 1334024, 
    "index": 3938, 
    "openned": "2014-06-24 22:01:02.841094+00:00", 
    "created": "2014-06-24 22:01:02.841094+00:00", 
    "title": "Nova rescue fails for libvirt driver with config drive", 
    "comments": [
        {
            "content": "I am using config drive to boot VMs. In icehouse, I observed that nova rescue fails and leaves the VM in SHUTOFF state.\n\nShort error log: \n/home/y/var/nova/instances/270e299b-90b2-46d5-bf9a-e7f6efe3742e/disk.config.rescue': No such file or directory\n\nDifference in Havana and Icehouse code path:\n\n# Havana\n# Config drive\n        if configdrive.required_by(instance):\n            LOG.info(_('Using config drive'), instance=instance)\n            extra_md = {}\n            if admin_pass:\n                extra_md['admin_pass'] = admin_pass\n\n            for f in ('user_name', 'project_name'):\n                if hasattr(context, f):\n                    extra_md[f] = getattr(context, f, None)\n            inst_md = instance_metadata.InstanceMetadata(instance,\n                content=files, extra_md=extra_md, network_info=network_info)\n            with configdrive.ConfigDriveBuilder(instance_md=inst_md) as cdb:\n                configdrive_path = basepath(fname='disk.config')\n                               LOG.info(_('Creating config drive at %(path)s'),\n                         {'path': configdrive_path}, instance=instance)\n\n\n        def basepath(fname='', suffix=suffix): << Adds suffix .rescue to disk.config.\n            return os.path.join(libvirt_utils.get_instance_path(instance),\n                                fname + suffix)\n\n\n# Icehouse:\n\n# Config drive\n        if configdrive.required_by(instance):\n            LOG.info(_('Using config drive'), instance=instance)\n            extra_md = {}\n            if admin_pass:\n                extra_md['admin_pass'] = admin_pass\n\n            for f in ('user_name', 'project_name'):\n                if hasattr(context, f):\n                    extra_md[f] = getattr(context, f, None)\n            inst_md = instance_metadata.InstanceMetadata(instance,\n                content=files, extra_md=extra_md, network_info=network_info)\n            with configdrive.ConfigDriveBuilder(instance_md=inst_md) as cdb:\n                configdrive_path = self._get_disk_config_path(instance)\n                              LOG.info(_('Creating config drive at %(path)s'),\n                         {'path': configdrive_path}, instance=instance)\n\n     @staticmethod\n    def _get_disk_config_path(instance):\n        return os.path.join(libvirt_utils.get_instance_path(instance),\n                            'disk.config')\n\nThe suffix .rescue is missed here and hence, original disk.config is overwritten.\n\nFollowing change fixed the issue for me:\n\nconfigdrive_path = self._get_disk_config_path(instance, suffix)\n \n@staticmethod\n    def _get_disk_config_path(instance, suffix=''):\n        return os.path.join(libvirt_utils.get_instance_path(instance),\n                            'disk.config' + suffix)\n\n\nComplete Error log:\n\n{\"extra\": {\"project_name\": \"admin\", \"timestamp\": \"2014-06-20T23:00:50.269421\",\n\"auth_token\": \"17fcde000c3040f9981e1804cdaf94fe\", \"remote_address\":\n\"10.220.4.45\", \"quota_class\": null, \"is_admin\": true, \"user\":\n\"dfac8c9e704a4312b0447b26b57a12da\", \"service_catalog\": [], \"tenant\":\n\"13b05759646b41c9a51660a1e653b146\", \"user_id\":\n\"dfac8c9e704a4312b0447b26b57a12da\", \"roles\": [\"admin\"], \"project\":\n\"nova.compute.manager\", \"instance\": \"[instance:\n270e299b-90b2-46d5-bf9a-e7f6efe3742e] \", \"version\": \"unknown\", \"read_deleted\":\n\"no\", \"request_id\": \"req-a7f12cd9-dd23-48fa-9479-ab4e7825ae1e\",\n\"instance_lock_checked\": false, \"project_id\":\n\"13b05759646b41c9a51660a1e653b146\", \"user_name\": \"spandhe\"}, \"thread_name\":\n\"GreenThread-31\", \"process_name\": \"MainProcess\", \"name\":\n\"nova.compute.manager\", \"thread\": 82908816, \"created\": 1403305252.7287409,\n\"process\": 26178, \"relative_created\": 114349619.65203285, \"args\": [],\n\"traceback\": [\"Traceback (most recent call last):\", \"  File\n\\\"/usr/lib/python2.6/site-packages/nova/compute/manager.py\\\", line 2983, in\nrescue_instance\", \"    rescue_image_meta, admin_password)\", \"  File\n\\\"/usr/lib/python2.6/site-packages/nova/virt/libvirt/driver.py\\\", line 2205, in\nrescue\", \"    self._create_domain(xml)\", \"  File\n\\\"/usr/lib/python2.6/site-packages/nova/virt/libvirt/driver.py\\\", line 3562, in\n_create_domain\", \"    domain.XMLDesc(0))\", \"  File\n\\\"/usr/lib/python2.6/site-packages/nova/openstack/common/excutils.py\\\", line\n68, in __exit__\", \"    six.reraise(self.type_, self.value, self.tb)\", \"  File\n\\\"/usr/lib/python2.6/site-packages/nova/virt/libvirt/driver.py\\\", line 3557, in\n_create_domain\", \"    domain.createWithFlags(launch_flags)\", \"  File\n\\\"/usr/lib/python2.6/site-packages/eventlet/tpool.py\\\", line 179, in doit\", \"  \n result = proxy_call(self._autowrap, f, *args, **kwargs)\", \"  File\n\\\"/usr/lib/python2.6/site-packages/eventlet/tpool.py\\\", line 139, in\nproxy_call\", \"    rv = execute(f,*args,**kwargs)\", \"  File\n\\\"/usr/lib/python2.6/site-packages/eventlet/tpool.py\\\", line 77, in tworker\", \"\n   rv = meth(*args,**kwargs)\", \"  File\n\\\"/usr/lib64/python2.6/site-packages/libvirt.py\\\", line 708, in\ncreateWithFlags\", \"    if ret == -1: raise libvirtError\n('virDomainCreateWithFlags() failed', dom=self)\", \"libvirtError: cannot open\nfile\n'/home/y/var/nova/instances/270e299b-90b2-46d5-bf9a-e7f6efe3742e/disk.config.rescue':\nNo such file or directory\"], \"module\": \"manager\", \"filename\": \"manager.py\",\n\"levelno\": 40, \"msecs\": 728.74093055725098, \"pathname\":\n\"/usr/lib/python2.6/site-packages/nova/compute/manager.py\", \"lineno\": 2986,\n\"asctime\": \"2014-06-20 23:00:52,728\", \"msg\": \"Error trying to Rescue Instance\",\n\"message\": \"Error trying to Rescue Instance\", \"funcname\": \"rescue_instance\",\n\"levelname\": \"ERROR\"}", 
            "date_created": "2014-06-24 22:01:02.841094+00:00", 
            "author": "https://api.launchpad.net/1.0/~shraddha-pandhe"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/102645", 
            "date_created": "2014-06-25 21:03:13.738894+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/102645\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=0d781d41fef329294891fdda0c1dac4add5ce7c3\nSubmitter: Jenkins\nBranch:    master\n\ncommit 0d781d41fef329294891fdda0c1dac4add5ce7c3\nAuthor: Shraddha Pandhe <email address hidden>\nDate:   Wed Jun 25 20:56:33 2014 +0000\n\n    Libvirt: Added suffix to configdrive_path required for rescue\n    \n    It was observed that during nova rescue, nova failed to create\n    a rescue disk for disk.config. The reason being that .rescue\n    suffix was missing from the configdrive path. It was working\n    till Havana but the functionality broke in Icehouse. This commit\n    fixes the suffix problem.\n    \n    Unittests have been added to verify following scenarios:\n        1. Make sure that .rescue disks are created when not using\n            config drive\n        2. Make sure that .rescue disks are created when using\n            config drive\n    \n    Closes-Bug: #1334024\n    \n    Change-Id: I87449ffddd047cb84b7b881757ea4c29927b95da\n", 
            "date_created": "2014-07-22 07:26:00.753556+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2014-07-23 14:58:10.523305+00:00"
}