{
    "status": "Fix Released", 
    "last_updated": "2012-06-07 10:05:12.023789+00:00", 
    "description": "I uploaded an image and asked for it's image metadata using the nova API. It showed a bunch of properties like:\n\n metadata architecture   | x86_64                                               |\n| metadata image_location | kranz/oneiric-server-cloudimg-amd64.img.manifest.xml |\n| metadata image_state    | available                                            |\n| metadata kernel_id      | 1                                                    |\n| metadata min_disk       | 0                                                    |\n| metadata min_ram        | 0                                                    |\n| metadata owner          | None                                                 |\n| metadata project_id     | testproject                                          |\n\n\nI then set the metadata to {\"key1\": \"value1\", \"key2\": \"value2\"}\nAsking for the metadata again gives:\n\n metadata key1     | value1               |\n| metadata key2     | value2               |\n| metadata min_disk | 0                    |\n| metadata min_ram  | 0                    |\n| metadata owner    | None                 |\n|\n\nThose other values should not be there. In Essex this seems to not happen.", 
    "tags": [], 
    "importance": "Undecided", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/932368", 
    "owner": "None", 
    "id": 932368, 
    "index": 3843, 
    "openned": "2012-02-14 21:58:53.870129+00:00", 
    "created": "2012-02-14 21:58:53.870129+00:00", 
    "title": "Diablo: Setting image metadata behaves strangely", 
    "comments": [
        {
            "content": "I uploaded an image and asked for it's image metadata using the nova API. It showed a bunch of properties like:\n\n metadata architecture   | x86_64                                               |\n| metadata image_location | kranz/oneiric-server-cloudimg-amd64.img.manifest.xml |\n| metadata image_state    | available                                            |\n| metadata kernel_id      | 1                                                    |\n| metadata min_disk       | 0                                                    |\n| metadata min_ram        | 0                                                    |\n| metadata owner          | None                                                 |\n| metadata project_id     | testproject                                          |\n\n\nI then set the metadata to {\"key1\": \"value1\", \"key2\": \"value2\"}\nAsking for the metadata again gives:\n\n metadata key1     | value1               |\n| metadata key2     | value2               |\n| metadata min_disk | 0                    |\n| metadata min_ram  | 0                    |\n| metadata owner    | None                 |\n|\n\nThose other values should not be there. In Essex this seems to not happen.", 
            "date_created": "2012-02-14 21:58:53.870129+00:00", 
            "author": "https://api.launchpad.net/1.0/~david-kranz"
        }, 
        {
            "content": "Diablo 2011.3.1.", 
            "date_created": "2012-03-02 13:55:13.337848+00:00", 
            "author": "https://api.launchpad.net/1.0/~david-kranz"
        }, 
        {
            "content": "Ok, marking as FixReleased since you say it's fixed in essex\n\nIf you can identify a fix to backport, we can target it at the diablo series", 
            "date_created": "2012-06-07 10:05:03.621334+00:00", 
            "author": "https://api.launchpad.net/1.0/~markmc"
        }
    ], 
    "closed": "2012-06-07 10:05:10.485273+00:00"
}