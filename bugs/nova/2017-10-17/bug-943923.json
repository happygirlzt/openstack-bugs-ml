{
    "status": "Fix Released", 
    "last_updated": "2012-07-05 07:59:51.017905+00:00", 
    "description": "If we try to add only one floating IP (subnet /32) to the cloud with 'nova-mabage' command, nothing appends.\n\nThe 'nova-manage' command uses 'netaddr' python library with class 'IPNetwork' which exclude the network and broadcast addresses. So the floating IP '80.0.0.1/32' for example, is exclude and not added to the floating IP list (without warning or errors).", 
    "tags": [], 
    "importance": "Medium", 
    "heat": 10, 
    "link": "https://bugs.launchpad.net/nova/+bug/943923", 
    "owner": "https://api.launchpad.net/1.0/~jdanjou", 
    "id": 943923, 
    "index": 2783, 
    "openned": "2012-03-01 11:16:27.437193+00:00", 
    "created": "2012-03-01 11:16:27.437193+00:00", 
    "title": "Adding only one floating IP to the cloud", 
    "comments": [
        {
            "content": "If we try to add only one floating IP (subnet /32) to the cloud with 'nova-mabage' command, nothing appends.\n\nThe 'nova-manage' command uses 'netaddr' python library with class 'IPNetwork' which exclude the network and broadcast addresses. So the floating IP '80.0.0.1/32' for example, is exclude and not added to the floating IP list (without warning or errors).", 
            "date_created": "2012-03-01 11:16:27.437193+00:00", 
            "author": "https://api.launchpad.net/1.0/~ethuleau"
        }, 
        {
            "content": "diff --git a/bin/nova-manage b/bin/nova-manage\nindex 08c4133..45f23e2 100755\n--- a/bin/nova-manage\n+++ b/bin/nova-manage\n@@ -702,6 +702,12 @@ class FloatingIpCommands(object):\n             pool = FLAGS.default_floating_pool\n         if not interface:\n             interface = FLAGS.public_interface\n+        if addresses.size == 1:\n+            db.floating_ip_create(admin_context,\n+                                  {'address': str(addresses.ip),\n+                                   'pool': pool,\n+                                   'interface': interface})\n+            return\n         for address in addresses.iter_hosts():\n             db.floating_ip_create(admin_context,\n                                   {'address': str(address),\n@@ -711,7 +717,12 @@ class FloatingIpCommands(object):\n     @args('--ip_range', dest=\"ip_range\", metavar='<range>', help='IP range')\n     def delete(self, ip_range):\n         \"\"\"Deletes floating ips by range\"\"\"\n-        for address in netaddr.IPNetwork(ip_range).iter_hosts():\n+        addresses = netaddr.IPNetwork(ip_range)\n+        if addresses.size == 1:\n+            db.floating_ip_destroy(context.get_admin_context(),\n+                                   str(addresses.ip))\n+            return\n+        for address in addresses.iter_hosts():\n             db.floating_ip_destroy(context.get_admin_context(),\n                                    str(address))\n", 
            "date_created": "2012-03-01 11:17:16.077143+00:00", 
            "author": "https://api.launchpad.net/1.0/~ethuleau"
        }, 
        {
            "content": "", 
            "date_created": "2012-03-01 11:19:14.948903+00:00", 
            "author": "https://api.launchpad.net/1.0/~ethuleau"
        }, 
        {
            "content": "Fix committed to the master. See commit sha e430c8424a62d9d397980899ae0458a5e947704e", 
            "date_created": "2012-03-16 08:59:50.474696+00:00", 
            "author": "https://api.launchpad.net/1.0/~mihgen"
        }
    ], 
    "closed": "2012-03-20 08:43:46.756488+00:00"
}