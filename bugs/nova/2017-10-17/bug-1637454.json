{
    "status": "Invalid", 
    "last_updated": "2016-11-09 12:06:02.763822+00:00", 
    "description": "Environment:\nNUMA node with 2 CPU cores and HyperThreading. It means that we have 4 vCPU: (0, 1) (2, 3) where '()' means siblings. In this case we can boot only 2 VMs with 'require' CPU thread allocation policy because this policy is guarantee that other VMs wouldn't use these cores. If we will try to boot third VM with 'require' policy it will fail  with 'No valid host found'.\n\nBut we still able to boot VMs with 'dedicated' CPU allocation policy on these cores.\n\nSteps to reproduce:\n\n1. Create Flavor with 'require' policy\n\nnova flavor-create numa_required 998 128 0 1\nnova flavor-key numa_required set hw:cpu_policy=dedicated\nnova flavor-key numa_required set hw:cpu_thread_policy=require\n\n2. Create Flavor just with 'dedicated' policy. hw:cpu_thread_policy is this case will be 'prefered' because this is default value.\n\nnova flavor-create numa_dedicated 999 128 0 1\nnova flavor-key numa_dedicated set hw:cpu_policy=dedicated\n\n3. Boot two VMs with 'require' policy\n\nnova boot nova boot --flavor numa_required --image cirros --nic net-id=*** vm1\nnova boot nova boot --flavor numa_required --image cirros --nic net-id=*** vm2\n\n4. Boot VM with 'decicated' policy\n\nnova boot nova boot --flavor numa_dedicated --image cirros --nic net-id=*** vm3\n\nExpected result:\n\n  Fail with 'No valid host found'.\n\nActual result:\n\n  VM will be successfully booted.", 
    "tags": [
        "numa"
    ], 
    "importance": "Medium", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1637454", 
    "owner": "https://api.launchpad.net/1.0/~snikitin", 
    "id": 1637454, 
    "index": 4666, 
    "openned": "2016-10-28 09:59:34.202003+00:00", 
    "created": "2016-10-28 09:59:34.202003+00:00", 
    "title": "'require' CPU thread allocation policy does not always guarantee that other VMs wouldn't use current CPU core", 
    "comments": [
        {
            "content": "Environment:\nNUMA node with 2 CPU cores and HyperThreading. It means that we have 4 vCPU: (0, 1) (2, 3) where '()' means siblings. In this case we can boot only 2 VMs with 'require' CPU thread allocation policy because this policy is guarantee that other VMs wouldn't use these cores. If we will try to boot third VM with 'require' policy it will fail  with 'No valid host found'.\n\nBut we still able to boot VMs with 'dedicated' CPU allocation policy on these cores.\n\nSteps to reproduce:\n\n1. Create Flavor with 'require' policy\n\nnova flavor-create numa_required 998 128 0 1\nnova flavor-key numa_required set hw:cpu_policy=dedicated\nnova flavor-key numa_required set hw:cpu_thread_policy=require\n\n2. Create Flavor just with 'dedicated' policy. hw:cpu_thread_policy is this case will be 'prefered' because this is default value.\n\nnova flavor-create numa_dedicated 999 128 0 1\nnova flavor-key numa_dedicated set hw:cpu_policy=dedicated\n\n3. Boot two VMs with 'require' policy\n\nnova boot nova boot --flavor numa_required --image cirros --nic net-id=*** vm1\nnova boot nova boot --flavor numa_required --image cirros --nic net-id=*** vm2\n\n4. Boot VM with 'decicated' policy\n\nnova boot nova boot --flavor numa_dedicated --image cirros --nic net-id=*** vm3\n\nExpected result:\n\n  Fail with 'No valid host found'.\n\nActual result:\n\n  VM will be successfully booted.", 
            "date_created": "2016-10-28 09:59:34.202003+00:00", 
            "author": "https://api.launchpad.net/1.0/~snikitin"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/391416", 
            "date_created": "2016-10-28 10:36:11.586040+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "I don't think this is a bug.  http://docs.openstack.org/admin-guide/compute-flavors.html describes \"require\" like this:\n\nrequire: The host must have an SMT architecture. Each vCPU is allocated on thread siblings. If the host does not have an SMT architecture, then it is not used. If the host has an SMT architecture, but not enough cores with free thread siblings are available, then scheduling fails.\n\nSo there are no guarantees that \"left over\" HT siblings are reserved.\n\nThe main use-case of \"require\" (that I'm aware of, anyway) is that you have a load that performs better when running on HT siblings of a single core, so it really only makes sense if the number of vCPUs in the guest is a multiple of the number of HT siblings of a core.  In that scenario there won't be any \"left over\" HT siblings on the host anyways.", 
            "date_created": "2016-11-08 18:18:37.229855+00:00", 
            "author": "https://api.launchpad.net/1.0/~cbf123"
        }, 
        {
            "content": "Chris is right", 
            "date_created": "2016-11-09 12:05:52.902607+00:00", 
            "author": "https://api.launchpad.net/1.0/~snikitin"
        }
    ], 
    "closed": "2016-11-09 12:06:00.174292+00:00"
}