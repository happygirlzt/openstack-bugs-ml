{
    "status": "Expired", 
    "last_updated": "2017-08-27 04:18:25.594455+00:00", 
    "description": "1. Version\nnova: 2014.1\nhypervisor: rhel7 + libvirt + kvm\n\n2. Description\nAfter one instance was evacuated from hostA to hostB, then delete this instance. \nThen started 'nova-compute' service of hostA, and found in nova-compute.log:\n2015-04-09 10:39:52.201 1977 WARNING nova.compute.manager [-] Found 0 in the database and 1 on the hypervisor.\n\n3. Reproduce steps:\n* Launch one instance INST on hostA\n* Stop 'nova-compute' service on hostA, and wait for down(use 'nova service-list')\n* Evacuate INST to hostB\n* After evacuated successfully, delete INST\n* Start 'nova-compute' service on hostA\n\nExpected results:\n* INST on hostA's hypervisor should be destroyed\n\nActual result:\n* INST was alive on hostA's hypervisor.\n\n4. Tips\nI checked the source, and found:\nnova.compute.manager.py\ndef _destroy_evacuated_instances(self, context):\n....\n        filters = {'deleted': False}   # Here filtered the deleted instance. Is it more proper that checked the deleted instances?\n        local_instances = self._get_instances_on_driver(context, filters)", 
    "tags": [
        "openstack-version.icehouse"
    ], 
    "importance": "Undecided", 
    "heat": 22, 
    "link": "https://bugs.launchpad.net/nova/+bug/1441950", 
    "owner": "None", 
    "id": 1441950, 
    "index": 6761, 
    "openned": "2015-04-09 03:46:35.346249+00:00", 
    "created": "2015-04-09 03:46:35.346249+00:00", 
    "title": "instance on source host can not be cleaned after evacuating", 
    "comments": [
        {
            "content": "1. Version\nnova: 2014.1\nhypervisor: rhel7 + libvirt + kvm\n\n2. Description\nAfter one instance was evacuated from hostA to hostB, then delete this instance. \nThen started 'nova-compute' service of hostA, and found in nova-compute.log:\n2015-04-09 10:39:52.201 1977 WARNING nova.compute.manager [-] Found 0 in the database and 1 on the hypervisor.\n\n3. Reproduce steps:\n* Launch one instance INST on hostA\n* Stop 'nova-compute' service on hostA, and wait for down(use 'nova service-list')\n* Evacuate INST to hostB\n* After evacuated successfully, delete INST\n* Start 'nova-compute' service on hostA\n\nExpected results:\n* INST on hostA's hypervisor should be destroyed\n\nActual result:\n* INST was alive on hostA's hypervisor.\n\n4. Tips\nI checked the source, and found:\nnova.compute.manager.py\ndef _destroy_evacuated_instances(self, context):\n....\n        filters = {'deleted': False}   # Here filtered the deleted instance. Is it more proper that checked the deleted instances?\n        local_instances = self._get_instances_on_driver(context, filters)", 
            "date_created": "2015-04-09 03:46:35.346249+00:00", 
            "author": "https://api.launchpad.net/1.0/~mark-xiett"
        }, 
        {
            "content": "Bug reproduced exactly as mentioned above, with:\nVerstion: Nova 2014.2.2\nHypervisor: Ubuntu 14.04 + libvirt + kvm\n", 
            "date_created": "2015-04-09 07:27:07.880106+00:00", 
            "author": "https://api.launchpad.net/1.0/~zhengzhenyu"
        }, 
        {
            "content": "So evacuate should only be used on hosts that are never brought back to life, hence the mark host down API call we now have.\n\nGiven a few months ago significant rework of evacuate has been done. Do we still see this error on master?", 
            "date_created": "2016-07-12 10:31:02.873623+00:00", 
            "author": "https://api.launchpad.net/1.0/~johngarbutt"
        }, 
        {
            "content": "> So evacuate should only be used on hosts that are never brought back to\n> life, hence the mark host down API call we now have.\n\nThis sounds like a big surprise to me, so I hope you don't mind if I ask for some clarification, given that this bug affects us too:\n\nYou are saying that if a machine running nova-compute has a hardware failure, and it is desired to bring that machine back to life after fixing the hardware failure, running \"nova evacuate\" is not an appropriate first step in the remediation?\n\nOr it is an appropriate first step, but the machine should be reinstalled from scratch before resurrecting it?\n\nOr it should be appropriate, but there is some bug in nova preventing it from working which needs fixing? (In which case, please let me know if there is a way we can help with that.)\n\nOr something else?\n\nThanks a lot!", 
            "date_created": "2016-07-21 15:31:10.074112+00:00", 
            "author": "https://api.launchpad.net/1.0/~adam.spiers"
        }, 
        {
            "content": "Automatically discovered version icehouse in description. If this is incorrect, please update the description to include 'nova version: ...'", 
            "date_created": "2017-06-27 16:03:13.296097+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "[Expired for OpenStack Compute (nova) because there has been no activity for 60 days.]", 
            "date_created": "2017-08-27 04:18:21.712460+00:00", 
            "author": "https://api.launchpad.net/1.0/~janitor"
        }
    ], 
    "closed": "2017-08-27 04:18:22.481278+00:00"
}