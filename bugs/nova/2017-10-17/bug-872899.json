{
    "status": "Fix Released", 
    "last_updated": "2012-09-27 15:43:34.944824+00:00", 
    "description": "We have seen this issue in a Diablo-2 setup. If a compute server is down (nova-compute not running / node crashed) the VMs hosted on that server cannot be terminated - hence are consuming instance/memory/floating_ip/ ... quota.  A temporary crash / halt can be fixed easily enough by a host reboot, but a permanent host death is not so easy to fix.\n\nWe need to have some way of updating the DB to wipe an instance even if the appropriate host is not contactable - and of having nodes check on boot if \"their\" VMs are still all there.\n\n\n\nVersion = 2011.3-d2 + some bug fixes.", 
    "tags": [
        "folsom-rc1", 
        "hp"
    ], 
    "importance": "Medium", 
    "heat": 34, 
    "link": "https://bugs.launchpad.net/nova/+bug/872899", 
    "owner": "https://api.launchpad.net/1.0/~jogo", 
    "id": 872899, 
    "index": 2595, 
    "openned": "2011-10-12 14:55:01.974213+00:00", 
    "created": "2011-10-12 14:55:01.974213+00:00", 
    "title": "VMs cannot be terminated if compute host is dead", 
    "comments": [
        {
            "content": "We have seen this issue in a Diablo-2 setup. If a compute server is down (nova-compute not running / node crashed) the VMs hosted on that server cannot be terminated - hence are consuming instance/memory/floating_ip/ ... quota.  A temporary crash / halt can be fixed easily enough by a host reboot, but a permanent host death is not so easy to fix.\n\nWe need to have some way of updating the DB to wipe an instance even if the appropriate host is not contactable - and of having nodes check on boot if \"their\" VMs are still all there.\n\n\n\nVersion = 2011.3-d2 + some bug fixes.", 
            "date_created": "2011-10-12 14:55:01.974213+00:00", 
            "author": "https://api.launchpad.net/1.0/~gavin-brebner-orange"
        }, 
        {
            "content": "What do expect to happen when:\n\na) nova-compute stops working, but the physical machine is up\n\nb) the nova-compute server dies\n\nAnd we can't necessarily differentiate the two.", 
            "date_created": "2012-03-01 22:35:00.780480+00:00", 
            "author": "https://api.launchpad.net/1.0/~jogo"
        }, 
        {
            "content": "Why this bug has \"Low\" priority? I think it's critical for users. Instance is hanging on Rebooting/Deleting. Openstack should remove instances from dead hosts and show proper warning to users or even run deleted instances' snapshots on other hosts. Or something like that.", 
            "date_created": "2012-05-04 21:20:26.802785+00:00", 
            "author": "https://api.launchpad.net/1.0/~semyazz"
        }, 
        {
            "content": "At this moment, the only way I can figure out is to remove related records from Nova DB about the dead VM. \nI remember there was a thread awhile back discussing this issue. The problem seems  that there is no way to distinguish if the actual VM went dead or the host went dead.  Also some status problems for VM, it was a long discussion. My proposal is to add a command to nova-manage to actually remove the db records, so the removal of a VM is completely up to the human who performs this command, he or she will be responsible to determine the real cause. ", 
            "date_created": "2012-08-10 12:56:47.339881+00:00", 
            "author": "https://api.launchpad.net/1.0/~litong01"
        }, 
        {
            "content": "Couldn't we do a check using nova.utils.service_is_up(service) ? If it's not up, remove the record from DB.\n\nservice = db.service_get_by_host(instance['host']\nservice_is_up(service)", 
            "date_created": "2012-08-28 09:32:17.134974+00:00", 
            "author": "https://api.launchpad.net/1.0/~sammiestoel"
        }, 
        {
            "content": "Sam,  If a compute node goes down for a finite period of time, we want to leave the record in the DB to potentially recover the VMs when the compute node powers up.\n\n\nTong, adding a command to nova-manage to remove records sounds like a good compromise.", 
            "date_created": "2012-08-28 16:58:16.990972+00:00", 
            "author": "https://api.launchpad.net/1.0/~jogo"
        }, 
        {
            "content": "Hi Joe,\n\nThanks for replying me! I'm still a newb with Openstack and learning a lot about it, but looking at the terminate_instance functionalliy, I can see that the record of the instance is being destroyed anyway:\n\nA self.db.instance_destroy(context, instance_uuid) is being called in ComputeManager._delete_instance after the instance gets shutdown and volumes cleaned up etc.\n\n_delete_instance is being called from terminate_instance, so in fact the record is not left in the DB, or maybe it is. But I think we should also call the self.db.instance_destroy function if the host is not up, it just means we don't have to shut down the instance, because it wasn't functioning anyway?\n\nMy reasoning: They are terminating so why not remove the record from the database as that is what happens anyway when you terminate an instance, the only difference being we don't have to shutdown.\n\nA flaw in this approach, if the host comes up again the resources(Volumes) should still be cleaned up I guess? ", 
            "date_created": "2012-08-29 01:54:03.281221+00:00", 
            "author": "https://api.launchpad.net/1.0/~sammiestoel"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/12231", 
            "date_created": "2012-08-31 00:08:12.972521+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Sam, I am working on a patch to do exactly what you outlined", 
            "date_created": "2012-08-31 00:12:54.474619+00:00", 
            "author": "https://api.launchpad.net/1.0/~jogo"
        }, 
        {
            "content": "Hehe nice job, I also wanna get started on contributing :) Just looked at your patch.\n", 
            "date_created": "2012-08-31 01:38:06.637468+00:00", 
            "author": "https://api.launchpad.net/1.0/~sammiestoel"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/12231\nCommitted: http://github.com/openstack/nova/commit/77dd6a0b37652bc163d4ad3083e29af55f2b9a5d\nSubmitter: Jenkins\nBranch:    master\n\ncommit 77dd6a0b37652bc163d4ad3083e29af55f2b9a5d\nAuthor: Joe Gordon <email address hidden>\nDate:   Fri Aug 31 00:04:33 2012 +0000\n\n    Allow for deleting VMs from  down compute nodes.\n    \n    Fix bug 872899\n    \n    If compute node service_is_up returns false, just delete the VM from\n    the database. If compute node recovers, setting\n    running_deleted_instance_action=reap will clean up the node.\n    \n    Change-Id: Ibb5f1e22c2e482d304c59a485a04b882ead0c67d\n", 
            "date_created": "2012-09-14 07:13:19.879218+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2012-09-19 06:35:51.889152+00:00"
}