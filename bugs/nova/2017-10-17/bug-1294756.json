{
    "status": "Fix Released", 
    "last_updated": "2014-04-17 09:18:53.517158+00:00", 
    "description": "In db.sqlalchemy.api.instance_get_all_by_filters() there is code that looks like this:\n\nif not filters.pop('soft_deleted', False):\n    query_prefix = query_prefix.\\\n        filter(models.Instance.vm_state != vm_states.SOFT_DELETED)\n\n\nIn sqlalchemy a comparison against a non-null value will not match null values, so the above filter will not return objects where vm_state is NULL.\n\nThe problem is that in the Instance object the \"vm_state\" field is declared as nullable.  In many cases \"vm_state\" will in fact have a value, but in get_test_instance() in test/utils.py the value of \"vm_state\" is not specified.\n\nGiven the above, it seems that either we need to configure \"models.Instance.vm_state\" as not nullable (and deal with the fallout), or else we need to update instance_get_all_by_filters() to explicitly check for None--something like this perhaps:\n\nif not filters.pop('soft_deleted', False):\n    query_prefix = query_prefix.\\\n        filter(or_(models.Instance.vm_state != vm_states.SOFT_DELETED,\n                   models.Instance.vm_state == None))\n\nIf we want to fix the query, I'll happily submit the updated code.", 
    "tags": [
        "db"
    ], 
    "importance": "Undecided", 
    "heat": 8, 
    "link": "https://bugs.launchpad.net/nova/+bug/1294756", 
    "owner": "https://api.launchpad.net/1.0/~cbf123", 
    "id": 1294756, 
    "index": 5933, 
    "openned": "2014-03-19 17:00:31.663266+00:00", 
    "created": "2014-03-19 17:00:31.663266+00:00", 
    "title": "missing test for None in sqlalchemy query filter", 
    "comments": [
        {
            "content": "In db.sqlalchemy.api.instance_get_all_by_filters() there is code that looks like this:\n\nif not filters.pop('soft_deleted', False):\n    query_prefix = query_prefix.\\\n        filter(models.Instance.vm_state != vm_states.SOFT_DELETED)\n\n\nIn sqlalchemy a comparison against a non-null value will not match null values, so the above filter will not return objects where vm_state is NULL.\n\nThe problem is that in the Instance object the \"vm_state\" field is declared as nullable.  In many cases \"vm_state\" will in fact have a value, but in get_test_instance() in test/utils.py the value of \"vm_state\" is not specified.\n\nGiven the above, it seems that either we need to configure \"models.Instance.vm_state\" as not nullable (and deal with the fallout), or else we need to update instance_get_all_by_filters() to explicitly check for None--something like this perhaps:\n\nif not filters.pop('soft_deleted', False):\n    query_prefix = query_prefix.\\\n        filter(or_(models.Instance.vm_state != vm_states.SOFT_DELETED,\n                   models.Instance.vm_state == None))\n\nIf we want to fix the query, I'll happily submit the updated code.", 
            "date_created": "2014-03-19 17:00:31.663266+00:00", 
            "author": "https://api.launchpad.net/1.0/~cbf123"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/82869", 
            "date_created": "2014-03-25 17:03:48.605604+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/82869\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=0aecc86987794e3cb433723afbec744a11e1e720\nSubmitter: Jenkins\nBranch:    master\n\ncommit 0aecc86987794e3cb433723afbec744a11e1e720\nAuthor: Chris Friesen <email address hidden>\nDate:   Tue Mar 25 08:29:58 2014 -0600\n\n    Add missing test for None in sqlalchemy query filter\n    \n    In sqlalchemy a comparison against a non-null value will not match\n    null values, so the existing code at the end of\n    db.sqlalchemy.api.instance_get_all_by_filters() will not return\n    instances where vm_state is NULL.\n    \n    This would be fine if the vm_state could never be null, but it\n    is declared as \"nullable\" in the Instance object. In many cases\n    \"vm_state\" will in fact have a value, but not all--in\n    get_test_instance() in test/utils.py the value of \"vm_state\" is not\n    specified.  There may be other similar cases.\n    \n    Accordingly, this commit updates the test to explicitly check for None.\n    \n    Without this fix the unit tests for bug 1292963 will fail because\n    the test instances have a vm_state of None.\n    \n    Closes-Bug: 1294756\n    Related-Bug: 1292963\n    Change-Id: I271cff22dec160fd0e76abadefd0fe06d32c3227\n", 
            "date_created": "2014-03-26 22:16:58.549331+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2014-03-31 19:14:52.867010+00:00"
}