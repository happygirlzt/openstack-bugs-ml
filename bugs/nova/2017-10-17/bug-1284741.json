{
    "status": "Won't Fix", 
    "last_updated": "2015-08-02 23:07:21.570126+00:00", 
    "description": "When an EC2 metadata request is received via the neutron metadata proxy Nova assumes that the X-Forwarded-For item in teh header is the address of the instance:   \n\nhttps://github.com/openstack/nova/blob/master/nova/api/metadata/handler.py#L149\n\nIn fact depending on the network path this could be a comma separated list of of addresses, only the first element of which is the address of the instance. \n\nThe correct handling should be something like:\n\nremote_address = req.headers.get('X-Forwarded-For').split(',')[0]", 
    "tags": [
        "ec2", 
        "low-hanging-fruit"
    ], 
    "importance": "Low", 
    "heat": 12, 
    "link": "https://bugs.launchpad.net/nova/+bug/1284741", 
    "owner": "None", 
    "id": 1284741, 
    "index": 1173, 
    "openned": "2014-02-25 17:29:51.405382+00:00", 
    "created": "2014-02-25 17:29:51.405382+00:00", 
    "title": "EC2 metadata service doesn't account for request forwarding when using neutron metadata-proxy ", 
    "comments": [
        {
            "content": "When an EC2 metadata request is received via the neutron metadata proxy Nova assumes that the X-Forwarded-For item in teh header is the address of the instance:   \n\nhttps://github.com/openstack/nova/blob/master/nova/api/metadata/handler.py#L149\n\nIn fact depending on the network path this could be a comma separated list of of addresses, only the first element of which is the address of the instance. \n\nThe correct handling should be something like:\n\nremote_address = req.headers.get('X-Forwarded-For').split(',')[0]", 
            "date_created": "2014-02-25 17:29:51.405382+00:00", 
            "author": "https://api.launchpad.net/1.0/~philip-day"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/133400", 
            "date_created": "2014-11-10 08:05:47.349389+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Change abandoned by Sean Dague (<email address hidden>) on branch: master\nReview: https://review.openstack.org/133400\nReason: This review is > 4 weeks without comment, and failed Jenkins the last time it was checked. We are abandoning this for now. Feel free to reactivate the review by pressing the restore button and leaving a 'recheck' comment to get fresh test results.", 
            "date_created": "2015-01-23 15:30:04.252914+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/156460", 
            "date_created": "2015-02-17 04:32:51.197335+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "I've commented on the review for this; but proxies might turn up like so:\n\n\nVM -> proxy A -> ns-agent -> metadata-agent -> proxy B -> Nova\n\nOr without the ns-agent\n\nVM -> proxy C -> metadata-agent -> proxy D -> Nova\n\nWe currently fail open when:\n - proxy A is used (the wrong instance data will be returned).\n\nWe fail closed when:\n - proxy B/C/D are used (too many elements, crash in the code)\n\nFixing the case for B and D, which I presume this is about will cause C to fail open and possibly allow obtaining metadata for arbitrary instances (including root password). So I believe we need to ensure that we don't open this up inappropriately, and fix the existing security hole [which is mitigated by the fact that you have to be running a proxy A to be attacked, whereas for C it potentially allowing any instance to be queried would be substantially worse.\n", 
            "date_created": "2015-02-17 05:21:47.583417+00:00", 
            "author": "https://api.launchpad.net/1.0/~lifeless"
        }, 
        {
            "content": "Thank you for comment.\n\nDoes ns-agent means quantum-ns-metadata-proxy?\n\nI took your review as follows.\nIs there anything wrong ?\n\n- arbitary instance -> proxy A (VM in a neutron-namespace)\nREMOTE_ADDR: arbitary instance\n\n- proxy A -> namespace-metadata-proxy \nREMOTE_ADDR: proxy A(changed)\nX-FORWARDED-FOR: REMOTE_ADDR\n\n- namespace-metadata-proxy -> metadata-agent\nX-FORWARDED-FOR : proxy A\n\n- metadata-agent -> nova-metadata-api\nX-FORWARDED-FOR: proxy A\n\nAnd return proxy A's metadata to arbitrary instance inappropriately.\nAdditionally, My patch increases security concern in the case of proxy C used \nand proxy C connects to metadata-agent directly  without metadata-proxy\nbecause metadata-agent trust X-FORWARDED-FOR and pass it on as-is to nova-metadata-api.", 
            "date_created": "2015-02-18 01:22:02.808962+00:00", 
            "author": "https://api.launchpad.net/1.0/~nobuteru-nishida"
        }, 
        {
            "content": "Change abandoned by Joe Gordon (<email address hidden>) on branch: master\nReview: https://review.openstack.org/156460\nReason: This review is > 4 weeks without comment, and failed Jenkins the last time it was checked. We are abandoning this for now. Feel free to reactivate the review by pressing the restore button and leaving a 'recheck' comment to get fresh test results.", 
            "date_created": "2015-05-13 17:24:44.020470+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2015-08-02 23:07:18.472784+00:00"
}