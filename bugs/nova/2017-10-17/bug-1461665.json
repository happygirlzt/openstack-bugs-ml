{
    "status": "Fix Released", 
    "last_updated": "2015-10-15 08:51:42.085249+00:00", 
    "description": "Faced this problem when porting tests to python3. user_quotas[res] field is bring populated with the class object instead of hard_limit. python2 is magically allowing \"user_quotas[res] >= 0\" to succed when that variable has nova.db.sqlalchemy.models.Quota or nova.db.sqlalchemy.models.ProjectQuota\n\nYou can also reproduce this with the following patch:\n\ndiff --git a/nova/db/sqlalchemy/api.py b/nova/db/sqlalchemy/api.py\nindex 16342e1..7e7e43a 100644\n--- a/nova/db/sqlalchemy/api.py\n+++ b/nova/db/sqlalchemy/api.py\n@@ -3428,6 +3428,10 @@ def _calculate_overquota(project_quotas, user_quotas, deltas,\n     for res, delta in deltas.items():\n         # We can't go over-quota if we're not reserving anything or if\n         # we have unlimited quotas.\n+        if not isinstance(user_quotas[res], six.integer_types):\n+            raise Exception('user_quotas[res] is not an integer - %r'\n+                            % user_quotas[res])\n+\n         if user_quotas[res] >= 0 and delta >= 0:\n             # over if the project usage + delta is more than project quota\n             if project_quotas[res] < delta + project_usages[res]['total']:\n\nHere's a sample output:\nhttp://paste.openstack.org/show/260349/", 
    "tags": [
        "db", 
        "testing"
    ], 
    "importance": "Medium", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1461665", 
    "owner": "https://api.launchpad.net/1.0/~mriedem", 
    "id": 1461665, 
    "index": 4267, 
    "openned": "2015-06-03 19:39:36.740317+00:00", 
    "created": "2015-06-03 19:39:36.740317+00:00", 
    "title": "nova.tests.unit.db.test_db_api sets up quotas incorrectly", 
    "comments": [
        {
            "content": "Faced this problem when porting tests to python3. user_quotas[res] field is bring populated with the class object instead of hard_limit. python2 is magically allowing \"user_quotas[res] >= 0\" to succed when that variable has nova.db.sqlalchemy.models.Quota or nova.db.sqlalchemy.models.ProjectQuota\n\nYou can also reproduce this with the following patch:\n\ndiff --git a/nova/db/sqlalchemy/api.py b/nova/db/sqlalchemy/api.py\nindex 16342e1..7e7e43a 100644\n--- a/nova/db/sqlalchemy/api.py\n+++ b/nova/db/sqlalchemy/api.py\n@@ -3428,6 +3428,10 @@ def _calculate_overquota(project_quotas, user_quotas, deltas,\n     for res, delta in deltas.items():\n         # We can't go over-quota if we're not reserving anything or if\n         # we have unlimited quotas.\n+        if not isinstance(user_quotas[res], six.integer_types):\n+            raise Exception('user_quotas[res] is not an integer - %r'\n+                            % user_quotas[res])\n+\n         if user_quotas[res] >= 0 and delta >= 0:\n             # over if the project usage + delta is more than project quota\n             if project_quotas[res] < delta + project_usages[res]['total']:\n\nHere's a sample output:\nhttp://paste.openstack.org/show/260349/", 
            "date_created": "2015-06-03 19:39:36.740317+00:00", 
            "author": "https://api.launchpad.net/1.0/~dims-v"
        }, 
        {
            "content": "Confirmed in IRC, the user_quotas dict should be map of resources to ProjectUserQuota.hard_limit values, the test is setting it up incorrectly.", 
            "date_created": "2015-06-03 19:41:28.430927+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/188231", 
            "date_created": "2015-06-04 02:00:36.001001+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/188231\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=27236e3d6ab163c9032463b781b125ed62cd8afd\nSubmitter: Jenkins\nBranch:    master\n\ncommit 27236e3d6ab163c9032463b781b125ed62cd8afd\nAuthor: Matt Riedemann <email address hidden>\nDate:   Wed Jun 3 19:00:02 2015 -0700\n\n    Fix _quota_reserve test setup for incompatible type checking\n    \n    The db.quota_reserve() method expects to get project_quotas and\n    user_quotas as dicts that map resource types to limits which are ints.\n    \n    The _quota_reserve test setup method was just mapping the resource type\n    to the Quota sqlalchemy dict-like object that was coming back from\n    db.quota_create. Since db._calculate_overquota compares the delta (int)\n    to the user_quotas/project_quotas value, which was a Quota object, and\n    py34 doesn't allow incompatible type checks like that, this fails with\n    py34.\n    \n    This fixes the _quota_reserve test setup method to map the resource type\n    to the hard_limit like the actual DB APIs do in the normal nova.quota\n    flows.  It also has to adjust the setup method to avoid going over-quota\n    immediately due to the limit and usage being the same (which is why we\n    add a buffer to the i value for the limit).\n    \n    Closes-Bug: #1461665\n    \n    Change-Id: I9f5f537eff58fe83caa7bff2fb0800ce9f7272fa\n", 
            "date_created": "2015-06-09 10:30:45.904368+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2015-06-24 12:19:19.243004+00:00"
}