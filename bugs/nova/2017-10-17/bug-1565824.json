{
    "status": "Fix Released", 
    "last_updated": "2016-04-05 12:12:19.338592+00:00", 
    "description": "Config options code like this doesn't generate output in the sample.config file:\n\n    ALL_OPTS = itertools.chain(\n               compute_opts,\n               resource_tracker_opts,\n               allocation_ratio_opts\n               )\n\n\n    def register_opts(conf):\n        conf.register_opts(ALL_OPTS)\n\n\n    def list_opts():\n        return {'DEFAULT': ALL_OPTS}\n\nThe reason is that the generator created by \"itertools.chain\" doesn't get reset after getting used in \"register_opts\". A simple complete example:\n\n    import itertools\n\n    a = [1, 2]\n    b = [3, 4]\n\n    ab = itertools.chain(a, b)\n\n    print(\"printing 'ab' for the first time\")\n    for i in ab:\n\t    print(i)\n\n    print(\"printing 'ab' for the second time\")\n    for i in ab:\n\t    print(i)\n\nThe combined list 'ab' won't get printed a second time. The same thing happens when the oslo.config generator wants to print the sample.config file. This means we use either:\n\n    ab = list(itertools.chain(a, b))\n\nor\n\n    ab = a + b", 
    "tags": [], 
    "importance": "High", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1565824", 
    "owner": "https://api.launchpad.net/1.0/~berrange", 
    "id": 1565824, 
    "index": 1909, 
    "openned": "2016-04-04 14:28:33.376900+00:00", 
    "created": "2016-04-04 14:28:33.376900+00:00", 
    "title": "config option generation doesn't work with itertools.chain generator", 
    "comments": [
        {
            "content": "Config options code like this doesn't generate output in the sample.config file:\n\n    ALL_OPTS = itertools.chain(\n               compute_opts,\n               resource_tracker_opts,\n               allocation_ratio_opts\n               )\n\n\n    def register_opts(conf):\n        conf.register_opts(ALL_OPTS)\n\n\n    def list_opts():\n        return {'DEFAULT': ALL_OPTS}\n\nThe reason is that the generator created by \"itertools.chain\" doesn't get reset after getting used in \"register_opts\". A simple complete example:\n\n    import itertools\n\n    a = [1, 2]\n    b = [3, 4]\n\n    ab = itertools.chain(a, b)\n\n    print(\"printing 'ab' for the first time\")\n    for i in ab:\n\t    print(i)\n\n    print(\"printing 'ab' for the second time\")\n    for i in ab:\n\t    print(i)\n\nThe combined list 'ab' won't get printed a second time. The same thing happens when the oslo.config generator wants to print the sample.config file. This means we use either:\n\n    ab = list(itertools.chain(a, b))\n\nor\n\n    ab = a + b", 
            "date_created": "2016-04-04 14:28:33.376900+00:00", 
            "author": "https://api.launchpad.net/1.0/~mzoeller"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/301166", 
            "date_created": "2016-04-04 14:47:52.876981+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "It looks like this only affects Newton code. No backports to Mitaka necessary.", 
            "date_created": "2016-04-04 14:50:55.730548+00:00", 
            "author": "https://api.launchpad.net/1.0/~mzoeller"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/301166\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=ee53631886fff8c7e9d09b19b3456d0e80c5de88\nSubmitter: Jenkins\nBranch:    master\n\ncommit ee53631886fff8c7e9d09b19b3456d0e80c5de88\nAuthor: Markus Zoeller <email address hidden>\nDate:   Mon Apr 4 16:42:25 2016 +0200\n\n    config option generation doesn't work with a generator\n    \n    The config options won't get emitted into \"sample.config\" when the\n    \"itertools.chain\" method is used to combine multiple lists. The reason\n    is that the generator created by \"itertools.chain\" doesn't get reset\n    after getting used in \"register_opts\". A simple complete example:\n    \n        import itertools\n    \n        a = [1, 2]\n        b = [3, 4]\n    \n        ab = itertools.chain(a, b)\n    \n        print(\"printing 'ab' for the first time\")\n        for i in ab:\n            print(i)\n    \n        print(\"printing 'ab' for the second time\")\n        for i in ab:\n            print(i)\n    \n    The combined list 'ab' won't get printed a second time. The same thing\n    happens when the \"oslo.config\" generator wants to print the file\n    \"sample.config\". The method \"register_opts\" gets called first and\n    sets the cursor of the generator to the end, which means the same\n    generator in \"list_opts\" is already at its end and iterates over\n    nothing.\n    \n    This change creates a list with the generator. This list can be used\n    multiple times, first by \"register_opts\" and then by \"list_opts\".\n    The options get emitted into the \"sample.config\" file again.\n    \n    Closes bug 1565824\n    Change-Id: Ib1bad2d76f34c5557b089f225511adfc0259fdb6\n", 
            "date_created": "2016-04-05 12:12:18.896217+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2016-04-05 12:12:16.187240+00:00"
}