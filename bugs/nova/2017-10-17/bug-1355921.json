{
    "status": "Opinion", 
    "last_updated": "2016-05-17 19:46:13.021810+00:00", 
    "description": "Noticed while testing:\thttps://blueprints.launchpad.net/nova/+spec/virt-driver-vcpu-topology\n\n\nI have a host advertising 16 VCPUs (2 sockets, each 8 cores).   Each core happens to have 8 threads.    (This is on a beefy POWER8 system).    With the above blueprint,  I can now create a 1 socket, 2 core, 8 thread guest.    \n\nAll works fine, except that I noticed \"Free VCPUS:  0' even though I'm really only using two cores.    I'd think I would see 14 free VCPUs in this scenario.      \n\nGuest lscpu output: \n[root@bare-precise ~]# lscpu\nArchitecture:          ppc64\nCPU op-mode(s):        32-bit, 64-bit\nByte Order:            Big Endian\nCPU(s):                16\nOn-line CPU(s) list:   0-15\nThread(s) per core:    8\nCore(s) per socket:    2\nSocket(s):             1\nNUMA node(s):          1\nModel:                 IBM pSeries (emulated by qemu)\nL1d cache:             64K\nL1i cache:             32K\nNUMA node0 CPU(s):     0-15\n\nResulting tracker\n2014-08-12 12:17:18.874 96650 AUDIT nova.compute.resource_tracker [-] Free VCPUS: 0", 
    "tags": [
        "libvirt", 
        "ppc"
    ], 
    "importance": "Wishlist", 
    "heat": 10, 
    "link": "https://bugs.launchpad.net/nova/+bug/1355921", 
    "owner": "None", 
    "id": 1355921, 
    "index": 2852, 
    "openned": "2014-08-12 16:18:29.743890+00:00", 
    "created": "2014-08-12 16:18:29.743890+00:00", 
    "title": "[libvirt] When guest configured for threads, poor VCPU accounting", 
    "comments": [
        {
            "content": "Noticed while testing:\thttps://blueprints.launchpad.net/nova/+spec/virt-driver-vcpu-topology\n\n\nI have a host advertising 16 VCPUs (2 sockets, each 8 cores).   Each core happens to have 8 threads.    (This is on a beefy POWER8 system).    With the above blueprint,  I can now create a 1 socket, 2 core, 8 thread guest.    \n\nAll works fine, except that I noticed \"Free VCPUS:  0' even though I'm really only using two cores.    I'd think I would see 14 free VCPUs in this scenario.      \n\nGuest lscpu output: \n[root@bare-precise ~]# lscpu\nArchitecture:          ppc64\nCPU op-mode(s):        32-bit, 64-bit\nByte Order:            Big Endian\nCPU(s):                16\nOn-line CPU(s) list:   0-15\nThread(s) per core:    8\nCore(s) per socket:    2\nSocket(s):             1\nNUMA node(s):          1\nModel:                 IBM pSeries (emulated by qemu)\nL1d cache:             64K\nL1i cache:             32K\nNUMA node0 CPU(s):     0-15\n\nResulting tracker\n2014-08-12 12:17:18.874 96650 AUDIT nova.compute.resource_tracker [-] Free VCPUS: 0", 
            "date_created": "2014-08-12 16:18:29.743890+00:00", 
            "author": "https://api.launchpad.net/1.0/~jgrimm"
        }, 
        {
            "content": "Hi Jon:\n\nI have tested your issue, but I can't reproduce it. I use below flavor to create a vm with 3vcpus in a host with 8 vcpus\n\n+----------------------------+----------------------------------------------+\n| Property                   | Value                                        |\n+----------------------------+----------------------------------------------+\n| OS-FLV-DISABLED:disabled   | False                                        |\n| OS-FLV-EXT-DATA:ephemeral  | 0                                            |\n| disk                       | 1                                            |\n| extra_specs                | {\"hw:cpu_cores\": \"1\", \"hw:cpu_sockets\": \"3\"} |\n| id                         | 4c8ffddf-1a07-4aea-bb44-687fc9c6ae46         |\n| name                       | m1.tiny                                      |\n| os-flavor-access:is_public | True                                         |\n| ram                        | 512                                          |\n| rxtx_factor                | 1.0                                          |\n| swap                       |                                              |\n| vcpus                      | 3                                            |\n+----------------------------+----------------------------------------------+\n\nthen , I can see the extra_specs whic I set work to vm:\n/usr/bin/kvm-spice -S -M pc-1.1 -enable-kvm -m 512 -smp 3,sockets=3,cores=1,threads=1 -name instance-00000004 -uuid b7198295-3667-4abe-b9d4-07fb5e977550 -smbios type=1,manufacturer=OpenStack Foundation,product=OpenStack ......\n\nIn additon, I see below log from nova-compute.log:\nAUDIT nova.compute.resource_tracker [-] Free VCPUS: 5\n", 
            "date_created": "2014-08-13 02:28:03.112513+00:00", 
            "author": "https://api.launchpad.net/1.0/~271025598-9"
        }, 
        {
            "content": "Hi there.    You didn't actually setup a configuration that would create a VM with threads which was the condition I wrote the bug against.  \n\n\"  smp 3,sockets=3,cores=1,threads=1 \"\n\nThanks!", 
            "date_created": "2014-08-13 04:44:55.693559+00:00", 
            "author": "https://api.launchpad.net/1.0/~jgrimm"
        }, 
        {
            "content": "What I believe is happening:   The hypervisor treats available VCPUs as sockets*cores.    But when threads are assigned for VCPUs (via mechanisms in new blueprint).. that's what throws off the accounting, as it simply substracts guest VCPUs from the overall total VCPUs available.     Suggestion would be to only count guest cores against the accounting (since that's what the hypervisor is calling an available VCPU. ", 
            "date_created": "2014-08-13 04:53:34.736322+00:00", 
            "author": "https://api.launchpad.net/1.0/~jgrimm"
        }, 
        {
            "content": "Marking this as wishlist because it's really an enhancement based on the fact that power processors use a very different topology than we're expecting.", 
            "date_created": "2014-09-09 16:25:03.832944+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "Hey Sean, did you test that it behaved properly on x86?   It wasn't clear from your triage comment that you are just assuming that its ppc only or had actuallly tested it.  I didn't have one handy at the time, but my reason for opening bug was partly to see if it really was a ppc ism or not.   ", 
            "date_created": "2014-09-18 21:29:47.769670+00:00", 
            "author": "https://api.launchpad.net/1.0/~jgrimm"
        }, 
        {
            "content": "Finally got around to setting up x86 to try it there. \n\nSame behavior. \n\nCreated a 8VCPU guest with 4 sockets, 1 core/socket, 2 threads/core   (My physical topology on the x86 system is 4 core, 2thread/core.     As expected per original bug write-up.. it consumed 8VCPUs. \n\n\nThat being said, it still may be wishlist bug, but its not a power-ism as asserted in https://bugs.launchpad.net/nova/+bug/1355921/comments/4  --- same behavior on x86", 
            "date_created": "2014-10-02 02:55:12.447903+00:00", 
            "author": "https://api.launchpad.net/1.0/~jgrimm"
        }, 
        {
            "content": "Doh. Ignore my comment #6.  Just realized that this is indeed different than on x86 and likely a powerism.  Recanting for now (and I should have seen sooner) as there is indeed an oddity in host OS view of CPU topology when SMT=off on the host (basically anything but first thread on a core shows as offline.   ", 
            "date_created": "2014-10-02 03:06:12.431615+00:00", 
            "author": "https://api.launchpad.net/1.0/~jgrimm"
        }, 
        {
            "content": "This wishlist bug has been open a year without any activity. I'm going to move it to \"Opinion / Wishlist\", which is an easily-obtainable queue of older requests that have come on. \n\nIn case you want to work on that, consider writing a blueprints [1] and spec [2]. I'll recommend to read [3] if not yet done. The effort to implement the requested feature is then driven only by the blueprint (and spec).\n\nReferences:\n[1] https://blueprints.launchpad.net/nova/\n[2] https://github.com/openstack/nova-specs\n[3] https://wiki.openstack.org/wiki/Blueprints", 
            "date_created": "2016-05-17 16:49:02.379300+00:00", 
            "author": "https://api.launchpad.net/1.0/~mzoeller"
        }, 
        {
            "content": "libvirt-python reports number of cores instead of vcpus for power when using SMT=off:\nhttps://github.com/libvirt/libvirt-python/blob/master/libvirt-override.c#L2770\n\nLibvirt needs to report the number of hardware threads in the machine as the number of vcpus available.\n\n\n", 
            "date_created": "2016-05-17 19:46:12.513200+00:00", 
            "author": "https://api.launchpad.net/1.0/~rafaelfolco"
        }
    ], 
    "closed": "2016-05-17 16:48:51.454001+00:00"
}