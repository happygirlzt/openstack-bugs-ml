{
    "status": "Fix Released", 
    "last_updated": "2014-04-17 08:54:51.811282+00:00", 
    "description": "A recent change https://review.openstack.org/#/c/52189/9  introduced the automatic disable / re-enable of nova-compute when connection to libvirt is lost and recovered.\n\nWhile the idea is a good one the implementation means that any existing disabled status is lost (its very common on a large system for specific  hosts to  have been disabled by an administrator for  a number of reasons, e.g. new servers still being commissioned, planned maintenance,  reserved capacity, etc).   As implemented this change will remove that disables status - returning nodes to the state where instances are scheduled to them even when the admin has explicit tried to prevent this.\n\nSuggest that this change is backed out and replaced by an additional status value on each service so that there is separation between manual service enable/disable and automatic enable/disable based on detected errors.", 
    "tags": [
        "havana-backport-potential", 
        "libvirt"
    ], 
    "importance": "Medium", 
    "heat": 22, 
    "link": "https://bugs.launchpad.net/nova/+bug/1250049", 
    "owner": "https://api.launchpad.net/1.0/~jan-grant", 
    "id": 1250049, 
    "index": 3696, 
    "openned": "2013-11-11 11:23:06.883392+00:00", 
    "created": "2013-11-11 11:23:06.883392+00:00", 
    "title": "Recent change overwrites Admin set disabled status on libvirt error", 
    "comments": [
        {
            "content": "A recent change ( https://gerrit.hpcloud.net/#/c/19491/ )    introduced the automatic disable / re-enable of nova-compute when connection to libvirt is lost and recovered.\n\nWhile the idea is a good one the implementation means that any existing disabled status is lost (its very common on a large system for specific  hosts to  have been disabled by an administrator for  a number of reasons, e.g. new servers still being commissioned, planned maintenance,  reserved capacity, etc).   As implemented this change will remove that disables status - returning nodes to the state where instances are scheduled to them even when the admin has explicit tried to prevent this.\n\nSuggest that this change is backed out and replaced by an additional status value on each service so that there is separation between manual service enable/disable and automatic enable/disable based on detected errors.", 
            "date_created": "2013-11-11 11:23:06.883392+00:00", 
            "author": "https://api.launchpad.net/1.0/~philip-day"
        }, 
        {
            "content": "Looking at the change it current just passes \"\" as the disable reason string when connection to libvirtd is lost.\n\nIt seems that we could just enhance the code to pass a pre-determined string \"Libvirtd offline\" and then when connection to libivrtd is re-established, we can check for that disable reason, to see if we should automatically  re-enable it or not.\n\nIf we wanted to avoid the string reason comparison, then adding eithe boolean flag to to track automatic vs manual disablement could be an option.\n\nI think this could be done as a followup patch - don't see a compelling reason to revert the existing patch", 
            "date_created": "2013-11-12 10:31:16.433891+00:00", 
            "author": "https://api.launchpad.net/1.0/~berrange"
        }, 
        {
            "content": "Change reference should be:  https://review.openstack.org/#/c/52189/\n\n@Dan:  My reading of the code is that at the moment the disable reason will be set to:   \"Connection to libvirt lost: %s\"\n\nMy reason for saying this needs to be reverted in the short term is that as it stands it brakes a production system in a potentially dangerous way by re-enabling hosts that are meant to be kept disabled.  If there is a quick fix, i.e.  if adding logic on the contents of the reason string is going to be acceptable to yourself and Dan Smith then I can see that could be done as rapid fix.  \n\nHowever if we have to go down the route of adding additional state to the ServiceGroup API, which will mean a DB migration, then I don't think the change can stay in the system until that works its way through the review process.", 
            "date_created": "2013-11-12 12:49:45.650487+00:00", 
            "author": "https://api.launchpad.net/1.0/~philip-day"
        }, 
        {
            "content": "https://review.openstack.org/#/c/56224\n\nThis is an implementation of @Dan's suggestion. Automatically disabling a host will prepend a fixed string to the reason field. A host will only be automatically enabled if it was automatically disabled; operator disabling can/will override this behaviour.", 
            "date_created": "2013-11-13 14:57:47.804257+00:00", 
            "author": "https://api.launchpad.net/1.0/~jan-grant"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/56224\nCommitted: http://github.com/openstack/nova/commit/8fc9d8108e946013a9c58f0cc20d8b4e430e6286\nSubmitter: Jenkins\nBranch:    master\n\ncommit 8fc9d8108e946013a9c58f0cc20d8b4e430e6286\nAuthor: Jan Grant <email address hidden>\nDate:   Wed Nov 13 10:43:40 2013 +0000\n\n    Conditionalise automatic enabling of disabled host\n    \n    The change Ib8d67838ceb73c5b1cdc9498c17b335e9e5bb6f3 introduced\n    automatic behaviour to the nova-compute hosts, which will now\n    automatically disable themselves if they lose contact with libvirtd,\n    and re-endable themselves on a successful reconnection.\n    \n    However, this tramples over any operational service disablement\n    that may be in place (on an otherwise working host) for any number\n    of good reasons.\n    \n    As suggested in bug #1250049, this is a quick fix which attaches\n    a prefix to any host disable_reason string, and only re-enables\n    a host if that string is still present.\n    \n    Fixes-bug: #1250049\n    Change-Id: Ia7544a357d1385db5fa92e500cb691f49436cfc9\n", 
            "date_created": "2013-11-21 23:54:25.284379+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2013-12-04 10:27:40.155737+00:00"
}