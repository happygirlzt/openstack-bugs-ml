{
    "status": "Fix Released", 
    "last_updated": "2011-09-22 12:56:14.956834+00:00", 
    "description": "After upgrading nova-compute from 2011.3~d4~20110812.1417-0ubuntu1 to 2011.3~d4-0ubuntu1 on Oneiric, the nova-compute daemon crashes with the below message. It looks to me like one of the security groups may no longer validate correctly. I have also included the user's security groups.\n\nRestarting nova-compute has the same effect each time of the daemon crashing.\n\nCrash/error log:\n\n2011-08-31 19:04:52,680 DEBUG nova.virt.libvirt.firewall [-] Adding security group rule: <nova.db.sqlalchemy.models.SecurityGroupIngressRule object at 0x4eec210> from (pid=22771) instance_rules /usr/lib/pymodules/python2.7/nova/virt/libvirt/firewall.py:650\n2011-08-31 19:04:52,680 INFO nova.virt.libvirt.firewall [-] Using cidr '0.0.0.0/0'\n2011-08-31 19:04:52,680 INFO nova.virt.libvirt.firewall [-] Using fw_rules: ['-m state --state INVALID -j DROP', '-m state --state ESTABLISHED,RELATED -j ACCEPT', '-j $provider', u'-s 172.16.60.1 -p udp --sport 67 --dport 68 -j ACCEPT', u'-s 172.16.60.0/24 -j ACCEPT', '-j ACCEPT -p tcp --dport 22 -s 0.0.0.0/0']\n2011-08-31 19:04:52,680 DEBUG nova.virt.libvirt.firewall [-] Adding security group rule: <nova.db.sqlalchemy.models.SecurityGroupIngressRule object at 0x4eec290> from (pid=22771) instance_rules /usr/lib/pymodules/python2.7/nova/virt/libvirt/firewall.py:650\n2011-08-31 19:04:52,715 INFO nova.virt.libvirt.firewall [-] instance: <nova.db.sqlalchemy.models.Instance object at 0x4203850>\n2011-08-31 19:04:52,770 INFO nova.virt.libvirt.firewall [-] ips: ['172.16.60.26']\n2011-08-31 19:04:52,771 CRITICAL nova [-] sequence item 2: expected string, NoneType found\n(nova): TRACE: Traceback (most recent call last):\n(nova): TRACE:   File \"/usr/bin/nova-compute\", line 48, in <module>\n(nova): TRACE:     service.wait()\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.7/nova/service.py\", line 367, in wait\n(nova): TRACE:     _launcher.wait()\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.7/nova/service.py\", line 107, in wait\n(nova): TRACE:     service.wait()\n(nova): TRACE:   File \"/usr/lib/python2.7/dist-packages/eventlet/greenthread.py\", line 166, in wait\n(nova): TRACE:     return self._exit_event.wait()\n(nova): TRACE:   File \"/usr/lib/python2.7/dist-packages/eventlet/event.py\", line 116, in wait\n(nova): TRACE:     return hubs.get_hub().switch()\n(nova): TRACE:   File \"/usr/lib/python2.7/dist-packages/eventlet/hubs/hub.py\", line 177, in switch\n(nova): TRACE:     return self.greenlet.switch()\n(nova): TRACE:   File \"/usr/lib/python2.7/dist-packages/eventlet/greenthread.py\", line 192, in main\n(nova): TRACE:     result = function(*args, **kwargs)\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.7/nova/service.py\", line 77, in run_server\n(nova): TRACE:     server.start()\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.7/nova/service.py\", line 137, in start\n(nova): TRACE:     self.manager.init_host()\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.7/nova/compute/manager.py\", line 175, in init_host\n(nova): TRACE:     net_info)\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.7/nova/virt/libvirt/connection.py\", line 1583, in ensure_filtering_rules_for_instance\n(nova): TRACE:     network_info)\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.7/nova/virt/libvirt/firewall.py\", line 546, in prepare_instance_filter\n(nova): TRACE:     self.add_filters_for_instance(instance)\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.7/nova/virt/libvirt/firewall.py\", line 582, in add_filters_for_instance\n(nova): TRACE:     ipv4_rules, ipv6_rules = self.instance_rules(instance, network_info)\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.7/nova/virt/libvirt/firewall.py\", line 707, in instance_rules\n(nova): TRACE:     fw_rules += [' '.join(subrule)]\n(nova): TRACE: TypeError: sequence item 2: expected string, NoneType found\n(nova): TRACE: \n\nInstance user's security groups:\n\n$ euca-describe-groups | grep user\nGROUP   user_project    default default\nGROUP   user_project    app-internal    Ensemble group for internal\nPERMISSION      user_project    app-internal    ALLOWS  tcp     22      22      FROM    CIDR    0.0.0.0/0\nPERMISSION      user_project    app-internal    ALLOWS                          GRPNAME app-internal\nGROUP   user_project    app-internal-0  Ensemble group for internal machine 0\nGROUP   user_project    app-internal-1  Ensemble group for internal machine 1\nGROUP   user_project    app-internal-2  Ensemble group for internal machine 2", 
    "tags": [
        "security-group"
    ], 
    "importance": "High", 
    "heat": 28, 
    "link": "https://bugs.launchpad.net/nova/+bug/838419", 
    "owner": "https://api.launchpad.net/1.0/~soren", 
    "id": 838419, 
    "index": 470, 
    "openned": "2011-08-31 21:54:53.815027+00:00", 
    "created": "2011-08-31 21:54:53.815027+00:00", 
    "title": "nova-compute crashes when applying a security group rule", 
    "comments": [
        {
            "content": "After upgrading nova-compute from 2011.3~d4~20110812.1417-0ubuntu1 to 2011.3~d4-0ubuntu1 on Oneiric, the nova-compute daemon crashes with the below message. It looks to me like one of the security groups may no longer validate correctly. I have also included the user's security groups.\n\nRestarting nova-compute has the same effect each time of the daemon crashing.\n\nCrash/error log:\n\n2011-08-31 19:04:52,680 DEBUG nova.virt.libvirt.firewall [-] Adding security group rule: <nova.db.sqlalchemy.models.SecurityGroupIngressRule object at 0x4eec210> from (pid=22771) instance_rules /usr/lib/pymodules/python2.7/nova/virt/libvirt/firewall.py:650\n2011-08-31 19:04:52,680 INFO nova.virt.libvirt.firewall [-] Using cidr '0.0.0.0/0'\n2011-08-31 19:04:52,680 INFO nova.virt.libvirt.firewall [-] Using fw_rules: ['-m state --state INVALID -j DROP', '-m state --state ESTABLISHED,RELATED -j ACCEPT', '-j $provider', u'-s 172.16.60.1 -p udp --sport 67 --dport 68 -j ACCEPT', u'-s 172.16.60.0/24 -j ACCEPT', '-j ACCEPT -p tcp --dport 22 -s 0.0.0.0/0']\n2011-08-31 19:04:52,680 DEBUG nova.virt.libvirt.firewall [-] Adding security group rule: <nova.db.sqlalchemy.models.SecurityGroupIngressRule object at 0x4eec290> from (pid=22771) instance_rules /usr/lib/pymodules/python2.7/nova/virt/libvirt/firewall.py:650\n2011-08-31 19:04:52,715 INFO nova.virt.libvirt.firewall [-] instance: <nova.db.sqlalchemy.models.Instance object at 0x4203850>\n2011-08-31 19:04:52,770 INFO nova.virt.libvirt.firewall [-] ips: ['172.16.60.26']\n2011-08-31 19:04:52,771 CRITICAL nova [-] sequence item 2: expected string, NoneType found\n(nova): TRACE: Traceback (most recent call last):\n(nova): TRACE:   File \"/usr/bin/nova-compute\", line 48, in <module>\n(nova): TRACE:     service.wait()\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.7/nova/service.py\", line 367, in wait\n(nova): TRACE:     _launcher.wait()\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.7/nova/service.py\", line 107, in wait\n(nova): TRACE:     service.wait()\n(nova): TRACE:   File \"/usr/lib/python2.7/dist-packages/eventlet/greenthread.py\", line 166, in wait\n(nova): TRACE:     return self._exit_event.wait()\n(nova): TRACE:   File \"/usr/lib/python2.7/dist-packages/eventlet/event.py\", line 116, in wait\n(nova): TRACE:     return hubs.get_hub().switch()\n(nova): TRACE:   File \"/usr/lib/python2.7/dist-packages/eventlet/hubs/hub.py\", line 177, in switch\n(nova): TRACE:     return self.greenlet.switch()\n(nova): TRACE:   File \"/usr/lib/python2.7/dist-packages/eventlet/greenthread.py\", line 192, in main\n(nova): TRACE:     result = function(*args, **kwargs)\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.7/nova/service.py\", line 77, in run_server\n(nova): TRACE:     server.start()\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.7/nova/service.py\", line 137, in start\n(nova): TRACE:     self.manager.init_host()\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.7/nova/compute/manager.py\", line 175, in init_host\n(nova): TRACE:     net_info)\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.7/nova/virt/libvirt/connection.py\", line 1583, in ensure_filtering_rules_for_instance\n(nova): TRACE:     network_info)\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.7/nova/virt/libvirt/firewall.py\", line 546, in prepare_instance_filter\n(nova): TRACE:     self.add_filters_for_instance(instance)\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.7/nova/virt/libvirt/firewall.py\", line 582, in add_filters_for_instance\n(nova): TRACE:     ipv4_rules, ipv6_rules = self.instance_rules(instance, network_info)\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.7/nova/virt/libvirt/firewall.py\", line 707, in instance_rules\n(nova): TRACE:     fw_rules += [' '.join(subrule)]\n(nova): TRACE: TypeError: sequence item 2: expected string, NoneType found\n(nova): TRACE: \n\nInstance user's security groups:\n\n$ euca-describe-groups | grep user\nGROUP   user_project    default default\nGROUP   user_project    app-internal    Ensemble group for internal\nPERMISSION      user_project    app-internal    ALLOWS  tcp     22      22      FROM    CIDR    0.0.0.0/0\nPERMISSION      user_project    app-internal    ALLOWS                          GRPNAME app-internal\nGROUP   user_project    app-internal-0  Ensemble group for internal machine 0\nGROUP   user_project    app-internal-1  Ensemble group for internal machine 1\nGROUP   user_project    app-internal-2  Ensemble group for internal machine 2", 
            "date_created": "2011-08-31 21:54:53.815027+00:00", 
            "author": "https://api.launchpad.net/1.0/~aglenyoung"
        }, 
        {
            "content": "I have tracked this down to security groups.\n\nSteps to reproduce:\n\n1. Add a group:\n    $ euca-add-group user -d \"test group\"\n\n2. Authorize the group:\n    $ euca-authorize --source-group user user\n\n3. Show the groups:\n    $ euca-describe-groups\n    GROUP   user_project     user     test group\n    PERMISSION      user_project     user     ALLOWS                          GRPNAME user\n    GROUP   user_project     default default\n    PERMISSION      user_project     default ALLOWS  tcp     22      22      FROM    CIDR    0.0.0.0/0\n\n4. Start an instance with this security group\n5. Stop and start nova-compute\n6. nova-compute crashes\n\nThe resulting database record is:\n\nsql> SELECT * FROM security_group_rules WHERE protocol IS NULL;\n+---------------------+------------+------------+---------+-----+-----------------+----------+-----------+---------+------+----------+\n| created_at          | updated_at | deleted_at | deleted | id  | parent_group_id | protocol | from_port | to_port | cidr | group_id |\n+---------------------+------------+------------+---------+-----+-----------------+----------+-----------+---------+------+----------+\n| 2011-08-19 05:57:43 | NULL       | NULL       |       0 | 154 |              78 | NULL     |      NULL |    NULL | NULL |       78 |\n+---------------------+------------+------------+---------+-----+-----------------+----------+-----------+---------+------+----------+\n\nThe NULL protocol results in the following args in nova/virt/libvirt/firewall.py:\nargs: ['-j ACCEPT', '-p', None]\n\nResulting in nova-compute crashing.\n\nTemporary Workaround:\n\nDelete the authorization.\n", 
            "date_created": "2011-09-01 16:35:07.306515+00:00", 
            "author": "https://api.launchpad.net/1.0/~aglenyoung"
        }, 
        {
            "content": "Thanks for reporting this. I've reproduced it and added a test for it. I should have a fix shortly.", 
            "date_created": "2011-09-02 11:38:29.373199+00:00", 
            "author": "https://api.launchpad.net/1.0/~soren"
        }, 
        {
            "content": "Andrew, any chance you could take the patch for a spin, just to be sure?\n\n    http://bazaar.launchpad.net/~soren/nova/secgroup-fixes/revision/1524", 
            "date_created": "2011-09-02 12:11:47.957214+00:00", 
            "author": "https://api.launchpad.net/1.0/~soren"
        }, 
        {
            "content": "Thanks for the excellent analysis, by the way.", 
            "date_created": "2011-09-02 12:20:56.298847+00:00", 
            "author": "https://api.launchpad.net/1.0/~soren"
        }, 
        {
            "content": "@Soren: The patch seems to work for me.\n\n= Testing after patching and restarting nova-compute =\n\n$ euca-describe-groups\nGROUP   user_project     default default\nPERMISSION      user_project     default ALLOWS  tcp     22      22      FROM    CIDR    0.0.0.0/0\n\n$ euca-add-group user -d \"test group\"\nGROUP   user     test group\n\n$ euca-authorize --source-group user user\nGROUP   user\nPERMISSION      user     ALLOWS  tcp     GRPNAME user     FROM    CIDR    0.0.0.0/0\n\n$ euca-describe-groups\nGROUP   user_project     user     test group\nPERMISSION      user_project     user     ALLOWS                          GRPNAME user\nGROUP   user_project     default default\nPERMISSION      user_project     default ALLOWS  tcp     22      22      FROM    CIDR    0.0.0.0/0\n\n$ euca-run-instances -k user -g user -t m1.tiny ami-00000002\nRESERVATION     r-8o0h5u0i      user_project     user\nINSTANCE        i-0000029e      ami-00000002                    scheduling      user     0               m1.tiny 2011-09-02T13:33:27Z   unknown zone     aki-00000001    ami-00000000\n\n$ euca-describe-instances i-0000029e\nRESERVATION     r-8o0h5u0i      user_project     user\nINSTANCE        i-0000029e      ami-00000002    172.16.60.71     172.16.60.71     running user     0               m1.tiny 2011-09-02T13:33:27Z    nova    aki-00000001    ami-00000000\n\n/var/log/nova/nova-compute.log:\n2011-09-02 14:35:11,085 INFO nova.virt.libvirt_conn [-] Instance instance-0000029e spawned successfully.\n\nRestarting nova-compute again with the running instance does not cause nova-compute to crash.", 
            "date_created": "2011-09-02 13:44:42.049161+00:00", 
            "author": "https://api.launchpad.net/1.0/~aglenyoung"
        }
    ], 
    "closed": "2011-09-22 12:56:13.879476+00:00"
}