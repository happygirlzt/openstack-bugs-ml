{
    "status": "Fix Released", 
    "last_updated": "2015-11-19 21:50:49.199631+00:00", 
    "description": "Setting the below causes nova to fail.\n\n# White list of PCI devices available to VMs. For example:\n# pci_passthrough_whitelist =  [{\"vendor_id\": \"8086\",\n# \"product_id\": \"0443\"}] (multi valued)\n#pci_passthrough_whitelist=\npci_passthrough_whitelist=[{\"vendor_id\":\"8086\",\"product_id\":\"10fb\"}]\n\nFails with :\nCRITICAL nova [-] TypeError: pop() takes at most 1 argument (2 given) \n2014-10-17 15:28:59.968 7153 CRITICAL nova [-] TypeError: pop() takes at most 1 argument (2 given)\n2014-10-17 15:28:59.968 7153 TRACE nova Traceback (most recent call last):\n2014-10-17 15:28:59.968 7153 TRACE nova   File \"/usr/bin/nova-compute\", line 10, in <module>\n2014-10-17 15:28:59.968 7153 TRACE nova     sys.exit(main())\n2014-10-17 15:28:59.968 7153 TRACE nova   File \"/usr/lib/python2.7/site-packages/nova/cmd/compute.py\", line 72, in main\n2014-10-17 15:28:59.968 7153 TRACE nova     db_allowed=CONF.conductor.use_local)\n2014-10-17 15:28:59.968 7153 TRACE nova   File \"/usr/lib/python2.7/site-packages/nova/service.py\", line 275, in create\n2014-10-17 15:28:59.968 7153 TRACE nova     db_allowed=db_allowed)\n2014-10-17 15:28:59.968 7153 TRACE nova   File \"/usr/lib/python2.7/site-packages/nova/service.py\", line 148, in __init__\n2014-10-17 15:28:59.968 7153 TRACE nova     self.manager = manager_class(host=self.host, *args, **kwargs)\n2014-10-17 15:28:59.968 7153 TRACE nova   File \"/usr/lib/python2.7/site-packages/nova/compute/manager.py\", line 631, in __init__\n2014-10-17 15:28:59.968 7153 TRACE nova     self.driver = driver.load_compute_driver(self.virtapi, compute_driver)\n2014-10-17 15:28:59.968 7153 TRACE nova   File \"/usr/lib/python2.7/site-packages/nova/virt/driver.py\", line 1402, in load_compute_driver\n2014-10-17 15:28:59.968 7153 TRACE nova     virtapi)\n2014-10-17 15:28:59.968 7153 TRACE nova   File \"/usr/lib/python2.7/site-packages/nova/openstack/common/importutils.py\", line 50, in import_object_ns\n2014-10-17 15:28:59.968 7153 TRACE nova     return import_class(import_value)(*args, **kwargs)\n2014-10-17 15:28:59.968 7153 TRACE nova   File \"/usr/lib/python2.7/site-packages/nova/virt/libvirt/driver.py\", line 405, in __init__\n2014-10-17 15:28:59.968 7153 TRACE nova     self.dev_filter = pci_whitelist.get_pci_devices_filter()\n2014-10-17 15:28:59.968 7153 TRACE nova   File \"/usr/lib/python2.7/site-packages/nova/pci/pci_whitelist.py\", line 88, in get_pci_devices_filter\n2014-10-17 15:28:59.968 7153 TRACE nova     return PciHostDevicesWhiteList(CONF.pci_passthrough_whitelist)\n2014-10-17 15:28:59.968 7153 TRACE nova   File \"/usr/lib/python2.7/site-packages/nova/pci/pci_whitelist.py\", line 68, in __init__\n2014-10-17 15:28:59.968 7153 TRACE nova     self.specs = self._parse_white_list_from_config(whitelist_spec)\n2014-10-17 15:28:59.968 7153 TRACE nova   File \"/usr/lib/python2.7/site-packages/nova/pci/pci_whitelist.py\", line 49, in _parse_white_list_from_config\n2014-10-17 15:28:59.968 7153 TRACE nova     spec = pci_devspec.PciDeviceSpec(jsonspec)\n2014-10-17 15:28:59.968 7153 TRACE nova   File \"/usr/lib/python2.7/site-packages/nova/pci/pci_devspec.py\", line 132, in __init__\n2014-10-17 15:28:59.968 7153 TRACE nova     self._init_dev_details()\n2014-10-17 15:28:59.968 7153 TRACE nova   File \"/usr/lib/python2.7/site-packages/nova/pci/pci_devspec.py\", line 137, in _init_dev_details\n2014-10-17 15:28:59.968 7153 TRACE nova     self.vendor_id = details.pop(\"vendor_id\", ANY)\n\nChanging the config to:\npci_passthrough_whitelist={\"vendor_id\":\"8086\",\"product_id\":\"10fb\"}\n\nFixes the above. \n\nIn Icehouse, PCI Passthrough worked with passing a list, in Juno it is broken.", 
    "tags": [
        "in-stable-juno", 
        "juno-backport-potential", 
        "pci-passthrough"
    ], 
    "importance": "Medium", 
    "heat": 10, 
    "link": "https://bugs.launchpad.net/nova/+bug/1383345", 
    "owner": "https://api.launchpad.net/1.0/~baoli", 
    "id": 1383345, 
    "index": 4085, 
    "openned": "2014-10-20 15:28:04.271397+00:00", 
    "created": "2014-10-20 15:28:04.271397+00:00", 
    "title": "PCI-Passthrough : TypeError: pop() takes at most 1 argument (2 given", 
    "comments": [
        {
            "content": "Setting the below causes nova to fail.\n\n# White list of PCI devices available to VMs. For example:\n# pci_passthrough_whitelist =  [{\"vendor_id\": \"8086\",\n# \"product_id\": \"0443\"}] (multi valued)\n#pci_passthrough_whitelist=\npci_passthrough_whitelist=[{\"vendor_id\":\"8086\",\"product_id\":\"10fb\"}]\n\nFails with :\nCRITICAL nova [-] TypeError: pop() takes at most 1 argument (2 given) \n2014-10-17 15:28:59.968 7153 CRITICAL nova [-] TypeError: pop() takes at most 1 argument (2 given)\n2014-10-17 15:28:59.968 7153 TRACE nova Traceback (most recent call last):\n2014-10-17 15:28:59.968 7153 TRACE nova   File \"/usr/bin/nova-compute\", line 10, in <module>\n2014-10-17 15:28:59.968 7153 TRACE nova     sys.exit(main())\n2014-10-17 15:28:59.968 7153 TRACE nova   File \"/usr/lib/python2.7/site-packages/nova/cmd/compute.py\", line 72, in main\n2014-10-17 15:28:59.968 7153 TRACE nova     db_allowed=CONF.conductor.use_local)\n2014-10-17 15:28:59.968 7153 TRACE nova   File \"/usr/lib/python2.7/site-packages/nova/service.py\", line 275, in create\n2014-10-17 15:28:59.968 7153 TRACE nova     db_allowed=db_allowed)\n2014-10-17 15:28:59.968 7153 TRACE nova   File \"/usr/lib/python2.7/site-packages/nova/service.py\", line 148, in __init__\n2014-10-17 15:28:59.968 7153 TRACE nova     self.manager = manager_class(host=self.host, *args, **kwargs)\n2014-10-17 15:28:59.968 7153 TRACE nova   File \"/usr/lib/python2.7/site-packages/nova/compute/manager.py\", line 631, in __init__\n2014-10-17 15:28:59.968 7153 TRACE nova     self.driver = driver.load_compute_driver(self.virtapi, compute_driver)\n2014-10-17 15:28:59.968 7153 TRACE nova   File \"/usr/lib/python2.7/site-packages/nova/virt/driver.py\", line 1402, in load_compute_driver\n2014-10-17 15:28:59.968 7153 TRACE nova     virtapi)\n2014-10-17 15:28:59.968 7153 TRACE nova   File \"/usr/lib/python2.7/site-packages/nova/openstack/common/importutils.py\", line 50, in import_object_ns\n2014-10-17 15:28:59.968 7153 TRACE nova     return import_class(import_value)(*args, **kwargs)\n2014-10-17 15:28:59.968 7153 TRACE nova   File \"/usr/lib/python2.7/site-packages/nova/virt/libvirt/driver.py\", line 405, in __init__\n2014-10-17 15:28:59.968 7153 TRACE nova     self.dev_filter = pci_whitelist.get_pci_devices_filter()\n2014-10-17 15:28:59.968 7153 TRACE nova   File \"/usr/lib/python2.7/site-packages/nova/pci/pci_whitelist.py\", line 88, in get_pci_devices_filter\n2014-10-17 15:28:59.968 7153 TRACE nova     return PciHostDevicesWhiteList(CONF.pci_passthrough_whitelist)\n2014-10-17 15:28:59.968 7153 TRACE nova   File \"/usr/lib/python2.7/site-packages/nova/pci/pci_whitelist.py\", line 68, in __init__\n2014-10-17 15:28:59.968 7153 TRACE nova     self.specs = self._parse_white_list_from_config(whitelist_spec)\n2014-10-17 15:28:59.968 7153 TRACE nova   File \"/usr/lib/python2.7/site-packages/nova/pci/pci_whitelist.py\", line 49, in _parse_white_list_from_config\n2014-10-17 15:28:59.968 7153 TRACE nova     spec = pci_devspec.PciDeviceSpec(jsonspec)\n2014-10-17 15:28:59.968 7153 TRACE nova   File \"/usr/lib/python2.7/site-packages/nova/pci/pci_devspec.py\", line 132, in __init__\n2014-10-17 15:28:59.968 7153 TRACE nova     self._init_dev_details()\n2014-10-17 15:28:59.968 7153 TRACE nova   File \"/usr/lib/python2.7/site-packages/nova/pci/pci_devspec.py\", line 137, in _init_dev_details\n2014-10-17 15:28:59.968 7153 TRACE nova     self.vendor_id = details.pop(\"vendor_id\", ANY)\n\nChanging the config to:\npci_passthrough_whitelist={\"vendor_id\":\"8086\",\"product_id\":\"10fb\"}\n\nFixes the above. \n\nIn Icehouse, PCI Passthrough worked with passing a list, in Juno it is broken.", 
            "date_created": "2014-10-20 15:28:04.271397+00:00", 
            "author": "https://api.launchpad.net/1.0/~jtaleric"
        }, 
        {
            "content": "as you have indicated that setting it as \n\n            pci_passthrough_whitelist={\"vendor_id\":\"8086\",\"product_id\":\"10fb\"}\n\nwill succeed, this is done in Juno to simplify it by not requiring the [ ] any more.  The reason for that is pci whitelist is a multiline option, and each line specifies a single whitelist entry. \n\n", 
            "date_created": "2014-10-21 22:03:46.836048+00:00", 
            "author": "https://api.launchpad.net/1.0/~baoli"
        }, 
        {
            "content": "Okay, so this is expected to change? since [] worked in icehouse...", 
            "date_created": "2014-10-21 23:55:39.714762+00:00", 
            "author": "https://api.launchpad.net/1.0/~jtaleric"
        }, 
        {
            "content": "No, it's not expected. It is *required* that a config for release N-1 works in release N. That means a config from an icehouse deployment *must* work in a juno deployment without requiring any changes.", 
            "date_created": "2014-10-22 00:05:02.038794+00:00", 
            "author": "https://api.launchpad.net/1.0/~danms"
        }, 
        {
            "content": "Ok, got it, will work on the fix", 
            "date_created": "2014-10-22 21:49:41.401654+00:00", 
            "author": "https://api.launchpad.net/1.0/~baoli"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/130833", 
            "date_created": "2014-10-24 15:46:56.548173+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/130833\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=bb7bfd313c9d4c052c85b4ad5ccd8361f5f3b004\nSubmitter: Jenkins\nBranch:    master\n\ncommit bb7bfd313c9d4c052c85b4ad5ccd8361f5f3b004\nAuthor: Robert Li <email address hidden>\nDate:   Fri Oct 24 14:41:09 2014 -0400\n\n    Support both list and dict for pci_passthrough_whitelist\n    \n    In Icehouse, pci_passthrough_whitelist is a json docstring that\n    encodes a list. In Juno, it is a json docstring that encodes\n    a dict. This patch adds the list support back to\n    pci_passthrough_whitelist, and both list and dict are now supported.\n    \n    Change-Id: I523cfb756a09c75e4f60015adadb3a1403298cd3\n    Closes-Bug: 1383345\n", 
            "date_created": "2015-01-06 21:09:09.765174+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: stable/juno\nReview: https://review.openstack.org/170089", 
            "date_created": "2015-04-02 11:41:41.081995+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/170089\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=c2ef829c09b1fffbd0004428025705fd44470df8\nSubmitter: Jenkins\nBranch:    stable/juno\n\ncommit c2ef829c09b1fffbd0004428025705fd44470df8\nAuthor: Robert Li <email address hidden>\nDate:   Fri Oct 24 14:41:09 2014 -0400\n\n    Support both list and dict for pci_passthrough_whitelist\n    \n    In Icehouse, pci_passthrough_whitelist is a json docstring that\n    encodes a list. In Juno, it is a json docstring that encodes\n    a dict. This patch adds the list support back to\n    pci_passthrough_whitelist, and both list and dict are now supported.\n    \n    (cherry picked from commit bb7bfd313c9d4c052c85b4ad5ccd8361f5f3b004)\n    \n    Conflicts:\n    \tnova/pci/pci_whitelist.py\n    \tnova/tests/pci/test_pci_devspec.py\n    Because juno imports module as pci_devspec since\n    kilo as devspec.\n    \n    Closes-Bug: 1383345\n    Change-Id: I523cfb756a09c75e4f60015adadb3a1403298cd3\n", 
            "date_created": "2015-04-27 13:17:22.422998+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2015-02-05 20:16:21.908292+00:00"
}