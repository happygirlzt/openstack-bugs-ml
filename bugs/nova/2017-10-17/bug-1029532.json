{
    "status": "Won't Fix", 
    "last_updated": "2012-07-26 21:40:52.458467+00:00", 
    "description": "In the code, (nova/compute/api.py)\n\n        #disk format of vhd is non-shrinkable\n        if orig_image.get('disk_format') == 'vhd':\n            min_ram = instance['instance_type']['memory_mb']\n            min_disk = instance['instance_type']['root_gb']\n        else:\n            #set new image values to the original image values\n            min_ram = orig_image.get('min_ram')\n            min_disk = orig_image.get('min_disk')\n\nThere are two problems with this. First, min_ram has nothing to do with the vhd format, and should definitely be coming from the original image.\n\nSecondly, its not clear to me that vhd's aren't shrinkable, or that you're even required to shrink them? Even if you are required to shrink it to fit and can't in a particular case, min_disk is just advisory. There will still be a check during the boot step to ensure you're not doing anything wrong.\n\nMy feeling is that, it is better to fail slow in the case where the image is too large than to fail fast incorrectly in the more likely cases where the image is small enough to fit.", 
    "tags": [], 
    "importance": "Undecided", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1029532", 
    "owner": "https://api.launchpad.net/1.0/~markwash", 
    "id": 1029532, 
    "index": 4247, 
    "openned": "2012-07-26 16:13:26.543950+00:00", 
    "created": "2012-07-26 16:13:26.543950+00:00", 
    "title": "min_disk/min_ram set too high for vhds", 
    "comments": [
        {
            "content": "In the code, (nova/compute/api.py)\n\n        #disk format of vhd is non-shrinkable\n        if orig_image.get('disk_format') == 'vhd':\n            min_ram = instance['instance_type']['memory_mb']\n            min_disk = instance['instance_type']['root_gb']\n        else:\n            #set new image values to the original image values\n            min_ram = orig_image.get('min_ram')\n            min_disk = orig_image.get('min_disk')\n\nThere are two problems with this. First, min_ram has nothing to do with the vhd format, and should definitely be coming from the original image.\n\nSecondly, its not clear to me that vhd's aren't shrinkable, or that you're even required to shrink them? Even if you are required to shrink it to fit and can't in a particular case, min_disk is just advisory. There will still be a check during the boot step to ensure you're not doing anything wrong.\n\nMy feeling is that, it is better to fail slow in the case where the image is too large than to fail fast incorrectly in the more likely cases where the image is small enough to fit.", 
            "date_created": "2012-07-26 16:13:26.543950+00:00", 
            "author": "https://api.launchpad.net/1.0/~markwash"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/10360", 
            "date_created": "2012-07-26 17:38:01.538880+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "AFAICT, there's nothing in the data format of the VHD that prevents it from being shrunk in size, there just aren't any tools that implement it.\n\nThe resize down code has to jump through some hoops to support resizing instances down. It basically involves creating a new VDI and then copying the data over.\n\nThat said, the xenapi driver only supports resizing a disk down during migrate. During create, it assumes it only ever needs to resize up (in the auto disk config case).", 
            "date_created": "2012-07-26 17:59:09.974271+00:00", 
            "author": "https://api.launchpad.net/1.0/~johannes.erdfelt"
        }
    ], 
    "closed": "2012-07-26 21:40:50.624048+00:00"
}