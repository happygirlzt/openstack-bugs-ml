{
    "status": "Opinion", 
    "last_updated": "2014-12-10 11:14:55.936982+00:00", 
    "description": "In KVM case:\nWe can not use virsh console on serial terminal.\nSo, can not login to each vm using 'virsh console' command on terminal.\nBecause  vm's config xml file is not support it now.\nThis feature is so important for us.\n\nPlease apply this patch:\nCONF.libvirt.virsh_console_serial=False (default. is same now)\n\nif you using virsh console then set\nCONF.libvirt.virsh_console_serial=True\n\n\ndiff --git a/nova/virt/libvirt/config.py b/nova/virt/libvirt/config.py\nindex 8eaf658..090e17b 100644\n--- a/nova/virt/libvirt/config.py\n+++ b/nova/virt/libvirt/config.py\n@@ -1053,6 +1053,9 @@ class LibvirtConfigGuestCharBase(LibvirtConfigGuestDevice):\n         dev = super(LibvirtConfigGuestCharBase, self).format_dom()\n\n         dev.set(\"type\", self.type)\n+        if self.root_name == \"console\":\n+            dev.set(\"tty\", self.source_path)\n+\n         if self.type == \"file\":\n             dev.append(etree.Element(\"source\", path=self.source_path))\n         elif self.type == \"unix\":\ndiff --git a/nova/virt/libvirt/driver.py b/nova/virt/libvirt/driver.py\nindex 9bd75fa..de2735e 100644\n--- a/nova/virt/libvirt/driver.py\n+++ b/nova/virt/libvirt/driver.py\n@@ -213,6 +213,9 @@ libvirt_opts = [\n                 help='A path to a device that will be used as source of '\n                      'entropy on the host. Permitted options are: '\n                      '/dev/random or /dev/hwrng'),\n+    cfg.BoolOpt('virsh_console_serial',\n+                default=False,\n+                help='Use virsh console on serial terminal'),\n     ]\n\n CONF = cfg.CONF\n@@ -3278,14 +3281,29 @@ class LibvirtDriver(driver.ComputeDriver):\n             # client app is connected. Thus we can't get away\n             # with a single type=pty console. Instead we have\n             # to configure two separate consoles.\n-            consolelog = vconfig.LibvirtConfigGuestSerial()\n-            consolelog.type = \"file\"\n-            consolelog.source_path = self._get_console_log_path(instance)\n-            guest.add_device(consolelog)\n\n-            consolepty = vconfig.LibvirtConfigGuestSerial()\n-            consolepty.type = \"pty\"\n-            guest.add_device(consolepty)\n+            if CONF.libvirt.virsh_console_serial:  # Y.Kawada\n+                consolepty = vconfig.LibvirtConfigGuestSerial()\n+                consolepty.type = \"pty\"\n+                consolepty.target_port = \"0\"\n+                consolepty.source_path = \"/dev/pts/11\"\n+                consolepty.alias_name = \"serial0\"\n+                guest.add_device(consolepty)\n+\n+                consolepty = vconfig.LibvirtConfigGuestConsole()\n+                consolepty.type = \"pty\"\n+                consolepty.target_port = \"0\"\n+                consolepty.source_path = \"/dev/pts/11\"\n+                consolepty.alias_name = \"serial0\"\n+            else:\n+                consolelog = vconfig.LibvirtConfigGuestSerial()\n+                consolelog.type = \"file\"\n+                consolelog.source_path = self._get_console_log_path(instance)\n+                guest.add_device(consolelog)\n+\n+                consolepty = vconfig.LibvirtConfigGuestSerial()\n+                consolepty.type = \"pty\"\n+                guest.add_device(consolepty)\n         else:\n             consolepty = vconfig.LibvirtConfigGuestConsole()\n             consolepty.type = \"pty\"", 
    "tags": [
        "console", 
        "libvirt"
    ], 
    "importance": "Wishlist", 
    "heat": 12, 
    "link": "https://bugs.launchpad.net/nova/+bug/1340518", 
    "owner": "https://api.launchpad.net/1.0/~johnkeepmoving", 
    "id": 1340518, 
    "index": 2837, 
    "openned": "2014-07-11 04:58:33.976377+00:00", 
    "created": "2014-07-11 04:58:33.976377+00:00", 
    "title": "can not use virsh console on serial terminal", 
    "comments": [
        {
            "content": "In KVM case:\nWe can not use virsh console on serial terminal.\nSo, can not login to each vm using 'virsh console' command on terminal.\nBecause  vm's config xml file is not support it now.\nThis feature is so important for us.\n\nPlease apply this patch:\nCONF.libvirt.virsh_console_serial=False (default. is same now)\n\nif you using virsh console then set\nCONF.libvirt.virsh_console_serial=True\n\n\ndiff --git a/nova/virt/libvirt/config.py b/nova/virt/libvirt/config.py\nindex 8eaf658..090e17b 100644\n--- a/nova/virt/libvirt/config.py\n+++ b/nova/virt/libvirt/config.py\n@@ -1053,6 +1053,9 @@ class LibvirtConfigGuestCharBase(LibvirtConfigGuestDevice):\n         dev = super(LibvirtConfigGuestCharBase, self).format_dom()\n\n         dev.set(\"type\", self.type)\n+        if self.root_name == \"console\":\n+            dev.set(\"tty\", self.source_path)\n+\n         if self.type == \"file\":\n             dev.append(etree.Element(\"source\", path=self.source_path))\n         elif self.type == \"unix\":\ndiff --git a/nova/virt/libvirt/driver.py b/nova/virt/libvirt/driver.py\nindex 9bd75fa..de2735e 100644\n--- a/nova/virt/libvirt/driver.py\n+++ b/nova/virt/libvirt/driver.py\n@@ -213,6 +213,9 @@ libvirt_opts = [\n                 help='A path to a device that will be used as source of '\n                      'entropy on the host. Permitted options are: '\n                      '/dev/random or /dev/hwrng'),\n+    cfg.BoolOpt('virsh_console_serial',\n+                default=False,\n+                help='Use virsh console on serial terminal'),\n     ]\n\n CONF = cfg.CONF\n@@ -3278,14 +3281,29 @@ class LibvirtDriver(driver.ComputeDriver):\n             # client app is connected. Thus we can't get away\n             # with a single type=pty console. Instead we have\n             # to configure two separate consoles.\n-            consolelog = vconfig.LibvirtConfigGuestSerial()\n-            consolelog.type = \"file\"\n-            consolelog.source_path = self._get_console_log_path(instance)\n-            guest.add_device(consolelog)\n\n-            consolepty = vconfig.LibvirtConfigGuestSerial()\n-            consolepty.type = \"pty\"\n-            guest.add_device(consolepty)\n+            if CONF.libvirt.virsh_console_serial:  # Y.Kawada\n+                consolepty = vconfig.LibvirtConfigGuestSerial()\n+                consolepty.type = \"pty\"\n+                consolepty.target_port = \"0\"\n+                consolepty.source_path = \"/dev/pts/11\"\n+                consolepty.alias_name = \"serial0\"\n+                guest.add_device(consolepty)\n+\n+                consolepty = vconfig.LibvirtConfigGuestConsole()\n+                consolepty.type = \"pty\"\n+                consolepty.target_port = \"0\"\n+                consolepty.source_path = \"/dev/pts/11\"\n+                consolepty.alias_name = \"serial0\"\n+            else:\n+                consolelog = vconfig.LibvirtConfigGuestSerial()\n+                consolelog.type = \"file\"\n+                consolelog.source_path = self._get_console_log_path(instance)\n+                guest.add_device(consolelog)\n+\n+                consolepty = vconfig.LibvirtConfigGuestSerial()\n+                consolepty.type = \"pty\"\n+                guest.add_device(consolepty)\n         else:\n             consolepty = vconfig.LibvirtConfigGuestConsole()\n             consolepty.type = \"pty\"", 
            "date_created": "2014-07-11 04:58:33.976377+00:00", 
            "author": "https://api.launchpad.net/1.0/~warp-kawada"
        }, 
        {
            "content": "", 
            "date_created": "2014-07-11 04:58:33.976377+00:00", 
            "author": "https://api.launchpad.net/1.0/~warp-kawada"
        }, 
        {
            "content": "It is not clear what the use case is here, please explain further if you'd like to take this forward. Also patches need to be provided via gerrit not via the tracker.", 
            "date_created": "2014-09-09 15:00:50.677099+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "hello \n\ndefault instances's xml  file is\n    <serial type='file'>\n      <source path='/var/lib/nova/instances/b742bc72-8d65-481a-a4ec-9be7a18a0a5b/console.log'/>\n      <target port='0'/>\n      <alias name='serial0'/>\n    </serial>\n    <serial type='pty'>\n      <source path='/dev/pts/1'/>\n      <target port='1'/>\n      <alias name='serial1'/>\n    </serial>\n    <console type='file'>\n      <source path='/var/lib/nova/instances/b742bc72-8d65-481a-a4ec-9be7a18a0a5b/console.log'/>\n      <target type='serial' port='0'/>\n      <alias name='serial0'/>\n    </console>\n\nIf you try virsh console on terminal (cnode0001)\n\ncnode0001:~# virsh console du3-00000709\nConnected to domain du3-00000709\nEscape character is ^]\nerror: internal error cannot find character device (null)\n\nIf my changes apply\n  <devices>\n     :\n    <serial type='pty'>\n      <source path='/dev/pts/0'/>\n      <target port='0'/>\n      <alias name='serial0'/>\n    </serial>\n    <console type='pty' tty='/dev/pts/0'>\n      <source path='/dev/pts/0'/>\n      <target type='serial' port='0'/>\n      <alias name='serial0'/>\n    </console>\n     :\n </devices>\n\ncnode0001:~# virsh console du3-00000709\nConnected to domain du3-00000709\nEscape character is ^]\n\nCentOS release 6.5 (Final)\nKernel 2.6.32-431.17.1.el6.x86_64 on an x86_64\nvxxx-xxx-xxx-xxx.z0d1.static.cnode.jp login: root\nPassword:\n\nI'm going to be to be able to virsh console like this.\ngot it?\n\n\n", 
            "date_created": "2014-09-11 02:53:35.066686+00:00", 
            "author": "https://api.launchpad.net/1.0/~warp-kawada"
        }, 
        {
            "content": "Hi Yukihiro,\n\n\nThanks for your patch. From last 1 month i am trying to find the solution to login VM  from host compute.\n\nWhat changes are required to access the VM from Horizon GUI. We don't have VNC support for ARM64 machine. ", 
            "date_created": "2014-11-25 13:51:04.034509+00:00", 
            "author": "https://api.launchpad.net/1.0/~harshjain32"
        }, 
        {
            "content": "Here is description of usecase\nhttps://ask.openstack.org/en/question/53974/access-vm-console-from-compute-node/", 
            "date_created": "2014-11-25 13:55:16.587336+00:00", 
            "author": "https://api.launchpad.net/1.0/~harshjain32"
        }, 
        {
            "content": "Hi Harsh\n\nI don't know ARM64 VM. \nIs it on KVM?\nIf it was KVM, you can connect VM's serial console with virsh console.\nThen It needs my revise for each cnodes.\nAnd it needs to add virsh console interface to horizon.\n\nWe GMO intenet.INC are serving  'conoHa' VPS using openstack engine.\nhttps://www.conoha.jp/en\n\nIn this case , we support anyterm  by using virsh console and conserver.\nAnyterm is  text based terminal , not VNC.\nIt is good for us that we can copy and paste in text is available.\n\nhttp://anyterm.org/\nhttp://www.conserver.com/\n\nThank you.", 
            "date_created": "2014-11-26 00:33:23.738497+00:00", 
            "author": "https://api.launchpad.net/1.0/~warp-kawada"
        }, 
        {
            "content": "Just in case, it's possible with Juno to get the virsh console as a telnet endpoint.\n\nI have achieved this adding the following config to /etc/nova/nova.conf\n\n[serial_console]\nenabled = True\n\nIt will create all the serial ports as telnet ports in 10000 onwards. Have the config here (for Juno):\n\nhttps://github.com/openstack/nova/blob/c5ac21f3dbb4ad59efcb631d91e4e64f77fba43f/nova/console/serial.py#L33-L52", 
            "date_created": "2014-12-05 11:10:54.521124+00:00", 
            "author": "https://api.launchpad.net/1.0/~javier-domingo"
        }, 
        {
            "content": "I don't know exactly why, I suppose it's due to being a serial port, but characters should be sent ASAP, therefore, you may need to configure tenet with \"mode char\"", 
            "date_created": "2014-12-05 11:36:20.189409+00:00", 
            "author": "https://api.launchpad.net/1.0/~javier-domingo"
        }, 
        {
            "content": "HI,\n\n\nYes ARM64 is KVM enabled.The only currently supported 64-bit ARM board is \"virt\", which\nhas no display (graphics) device at all, so -vnc is not supported.\nWe am able to connect VM using virsh console <instance-ID>.\nDo we need code changes to support console in Horizon.?\n\n\n\n\n", 
            "date_created": "2014-12-10 11:14:54.931978+00:00", 
            "author": "https://api.launchpad.net/1.0/~harshjain32"
        }
    ], 
    "closed": "2014-09-09 15:00:18.251932+00:00"
}