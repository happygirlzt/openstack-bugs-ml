{
    "status": "Fix Released", 
    "last_updated": "2014-10-16 08:32:10.329986+00:00", 
    "description": "get_host_capabilities() in libvirt driver seems to have a bug that will result in duplicated features.\n\ndef get_host_capabilities(self):\n        \"\"\"Returns an instance of config.LibvirtConfigCaps representing\n           the capabilities of the host.\n        \"\"\"\n        if not self._caps:\n            xmlstr = self._conn.getCapabilities()\n            self._caps = vconfig.LibvirtConfigCaps()\n            self._caps.parse_str(xmlstr)\n            if hasattr(libvirt, 'VIR_CONNECT_BASELINE_CPU_EXPAND_FEATURES'):\n                try:\n                    features = self._conn.baselineCPU(\n                        [self._caps.host.cpu.to_xml()],\n                        libvirt.VIR_CONNECT_BASELINE_CPU_EXPAND_FEATURES)\n                    # FIXME(wangpan): the return value of baselineCPU should be\n                    #                 None or xml string, but libvirt has a bug\n                    #                 of it from 1.1.2 which is fixed in 1.2.0,\n                    #                 this -1 checking should be removed later.\n                    if features and features != -1:\n                        self._caps.host.cpu.parse_str(features)\n                except libvirt.libvirtError as ex:\n                    error_code = ex.get_error_code()\n                    if error_code == libvirt.VIR_ERR_NO_SUPPORT:\n                        LOG.warn(_LW(\"URI %(uri)s does not support full set\"\n                                     \" of host capabilities: \" \"%(error)s\"),\n                                     {'uri': self.uri(), 'error': ex})\n                    else:\n                        raise\n        return self._caps\n\n\nThe _caps.parse_str() is called in sequence for both capabilites and expand features. Since capabilities will have certain features in a VM, and these will be repeated again in the expand features, the _caps.host.cpu.features will end up with duplicated features. This will cause cpu compare to fail later.\n\n\n(nova)root@overcloud-novacompute0-un6ckrnp5tzl:~# python\nPython 2.7.6 (default, Mar 22 2014, 22:59:38) \n[GCC 4.8.2] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import libvirt\n>>> conn = libvirt.open(\"qemu:///system\")\n>>> from nova.virt.libvirt import config as vconfig\n>>> caps = vconfig.LibvirtConfigCaps()\n>>> xmlstr = conn.getCapabilities()\n>>> caps.parse_str(xmlstr)\n>>> features = conn.baselineCPU([caps.host.cpu.to_xml()], libvirt.VIR_CONNECT_BASELINE_CPU_EXPAND_FEATURES)\n>>> caps.host.cpu.parse_str(features)\n>>> for f in caps.host.cpu.features:\n...     print f.name\n... \nhypervisor\npopcnt\nhypervisor\npopcnt\npni\nsse2\nsse\nfxsr\nmmx\npat\ncmov\npge\nsep\napic\ncx8\nmce\npae\nmsr\ntsc\npse\nde\nfpu\n>>>", 
    "tags": [
        "compute", 
        "libvirt"
    ], 
    "importance": "Undecided", 
    "heat": 12, 
    "link": "https://bugs.launchpad.net/nova/+bug/1322702", 
    "owner": "https://api.launchpad.net/1.0/~parthipan", 
    "id": 1322702, 
    "index": 6137, 
    "openned": "2014-05-23 17:14:16.685614+00:00", 
    "created": "2014-05-23 17:14:16.685614+00:00", 
    "title": "libvirt get_host_capabilities() duplicates features", 
    "comments": [
        {
            "content": "get_host_capabilities() in libvirt driver seems to have a bug that will result in duplicated features.\n\ndef get_host_capabilities(self):\n        \"\"\"Returns an instance of config.LibvirtConfigCaps representing\n           the capabilities of the host.\n        \"\"\"\n        if not self._caps:\n            xmlstr = self._conn.getCapabilities()\n            self._caps = vconfig.LibvirtConfigCaps()\n            self._caps.parse_str(xmlstr)\n            if hasattr(libvirt, 'VIR_CONNECT_BASELINE_CPU_EXPAND_FEATURES'):\n                try:\n                    features = self._conn.baselineCPU(\n                        [self._caps.host.cpu.to_xml()],\n                        libvirt.VIR_CONNECT_BASELINE_CPU_EXPAND_FEATURES)\n                    # FIXME(wangpan): the return value of baselineCPU should be\n                    #                 None or xml string, but libvirt has a bug\n                    #                 of it from 1.1.2 which is fixed in 1.2.0,\n                    #                 this -1 checking should be removed later.\n                    if features and features != -1:\n                        self._caps.host.cpu.parse_str(features)\n                except libvirt.libvirtError as ex:\n                    error_code = ex.get_error_code()\n                    if error_code == libvirt.VIR_ERR_NO_SUPPORT:\n                        LOG.warn(_LW(\"URI %(uri)s does not support full set\"\n                                     \" of host capabilities: \" \"%(error)s\"),\n                                     {'uri': self.uri(), 'error': ex})\n                    else:\n                        raise\n        return self._caps\n\n\nThe _caps.parse_str() is called in sequence for both capabilites and expand features. Since capabilities will have certain features in a VM, and these will be repeated again in the expand features, the _caps.host.cpu.features will end up with duplicated features. This will cause cpu compare to fail later.\n\n\n(nova)root@overcloud-novacompute0-un6ckrnp5tzl:~# python\nPython 2.7.6 (default, Mar 22 2014, 22:59:38) \n[GCC 4.8.2] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import libvirt\n>>> conn = libvirt.open(\"qemu:///system\")\n>>> from nova.virt.libvirt import config as vconfig\n>>> caps = vconfig.LibvirtConfigCaps()\n>>> xmlstr = conn.getCapabilities()\n>>> caps.parse_str(xmlstr)\n>>> features = conn.baselineCPU([caps.host.cpu.to_xml()], libvirt.VIR_CONNECT_BASELINE_CPU_EXPAND_FEATURES)\n>>> caps.host.cpu.parse_str(features)\n>>> for f in caps.host.cpu.features:\n...     print f.name\n... \nhypervisor\npopcnt\nhypervisor\npopcnt\npni\nsse2\nsse\nfxsr\nmmx\npat\ncmov\npge\nsep\napic\ncx8\nmce\npae\nmsr\ntsc\npse\nde\nfpu\n>>>", 
            "date_created": "2014-05-23 17:14:16.685614+00:00", 
            "author": "https://api.launchpad.net/1.0/~parthipan"
        }, 
        {
            "content": "I have bypassed it by adding 2 lines of code to driver.py\n\n    def get_host_capabilities(self):\n        \"\"\"Returns an instance of config.LibvirtConfigCaps representing\n           the capabilities of the host.\n        \"\"\"\n        if not self._caps:\n            xmlstr = self._conn.getCapabilities()\n            self._caps = vconfig.LibvirtConfigCaps()\n            self._caps.parse_str(xmlstr)\n            if hasattr(libvirt, 'VIR_CONNECT_BASELINE_CPU_EXPAND_FEATURES'):\n                try:\n                    features = self._conn.baselineCPU(\n                        [self._caps.host.cpu.to_xml()],\n                        libvirt.VIR_CONNECT_BASELINE_CPU_EXPAND_FEATURES)\n\n\n\n                    # Add Code to remove duplicate Features (Marwan AKIKI)\n                    for f in self._caps.host.cpu.features:\n                        features=features.replace(\"  <feature policy='require' name='\" + f.name + \"'/>\\n\", '')\n\n\n\n                    # FIXME(wangpan): the return value of baselineCPU should be\n                    #                 None or xml string, but libvirt has a bug\n                    #                 of it from 1.1.2 which is fixed in 1.2.0,\n                    #                 this -1 checking should be removed later.\n                    if features and features != -1:\n                        self._caps.host.cpu.parse_str(features)\n                except libvirt.VIR_ERR_NO_SUPPORT:\n                    # Note(yjiang5): ignore if libvirt has no support\n                    pass\n        return self._caps", 
            "date_created": "2014-05-26 13:43:18.272146+00:00", 
            "author": "https://api.launchpad.net/1.0/~marwan-akiki"
        }, 
        {
            "content": "Please link your code commit to this bug. Don't manually change the bug status to 'fix committed'.", 
            "date_created": "2014-05-27 08:10:26.719201+00:00", 
            "author": "https://api.launchpad.net/1.0/~parthipan"
        }, 
        {
            "content": "I set this bug to 'confirmed' as @Marwan AKIKI has seen the same issue.", 
            "date_created": "2014-05-27 08:38:59.579178+00:00", 
            "author": "https://api.launchpad.net/1.0/~parthipan"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/96148", 
            "date_created": "2014-05-28 12:03:06.049544+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "I've committed a patch. This fixes my issue of 'libvirtError: XML error: CPU feature `hypervisor' specified more than once' in devtest.", 
            "date_created": "2014-05-28 12:24:13.983368+00:00", 
            "author": "https://api.launchpad.net/1.0/~parthipan"
        }, 
        {
            "content": "This is really a bug in libvirt, not openstack which is fixed in upstream libvirt\n\ncommit 802f157e8c7afaf4971b82705f67519939d2da0c\nAuthor: Jiri Denemark <email address hidden>\nDate:   Mon Jan 27 17:03:55 2014 +0100\n\n    cpu: Fix VIR_CONNECT_BASELINE_CPU_EXPAND_FEATURES\n    \n    https://bugzilla.redhat.com/show_bug.cgi?id=1049391\n    \n    VIR_CONNECT_BASELINE_CPU_EXPAND_FEATURES flag for virConnectBaselineCPU\n    did not work if the resulting guest CPU would disable some features\n    present in its base model. This patch makes sure we won't try to add\n    such features twice.\n", 
            "date_created": "2014-05-28 12:31:19.105546+00:00", 
            "author": "https://api.launchpad.net/1.0/~berrange"
        }, 
        {
            "content": "@daniel: It's not. I can reproduce this in 1.2.2 with the patch you've mentioned.\n\nThe nova bug is that conn.getCapabilites can return named features such as 'hypervisor'. Then when we call baselineCPU the same feature is returned again. Since features is a list being appended to, the get_host_capabilities will have duplicate features. You can reproduce this only when libvirt is run on a guest.\n\nI have checked that  VIR_CONNECT_BASELINE_CPU_EXPAND_FEATURES works fine and does not return duplicate features.", 
            "date_created": "2014-05-28 12:42:48.094153+00:00", 
            "author": "https://api.launchpad.net/1.0/~parthipan"
        }, 
        {
            "content": "A test program that I used is pasted here:\n\nhttp://paste.openstack.org/show/81869/", 
            "date_created": "2014-05-28 12:53:28.805352+00:00", 
            "author": "https://api.launchpad.net/1.0/~parthipan"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/96148\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=0f28fbef8bedeafca0bf488b84f783568fefc960\nSubmitter: Jenkins\nBranch:    master\n\ncommit 0f28fbef8bedeafca0bf488b84f783568fefc960\nAuthor: Loganathan Parthipan <email address hidden>\nDate:   Wed May 28 11:48:51 2014 +0000\n\n    remove cpu feature duplications in libvirt\n    \n    This patch fixes a bug in libvirt driver get_host_capabilities where\n    some features can be duplicated. In this patch we use the features returned\n    from baselineCPU as the only set of features.\n    \n    Change-Id: Ib708e31e5ae14e93b384d2a8933079ca83ca8aaf\n    Closes-Bug: #1322702\n", 
            "date_created": "2014-05-29 02:13:45.688243+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2014-06-11 13:50:36.410369+00:00"
}