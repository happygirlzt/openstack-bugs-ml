{
    "status": "Fix Released", 
    "last_updated": "2014-04-17 08:58:11.141061+00:00", 
    "description": "If the os_type metadata is set of an image, the ephemeral disk backing file for that image will be named ephemeral_[size]_[os_type].\nBecause the user can change os_type they can use this to create new ephemeral backing files.\nNova image cache management does not include deleting ephemeral backing files (presumably because they are expected to be a small, stable set.\n\nHence a user can fill the disk with ephemeral backing files via the following:\n\n1) Spawn a instance\n2) Create a snapshot from it, delete the original instance\n3) In a loop:\ngenerate a random os_type\nset os_type to the snapshot\nspawn and instance from it, and then delete the instance\n\nEvery iteration will generate an ephemeral backing file on a compute host.  With a stacking scheduling policy there is a good chance of hitting the same host repeatedly until its disk is full.\n\nSuggested mitigation\n\nOnly use \u201cos_type\u201d in the ephemeral file name if there is a specific mkfs command defined, otherwise use \u201cdefault\u201d   (Currently for undefined os-types it will use the default mkfs command, but still uses os_type in the name.", 
    "tags": [], 
    "importance": "High", 
    "heat": 260, 
    "link": "https://bugs.launchpad.net/nova/+bug/1253980", 
    "owner": "https://api.launchpad.net/1.0/~moorryan", 
    "id": 1253980, 
    "index": 1326, 
    "openned": "2013-11-22 11:21:01.388836+00:00", 
    "created": "2013-11-22 11:21:01.388836+00:00", 
    "title": "[OSSA 2013-037] DoS attack via setting os_type in snapshots (CVE-2013-6437)", 
    "comments": [
        {
            "content": "If the os_type metadata is set of an image, the ephemeral disk backing file for that image will be named ephemeral_[size]_[os_type].\nBecause the user can change os_type they can use this to create new ephemeral backing files.\nNova image cache management does not include deleting ephemeral backing files (presumably because they are expected to be a small, stable set.\n\nHence a user can fill the disk with ephemeral backing files via the following:\n\n1) Spawn a instance\n2) Create a snapshot from it, delete the original instance\n3) In a loop:\ngenerate a random os_type\nset os_type to the snapshot\nspawn and instance from it, and then delete the instance\n\nEvery iteration will generate an ephemeral backing file on a compute host.  With a stacking scheduling policy there is a good chance of hitting the same host repeatedly until its disk is full.\n\nPossible mitigations:\n\t\ni)\tOnly use \u201cos_type\u201d in the ephemeral file name if there is a specific mkfs command defined, otherwise use \u201cdefault\u201d   (Currently for undefined os-types it will use the default mkfs command, but still uses os_type in the name.\nii)\tLimit the values of os_type to those that have a specific mkfs_comamnd + default  (validate in the API layer).   This would provide a clearer indication that the type is not supported\niii)\tInclude unused ephemeral backing files in the image cache clean up processing\n\nThe above list is not exclusive.   i) is the easiest and most immediate fix, but ii) and iii) are also worth considering", 
            "date_created": "2013-11-22 11:21:01.388836+00:00", 
            "author": "https://api.launchpad.net/1.0/~philip-day"
        }, 
        {
            "content": "Sounds legit", 
            "date_created": "2013-11-22 15:17:36.811370+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "Yep, seems legit to me, too.", 
            "date_created": "2013-11-27 20:04:48.354705+00:00", 
            "author": "https://api.launchpad.net/1.0/~russellb"
        }, 
        {
            "content": "I went looking through the code to figure out any implications of changing the backing file name and honestly I'm lost in image caching code, but as far as I can tell the suggested fix should work and would be fairly easy.\n\nPhil, are you going to submit a patch for this?", 
            "date_created": "2013-11-27 20:38:59.532868+00:00", 
            "author": "https://api.launchpad.net/1.0/~alaski"
        }, 
        {
            "content": "Don't have anyone working on it yet,  but was hoping I could get someone started this week.  Open to other offers though", 
            "date_created": "2013-11-27 21:14:51.459121+00:00", 
            "author": "https://api.launchpad.net/1.0/~philip-day"
        }, 
        {
            "content": "I'm out for the rest of the week and have a lot on my plate already.  But if this sits too long I may try to tackle it.", 
            "date_created": "2013-11-27 21:24:33.060612+00:00", 
            "author": "https://api.launchpad.net/1.0/~alaski"
        }, 
        {
            "content": "Added Ryan Moor (HP) as he is going to start working on a patch for this", 
            "date_created": "2013-11-28 11:48:18.208806+00:00", 
            "author": "https://api.launchpad.net/1.0/~philip-day"
        }, 
        {
            "content": "Attached is a patch that contains a solution\n\nNever submitted tin this way before so not sure what is required\n\nCommit message: >>\nuse 'os_type' in ephemeral filename only if mkfs defined\n\nCurrently for undefined os-types it will use the default mkfs command, but use the meta 'os_type' in the name of the ephemeral file (e.g. ephemeral_20_abcdef). Which can result in a lot of files (DoS?)\nThis change will only use 'os_type' in the ephemeral filename if there is a specific mkfs command defined, otherwise it will use 'default' (e.g. ephemeral_20_default)\n\nModifed the tests to test for:\n  os_type=''\n  os_type=None\n  os_type='test' - with no mkfs command specified\n  os_type='test' - with a mkfs command specified\n<<\n\nrun it up in devstack and it behaves as expected", 
            "date_created": "2013-11-29 17:59:20.112905+00:00", 
            "author": "https://api.launchpad.net/1.0/~moorryan"
        }, 
        {
            "content": "The patch from Ryan looks good to me and should address the reported issue.", 
            "date_created": "2013-12-05 22:25:58.952307+00:00", 
            "author": "https://api.launchpad.net/1.0/~alaski"
        }, 
        {
            "content": "Patch looks good to me too - nice work.\n\nThe patch doesn't seem to apply on stable/havana though - so I guess we need a separate  patch file for that.\n\nAny others we need ?", 
            "date_created": "2013-12-06 11:29:23.017000+00:00", 
            "author": "https://api.launchpad.net/1.0/~philip-day"
        }, 
        {
            "content": "We'll need a stable/havana patch for this. I suspect this affects grizzly too so we'll need a stable/grizzly patch too.", 
            "date_created": "2013-12-06 15:50:47.230697+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "master patch looks good to me, too.  Thanks!\n\nSo we just need the stable backports now.  moorryan, do you think you can work on some backports, too?", 
            "date_created": "2013-12-06 20:19:53.206624+00:00", 
            "author": "https://api.launchpad.net/1.0/~russellb"
        }, 
        {
            "content": "backported for stable/havana\n\n", 
            "date_created": "2013-12-09 10:06:45.342349+00:00", 
            "author": "https://api.launchpad.net/1.0/~moorryan"
        }, 
        {
            "content": "backported for stable/grizzly", 
            "date_created": "2013-12-09 10:40:27.821887+00:00", 
            "author": "https://api.launchpad.net/1.0/~moorryan"
        }, 
        {
            "content": "The stable patches look good to me - nice work Ryan.", 
            "date_created": "2013-12-09 10:54:11.923314+00:00", 
            "author": "https://api.launchpad.net/1.0/~philip-day"
        }, 
        {
            "content": "All 3 patches look good to me.  Thanks Ryan.", 
            "date_created": "2013-12-09 14:47:13.260095+00:00", 
            "author": "https://api.launchpad.net/1.0/~alaski"
        }, 
        {
            "content": "Proposed impact description:\r\n\r\nTitle: Nova compute DoS through ephemeral disk backing files\r\nReporter: Phil Day (HP)\r\nProducts: Nova\r\nAffects: All supported versions\r\n\r\nDescription:\r\nPhil Day from HP reported a vulnerability in the handling of ephemeral disk backing files on Nova compute nodes. By repeatedly spawning new instances of a snapshotted server with random os_type (and quickly deleting those instances), an authenticated user could generate lots of different ephemeral disk backing files and fill up compute node disks, potentially resulting in a Denial of Service against a Nova setup.", 
            "date_created": "2013-12-09 16:03:15.067782+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "After writing the impact description it appears to me that this DoS vector could end up being costly for the attacker. I tend to consider \"costly DoS\" to fall in the same category as \"normal usage\" for a resource provider... Thoughts on that ? Should this still be considered a practical vulnerability ?", 
            "date_created": "2013-12-09 16:05:30.559111+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "In my opinion, it comes down to whether there is typically a quota/rate-limit around these sorts of operations, and whether or not they are likely to be tracked/billed by a provider. But I don't have the answer to those (hopefully someone here with OpenStack operational background can confirm).", 
            "date_created": "2013-12-09 16:32:09.455797+00:00", 
            "author": "https://api.launchpad.net/1.0/~fungi"
        }, 
        {
            "content": "Hi Thierry,\r\n\r\nA minor clarification on the impact description:\r\n\r\n\"By repeatedly spawning new instances of a snapshotted server with random os_type ...\"   should read \" By repeatedly creating snapshots, changing the os_type to a new random value, and spawning new instances  from the snapshot ...\"\r\n\r\nI don\u2019t think its necessarily that costly - you do have to pay for each instance you create, but it can be the smallest instance needed and doesn\u2019t have to exist any longer than the time to create it.  You could probably even kill the instance before it gets to Active (It only needs to get past the creation of the ephemeral backing file) and avoid any billing at all on some systems.  Likewise you don't have to keep the snapshots once the instance has been created.   Because the ephemeral backing files are never cleared up (its assumed that they are small and a limited set) you don't have to do this at a fast rate to create a long term attack.\r\n\r\nPhil\r\n\r\n> -----Original Message-----\r\n> From: <email address hidden> [mailto:<email address hidden>] On Behalf\r\n> Of Thierry Carrez\r\n> Sent: 09 December 2013 16:06\r\n> To: Day, Phil\r\n> Subject: [Bug 1253980] Re: DoS attack via setting os_type in snapshots.\r\n> \r\n> After writing the impact description it appears to me that this DoS vector\r\n> could end up being costly for the attacker. I tend to consider \"costly DoS\" to\r\n> fall in the same category as \"normal usage\" for a resource provider...\r\n> Thoughts on that ? Should this still be considered a practical vulnerability ?\r\n> \r\n> --\r\n> You received this bug notification because you are subscribed to the bug\r\n> report.\r\n> https://bugs.launchpad.net/bugs/1253980\r\n> \r\n> Title:\r\n>   DoS attack via setting os_type in snapshots.\r\n> \r\n> Status in OpenStack Compute (Nova):\r\n>   In Progress\r\n> Status in OpenStack Compute (nova) grizzly series:\r\n>   New\r\n> Status in OpenStack Compute (nova) havana series:\r\n>   New\r\n> Status in OpenStack Security Advisories:\r\n>   Triaged\r\n> \r\n> Bug description:\r\n>   If the os_type metadata is set of an image, the ephemeral disk backing file\r\n> for that image will be named ephemeral_[size]_[os_type].\r\n>   Because the user can change os_type they can use this to create new\r\n> ephemeral backing files.\r\n>   Nova image cache management does not include deleting ephemeral\r\n> backing files (presumably because they are expected to be a small, stable\r\n> set.\r\n> \r\n>   Hence a user can fill the disk with ephemeral backing files via the\r\n>   following:\r\n> \r\n>   1) Spawn a instance\r\n>   2) Create a snapshot from it, delete the original instance\r\n>   3) In a loop:\r\n>   generate a random os_type\r\n>   set os_type to the snapshot\r\n>   spawn and instance from it, and then delete the instance\r\n> \r\n>   Every iteration will generate an ephemeral backing file on a compute\r\n>   host.  With a stacking scheduling policy there is a good chance of\r\n>   hitting the same host repeatedly until its disk is full.\r\n> \r\n>   Suggested mitigation\r\n> \r\n>   Only use \u201cos_type\u201d in the ephemeral file name if there is a specific\r\n>   mkfs command defined, otherwise use \u201cdefault\u201d   (Currently for\r\n>   undefined os-types it will use the default mkfs command, but still\r\n>   uses os_type in the name.\r\n> \r\n> To manage notifications about this bug go to:\r\n> https://bugs.launchpad.net/nova/+bug/1253980/+subscriptions\r\n", 
            "date_created": "2013-12-09 18:10:42+00:00", 
            "author": "https://api.launchpad.net/1.0/~philip-day"
        }, 
        {
            "content": "New proposed impact desc:\n\n--------------------------------------------\nTitle: Nova compute DoS through ephemeral disk backing files\nReporter: Phil Day (HP)\nProducts: Nova\nAffects: All supported versions\n\nDescription:\nPhil Day from HP reported a vulnerability in the handling of ephemeral disk backing files on Nova compute nodes. By repeatedly creating snapshots, changing the os_type to a new random value, and spawning new instances from the snapshot (and quickly deleting those instances), an authenticated user could generate lots of different ephemeral disk backing files and fill up compute node disks, potentially resulting in a Denial of Service against a Nova setup.\n--------------------------------------------\n\n@Phil: agreed... waiting for confirmation from other VMT members to go ahead.  Would the ephemeral backing files all land on the same server (reaching a state of partial DoS quickly) or be spread across all compute nodes (reaching a state of total DoS but slowly) ?", 
            "date_created": "2013-12-10 09:48:53.672998+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "> @Phil: agreed... waiting for confirmation from other VMT members to go\r\n> ahead.  Would the ephemeral backing files all land on the same server\r\n> (reaching a state of partial DoS quickly) or be spread across all compute\r\n> nodes (reaching a state of total DoS but slowly) ?\r\n\r\nThat depends entirely on the scheduling policy configured in Nova - a stacking model would hit the issue on specific nodes more quickly that a spreading model (so a quicker DoS on specific servers) - but really it\u2019s the total DoS that is the issue which is kind of the same in either case, its just a question of if you fill from the side or from the bottom.\r\n\r\n> -----Original Message-----\r\n> From: <email address hidden> [mailto:<email address hidden>] On Behalf\r\n> Of Thierry Carrez\r\n> Sent: 10 December 2013 09:49\r\n> To: Day, Phil\r\n> Subject: [Bug 1253980] Re: DoS attack via setting os_type in snapshots.\r\n> \r\n> New proposed impact desc:\r\n> \r\n> --------------------------------------------\r\n> Title: Nova compute DoS through ephemeral disk backing files\r\n> Reporter: Phil Day (HP)\r\n> Products: Nova\r\n> Affects: All supported versions\r\n> \r\n> Description:\r\n> Phil Day from HP reported a vulnerability in the handling of ephemeral disk\r\n> backing files on Nova compute nodes. By repeatedly creating snapshots,\r\n> changing the os_type to a new random value, and spawning new instances\r\n> from the snapshot (and quickly deleting those instances), an authenticated\r\n> user could generate lots of different ephemeral disk backing files and fill up\r\n> compute node disks, potentially resulting in a Denial of Service against a Nova\r\n> setup.\r\n> --------------------------------------------\r\n> \r\n> @Phil: agreed... waiting for confirmation from other VMT members to go\r\n> ahead.  Would the ephemeral backing files all land on the same server\r\n> (reaching a state of partial DoS quickly) or be spread across all compute\r\n> nodes (reaching a state of total DoS but slowly) ?\r\n> \r\n> --\r\n> You received this bug notification because you are subscribed to the bug\r\n> report.\r\n> https://bugs.launchpad.net/bugs/1253980\r\n> \r\n> Title:\r\n>   DoS attack via setting os_type in snapshots.\r\n> \r\n> Status in OpenStack Compute (Nova):\r\n>   In Progress\r\n> Status in OpenStack Compute (nova) grizzly series:\r\n>   New\r\n> Status in OpenStack Compute (nova) havana series:\r\n>   New\r\n> Status in OpenStack Security Advisories:\r\n>   Triaged\r\n> \r\n> Bug description:\r\n>   If the os_type metadata is set of an image, the ephemeral disk backing file\r\n> for that image will be named ephemeral_[size]_[os_type].\r\n>   Because the user can change os_type they can use this to create new\r\n> ephemeral backing files.\r\n>   Nova image cache management does not include deleting ephemeral\r\n> backing files (presumably because they are expected to be a small, stable\r\n> set.\r\n> \r\n>   Hence a user can fill the disk with ephemeral backing files via the\r\n>   following:\r\n> \r\n>   1) Spawn a instance\r\n>   2) Create a snapshot from it, delete the original instance\r\n>   3) In a loop:\r\n>   generate a random os_type\r\n>   set os_type to the snapshot\r\n>   spawn and instance from it, and then delete the instance\r\n> \r\n>   Every iteration will generate an ephemeral backing file on a compute\r\n>   host.  With a stacking scheduling policy there is a good chance of\r\n>   hitting the same host repeatedly until its disk is full.\r\n> \r\n>   Suggested mitigation\r\n> \r\n>   Only use \u201cos_type\u201d in the ephemeral file name if there is a specific\r\n>   mkfs command defined, otherwise use \u201cdefault\u201d   (Currently for\r\n>   undefined os-types it will use the default mkfs command, but still\r\n>   uses os_type in the name.\r\n> \r\n> To manage notifications about this bug go to:\r\n> https://bugs.launchpad.net/nova/+bug/1253980/+subscriptions\r\n", 
            "date_created": "2013-12-10 10:02:57+00:00", 
            "author": "https://api.launchpad.net/1.0/~philip-day"
        }, 
        {
            "content": "Should the proposed impact mention that this is libvirt specific?  Otherwise it lgtm.", 
            "date_created": "2013-12-10 14:20:16.047285+00:00", 
            "author": "https://api.launchpad.net/1.0/~alaski"
        }, 
        {
            "content": "If it is libvirt-specific, then yes it should mention it. Is this the case ?", 
            "date_created": "2013-12-10 17:25:53.832227+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "This issue is libvirt specific.  Other drivers may or may not have similar issues but the code paths are very different and can't be generalized under this bug.  So adding \" running the libvirt driver.\" or something similar to the first sentence should cover it.", 
            "date_created": "2013-12-10 18:19:43.201472+00:00", 
            "author": "https://api.launchpad.net/1.0/~alaski"
        }, 
        {
            "content": "OK, how about:\n\n--------------------------------------------\nTitle: Nova compute DoS through ephemeral disk backing files\nReporter: Phil Day (HP)\nProducts: Nova\nAffects: All supported versions\n\nDescription:\nPhil Day from HP reported a vulnerability in the libvirt driver handling of ephemeral disk backing files on Nova compute nodes. By repeatedly creating snapshots, changing the os_type to a new random value, and spawning new instances from the snapshot (and quickly deleting those instances), an authenticated user could generate lots of different ephemeral disk backing files and fill up compute node disks, potentially resulting in a Denial of Service against a Nova setup. Only Nova setups running the libvirt driver are affected.\n--------------------------------------------", 
            "date_created": "2013-12-11 11:20:04.233188+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "LGTM - thanks Thierry\r\n\r\n> -----Original Message-----\r\n> From: <email address hidden> [mailto:<email address hidden>] On Behalf\r\n> Of Thierry Carrez\r\n> Sent: 11 December 2013 11:20\r\n> To: Day, Phil\r\n> Subject: [Bug 1253980] Re: DoS attack via setting os_type in snapshots.\r\n> \r\n> OK, how about:\r\n> \r\n> --------------------------------------------\r\n> Title: Nova compute DoS through ephemeral disk backing files\r\n> Reporter: Phil Day (HP)\r\n> Products: Nova\r\n> Affects: All supported versions\r\n> \r\n> Description:\r\n> Phil Day from HP reported a vulnerability in the libvirt driver handling of\r\n> ephemeral disk backing files on Nova compute nodes. By repeatedly creating\r\n> snapshots, changing the os_type to a new random value, and spawning new\r\n> instances from the snapshot (and quickly deleting those instances), an\r\n> authenticated user could generate lots of different ephemeral disk backing\r\n> files and fill up compute node disks, potentially resulting in a Denial of Service\r\n> against a Nova setup. Only Nova setups running the libvirt driver are\r\n> affected.\r\n> --------------------------------------------\r\n> \r\n> --\r\n> You received this bug notification because you are subscribed to the bug\r\n> report.\r\n> https://bugs.launchpad.net/bugs/1253980\r\n> \r\n> Title:\r\n>   DoS attack via setting os_type in snapshots.\r\n> \r\n> Status in OpenStack Compute (Nova):\r\n>   In Progress\r\n> Status in OpenStack Compute (nova) grizzly series:\r\n>   New\r\n> Status in OpenStack Compute (nova) havana series:\r\n>   New\r\n> Status in OpenStack Security Advisories:\r\n>   Triaged\r\n> \r\n> Bug description:\r\n>   If the os_type metadata is set of an image, the ephemeral disk backing file\r\n> for that image will be named ephemeral_[size]_[os_type].\r\n>   Because the user can change os_type they can use this to create new\r\n> ephemeral backing files.\r\n>   Nova image cache management does not include deleting ephemeral\r\n> backing files (presumably because they are expected to be a small, stable\r\n> set.\r\n> \r\n>   Hence a user can fill the disk with ephemeral backing files via the\r\n>   following:\r\n> \r\n>   1) Spawn a instance\r\n>   2) Create a snapshot from it, delete the original instance\r\n>   3) In a loop:\r\n>   generate a random os_type\r\n>   set os_type to the snapshot\r\n>   spawn and instance from it, and then delete the instance\r\n> \r\n>   Every iteration will generate an ephemeral backing file on a compute\r\n>   host.  With a stacking scheduling policy there is a good chance of\r\n>   hitting the same host repeatedly until its disk is full.\r\n> \r\n>   Suggested mitigation\r\n> \r\n>   Only use \u201cos_type\u201d in the ephemeral file name if there is a specific\r\n>   mkfs command defined, otherwise use \u201cdefault\u201d   (Currently for\r\n>   undefined os-types it will use the default mkfs command, but still\r\n>   uses os_type in the name.\r\n> \r\n> To manage notifications about this bug go to:\r\n> https://bugs.launchpad.net/nova/+bug/1253980/+subscriptions\r\n", 
            "date_created": "2013-12-11 11:42:39+00:00", 
            "author": "https://api.launchpad.net/1.0/~philip-day"
        }, 
        {
            "content": "Lgtm as well.", 
            "date_created": "2013-12-11 13:46:42.311298+00:00", 
            "author": "https://api.launchpad.net/1.0/~alaski"
        }, 
        {
            "content": "CVE requested", 
            "date_created": "2013-12-11 14:46:30.459360+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "CVE-2013-6437", 
            "date_created": "2013-12-12 08:55:25.954906+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "Proposed public disclosure date/time: Wednesday, December 18, 1500UTC.", 
            "date_created": "2013-12-13 13:34:13.866175+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "Tested:\n\nstable/grizzly pep8: PASS\nstable/grizzly py27: PASS\nstable/grizzly dsvm-full: PASS\nstable/grizzly dsvm-large-ops: PASS\nstable/havana pep8: PASS\nstable/havana py27: PASS\nstable/havana dsvm-full: PASS\nstable/havana dsvm-neutron: PASS\nmaster pep8: PASS\nmaster py27: PASS", 
            "date_created": "2013-12-17 13:22:32.195668+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "Icehouse (development branch) fix:\nhttps://review.openstack.org/62910\n\nHavana fix:\nhttps://review.openstack.org/62912\n\nGrizzly fix:\nhttps://review.openstack.org/62913", 
            "date_created": "2013-12-18 15:09:35.737219+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/62910\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=6e455cd97f04bf26bbe022be17c57e089cf502f4\nSubmitter: Jenkins\nBranch:    master\n\ncommit 6e455cd97f04bf26bbe022be17c57e089cf502f4\nAuthor: Ryan Moore <email address hidden>\nDate:   Fri Nov 29 14:21:19 2013 +0000\n\n    use 'os_type' in ephemeral filename only if mkfs defined\n    \n    Currently for undefined os-types it will use the default mkfs\n    command, but use the meta 'os_type' in the name of the\n    ephemeral file (e.g. ephemeral_20_abcdef). Which can result\n    in a lot of files (DoS?)\n    This change will only use 'os_type' in the ephemeral filename\n    if there is a specific mkfs command defined, otherwise it will\n    use 'default' (e.g. ephemeral_20_default)\n    \n    Modifed the tests to test for:\n      os_type=''\n      os_type=None\n      os_type='test' - with no mkfs command specified\n      os_type='test' - with a mkfs command specified\n    \n    Closes-Bug: 1253980\n    \n    Change-Id: Ie4c10f99ce690c5e4ef181624bd688c38923855c\n", 
            "date_created": "2013-12-18 18:21:13.737021+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/62912\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=ca38774ebcf5b67d16c202c8f218c0c433973ca9\nSubmitter: Jenkins\nBranch:    stable/havana\n\ncommit ca38774ebcf5b67d16c202c8f218c0c433973ca9\nAuthor: Ryan Moore <email address hidden>\nDate:   Fri Nov 29 14:21:19 2013 +0000\n\n    use 'os_type' in ephemeral filename only if mkfs defined\n    \n    Currently for undefined os-types it will use the default mkfs\n    command, but use the meta 'os_type' in the name of the\n    ephemeral file (e.g. ephemeral_20_abcdef). Which can result\n    in a lot of files (DoS?)\n    This change will only use 'os_type' in the ephemeral filename\n    if there is a specific mkfs command defined, otherwise it will\n    use 'default' (e.g. ephemeral_20_default)\n    \n    Modifed the tests to test for:\n      os_type=''\n      os_type=None\n      os_type='test' - with no mkfs command specified\n      os_type='test' - with a mkfs command specified\n    \n    Closes-Bug: 1253980\n    \n    Backport of Original Change-Id: Ie4c10f99ce690c5e4ef181624bd688c38923855c\n    to stable/havana\n    \n    Change-Id: Ifa2b94e79dabd586d7e904da247d099360229313\n", 
            "date_created": "2013-12-18 20:31:06.920851+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/62913\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=3e451f1bac57d24e47171cffb3ad59bb1610d836\nSubmitter: Jenkins\nBranch:    stable/grizzly\n\ncommit 3e451f1bac57d24e47171cffb3ad59bb1610d836\nAuthor: Ryan Moore <email address hidden>\nDate:   Fri Nov 29 14:21:19 2013 +0000\n\n    use 'os_type' in ephemeral filename only if mkfs defined\n    \n    Currently for undefined os-types it will use the default mkfs\n    command, but use the meta 'os_type' in the name of the\n    ephemeral file (e.g. ephemeral_20_abcdef). Which can result\n    in a lot of files (DoS?)\n    This change will only use 'os_type' in the ephemeral filename\n    if there is a specific mkfs command defined, otherwise it will\n    use 'default' (e.g. ephemeral_20_default)\n    \n    Modifed the tests to test for:\n      os_type=''\n      os_type=None\n      os_type='test' - with no mkfs command specified\n      os_type='test' - with a mkfs command specified\n    \n    Closes-Bug: 1253980\n    \n    Backport of Original Change-Id: Ie4c10f99ce690c5e4ef181624bd688c38923855c\n    to stable/grizzly\n    \n    Change-Id: Ia040910e90861a2987eff345ad1c01863655b124\n", 
            "date_created": "2013-12-18 20:33:27.775367+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "OSSA 2013-037", 
            "date_created": "2013-12-18 21:30:22.813938+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }
    ], 
    "closed": "2014-01-22 16:13:10.408192+00:00"
}