{
    "status": "Fix Released", 
    "last_updated": "2016-02-19 20:19:21.736794+00:00", 
    "description": "Nova Version:  2014.2.1\n\nFor situations where nova-compute is re-trying an instance delete after the original delete failed, and the serial console feature is enabled, the instance delete fails with:\n\n2015-04-27 16:54:49.900 114127 TRACE nova.compute.manager [instance: 6d117169-4057-4a4a-a0b7-0b12e996caa0]   File \"/usr/lib/python2.7/site-packages/nova/virt/libvirt/driver.py\", line 1179, in cleanup\n2015-04-27 16:54:49.900 114127 TRACE nova.compute.manager [instance: 6d117169-4057-4a4a-a0b7-0b12e996caa0]     for host, port in self._get_serial_ports_from_instance(instance):\n2015-04-27 16:54:49.900 114127 TRACE nova.compute.manager [instance: 6d117169-4057-4a4a-a0b7-0b12e996caa0]   File \"/usr/lib/python2.7/site-packages/nova/virt/libvirt/driver.py\", line 1197, in _get_serial_ports_from_instance\n2015-04-27 16:54:49.900 114127 TRACE nova.compute.manager [instance: 6d117169-4057-4a4a-a0b7-0b12e996caa0]     virt_dom = self._lookup_by_name(instance['name'])\n2015-04-27 16:54:49.900 114127 TRACE nova.compute.manager [instance: 6d117169-4057-4a4a-a0b7-0b12e996caa0]   File \"/usr/lib/python2.7/site-packages/nova/virt/libvirt/driver.py\", line 4195, in _lookup_by_name\n2015-04-27 16:54:49.900 114127 TRACE nova.compute.manager [instance: 6d117169-4057-4a4a-a0b7-0b12e996caa0]     raise exception.InstanceNotFound(instance_id=instance_name)\n2015-04-27 16:54:49.900 114127 TRACE nova.compute.manager [instance: 6d117169-4057-4a4a-a0b7-0b12e996caa0] InstanceNotFound: Instance instance-00000444 could not be found.\n\nOr, said another way, the _get_serial_ports_from_instance call should maybe not cause an exception if the instance cannot be found.\n\nMore details/context:\n\nIn our particular situation, some instance deletes are initially failing because the neutron port delete operation was failing or timing out.  So the VM goes to 'error' and remains in the deleting task_state.  However, since the failure is on the port delete, the domain has already been undefined in libvirt. The first invocation of _delete_instance calls shutdown_instance before an attempt is made to delete the network. Shutdown_instance is able to successfully call driver.destroy which will shutdown the instance and then runs the cleanup action, ignoring any errors around vif removal. This will undefine the domain as long as it was successfully shutdown.\n\nThe next time nova-compute is started, it finds the instance still in the deleting task state, so it re-tries the delete.  Part of the cleanup call ran by driver.destroy is to remove the serial console.  Note: this was already ran and successfully deleted on the first delete when the domain was successfully undefined.  But since the domain is no longer defined in libvirt, the _get_serial_ports_from_instance call fails, and again the entire delete operation fails and stops.  This makes it impossible to fully delete the instance.\n\nWhen the serial console feature is disabled, this delete re-try operation functions correctly and properly cleans up the rest of the instance, and it transitions to deleted.\n\nFWIW, we are also running nova-cells, so the neutron --> nova port notifications do not work/are disabled.  Don't know if that's relevant or not.\n\n\n\nSteps to reproduce:\n\n- nova-compute configured with serial console feature enabled\n- Create an instance which has a serial console configured\n- Delete that instance, but cause the neutron port delete to fail or timeout (via iptables or just shutting off neutron temporarily)\n- The instance should now be stuck in the deleting task state\n- Restart nova-compute\n- During the re-try of the delete operation, the above stack trace results.\n\n\n\nExpected result:\n\nRetries of instance deletions in this scenario should succeed with the same behavior that happens when the serial console feature is disabled.\n\n\n\nProposed Fix:\n\nUnder: https://github.com/openstack/nova/blob/master/nova/virt/libvirt/driver.py#L761-L765 shorty above this create a variable called isdefined and set it to true when we are checking to see if the domain is defined set the variable isdefined to false\n\nUnder: https://github.com/openstack/nova/blob/master/nova/virt/libvirt/driver.py#L848-L851 add a test to see if isdefined is false and if it is, do not attempt to get the serial console for the nonexistent domain.", 
    "tags": [
        "console", 
        "juno-backport-potential", 
        "libvirt"
    ], 
    "importance": "Medium", 
    "heat": 16, 
    "link": "https://bugs.launchpad.net/nova/+bug/1450594", 
    "owner": "https://api.launchpad.net/1.0/~wwriverrat", 
    "id": 1450594, 
    "index": 4243, 
    "openned": "2015-04-30 18:43:55.220856+00:00", 
    "created": "2015-04-30 18:43:55.220856+00:00", 
    "title": "Instance deletion fails sometimes when serial_console is enabled", 
    "comments": [
        {
            "content": "Nova Version:  2014.2.1\n\nFor situations where nova-compute is re-trying an instance delete after the original delete failed, and the serial console feature is enabled, the instance delete fails with:\n\n2015-04-27 16:54:49.900 114127 TRACE nova.compute.manager [instance: 6d117169-4057-4a4a-a0b7-0b12e996caa0]   File \"/usr/lib/python2.7/site-packages/nova/virt/libvirt/driver.py\", line 1179, in cleanup\n2015-04-27 16:54:49.900 114127 TRACE nova.compute.manager [instance: 6d117169-4057-4a4a-a0b7-0b12e996caa0]     for host, port in self._get_serial_ports_from_instance(instance):\n2015-04-27 16:54:49.900 114127 TRACE nova.compute.manager [instance: 6d117169-4057-4a4a-a0b7-0b12e996caa0]   File \"/usr/lib/python2.7/site-packages/nova/virt/libvirt/driver.py\", line 1197, in _get_serial_ports_from_instance\n2015-04-27 16:54:49.900 114127 TRACE nova.compute.manager [instance: 6d117169-4057-4a4a-a0b7-0b12e996caa0]     virt_dom = self._lookup_by_name(instance['name'])\n2015-04-27 16:54:49.900 114127 TRACE nova.compute.manager [instance: 6d117169-4057-4a4a-a0b7-0b12e996caa0]   File \"/usr/lib/python2.7/site-packages/nova/virt/libvirt/driver.py\", line 4195, in _lookup_by_name\n2015-04-27 16:54:49.900 114127 TRACE nova.compute.manager [instance: 6d117169-4057-4a4a-a0b7-0b12e996caa0]     raise exception.InstanceNotFound(instance_id=instance_name)\n2015-04-27 16:54:49.900 114127 TRACE nova.compute.manager [instance: 6d117169-4057-4a4a-a0b7-0b12e996caa0] InstanceNotFound: Instance instance-00000444 could not be found.\n\nOr, said another way, the _get_serial_ports_from_instance call should maybe not cause an exception if the instance cannot be found.\n\nMore details/context:\n\nIn our particular situation, some instance deletes are initially failing because the neutron port delete operation was failing or timing out.  So the VM goes to 'error' and remains in the deleting task_state.  However, since the failure is on the port delete, the domain has already been undefined in libvirt. The first invocation of _delete_instance calls shutdown_instance before an attempt is made to delete the network. Shutdown_instance is able to successfully call driver.destroy which will shutdown the instance and then runs the cleanup action, ignoring any errors around vif removal. This will undefine the domain as long as it was successfully shutdown.\n\nThe next time nova-compute is started, it finds the instance still in the deleting task state, so it re-tries the delete.  Part of the cleanup call ran by driver.destroy is to remove the serial console.  Note: this was already ran and successfully deleted on the first delete when the domain was successfully undefined.  But since the domain is no longer defined in libvirt, the _get_serial_ports_from_instance call fails, and again the entire delete operation fails and stops.  This makes it impossible to fully delete the instance.\n\nWhen the serial console feature is disabled, this delete re-try operation functions correctly and properly cleans up the rest of the instance, and it transitions to deleted.\n\nFWIW, we are also running nova-cells, so the neutron --> nova port notifications do not work/are disabled.  Don't know if that's relevant or not.\n\n\n\nSteps to reproduce:\n\n- nova-compute configured with serial console feature enabled\n- Create an instance which has a serial console configured\n- Delete that instance, but cause the neutron port delete to fail or timeout (via iptables or just shutting off neutron temporarily)\n- The instance should now be stuck in the deleting task state\n- Restart nova-compute\n- During the re-try of the delete operation, the above stack trace results.\n\n\n\nExpected result:\n\nRetries of instance deletions in this scenario should succeed with the same behavior that happens when the serial console feature is disabled.\n\n\n\nProposed Fix:\n\nUnder: https://github.com/openstack/nova/blob/master/nova/virt/libvirt/driver.py#L761-L765 shorty above this create a variable called isdefined and set it to true when we are checking to see if the domain is defined set the variable isdefined to false\n\nUnder: https://github.com/openstack/nova/blob/master/nova/virt/libvirt/driver.py#L848-L851 add a test to see if isdefined is false and if it is, do not attempt to get the serial console for the nonexistent domain.", 
            "date_created": "2015-04-30 18:43:55.220856+00:00", 
            "author": "https://api.launchpad.net/1.0/~mdorman-m"
        }, 
        {
            "content": "Mike, are you in the process of writing a review?", 
            "date_created": "2015-05-01 13:49:26.781125+00:00", 
            "author": "https://api.launchpad.net/1.0/~dims-v"
        }, 
        {
            "content": "Yeah, someone from my org is working toward that.", 
            "date_created": "2015-05-01 15:15:11.594569+00:00", 
            "author": "https://api.launchpad.net/1.0/~mdorman-m"
        }, 
        {
            "content": "Seem like the solution could also be to wrap the _get_serial_ports_from_instance in a try ... except exception.InstanceNotFound when attempting to release the serial ports.", 
            "date_created": "2015-05-04 18:07:48.036215+00:00", 
            "author": "https://api.launchpad.net/1.0/~wwriverrat"
        }, 
        {
            "content": "I've confirmed that a second cleanup attempt will raise an exceptions. InstanceNotFound.\n\nCreating a patch and an accompanying unit test. Likely going to surround the serial cleanup work with a try-except that allows the method to proceed when  InstanceNotFound.", 
            "date_created": "2015-05-04 21:09:50.552177+00:00", 
            "author": "https://api.launchpad.net/1.0/~wwriverrat"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/179978", 
            "date_created": "2015-05-05 00:24:51.724080+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: stable/kilo\nReview: https://review.openstack.org/199655", 
            "date_created": "2015-07-08 17:22:07.471692+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/199655\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=124b501b1fc20280dcd9e442177f04f82a89a473\nSubmitter: Jenkins\nBranch:    stable/kilo\n\ncommit 124b501b1fc20280dcd9e442177f04f82a89a473\nAuthor: David Bingham <email address hidden>\nDate:   Mon May 4 17:13:06 2015 -0700\n\n    Allow libvirt cleanup completion when serial ports already released\n    \n    Libvirt driver cleanup changed with try-except to be tolerant of\n    InstanceNotFound exceptions when attempting to fetch missing ports\n    (possibly removed on a previous cleanup).\n    \n    Change-Id: I804c8821e797596f60a4ec911fdd423d3f7ad653\n    Closes-Bug: 1450594\n    (cherry picked from commit 2e72e8f374972f5487660b66758c4d3d1eb87791)\n", 
            "date_created": "2015-07-18 01:54:36.291501+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2015-07-28 09:08:30.581178+00:00"
}