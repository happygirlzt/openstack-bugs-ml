{
    "status": "Fix Released", 
    "last_updated": "2012-09-27 15:47:03.398172+00:00", 
    "description": "When a single instance is booted, the DB entry for the new instance is created by the API layer, and the quota reservations (instance, ram, cores) are committed immediately.\n\nIf that instance launch goes on to fail in the scheduler, say because no valid host is found,  then an attempt is made to roll back the quota reservations. However at that point its too late as the reservations have already been committed by the API layer, so the relevant rows in the DB reservations table are already marked deleted.\n\nSo even though no actual instance springs into existence, the quota headroom for (instance, ram, cores) are all reduced despite there being no real resource usage involved.\n\nContrast with the case where multiple instances are being booted at once, e.g. via EC2 RunInstances with MinCount > 1. Here the creation of the DB entry for the new instances is delegated from the API layer to the scheduler. This will not occur, and the consequent quota commit also does not occur, if the new instances cannot be scheduled to a host.\n\nInstead the reservations are rolled back by the scheduler, which is a more accurate reflection of reality.\n\nThese two cases should be made consistent.", 
    "tags": [], 
    "importance": "Low", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1032663", 
    "owner": "https://api.launchpad.net/1.0/~eglynn", 
    "id": 1032663, 
    "index": 633, 
    "openned": "2012-08-03 14:48:37.468265+00:00", 
    "created": "2012-08-03 14:48:37.468265+00:00", 
    "title": "Inconsistent quota consumption for failed-to-schedule instances", 
    "comments": [
        {
            "content": "When a single instance is booted, the DB entry for the new instance is created by the API layer, and the quota reservations (instance, ram, cores) are committed immediately.\n\nIf that instance launch goes on to fail in the scheduler, say because no valid host is found,  then an attempt is made to roll back the quota reservations. However at that point its too late as the reservations have already been committed by the API layer, so the relevant rows in the DB reservations table are already marked deleted.\n\nSo even though no actual instance springs into existence, the quota headroom for (instance, ram, cores) are all reduced despite there being no real resource usage involved.\n\nContrast with the case where multiple instances are being booted at once, e.g. via EC2 RunInstances with MinCount > 1. Here the creation of the DB entry for the new instances is delegated from the API layer to the scheduler. This will not occur, and the consequent quota commit also does not occur, if the new instances cannot be scheduled to a host.\n\nInstead the reservations are rolled back by the scheduler, which is a more accurate reflection of reality.\n\nThese two cases should be made consistent - my preference is for the scheduler-driven quota commit to be followed consistently.", 
            "date_created": "2012-08-03 14:48:37.468265+00:00", 
            "author": "https://api.launchpad.net/1.0/~eglynn"
        }, 
        {
            "content": "Fixed as a side-effect of:\n\n  https://review.openstack.org/11379", 
            "date_created": "2012-08-17 13:37:03.149713+00:00", 
            "author": "https://api.launchpad.net/1.0/~eglynn"
        }
    ], 
    "closed": "2012-09-19 06:40:19.881787+00:00"
}