{
    "status": "Invalid", 
    "last_updated": "2014-09-17 11:52:55.185483+00:00", 
    "description": "After bug 938853, bug 817872 have been fixed, it's not possible to delete a security group if some instances are still using it.\n\nThis can be problematic in case of compute host failures. If such node goes down, instances will remain in the database. The only thing that the user can do is to schedule their deletion (task_state - > deleting). This will remove them once the compute service is available again, but until then security groups removal will not work.\n\nI propose a change that should work for iptables-based deployment, but needs some review for other backends.\n\nIt should be safe to drop the security group association when the instance is marked as \"deleting\". The host does not need knowledge of the specific group to cleanup iptables, since every element related to the instance will be in its own chain. If the instance is scheduled for deletion it doesn't need (and may not be able) to receive notifications about other hosts in its security group.\nI can't see any reason to keep the instance <-> security group connection once deletion is scheduled.\n\n(This may be a separate class of bugs, rather than just a security groups specific issue. Deleting other elements connected to instance in \"deleting\" state could be verified.)", 
    "tags": [], 
    "importance": "Low", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1050979", 
    "owner": "None", 
    "id": 1050979, 
    "index": 649, 
    "openned": "2012-09-14 16:02:29.570810+00:00", 
    "created": "2012-09-14 16:02:29.570810+00:00", 
    "title": "'deleting' instances prevent security group deletion", 
    "comments": [
        {
            "content": "After bug 938853, bug 817872 have been fixed, it's not possible to delete a security group if some instances are still using it.\n\nThis can be problematic in case of compute host failures. If such node goes down, instances will remain in the database. The only thing that the user can do is to schedule their deletion (task_state - > deleting). This will remove them once the compute service is available again, but until then security groups removal will not work.\n\nI propose a change that should work for iptables-based deployment, but needs some review for other backends.\n\nIt should be safe to drop the security group association when the instance is marked as \"deleting\". The host does not need knowledge of the specific group to cleanup iptables, since every element related to the instance will be in its own chain. If the instance is scheduled for deletion it doesn't need (and may not be able) to receive notifications about other hosts in its security group.\nI can't see any reason to keep the instance <-> security group connection once deletion is scheduled.\n\n(This may be a separate class of bugs, rather than just a security groups specific issue. Deleting other elements connected to instance in \"deleting\" state could be verified.)", 
            "date_created": "2012-09-14 16:02:29.570810+00:00", 
            "author": "https://api.launchpad.net/1.0/~stanislaw-pitucha"
        }, 
        {
            "content": "Makes sense that we could delete the connection once deletion is scheduled, although fyi a recent change went in to allow deleting vms on hosts that are down which should mitigate the problem somewhat:\n\nhttps://review.openstack.org/#/c/12231/", 
            "date_created": "2012-09-14 17:21:16.291785+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "Is this still valid? it hasn't been updated in over a year.", 
            "date_created": "2014-09-09 22:36:17.008872+00:00", 
            "author": "https://api.launchpad.net/1.0/~jogo"
        }, 
        {
            "content": "I'm going to assume vish's bug fixes a bunch of this.", 
            "date_created": "2014-09-17 11:52:54.740936+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }
    ], 
    "closed": "2014-09-17 11:52:33.467737+00:00"
}