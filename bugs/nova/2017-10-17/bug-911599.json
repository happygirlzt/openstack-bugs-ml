{
    "status": "Fix Released", 
    "last_updated": "2012-04-05 09:59:06.328747+00:00", 
    "description": "When I try to set a property on a glance image by POSTing to the OS API at /images/<id>/metadata, the location field is set to Null.  I've put the relevant bit of the registry log below.\n\nI've tried looking through the glance code, and I can't see exactly how this is happening.  I strongly suspect it's all my fault though, as I was the one that originally filed the bug that said that the location field shouldn't be publicly visible - my guess is that it's being zeroed out somewhere and then set back.  Karma :-)\n\n\n2012-01-04 02:43:20    DEBUG [glance.registry.api.v1.images] Updating image 31cc48af-c5f2-ea38-dcb4-aa0fe111b213 with metadata: {u'status': u'active', u'name': u'image-1325644992887', u'deleted': False, u'checksum': u'3cb82d3c9b570e95deee6f10fca0285f', u'min_ram': u'0', u'disk_format': u'raw', u'id': u'31cc48af-c5f2-ea38-dcb4-aa0fe111b213', u'location': None, u'container_format': u'bare', u'min_disk': u'0', u'is_public': True, u'properties': {u'platformlayerid': u'org.platformlayer.ids.ProjectId [fathomdb]/org.platformlayer.ids.ServiceType [imagefactory]/org.platformlayer.ids.ItemType [diskImageRecipe]/76725505-4652-40db-a70e-1efb634f74fc'}, u'size': 404346423}\n2012-01-04 02:43:20     INFO [sqlalchemy.engine.base.Engine] BEGIN (implicit)\n2012-01-04 02:43:20     INFO [sqlalchemy.engine.base.Engine] SELECT images.created_at AS images_created_at, images.updated_at AS images_updated_at, images.deleted_at AS images_deleted_at, images.deleted AS images_deleted, images.id AS images_id, images.name AS images_name, images.disk_format AS images_disk_format, images.container_format AS images_container_format, images.size AS images_size, images.status AS images_status, images.is_public AS images_is_public, images.location AS images_location, images.checksum AS images_checksum, images.min_disk AS images_min_disk, images.min_ram AS images_min_ram, images.owner AS images_owner, image_properties_1.created_at AS image_properties_1_created_at, image_properties_1.updated_at AS image_properties_1_updated_at, image_properties_1.deleted_at AS image_properties_1_deleted_at, image_properties_1.deleted AS image_properties_1_deleted, image_properties_1.id AS image_properties_1_id, image_properties_1.image_id AS image_properties_1_image_id, image_properties_1.name AS image_properties_1_name, image_properties_1.value AS image_properties_1_value, image_members_1.created_at AS image_members_1_created_at, image_members_1.updated_at AS image_members_1_updated_at, image_members_1.deleted_at AS image_members_1_deleted_at, image_members_1.deleted AS image_members_1_deleted, image_members_1.id AS image_members_1_id, image_members_1.image_id AS image_members_1_image_id, image_members_1.member AS image_members_1_member, image_members_1.can_share AS image_members_1_can_share \nFROM images LEFT OUTER JOIN image_properties AS image_properties_1 ON images.id = image_properties_1.image_id LEFT OUTER JOIN image_members AS image_members_1 ON images.id = image_members_1.image_id \nWHERE images.id = ?\n2012-01-04 02:43:20     INFO [sqlalchemy.engine.base.Engine] (u'31cc48af-c5f2-ea38-dcb4-aa0fe111b213',)\n2012-01-04 02:43:20    DEBUG [sqlalchemy.engine.base.Engine] Col ('images_created_at', 'images_updated_at', 'images_deleted_at', 'images_deleted', 'images_id', 'images_name', 'images_disk_format', 'images_container_format', 'images_size', 'images_status', 'images_is_public', 'images_location', 'images_checksum', 'images_min_disk', 'images_min_ram', 'images_owner', 'image_properties_1_created_at', 'image_properties_1_updated_at', 'image_properties_1_deleted_at', 'image_properties_1_deleted', 'image_properties_1_id', 'image_properties_1_image_id', 'image_properties_1_name', 'image_properties_1_value', 'image_members_1_created_at', 'image_members_1_updated_at', 'image_members_1_deleted_at', 'image_members_1_deleted', 'image_members_1_id', 'image_members_1_image_id', 'image_members_1_member', 'image_members_1_can_share')\n2012-01-04 02:43:20    DEBUG [sqlalchemy.engine.base.Engine] Row (u'2012-01-04 02:43:12.977819', u'2012-01-04 02:43:20.102921', None, 0, u'31cc48af-c5f2-ea38-dcb4-aa0fe111b213', u'image-1325644992887', u'raw', u'bare', 404346423, u'active', 1, u'file:///var/lib/glance/images/31cc48af-c5f2-ea38-dcb4-aa0fe111b213', u'3cb82d3c9b570e95deee6f10fca0285f', 0, 0, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None)\n2012-01-04 02:43:20     INFO [sqlalchemy.engine.base.Engine] UPDATE images SET updated_at=?, location=?, min_disk=?, min_ram=? WHERE images.id = ?\n2012-01-04 02:43:20     INFO [sqlalchemy.engine.base.Engine] ('2012-01-04 02:43:20.423022', None, u'0', u'0', u'31cc48af-c5f2-ea38-dcb4-aa0fe111b213')\n2012-01-04 02:43:20     INFO [sqlalchemy.engine.base.Engine] INSERT INTO image_properties (created_at, updated_at, deleted_at, deleted, image_id, name, value) VALUES (?, ?, ?, ?, ?, ?, ?)\n2012-01-04 02:43:20     INFO [sqlalchemy.engine.base.Engine] ('2012-01-04 02:43:20.424064', '2012-01-04 02:43:20.424068', None, 0, u'31cc48af-c5f2-ea38-dcb4-aa0fe111b213', u'platformlayerid', u'org.platformlayer.ids.ProjectId [fathomdb]/org.platformlayer.ids.ServiceType [imagefactory]/org.platformlayer.ids.ItemType [diskImageRecipe]/76725505-4652-40db-a70e-1efb634f74fc')", 
    "tags": [
        "in-stable-diablo"
    ], 
    "importance": "High", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/911599", 
    "owner": "https://api.launchpad.net/1.0/~bcwaldon", 
    "id": 911599, 
    "index": 546, 
    "openned": "2012-01-11 21:30:44.335135+00:00", 
    "created": "2012-01-04 04:57:14.753530+00:00", 
    "title": "Location field is wiped when updating metadata", 
    "comments": [
        {
            "content": "When I try to set a property on a glance image by POSTing to the OS API at /images/<id>/metadata, the location field is set to Null.  I've put the relevant bit of the registry log below.\n\nI've tried looking through the glance code, and I can't see exactly how this is happening.  I strongly suspect it's all my fault though, as I was the one that originally filed the bug that said that the location field shouldn't be publicly visible - my guess is that it's being zeroed out somewhere and then set back.  Karma :-)\n\n\n2012-01-04 02:43:20    DEBUG [glance.registry.api.v1.images] Updating image 31cc48af-c5f2-ea38-dcb4-aa0fe111b213 with metadata: {u'status': u'active', u'name': u'image-1325644992887', u'deleted': False, u'checksum': u'3cb82d3c9b570e95deee6f10fca0285f', u'min_ram': u'0', u'disk_format': u'raw', u'id': u'31cc48af-c5f2-ea38-dcb4-aa0fe111b213', u'location': None, u'container_format': u'bare', u'min_disk': u'0', u'is_public': True, u'properties': {u'platformlayerid': u'org.platformlayer.ids.ProjectId [fathomdb]/org.platformlayer.ids.ServiceType [imagefactory]/org.platformlayer.ids.ItemType [diskImageRecipe]/76725505-4652-40db-a70e-1efb634f74fc'}, u'size': 404346423}\n2012-01-04 02:43:20     INFO [sqlalchemy.engine.base.Engine] BEGIN (implicit)\n2012-01-04 02:43:20     INFO [sqlalchemy.engine.base.Engine] SELECT images.created_at AS images_created_at, images.updated_at AS images_updated_at, images.deleted_at AS images_deleted_at, images.deleted AS images_deleted, images.id AS images_id, images.name AS images_name, images.disk_format AS images_disk_format, images.container_format AS images_container_format, images.size AS images_size, images.status AS images_status, images.is_public AS images_is_public, images.location AS images_location, images.checksum AS images_checksum, images.min_disk AS images_min_disk, images.min_ram AS images_min_ram, images.owner AS images_owner, image_properties_1.created_at AS image_properties_1_created_at, image_properties_1.updated_at AS image_properties_1_updated_at, image_properties_1.deleted_at AS image_properties_1_deleted_at, image_properties_1.deleted AS image_properties_1_deleted, image_properties_1.id AS image_properties_1_id, image_properties_1.image_id AS image_properties_1_image_id, image_properties_1.name AS image_properties_1_name, image_properties_1.value AS image_properties_1_value, image_members_1.created_at AS image_members_1_created_at, image_members_1.updated_at AS image_members_1_updated_at, image_members_1.deleted_at AS image_members_1_deleted_at, image_members_1.deleted AS image_members_1_deleted, image_members_1.id AS image_members_1_id, image_members_1.image_id AS image_members_1_image_id, image_members_1.member AS image_members_1_member, image_members_1.can_share AS image_members_1_can_share \nFROM images LEFT OUTER JOIN image_properties AS image_properties_1 ON images.id = image_properties_1.image_id LEFT OUTER JOIN image_members AS image_members_1 ON images.id = image_members_1.image_id \nWHERE images.id = ?\n2012-01-04 02:43:20     INFO [sqlalchemy.engine.base.Engine] (u'31cc48af-c5f2-ea38-dcb4-aa0fe111b213',)\n2012-01-04 02:43:20    DEBUG [sqlalchemy.engine.base.Engine] Col ('images_created_at', 'images_updated_at', 'images_deleted_at', 'images_deleted', 'images_id', 'images_name', 'images_disk_format', 'images_container_format', 'images_size', 'images_status', 'images_is_public', 'images_location', 'images_checksum', 'images_min_disk', 'images_min_ram', 'images_owner', 'image_properties_1_created_at', 'image_properties_1_updated_at', 'image_properties_1_deleted_at', 'image_properties_1_deleted', 'image_properties_1_id', 'image_properties_1_image_id', 'image_properties_1_name', 'image_properties_1_value', 'image_members_1_created_at', 'image_members_1_updated_at', 'image_members_1_deleted_at', 'image_members_1_deleted', 'image_members_1_id', 'image_members_1_image_id', 'image_members_1_member', 'image_members_1_can_share')\n2012-01-04 02:43:20    DEBUG [sqlalchemy.engine.base.Engine] Row (u'2012-01-04 02:43:12.977819', u'2012-01-04 02:43:20.102921', None, 0, u'31cc48af-c5f2-ea38-dcb4-aa0fe111b213', u'image-1325644992887', u'raw', u'bare', 404346423, u'active', 1, u'file:///var/lib/glance/images/31cc48af-c5f2-ea38-dcb4-aa0fe111b213', u'3cb82d3c9b570e95deee6f10fca0285f', 0, 0, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None)\n2012-01-04 02:43:20     INFO [sqlalchemy.engine.base.Engine] UPDATE images SET updated_at=?, location=?, min_disk=?, min_ram=? WHERE images.id = ?\n2012-01-04 02:43:20     INFO [sqlalchemy.engine.base.Engine] ('2012-01-04 02:43:20.423022', None, u'0', u'0', u'31cc48af-c5f2-ea38-dcb4-aa0fe111b213')\n2012-01-04 02:43:20     INFO [sqlalchemy.engine.base.Engine] INSERT INTO image_properties (created_at, updated_at, deleted_at, deleted, image_id, name, value) VALUES (?, ?, ?, ?, ?, ?, ?)\n2012-01-04 02:43:20     INFO [sqlalchemy.engine.base.Engine] ('2012-01-04 02:43:20.424064', '2012-01-04 02:43:20.424068', None, 0, u'31cc48af-c5f2-ea38-dcb4-aa0fe111b213', u'platformlayerid', u'org.platformlayer.ids.ProjectId [fathomdb]/org.platformlayer.ids.ServiceType [imagefactory]/org.platformlayer.ids.ItemType [diskImageRecipe]/76725505-4652-40db-a70e-1efb634f74fc')", 
            "date_created": "2012-01-04 04:57:14.753530+00:00", 
            "author": "https://api.launchpad.net/1.0/~justin-fathomdb"
        }, 
        {
            "content": "Aha.... I think the root problem is here, in nova, in nova/image/glance.py\n\nThe metadata update fetches all the metadata, merges in the values, and then posts that to glance (which is not the strictly correct in terms of concurrent updates, but anyway...)\n\nThe problem is that the fetch returns 'Location' of None.\n\nhttps://github.com/openstack/nova/blob/master/nova/image/glance.py#L437\n\ndef _limit_attributes(image_meta):\n    IMAGE_ATTRIBUTES = ['size', 'location', 'disk_format',\n                        'container_format', 'checksum', 'id',\n                        'name', 'created_at', 'updated_at',\n                        'deleted_at', 'deleted', 'status',\n                        'min_disk', 'min_ram', 'is_public']\n    output = {}\n    for attr in IMAGE_ATTRIBUTES:\n        output[attr] = image_meta.get(attr)\n\n    output['properties'] = image_meta.get('properties', {})\n\n    return output\n\nThat sets ['location'] to None; which then gets passed to the glance registry, which then updates the location to None.\n", 
            "date_created": "2012-01-04 05:58:46.746064+00:00", 
            "author": "https://api.launchpad.net/1.0/~justin-fathomdb"
        }, 
        {
            "content": "Removing 'location' from the list above does fix the problem.  Is this the right place to fix the problem though?  Or should it be fixed in glance itself (is there any legitimate reason to allow the location field to be set externally)? ", 
            "date_created": "2012-01-04 06:51:23.022204+00:00", 
            "author": "https://api.launchpad.net/1.0/~justin-fathomdb"
        }, 
        {
            "content": "1) We should make sure we don't send properties that aren't explicitly provided\n2) We should limit the mutable properties coming through the public api to exactly what is in the spec (disallow location)", 
            "date_created": "2012-01-04 15:33:37.054889+00:00", 
            "author": "https://api.launchpad.net/1.0/~bcwaldon"
        }, 
        {
            "content": "Setting to High, as this results in data loss. Not setting to Critical since there is a workaround.", 
            "date_created": "2012-01-04 20:36:16.713817+00:00", 
            "author": "https://api.launchpad.net/1.0/~jaypipes"
        }, 
        {
            "content": "Let me know if you want me to submit my ever-so-complicated patch for nova/image/glance.py :-)", 
            "date_created": "2012-01-04 21:28:08.946645+00:00", 
            "author": "https://api.launchpad.net/1.0/~justin-fathomdb"
        }, 
        {
            "content": "Maybe Jay has more of an answer as to whether the Location header should be mutable. If it should be, I think you can just make GlanceImageService a bit smarter and not overwrite it if a value isn't provided. If it shouldn't be mutable, then the patch you indicated above would be fine.", 
            "date_created": "2012-01-05 04:38:52.291940+00:00", 
            "author": "https://api.launchpad.net/1.0/~bcwaldon"
        }, 
        {
            "content": "I actually don't think that the Location field should be settable by a user except on initial registration. After that, I don't think the Location field should be either editable OR readable (for security reasons). Would you both agree with that assessment? If so, I'll assign to myself and get to work with a fix.", 
            "date_created": "2012-01-05 17:20:24.928506+00:00", 
            "author": "https://api.launchpad.net/1.0/~jaypipes"
        }, 
        {
            "content": "Sounds great to me Jay - thanks!", 
            "date_created": "2012-01-05 17:48:01.177307+00:00", 
            "author": "https://api.launchpad.net/1.0/~justin-fathomdb"
        }, 
        {
            "content": "I buy that. Makes sense to have the same policy as we have for the metadata itself.", 
            "date_created": "2012-01-07 02:51:16.526237+00:00", 
            "author": "https://api.launchpad.net/1.0/~bcwaldon"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/2952", 
            "date_created": "2012-01-11 02:16:09.435931+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/2981", 
            "date_created": "2012-01-11 21:31:34.655306+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/2981\nCommitted: http://github.com/openstack/nova/commit/3e015b869789c7aeeb90e160ede3b3a7b7921f30\nSubmitter: Jenkins\nBranch:    master\n\ncommit 3e015b869789c7aeeb90e160ede3b3a7b7921f30\nAuthor: Brian Waldon <email address hidden>\nDate:   Wed Jan 11 13:27:29 2012 -0800\n\n    Remove 'location' from GlanceImageService\n    \n    Glance no longer returns location through its public API, so we\n    should not attempt to display it. Addresses bug 911599.\n    \n    Change-Id: I3400006eb6ab94095c0c2d2b5dc90cb9b7775a84\n", 
            "date_created": "2012-01-11 22:05:48.957738+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: stable/diablo\nReview: https://review.openstack.org/3083", 
            "date_created": "2012-01-16 23:11:28.132090+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/3083\nCommitted: http://github.com/openstack/nova/commit/1e2f538fb02f7986e4509bf7815617f75327c135\nSubmitter: Jenkins\nBranch:    stable/diablo\n\ncommit 1e2f538fb02f7986e4509bf7815617f75327c135\nAuthor: Brian Waldon <email address hidden>\nDate:   Wed Jan 11 13:27:29 2012 -0800\n\n    Remove 'location' from GlanceImageService\n    \n    Glance no longer returns location through its public API, so we\n    should not attempt to display it. Addresses bug 911599.\n    \n    (cherry picked from commit 3e015b869789c7aeeb90e160ede3b3a7b7921f30)\n    \n    Change-Id: I3400006eb6ab94095c0c2d2b5dc90cb9b7775a84\n", 
            "date_created": "2012-01-17 11:24:44.362678+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/2952\nCommitted: http://github.com/openstack/glance/commit/0db2cfadf5da692aa6f02abd20018f4aa3d49d2a\nSubmitter: Jenkins\nBranch:    master\n\ncommit 0db2cfadf5da692aa6f02abd20018f4aa3d49d2a\nAuthor: Jay Pipes <email address hidden>\nDate:   Tue Jan 10 21:14:26 2012 -0500\n\n    Bug#911599 - Location field wiped on update\n    \n    Adds unit test to verify behaviour required:\n    \n    * Location field may only be **edited** if the image is\n      in a queued state, which indicates that the user issued\n      a POST /images with NO location field and NO image data\n    * Otherwise, Location field may not be edited and may not\n      be read via the API server either.\n    \n    Change-Id: I42aba7bc8e2da6ac81b18b564ba096208406f893\n", 
            "date_created": "2012-01-23 20:22:54.498201+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2012-01-25 09:53:19.815978+00:00"
}