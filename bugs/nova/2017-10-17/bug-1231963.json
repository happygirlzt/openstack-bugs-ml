{
    "status": "Fix Released", 
    "last_updated": "2014-04-17 09:06:34.699287+00:00", 
    "description": "Resource limit checks on a compute manager are based on the contents of\nfilter_properites[\u2018limits\u2019].   This in turn is populated by the scheduler after the\nhost has been selected by scheduler.utils.populate_filter_properties.   The limits\nvalue is taken from the host_state, which is maintained as a local data in the \nhost manager. The host_state limits values are populated by the various filters,\nfor example the ram filter sets limits[\u2018memory_mb\u2019] based on its configuration.\n\nIn the case of scheduling to a forced host the filters are bypassed, so the contents\nof the host_state[\u2018limits\u2019] value depends on whether the  scheduler has already\nplaced a non-forced instance onto that host (and thus run the filters to populate\nthe limits).   If it has then the compute manager will impose the limits, if it\nhasn\u2019t then the limits will be empty and there will be no check.\n\nAs forcing bypasses the filters and is a privileged operation the limits should \nalways be cleared in the filter_properties in this case", 
    "tags": [
        "scheduler"
    ], 
    "importance": "Medium", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1231963", 
    "owner": "https://api.launchpad.net/1.0/~philip-day", 
    "id": 1231963, 
    "index": 3624, 
    "openned": "2013-09-27 12:22:49.920435+00:00", 
    "created": "2013-09-27 12:22:49.920435+00:00", 
    "title": "Resource limits check sometimes enforced when using forced scheduling", 
    "comments": [
        {
            "content": "Resource limit checks on a compute manager are based on the contents of\nfilter_properites[\u2018limits\u2019].   This in turn is populated by the scheduler after the\nhost has been selected by scheduler.utils.populate_filter_properties.   The limits\nvalue is taken from the host_state, which is maintained as a local data in the \nhost manager. The host_state limits values are populated by the various filters,\nfor example the ram filter sets limits[\u2018memory_mb\u2019] based on its configuration.\n\nIn the case of scheduling to a forced host the filters are bypassed, so the contents\nof the host_state[\u2018limits\u2019] value depends on whether the  scheduler has already\nplaced a non-forced instance onto that host (and thus run the filters to populate\nthe limits).   If it has then the compute manager will impose the limits, if it\nhasn\u2019t then the limits will be empty and there will be no check.\n\nAs forcing bypasses the filters and is a privileged operation the limits should \nalways be cleared in the filter_properties in this case", 
            "date_created": "2013-09-27 12:22:49.920435+00:00", 
            "author": "https://api.launchpad.net/1.0/~philip-day"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/48666", 
            "date_created": "2013-09-27 14:39:06.275906+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/48666\nCommitted: http://github.com/openstack/nova/commit/d24df3bb7194f0ebdbd48b7c4bacd9285469f5a5\nSubmitter: Jenkins\nBranch:    master\n\ncommit d24df3bb7194f0ebdbd48b7c4bacd9285469f5a5\nAuthor: Phil Day <email address hidden>\nDate:   Fri Sep 27 14:22:34 2013 +0000\n\n    Resource limits check sometimes enforced for forced scheduling\n    \n    Resource limit checks on a compute manager are based on the\n    contents of filter_properites['limits'].   This in turn is\n    populated by the scheduler after the host has been selected by\n    scheduler.utils.populate_filter_properties.   The limits value\n    is taken from the host_state, which is maintained as a local data\n    in the host manager. The host_state limits values are populated\n    by the various filters, for example the ram filter sets\n    limits['memory_mb'] based on its configuration.\n    \n    In the case of scheduling to a forced host the filters are\n    bypassed, so the contents of the host_state['limits'] value\n    depends on whether the scheduler has already placed a non-forced\n    instance onto that host (and thus run the filters to populate the\n    limits).   If it has then the compute manager will impose the\n    limits, if it hasn't then the limits will be empty and there will\n    be no check.\n    \n    As forcing bypasses the filters and is a privileged operation the\n    limits should always be cleared in the filter_properties in this\n    case to avoid the limit check on the compute manager.\n    \n    Fixed bug: 1231963\n    \n    Change-Id: Ic7ff5d1fc652a8bdf6a0cf8e6ef063d9f2e7ab16\n", 
            "date_created": "2013-10-04 17:57:02.892397+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2014-03-05 13:10:32.699608+00:00"
}