{
    "status": "Fix Released", 
    "last_updated": "2015-12-03 21:34:24.873596+00:00", 
    "description": "If a ComputeNode object has its pci_device_pools field set to an empty PciDevicePoolList object and then that node object is saved via the save() method, the pci_device_pools field of the same object is changed to None.  This due to the following flow:\n\nnova.objects.compute_node.ComputeNode.save()\n    nova.objects.compute_node.ComputeNode._from_db_object()\n        nova.objects.pci_device_pool.from_pci_stats()\n\nfrom_pci_stats() returns None instead of an empty PciDevicePoolList as I would have expected.  This can cause comparisons of a node object to fail after doing a save() because this field changes.  See the script below for an example.\n\n\"\"\"\n#!/usr/bin/python\nimport copy\nimport sys\n\nfrom nova import config\nfrom nova import context as ctxt\nfrom nova.objects import base\nfrom nova.objects import compute_node\nfrom nova.objects import hv_spec\nfrom oslo_config import cfg\nfrom oslo_log import log as logging\nfrom nova.objects import pci_device_pool\n\nCONF = cfg.CONF\nconfig.parse_args(sys.argv[0:1])\n\nlogging.setup(cfg.CONF, 'nova')\nLOG = logging.getLogger(__name__)\n\ncontext = ctxt.get_admin_context()\nnode = compute_node.ComputeNodeList.get_all(context)[0]\nnode.pci_device_pools = pci_device_pool.PciDevicePoolList([])\nnode_before_save = copy.deepcopy(node)\n\nLOG.info('node.pci_device_pools before save: %s' % node.pci_device_pools)\nnode.save()\nLOG.info('node.pci_device_pools after save: %s' % node.pci_device_pools)\n\nLOG.info('base.obj_equal_prims(node_before_save, node, [\"updated_at\"]) = %s' %\n         base.obj_equal_prims(node_before_save, node, ['updated_at']))\n\"\"\"", 
    "tags": [
        "pci"
    ], 
    "importance": "Medium", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1492342", 
    "owner": "https://api.launchpad.net/1.0/~tpeoples", 
    "id": 1492342, 
    "index": 4345, 
    "openned": "2015-09-04 15:44:11.813672+00:00", 
    "created": "2015-09-04 15:44:11.813672+00:00", 
    "title": "ComputeNode pci_device_pools field changes from empty PciDevicePoolList to None after save()", 
    "comments": [
        {
            "content": "If a ComputeNode object has its pci_device_pools field set to an empty PciDevicePoolList object and then that node object is saved via the save() method, the pci_device_pools field of the same object is changed to None.  This due to the following flow:\n\nnova.objects.compute_node.ComputeNode.save()\n    nova.objects.compute_node.ComputeNode._from_db_object()\n        nova.objects.pci_device_pool.from_pci_stats()\n\nfrom_pci_stats() returns None instead of an empty PciDevicePoolList as I would have expected.  This can cause comparisons of a node object to fail after doing a save() because this field changes.  See the script below for an example.\n\n\"\"\"\n#!/usr/bin/python\nimport copy\nimport sys\n\nfrom nova import config\nfrom nova import context as ctxt\nfrom nova.objects import base\nfrom nova.objects import compute_node\nfrom nova.objects import hv_spec\nfrom oslo_config import cfg\nfrom oslo_log import log as logging\nfrom nova.objects import pci_device_pool\n\nCONF = cfg.CONF\nconfig.parse_args(sys.argv[0:1])\n\nlogging.setup(cfg.CONF, 'nova')\nLOG = logging.getLogger(__name__)\n\ncontext = ctxt.get_admin_context()\nnode = compute_node.ComputeNodeList.get_all(context)[0]\nnode.pci_device_pools = pci_device_pool.PciDevicePoolList([])\nnode_before_save = copy.deepcopy(node)\n\nLOG.info('node.pci_device_pools before save: %s' % node.pci_device_pools)\nnode.save()\nLOG.info('node.pci_device_pools after save: %s' % node.pci_device_pools)\n\nLOG.info('base.obj_equal_prims(node_before_save, node, [\"updated_at\"]) = %s' %\n         base.obj_equal_prims(node_before_save, node, ['updated_at']))\n\"\"\"", 
            "date_created": "2015-09-04 15:44:11.813672+00:00", 
            "author": "https://api.launchpad.net/1.0/~tpeoples"
        }, 
        {
            "content": "Forgot to include the output of the script in the description:\n\nnode.pci_device_pools before save: PciDevicePoolList(objects=[])\nnode.pci_device_pools after save: None\nbase.obj_equal_prims(node_before_save, node, [\"updated_at\"]) = False\n\nIf I make the necessary fix within the from_pci_stats() method:\n\nnode.pci_device_pools before save: PciDevicePoolList(objects=[])\nnode.pci_device_pools after save: PciDevicePoolList(objects=[])\nbase.obj_equal_prims(node_before_save, node, [\"updated_at\"]) = True", 
            "date_created": "2015-09-04 15:47:01.689128+00:00", 
            "author": "https://api.launchpad.net/1.0/~tpeoples"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/220634", 
            "date_created": "2015-09-04 19:28:47.728320+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/220634\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=8df3810ca0bb4a78a209be74b07769dcbdf9787b\nSubmitter: Jenkins\nBranch:    master\n\ncommit 8df3810ca0bb4a78a209be74b07769dcbdf9787b\nAuthor: Taylor Peoples <email address hidden>\nDate:   Fri Sep 4 17:49:32 2015 +0200\n\n    Return empty PciDevicePoolList obj instead of None\n    \n    If a ComputeNode object has its pci_device_pools field set to an empty\n    PciDevicePoolList object and then that node object is saved via the\n    save() method, the pci_device_pools field of the same object is changed\n    to None due to the from_pci_stats() returning None if pci_stats is None.\n    The fix is to return an empty PciDevicePoolList instead of None,\n    ensuring that calling save() does not have this unintended side effect.\n    \n    Closes-Bug: #1492342\n    Change-Id: I7b5a3ed24d137646579fc4534c71a2bc6baa8ca6\n", 
            "date_created": "2015-11-27 19:26:16.370059+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/nova 13.0.0.0b1 development milestone.", 
            "date_created": "2015-12-02 16:18:28.740314+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }
    ], 
    "closed": "2015-12-03 21:34:23.165823+00:00"
}