{
    "status": "Won't Fix", 
    "last_updated": "2013-03-13 18:15:57.399110+00:00", 
    "description": "version: essex\n\nUpon concurrent VM creation, there seems to be a \"time of check to time of use\" bug in quota checking, which enables users to create more VMs than allowed in their quota. \n\nbug description:\n\nIn function \"_create_instance\" in nova/compute/api.py, the quota is checked via calling \"quota.allowed_instances.\" The nova.instances db is checked at this time and is updated later when the newly created VM is scheduled onto a compute host. If there are concurrent VM creation requests, then the total number of VMs can exceed the quota, because at the time of checking, the VMs being created are not counted. \n\nexample:\n(assume that the API rate limit is disabled in /etc/nova/api-paste.ini so that a high number of VM creation requests can be processed concurrently.)\n\nWith a default quota limit of 10 VMs, we tried to create 20 VMs concurrently and all requests succeeded. \n\nInjecting a print statement into the function \"allowed_instances\" in nova/quota.py, we obtained the following in log file nova/api.log related to the values of two local variables \"allowed_instances\" and \"used_instances\" at the time of quota checking for each VM creation. \n\nallowed_instances=10, used_instances=0\nallowed_instances=10, used_instances=0\nallowed_instances=10, used_instances=0\nallowed_instances=10, used_instances=0\nallowed_instances=10, used_instances=0\nallowed_instances=10, used_instances=0\nallowed_instances=10, used_instances=0\nallowed_instances=10, used_instances=0\nallowed_instances=9, used_instances=1\nallowed_instances=8, used_instances=2\nallowed_instances=8, used_instances=2\nallowed_instances=4, used_instances=6\nallowed_instances=3, used_instances=7\nallowed_instances=2, used_instances=8\nallowed_instances=2, used_instances=8\nallowed_instances=2, used_instances=8\nallowed_instances=2, used_instances=8\nallowed_instances=2, used_instances=8\nallowed_instances=2, used_instances=8\nallowed_instances=2, used_instances=8", 
    "tags": [], 
    "importance": "Wishlist", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1154661", 
    "owner": "None", 
    "id": 1154661, 
    "index": 2596, 
    "openned": "2013-03-13 15:56:41.632060+00:00", 
    "created": "2013-03-13 15:56:41.632060+00:00", 
    "title": "concurrent instance creation enables users to create more VMs than allowed in quota", 
    "comments": [
        {
            "content": "version: essex\n\nUpon concurrent VM creation, there seems to be a \"time of check to time of use\" bug in quota checking, which enables users to create more VMs than allowed in their quota. \n\nbug description:\n\nIn function \"_create_instance\" in nova/compute/api.py, the quota is checked via calling \"quota.allowed_instances.\" The nova.instances db is checked at this time and is updated later when the newly created VM is scheduled onto a compute host. If there are concurrent VM creation requests, then the total number of VMs can exceed the quota, because at the time of checking, the VMs being created are not counted. \n\nexample:\n(assume that the API rate limit is disabled in /etc/nova/api-paste.ini so that a high number of VM creation requests can be processed concurrently.)\n\nWith a default quota limit of 10 VMs, we tried to create 20 VMs concurrently and all requests succeeded. \n\nInjecting a print statement into the function \"allowed_instances\" in nova/quota.py, we obtained the following in log file nova/api.log related to the values of two local variables \"allowed_instances\" and \"used_instances\" at the time of quota checking for each VM creation. \n\nallowed_instances=10, used_instances=0\nallowed_instances=10, used_instances=0\nallowed_instances=10, used_instances=0\nallowed_instances=10, used_instances=0\nallowed_instances=10, used_instances=0\nallowed_instances=10, used_instances=0\nallowed_instances=10, used_instances=0\nallowed_instances=10, used_instances=0\nallowed_instances=9, used_instances=1\nallowed_instances=8, used_instances=2\nallowed_instances=8, used_instances=2\nallowed_instances=4, used_instances=6\nallowed_instances=3, used_instances=7\nallowed_instances=2, used_instances=8\nallowed_instances=2, used_instances=8\nallowed_instances=2, used_instances=8\nallowed_instances=2, used_instances=8\nallowed_instances=2, used_instances=8\nallowed_instances=2, used_instances=8\nallowed_instances=2, used_instances=8", 
            "date_created": "2013-03-13 15:56:41.632060+00:00", 
            "author": "https://api.launchpad.net/1.0/~samuel-xj"
        }, 
        {
            "content": "I think this is a known issue with essex quotas. The quota system saw a significant re-write in folsom to address these concerns, but that change is too large to backport to essex. With essex being so close to end of life, I think your best course of action is to upgrade to folsom if at all possible.", 
            "date_created": "2013-03-13 18:15:41.190857+00:00", 
            "author": "https://api.launchpad.net/1.0/~mikal"
        }
    ], 
    "closed": "2013-03-13 18:15:48.460782+00:00"
}