{
    "status": "Fix Released", 
    "last_updated": "2016-07-14 13:01:50.530852+00:00", 
    "description": "I think there is a problem in host NUMA node resource tracking when there is an instance with no numa topology on the same node as instances with numa topology.\n\nIt's triggered while running the resource audit, which ultimately calls hardware.get_host_numa_usage_from_instance() and assigns the result to self.compute_node.numa_topology.\n\nThe problem occurs if you have a number of instances with numa topology, and then an instance with no numa topology. When running numa_usage_from_instances() for the instance with no numa topology we cache the values of \"memory_usage\" and \"cpu_usage\". However, because \"instances\" is empty we don't enter the loop. Since the two lines in this commit are indented too far they don't get called, and we end up appending a host cell with \"cpu_usage\" and \"memory_usage\" of zero.   This results in a host numa_topology cell with incorrect \"cpu_usage\" and \"memory_usage\" values, though I think the overall host cpu/memory usage is still correct.\n\nThe fix is to reduce the indentation of the two lines in question so that they get called even when the instance has no numa topology. This writes the original host cell usage information back to it.", 
    "tags": [
        "compute", 
        "numa", 
        "scheduler"
    ], 
    "importance": "Medium", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1590607", 
    "owner": "https://api.launchpad.net/1.0/~cbf123", 
    "id": 1590607, 
    "index": 4552, 
    "openned": "2016-06-08 23:47:12.601050+00:00", 
    "created": "2016-06-08 23:47:12.601050+00:00", 
    "title": "incorrect handling of host numa cell usage with instances having no numa topology", 
    "comments": [
        {
            "content": "I think there is a problem in host NUMA node resource tracking when there is an instance with no numa topology on the same node as instances with numa topology.\n\nIt's triggered while running the resource audit, which ultimately calls hardware.get_host_numa_usage_from_instance() and assigns the result to self.compute_node.numa_topology.\n\nThe problem occurs if you have a number of instances with numa topology, and then an instance with no numa topology. When running numa_usage_from_instances() for the instance with no numa topology we cache the values of \"memory_usage\" and \"cpu_usage\". However, because instance.cells is empty we don't enter the loop. Since the two lines in this commit are indented too far they don't get called, and we end up appending a host cell with \"cpu_usage\" and \"memory_usage\" of zero.   This results in a host numa_topology cell with incorrect \"cpu_usage\" and \"memory_usage\" values, though I think the overall host cpu/memory usage is still correct.\n\nThe fix is to reduce the indentation of the two lines in question so that they get called even when the instance has no numa topology. This writes the original host cell usage information back to it.", 
            "date_created": "2016-06-08 23:47:12.601050+00:00", 
            "author": "https://api.launchpad.net/1.0/~cbf123"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/327222\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=f2706b230018ca718614cd86e8c6b68f8cbd7c3f\nSubmitter: Jenkins\nBranch:    master\n\ncommit f2706b230018ca718614cd86e8c6b68f8cbd7c3f\nAuthor: Chris Friesen <email address hidden>\nDate:   Wed Jun 8 18:15:34 2016 -0600\n\n    Fix resource tracking for instances with no numa topology\n    \n    This fixes a problem in host NUMA node resource tracking when\n    there is an instance with no numa topology on the same node as\n    instances with numa topology.\n    \n    It's triggered while running the resource audit, which ultimately\n    calls hardware.get_host_numa_usage_from_instance() and assigns\n    the result to self.compute_node.numa_topology.\n    \n    The problem occurs if you have a number of instances with numa\n    topology, and then an instance with no numa topology. When running\n    numa_usage_from_instances() for the instance with no numa topology\n    we cache the values of \"memory_usage\" and \"cpu_usage\". However,\n    because instance.cells is empty we don't enter the loop. Since the\n    two lines in this commit are indented too far they don't get called,\n    and we end up appending a host cell with \"cpu_usage\" and\n    \"memory_usage\" of zero.   This results in a host numa_topology cell\n    with incorrect \"cpu_usage\" and \"memory_usage\" values, though I think\n    the overall host cpu/memory usage is still correct.\n    \n    The fix is to reduce the indentation of the two lines in question\n    so that they get called even when the instance has no numa topology.\n    This writes the original host cell usage information back to it.\n    \n    Change-Id: I7e327b79b731393ed787c4e131dc6d9654f424d0\n    Closes-Bug: #1590607\n", 
            "date_created": "2016-06-09 10:13:47.800622+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/nova 14.0.0.0b2 development milestone.", 
            "date_created": "2016-07-14 13:01:50.009931+00:00", 
            "author": "https://api.launchpad.net/1.0/~doug-hellmann"
        }
    ], 
    "closed": "2016-06-09 10:13:45.056131+00:00"
}