{
    "status": "Opinion", 
    "last_updated": "2017-09-21 14:18:25.481932+00:00", 
    "description": "In Hypervisors panel, VCPUs(total) and VCPUs(used) fields causes confusion as used always bigger than total.\n\nVirtual CPU to Physical CPU allocation ratio is default to 16.0.  put Physical CPU total to VCPUS(total) is not correct.", 
    "tags": [
        "api", 
        "canonical-bootstack", 
        "ops"
    ], 
    "importance": "Wishlist", 
    "heat": 146, 
    "link": "https://bugs.launchpad.net/nova/+bug/1202965", 
    "owner": "None", 
    "id": 1202965, 
    "index": 2658, 
    "openned": "2013-08-21 01:31:25.114349+00:00", 
    "created": "2013-07-19 08:18:07.221954+00:00", 
    "title": "The name VCPUs (total) of Hypervisors is confusing", 
    "comments": [
        {
            "content": "In Hypervisors panel, VCPUs(total) and VCPUs(used) fields causes confusion as used always bigger than total.\n\nVirtual CPU to Physical CPU allocation ratio is default to 16.0.  put Physical CPU total to VCPUS(total) is not correct.", 
            "date_created": "2013-07-19 08:18:07.221954+00:00", 
            "author": "https://api.launchpad.net/1.0/~niu-zglinux"
        }, 
        {
            "content": "Yep, we could be more clear here.", 
            "date_created": "2013-07-30 18:43:09.065050+00:00", 
            "author": "https://api.launchpad.net/1.0/~gabriel-hurley"
        }, 
        {
            "content": "Not seeing the behavior with nova api:\r\n\r\nRESP BODY: {\"hypervisor_statistics\": {\"count\": 1, \"vcpus_used\": 1, \"local_gb_used\": 10, \"memory_mb\": 4096, \"current_workload\": 1, \"vcpus\": 2, \"running_vms\": 1, \"free_disk_gb\": 15, \"disk_available_least\": 0, \"local_gb\": 25, \"free_ram_mb\": 3072, \"memory_mb_used\": 1024}}", 
            "date_created": "2013-08-31 03:19:14.179249+00:00", 
            "author": "https://api.launchpad.net/1.0/~melwitt"
        }, 
        {
            "content": "Is it possible to have a screen shot and a corresponding nova api call? It is not clear if the problem is a display bug.", 
            "date_created": "2013-10-23 20:07:47.414476+00:00", 
            "author": "https://api.launchpad.net/1.0/~george-peristerakis"
        }, 
        {
            "content": "Hi,\n\nI think the issue is a Nova one, for instance, according to nova.virt.libvirt.driver.LibvirtDriver.get_vcpu_total() function the\ncomputation of the total vcpus for an hypervisor doesn't take into account the cpu allocation ratio.\n\nHere is a screenshot which illustrate the issue.\n\nWhat do you think about ? ", 
            "date_created": "2013-10-28 16:30:38.986169+00:00", 
            "author": "https://api.launchpad.net/1.0/~yassine-lamgarchal"
        }, 
        {
            "content": "By the way, we can observe the same behaviour for \"RAM (total)\" column.", 
            "date_created": "2013-10-30 09:46:31.150862+00:00", 
            "author": "https://api.launchpad.net/1.0/~yassine-lamgarchal"
        }, 
        {
            "content": "As icehouse will release recently, so I think it was better to do some improvement in next version for this issue", 
            "date_created": "2014-04-08 09:13:36.408437+00:00", 
            "author": "https://api.launchpad.net/1.0/~lisong-cruise"
        }, 
        {
            "content": "It looks like the hypervisor API lists vcpus and vcpus used, but what it is really returning is CPUs and vcpus_used. This is a good candidate for the API formally known as V3.", 
            "date_created": "2014-05-23 05:24:17.258646+00:00", 
            "author": "https://api.launchpad.net/1.0/~jogo"
        }, 
        {
            "content": "Agreed we should fix this in Juno in Nova with for the API formally known as V3 (might be a good testcase for the first microversion!)\n", 
            "date_created": "2014-05-23 11:18:55.116741+00:00", 
            "author": "https://api.launchpad.net/1.0/~cyeoh-0"
        }, 
        {
            "content": "Did this get any attention in Juno, in the end?", 
            "date_created": "2014-12-24 15:50:59.281639+00:00", 
            "author": "https://api.launchpad.net/1.0/~fifieldt"
        }, 
        {
            "content": "This is really a UX feature addition", 
            "date_created": "2015-03-30 14:50:13.518808+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "Without this fix, we don't have real knowledge how many VCPUs are available when using: \n\nnova hypervisor-stats\nnova hypervisor-show\n\n\n", 
            "date_created": "2015-05-17 09:54:10.342290+00:00", 
            "author": "https://api.launchpad.net/1.0/~oblaut"
        }, 
        {
            "content": "According to the resolution on this blueprint[0], nova won't be doing changes to their API. Is there something I could do to improve the UX in Horizon?\n\n[0] https://review.openstack.org/#/c/98058/", 
            "date_created": "2015-05-22 20:05:39.422788+00:00", 
            "author": "https://api.launchpad.net/1.0/~freyes"
        }, 
        {
            "content": "Hi,\n\nI agree that it isn't a bug (it's a feature) and that the current Horizon behavior may cause misunderstood in some administrators.\n\nAs an example, the VMWare vSphere client shows the following values for disk overcommiting:\n\n- Total space: Storage space times the overcommiting ratio;\n- Real total space: Storage space (without considering any overcommiting);\n- Used space: Sum of user disk spaces;\n- Real used space: Real space, less then used space, since thin provisioned images (and CoW) reduces space.\n\nI don't how how to put all these informations in the Horizon interface.", 
            "date_created": "2015-06-09 16:38:56.690219+00:00", 
            "author": "https://api.launchpad.net/1.0/~rarylson"
        }, 
        {
            "content": "As a ideia, we could show both concepts (physical total and total with overcommit) in the interface.\n\nThe attached image represents the ideia.\n\nIt could appear at the screen after the user click in a \"more\", \"advance\" or \"detailed\" button at the screen.", 
            "date_created": "2015-06-09 17:31:46.925412+00:00", 
            "author": "https://api.launchpad.net/1.0/~rarylson"
        }, 
        {
            "content": "I'm confused about the behaviour.  Are you saying that nova API will always return the incorrect value for vpcu from now on?  This is intentional to return the incorrect value?  How would an upstream VNFM or Orchestration know how much vcpu is really available?  This doesn't sound like a UX issue to me if the data source is feeding wrong info.\n\n", 
            "date_created": "2016-03-02 20:34:26.025679+00:00", 
            "author": "https://api.launchpad.net/1.0/~gee-gregory"
        }, 
        {
            "content": "My understanding is what is being suggested is that if field(s) to return the total available VCPU/RAM counts factoring in overcommit are desired (or to return the ratios themselves somewhere), then they should be added as net new to the API. The existing fields to return the totals were not designed to factor in the overcommit and never have been, one assumes because this is a scheduler side setting so neither the hypervisor nor the api service actually knew what the overcommit was and thus had no ability to factor it in even if they wanted to (recent changes to help with issues in claim processing may help here). \n\nThe main source of confusion is the naming of the field as vcpus when really it is just physical cpus (for which the correct value is in fact being returned). The RAM values seem to confuse people less even though it behaves exactly the same way because the naming isn't as misleading.", 
            "date_created": "2016-03-02 21:06:40.460034+00:00", 
            "author": "https://api.launchpad.net/1.0/~sgordon"
        }, 
        {
            "content": "Naming VCPUs to physical CPUs in Horizon UI may be concern of Horizon, but there should be an API to get overcommit ratio of physical cpus. Either each flavour or a global config value may contain this ratio but some API is needed to get this setting. \n\nAdditionally, if \"vcpus\" in response body shows the number of physical cpus then its name should be changed to an unambigious one (vcpus sounds like it is the number of virtual cpus). If it is really the number of virtual cpus as its name sounds, then its value should be updated with overcommit ratio parameter.", 
            "date_created": "2016-04-07 11:32:40.613029+00:00", 
            "author": "https://api.launchpad.net/1.0/~hayati-gonultas"
        }, 
        {
            "content": "I think this should be considered a flaw in Nova, this is similar to the issue where the resource_tracker in Nova counts Cinder volumes as local hypervisor storage as I have tried addressing however doesn't seem like nobody wants to take a strong grip on these issues.\n\nIt might not be a functional flaw but it's very misleading and providing the wrong statistics is just annoying.\n\nBoth these issues should be brought up properly in meetings and be addressed, I have heard this was gonna be fixed when the resource-objects BP lands in Nova[1] however I've worked for fixes on this for liberty but it did not make it into master nor liberty. So fixing this in master and back porting to Liberty and now Mitaka should be prioritized.\n\n[1] Think it's this one: https://github.com/openstack/nova-specs/blob/master/specs/liberty/approved/resource-objects.rst", 
            "date_created": "2016-04-15 05:30:56.089018+00:00", 
            "author": "https://api.launchpad.net/1.0/~tobias-urdin"
        }, 
        {
            "content": "CONFIRMED FOR: LIBERTY", 
            "date_created": "2016-05-24 12:23:57.180035+00:00", 
            "author": "https://api.launchpad.net/1.0/~tobias-urdin"
        }, 
        {
            "content": "Unfortunately same can be seen in Mitaka version.Seems this is not fixed", 
            "date_created": "2017-04-12 13:44:37.542440+00:00", 
            "author": "https://api.launchpad.net/1.0/~dpaclt"
        }, 
        {
            "content": "This seems to be still an issue in pike release. please consider rescheduling this as it is totally confusing.", 
            "date_created": "2017-09-21 14:18:24.376870+00:00", 
            "author": "https://api.launchpad.net/1.0/~d-info-e"
        }
    ], 
    "closed": "2015-03-30 14:49:58.195142+00:00"
}