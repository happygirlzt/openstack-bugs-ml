{
    "status": "Invalid", 
    "last_updated": "2012-11-01 11:26:00.066433+00:00", 
    "description": "Scenario: If the Compute service is down and a new instance is launched, the instance state remains in 'building' state.\nVerify the response in the database or dashboard.\n\nExpected Response: The vm_state of instance must be 'error'.\nActual Response: The vm_state remains in the 'building' state.\n\nBranch: master\n\nThe Nova API must check if the Compute service is up (if there are multiple Compute hosts and one of them is down, still the service should be considered down). And if Compute service is down, update the instance status in database to 'error'.", 
    "tags": [
        "ntt"
    ], 
    "importance": "Low", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/956960", 
    "owner": "https://api.launchpad.net/1.0/~unmesh-gurjar", 
    "id": 956960, 
    "index": 483, 
    "openned": "2012-03-16 13:32:52.964902+00:00", 
    "created": "2012-03-16 13:32:52.964902+00:00", 
    "title": "Instance remains in scheduling state if Compute server is down", 
    "comments": [
        {
            "content": "Scenario: If the Compute service is down and a new instance is launched, the instance state remains in 'building' state.\nVerify the response in the database or dashboard.\n\nExpected Response: The vm_state of instance must be 'error'.\nActual Response: The vm_state remains in the 'building' state.\n\nBranch: master\n\nThe Nova API must check if the Compute service is up (before casting a message to the Compute host), and if it is down, update the instance status in database to 'error'.", 
            "date_created": "2012-03-16 13:32:52.964902+00:00", 
            "author": "https://api.launchpad.net/1.0/~unmesh-gurjar"
        }, 
        {
            "content": "The compute nodes already update the database with a heartbeat that the scheduler uses to determine if the compute service is running.\n\nHow did you run into this situation?", 
            "date_created": "2012-03-16 14:59:22.694571+00:00", 
            "author": "https://api.launchpad.net/1.0/~johannes.erdfelt"
        }, 
        {
            "content": "If the Compute node goes down and immediately a Create Server request is hit, this scenario is reproduced. In my case, I manually stopped Compute node and then initiated a Create Server request.", 
            "date_created": "2012-03-21 07:39:05.190752+00:00", 
            "author": "https://api.launchpad.net/1.0/~unmesh-gurjar"
        }, 
        {
            "content": "linked to blueprint https://blueprints.launchpad.net/nova/+spec/compute-instance-cleanup-service", 
            "date_created": "2012-06-06 12:15:50.911650+00:00", 
            "author": "https://api.launchpad.net/1.0/~mandarvaze"
        }, 
        {
            "content": "Any progress so far?\r\n\r\n -your friendly neighborhood bug triager", 
            "date_created": "2012-06-07 15:47:11.823251+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "The issue can be resolved if there is at-least one other Compute server having the _check_instance_build_time periodic task  enabled (it will mark the instance to ERROR). There are two possible scenarios after this:\n1. Host compute server comes up: It will pick the request from RabbitMQ and start the instance.\n2. User deletes the instance and then Host compute server comes up: Since the instance is marked as deleted, the Compute server does not spawn a new instance and the instance remains in ERROR state (vm_state=ERROR, task_state=deleting, power_state=0, deleted=1). No resources are being consumed by the instance at this point.\n\nTherefore, marking the bug as Invalid now.", 
            "date_created": "2012-11-01 11:23:54.931308+00:00", 
            "author": "https://api.launchpad.net/1.0/~unmesh-gurjar"
        }
    ], 
    "closed": "2012-11-01 11:25:58.080564+00:00"
}