{
    "status": "Fix Released", 
    "last_updated": "2014-04-17 09:06:17.164839+00:00", 
    "description": "because libvirt lvm volumes are based on instance['name'], it means that the actual names used in lvm storage are based on an operator configuration variable: instance_name_template\n\nthe default is 'instance-%08x' \n\nhowever this is site changable, and changable at any time. This creates 2 failure modes.\n\n#1) operator changes this, the result is all volumes created before the change are no longer able to be cleaned up by nova\n\n#2) operator has changed this to something that includes end user input, like %(display_name), which would allow one user to impact another (use A has display name \"bob\", user B has displayname \"bob_joe\") because of https://github.com/openstack/nova/blob/master/nova/virt/libvirt/driver.py#L1068\n\nspecifically:\n\n            pattern = '%s_' % instance['name']\n\n            def belongs_to_instance(disk):\n                return disk.startswith(pattern)\n\n#2 is a non default situation, and requires specific config by an adminstrator and specific naming by users, but it should be protected against.\n\nA much better approach would be to use instance['uuid'] which has no operator or user impact on naming.", 
    "tags": [
        "libvirt", 
        "volumes"
    ], 
    "importance": "High", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1285735", 
    "owner": "https://api.launchpad.net/1.0/~sdague", 
    "id": 1285735, 
    "index": 1408, 
    "openned": "2014-02-27 15:38:19.191642+00:00", 
    "created": "2014-02-27 15:38:19.191642+00:00", 
    "title": "libvirt lvm volumes based on instance['name'] not instance['uuid']", 
    "comments": [
        {
            "content": "because libvirt lvm volumes are based on instance['name'], it means that the actual names used in lvm storage are based on an operator configuration variable: instance_name_template\n\nthe default is 'instance-%08x' \n\nhowever this is site changable, and changable at any time. This creates 2 failure modes.\n\n#1) operator changes this, the result is all volumes created before the change are no longer able to be cleaned up by nova\n\n#2) operator has changed this to something that includes end user input, like %(display_name), which would allow one user to impact another (use A has display name \"bob\", user B has displayname \"bob_joe\") because of https://github.com/openstack/nova/blob/master/nova/virt/libvirt/driver.py#L1068\n\nspecifically:\n\n            pattern = '%s_' % instance['name']\n\n            def belongs_to_instance(disk):\n                return disk.startswith(pattern)\n\n#2 is a non default situation, and requires specific config by an adminstrator and specific naming by users, but it should be protected against.\n\nA much better approach would be to use instance['uuid'] which has no operator or user impact on naming.", 
            "date_created": "2014-02-27 15:38:19.191642+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "There was a similar fix for rbd images on master: https://review.openstack.org/#/c/44640/", 
            "date_created": "2014-02-27 15:43:15.359084+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/76968", 
            "date_created": "2014-02-27 21:03:13.085181+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/76968\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=d9a5a80bc06f7a25c259ff763a59dffd9514371e\nSubmitter: Jenkins\nBranch:    master\n\ncommit d9a5a80bc06f7a25c259ff763a59dffd9514371e\nAuthor: Sean Dague <email address hidden>\nDate:   Thu Feb 27 15:57:17 2014 -0500\n\n    Use uuid instead of name for lvm backend\n    \n    Because libvirt lvm volumes are based on instance['name'], it means\n    that the actual names used in lvm storage are based on an operator\n    configuration variable: instance_name_template (default is\n    'instance-%08x').\n    \n    However this is site changeable, and changeable at any time. This\n    creates 2 failure modes.\n    \n    1. Operator changes this, the result is all volumes created before the\n    change are no longer able to be cleaned up by nova\n    \n    2. Operator has changed this to something that includes end user\n    input, like %(display_name), which would allow one user to impact\n    another (user A has display name \"bob\", user B has display name\n    \"bob_joe\")\n    \n    This changes the lvm backend to use instance['uuid'] as it's\n    identifier which we know is unique, non overlapping, and not\n    changeable based on whims of site policy.\n    \n    It also provides limited backwards compatibility for cleaning up old\n    disks if the installation was using the default template (which is\n    safe), otherwise it logs a warning about possibly leaking a disk which\n    will need to be manually cleaned up. That should be removed once we\n    open the Juno tree.\n    \n    UpgradeImpact - while there is no operator action required to upgrade\n    over this change, if the nova install included a non default value for\n    instance_name_template then old lvm volumes will need to be cleaned up\n    manually after old guests are destroyed.\n    \n    Change-Id: Ib36b962971fd1f66ea9a0818e91fec59e118e686\n    Closes-Bug: #1285735\n", 
            "date_created": "2014-03-01 06:52:21.762582+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2014-03-05 13:10:06.847504+00:00"
}