{
    "status": "Fix Released", 
    "last_updated": "2015-03-30 14:33:57.503339+00:00", 
    "description": "We're running a Grizzly node using KVM (1.0 from cloud-archive) with local ephemeral instance storage.\n\nSince approximately the time we upgraded to Grizzly we've been receiving complaints from particular users about secondary disk corruption issues. These users in particular are noticing the issue because they are relying on the secondary drive and also because hey are using CentOS, which drops to an interactive prompt before completing boot if it cannot mount all filesystems (Ubuntu does not).\n\nWe've since discovered that this is specifically linked to block-migration of such disks which were created and formatted automatically by Nova. I.e., if we launch a new instance, log in and then reformat the drive internally (even as ext3), we don't encounter corruption issues after live-migration. If we change the virt_mkfs config option to use mkfs.ext4 then we also don't have the problem. Unfortunately that's not a simple fix for an active production cloud because all existing backing files must be removed in order to force their recreation.\n\nIn investigating the problem we noticed a behaviour that might be interrelated - after block-migration the instances secondary disk has a \"generic\" backing file instances/_base/ephemeral, as opposed to the backing file it was created with on the origin host, e.g., instances/_base/ephemeral_30_default.\nThese backing files have different virtual sizes(!):\n$ qemu-img info _base/ephemeral\nimage: _base/ephemeral\nfile format: raw\nvirtual size: 2.0G (2147483648 bytes)\ndisk size: 778M\n$ qemu-img info _base/ephemeral_30_default\nimage: _base/ephemeral_30_default\nfile format: raw\nvirtual size: 30G (32212254720 bytes)\ndisk size: 614M\n\nWe're no experts on qcow, but this looks like it could be problematic and may explain the corruption issues we're seeing - I can imagine there would be problems for a migrated guest that attempts to read a previously untouched sector beyond the size of the new backing file.", 
    "tags": [
        "libvirt"
    ], 
    "importance": "High", 
    "heat": 14, 
    "link": "https://bugs.launchpad.net/nova/+bug/1237683", 
    "owner": "None", 
    "id": 1237683, 
    "index": 1268, 
    "openned": "2013-10-09 21:57:59.969191+00:00", 
    "created": "2013-10-09 21:57:59.969191+00:00", 
    "title": "inconsitent virtual size in qcow base image after block-migration", 
    "comments": [
        {
            "content": "We're running a Grizzly node using KVM (1.0 from cloud-archive) with local ephemeral instance storage.\n\nSince approximately the time we upgraded to Grizzly we've been receiving complaints from particular users about secondary disk corruption issues. These users in particular are noticing the issue because they are relying on the secondary drive and also because hey are using CentOS, which drops to an interactive prompt before completing boot if it cannot mount all filesystems (Ubuntu does not).\n\nWe've since discovered that this is specifically linked to block-migration of such disks which were created and formatted automatically by Nova. I.e., if we launch a new instance, log in and then reformat the drive internally (even as ext3), we don't encounter corruption issues after live-migration. If we change the virt_mkfs config option to use mkfs.ext4 then we also don't have the problem. Unfortunately that's not a simple fix for an active production cloud because all existing backing files must be removed in order to force their recreation.\n\nIn investigating the problem we noticed a behaviour that might be interrelated - after block-migration the instances secondary disk has a \"generic\" backing file instances/_base/ephemeral, as opposed to the backing file it was created with on the origin host, e.g., instances/_base/ephemeral_30_default.\nThese backing files have different virtual sizes(!):\n$ qemu-img info _base/ephemeral\nimage: _base/ephemeral\nfile format: raw\nvirtual size: 2.0G (2147483648 bytes)\ndisk size: 778M\n$ qemu-img info _base/ephemeral_30_default\nimage: _base/ephemeral_30_default\nfile format: raw\nvirtual size: 30G (32212254720 bytes)\ndisk size: 614M\n\nWe're no experts on qcow, but this looks like it could be problematic and may explain the corruption issues we're seeing - I can imagine there would be problems for a migrated guest that attempts to read a previously untouched sector beyond the size of the new backing file.", 
            "date_created": "2013-10-09 21:57:59.969191+00:00", 
            "author": "https://api.launchpad.net/1.0/~blair-bethwaite"
        }, 
        {
            "content": "Part of this was fixed by bug 1195877\n\nIt now creates the backing file for the ephemeral in the right place.\n\nBut more seriously instead of creating a new empty ephemeral backing file it actually uses the instances image from glance as the ephemeral backing file too.\n\nHope that makes sense!", 
            "date_created": "2013-10-17 00:35:54.608840+00:00", 
            "author": "https://api.launchpad.net/1.0/~sorrison"
        }, 
        {
            "content": "Ping, bug triaging here.\n\nBlair, do you have any update (maybe you've done some testing with newer versions of OpenStack in a test environment). \n\nAlso,  it'd be a lot more helpful,  if you can provide some high-level reproducer commands for the block-migration, so others triaging the bugs without all the context can try to reproduce it.", 
            "date_created": "2014-10-21 12:13:20.167886+00:00", 
            "author": "https://api.launchpad.net/1.0/~kashyapc"
        }, 
        {
            "content": "Hi Kashyap,\n\nACK on the reproducibility context.\n\nThe behaviour is gone since Havana and if I recall correctly we backported the fix for https://bugs.launchpad.net/bugs/1195877, which fixed it for Grizzly at the time. 1195877 is tagged for grizzly backport potential - that's moot now I suppose.\n\nCheers!", 
            "date_created": "2014-10-21 21:57:28.541004+00:00", 
            "author": "https://api.launchpad.net/1.0/~blair-bethwaite"
        }, 
        {
            "content": "Addressed in Havana", 
            "date_created": "2015-03-30 14:33:57.081180+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }
    ], 
    "closed": "2015-03-30 14:33:48.193096+00:00"
}