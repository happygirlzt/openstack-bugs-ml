{
    "status": "Fix Released", 
    "last_updated": "2015-03-13 00:53:47.688383+00:00", 
    "description": "As recommended in http://docs.openstack.org/havana/config-reference/content/section_compute-cells.html#cell-config-optional-json I'm creating the nova-cells config with the cell information stored in a json file. However, when I do this nova-cells fails to start with this error in the logs:\n\n2014-04-29 11:52:05.240 16759 CRITICAL nova [-] __init__() takes exactly 3 arguments (1 given)\n2014-04-29 11:52:05.240 16759 TRACE nova Traceback (most recent call last):\n2014-04-29 11:52:05.240 16759 TRACE nova   File \"/usr/bin/nova-cells\", line 10, in <module>\n2014-04-29 11:52:05.240 16759 TRACE nova     sys.exit(main())\n2014-04-29 11:52:05.240 16759 TRACE nova   File \"/usr/lib/python2.7/dist-packages/nova/cmd/cells.py\", line 40, in main\n2014-04-29 11:52:05.240 16759 TRACE nova     manager=CONF.cells.manager)\n2014-04-29 11:52:05.240 16759 TRACE nova   File \"/usr/lib/python2.7/dist-packages/nova/service.py\", line 257, in create\n2014-04-29 11:52:05.240 16759 TRACE nova     db_allowed=db_allowed)\n2014-04-29 11:52:05.240 16759 TRACE nova   File \"/usr/lib/python2.7/dist-packages/nova/service.py\", line 139, in __init__\n2014-04-29 11:52:05.240 16759 TRACE nova     self.manager = manager_class(host=self.host, *args, **kwargs)\n2014-04-29 11:52:05.240 16759 TRACE nova   File \"/usr/lib/python2.7/dist-packages/nova/cells/manager.py\", line 87, in __init__\n2014-04-29 11:52:05.240 16759 TRACE nova     self.state_manager = cell_state_manager()\n2014-04-29 11:52:05.240 16759 TRACE nova TypeError: __init__() takes exactly 3 arguments (1 given)\n\n\nI have had a dig into the code and it appears that CellsManager creates an instance of CellStateManager with no arguments. CellStateManager __new__ runs and creates an instance of CellStateManagerFile which runs __new__ and __init__ with cell_state_cls and cells_config_path set. At this point __new__ returns CellStateManagerFile and the new instance's __init__() method is invoked (CellStateManagerFile.__init__) with the original arguments (there weren't any) which then results in the stack trace.\n\nIt seems reasonable for CellStateManagerFile to derive the cells_config_path info for itself so I've patched it locally with\n\n=== modified file 'state.py'\n--- state.py\t2014-04-30 15:10:16 +0000\n+++ state.py\t2014-04-30 15:10:26 +0000\n@@ -155,7 +155,7 @@\n             config_path = CONF.find_file(cells_config)\n             if not config_path:\n                 raise cfg.ConfigFilesNotFoundError(config_files=[cells_config])\n-            return CellStateManagerFile(cell_state_cls, config_path)\n+            return CellStateManagerFile(cell_state_cls)\n \n         return CellStateManagerDB(cell_state_cls)\n \n@@ -450,7 +450,9 @@\n \n \n class CellStateManagerFile(CellStateManager):\n-    def __init__(self, cell_state_cls, cells_config_path):\n+    def __init__(self, cell_state_cls=None):\n+        cells_config = CONF.cells.cells_config\n+        cells_config_path = CONF.find_file(cells_config)\n         self.cells_config_path = cells_config_path\n         super(CellStateManagerFile, self).__init__(cell_state_cls)\n \n\n\nUbuntu: 14.04\nnova-cells: 1:2014.1-0ubuntu1\n\nnova.conf:\n\n[DEFAULT]\ndhcpbridge_flagfile=/etc/nova/nova.conf\ndhcpbridge=/usr/bin/nova-dhcpbridge\nlogdir=/var/log/nova\nstate_path=/var/lib/nova\nlock_path=/var/lock/nova\nforce_dhcp_release=True\niscsi_helper=tgtadm\nlibvirt_use_virtio_for_bridges=True\nconnection_type=libvirt\nroot_helper=sudo nova-rootwrap /etc/nova/rootwrap.conf\nverbose=True\nec2_private_dns_show_ip=True\napi_paste_config=/etc/nova/api-paste.ini\nvolumes_path=/var/lib/nova/volumes\nenabled_apis=ec2,osapi_compute,metadata\nauth_strategy=keystone\ncompute_driver=libvirt.LibvirtDriver\nquota_driver=nova.quota.NoopQuotaDriver\n\n\n[cells]\nenable=True\nname=cell\ncell_type=compute\ncells_config=/etc/nova/cells.json\n\n\ncells.json: \n{\n    \"parent\": {\n        \"name\": \"parent\",\n        \"api_url\": \"http://api.example.com:8774\",\n        \"transport_url\": \"rabbit://rabbit.example.com\",\n        \"weight_offset\": 0.0,\n        \"weight_scale\": 1.0,\n        \"is_parent\": true\n    }\n}", 
    "tags": [
        "cells", 
        "in-stable-icehouse", 
        "patch", 
        "verification-done"
    ], 
    "importance": "Undecided", 
    "heat": 16, 
    "link": "https://bugs.launchpad.net/nova/+bug/1314677", 
    "owner": "https://api.launchpad.net/1.0/~gnuoy", 
    "id": 1314677, 
    "index": 6079, 
    "openned": "2014-04-30 15:19:23.156334+00:00", 
    "created": "2014-04-30 15:19:23.156334+00:00", 
    "title": "nova-cells fails when using JSON file to store cell information", 
    "comments": [
        {
            "content": "As recommended in http://docs.openstack.org/havana/config-reference/content/section_compute-cells.html#cell-config-optional-json I'm creating the nova-cells config with the cell information stored in a json file. However, when I do this nova-cells fails to start with this error in the logs:\n\n2014-04-29 11:52:05.240 16759 CRITICAL nova [-] __init__() takes exactly 3 arguments (1 given)\n2014-04-29 11:52:05.240 16759 TRACE nova Traceback (most recent call last):\n2014-04-29 11:52:05.240 16759 TRACE nova   File \"/usr/bin/nova-cells\", line 10, in <module>\n2014-04-29 11:52:05.240 16759 TRACE nova     sys.exit(main())\n2014-04-29 11:52:05.240 16759 TRACE nova   File \"/usr/lib/python2.7/dist-packages/nova/cmd/cells.py\", line 40, in main\n2014-04-29 11:52:05.240 16759 TRACE nova     manager=CONF.cells.manager)\n2014-04-29 11:52:05.240 16759 TRACE nova   File \"/usr/lib/python2.7/dist-packages/nova/service.py\", line 257, in create\n2014-04-29 11:52:05.240 16759 TRACE nova     db_allowed=db_allowed)\n2014-04-29 11:52:05.240 16759 TRACE nova   File \"/usr/lib/python2.7/dist-packages/nova/service.py\", line 139, in __init__\n2014-04-29 11:52:05.240 16759 TRACE nova     self.manager = manager_class(host=self.host, *args, **kwargs)\n2014-04-29 11:52:05.240 16759 TRACE nova   File \"/usr/lib/python2.7/dist-packages/nova/cells/manager.py\", line 87, in __init__\n2014-04-29 11:52:05.240 16759 TRACE nova     self.state_manager = cell_state_manager()\n2014-04-29 11:52:05.240 16759 TRACE nova TypeError: __init__() takes exactly 3 arguments (1 given)\n\n\nI have had a dig into the code and it appears that CellsManager creates an instance of CellStateManager with no arguments. CellStateManager __new__ runs and creates an instance of CellStateManagerFile which runs __new__ and __init__ with cell_state_cls and cells_config_path set. At this point __new__ returns CellStateManagerFile and the new instance's __init__() method is invoked (CellStateManagerFile.__init__) with the original arguments (there weren't any) which then results in the stack trace.\n\nIt seems reasonable for CellStateManagerFile to derive the cells_config_path info for itself so I've patched it locally with\n\n=== modified file 'state.py'\n--- state.py\t2014-04-30 15:10:16 +0000\n+++ state.py\t2014-04-30 15:10:26 +0000\n@@ -155,7 +155,7 @@\n             config_path = CONF.find_file(cells_config)\n             if not config_path:\n                 raise cfg.ConfigFilesNotFoundError(config_files=[cells_config])\n-            return CellStateManagerFile(cell_state_cls, config_path)\n+            return CellStateManagerFile(cell_state_cls)\n \n         return CellStateManagerDB(cell_state_cls)\n \n@@ -450,7 +450,9 @@\n \n \n class CellStateManagerFile(CellStateManager):\n-    def __init__(self, cell_state_cls, cells_config_path):\n+    def __init__(self, cell_state_cls=None):\n+        cells_config = CONF.cells.cells_config\n+        cells_config_path = CONF.find_file(cells_config)\n         self.cells_config_path = cells_config_path\n         super(CellStateManagerFile, self).__init__(cell_state_cls)\n \n\n\nUbuntu: 14.04\nnova-cells: 1:2014.1-0ubuntu1\n\nnova.conf:\n\n[DEFAULT]\ndhcpbridge_flagfile=/etc/nova/nova.conf\ndhcpbridge=/usr/bin/nova-dhcpbridge\nlogdir=/var/log/nova\nstate_path=/var/lib/nova\nlock_path=/var/lock/nova\nforce_dhcp_release=True\niscsi_helper=tgtadm\nlibvirt_use_virtio_for_bridges=True\nconnection_type=libvirt\nroot_helper=sudo nova-rootwrap /etc/nova/rootwrap.conf\nverbose=True\nec2_private_dns_show_ip=True\napi_paste_config=/etc/nova/api-paste.ini\nvolumes_path=/var/lib/nova/volumes\nenabled_apis=ec2,osapi_compute,metadata\nauth_strategy=keystone\ncompute_driver=libvirt.LibvirtDriver\nquota_driver=nova.quota.NoopQuotaDriver\n\n\n[cells]\nenable=True\nname=cell\ncell_type=compute\ncells_config=/etc/nova/cells.json\n\n\ncells.json: \n{\n    \"parent\": {\n        \"name\": \"parent\",\n        \"api_url\": \"http://api.example.com:8774\",\n        \"transport_url\": \"rabbit://rabbit.example.com\",\n        \"weight_offset\": 0.0,\n        \"weight_scale\": 1.0,\n        \"is_parent\": true\n    }\n}", 
            "date_created": "2014-04-30 15:19:23.156334+00:00", 
            "author": "https://api.launchpad.net/1.0/~gnuoy"
        }, 
        {
            "content": "As there hasn't been much movement on this I'm going to take the bug and submit the patch I described when the bug was submitted", 
            "date_created": "2014-07-21 15:26:00.099389+00:00", 
            "author": "https://api.launchpad.net/1.0/~gnuoy"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/108733", 
            "date_created": "2014-07-22 15:37:54.360215+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/108733\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=695191fa89387d96e60120ff32965493c844e7f5\nSubmitter: Jenkins\nBranch:    master\n\ncommit 695191fa89387d96e60120ff32965493c844e7f5\nAuthor: Liam Young <email address hidden>\nDate:   Tue Jul 22 16:25:00 2014 +0100\n\n    Fix CellStateManagerFile init to failure\n    \n    Currently, specifying a cells_config file in nova.conf causes\n    CellStateManager to fail and in turn stops the nova-cells service from\n    starting. The reason is that CellsManager creates an instance of\n    CellStateManager with no arguments. CellStateManager __new__ runs and\n    creates an instance of CellStateManagerFile which runs __new__ and\n    __init__ with cell_state_cls and cells_config_path set. At this point\n    __new__ returns CellStateManagerFile and the new instance's __init__\n    method is invoked (CellStateManagerFile.__init__) with the original\n    arguments (there weren't any) which then results in:\n    2014-04-29 11:52:05.240 16759 TRACE nova self.state_manager =\n    cell_state_manager()\n    2014-04-29 11:52:05.240 16759 TRACE nova TypeError: __init__() takes\n    exactly 3 arguments (1 given)\n    \n    It seems reasonable for CellStateManagerFile to derive the\n    cells_config_path info for itself so I have updated the code with that\n    change and added unit tests to catch this bug and to check that the\n    correct managers are still returned\n    \n    Change-Id: I9021640515142a3ca95c2d9e7b03e19b529bc175\n    Closes-Bug: #1314677\n", 
            "date_created": "2014-08-27 14:35:01.459866+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "I know this bug has been patched, but I ran into a weird situation with the unpatched master branch. \nIf I specified invalid JSON in the file, the CellStateManagerFile was correctly instantiated (going beyond the point where the bug pops up) and nova-cells went as far as trying to read cell state from the file and failing with invalid JSON.\nHowever, on correcting the JSON, the CellStateManager failed to instantiate with the error message in the original bug. \nI couldn't figure out why this happened. Maybe, if you have time, you can investigate it\n\nAppendix: Here are the logs for starting an unpatched nova with invalid JSON\n\nCRITICAL nova [-] ValueError: Expecting property name enclosed in double quotes: line 9 column 9 (char 273)\n\n2014-08-29 14:28:09.030 TRACE nova Traceback (most recent call last):\n2014-08-29 14:28:09.030 TRACE nova   File \"/usr/bin/nova-cells\", line 10, in <module>\n2014-08-29 14:28:09.030 TRACE nova     sys.exit(main())\n2014-08-29 14:28:09.030 TRACE nova   File \"/opt/stack/nova/nova/cmd/cells.py\", line 45, in main\n2014-08-29 14:28:09.030 TRACE nova     manager=CONF.cells.manager)\n2014-08-29 14:28:09.030 TRACE nova   File \"/opt/stack/nova/nova/service.py\", line 275, in create\n2014-08-29 14:28:09.030 TRACE nova     db_allowed=db_allowed)\n2014-08-29 14:28:09.030 TRACE nova   File \"/opt/stack/nova/nova/service.py\", line 148, in __init__\n2014-08-29 14:28:09.030 TRACE nova     self.manager = manager_class(host=self.host, *args, **kwargs)\n2014-08-29 14:28:09.030 TRACE nova   File \"/opt/stack/nova/nova/cells/manager.py\", line 91, in __init__\n2014-08-29 14:28:09.030 TRACE nova     self.state_manager = cell_state_manager()\n2014-08-29 14:28:09.030 TRACE nova   File \"/opt/stack/nova/nova/cells/state.py\", line 159, in __new__\n2014-08-29 14:28:09.030 TRACE nova     return CellStateManagerFile(cell_state_cls, config_path)\n2014-08-29 14:28:09.030 TRACE nova   File \"/opt/stack/nova/nova/cells/state.py\", line 466, in __init__\n2014-08-29 14:28:09.030 TRACE nova     super(CellStateManagerFile, self).__init__(cell_state_cls)\n2014-08-29 14:28:09.030 TRACE nova   File \"/opt/stack/nova/nova/cells/state.py\", line 176, in __init__\n2014-08-29 14:28:09.030 TRACE nova     self._cell_data_sync(force=True)\n2014-08-29 14:28:09.030 TRACE nova   File \"/opt/stack/nova/nova/cells/state.py\", line 480, in _cell_data_sync\n2014-08-29 14:28:09.030 TRACE nova     self.cells_config_data = jsonutils.loads(data)\n2014-08-29 14:28:09.030 TRACE nova   File \"/opt/stack/nova/nova/openstack/common/jsonutils.py\", line 176, in loads\n2014-08-29 14:28:09.030 TRACE nova     return json.loads(strutils.safe_decode(s, encoding), **kwargs)\n2014-08-29 14:28:09.030 TRACE nova   File \"/usr/lib64/python2.7/json/__init__.py\", line 338, in loads\n2014-08-29 14:28:09.030 TRACE nova     return _default_decoder.decode(s)\n2014-08-29 14:28:09.030 TRACE nova   File \"/usr/lib64/python2.7/json/decoder.py\", line 365, in decode\n2014-08-29 14:28:09.030 TRACE nova     obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n2014-08-29 14:28:09.030 TRACE nova   File \"/usr/lib64/python2.7/json/decoder.py\", line 381, in raw_decode\n2014-08-29 14:28:09.030 TRACE nova     obj, end = self.scan_once(s, idx)\n2014-08-29 14:28:09.030 TRACE nova ValueError: Expecting property name enclosed in double quotes: line 9 column 9 (char 273)\n2014-08-29 14:28:09.030 TRACE nova \n\nAs you can see it successfully goes past the state_manager() step where the original bug was found.", 
            "date_created": "2014-08-29 14:29:42.691878+00:00", 
            "author": "https://api.launchpad.net/1.0/~dheeraj-gupta4"
        }, 
        {
            "content": "debdiff nova_2014.1.2-0ubuntu1.1.dsc nova_2014.1.2-0ubuntu1.2.dsc ", 
            "date_created": "2014-09-19 15:17:26.828776+00:00", 
            "author": "https://api.launchpad.net/1.0/~gnuoy"
        }, 
        {
            "content": "The attachment \"trusty-ubuntu1.1-ubuntu1.2.debdiff\" seems to be a debdiff.  The ubuntu-sponsors team has been subscribed to the bug report so that they can review and hopefully sponsor the debdiff.  If the attachment isn't a patch, please remove the \"patch\" flag from the attachment, remove the \"patch\" tag, and if you are member of the ~ubuntu-sponsors, unsubscribe the team.\n\n[This is an automated message performed by a Launchpad user owned by ~brian-murray, for any issue please contact him.]", 
            "date_created": "2014-09-19 16:29:22.286430+00:00", 
            "author": "https://api.launchpad.net/1.0/~crichton"
        }, 
        {
            "content": "Fix proposed to branch: stable/icehouse\nReview: https://review.openstack.org/124811", 
            "date_created": "2014-09-29 17:18:19.864246+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Change abandoned by Liam Young (<email address hidden>) on branch: stable/icehouse\nReview: https://review.openstack.org/124811\nReason: One of the chaged files went awol", 
            "date_created": "2014-09-29 17:22:25.857073+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Hello Liam, or anyone else affected,\n\nAccepted nova into trusty-proposed. The package will build now and be available at http://launchpad.net/ubuntu/+source/nova/1:2014.1.3-0ubuntu1 in a few hours, and then in the -proposed repository.\n\nPlease help us by testing this new package.  See https://wiki.ubuntu.com/Testing/EnableProposed for documentation how to enable and use -proposed.  Your feedback will aid us getting this update out to other Ubuntu users.\n\nIf this package fixes the bug for you, please add a comment to this bug, mentioning the version of the package you tested, and change the tag from verification-needed to verification-done. If it does not fix the bug for you, please add a comment stating that, and change the tag to verification-failed.  In either case, details of your testing will help us make a better decision.\n\nFurther information regarding the verification process can be found at https://wiki.ubuntu.com/QATeam/PerformingSRUVerification .  Thank you in advance!", 
            "date_created": "2014-10-07 13:59:25.988597+00:00", 
            "author": "https://api.launchpad.net/1.0/~arges"
        }, 
        {
            "content": "I've tested with nova-cells 1:2014.1.3-0ubuntu1 and this fixes the problem", 
            "date_created": "2014-10-10 08:44:22.995177+00:00", 
            "author": "https://api.launchpad.net/1.0/~gnuoy"
        }, 
        {
            "content": "The verification of the Stable Release Update for nova has completed successfully and the package has now been released to -updates.  Subsequently, the Ubuntu Stable Release Updates Team is being unsubscribed and will not receive messages about this bug report.  In the event that you encounter a regression using the package from -updates please report a new bug using ubuntu-bug and tag the bug report regression-update so we can easily find any regressions.", 
            "date_created": "2014-10-20 18:54:01.755289+00:00", 
            "author": "https://api.launchpad.net/1.0/~arges"
        }, 
        {
            "content": "This bug was fixed in the package nova - 1:2014.1.3-0ubuntu1\n\n---------------\nnova (1:2014.1.3-0ubuntu1) trusty; urgency=medium\n\n  [ Liam Young ]\n  * d/p/cells-json-store.patch: Fix issue with nova-cells failing when using\n    JSON file to store cell information (LP: #1314677).\n\n  [ Corey Bryant ]\n  * Resynchronize with stable/icehouse (a058646) (LP: #1377136):\n    - [1a95c95] Adds tests for Hyper-V VM Utils\n    - [bb47d55] Removes unnecessary instructions in test_hypervapi\n    - [4f41d37] Fixes a Hyper-V list_instances localization issue\n    - [9015410] Adds list_instance_uuids to the Hyper-V driver\n    - [3371ad8] Add _wrap_db_error() support to Session.commit()\n    - [dfb0e0f] Neutron: Atomic update of instance info cache\n    - [bce481c] Ensure info cache updates don't overwhelm cells\n    - [f58d95c] Sync process and str utils from oslo\n    - [4e6371b] remove test_multiprocess_api\n    - [7e09173] Fixes Hyper-V agent force_hyperv_utils_v1 flag issue\n    - [7523ab4] Fix attaching config drive issue on Hyper-V when migrate instances\n    - [74e0ba7] Fix live-migration failure in FC multipath case\n    - [b61aa4d] libvirt: Save device_path in connection_info when booting from volume\n    - [f93b8ee] Made unassigned networks visible in flat networking\n    - [82cc3be] Do not fail cell's instance deletion, if it's missing info_cache\n    - [d72c0a4] Fixes Hyper-V boot from volume root device issue\n    - [0d3dad7] Fixes Hyper-V resize down exception\n    - [5d5970a] db: Add @_retry_on_deadlock to service_update()\n    - [9596f52] Add Hyper-V driver in the \"compute_driver\" option description\n    - [4a8d6ca] Block sqlalchemy migrate 0.9.2 as it breaks all of nova\n    - [311ab57] Move the error check for \"brctl addif\"\n    - [df09c2a] Fix rootwrap for non openstack.org iqn's\n    - [1613cd99] Fix instance boot when Ceph is used for ephemeral storage\n    - [4bc680f] Make floatingip-ip-delete atomic with neutron\n    - [0d69163] Fix race condition with vif plugging in finish migrate\n    - [520aa4c] libvirt: Use VIR_DOMAIN_AFFECT_LIVE for paused instances\n    - [3c34e37] add repr for event objects\n    - [1b7ab22] make lifecycle event logs more clear\n    - [e1d6e18] Catch missing Glance image attrs with None\n    - [b591389] Update block_device_info to contain swap and ephemeral disks\n    - [2155188] Adds get_instance_disk_info to compute drivers\n    - [87f842d] Fixes Hyper-V vm state issue\n    - [1106ef2] Fix expected error details from jsonschema\n    - [e5e6bc7] Include next link when default limit is reached\n    - [526853e] Fix FloatingIP.save() passing FixedIP object to sqlalchemy\n    - [4e1e217] Read deleted instances during lifecycle events\n    - [d8b9ba5] Add a retry_on_deadlock to reservations_expire\n    - [b53adea] Add expire reservations in backport position.\n    - [e874ee2] Fixes Hyper-V SCSI slot selection\n    - [471e644] VMware: do not cache image when root_gb is 0\n    - [825cfe4] Fix _parse_datetime in simple tenant usage extension\n    - [073ee06] Avoid traceback logs from simple tenant usage extension\n    - [9447203] replace NovaException with VirtualInterfaceCreate when neutron fails\n    - [6b7cb1a] libvirt: convert cpu features attribute from list to a set\n    - [7ca83e8] Delete image when backup operation failed on snapshot step\n    - [82a13b3] VM in rescue state must have a restricted set of actions\n    - [e7d2087] shelve doesn't work on nova-cells environment\n    - [aeb71a8] libvirt: return the correct instance path while cleanup_resize\n    - [cce6d22] Fix nova image-show with queued image\n    - [aff80d5] _translate_from_glance() can cause an unnecessary HTTP request\n    - [a058646] Loosen import_exceptions to cover all of gettextutils\n  * d/p/libvirt-convert-cpu-features-attribute-from-list-to-.patch: Dropped.\n    Code has been fixed upstream.\n  * d/p/libvirt-Handle-unsupported-host-capabilities.patch: Rebased.\n -- Chuck Short <email address hidden>   Mon, 06 Oct 2014 09:24:45 -0400", 
            "date_created": "2014-10-20 18:57:01.136318+00:00", 
            "author": "https://api.launchpad.net/1.0/~janitor"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/124811\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=bfeae680bc0632e0129b647d45e4b80328a33535\nSubmitter: Jenkins\nBranch:    stable/icehouse\n\ncommit bfeae680bc0632e0129b647d45e4b80328a33535\nAuthor: Liam Young <email address hidden>\nDate:   Tue Jul 22 16:25:00 2014 +0100\n\n    Fix CellStateManagerFile init to failure\n    \n    Currently, specifying a cells_config file in nova.conf causes\n    CellStateManager to fail and in turn stops the nova-cells service from\n    starting. The reason is that CellsManager creates an instance of\n    CellStateManager with no arguments. CellStateManager __new__ runs and\n    creates an instance of CellStateManagerFile which runs __new__ and\n    __init__ with cell_state_cls and cells_config_path set. At this point\n    __new__ returns CellStateManagerFile and the new instance's __init__\n    method is invoked (CellStateManagerFile.__init__) with the original\n    arguments (there weren't any) which then results in:\n    2014-04-29 11:52:05.240 16759 TRACE nova self.state_manager =\n    cell_state_manager()\n    2014-04-29 11:52:05.240 16759 TRACE nova TypeError: __init__() takes\n    exactly 3 arguments (1 given)\n    \n    It seems reasonable for CellStateManagerFile to derive the\n    cells_config_path info for itself so I have updated the code with that\n    change and added unit tests to catch this bug and to check that the\n    correct managers are still returned\n    \n    Closes-Bug: #1314677\n    (cherry picked from commit 695191fa89387d96e60120ff32965493c844e7f5)\n    \n    Conflicts:\n    \tnova/tests/cells/test_cells_state_manager.py\n    \n    Change-Id: I9021640515142a3ca95c2d9e7b03e19b529bc175\n", 
            "date_created": "2014-10-24 08:08:28.066774+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2014-09-05 10:02:15.170922+00:00"
}