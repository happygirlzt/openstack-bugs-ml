{
    "status": "Won't Fix", 
    "last_updated": "2017-01-19 22:36:26.557266+00:00", 
    "description": "I have Liberty controller (nova-api, etc.) with \n\n[upgrade_levels]\ncompute=kilo\n\nand Liberty compute node, when i try live-migration\ni see \"live_migration() takes exactly 7 arguments (6 given)\"\nin nova-compute.log.\n\nI can not completely remove compatibility with kilo,\nbecause i have kilo computes in my env.\n\nI also tried to add \"upgrade_levels\" to compute node,\nbut with no luck.\n\nEnvironment\n==========\nLibvirt+KVM, Ceph for VMs\nLiberty - Mirantis OpenStack 8.0 (2015.2)\n\nSteps to reproduce\n===============\n1) Install Liberty control plane (api, conductor, schduler, etc.)\n2) Install Liberty computes\n3) Add to nova.conf on controller\n  [upgrade_levels]\n  compute=kilo\n3) Try \"nova live-migration VM\"\n\nExpected result\n=============\nMigration will succeed\n\nActual result\n==========\nTraceback on compute node\nhttp://paste.openstack.org/show/521871/", 
    "tags": [
        "live-migration"
    ], 
    "importance": "Undecided", 
    "heat": 16, 
    "link": "https://bugs.launchpad.net/nova/+bug/1595864", 
    "owner": "None", 
    "id": 1595864, 
    "index": 7566, 
    "openned": "2016-06-24 07:57:47.684366+00:00", 
    "created": "2016-06-24 07:57:47.684366+00:00", 
    "title": "live_migration() takes exactly 7 arguments (6 given) if upgrade_levels compute=kilo", 
    "comments": [
        {
            "content": "I have Liberty controller (nova-api, etc.) with \n\n[upgrade_levels]\ncompute=kilo\n\nand Liberty compute node, when i try live-migration\ni see \"live_migration() takes exactly 7 arguments (6 given)\"\nin nova-compute.log.\n\nI can not completely remove compatibility with kilo,\nbecause i have kilo computes in my env.\n\nI also tried to add \"upgrade_levels\" to compute node,\nbut with no luck.\n\nEnvironment\n==========\nLibvirt+KVM, Ceph for VMs\nLiberty - Mirantis OpenStack 8.0 (2015.2)\n\nSteps to reproduce\n===============\n1) Install Liberty control plane (api, conductor, schduler, etc.)\n2) Install Liberty computes\n3) Add to nova.conf on controller\n  [upgrade_levels]\n  compute=kilo\n3) Try \"nova live-migration VM\"\n\nExpected result\n=============\nMigration will succeed\n\nActual result\n==========\nTraceback on compute node\nhttp://paste.openstack.org/show/521871/", 
            "date_created": "2016-06-24 07:57:47.684366+00:00", 
            "author": "https://api.launchpad.net/1.0/~rsokolkov"
        }, 
        {
            "content": "it looks like a duplicate for https://bugs.launchpad.net/nova/+bug/1576048 but, could you please provide more logs, to confirm", 
            "date_created": "2016-07-01 08:53:07.349110+00:00", 
            "author": "https://api.launchpad.net/1.0/~tdurakov"
        }, 
        {
            "content": "So I think what is happening here, is there are no nova-compute nodes in the DB, so the min_service_version = 0.\n\nThis is then cached in the nova-conductor until restart. The cache could be triggered by some query in the conductor that happens before any nova-compute starts up.\n\nLater, nova-compute starts, and if the conductor is restarted we get the correct min_version.\n\nI think the code needs to worry about the special case of having no services, and getting the min_version of that.", 
            "date_created": "2016-07-04 16:38:41.710551+00:00", 
            "author": "https://api.launchpad.net/1.0/~johngarbutt"
        }, 
        {
            "content": "Related fix proposed to branch: master\nReview: https://review.openstack.org/337327", 
            "date_created": "2016-07-04 17:01:24.449179+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Change abandoned by John Garbutt (<email address hidden>) on branch: master\nReview: https://review.openstack.org/337327\nReason: was just an idea", 
            "date_created": "2016-07-06 08:27:52.569436+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "At this point, liberty is nearing EOL. So it's not really clear this is going to be a thing we address.", 
            "date_created": "2016-08-01 13:17:46.590955+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "[Expired for OpenStack Compute (nova) because there has been no activity for 60 days.]", 
            "date_created": "2016-10-01 04:17:39.027465+00:00", 
            "author": "https://api.launchpad.net/1.0/~janitor"
        }, 
        {
            "content": "I'm in the process of a Kilo to Liberty migration and am encountering this exact same issue when we attempt to live migrate instances from a Liberty to a Kilo Compute node. The Compute API is pinned to 4.0.\n\nI've attempted Johns suggestion and restarted all nova-conductor services but it has had no affect.\n\nAre there any suggestions and/or workarounds for this issue?", 
            "date_created": "2016-10-27 01:48:19.541183+00:00", 
            "author": "https://api.launchpad.net/1.0/~oisin-omalley"
        }, 
        {
            "content": "Both Kilo and Liberty are EOL", 
            "date_created": "2016-12-07 21:28:42.717904+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "@Oisin, did you eventually sort it out, same issue here", 
            "date_created": "2017-01-19 14:50:21.189403+00:00", 
            "author": "https://api.launchpad.net/1.0/~karmab"
        }, 
        {
            "content": "I found a work around for it, the additional parameter from the live_migration() function was added in the 4.2 rpcapi version. I found instances would live migrate from a Liberty either an liberty or Kilo compute node when the compute level was set to 4.2. \n\nTo live migrate from Kilo to Liberty on all Nova nodes set;\n[upgrade_levels]\ncompute=4.0\n\nTo live migrate from Liberty to Liberty or liberty to Kilo nodes, set the compute level on Liberty Nova nodes to;\n[upgrade_levels]\ncompute=4.2\n\nDuring our rolling migration from Kilo to Liberty, compute level was set to 4.0 which enabled us to live migrate everything off Kilo compute nodes to Liberty nodes. The plan was if we encountered an issue with a Liberty node we could set the compute level to 4.2 and back out by live migrating the instance back to a Kilo or another Liberty node. ", 
            "date_created": "2017-01-19 22:36:25.120880+00:00", 
            "author": "https://api.launchpad.net/1.0/~oisin-omalley"
        }
    ], 
    "closed": "2016-12-07 21:28:06.293447+00:00"
}