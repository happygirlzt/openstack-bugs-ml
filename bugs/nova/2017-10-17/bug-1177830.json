{
    "status": "Fix Released", 
    "last_updated": "2014-03-20 22:09:52.724106+00:00", 
    "description": "Currently there's no check on the root disk raw sizes. A user can create qcow2 images with any size and upload it to glance and spawn instances off this file. The raw backing file created in the compute node will be small at first due to it being a sparse file, but will grow as data is written to it. This can cause the following issues.\n\n1. Bypass storage quota restrictions\n2. Overrun compute host disk space\n\nThis was reproduced in Devstack using recent trunk d7e4692.", 
    "tags": [], 
    "importance": "Critical", 
    "heat": 272, 
    "link": "https://bugs.launchpad.net/nova/+bug/1177830", 
    "owner": "https://api.launchpad.net/1.0/~cfb-n", 
    "id": 1177830, 
    "index": 132, 
    "openned": "2013-05-08 15:02:13.501799+00:00", 
    "created": "2013-05-08 15:02:13.501799+00:00", 
    "title": "[OSSA 2013-012] Unchecked qcow2 root disk sizes", 
    "comments": [
        {
            "content": "Currently there's no check on the root disk raw sizes. A user can create qcow2 images with any size and upload it to glance and spawn instances off this file. The raw backing file created in the compute node will be small at first due to it being a sparse file, but will grow as data is written to it. This can cause the following issues.\n\n1. Bypass storage quota restrictions\n2. Overrun compute host disk space\n\nThis was reproduced in Devstack using recent trunk d7e4692.", 
            "date_created": "2013-05-08 15:02:13.501799+00:00", 
            "author": "https://api.launchpad.net/1.0/~parthipan"
        }, 
        {
            "content": "I'm not sure if this should be categorized as security or not. But I'll leave it for someone else to review and move it to public bug.", 
            "date_created": "2013-05-08 15:05:31.383154+00:00", 
            "author": "https://api.launchpad.net/1.0/~parthipan"
        }, 
        {
            "content": "Since you originally filed this as Public, there's no reason to make it private.", 
            "date_created": "2013-05-08 18:43:45.285236+00:00", 
            "author": "https://api.launchpad.net/1.0/~russellb"
        }, 
        {
            "content": "FWIW, it looks like xenapi does check the size properly.  (Just making sure this doesn't apply to xenapi also)", 
            "date_created": "2013-05-08 18:52:22.572661+00:00", 
            "author": "https://api.launchpad.net/1.0/~cbehrens"
        }, 
        {
            "content": "Can you provide some more detail on how you reproduced this?  From a discussion on IRC, this *shouldn't* be the case.  cburgess is looking into reproducing it, though.", 
            "date_created": "2013-05-08 18:55:33.019311+00:00", 
            "author": "https://api.launchpad.net/1.0/~russellb"
        }, 
        {
            "content": "Confirmed with the libvirt driver. We set the virtual size of the qcow2 to be the size of the backing file. We never check the flavor disk size vs. the virtual size of the backing file.", 
            "date_created": "2013-05-08 19:41:40.924858+00:00", 
            "author": "https://api.launchpad.net/1.0/~cfb-n"
        }, 
        {
            "content": "Nova does have a check for the min_disk metadata property against the root_gb size of the flavor (providing min_disk is not 0).\n\nThat check in itself seems slightly flawed at the moment as the root_gb is really the minimum root volume size, and as shown here the virt layer will  if required expand the root disk.\n\nSo a possible fix might be to:\n - Enforce in Glance that min_disk is always checked and set to the full size the image will expand to\n - Change the checks in nova to compare min_disk against the sum of root_gb + ephemeral_gb in the flavor   ", 
            "date_created": "2013-05-09 15:07:26.797972+00:00", 
            "author": "https://api.launchpad.net/1.0/~philip-day"
        }, 
        {
            "content": "If we can't rely on min_disk being accurate (Its not clear to me to what extend Glance enforces accuracy here) then Nova will need to get this info direct from the image I guess, and use that for the checks instead of the glance metadata", 
            "date_created": "2013-05-09 15:20:31.581623+00:00", 
            "author": "https://api.launchpad.net/1.0/~philip-day"
        }, 
        {
            "content": "Glance updating a virtual disk size has the following benefits:\n\n1. Cinder can check this value outright and fail fast for a volume creation if the volume size is less than the virtual size instead of having to download the image.\n2. Nova can check this value and do the same against flavor quota without having to download the image.", 
            "date_created": "2013-05-09 15:32:48.402276+00:00", 
            "author": "https://api.launchpad.net/1.0/~parthipan"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/28717", 
            "date_created": "2013-05-09 20:38:27.091397+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/28717\nCommitted: http://github.com/openstack/nova/commit/44a8aba1d5da87d54db48079103fdef946666d80\nSubmitter: Jenkins\nBranch:    master\n\ncommit 44a8aba1d5da87d54db48079103fdef946666d80\nAuthor: Chet Burgess <email address hidden>\nDate:   Thu May 9 09:57:28 2013 +0000\n\n    Check QCOW2 image size during root disk creation\n    \n    glance can only tell us the size of the file, not the virtual\n    size of the QCOW2. As such we need to check the virtual size of\n    the image once its cached and ensure it's <= to the flavor's\n    root disk size.\n    \n    Change-Id: I833467284126557eb598b8350a84e10c06292fa9\n    Fixes: bug 1177830\n", 
            "date_created": "2013-05-10 23:01:49.344257+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: stable/grizzly\nReview: https://review.openstack.org/28901", 
            "date_created": "2013-05-12 01:34:42.397429+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Hi. So, it seems that we don't have a Folsom patch yet? Is anyone working on that? I also propose the following advisory. What do people think?\n\n*****\n\nOpenStack Security Advisory: 2013-XXX\nCVE: Not yet assigned\nDate: May 14, 2013\nTitle: Nova fails to verify image virtual size\nReporter: Loganathan Parthipan\nProducts: Nova\nAffects: All versions\n\nLoganathan Parthipan publicly reported a vulnerability in Nova. Nova did not\nimplement checking for the virtual size of a qcow2 image used as ephemeral\nstorage for instances. It is therefore possible for a user to create an image\nwhich has a large virtual size, but little data. Once the instance is created,\nthe user can then proceed to fill the virtual disk, and consume all available\ndisk on the host node filesystem.\n\nHavana (development branch) fix:\nhttps://review.openstack.org/28717\n\nGrizzly fix:\nhttps://review.openstack.org/28901\n\nFolsom fix:\nNo patch yet\n\nReferences:\nhttps://bugs.launchpad.net/keystone/+bug/1177830", 
            "date_created": "2013-05-13 22:08:44.103703+00:00", 
            "author": "https://api.launchpad.net/1.0/~mikal"
        }, 
        {
            "content": "The bug URL says keystone.  Other than that it seems fine.", 
            "date_created": "2013-05-13 22:48:31.483997+00:00", 
            "author": "https://api.launchpad.net/1.0/~russellb"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/28901\nCommitted: http://github.com/openstack/nova/commit/a4fc0c800502338e4530cad910efb64a5483e1ea\nSubmitter: Jenkins\nBranch:    stable/grizzly\n\ncommit a4fc0c800502338e4530cad910efb64a5483e1ea\nAuthor: Chet Burgess <email address hidden>\nDate:   Thu May 9 09:57:28 2013 +0000\n\n    Check QCOW2 image size during root disk creation\n    \n    glance can only tell us the size of the file, not the virtual\n    size of the QCOW2. As such we need to check the virtual size of\n    the image once its cached and ensure it's <= to the flavor's\n    root disk size.\n    \n    Change-Id: I833467284126557eb598b8350a84e10c06292fa9\n    Fixes: bug 1177830\n    (cherry picked from commit 44a8aba1d5da87d54db48079103fdef946666d80)\n", 
            "date_created": "2013-05-14 01:51:27.247579+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Advisory looks good (except the bug reference that Russell noticed). You can drop the first three lines in the stakeholders warning (since you don't have the CVE, final date or final OSSA number yet)", 
            "date_created": "2013-05-14 10:17:20.730613+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "Also wait for the Folsom patch to be proposed for review before sending the stakeholders/CVE email.", 
            "date_created": "2013-05-14 10:23:39.941432+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "Fix proposed to branch: stable/folsom\nReview: https://review.openstack.org/29192", 
            "date_created": "2013-05-15 04:37:01.984118+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "CVE requested, tentative release date for OSSA set to Thursday, May 16, 0900 UTC", 
            "date_created": "2013-05-15 12:23:09.769706+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "FYI, Essex is affected too. I have a very preliminary patch, but probably won't have it ready before tomorrow.", 
            "date_created": "2013-05-16 00:56:19.534000+00:00", 
            "author": "https://api.launchpad.net/1.0/~jdstrand"
        }, 
        {
            "content": "OSSA-2013-012", 
            "date_created": "2013-05-16 09:15:17.705641+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "Here is a patch for Essex which fixes the bug. It does not add a test case, but it has been manually tested with both use_cow_images=true and use_cow_images=false with flavors with unspecified root size, too small root size and big enough root size.\n\nHowever, it introduces a regression in that if exception.ImageTooLarge() is raised, the flavor cannot be deleted:\n$ nova flavor-list\n...\n| 8  |small1 | 256       | 1    | 1         |      | 1     | 1.0         |\n$ nova flavor-delete 8\nERROR: The resource could not be found. (HTTP 404)\n", 
            "date_created": "2013-05-16 14:03:01.257275+00:00", 
            "author": "https://api.launchpad.net/1.0/~jdstrand"
        }, 
        {
            "content": "Oh, I should also mention that the above patch passes the testsuite.", 
            "date_created": "2013-05-16 14:05:52.106293+00:00", 
            "author": "https://api.launchpad.net/1.0/~jdstrand"
        }, 
        {
            "content": "This may be bug #1048678, checking...", 
            "date_created": "2013-05-16 14:28:38.302898+00:00", 
            "author": "https://api.launchpad.net/1.0/~jdstrand"
        }, 
        {
            "content": "Yes, that fixes it. People deploying my essex patch should also backport https://review.openstack.org/#/c/12729/.", 
            "date_created": "2013-05-16 14:32:50.298666+00:00", 
            "author": "https://api.launchpad.net/1.0/~jdstrand"
        }, 
        {
            "content": "Sorry, while bug #1048678 does affect essex, it is not related to the essex patch. In other words, I'm able to trigger the bug in unpatched essex. Sorry for the noise.", 
            "date_created": "2013-05-16 16:29:19.235231+00:00", 
            "author": "https://api.launchpad.net/1.0/~jdstrand"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/29192\nCommitted: http://github.com/openstack/nova/commit/6740c4141ea1152529b82cbf6e5b808eaba912e7\nSubmitter: Jenkins\nBranch:    stable/folsom\n\ncommit 6740c4141ea1152529b82cbf6e5b808eaba912e7\nAuthor: Chet Burgess <email address hidden>\nDate:   Thu May 9 09:57:28 2013 +0000\n\n    Check QCOW2 image size during root disk creation\n    \n    glance can only tell us the size of the file, not the virtual\n    size of the QCOW2. As such we need to check the virtual size of\n    the image once its cached and ensure it's <= to the flavor's\n    root disk size.\n    \n    Change-Id: I833467284126557eb598b8350a84e10c06292fa9\n    Fixes: bug 1177830\n    (cherry picked from commit 44a8aba1d5da87d54db48079103fdef946666d80)\n", 
            "date_created": "2013-05-17 09:55:44.696211+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "In my folsom deployment, commit 6740c4141ea1152529b82cbf6e5b808eaba912e7 prevents new images being downloaded from Glance. Commenting the size check fixes the behaviour. As far as I can tell, this is because it is trying to get the size of an image that doesn't yet exist on disk, so the call to disk.get_disk_size(base) fails.\n\nTracing it through, the calls are:\n\n - image('disk').cache(.....) in nova.virt.libvirt.driver.LibVirtDriver._create_image() is called to start the process\n - this calls nova.virt.libvirt.imagebackend.Image.cache() with filename=<intended filename>\n - this then calls create_image() on Qcow2, with prepare_template=create_if_missing\n - create_image() then tries to check the base disk size *before* calling prepare_template (i.e. fetching the image from Glance)\n\nDo you need any more information to help debug this? I believe the change should simply be to call prepare_template() before the disk size checks.", 
            "date_created": "2013-08-20 11:10:07.417050+00:00", 
            "author": "https://api.launchpad.net/1.0/~dingram"
        }, 
        {
            "content": "David,\n\nYou are correct. We need to call prepare_template() before checking the size. The original fix for havanna and the grizzly backport called prepare_template() first, so I think this might be the case of a bad merge.", 
            "date_created": "2013-08-20 11:52:07.294103+00:00", 
            "author": "https://api.launchpad.net/1.0/~cfb-n"
        }, 
        {
            "content": "@David: could you post a separate bug so that we handle the Folsom regression ? Post the bug number here once you're done.\n\nLooks like this should be tested somewhere, but apparently it's not :/", 
            "date_created": "2013-08-20 13:09:49.385987+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/54765", 
            "date_created": "2013-10-31 16:02:22.940352+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: stable/havana\nReview: https://review.openstack.org/54767", 
            "date_created": "2013-10-31 16:04:03.884674+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: stable/grizzly\nReview: https://review.openstack.org/54768", 
            "date_created": "2013-10-31 16:06:47.129494+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/54765\nCommitted: http://github.com/openstack/nova/commit/f6810be4ae1a6c93e7d8017ee67d5344dfdf4a30\nSubmitter: Jenkins\nBranch:    master\n\ncommit f6810be4ae1a6c93e7d8017ee67d5344dfdf4a30\nAuthor: P\u00e1draig Brady <email address hidden>\nDate:   Fri Sep 27 04:07:14 2013 +0100\n\n    ensure we don't boot oversized images\n    \n    Since we can't generally shrink incoming images, add extra checks\n    to ensure oversized images are not allowed through.\n    All cases when populating the libvirt image cache are now handled,\n    including the initial download from glance, where we avoid\n    converting to raw, as that could generate non sparse images\n    much larger than the downloaded image.\n    \n    * nova/virt/libvirt/utils.py (fetch_image): Allow passing through\n    of the max_size parameter.\n    * nova/virt/images.py (fetch_to_raw): Accept the max_size parameter,\n    and use it to discard images with larger (virtual) sizes.\n    * nova/virt/libvirt/imagebackend.py (verify_base_size): A new\n    refactored function to identify and raise exception to oversized images.\n    (Raw.create_image): Pass the max_size to the fetch function.\n    Also enforce virtual image size checking for already fetched images,\n    as this class (despite the name) can be handling qcow files.\n    (Qcow2.create_image): Pass the max_size to the fetch function,\n    or verify the virtual size for the instance as done previously.\n    (Lvm.create_image): Pass the max_size to the fetch function.\n    Also check the size before transferring to the volume to improve\n    efficiency by not even attempting the transfer of oversized images.\n    (Rbd.create_image): Likewise.\n    * nova/tests/virt/libvirt/fake_libvirt_utils.py: Support max_size arg.\n    * nova/tests/virt/libvirt/test_libvirt.py (test_fetch_raw_image):\n    Add a case to check oversized images are discarded.\n    * nova/tests/virt/libvirt/test_imagebackend.py\n    (test_create_image_too_small): Adjust to avoid the fetch size check.\n    \n    Fixes bug: 1177830\n    Fixes bug: 1206081\n    Change-Id: I3d47adaa2ad07434853f447feb27d7aae0e2e717\n", 
            "date_created": "2013-10-31 18:01:54.508413+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/54767\nCommitted: http://github.com/openstack/nova/commit/3cdfe894ab58f7b91bf7fb690fc5bc724e44066f\nSubmitter: Jenkins\nBranch:    stable/havana\n\ncommit 3cdfe894ab58f7b91bf7fb690fc5bc724e44066f\nAuthor: P\u00e1draig Brady <email address hidden>\nDate:   Fri Sep 27 04:07:14 2013 +0100\n\n    ensure we don't boot oversized images\n    \n    Since we can't generally shrink incoming images, add extra checks\n    to ensure oversized images are not allowed through.\n    All cases when populating the libvirt image cache are now handled,\n    including the initial download from glance, where we avoid\n    converting to raw, as that could generate non sparse images\n    much larger than the downloaded image.\n    \n    * nova/virt/libvirt/utils.py (fetch_image): Allow passing through\n    of the max_size parameter.\n    * nova/virt/images.py (fetch_to_raw): Accept the max_size parameter,\n    and use it to discard images with larger (virtual) sizes.\n    * nova/virt/libvirt/imagebackend.py (verify_base_size): A new\n    refactored function to identify and raise exception to oversized images.\n    (Raw.create_image): Pass the max_size to the fetch function.\n    Also enforce virtual image size checking for already fetched images,\n    as this class (despite the name) can be handling qcow files.\n    (Qcow2.create_image): Pass the max_size to the fetch function,\n    or verify the virtual size for the instance as done previously.\n    (Lvm.create_image): Pass the max_size to the fetch function.\n    Also check the size before transferring to the volume to improve\n    efficiency by not even attempting the transfer of oversized images.\n    (Rbd.create_image): Likewise.\n    * nova/tests/virt/libvirt/fake_libvirt_utils.py: Support max_size arg.\n    * nova/tests/virt/libvirt/test_libvirt.py (test_fetch_raw_image):\n    Add a case to check oversized images are discarded.\n    * nova/tests/virt/libvirt/test_imagebackend.py\n    (test_create_image_too_small): Adjust to avoid the fetch size check.\n    \n    Fixes bug: 1177830\n    Fixes bug: 1206081\n    Change-Id: I3d47adaa2ad07434853f447feb27d7aae0e2e717\n", 
            "date_created": "2013-10-31 18:06:48.378678+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/54768\nCommitted: http://github.com/openstack/nova/commit/135faa7b5d9855312bedc19e5e1ecebae34d3d18\nSubmitter: Jenkins\nBranch:    stable/grizzly\n\ncommit 135faa7b5d9855312bedc19e5e1ecebae34d3d18\nAuthor: P\u00e1draig Brady <email address hidden>\nDate:   Fri Sep 27 04:07:14 2013 +0100\n\n    ensure we don't boot oversized images\n    \n    Since we can't generally shrink incoming images, add extra checks\n    to ensure oversized images are not allowed through.\n    All cases when populating the libvirt image cache are now handled,\n    including the initial download from glance, where we avoid\n    converting to raw, as that could generate non sparse images\n    much larger than the downloaded image.\n    \n    * nova/virt/libvirt/utils.py (fetch_image): Allow passing through\n    of the max_size parameter.\n    * nova/virt/images.py (fetch_to_raw): Accept the max_size parameter,\n    and use it to discard images with larger (virtual) sizes.\n    * nova/virt/libvirt/imagebackend.py (verify_base_size): A new\n    refactored function to identify and raise exception to oversized images.\n    (Raw.create_image): Pass the max_size to the fetch function.\n    Also enforce virtual image size checking for already fetched images,\n    as this class (despite the name) can be handling qcow files.\n    (Qcow2.create_image): Pass the max_size to the fetch function,\n    or verify the virtual size for the instance as done previously.\n    (Lvm.create_image): Pass the max_size to the fetch function.\n    Also check the size before transferring to the volume to improve\n    efficiency by not even attempting the transfer of oversized images.\n    (Rbd.create_image): Likewise.\n    * nova/tests/fake_libvirt_utils.py: Support max_size arg.\n    * nova/tests/test_libvirt.py (test_fetch_raw_image):\n    Add a case to check oversized images are discarded.\n    * nova/tests/test_imagebackend.py (test_create_image_too_small):\n    Adjust to avoid the fetch size check.\n    \n    Fixes bug: 1177830\n    Fixes bug: 1206081\n    \n    Conflicts:\n    \n    \tnova/tests/test_imagebackend.py\n    \tnova/virt/libvirt/imagebackend.py\n    \n    Change-Id: Idc35fce580be4f74e23883d1b4bea6475c3f6e30\n", 
            "date_created": "2013-10-31 18:08:06.173187+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2013-05-29 10:15:59.043789+00:00"
}