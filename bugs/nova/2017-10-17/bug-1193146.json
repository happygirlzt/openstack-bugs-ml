{
    "status": "Fix Released", 
    "last_updated": "2013-10-17 11:50:05.479310+00:00", 
    "description": "This impacts master and Grizzly.\n\nWith Grizzly, we implemented functionality (\"live snapshots\") in the libvirt driver to make use of new blockcopy/blockpull operations which became available in Qemu 1.0.3.  The determination as to whether to attempt a live or cold (legacy) snapshot is based on libvirt's response to the getVersion() API call.  The fundamental flaw in our approach is that libvirt will return the *current* version of Qemu, despite the fact that instances which were already running prior to upgrading Qemu are still running the older version.  As such, we end up satisfying version requirements to utilize new functionality, when it isn't actually available until a given instance is restarted on the new version of Qemu.\n\nTo reproduce the problem:\n\n    1. Install QEMU < before 1.0.3.\n\n    2. Launch an instance (\"instanceA\"), and leave this instance running.\n\n    3. Upgrade Qemu to 1.0.3 (available via UCA) and restart libvirt.\n\n    4. Launch another instance (\"InstanceB\").\n\n    5. Attempt a snapshot of InstanceA.  This will fail with an exception.\n\n    6. Attempt a snapshot of InstanceB.  It will succeed.\n\n#5 fails because the instance is actually running the version of Qemu which was installed in with step #1.  Checking getVersion() via libvirt is not sufficient in this case, we need to know what version any given instance is running before attempting to use newer functionality.", 
    "tags": [], 
    "importance": "Undecided", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1193146", 
    "owner": "https://api.launchpad.net/1.0/~rkhardalian", 
    "id": 1193146, 
    "index": 5044, 
    "openned": "2013-06-20 22:32:26.387138+00:00", 
    "created": "2013-06-20 22:32:26.387138+00:00", 
    "title": "libvirt hypervisor version checks are insufficient", 
    "comments": [
        {
            "content": "This impacts master and Grizzly.\n\nWith Grizzly, we implemented functionality (\"live snapshots\") in the libvirt driver to make use of new blockcopy/blockpull operations which became available in Qemu 1.0.3.  The determination as to whether to attempt a live or cold (legacy) snapshot is based on libvirt's response to the getVersion() API call.  The fundamental flaw in our approach is that libvirt will return the *current* version of Qemu, despite the fact that instances which were already running prior to upgrading Qemu are still running the older version.  As such, we end up satisfying version requirements to utilize new functionality, when it isn't actually available until a given instance is restarted on the new version of Qemu.\n\nTo reproduce the problem:\n\n    1. Install QEMU < before 1.0.3.\n\n    2. Launch an instance (\"instanceA\"), and leave this instance running.\n\n    3. Upgrade Qemu to 1.0.3 (available via UCA) and restart libvirt.\n\n    4. Launch another instance (\"InstanceB\").\n\n    5. Attempt a snapshot of InstanceA.  This will fail with an exception.\n\n    6. Attempt a snapshot of InstanceB.  It will succeed.\n\n#5 fails because the instance is actually running the version of Qemu which was installed in with step #1.  Checking getVersion() via libvirt is not sufficient in this case, we need to know what version any given instance is running before attempting to use newer functionality.", 
            "date_created": "2013-06-20 22:32:26.387138+00:00", 
            "author": "https://api.launchpad.net/1.0/~rkhardalian"
        }, 
        {
            "content": "2013-06-21 18:28:39.998 TRACE nova.openstack.common.rpc.amqp Traceback (most recent call last):\n2013-06-21 18:28:39.998 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/nova/nova/openstack/common/rpc/amqp.py\", line 433, in _process_data\n2013-06-21 18:28:39.998 TRACE nova.openstack.common.rpc.amqp     **args)\n2013-06-21 18:28:39.998 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/nova/nova/openstack/common/rpc/dispatcher.py\", line 172, in dispatch\n2013-06-21 18:28:39.998 TRACE nova.openstack.common.rpc.amqp     result = getattr(proxyobj, method)(ctxt, **kwargs)\n2013-06-21 18:28:39.998 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/nova/nova/exception.py\", line 98, in wrapped\n2013-06-21 18:28:39.998 TRACE nova.openstack.common.rpc.amqp     temp_level, payload)\n2013-06-21 18:28:39.998 TRACE nova.openstack.common.rpc.amqp   File \"/usr/lib/python2.7/contextlib.py\", line 24, in __exit__\n2013-06-21 18:28:39.998 TRACE nova.openstack.common.rpc.amqp     self.gen.next()\n2013-06-21 18:28:39.998 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/nova/nova/exception.py\", line 75, in wrapped\n2013-06-21 18:28:39.998 TRACE nova.openstack.common.rpc.amqp     return f(self, context, *args, **kw)\n2013-06-21 18:28:39.998 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/nova/nova/compute/manager.py\", line 215, in decorated_function\n2013-06-21 18:28:39.998 TRACE nova.openstack.common.rpc.amqp     pass\n2013-06-21 18:28:39.998 TRACE nova.openstack.common.rpc.amqp   File \"/usr/lib/python2.7/contextlib.py\", line 24, in __exit__\n2013-06-21 18:28:39.998 TRACE nova.openstack.common.rpc.amqp     self.gen.next()\n2013-06-21 18:28:39.998 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/nova/nova/compute/manager.py\", line 201, in decorated_function\n2013-06-21 18:28:39.998 TRACE nova.openstack.common.rpc.amqp     return function(self, context, *args, **kwargs)\n2013-06-21 18:28:39.998 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/nova/nova/compute/manager.py\", line 243, in decorated_function\n2013-06-21 18:28:39.998 TRACE nova.openstack.common.rpc.amqp     e, sys.exc_info())\n2013-06-21 18:28:39.998 TRACE nova.openstack.common.rpc.amqp   File \"/usr/lib/python2.7/contextlib.py\", line 24, in __exit__\n2013-06-21 18:28:39.998 TRACE nova.openstack.common.rpc.amqp     self.gen.next()\n2013-06-21 18:28:39.998 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/nova/nova/compute/manager.py\", line 230, in decorated_function\n2013-06-21 18:28:39.998 TRACE nova.openstack.common.rpc.amqp     return function(self, context, *args, **kwargs)\n2013-06-21 18:28:39.998 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/nova/nova/compute/manager.py\", line 1932, in snapshot_instance\n2013-06-21 18:28:39.998 TRACE nova.openstack.common.rpc.amqp     self.driver.snapshot(context, instance, image_id, update_task_state)\n2013-06-21 18:28:39.998 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 1248, in snapshot\n2013-06-21 18:28:39.998 TRACE nova.openstack.common.rpc.amqp     image_format)\n2013-06-21 18:28:39.998 TRACE nova.openstack.common.rpc.amqp   File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 1326, in _live_snapshot\n2013-06-21 18:28:39.998 TRACE nova.openstack.common.rpc.amqp     libvirt.VIR_DOMAIN_BLOCK_REBASE_SHALLOW)\n2013-06-21 18:28:39.998 TRACE nova.openstack.common.rpc.amqp   File \"/usr/local/lib/python2.7/dist-packages/eventlet/tpool.py\", line 187, in doit\n2013-06-21 18:28:39.998 TRACE nova.openstack.common.rpc.amqp     result = proxy_call(self._autowrap, f, *args, **kwargs)\n2013-06-21 18:28:39.998 TRACE nova.openstack.common.rpc.amqp   File \"/usr/local/lib/python2.7/dist-packages/eventlet/tpool.py\", line 147, in proxy_call\n2013-06-21 18:28:39.998 TRACE nova.openstack.common.rpc.amqp     rv = execute(f,*args,**kwargs)\n2013-06-21 18:28:39.998 TRACE nova.openstack.common.rpc.amqp   File \"/usr/local/lib/python2.7/dist-packages/eventlet/tpool.py\", line 76, in tworker\n2013-06-21 18:28:39.998 TRACE nova.openstack.common.rpc.amqp     rv = meth(*args,**kwargs)\n2013-06-21 18:28:39.998 TRACE nova.openstack.common.rpc.amqp   File \"/usr/lib/python2.7/dist-packages/libvirt.py\", line 629, in blockRebase\n2013-06-21 18:28:39.998 TRACE nova.openstack.common.rpc.amqp     if ret == -1: raise libvirtError ('virDomainBlockRebase() failed', dom=self)\n2013-06-21 18:28:39.998 TRACE nova.openstack.common.rpc.amqp libvirtError: unsupported configuration: block copy is not supported with this QEMU binary\n", 
            "date_created": "2013-06-21 19:02:07.498951+00:00", 
            "author": "https://api.launchpad.net/1.0/~rkhardalian"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/33758\nCommitted: http://github.com/openstack/nova/commit/c6a120417e68c7423ad4898eb5e0567e0f22e0f3\nSubmitter: Jenkins\nBranch:    master\n\ncommit c6a120417e68c7423ad4898eb5e0567e0f22e0f3\nAuthor: Rafi Khardalian <email address hidden>\nDate:   Fri Jun 21 23:02:03 2013 +0000\n\n    Perform additional check before live snapshotting\n    \n    Bug 1193146\n    \n    Move blockJobAbort() out of the _live_snapshot function, such that\n    it continues to terminate existing jobs, while also doubling as a\n    method for confirming that our version of Qemu/KVM is new enough to\n    execute a _live_snapshot.\n    \n    Change-Id: Ife5d2fd768a34dabf25a1bfc24e54bd6db762c89\n", 
            "date_created": "2013-06-24 18:10:35.870945+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2013-07-17 12:24:44.829490+00:00"
}