{
    "status": "Fix Released", 
    "last_updated": "2011-04-15 08:39:57.228893+00:00", 
    "description": "If I have just a few clients connecting at the same time, I get this sort of stuff in nova-api.log:\n\n2011-02-10 13:34:51,570 DEBUG nova.compute.api [-] Casting to scheduler for soren/soren's instance 7 from MainProcess (pid=14464) create /usr/lib/pymodules/python2.7/nova/compute/api.py:190\n2011-02-10 13:34:51,571 DEBUG nova.rpc [-] Making asynchronous cast... from MainProcess (pid=14464) cast /usr/lib/pymodules/python2.7/nova/rpc.py:347\n2011-02-10 13:34:51,574 ERROR nova.api [4QU6596JK6SLEQRAFSG8 soren soren] Unexpected error raised: Second simultaneous read on fileno 7 detected.  Unless you really know what you're doing, make sure that only one greenthread can read any particular socket.  Consider using a pools.Pool. If you do know what you're doing and want to disable this error, call eventlet.debug.hub_multiple_reader_prevention(False)\n\nrpc.cast does not pass new=True to Connection.instance, so this is not surprising. I could just change the instance() call to instance(True), but I wonder if there really are situations where it's safe to use a shared connection when we have these eventlet thread things going on?", 
    "tags": [], 
    "importance": "Undecided", 
    "heat": 10, 
    "link": "https://bugs.launchpad.net/nova/+bug/716427", 
    "owner": "None", 
    "id": 716427, 
    "index": 3299, 
    "openned": "2011-02-10 13:48:53.218896+00:00", 
    "created": "2011-02-10 13:48:53.218896+00:00", 
    "title": "RPC concurrency problem", 
    "comments": [
        {
            "content": "If I have just a few clients connecting at the same time, I get this sort of stuff in nova-api.log:\n\n2011-02-10 13:34:51,570 DEBUG nova.compute.api [-] Casting to scheduler for soren/soren's instance 7 from MainProcess (pid=14464) create /usr/lib/pymodules/python2.7/nova/compute/api.py:190\n2011-02-10 13:34:51,571 DEBUG nova.rpc [-] Making asynchronous cast... from MainProcess (pid=14464) cast /usr/lib/pymodules/python2.7/nova/rpc.py:347\n2011-02-10 13:34:51,574 ERROR nova.api [4QU6596JK6SLEQRAFSG8 soren soren] Unexpected error raised: Second simultaneous read on fileno 7 detected.  Unless you really know what you're doing, make sure that only one greenthread can read any particular socket.  Consider using a pools.Pool. If you do know what you're doing and want to disable this error, call eventlet.debug.hub_multiple_reader_prevention(False)\n\nrpc.cast does not pass new=True to Connection.instance, so this is not surprising. I could just change the instance() call to instance(True), but I wonder if there really are situations where it's safe to use a shared connection when we have these eventlet thread things going on?", 
            "date_created": "2011-02-10 13:48:53.218896+00:00", 
            "author": "https://api.launchpad.net/1.0/~soren"
        }, 
        {
            "content": "We're seeing this in our stress tests.  This is clearly a very high priority issue.  Thanks for the fix, Soren!\r\n", 
            "date_created": "2011-02-10 15:51:21.121519+00:00", 
            "author": "https://api.launchpad.net/1.0/~ewanmellor"
        }, 
        {
            "content": "Verified the fix patched over lp:nova/bexar burwell in nova-compute nodes running on top of XenServer and ESXi server. Not seeing the reported errors in nova-api.log files. Thanks Soren!", 
            "date_created": "2011-02-18 15:50:49.399538+00:00", 
            "author": "https://api.launchpad.net/1.0/~sateesh-chodapuneedi"
        }, 
        {
            "content": "I've also verified it in a 2011.1 vs 2011.1.1. This problem is gone in 2011.1.1. I simple ran euca-run-instances multiple times from a command line (e.g. \"euca-run-instances blah & euca-run-instances blah & euca-run-instances &\").", 
            "date_created": "2011-03-02 14:05:36.587050+00:00", 
            "author": "https://api.launchpad.net/1.0/~soren"
        }
    ], 
    "closed": "2011-04-15 08:39:55.748295+00:00"
}