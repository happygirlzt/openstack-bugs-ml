{
    "status": "Won't Fix", 
    "last_updated": "2014-11-19 19:13:25.850112+00:00", 
    "description": "So I'm runing into a problem when I restart nova-network on a compute node in a multi_host setup.  Each time I \nrestart nova-network on one of the compute hosts, multiple guests on the other host are allocated additional \nfixed ip addresses in addition to the one they already have and a stack trace is thrown in network.log. The \nnova-br100.conf is updated to include both addresses on the same mac/hostname.  I'm still able to access the \nvm just fine on thier original ip address.\n \nRecreating the problem is very consistent:\n1) From a fresh install, bring up 3 virtual machines and take down the first one that came up (typically \n   instance_id 1 in the networks table).\n \n2) Stop nova-network on either of the compute hosts.  This will produce a stack trace in the network.log on \n   the other compute node complaining about 'InstanceNotFound: Instance 1 could not be found'\n\n3) Look at horizon, dnsmasq's config (nova-br100.conf) or the networks table in the database and you will \n   see an additional ip address allocated to the vm that was running on the host that did not have nova-network \n   taken down.  The ec2 compatibility api only reports the new ip address for the instance.\n\n\n\nMy setup:\nI'm running 2 hosts for testing, one is the compute host running nova-api, nova-compute and nova-network.  The \nother is the controller running nova-api, nova-compute, nova-network as well as the other needed services \n(keystone, glance, scheduler).  I'm running a fixed network only (192.168.97.0/24), no floating, in a multi_host \nsetup with the routing handled by an external router (setup with dhcp flags for dnsmasq) with eth1 being the vm \nnetwork.  Basically nova-network and nova-api are there only for dhcp and meta-data.\n\nI'm using essex packages from EPEL on Centos 6.2.  On the compute nodes:\npython-novaclient-2012.1-1.el6.noarch\npython-nova-2012.1-4.el6.noarch\nopenstack-nova-2012.1-4.el6.noarch\n\ndhcp-options.conf (flags for dnsmasq):\ndhcp-option-force=3,192.168.97.254\n#dhcp-option-force=6,192.168.95.10,192.168.95.11\ndhcp-option-force=15,openstack.internal\n\nnova-br100.conf after the problem:\nfa:16:3e:32:80:69,server-2.openstack.internal,192.168.97.4\nfa:16:3e:32:80:69,server-2.openstack.internal,192.168.97.6\n\nView of the networks table before the problem:\nhttp://pastebin.com/KSDgxAkk\n\nView of the networks table after the problem:\nhttp://pastebin.com/mxQWLb7q\n\nMy nova.conf (it's the same on both hosts except for my_ip and the console addresses):\nhttp://pastebin.com/Xt7fyim9", 
    "tags": [], 
    "importance": "Low", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1003934", 
    "owner": "None", 
    "id": 1003934, 
    "index": 572, 
    "openned": "2012-05-24 13:07:36.898986+00:00", 
    "created": "2012-05-24 13:07:36.898986+00:00", 
    "title": "Additional fixed ip address assigned to vm after nova-network restart", 
    "comments": [
        {
            "content": "So I'm runing into a problem when I restart nova-network on a compute node in a multi_host setup.  Each time I \nrestart nova-network on one of the compute hosts, multiple guests on the other host are allocated additional \nfixed ip addresses in addition to the one they already have and a stack trace is thrown in network.log. The \nnova-br100.conf is updated to include both addresses on the same mac/hostname.  I'm still able to access the \nvm just fine on thier original ip address.\n \nRecreating the problem is very consistent:\n1) From a fresh install, bring up 3 virtual machines and take down the first one that came up (typically \n   instance_id 1 in the networks table).\n \n2) Stop nova-network on either of the compute hosts.  This will produce a stack trace in the network.log on \n   the other compute node complaining about 'InstanceNotFound: Instance 1 could not be found'\n\n3) Look at horizon, dnsmasq's config (nova-br100.conf) or the networks table in the database and you will \n   see an additional ip address allocated to the vm that was running on the host that did not have nova-network \n   taken down.  The ec2 compatibility api only reports the new ip address for the instance.\n\n\n\nMy setup:\nI'm running 2 hosts for testing, one is the compute host running nova-api, nova-compute and nova-network.  The \nother is the controller running nova-api, nova-compute, nova-network as well as the other needed services \n(keystone, glance, scheduler).  I'm running a fixed network only (192.168.97.0/24), no floating, in a multi_host \nsetup with the routing handled by an external router (setup with dhcp flags for dnsmasq) with eth1 being the vm \nnetwork.  Basically nova-network and nova-api are there only for dhcp and meta-data.\n\nI'm using essex packages from EPEL on Centos 6.2.  On the compute nodes:\npython-novaclient-2012.1-1.el6.noarch\npython-nova-2012.1-4.el6.noarch\nopenstack-nova-2012.1-4.el6.noarch\n\ndhcp-options.conf (flags for dnsmasq):\ndhcp-option-force=3,192.168.97.254\n#dhcp-option-force=6,192.168.95.10,192.168.95.11\ndhcp-option-force=15,openstack.internal\n\nnova-br100.conf after the problem:\nfa:16:3e:32:80:69,server-2.openstack.internal,192.168.97.4\nfa:16:3e:32:80:69,server-2.openstack.internal,192.168.97.6\n\nView of the networks table before the problem:\nhttp://pastebin.com/KSDgxAkk\n\nView of the networks table after the problem:\nhttp://pastebin.com/mxQWLb7q\n\nMy nova.conf (it's the same on both hosts except for my_ip and the console addresses):\nhttp://pastebin.com/Xt7fyim9", 
            "date_created": "2012-05-24 13:07:36.898986+00:00", 
            "author": "https://api.launchpad.net/1.0/~mitchell-broome"
        }, 
        {
            "content": "", 
            "date_created": "2012-05-24 13:07:36.898986+00:00", 
            "author": "https://api.launchpad.net/1.0/~mitchell-broome"
        }, 
        {
            "content": "I'm wondering if this happens because you set force_dhcp_release=False.\n\nI think setting it to True will make what you describe here go away.", 
            "date_created": "2012-08-24 15:25:55.033193+00:00", 
            "author": "https://api.launchpad.net/1.0/~dan-prince"
        }, 
        {
            "content": "I'm checking upstream to see if we might possibly change the default value for the force_dhcp_release flag to True if you are using a DHCP capable network manager.", 
            "date_created": "2012-08-24 15:32:24.068869+00:00", 
            "author": "https://api.launchpad.net/1.0/~dan-prince"
        }, 
        {
            "content": "essex has been end of lifed a while ago, is this still valid?", 
            "date_created": "2014-11-19 19:13:15.892943+00:00", 
            "author": "https://api.launchpad.net/1.0/~jogo"
        }
    ], 
    "closed": "2014-11-19 19:13:23.703912+00:00"
}