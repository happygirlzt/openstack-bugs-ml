{
    "status": "Fix Released", 
    "last_updated": "2015-10-15 09:04:49.518166+00:00", 
    "description": "Affected version: stable/juno\n\nDescription:\nOn a single-node deployment of OpenStack (using DevStack), if the default availability zone of Nova is replaced by another one, then  the API api.nova.server_list returns the list of VMs in which the info of availability zone is inconsistent. This results in the toggling effect of Horizon dashboard when displaying the list of instances (under tab \"Project/Instances\"). The toggling effect is caused by inconsistent info of availability zone whose values either the default one or the newly-created one.\n\nThis bug can easily be reproduced using Horizon dashboard as follows:\n - Go to tab \"Admin/Host Aggregates\" to create a new host aggregate which is assigned with the current host. Pls note that if this newly-created host aggregate is not assigned with any host, then the availability zone won't be defined.\n - After that, also under this view, we find (in the Availability zones) that the newly-created availability zone hides away the default one.\n - Go to tab \"System information\", we find that nova-compute service is running in the newly-created availability zone while all the cinder services are running in the default availability zone.\n - Go to tab \"Project/Image\" to select some image for creating a new bootable volume.\n - This newly-created volume is then used to launch a new VM\n - After launching a new VM, it's auto re-directed to the view of \"Instances\". At here, we can observe the toggling effect on the availability zone info.\n\nAnalysis:\nRoot cause is due to the  API api.nova.server_list as described above. \nThis can be seen by adding some more debug info as follows:\n\n2014-11-06 10:30:05,103 - my_logger - DEBUG - openstack_dashboard.dashboards.project.instances.views - Instance amount: 1, Instances: \"[<Server: {'status': u'BUILD', 'OS-EXT-STS:task_state': u'scheduling', 'addresses': {}, 'name': u'from_vol_cirr_nova', 'links': [{u'href': u'http://192.168.56.103:8774/v2/a0c581f7a88441ed84e9878fa9fc8e50/servers/d5c1575d-8ac8-4921-802c-e9b121acd82e', u'rel': u'self'}, {u'href': u'http://192.168.56.103:8774/a0c581f7a88441ed84e9878fa9fc8e50/servers/d5c1575d-8ac8-4921-802c-e9b121acd82e', u'rel': u'bookmark'}], 'created': u'2014-11-06T10:30:03Z', 'key_name': None, 'image': u'', 'OS-DCF:diskConfig': u'AUTO', 'image_name': '-', 'OS-EXT-STS:power_state': 0, 'OS-EXT-SRV-ATTR:host': None, 'OS-EXT-SRV-ATTR:instance_name': u'instance-00000004', 'tenant_id': u'a0c581f7a88441ed84e9878fa9fc8e50', 'user_id': u'2f8c907029eb43e5ab98a55ac28c885e', 'flavor': {u'id': u'1', u'links': [{u'href': u'http://192.168.56.103:8774/a0c581f7a88441ed84e9878fa9fc8e50/flavors/1', u'rel': u'bookmark'}]}, 'OS-EXT-AZ:availability_zone': u'nova', 'id': u'd5c1575d-8ac8-4921-802c-e9b121acd82e', 'metadata': {}}>]\"\n\n\n2014-11-06 10:31:02,037 - my_logger - DEBUG - openstack_dashboard.dashboards.project.instances.views - Instance amount: 1, Instances: \"[<Server: {'status': u'ACTIVE', 'OS-EXT-STS:task_state': None, 'addresses': {u'public': [{u'OS-EXT-IPS-MAC:mac_addr': u'fa:16:3e:13:01:55', u'version': 4, u'addr': u'172.24.4.6', u'OS-EXT-IPS:type': u'fixed'}]}, 'name': u'from_vol_cirr_nova', 'links': [{u'href': u'http://192.168.56.103:8774/v2/a0c581f7a88441ed84e9878fa9fc8e50/servers/d5c1575d-8ac8-4921-802c-e9b121acd82e', u'rel': u'self'}, {u'href': u'http://192.168.56.103:8774/a0c581f7a88441ed84e9878fa9fc8e50/servers/d5c1575d-8ac8-4921-802c-e9b121acd82e', u'rel': u'bookmark'}], 'created': u'2014-11-06T10:30:03Z', 'key_name': None, 'image': u'', 'OS-DCF:diskConfig': u'AUTO', 'image_name': '-', 'OS-EXT-STS:power_state': 1, 'OS-EXT-SRV-ATTR:host': u'ubuntu', 'OS-EXT-SRV-ATTR:instance_name': u'instance-00000004', 'tenant_id': u'a0c581f7a88441ed84e9878fa9fc8e50', 'user_id': u'2f8c907029eb43e5ab98a55ac28c885e', 'flavor': {u'id': u'1', u'links': [{u'href': u'http://192.168.56.103:8774/a0c581f7a88441ed84e9878fa9fc8e50/flavors/1', u'rel': u'bookmark'}]}, 'OS-EXT-AZ:availability_zone': u'test_az', 'id': u'd5c1575d-8ac8-4921-802c-e9b121acd82e', 'metadata': {}}>]\"\n\n\n2014-11-06 10:31:32,437 - my_logger - DEBUG - openstack_dashboard.dashboards.project.instances.views - Instance amount: 1, Instances: \"[<Server: {'status': u'ACTIVE', 'OS-EXT-STS:task_state': None, 'addresses': {u'public': [{u'OS-EXT-IPS-MAC:mac_addr': u'fa:16:3e:13:01:55', u'version': 4, u'addr': u'172.24.4.6', u'OS-EXT-IPS:type': u'fixed'}]}, 'name': u'from_vol_cirr_nova', 'links': [{u'href': u'http://192.168.56.103:8774/v2/a0c581f7a88441ed84e9878fa9fc8e50/servers/d5c1575d-8ac8-4921-802c-e9b121acd82e', u'rel': u'self'}, {u'href': u'http://192.168.56.103:8774/a0c581f7a88441ed84e9878fa9fc8e50/servers/d5c1575d-8ac8-4921-802c-e9b121acd82e', u'rel': u'bookmark'}], 'created': u'2014-11-06T10:30:03Z', 'key_name': None, 'image': u'', 'OS-DCF:diskConfig': u'AUTO', 'image_name': '-', 'OS-EXT-STS:power_state': 1, 'OS-EXT-SRV-ATTR:host': u'ubuntu', 'OS-EXT-SRV-ATTR:instance_name': u'instance-00000004', 'tenant_id': u'a0c581f7a88441ed84e9878fa9fc8e50', 'user_id': u'2f8c907029eb43e5ab98a55ac28c885e', 'flavor': {u'id': u'1', u'links': [{u'href': u'http://192.168.56.103:8774/a0c581f7a88441ed84e9878fa9fc8e50/flavors/1', u'rel': u'bookmark'}]}, 'OS-EXT-AZ:availability_zone': u'test_az', 'id': u'd5c1575d-8ac8-4921-802c-e9b121acd82e', 'metadata': {}}>]\"\n\n\nWhen searching for the 'availability_zone' in the log above, it can be seen that its value is really inconsistent. In fact, at the beginning when the 'task_state' is 'scheduling' then the availability zone is 'nova' (the default one). However, later the availability zone changes to 'test_az' (the newly-created one)", 
    "tags": [
        "horizon", 
        "nova"
    ], 
    "importance": "Low", 
    "heat": 18, 
    "link": "https://bugs.launchpad.net/nova/+bug/1390033", 
    "owner": "https://api.launchpad.net/1.0/~sylvain-bauza", 
    "id": 1390033, 
    "index": 1437, 
    "openned": "2014-11-06 11:00:06.640158+00:00", 
    "created": "2014-11-06 11:00:06.640158+00:00", 
    "title": "Inconsistent info of availability zone (az) if the default az is replaced", 
    "comments": [
        {
            "content": "Affected version: stable/juno\n\nDescription:\nOn a single-node deployment of OpenStack (using DevStack), if the default availability zone of Nova is replaced by another one, then  the API api.nova.server_list returns the list of VMs in which the info of availability zone is inconsistent. This results in the toggling effect of Horizon dashboard when displaying the list of instances (under tab \"Project/Instances\"). The toggling effect is caused by inconsistent info of availability zone whose values either the default one or the newly-created one.\n\nThis bug can easily be reproduced using Horizon dashboard as follows:\n - Go to tab \"Admin/Host Aggregates\" to create a new host aggregate which is assigned with the current host. Pls note that if this newly-created host aggregate is not assigned with any host, then the availability zone won't be defined.\n - After that, also under this view, we find (in the Availability zones) that the newly-created availability zone hides away the default one.\n - Go to tab \"System information\", we find that nova-compute service is running in the newly-created availability zone while all the cinder services are running in the default availability zone.\n - Go to tab \"Project/Image\" to select some image for creating a new bootable volume.\n - This newly-created volume is then used to launch a new VM\n - After launching a new VM, it's auto re-directed to the view of \"Instances\". At here, we can observe the toggling effect on the availability zone info.\n\nAnalysis:\nRoot cause is due to the  API api.nova.server_list as described above. \nThis can be seen by adding some more debug info as follows:\n\n2014-11-06 10:30:05,103 - my_logger - DEBUG - openstack_dashboard.dashboards.project.instances.views - Instance amount: 1, Instances: \"[<Server: {'status': u'BUILD', 'OS-EXT-STS:task_state': u'scheduling', 'addresses': {}, 'name': u'from_vol_cirr_nova', 'links': [{u'href': u'http://192.168.56.103:8774/v2/a0c581f7a88441ed84e9878fa9fc8e50/servers/d5c1575d-8ac8-4921-802c-e9b121acd82e', u'rel': u'self'}, {u'href': u'http://192.168.56.103:8774/a0c581f7a88441ed84e9878fa9fc8e50/servers/d5c1575d-8ac8-4921-802c-e9b121acd82e', u'rel': u'bookmark'}], 'created': u'2014-11-06T10:30:03Z', 'key_name': None, 'image': u'', 'OS-DCF:diskConfig': u'AUTO', 'image_name': '-', 'OS-EXT-STS:power_state': 0, 'OS-EXT-SRV-ATTR:host': None, 'OS-EXT-SRV-ATTR:instance_name': u'instance-00000004', 'tenant_id': u'a0c581f7a88441ed84e9878fa9fc8e50', 'user_id': u'2f8c907029eb43e5ab98a55ac28c885e', 'flavor': {u'id': u'1', u'links': [{u'href': u'http://192.168.56.103:8774/a0c581f7a88441ed84e9878fa9fc8e50/flavors/1', u'rel': u'bookmark'}]}, 'OS-EXT-AZ:availability_zone': u'nova', 'id': u'd5c1575d-8ac8-4921-802c-e9b121acd82e', 'metadata': {}}>]\"\n\n\n2014-11-06 10:31:02,037 - my_logger - DEBUG - openstack_dashboard.dashboards.project.instances.views - Instance amount: 1, Instances: \"[<Server: {'status': u'ACTIVE', 'OS-EXT-STS:task_state': None, 'addresses': {u'public': [{u'OS-EXT-IPS-MAC:mac_addr': u'fa:16:3e:13:01:55', u'version': 4, u'addr': u'172.24.4.6', u'OS-EXT-IPS:type': u'fixed'}]}, 'name': u'from_vol_cirr_nova', 'links': [{u'href': u'http://192.168.56.103:8774/v2/a0c581f7a88441ed84e9878fa9fc8e50/servers/d5c1575d-8ac8-4921-802c-e9b121acd82e', u'rel': u'self'}, {u'href': u'http://192.168.56.103:8774/a0c581f7a88441ed84e9878fa9fc8e50/servers/d5c1575d-8ac8-4921-802c-e9b121acd82e', u'rel': u'bookmark'}], 'created': u'2014-11-06T10:30:03Z', 'key_name': None, 'image': u'', 'OS-DCF:diskConfig': u'AUTO', 'image_name': '-', 'OS-EXT-STS:power_state': 1, 'OS-EXT-SRV-ATTR:host': u'ubuntu', 'OS-EXT-SRV-ATTR:instance_name': u'instance-00000004', 'tenant_id': u'a0c581f7a88441ed84e9878fa9fc8e50', 'user_id': u'2f8c907029eb43e5ab98a55ac28c885e', 'flavor': {u'id': u'1', u'links': [{u'href': u'http://192.168.56.103:8774/a0c581f7a88441ed84e9878fa9fc8e50/flavors/1', u'rel': u'bookmark'}]}, 'OS-EXT-AZ:availability_zone': u'test_az', 'id': u'd5c1575d-8ac8-4921-802c-e9b121acd82e', 'metadata': {}}>]\"\n\n\n2014-11-06 10:31:32,437 - my_logger - DEBUG - openstack_dashboard.dashboards.project.instances.views - Instance amount: 1, Instances: \"[<Server: {'status': u'ACTIVE', 'OS-EXT-STS:task_state': None, 'addresses': {u'public': [{u'OS-EXT-IPS-MAC:mac_addr': u'fa:16:3e:13:01:55', u'version': 4, u'addr': u'172.24.4.6', u'OS-EXT-IPS:type': u'fixed'}]}, 'name': u'from_vol_cirr_nova', 'links': [{u'href': u'http://192.168.56.103:8774/v2/a0c581f7a88441ed84e9878fa9fc8e50/servers/d5c1575d-8ac8-4921-802c-e9b121acd82e', u'rel': u'self'}, {u'href': u'http://192.168.56.103:8774/a0c581f7a88441ed84e9878fa9fc8e50/servers/d5c1575d-8ac8-4921-802c-e9b121acd82e', u'rel': u'bookmark'}], 'created': u'2014-11-06T10:30:03Z', 'key_name': None, 'image': u'', 'OS-DCF:diskConfig': u'AUTO', 'image_name': '-', 'OS-EXT-STS:power_state': 1, 'OS-EXT-SRV-ATTR:host': u'ubuntu', 'OS-EXT-SRV-ATTR:instance_name': u'instance-00000004', 'tenant_id': u'a0c581f7a88441ed84e9878fa9fc8e50', 'user_id': u'2f8c907029eb43e5ab98a55ac28c885e', 'flavor': {u'id': u'1', u'links': [{u'href': u'http://192.168.56.103:8774/a0c581f7a88441ed84e9878fa9fc8e50/flavors/1', u'rel': u'bookmark'}]}, 'OS-EXT-AZ:availability_zone': u'test_az', 'id': u'd5c1575d-8ac8-4921-802c-e9b121acd82e', 'metadata': {}}>]\"\n\n\nWhen searching for the 'availability_zone' in the log above, it can be seen that its value is really inconsistent. In fact, at the beginning when the 'task_state' is 'scheduling' then the availability zone is 'nova' (the default one). However, later the availability zone changes to 'test_az' (the newly-created one)", 
            "date_created": "2014-11-06 11:00:06.640158+00:00", 
            "author": "https://api.launchpad.net/1.0/~trung-t-trinh"
        }, 
        {
            "content": "With some added debug logs, the most possible root cause is around the function \"get_host_availability_zone()\" in the module \"nova.availability_zones\".\nIn particular, in this function, if the variable \"host\" is None, then the returned \"aggregates\" and \"metadata\" will also be None. Consequently, the final retrieved value of \"az\" will be the default one of \"nova\" that is hard-coded in the module.\n\nDuring the process of launching new VM instance, this function is called multiple times. At the first time of being called, the passed value of \"host\" is always None (and the task_state is SCHEDULING). However, for subsequent calls, the \"host\" is returned correctly (no longer None) and everything becomes correct again.\n\nSo, the question is why the \"host\" value passed is None when the task_state is SCHEDULING??\n\nFurther investigation is being carried out.\n\nHorizon is not guilty in this story but it is affected.\nNova is the guilty one.", 
            "date_created": "2014-11-12 06:41:11.893450+00:00", 
            "author": "https://api.launchpad.net/1.0/~trung-t-trinh"
        }, 
        {
            "content": "Even if the default availability zone of Nova is not changed, the problem that the \"host\" value passed is None when the task_state is SCHEDULING still occurs. \n\nSo, this is really a general issue of Nova!", 
            "date_created": "2014-11-12 07:06:05.423424+00:00", 
            "author": "https://api.launchpad.net/1.0/~trung-t-trinh"
        }, 
        {
            "content": "One of the buggy locations was found out.\nIt is inside the function \"get_instance_availability_zone()\" of the module \"nova.availability_zones\".\n\nLet's look at the its code snippet:\n\ndef get_instance_availability_zone(context, instance):\n    \"\"\"Return availability zone of specified instance.\"\"\"\n    host = str(instance.get('host'))\n\n    if not host:\n        return None\n        \n\nIt's quite easy to understand this code snippet that it tries to read value of the host from the \"instance\". If the \"host\" is empty or None, then the function will be returned and nothing will happen.\nHowever, Python interpreter makes all surprised that even though the \"host\" value is None, but the if-clause does not hold and consequently the execution is continued with the \"host\" whose value is None. Finally, it leads to the fact that the \"az\" returned is the default one (as mentioned above).\n\nFor proof, please look at the output of the Python interactive session:\n\nPython 2.7.6 (default, Mar 22 2014, 22:59:56) \n[GCC 4.8.2] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> host = str(None)\n>>> print host\nNone\n>>> if not host:\n...         print \"if not host\"\n...     else:\n...        print \"else\"\n... \nelse\n>>> var = None\n>>> if not var:\n...         print \"if not var\"\n...     else:\n...        print \"else\"\n... \nif not var\n\n\nSo, it can be seen that str(None) returns an object whose value is None, but it is not interpreted False as expected!\n\nHowever, this is still not the root cause of this bug! Further investigation is being carried out.\n\n", 
            "date_created": "2014-11-13 06:52:10.072293+00:00", 
            "author": "https://api.launchpad.net/1.0/~trung-t-trinh"
        }, 
        {
            "content": "The patch for this function is as follows:\n\ndef get_instance_availability_zone(context, instance):\n    \"\"\"Return availability zone of specified instance.\"\"\"\n    host = instance.get('host')\n\n    if not host:\n        return None\n\n    host = str(host)\n\n    .....", 
            "date_created": "2014-11-13 07:19:56.368192+00:00", 
            "author": "https://api.launchpad.net/1.0/~trung-t-trinh"
        }, 
        {
            "content": "Root cause of this bug is as follows.\n\nDuring the process of launching a new VM instance, the function \"get_instance_availability_zone()\" of the module \"nova.availability_zones\" is called multiple times to retrieve the info of availability zone of the VM being created.\n\nThis function, at first, it will try to get the info of availability zone from the memory cache. If the info of availability zone is not contained in memory cache, then the function continues retrieving the info of availability zone from the host aggregate.\nHowever, the default availability zone (for example \"nova\") is always specified in the memory cache. Furthermore, the memory cache is not updated immediately after a new availability zone is created. Instead, the memory cache is updated for every one hour (the const AZ_CACHE_SECONDS is the proof) . Consequently, the if-clause never holds.\n\ndef get_instance_availability_zone(context, instance):\n    \"\"\"Return availability zone of specified instance.\"\"\"\n    host = str(instance.get('host'))\n\n    if not host:\n        return None\n\n    cache_key = _make_cache_key(host)\n    cache = _get_cache()\n    az = cache.get(cache_key)\n\n    if not az:\n        elevated = context.elevated()\n        az = get_host_availability_zone(elevated, host)\n        cache.set(cache_key, az, AZ_CACHE_SECONDS)\n\n    return az\n\nIt should be noted that the info of availability zone (during the process of launching new VM) is retrieved not only from the memory cache (as seen in this function) but it is also retrieved (somewhere else) directly from the host aggregate. Therefore, it results in the toggling effect of Horizon dashboard (i.e. value of availability zone is sometimes the default one and sometimes the newly-created one).\n\nProposal: \nmodify the function  \"get_instance_availability_zone()\" of the module \"nova.availability_zones\" in such a manner that if the info of availability zone retrieved from memory cache is different from the one included in the VM instance (being launched), then memory cache will be updated manually and the info of availability zone included in the VM instance (being launched) will be returned.", 
            "date_created": "2014-11-17 11:14:07.501589+00:00", 
            "author": "https://api.launchpad.net/1.0/~trung-t-trinh"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/135566", 
            "date_created": "2014-11-19 11:08:26.735875+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This attached file contains the debug logs added manually to show that the az cache (implemented by the module \"nova.openstack.common.memorycache\" is changed un-expectedly.\n\nIn fact, have a close look at the following lines:\n\n2014-11-19 18:03:58,932 - my_logger - DEBUG - nova.openstack.common.memorycache - Client::get - key:azcache-ubuntu, value:test-az, entire cache:{'azcache-ubuntu': (1416373265, u'test-az')}\n2014-11-19 18:03:58,941 - my_logger - DEBUG - nova.availability_zones - get_instance_availability_zone - az_cache:test-az, cache:\n json: \"<nova.openstack.common.memorycache.Client object at 0x7f8b56b93e10>\"\n pickle: \"ccopy_reg\\n_reconstructor\\np1\\n(cnova.openstack.common.memorycache\\nClient\\np2\\nc__builtin__\\nobject\\np3\\nNtRp4\\n(dp5\\nS'cache'\\np6\\n(dp7\\nS'azcache-ubuntu'\\np8\\n(I1416373265\\nVtest-az\\np9\\ntp10\\nssb.\" \n2014-11-19 18:04:02,289 - my_logger - DEBUG - nova.openstack.common.memorycache - Client::get - key:azcache-ubuntu, value:nova, entire cache:{'azcache-ubuntu': (1416373238, 'nova')}\n2014-11-19 18:04:02,292 - my_logger - DEBUG - nova.availability_zones - get_instance_availability_zone - az_cache:nova, cache:\n json: \"<nova.openstack.common.memorycache.Client object at 0x7f8b56b93e10>\"\n\nWe can find that the az cache is really changed un-expectedly by some unknown process because there does not exist the call of the \"nova.openstack.common.memorycache - Client::set\" between the two continuous calls of the \"nova.openstack.common.memorycache - Client::get\". So, it is really mysterious why the az cache is changed un-expectedly?\n\nIs the module \"nova.openstack.common.memorycache\" buggy? or its user (that is the nova.availability_zones module) is buggy?", 
            "date_created": "2014-11-26 03:20:40.529116+00:00", 
            "author": "https://api.launchpad.net/1.0/~trung-t-trinh"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/159014", 
            "date_created": "2015-02-25 06:49:23.720390+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/159015", 
            "date_created": "2015-02-25 06:49:33.590686+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/159019", 
            "date_created": "2015-02-25 07:05:42.559152+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/159023", 
            "date_created": "2015-02-25 07:19:41.401384+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/159730", 
            "date_created": "2015-02-27 06:51:13.350841+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Change abandoned by Trung Trinh (<email address hidden>) on branch: master\nReview: https://review.openstack.org/159014\nReason: Please ignore and do not review this Patch", 
            "date_created": "2015-02-27 06:53:44.694245+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Change abandoned by Trung Trinh (<email address hidden>) on branch: master\nReview: https://review.openstack.org/135566", 
            "date_created": "2015-03-24 03:03:07.493602+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Change abandoned by Trung Trinh (<email address hidden>) on branch: master\nReview: https://review.openstack.org/159019", 
            "date_created": "2015-03-24 03:03:54.882382+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Change abandoned by Trung Trinh (<email address hidden>) on branch: master\nReview: https://review.openstack.org/159023", 
            "date_created": "2015-03-24 03:07:21.868333+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "it doesn't feel like this should block the kilo release, removing from kilo-rc1 for now.", 
            "date_created": "2015-04-02 13:22:19.762166+00:00", 
            "author": "https://api.launchpad.net/1.0/~johngarbutt"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/172906", 
            "date_created": "2015-04-13 13:10:33.446875+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Change abandoned by Michael Still (<email address hidden>) on branch: master\nReview: https://review.openstack.org/159730\nReason: This patch has been stalled for a long time, so I am abandoning it. Please feel free to restore it when the code is ready for review.", 
            "date_created": "2015-08-12 07:07:01.897677+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Change abandoned by Michael Still (<email address hidden>) on branch: master\nReview: https://review.openstack.org/159015\nReason: This patch has been stalled for a long time, so I am abandoning it. Please feel free to restore it when the code is ready for review.", 
            "date_created": "2015-08-12 07:11:31.249380+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Change abandoned by Sylvain Bauza (<email address hidden>) on branch: master\nReview: https://review.openstack.org/172906\nReason: Since we're removing the cache in https://review.openstack.org/#/c/221384/ that's no longer needed", 
            "date_created": "2015-09-08 16:04:38.150687+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/149562\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=479005ce5a35039639fa809b1a4705c9d3dc28c4\nSubmitter: Jenkins\nBranch:    master\n\ncommit 479005ce5a35039639fa809b1a4705c9d3dc28c4\nAuthor: Hans Lindgren <email address hidden>\nDate:   Mon Nov 24 12:03:32 2014 +0100\n\n    Consolidate code to get the correct availability zone of an instance\n    \n    This makes getting the availability zone of an instance use the same\n    code by placing it inside the helper get_instance_availability_zone().\n    \n    Related-Bug: #1390033\n    Change-Id: I69b98eacbc8dc91e65611d6bf07272b517fe350d\n", 
            "date_created": "2015-09-14 05:37:49.081897+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/172906\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=222085dcafb6d94adbf20ce82e3245c46735f105\nSubmitter: Jenkins\nBranch:    master\n\ncommit 222085dcafb6d94adbf20ce82e3245c46735f105\nAuthor: Sylvain Bauza <email address hidden>\nDate:   Mon Apr 13 15:03:06 2015 +0200\n\n    Invalidate AZ cache when the instance AZ information is different\n    \n    When a new instance is created, the host value is set to None. As a corrolar,\n    its AZ field is set to the default_availability_zone value.\n    \n    That's only when the host field is provided (ie. once the instance is started) that\n    the AZ information is also updated. Unfornately, as the AZ module is using a cache\n    system, it leaves the old AZ unchanged which can make the instance AZ data wrong.\n    \n    In order to fix that corner case, we need to compare both cache and instance values\n    and if different, invalidate the cache key and leave it updated correctly by calling\n    the AZ related information of the aggregate the host belongs to.\n    \n    Change-Id: I1b47ae07cf8a4245df00b9dc25e6000428bdc4f2\n    Closes-Bug: #1390033\n", 
            "date_created": "2015-09-14 05:44:48.202053+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2015-09-24 07:03:09.230798+00:00"
}