{
    "status": "Opinion", 
    "last_updated": "2013-03-08 18:52:04.256227+00:00", 
    "description": "The API document specifies that paginated collections may optionally also contain \"previous\" links.\nhttp://docs.openstack.org/api/openstack-compute/1.1/content/Paginated_Collections-d1e664.html\n\nHowever, this feature is not yet implemented.\nhttps://github.com/openstack/nova/blob/master/nova/api/openstack/common.py#L471", 
    "tags": [], 
    "importance": "Wishlist", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/909559", 
    "owner": "https://api.launchpad.net/1.0/~zyluo", 
    "id": 909559, 
    "index": 2439, 
    "openned": "2011-12-29 02:48:09.483215+00:00", 
    "created": "2011-12-29 02:48:09.483215+00:00", 
    "title": "os api pagination does not have prev link", 
    "comments": [
        {
            "content": "The API document specifies that paginated collections may optionally also contain \"previous\" links.\nhttp://docs.openstack.org/api/openstack-compute/1.1/content/Paginated_Collections-d1e664.html\n\nHowever, this feature is not yet implemented.\nhttps://github.com/openstack/nova/blob/master/nova/api/openstack/common.py#L471", 
            "date_created": "2011-12-29 02:48:09.483215+00:00", 
            "author": "https://api.launchpad.net/1.0/~zyluo"
        }, 
        {
            "content": "We decided against implementing previous links on purpose due to how expensive they would be to compute (that's why the spec says they're optional). When generating a next link, all you have to do is grab the last entity in the list and use that id as the marker. To generate a previous link, you would have to pull the full list of servers and iterate through it until you find the entity that is PAGE_SIZE earlier in the list to use as the new marker. If you've got a cheap way to generate these links, I would love to see it, otherwise, I don't think we should waste the cycles in the API.", 
            "date_created": "2011-12-29 13:28:25.865033+00:00", 
            "author": "https://api.launchpad.net/1.0/~bcwaldon"
        }, 
        {
            "content": "For example, servers._get_servers() gets all instances related to a tenant and cuts the list at common.limited_by_marker(). (this is kinda inefficient)\n\nhttps://github.com/openstack/nova/blob/master/nova/api/openstack/v2/servers.py#L148\nhttps://github.com/openstack/nova/blob/master/nova/api/openstack/v2/servers.py#L625\nhttps://github.com/openstack/nova/blob/master/nova/api/openstack/common.py#L180\n\nI devised a logic to get \"limit\" amounts of instances back and fourth from the marker is positioned. (no marker case handled)\n\nIt is able to know if there should be a prev link by the marker position in that limited list.\n\nI got the logic done and tomorrow I'll be able to finish the unittests.", 
            "date_created": "2011-12-29 14:08:18.652702+00:00", 
            "author": "https://api.launchpad.net/1.0/~zyluo"
        }, 
        {
            "content": "We have this implemented in our test environment but the code is too messy to send for review.\n\nThe reason is that the paginated collections don't have the same interface getting the item list from the data source.\n\nFor example, servers list is retrieved from the database and is sliced by the marker inside nova-api.\nHowever, the image list is retrieved from the glance api and the slicing is done inside the glance-api.\n\nThe logic of retrieving paginated collections should first be consistent to have a prev page link.\n\nI'll postpone this fix for the time being.", 
            "date_created": "2012-01-09 03:46:04.781968+00:00", 
            "author": "https://api.launchpad.net/1.0/~zyluo"
        }, 
        {
            "content": "marking as opinion because this is an optional feature in the spec. Please feel free to reopen if you are implementing the feature.", 
            "date_created": "2013-03-08 18:52:03.391377+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }
    ], 
    "closed": "2013-03-08 18:51:26.801464+00:00"
}