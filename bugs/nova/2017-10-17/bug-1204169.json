{
    "status": "Fix Released", 
    "last_updated": "2014-10-16 08:56:36.274776+00:00", 
    "description": "Compute instance.update messages that are not triggered by a state change (e.g. setting the host in the resource tracker) have default (None) values for task_state, old_vm_state and old_ task_state.\n\nThis can make the instance state sequence look wrong to anything consuming the messages (e.g stacktach)\n\n compute.instance.update  None(None) -> Building(none)\n scheduler.run_instance.scheduled \n compute.instance.update  building(None) ->  building(scheduling)\n compute.instance.create.start \n compute.instance.update  building(None) ->  building(None)\n compute.instance.update  building(None) ->  building(networking)\n compute.instance.update  building(networking) -> building(block_device_mapping)", 
    "tags": [], 
    "importance": "Medium", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1204169", 
    "owner": "https://api.launchpad.net/1.0/~sdague", 
    "id": 1204169, 
    "index": 3499, 
    "openned": "2013-07-23 16:22:06.880558+00:00", 
    "created": "2013-07-23 16:22:06.880558+00:00", 
    "title": "compute instance.update messages sometimes have the wrong values for instance state ", 
    "comments": [
        {
            "content": "Compute instance.update messages that are not triggered by a state change (e.g. setting the host in the resource tracker) have default (None) values for task_state, old_vm_state and old_ task_state.\n\nThis can make the instance state sequence look wrong to anything consuming the messages (e.g stacktach)\n\n compute.instance.update  None(None) -> Building(none)\n scheduler.run_instance.scheduled \n compute.instance.update  building(None) ->  building(scheduling)\n compute.instance.create.start \n compute.instance.update  building(None) ->  building(None)\n compute.instance.update  building(None) ->  building(networking)\n compute.instance.update  building(networking) -> building(block_device_mapping)", 
            "date_created": "2013-07-23 16:22:06.880558+00:00", 
            "author": "https://api.launchpad.net/1.0/~philip-day"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/38509", 
            "date_created": "2013-07-24 17:46:45.350511+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "patch was abandoned, with some questions on the review, marking as incomplete.", 
            "date_created": "2014-07-28 14:54:06.134791+00:00", 
            "author": "https://api.launchpad.net/1.0/~jogo"
        }, 
        {
            "content": "Ok, I've been looking at this block of code, and it's terribly confusing. The big issue is that the selection of whether or not we should send an update is mixed up with the send parts.\n\nThe solution would be a refactor of send_update to extract to the front all the change determination logic, so we have an answer of \"should we send an update, and what has changed\"", 
            "date_created": "2014-09-17 13:16:48.490315+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "I'm putting up a partial patch which should create less confusion here.", 
            "date_created": "2014-09-17 13:17:05.539015+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/122150", 
            "date_created": "2014-09-17 13:21:44.015538+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Whatever refactor we do come up with, its important that we don;t go down the route of only including changed fields in each message - as the downstream notification consumers (stacktach, ceilometer, bespoke billing, etc) can be quite sensitive to message contents.\n\nI like you're proposed approach of always including old and new state, with them being the same if nothing has changed", 
            "date_created": "2014-09-17 13:30:37.483009+00:00", 
            "author": "https://api.launchpad.net/1.0/~philip-day"
        }, 
        {
            "content": "Related fix proposed to branch: master\nReview: https://review.openstack.org/123151", 
            "date_created": "2014-09-22 15:04:21.143219+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Change abandoned by Matt Riedemann (<email address hidden>) on branch: master\nReview: https://review.openstack.org/123151", 
            "date_created": "2014-09-22 15:23:29.809923+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/122150\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=3267d3ad92274303b6339e8a8d237ad8a3bb7bb9\nSubmitter: Jenkins\nBranch:    master\n\ncommit 3267d3ad92274303b6339e8a8d237ad8a3bb7bb9\nAuthor: Sean Dague <email address hidden>\nDate:   Wed Sep 17 09:04:10 2014 -0400\n\n    Be less confusing about notification states\n    \n    Depending on the way we snake through send_update we might end up in\n    _send_instance_update_notification without the vm or task states. The\n    issue being that we always send those states to the notification\n    payload. So we are actually producing notifications with None(None) =>\n    which is clearly not right.\n    \n    This whole notification path should probably be refactored to prevent\n    this threading from happening, but in the mean time this will at least\n    mean that we aren't creating blatantly wrong notifications.\n    \n    Add unit tests for the new behavior.\n    \n    Change-Id: I5092880647a4ac826376396610599dab99efb08e\n    Closes-Bug: #1204169\n", 
            "date_created": "2014-09-23 22:39:20.053265+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2014-10-01 07:39:43.173525+00:00"
}