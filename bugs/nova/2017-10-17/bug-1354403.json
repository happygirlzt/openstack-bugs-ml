{
    "status": "Expired", 
    "last_updated": "2017-08-23 04:18:40.247029+00:00", 
    "description": "In general[1] it is incorrect to use the value of a config variable at import time, because although the config variable may have been registered, its value will not have been loaded. The result will always be the default value, regardless of the contents of the relevant config file.\n\nI did a quick scan of Nova, and found the following instances of config variables being used in import context:\n\nnova/api/openstack/common.py:limited()\nnova/api/openstack/common.py:get_limit_and_marker()\nnova/compute/manager.py:_heal_instance_info_cache()\nnova/compute/manager.py:_poll_shelved_instances()\nnova/compute/manager.py:_poll_bandwidth_usage()\nnova/compute/manager.py:_poll_volume_usage()\nnova/compute/manager.py:_sync_power_states()\nnova/compute/manager.py:_cleanup_running_deleted_instances()\nnova/compute/manager.py:_run_image_cache_manager_pass()\nnova/compute/manager.py:_run_pending_deletes()\nnova/network/manager.py:_periodic_update_dns()\nnova/scheduler/manager.py:_run_periodic_tasks()\n\nConsequently, it appears that the given values of the following config variables are being ignored:\n\nosapi_max_limit\nheal_instance_info_cache_interval\nshelved_poll_interval\nbandwidth_poll_interval\nvolume_usage_poll_interval\nsync_power_state_interval\nrunning_deleted_instance_poll_interval\nimage_cache_manager_interval\ninstance_delete_interval\ndns_update_periodic_interval\nscheduler_driver_task_period\n\n[1] This doesn't apply to drivers, which are loaded dynamically after the config has been loaded. However, relying on that seems even nastier.", 
    "tags": [
        "config", 
        "oslo"
    ], 
    "importance": "Low", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1354403", 
    "owner": "None", 
    "id": 1354403, 
    "index": 1332, 
    "openned": "2014-08-08 11:42:36.215294+00:00", 
    "created": "2014-08-08 11:42:36.215294+00:00", 
    "title": "Numerous config options ignored due to CONF used in import context", 
    "comments": [
        {
            "content": "In general[1] it is incorrect to use the value of a config variable at import time, because although the config variable may have been registered, its value will not have been loaded. The result will always be the default value, regardless of the contents of the relevant config file.\n\nI did a quick scan of Nova, and found the following instances of config variables being used in import context:\n\nnova/api/openstack/common.py:limited()\nnova/api/openstack/common.py:get_limit_and_marker()\nnova/compute/manager.py:_heal_instance_info_cache()\nnova/compute/manager.py:_poll_shelved_instances()\nnova/compute/manager.py:_poll_bandwidth_usage()\nnova/compute/manager.py:_poll_volume_usage()\nnova/compute/manager.py:_sync_power_states()\nnova/compute/manager.py:_cleanup_running_deleted_instances()\nnova/compute/manager.py:_run_image_cache_manager_pass()\nnova/compute/manager.py:_run_pending_deletes()\nnova/network/manager.py:_periodic_update_dns()\nnova/scheduler/manager.py:_run_periodic_tasks()\n\nConsequently, it appears that the given values of the following config variables are being ignored:\n\nosapi_max_limit\nheal_instance_info_cache_interval\nshelved_poll_interval\nbandwidth_poll_interval\nvolume_usage_poll_interval\nsync_power_state_interval\nrunning_deleted_instance_poll_interval\nimage_cache_manager_interval\ninstance_delete_interval\ndns_update_periodic_interval\nscheduler_driver_task_period\n\n[1] This doesn't apply to drivers, which are loaded dynamically after the config has been loaded. However, relying on that seems even nastier.", 
            "date_created": "2014-08-08 11:42:36.215294+00:00", 
            "author": "https://api.launchpad.net/1.0/~mbooth-9"
        }, 
        {
            "content": "This seems like somethign that should get addressed sooner rather than later", 
            "date_created": "2014-09-10 12:46:22.657055+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "All of the CONF usages outlined in the bug description are in fact referenced after the configuration is loaded and therefore all conf values are honored -- there is no functional deficiency here.\n\nHowever as noted this is bad practice and we likely need a better way to handle these cases.\n\nLowing importance based on my statements above.", 
            "date_created": "2014-09-22 14:30:54.456245+00:00", 
            "author": "https://api.launchpad.net/1.0/~boden"
        }, 
        {
            "content": "Moving to low based on https://wiki.openstack.org/wiki/BugTriage  there are no functional deficiencies here. Removing myself as the assignee as there are more important bugs to address right now.", 
            "date_created": "2014-09-22 18:51:30.380062+00:00", 
            "author": "https://api.launchpad.net/1.0/~boden"
        }, 
        {
            "content": "I would like to work on this bug.  Can someone please give a correct expected usage example for the config values, so that I can start making the changes ?", 
            "date_created": "2015-05-12 05:00:38.382556+00:00", 
            "author": "https://api.launchpad.net/1.0/~ganeshna"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/241361", 
            "date_created": "2015-11-03 20:38:37.276186+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Some more information:\n\nA variable used as a function parameter results becomes immutable: changes to the variable after the function has been registered do not get reflected in the function definition. For example:\n\n    >>> class Config(object):\n    ...     x = 5\n    >>> config = Config()\n    >>>\n    >>> def func(param=config.x):\n    ...     print(param)\n    >>> func()\n    5\n    >>> config.x = 9\n    >>> func()\n    5\n\nCurrently, this mistake when configuration settings are passed as arguments to functions and decorators. Should these settings change, the updated values will not be reflected in the functions/decorators. However, this is not an issue for methods or constructors as these are only evaluated when an instance of a class is created. Correct this oversight by ensuring these settings are set at runtime in affected functions.", 
            "date_created": "2015-11-20 23:06:07.899751+00:00", 
            "author": "https://api.launchpad.net/1.0/~stephenfinucane"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/241361\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=a9716c880e4dd6ff2e8e6a15405d90d1402c816e\nSubmitter: Jenkins\nBranch:    master\n\ncommit a9716c880e4dd6ff2e8e6a15405d90d1402c816e\nAuthor: Stephen Finucane <email address hidden>\nDate:   Tue Nov 3 17:18:02 2015 +0000\n\n    Rework 'limited' and 'get_limit_and_marker'\n    \n    The 'max_limit' parameter in each of these functions are only used\n    in one test. Remove these. In addition, make consistent use of the\n    other helper functions within these functions.\n    \n    Partial-bug: #1354403\n    Change-Id: Ifab24647396a868bde123623e39bbba3bd501dfa\n", 
            "date_created": "2016-07-13 22:31:38.271902+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "I have some of this done but there is yet more to do", 
            "date_created": "2016-09-02 10:00:07.018266+00:00", 
            "author": "https://api.launchpad.net/1.0/~stephenfinucane"
        }, 
        {
            "content": "Tagging as New. It is old and requires to be verified.", 
            "date_created": "2017-03-21 16:30:55.100749+00:00", 
            "author": "https://api.launchpad.net/1.0/~mszankin"
        }, 
        {
            "content": "If anyone is interested in keeping this bug alive, can they provide a script that can be run on the Nova code to ensure that we know when it's done?", 
            "date_created": "2017-06-23 16:59:46.197616+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "[Expired for OpenStack Compute (nova) because there has been no activity for 60 days.]", 
            "date_created": "2017-08-23 04:18:37.713067+00:00", 
            "author": "https://api.launchpad.net/1.0/~janitor"
        }
    ], 
    "closed": "2017-08-23 04:18:38.165264+00:00"
}