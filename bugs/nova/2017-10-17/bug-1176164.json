{
    "status": "Invalid", 
    "last_updated": "2013-06-10 21:17:59.978532+00:00", 
    "description": "Running tempest on a RHEL 6.3 installation of Havana with this test class:\n\ntempest.tests.compute.images.test_images_oneserver.py:ImagesOneServerTestJSON\n\nIs hitting this failure:\n\n2013-05-02 17:03:55    ERROR [nova.compute.manager] DB error: ['Traceback (most recent call last):\\n', '  File \"/usr/lib/python2.6/site-packages/nova/compute/manager.py\", line 920, in _build_instance\\n    with rt.instance_claim(context, instance, limits):\\n', '  File \"/usr/lib/python2.6/site-packages/nova/openstack/common/lockutils.py\", line 242, in inner\\n    retval = f(*args, **kwargs)\\n', '  File \"/usr/lib/python2.6/site-packages/nova/compute/resource_tracker.py\", line 103, in instance_claim\\n    if claim.test(self.compute_node, limits):\\n', '  File \"/usr/lib/python2.6/site-packages/nova/compute/claims.py\", line 120, in test\\n    can_claim = (self._test_memory(resources, memory_mb_limit) and\\n', '  File \"/usr/lib/python2.6/site-packages/nova/compute/claims.py\", line 138, in _test_memory\\n    return self._test(type_, unit, total, used, requested, limit)\\n', '  File \"/usr/lib/python2.6/site-packages/nova/compute/claims.py\", line 163, in _test\\n    LOG.audit(msg % locals(), instance=self.instance)\\n', \"KeyError: u'total_vcpus'\\n\"]\n\nWe're at this level of code for nova:\n\nhttps://github.com/openstack/nova/commit/46a93678e8e49c3c695a47084b012eea88bae969\n\nWe've traced the errors to bad translations in nova.po here:\n\nhttps://github.com/openstack/nova/blob/master/nova/locale/en_US/LC_MESSAGES/nova.po#L4215\n\nand here:\n\nhttps://github.com/openstack/nova/blob/master/nova/locale/en_US/LC_MESSAGES/nova.po#L4225\n\nWe are compiling nova.mo's using babel with the --use-fuzzy option so it was compiling these fuzzy translations.  Our workaround is to not compile the fuzzy translations.", 
    "tags": [], 
    "importance": "Critical", 
    "heat": 12, 
    "link": "https://bugs.launchpad.net/nova/+bug/1176164", 
    "owner": "None", 
    "id": 1176164, 
    "index": 130, 
    "openned": "2013-05-03 19:13:13.077341+00:00", 
    "created": "2013-05-03 19:13:13.077341+00:00", 
    "title": "Consider using update_catalog --no-fuzzy-matching in transifex automation scripts", 
    "comments": [
        {
            "content": "Running tempest on a RHEL 6.3 installation of Havana with this test class:\n\ntempest.tests.compute.images.test_images_oneserver.py:ImagesOneServerTestJSON\n\nIs hitting this failure:\n\n2013-05-02 17:03:55    ERROR [nova.compute.manager] DB error: ['Traceback (most recent call last):\\n', '  File \"/usr/lib/python2.6/site-packages/nova/compute/manager.py\", line 920, in _build_instance\\n    with rt.instance_claim(context, instance, limits):\\n', '  File \"/usr/lib/python2.6/site-packages/nova/openstack/common/lockutils.py\", line 242, in inner\\n    retval = f(*args, **kwargs)\\n', '  File \"/usr/lib/python2.6/site-packages/nova/compute/resource_tracker.py\", line 103, in instance_claim\\n    if claim.test(self.compute_node, limits):\\n', '  File \"/usr/lib/python2.6/site-packages/nova/compute/claims.py\", line 120, in test\\n    can_claim = (self._test_memory(resources, memory_mb_limit) and\\n', '  File \"/usr/lib/python2.6/site-packages/nova/compute/claims.py\", line 138, in _test_memory\\n    return self._test(type_, unit, total, used, requested, limit)\\n', '  File \"/usr/lib/python2.6/site-packages/nova/compute/claims.py\", line 163, in _test\\n    LOG.audit(msg % locals(), instance=self.instance)\\n', \"KeyError: u'total_vcpus'\\n\"]\n\nWe're at this level of code for nova:\n\nhttps://github.com/openstack/nova/commit/46a93678e8e49c3c695a47084b012eea88bae969\n\nWe've traced the errors to bad translations in nova.po here:\n\nhttps://github.com/openstack/nova/blob/master/nova/locale/en_US/LC_MESSAGES/nova.po#L4215\n\nand here:\n\nhttps://github.com/openstack/nova/blob/master/nova/locale/en_US/LC_MESSAGES/nova.po#L4225\n\nWe are compiling nova.mo's using babel with the --use-fuzzy option so it was compiling these fuzzy translations.  Our workaround is to not compile the fuzzy translations.", 
            "date_created": "2013-05-03 19:13:13.077341+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "I hate the locals() usage here, but I am a bit lost on what a \"fuzzy translation\" is. Can I have a hint please?", 
            "date_created": "2013-05-07 23:52:54.208373+00:00", 
            "author": "https://api.launchpad.net/1.0/~mikal"
        }, 
        {
            "content": "Here is an explanation of 'fuzzy':\n\n'Fuzzy' messages are marked with a #, fuzzy line above the msgid line, and are the result of a merge where a message is deemed slightly changed from the previous version. A message marked as fuzzy is supposed to be looked at by a human to make sure the translation doesn't need updating, after which the human translator removes that flag.", 
            "date_created": "2013-05-08 00:21:33.183485+00:00", 
            "author": "https://api.launchpad.net/1.0/~npbiles"
        }, 
        {
            "content": "Yeah, fuzzy basically means Babel is marking it as something that needs to be verified because the translation could have deviated from the msgid (string in the source code) and that could cause issues if you compile it - which is exactly what we ran into.  The compiled translated message had variables in it which weren't in scope when the message was used, so it blew up with a KeyError.", 
            "date_created": "2013-05-08 00:53:26.652494+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Ahhh, ok. I've just sent off a code review to remove the use of locals() in that code, which should make errors like this easier to spot in the future. Is there anything else you think I should do for this bug?", 
            "date_created": "2013-05-08 02:27:42.202051+00:00", 
            "author": "https://api.launchpad.net/1.0/~mikal"
        }, 
        {
            "content": "Hey Michael,\n\nI think with even getting rid of locals() for the string substitution you'll have problems because the translations are using variables that aren't in the original strings:\n\n#: nova/compute/claims.py:162\n#, fuzzy, python-format\nmsgid \"Total %(type_)s: %(total)d %(unit)s, used: %(used)d %(unit)s\"\nmsgstr \"Total VCPUs: %(total_vcpus)d, used: %(used_vcpus)d\"\n\n#: nova/compute/claims.py:174\n#, fuzzy, python-format\nmsgid \"%(type_)s limit: %(limit)d %(unit)s, free: %(free)d %(unit)s\"\nmsgstr \"Disk limit: %(disk_gb_limit)d GB, free: %(free_disk_gb)d GB\"\n\n#: nova/compute/claims.py:181\n#, fuzzy, python-format\nmsgid \"\"\n\"Unable to claim resources. Free %(type_)s %(free)d %(unit)s < requested \"\n\"%(requested)d %(unit)s\"\nmsgstr \"\"\n\"Unable to claim resources. Free CPU %(free_vcpus)d < requested CPU \"\n\"%(vcpus)d\"\n\nI believe what happened is when these were originally translated there was a type-specific message for each resource (disk, RAM, CPU) and then at some point someone consolidated all of those into a single generic message with variables, that's where the %(type_)s variable comes in.  So I think using locals() is probably fine, it's the translations that are bad.", 
            "date_created": "2013-05-08 13:13:18.847691+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "So, it sounds like we need to invalidate the translations for these messages and get them re-translated? This sounds a bit like we need a test which ensures that all of the variables in a given message exist.", 
            "date_created": "2013-05-22 05:31:45.011260+00:00", 
            "author": "https://api.launchpad.net/1.0/~mikal"
        }, 
        {
            "content": "Sigh. I just did a quick check, and I see 117 examples of this in en_US' nova.po. This seems like a big problem to me.", 
            "date_created": "2013-05-22 05:50:56.099020+00:00", 
            "author": "https://api.launchpad.net/1.0/~mikal"
        }, 
        {
            "content": "Ok, I ran a script and it seems like there are lots of these. I've dumped my reports at http://www.stillhq.com/openstack/havana/locale_errors_20130522/ (look for .errors files). I'm going to email the people clarke recommends as being able to help now and we'll see what happens.", 
            "date_created": "2013-05-22 06:15:56.913048+00:00", 
            "author": "https://api.launchpad.net/1.0/~mikal"
        }, 
        {
            "content": "Hi, Michael\n\nI check out the po files directly from Transifex using Transifex tools.\nI don't see so much \"fuzzy\" translations there.\nThese po files in Nova project are not same with the files downloading from Transifex.\n\nI doubt it is caused by the downloading script.\nPlease ask Clark's help.\n\nDaisy", 
            "date_created": "2013-05-22 08:09:55.589278+00:00", 
            "author": "https://api.launchpad.net/1.0/~daisy-ycguo"
        }, 
        {
            "content": "How was the .mo file generated in this case?\n\nMy understanding is that 'python setup.py compile_catalog' wouldn't include fuzzy translations unless you passed the '--use-fuzzy/-f' flag?\n\nIf that's correct, the problem here is caused by how the .mo catalog was compiled, not with fuzzy translations in the .po file", 
            "date_created": "2013-05-22 09:07:14.977499+00:00", 
            "author": "https://api.launchpad.net/1.0/~markmc"
        }, 
        {
            "content": "As an aside, if a translator made a mistake similar this, transifex would catch it with 'msgfmt -c' when you try and upload it:\n\n  $> msgfmt -c nova/locale/en_US/LC_MESSAGES/nova.po\n  nova/locale/en_US/LC_MESSAGES/nova.po:8440: a format specification for argument 'mountpoint', as in 'msgstr', doesn't exist in 'msgid'\n  msgfmt: found 1 fatal error\n\nbut msgfmt doesn't do this check when a translation is marked as fuzzy.\n", 
            "date_created": "2013-05-22 09:07:58.020962+00:00", 
            "author": "https://api.launchpad.net/1.0/~markmc"
        }, 
        {
            "content": "Ah, the question was answered above:\n\n  We are compiling nova.mo's using babel with the --use-fuzzy option so it was compiling these\n  fuzzy translations. Our workaround is to not compile the fuzzy translations.\n\nI think it's a case of \"just don't compile with --use-fuzzy\"\n\nThe question of whether our transifex automation should pass --no-fuzzy-matching to update_catalog is really a question for translators. Does fuzzy matches in the .po file help them? If so, I think we should keep using them.", 
            "date_created": "2013-05-22 09:10:13.849859+00:00", 
            "author": "https://api.launchpad.net/1.0/~markmc"
        }, 
        {
            "content": "I've marked the nova task as invalid and changed this to be about considering --no-fuzzy-matching in our use of update_catalog", 
            "date_created": "2013-05-22 09:12:00.281622+00:00", 
            "author": "https://api.launchpad.net/1.0/~markmc"
        }, 
        {
            "content": "Hi, Mark\n\nFirstly, answer your question: Does fuzzy matches in the .po file help them? I don't think it helps translators. I think, fuzzy matches help if translators don't 100% complete the translation but the users/operators want translation as much as we can provide. But surely, sometimes it will bring problems. I will suggest that we disable fuzzy matches at the beginning.\n\nI'd like to have a try to fix this problem. \n\nRegards\nDaisy", 
            "date_created": "2013-05-28 05:44:02.146638+00:00", 
            "author": "https://api.launchpad.net/1.0/~daisy-ycguo"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/31472", 
            "date_created": "2013-06-03 08:52:36.128683+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/31472\nCommitted: http://github.com/openstack-infra/config/commit/ba288616a4a40aaebcf1fd6338935ef0cdd05fb9\nSubmitter: Jenkins\nBranch:    master\n\ncommit ba288616a4a40aaebcf1fd6338935ef0cdd05fb9\nAuthor: daisy-ycguo <email address hidden>\nDate:   Mon Jun 3 16:42:53 2013 +0800\n\n    Disable fuzzy matching in transifex automation scripts\n    \n    Fuzzy matching can cause unexpected problems.\n    So add option \"--no-fuzzy-matching\" to command \"python setup.py update_catalog\"\n    in propose_translation_update and upstream_translation_update scripts.\n    \n    Bug 1176164\n    \n    Change-Id: I632d6eb9280ca11883760f17fc4363275692b38b\n", 
            "date_created": "2013-06-10 21:17:58.687452+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2013-05-22 09:10:21.186304+00:00"
}