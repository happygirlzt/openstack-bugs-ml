{
    "status": "Fix Released", 
    "last_updated": "2012-09-27 15:25:40.787327+00:00", 
    "description": "If I attempt to run many concurrent instances with source security groups I get the following traceback:\n\n2012-06-28 01:34:49 ERROR nova.compute.manager [req-6961da6f-2576-43a6-8f3b-d66f6ade61e9 vish vish] [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354] Instance failed to spawn\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354] Traceback (most recent call last):\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]   File \"/opt/stack/nova/nova/compute/manager.py\", line 637, in _spawn\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]     self._legacy_nw_info(network_info), block_device_info)\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]   File \"/opt/stack/nova/nova/exception.py\", line 117, in wrapped\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]     temp_level, payload)\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]   File \"/usr/lib/python2.7/contextlib.py\", line 24, in __exit__\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]     self.gen.next()\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]   File \"/opt/stack/nova/nova/exception.py\", line 92, in wrapped\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]     return f(*args, **kw)\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]   File \"/opt/stack/nova/nova/virt/libvirt/connection.py\", line 976, in spawn\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]     self._create_domain_and_network(xml, instance, network_info)\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]   File \"/opt/stack/nova/nova/virt/libvirt/connection.py\", line 1737, in _create_do\nmain_and_network\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]     self.firewall_driver.prepare_instance_filter(instance, network_info)\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]   File \"/opt/stack/nova/nova/virt/firewall.py\", line 150, in prepare_instance_filt\ner\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]     self.add_filters_for_instance(instance)\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]   File \"/opt/stack/nova/nova/virt/firewall.py\", line 195, in add_filters_for_insta\nnce\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]     ipv4_rules, ipv6_rules = self.instance_rules(instance, network_info)\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]   File \"/opt/stack/nova/nova/virt/firewall.py\", line 365, in instance_rules\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]     instance)\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]   File \"/opt/stack/nova/nova/network/api.py\", line 44, in wrapper\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]     res = f(self, context, *args, **kwargs)\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]   File \"/opt/stack/nova/nova/network/api.py\", line 265, in get_instance_nw_info\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]     return self._get_instance_nw_info(context, instance)\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]   File \"/opt/stack/nova/nova/network/api.py\", line 271, in _get_instance_nw_info\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]     'rxtx_factor': instance['instance_type']['rxtx_factor'],\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]   File \"/opt/stack/nova/nova/db/sqlalchemy/models.py\", line 74, in __getitem__\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]     return getattr(self, key)\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]   File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/attributes.py\", line 168, in __get__\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]     return self.impl.get(instance_state(instance),dict_)\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]   File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/attributes.py\", line 453, in get\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]     value = self.callable_(state, passive)\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]   File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/strategies.py\", line 485, in _load_for_state  \n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]     (mapperutil.state_str(state), key)\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354] DetachedInstanceError: Parent instance <Instance at 0x47bc8d0> is not bound to a Session; lazy load operation of attribute 'instance_type' cannot proceed", 
    "tags": [
        "verification-done"
    ], 
    "importance": "High", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1018721", 
    "owner": "https://api.launchpad.net/1.0/~vishvananda", 
    "id": 1018721, 
    "index": 719, 
    "openned": "2012-06-28 06:41:36.464365+00:00", 
    "created": "2012-06-28 06:41:36.464365+00:00", 
    "title": "Launching with source groups under load produces lazy load error", 
    "comments": [
        {
            "content": "If I attempt to run many concurrent instances with source security groups I get the following traceback:\n\n2012-06-28 01:34:49 ERROR nova.compute.manager [req-6961da6f-2576-43a6-8f3b-d66f6ade61e9 vish vish] [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354] Instance failed to spawn\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354] Traceback (most recent call last):\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]   File \"/opt/stack/nova/nova/compute/manager.py\", line 637, in _spawn\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]     self._legacy_nw_info(network_info), block_device_info)\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]   File \"/opt/stack/nova/nova/exception.py\", line 117, in wrapped\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]     temp_level, payload)\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]   File \"/usr/lib/python2.7/contextlib.py\", line 24, in __exit__\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]     self.gen.next()\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]   File \"/opt/stack/nova/nova/exception.py\", line 92, in wrapped\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]     return f(*args, **kw)\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]   File \"/opt/stack/nova/nova/virt/libvirt/connection.py\", line 976, in spawn\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]     self._create_domain_and_network(xml, instance, network_info)\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]   File \"/opt/stack/nova/nova/virt/libvirt/connection.py\", line 1737, in _create_do\nmain_and_network\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]     self.firewall_driver.prepare_instance_filter(instance, network_info)\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]   File \"/opt/stack/nova/nova/virt/firewall.py\", line 150, in prepare_instance_filt\ner\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]     self.add_filters_for_instance(instance)\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]   File \"/opt/stack/nova/nova/virt/firewall.py\", line 195, in add_filters_for_insta\nnce\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]     ipv4_rules, ipv6_rules = self.instance_rules(instance, network_info)\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]   File \"/opt/stack/nova/nova/virt/firewall.py\", line 365, in instance_rules\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]     instance)\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]   File \"/opt/stack/nova/nova/network/api.py\", line 44, in wrapper\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]     res = f(self, context, *args, **kwargs)\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]   File \"/opt/stack/nova/nova/network/api.py\", line 265, in get_instance_nw_info\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]     return self._get_instance_nw_info(context, instance)\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]   File \"/opt/stack/nova/nova/network/api.py\", line 271, in _get_instance_nw_info\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]     'rxtx_factor': instance['instance_type']['rxtx_factor'],\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]   File \"/opt/stack/nova/nova/db/sqlalchemy/models.py\", line 74, in __getitem__\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]     return getattr(self, key)\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]   File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/attributes.py\", line 168, in __get__\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]     return self.impl.get(instance_state(instance),dict_)\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]   File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/attributes.py\", line 453, in get\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]     value = self.callable_(state, passive)\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]   File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/strategies.py\", line 485, in _load_for_state  \n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354]     (mapperutil.state_str(state), key)\n2012-06-28 01:34:49 TRACE nova.compute.manager [instance: 51720089-48bb-4db7-84c2-a5c2a7a12354] DetachedInstanceError: Parent instance <Instance at 0x47bc8d0> is not bound to a Session; lazy load operation of attribute 'instance_type' cannot proceed", 
            "date_created": "2012-06-28 06:41:36.464365+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "Example script to reproduce issue (on 3 compute host multihost flatdhcp kvm deployment):\n\n#!/bin/bash\n\nfor d in $(nova list | cut -f3 -d'|' | grep source); do nova delete ${d}; done\nfor d in $(nova list | cut -f3 -d'|' | grep rules); do nova delete ${d}; done\n\nwhile $(nova list | grep source); do\n    sleep 5\ndone\n\nwhile $(nova list | grep rules); do\n    sleep 5\ndone\n\nnova secgroup-delete sources\nnova secgroup-delete rules\n\nnova secgroup-create source source\nnova secgroup-add-rule source tcp 22 22 0.0.0.0/0\nnova secgroup-add-rule source icmp -1 -1 0.0.0.0/0\n\nnova secgroup-create rules rules\n\nnova secgroup-add-group-rule rules --ip_proto tcp --from_port 22 --to_port 22 source\n\nfor d in {1..2}; do nova boot --flavor 2 --image <centos-image-id> --security_groups=source source-${d}; done\nfor d in {1..6}; do nova boot --flavor 2 --image <centos-image-id> --security_groups=rules rules-${d}; done", 
            "date_created": "2012-06-28 06:43:29.186742+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "This seems to be some kind of odd interaction with eventlet and sqlalchemy. We have seen it surface before, but something is causing lazy loads to be occasionally lost when there are concurrent db requests going on in greenthreads.", 
            "date_created": "2012-06-28 06:44:52.443978+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "This patch works around the issue:\n\ndiff --git a/nova/network/api.py b/nova/network/api.py\nindex 96a7a2f..a189a72 100644\n--- a/nova/network/api.py\n+++ b/nova/network/api.py\n@@ -216,9 +216,14 @@ class API(base.Base):\n \n     def get_instance_nw_info(self, context, instance):\n         \"\"\"Returns all network info related to an instance.\"\"\"\n+        try:\n+            instance_type = instance['instance_type']\n+        except Exception:\n+            instance_type = self.db.instance_type_get(\n+                    context, instance['instance_type_id'])\n         args = {'instance_id': instance['id'],\n                 'instance_uuid': instance['uuid'],\n-                'rxtx_factor': instance['instance_type']['rxtx_factor'],\n+                'rxtx_factor': instance_type['rxtx_factor'],\n                 'host': instance['host'],\n                 'project_id': instance['project_id']}\n         try:", 
            "date_created": "2012-06-28 06:46:02.848195+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "I really would like to find out what could possibly be causing this though, because I don't see any way for the instance object to be loaded without the join only sometimes.", 
            "date_created": "2012-06-28 06:46:46.621615+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "As a point of interest, this behavior wasn't present in Diablo.\n", 
            "date_created": "2012-06-28 13:39:05.657337+00:00", 
            "author": "https://api.launchpad.net/1.0/~ron-pedde"
        }, 
        {
            "content": "Maybe push the workaround in F2 and open a new bug to track the more permanent fix", 
            "date_created": "2012-07-03 21:47:05.183237+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/9297", 
            "date_created": "2012-07-03 21:54:02.716917+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Moved to F3 since this is a bit of a corner case, not a regression, and we need F2 out", 
            "date_created": "2012-07-05 18:31:02.715586+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "This was fixed by https://review.openstack.org/#/c/9297/", 
            "date_created": "2012-07-23 21:51:05.810671+00:00", 
            "author": "https://api.launchpad.net/1.0/~markmc"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/9642\nCommitted: http://github.com/openstack/nova/commit/4d74631659b1b6e5b29b763cd808528946cb3721\nSubmitter: Jenkins\nBranch:    stable/essex\n\ncommit 4d74631659b1b6e5b29b763cd808528946cb3721\nAuthor: Vishvananda Ishaya <email address hidden>\nDate:   Tue Jul 3 14:50:11 2012 -0700\n\n    Avoid lazy-loading errors on instance_type\n    \n    When instances are launched with a source group, the instance_type\n    is not lazy_loaded in properly.\n    \n    The issue is intermittent because if another query has already loaded\n    the instance with a joined instance_type or the instance has not\n    yet been expunged from the session, then the load succeeds.\n    \n    Therefore this failure only appears under heavy load. Adding an\n    explicit joindload fixes the issue.\n    \n    fixes bug 1018721\n    \n    Change-Id: I450c598c31c416c7be341cbb8cd14e33c6bb2aec\n    (cherry picked from commit 2ef0dcfac78468551aac8492269ad856c312dcb5)\n", 
            "date_created": "2012-07-24 06:36:31.953475+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Please find the attached test log from the Ubuntu Server Team's CI infrastructure.  As part of the verification process for this bug, Nova has been deployed and configured across multiple nodes using precise-proposed as an installation source.  After successful bring-up and configuration of the cluster, a number of exercises and smoke tests have be invoked to ensure the updated package did not introduce any regressions. A number of test iterations were carried out to catch any possible transient errors.\n\nPlease Note the list of installed packages at the top and bottom of the report.\n\nFor records of upstream test coverage of this update, please see the Jenkins links in the comments of the relevant  upstream code-review(s):\n\nStable review: https://review.openstack.org/9642\n\nAs per the provisional Micro Release Exception granted to this package by the Technical Board, we hope this contributes toward verification of this update.", 
            "date_created": "2012-08-30 07:36:17.810111+00:00", 
            "author": "https://api.launchpad.net/1.0/~gandelman-a"
        }, 
        {
            "content": "Test coverage log.", 
            "date_created": "2012-08-30 07:36:20.371603+00:00", 
            "author": "https://api.launchpad.net/1.0/~gandelman-a"
        }, 
        {
            "content": "This bug was fixed in the package nova - 2012.1.3+stable-20120827-4d2a4afe-0ubuntu1\n\n---------------\nnova (2012.1.3+stable-20120827-4d2a4afe-0ubuntu1) precise-proposed; urgency=low\n\n  * New upstream snapshot, fixes FTBFS in -proposed. (LP: #1041120)\n  * Resynchronize with stable/essex (4d2a4afe):\n    - [5d63601] Inappropriate exception handling on kvm live/block migration\n      (LP: #917615)\n    - [ae280ca] Deleted floating ips can cause instance delete to fail\n      (LP: #1038266)\n\nnova (2012.1.3+stable-20120824-86fb7362-0ubuntu1) precise-proposed; urgency=low\n\n  * New upstream snapshot. (LP: #1041120)\n  * Dropped, superseded by new snapshot:\n    - debian/patches/CVE-2012-3447.patch: [d9577ce]\n    - debian/patches/CVE-2012-3371.patch: [25f5bd3]\n    - debian/patches/CVE-2012-3360+3361.patch: [b0feaff]\n  * Resynchronize with stable/essex (86fb7362):\n    - [86fb736] Libvirt driver reports incorrect error when volume-detach fails\n      (LP: #1029463)\n    - [272b98d] nova delete lxc-instance umounts the wrong rootfs (LP: #971621)\n    - [09217ab] Block storage connections are NOT restored on system reboot\n      (LP: #1036902)\n    - [d9577ce] CVE-2012-3361 not fully addressed (LP: #1031311)\n    - [e8ef050] pycrypto is unused and the existing code is potentially insecure\n      to use (LP: #1033178)\n    - [3b4ac31] cannot umount guestfs  (LP: #1013689)\n    - [f8255f3] qpid_heartbeat setting in ineffective (LP: #1030430)\n    - [413c641] Deallocation of fixed IP occurs before security group refresh\n      leading to potential security issue in error / race conditions\n      (LP: #1021352)\n    - [219c5ca] Race condition in network/deallocate_for_instance() leads to\n      security issue (LP: #1021340)\n    - [f2bc403] cleanup_file_locks does not remove stale sentinel files\n      (LP: #1018586)\n    - [4c7d671] Deleting Flavor currently in use by instance creates error\n      (LP: #994935)\n    - [7e88e39] nova testsuite errors on newer versions of python-boto (e.g.\n      2.5.2) (LP: #1027984)\n    - [80d3026] NoMoreFloatingIps: Zero floating ips available after repeatedly\n      creating and destroying instances over time (LP: #1017418)\n    - [4d74631] Launching with source groups under load produces lazy load error\n      (LP: #1018721)\n    - [08e5128] API 'v1.1/{tenant_id}/os-hosts' does not return a list of hosts\n      (LP: #1014925)\n    - [801b94a] Restarting nova-compute removes ip packet filters (LP: #1027105)\n    - [f6d1f55] instance live migration should create virtual_size disk image\n      (LP: #977007)\n    - [4b89b4f] [nova][volumes] Exceeding volumes, gigabytes and floating_ips\n      quotas returns general uninformative HTTP 500 error (LP: #1021373)\n    - [6e873bc] [nova][volumes] Exceeding volumes, gigabytes and floating_ips\n      quotas returns general uninformative HTTP 500 error (LP: #1021373)\n    - [7b215ed] Use default qemu-img cluster size in libvirt connection driver\n    - [d3a87a2] Listing flavors with marker set returns 400 (LP: #956096)\n    - [cf6a85a] nova-rootwrap hardcodes paths instead of using\n      /sbin:/usr/sbin:/usr/bin:/bin (LP: #1013147)\n    - [2efc87c] affinity filters don't work if scheduler_hints is None\n      (LP: #1007573)\n    - [48e5f46] metadata injection is broken in xen (LP: #1022036)\n    - [25f5bd3] scheduler hang (DOS) possible with\n      DifferentHostFilter/SameHostFilter  (LP: #1017795)\n    - [1c1b858] cannot umount guestfs  (LP: #1013689)\n    - [835ba4f] not able to get host total memory in xen with libvirt\n      (LP: #1004298)\n    - [00e5104] Call to network_get_all_by_uuids missing 'db' (LP: #986922)\n    - [4c49df7] [nova][volumes] Exceeding volumes, gigabytes and floating_ips\n      quotas returns general uninformative HTTP 500 error (LP: #1021373)\n    - [19631f3] [nova][volumes] Exceeding volumes quotas logs\n      \"VolumeSizeTooLarge\" instead of \"VolumeLimitExceeded\"  (LP: #1020634)\n    - [b0feaff] Remote arbitrary file corruption / creation flaw via injected\n      files (LP: #1015531)\n    - [3cb6e57] NoMoreFixedIps: Zero fixed ips available. Nova seems leaking\n      them. (LP: #1014769)\n    - [5d8431b] ram_allocation_ratio does not work (LP: #1016273)\n    - [410060f] test_get_console_output_file requires sudo NOPASSWD\n      (LP: #992805)\n    - [33c2575] Stop/start a KVM instance with volumes attached produces an\n      error state (LP: #1013782)\n    - [6c01c01] Backport tox settings to unbreak jenkins jobs.\n    - [344125f] Set defaultbranch in .gitreview to stable/essex\n    - [9b789be] floating ips are not disassociated from instances on deletion\n      (LP: #997763)\n    - [d89c2f3] qpid timeout causing compute service to crash (LP: #999698)\n    - [caae0e9] floating ips do not display in 'nova list' after association to\n      instance (LP: #939122)\n    - [1dc9f19] impl_qpid doesn't ACK messages (LP: #1012374)\n    - [bc621bc] Restarting nova-network removes ip packet filters\n      (LP: #1000853)\n    - [7870157] Add caching to openstack.common.cfg\n    - [27133ee] Firewall rules from nova-compute are not refreshed after host\n      reboot (LP: #985162)\n    - [3ee026e] Source group based security group rule without protocol and port\n      causes failures (LP: #1010514)\n    - [f0a9f47] [SRU] dns_domains table mysql charset is 'latin1'. Should be\n      'utf8' (LP: #993663)\n    - [cc8fd97] euca-describe-keypair NonExistent returns 200 (LP: #1006664)\n    - [9f9e9da] Security groups fail to be set correctly if incorrect case is\n      used for protocol specification (LP: #985184)\n -- Adam Gandelman <email address hidden>   Mon, 27 Aug 2012 14:50:40 -0700", 
            "date_created": "2012-09-03 15:18:08.793162+00:00", 
            "author": "https://api.launchpad.net/1.0/~janitor"
        }, 
        {
            "content": "The verification of this Stable Release Update has completed successfully and the package has now been released to -updates.  Subsequently, the Ubuntu Stable Release Updates Team is being unsubscribed and will not receive messages about this bug report.  In the event that you encounter a regression using the package from -updates please report a new bug using ubuntu-bug and tag the bug report regression-update so we can easily find any regresssions.", 
            "date_created": "2012-09-03 15:25:01.926654+00:00", 
            "author": "https://api.launchpad.net/1.0/~clint-fewbar"
        }
    ], 
    "closed": "2012-08-16 07:33:12.609436+00:00"
}