{
    "status": "Fix Released", 
    "last_updated": "2014-10-16 08:45:26.417403+00:00", 
    "description": "the steps to reproduce:\n\n1. boot an instance with user volume: nova boot --flavor 11 --image cirros --block-device-mapping /dev/vdb=a6118113-bce9-4e0f-89ce-d2aecb0148f8 test_vm1\n\n2. shelve the instance: nova shelve 958b6615-1a02-46a7-a0cf-a4b253f1b9de\n\n3. unshelve the instance: nova unshelve 958b6615-1a02-46a7-a0cf-a4b253f1b9de\n\nthe instance will be in task_state of \"unshelving\", and the error message in log file is:\n\n[-] Exception during message handling: Invalid volume: status must be 'available'\nTraceback (most recent call last):\n  File \"/opt/stack/oslo.messaging/oslo/messaging/rpc/dispatcher.py\", line 133, in _dispatch_and_reply\n    incoming.message))\n  File \"/opt/stack/oslo.messaging/oslo/messaging/rpc/dispatcher.py\", line 176, in _dispatch\n    return self._do_dispatch(endpoint, method, ctxt, args)\n  File \"/opt/stack/oslo.messaging/oslo/messaging/rpc/dispatcher.py\", line 122, in _do_dispatch\n    result = getattr(endpoint, method)(ctxt, **new_args)\n  File \"/opt/stack/nova/nova/exception.py\", line 88, in wrapped\n    payload)\n  File \"/opt/stack/nova/nova/openstack/common/excutils.py\", line 68, in __exit__\n    six.reraise(self.type_, self.value, self.tb)\n  File \"/opt/stack/nova/nova/exception.py\", line 71, in wrapped\n    return f(self, context, *args, **kw)\n  File \"/opt/stack/nova/nova/compute/manager.py\", line 243, in decorated_function\n    pass\n  File \"/opt/stack/nova/nova/openstack/common/excutils.py\", line 68, in __exit__\n    six.reraise(self.type_, self.value, self.tb)\n  File \"/opt/stack/nova/nova/compute/manager.py\", line 229, in decorated_function\n    return function(self, context, *args, **kwargs)\n  File \"/opt/stack/nova/nova/compute/manager.py\", line 294, in decorated_function\n    function(self, context, *args, **kwargs)\n  File \"/opt/stack/nova/nova/compute/manager.py\", line 271, in decorated_function\n    e, sys.exc_info())\n  File \"/opt/stack/nova/nova/openstack/common/excutils.py\", line 68, in __exit__\n    six.reraise(self.type_, self.value, self.tb)\n  File \"/opt/stack/nova/nova/compute/manager.py\", line 258, in decorated_function\n    return function(self, context, *args, **kwargs)\n  File \"/opt/stack/nova/nova/compute/manager.py\", line 3593, in unshelve_instance\n    do_unshelve_instance()\n  File \"/opt/stack/nova/nova/openstack/common/lockutils.py\", line 249, in inner\n    return f(*args, **kwargs)\n  File \"/opt/stack/nova/nova/compute/manager.py\", line 3592, in do_unshelve_instance\n    filter_properties, node)\n  File \"/opt/stack/nova/nova/compute/manager.py\", line 3617, in _unshelve_instance\n    block_device_info = self._prep_block_device(context, instance, bdms)\n  File \"/opt/stack/nova/nova/compute/manager.py\", line 1463, in _prep_block_device\n    instance=instance)\n  File \"/opt/stack/nova/nova/openstack/common/excutils.py\", line 68, in __exit__\n    six.reraise(self.type_, self.value, self.tb)\n  File \"/opt/stack/nova/nova/compute/manager.py\", line 1442, in _prep_block_device\n    self.driver, self._await_block_device_map_created) +\n  File \"/opt/stack/nova/nova/virt/block_device.py\", line 364, in attach_block_devices\n    map(_log_and_attach, block_device_mapping)\n  File \"/opt/stack/nova/nova/virt/block_device.py\", line 362, in _log_and_attach\n    bdm.attach(*attach_args, **attach_kwargs)\n  File \"/opt/stack/nova/nova/virt/block_device.py\", line 44, in wrapped\n    ret_val = method(obj, context, *args, **kwargs)\n  File \"/opt/stack/nova/nova/virt/block_device.py\", line 218, in attach\n    volume_api.check_attach(context, volume, instance=instance)\n  File \"/opt/stack/nova/nova/volume/cinder.py\", line 229, in check_attach\n    raise exception.InvalidVolume(reason=msg)\nInvalidVolume: Invalid volume: status must be 'available'", 
    "tags": [
        "volumes"
    ], 
    "importance": "High", 
    "heat": 12, 
    "link": "https://bugs.launchpad.net/nova/+bug/1305399", 
    "owner": "https://api.launchpad.net/1.0/~sileht", 
    "id": 1305399, 
    "index": 1471, 
    "openned": "2014-04-10 03:57:18.236878+00:00", 
    "created": "2014-04-10 03:57:18.236878+00:00", 
    "title": "Cannot unshelve instance with user volumes", 
    "comments": [
        {
            "content": "the steps to reproduce:\n\n1. boot an instance with user volume: nova boot --flavor 11 --image cirros --block-device-mapping /dev/vdb=a6118113-bce9-4e0f-89ce-d2aecb0148f8 test_vm1\n\n2. shelve the instance: nova shelve 958b6615-1a02-46a7-a0cf-a4b253f1b9de\n\n3. unshelve the instance: nova unshelve 958b6615-1a02-46a7-a0cf-a4b253f1b9de\n\nthe instance will be in task_state of \"unshelving\", and the error message in log file is:\n\n[-] Exception during message handling: Invalid volume: status must be 'available'\nTraceback (most recent call last):\n  File \"/opt/stack/oslo.messaging/oslo/messaging/rpc/dispatcher.py\", line 133, in _dispatch_and_reply\n    incoming.message))\n  File \"/opt/stack/oslo.messaging/oslo/messaging/rpc/dispatcher.py\", line 176, in _dispatch\n    return self._do_dispatch(endpoint, method, ctxt, args)\n  File \"/opt/stack/oslo.messaging/oslo/messaging/rpc/dispatcher.py\", line 122, in _do_dispatch\n    result = getattr(endpoint, method)(ctxt, **new_args)\n  File \"/opt/stack/nova/nova/exception.py\", line 88, in wrapped\n    payload)\n  File \"/opt/stack/nova/nova/openstack/common/excutils.py\", line 68, in __exit__\n    six.reraise(self.type_, self.value, self.tb)\n  File \"/opt/stack/nova/nova/exception.py\", line 71, in wrapped\n    return f(self, context, *args, **kw)\n  File \"/opt/stack/nova/nova/compute/manager.py\", line 243, in decorated_function\n    pass\n  File \"/opt/stack/nova/nova/openstack/common/excutils.py\", line 68, in __exit__\n    six.reraise(self.type_, self.value, self.tb)\n  File \"/opt/stack/nova/nova/compute/manager.py\", line 229, in decorated_function\n    return function(self, context, *args, **kwargs)\n  File \"/opt/stack/nova/nova/compute/manager.py\", line 294, in decorated_function\n    function(self, context, *args, **kwargs)\n  File \"/opt/stack/nova/nova/compute/manager.py\", line 271, in decorated_function\n    e, sys.exc_info())\n  File \"/opt/stack/nova/nova/openstack/common/excutils.py\", line 68, in __exit__\n    six.reraise(self.type_, self.value, self.tb)\n  File \"/opt/stack/nova/nova/compute/manager.py\", line 258, in decorated_function\n    return function(self, context, *args, **kwargs)\n  File \"/opt/stack/nova/nova/compute/manager.py\", line 3593, in unshelve_instance\n    do_unshelve_instance()\n  File \"/opt/stack/nova/nova/openstack/common/lockutils.py\", line 249, in inner\n    return f(*args, **kwargs)\n  File \"/opt/stack/nova/nova/compute/manager.py\", line 3592, in do_unshelve_instance\n    filter_properties, node)\n  File \"/opt/stack/nova/nova/compute/manager.py\", line 3617, in _unshelve_instance\n    block_device_info = self._prep_block_device(context, instance, bdms)\n  File \"/opt/stack/nova/nova/compute/manager.py\", line 1463, in _prep_block_device\n    instance=instance)\n  File \"/opt/stack/nova/nova/openstack/common/excutils.py\", line 68, in __exit__\n    six.reraise(self.type_, self.value, self.tb)\n  File \"/opt/stack/nova/nova/compute/manager.py\", line 1442, in _prep_block_device\n    self.driver, self._await_block_device_map_created) +\n  File \"/opt/stack/nova/nova/virt/block_device.py\", line 364, in attach_block_devices\n    map(_log_and_attach, block_device_mapping)\n  File \"/opt/stack/nova/nova/virt/block_device.py\", line 362, in _log_and_attach\n    bdm.attach(*attach_args, **attach_kwargs)\n  File \"/opt/stack/nova/nova/virt/block_device.py\", line 44, in wrapped\n    ret_val = method(obj, context, *args, **kwargs)\n  File \"/opt/stack/nova/nova/virt/block_device.py\", line 218, in attach\n    volume_api.check_attach(context, volume, instance=instance)\n  File \"/opt/stack/nova/nova/volume/cinder.py\", line 229, in check_attach\n    raise exception.InvalidVolume(reason=msg)\nInvalidVolume: Invalid volume: status must be 'available'", 
            "date_created": "2014-04-10 03:57:18.236878+00:00", 
            "author": "https://api.launchpad.net/1.0/~liusheng"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/87188", 
            "date_created": "2014-04-14 08:19:13.885568+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "this has not been touched in a long time and the patches are abandoned.  Please set back to in progress if you start to work on it", 
            "date_created": "2014-07-10 01:37:44.616351+00:00", 
            "author": "https://api.launchpad.net/1.0/~tjones-i"
        }, 
        {
            "content": "the abandoned patch is duplicate with patch: https://review.openstack.org/#/c/84793 uploaded by Mehdi Abaakouk, this patch is still in reviewing and need others' review.  thanks", 
            "date_created": "2014-07-10 06:11:20.725978+00:00", 
            "author": "https://api.launchpad.net/1.0/~liusheng"
        }, 
        {
            "content": "Dan, you hit to -Workflow button on https://review.openstack.org/#/c/84793, which was Mehdi's patch that fixes this bug. Can you explain why that was and why the patch is abandoned?\n\nThanks!\n\n-jay", 
            "date_created": "2014-07-22 22:37:00.479478+00:00", 
            "author": "https://api.launchpad.net/1.0/~jaypipes"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/84793\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=8831f3d0e2e2a81a6b406cc9c8bf89bc15989065\nSubmitter: Jenkins\nBranch:    master\n\ncommit 8831f3d0e2e2a81a6b406cc9c8bf89bc15989065\nAuthor: Mehdi Abaakouk <email address hidden>\nDate:   Wed Apr 2 15:31:23 2014 +0200\n\n    Allow to unshelve instance booted from volume\n    \n    When we shelve an instance, volumes are not detached from cinder to kept\n    them 'In-Use' in cinder\n    But when you unshelve this instance, nova ask cinder the reattach theses\n    volumes. This fails, because volume cannot be attached twice.\n    \n    This patch permits when we ask the libvirt DriverBlockDevice to attach a\n    device to the instance to bypass the cinder attachement code that is not needed\n    when we unshelve an instance, because the cinder volume is kept 'In-use'\n    during the 'shelved' state.\n    \n    Co-Authored-By: Sahid Orentino Ferdjaoui <email address hidden>\n    Closes-bug: #1305399\n    Change-Id: I780a9407feeb48ecd3e295508ce3e6bc3b09d3e6\n", 
            "date_created": "2014-08-05 14:38:24.347130+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2014-09-05 09:47:06.524808+00:00"
}