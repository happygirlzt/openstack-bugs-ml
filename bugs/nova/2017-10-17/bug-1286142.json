{
    "status": "Expired", 
    "last_updated": "2016-07-05 09:46:47.347246+00:00", 
    "description": "A live migration of a large instance can take an arbitrarily long period of time.\n\nOnce the underlying driver calls nova.compute.manager._post_live_migration, the context that's passed in may have an expired credential attached to it. That makes the calls that the post-step runs fail.\n\nThese calls fall into two categories. The first are ones that gather information - that information may, potentially, be gathered earlier on as a part of the pre-migration step.\n\nHowever, some of these calls (which run on both the source and destination) ask other components to actually perform some state changes - block device mappings and/or network state changes.\n\n\nThere are a number of approaches which might be taken to remedy this. For instance, keystone might be given the ability to spawn long-lived, one-shot tokens that can be renewed without the underlying credentials; the live migration process then needs to spawn and keep those tokens alive while it waits.\n\nAlternatively, the services that migration depends upon (block migration, network migration) could be aught about the live migration lifecycle explicitly. (This is not a bad idea anyway.) They can use the partial setup registered as a part of the pre-migration to authorise the post-migration step - however, the nova layer would still need to credential the api requests it makes to complete the live migration process.\n\nFinally, the nova layer could be given not only neutron but also cinder admin credentials, which it uses for the post-migration stage.", 
    "tags": [
        "compute", 
        "live-migration"
    ], 
    "importance": "Undecided", 
    "heat": 14, 
    "link": "https://bugs.launchpad.net/nova/+bug/1286142", 
    "owner": "None", 
    "id": 1286142, 
    "index": 5875, 
    "openned": "2014-02-28 13:55:36.348348+00:00", 
    "created": "2014-02-28 13:55:36.348348+00:00", 
    "title": "live migration (block migration) _post_live_migration may run with an expired token", 
    "comments": [
        {
            "content": "A live migration of a large instance can take an arbitrarily long period of time.\n\nOnce the underlying driver calls nova.compute.manager._post_live_migration, the context that's passed in may have an expired credential attached to it. That makes the calls that the post-step runs fail.\n\nThese calls fall into two categories. The first are ones that gather information - that information may, potentially, be gathered earlier on as a part of the pre-migration step.\n\nHowever, some of these calls (which run on both the source and destination) ask other components to actually perform some state changes - block device mappings and/or network state changes.\n\n\nThere are a number of approaches which might be taken to remedy this. For instance, keystone might be given the ability to spawn long-lived, one-shot tokens that can be renewed without the underlying credentials; the live migration process then needs to spawn and keep those tokens alive while it waits.\n\nAlternatively, the services that migration depends upon (block migration, network migration) could be aught about the live migration lifecycle explicitly. (This is not a bad idea anyway.) They can use the partial setup registered as a part of the pre-migration to authorise the post-migration step - however, the nova layer would still need to credential the api requests it makes to complete the live migration process.\n\nFinally, the nova layer could be given not only neutron but also cinder admin credentials, which it uses for the post-migration stage.", 
            "date_created": "2014-02-28 13:55:36.348348+00:00", 
            "author": "https://api.launchpad.net/1.0/~jan-grant"
        }, 
        {
            "content": "Will be addressed by:\n\nhttps://blueprints.launchpad.net/nova/+spec/refresh-abort-live-migration", 
            "date_created": "2014-03-04 16:33:58.763431+00:00", 
            "author": "https://api.launchpad.net/1.0/~parthipan"
        }, 
        {
            "content": "\nThis is an automated cleanup. This bug report has been closed because it\nis older than 18 months and there is no open code change to fix this.\nAfter this time it is unlikely that the circumstances which lead to\nthe observed issue can be reproduced.\n\nIf you can reproduce the bug, please:\n* reopen the bug report (set to status \"New\")\n* AND add the detailed steps to reproduce the issue (if applicable)\n* AND leave a comment \"CONFIRMED FOR: <RELEASE_NAME>\"\n  Only still supported release names are valid (LIBERTY, MITAKA, OCATA, NEWTON).\n  Valid example: CONFIRMED FOR: LIBERTY\n", 
            "date_created": "2016-07-05 09:46:46.828186+00:00", 
            "author": "https://api.launchpad.net/1.0/~mzoeller"
        }
    ], 
    "closed": "2016-07-05 09:46:44.795447+00:00"
}