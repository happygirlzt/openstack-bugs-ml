{
    "status": "Fix Released", 
    "last_updated": "2015-04-30 09:28:38.817969+00:00", 
    "description": "When allocating networks for instance compute first creates ports and then fetches them from neutron to build network info.\nUnder high load it might be possible that neutron/keystone timeouts on a request to fetch ports for instance (traceback attached).\nIn this case exception is caught  and _shutdown_instance() with try_deallocate_networks=False is called with the assumption that \"Network deallocation is already handled in this code path so it should not happen in _shutdown_instance.\" [1]\nThen the exception is reraised, caught in _build_and_run_instance() and reraised as RescheduledException [2].\nRescheduledException is caught in _do_build_and_run_instance [3]\nEventually only self.network_api.cleanup_instance_network_on_host() is called and instance resheduling initiated.\nself.network_api.cleanup_instance_network_on_host() does nothing in case of neutron so we have orphaned ports.\n\nI see two possible fixes: either do network deallocation on _shutdown_instance() or implement cleanup_instance_network_on_host() to do ports cleanup.\n\n[1] bug 1332198 commit 5120c4f7c2670eaa71898fe6941029bbb0081949\n[2] https://github.com/openstack/nova/blob/master/nova/compute/manager.py#L2233\n[3] https://github.com/openstack/nova/blob/master/nova/compute/manager.py#L2089\n[4] https://github.com/openstack/nova/blob/master/nova/compute/manager.py#L2113", 
    "tags": [
        "network"
    ], 
    "importance": "Low", 
    "heat": 8, 
    "link": "https://bugs.launchpad.net/nova/+bug/1423845", 
    "owner": "https://api.launchpad.net/1.0/~obondarev", 
    "id": 1423845, 
    "index": 1543, 
    "openned": "2015-02-20 09:28:16.302950+00:00", 
    "created": "2015-02-20 09:28:16.302950+00:00", 
    "title": "In certain cases compute does not clean up neutron ports after unsuccessful vm spawn", 
    "comments": [
        {
            "content": "When allocating networks for instance compute first creates ports and then fetches them from neutron to build network info.\nUnder high load it might be possible that neutron/keystone timeouts on a request to fetch ports for instance (traceback attached).\nIn this case exception is caught  and _shutdown_instance() with try_deallocate_networks=False is called with the assumption that \"Network deallocation is already handled in this code path so it should not happen in _shutdown_instance.\" [1]\nThen the exception is reraised, caught in _build_and_run_instance() and reraised as RescheduledException [2].\nRescheduledException is caught in _do_build_and_run_instance [3]\nEventually only self.network_api.cleanup_instance_network_on_host() is called and instance resheduling initiated.\nself.network_api.cleanup_instance_network_on_host() does nothing in case of neutron so we have orphaned ports.\n\nI see two possible fixes: either do network deallocation on _shutdown_instance() or implement cleanup_instance_network_on_host() to do ports cleanup.\n\n[1] bug 1332198 commit 5120c4f7c2670eaa71898fe6941029bbb0081949\n[2] https://github.com/openstack/nova/blob/master/nova/compute/manager.py#L2233\n[3] https://github.com/openstack/nova/blob/master/nova/compute/manager.py#L2089\n[4] https://github.com/openstack/nova/blob/master/nova/compute/manager.py#L2113", 
            "date_created": "2015-02-20 09:28:16.302950+00:00", 
            "author": "https://api.launchpad.net/1.0/~obondarev"
        }, 
        {
            "content": "", 
            "date_created": "2015-02-20 09:28:16.302950+00:00", 
            "author": "https://api.launchpad.net/1.0/~obondarev"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/157755", 
            "date_created": "2015-02-20 13:32:46.089295+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "The ports aren't actually orphaned, right?  They're used when the instance is rescheduled to a new host.  Or am I missing something here?", 
            "date_created": "2015-02-24 19:54:39.248901+00:00", 
            "author": "https://api.launchpad.net/1.0/~alaski"
        }, 
        {
            "content": "I'm not seeing how they are used after rescheduling, in fact new ports are created. Probably it's because allocate_for_instance failed so network allocation was not considered successful. ", 
            "date_created": "2015-02-25 09:57:53.324886+00:00", 
            "author": "https://api.launchpad.net/1.0/~obondarev"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/157755\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=43dfc401abca3ffbd28ee7737fbe172b6ae1b439\nSubmitter: Jenkins\nBranch:    master\n\ncommit 43dfc401abca3ffbd28ee7737fbe172b6ae1b439\nAuthor: Oleg Bondarev <email address hidden>\nDate:   Thu Feb 26 19:38:48 2015 +0300\n\n    Fix orphaned ports on build failure\n    \n    In certain cases compute does not clean up neutron ports after\n    unsuccessful vm spawn.\n    commit 5120c4f7c2670eaa71898fe6941029bbb0081949 assumes that\n    deallocation is already handled in this code path\n    however it's not always the case (see bug report for details)\n    This patch adds the check for network_info is empty at the moment\n    failure occures. If it's empty it's better to cleanup network\n    to eliminate the chance of orphaned ports in neutron.\n    \n    Closes-Bug: #1423845\n    Change-Id: I88f535193dbd35253a4444950f6b2812e1a2a407\n", 
            "date_created": "2015-03-23 12:50:04.952648+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2015-04-10 09:22:09.673104+00:00"
}