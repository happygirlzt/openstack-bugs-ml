{
    "status": "Invalid", 
    "last_updated": "2011-03-22 17:15:21.642681+00:00", 
    "description": "Version: revision 834 (installed from packages on Lucid)\n\nWhen configured to use S3 image service (--image_service=nova.image.s3.S3ImageService), nova-api throws an exception:\n\n2011-03-19 11:43:24,044 CRITICAL nova [-] maximum recursion depth exceeded\n(nova): TRACE: Traceback (most recent call last):\n(nova): TRACE:   File \"/usr/bin/nova-api\", line 60, in <module>\n(nova): TRACE:     service = service.serve_wsgi(service.ApiService)\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/service.py\", line 306, in serve_wsgi\n(nova): TRACE:     service.start()\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/service.py\", line 240, in start\n(nova): TRACE:     self.wsgi_app = _run_wsgi(self.conf, self.apis)\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/service.py\", line 321, in _run_wsgi\n(nova): TRACE:     app = wsgi.load_paste_app(paste_config_file, api)\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/wsgi.py\", line 559, in load_paste_app\n(nova): TRACE:     app = deploy.loadapp(\"config:%s\" % filename, name=appname)\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.6/paste/deploy/loadwsgi.py\", line 204, in loadapp\n(nova): TRACE:     return loadobj(APP, uri, name=name, **kw)\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.6/paste/deploy/loadwsgi.py\", line 225, in loadobj\n(nova): TRACE:     return context.create()\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.6/paste/deploy/loadwsgi.py\", line 625, in create\n(nova): TRACE:     return self.object_type.invoke(self)\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.6/paste/deploy/loadwsgi.py\", line 108, in invoke\n(nova): TRACE:     **context.local_conf)\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.6/paste/deploy/util/fixtypeerror.py\", line 57, in fix_call\n(nova): TRACE:     val = callable(*args, **kw)\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.6/paste/urlmap.py\", line 25, in urlmap_factory\n(nova): TRACE:     app = loader.get_app(app_name, global_conf=global_conf)\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.6/paste/deploy/loadwsgi.py\", line 297, in get_app\n(nova): TRACE:     name=name, global_conf=global_conf).create()\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.6/paste/deploy/loadwsgi.py\", line 625, in create\n(nova): TRACE:     return self.object_type.invoke(self)\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.6/paste/deploy/loadwsgi.py\", line 168, in invoke\n(nova): TRACE:     app = filter(app)\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/wsgi.py\", line 212, in _factory\n(nova): TRACE:     return cls(app, **local_config)\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/api/ec2/__init__.py\", line 191, in __init__\n(nova): TRACE:     self.controller = utils.import_class(controller)()\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/api/ec2/cloud.py\", line 84, in __init__\n(nova): TRACE:     self.image_service = s3.S3ImageService()\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/image/s3.py\", line 50, in __init__\n(nova): TRACE:     service = utils.import_object(FLAGS.image_service)\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/utils.py\", line 75, in import_object\n(nova): TRACE:     return cls()\n...\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/image/s3.py\", line 50, in __init__\n(nova): TRACE:     service = utils.import_object(FLAGS.image_service)\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/flags.py\", line 139, in __getattr__\n(nova): TRACE:     val = gflags.FlagValues.__getattr__(self, name)\n(nova): TRACE:   File \"/usr/lib/python2.6/dist-packages/gflags.py\", line 808, in __getattr__\n(nova): TRACE:     fl = self.FlagDict()\n(nova): TRACE: RuntimeError: maximum recursion depth exceeded", 
    "tags": [], 
    "importance": "Undecided", 
    "heat": 24, 
    "link": "https://bugs.launchpad.net/nova/+bug/738371", 
    "owner": "None", 
    "id": 738371, 
    "index": 3339, 
    "openned": "2011-03-19 18:53:45.676070+00:00", 
    "created": "2011-03-19 18:53:45.676070+00:00", 
    "title": "nova-api throws an exception when using S3 image service", 
    "comments": [
        {
            "content": "Version: revision 834 (installed from packages on Lucid)\n\nWhen configured to use S3 image service (--image_service=nova.image.s3.S3ImageService), nova-api throws an exception:\n\n2011-03-19 11:43:24,044 CRITICAL nova [-] maximum recursion depth exceeded\n(nova): TRACE: Traceback (most recent call last):\n(nova): TRACE:   File \"/usr/bin/nova-api\", line 60, in <module>\n(nova): TRACE:     service = service.serve_wsgi(service.ApiService)\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/service.py\", line 306, in serve_wsgi\n(nova): TRACE:     service.start()\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/service.py\", line 240, in start\n(nova): TRACE:     self.wsgi_app = _run_wsgi(self.conf, self.apis)\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/service.py\", line 321, in _run_wsgi\n(nova): TRACE:     app = wsgi.load_paste_app(paste_config_file, api)\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/wsgi.py\", line 559, in load_paste_app\n(nova): TRACE:     app = deploy.loadapp(\"config:%s\" % filename, name=appname)\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.6/paste/deploy/loadwsgi.py\", line 204, in loadapp\n(nova): TRACE:     return loadobj(APP, uri, name=name, **kw)\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.6/paste/deploy/loadwsgi.py\", line 225, in loadobj\n(nova): TRACE:     return context.create()\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.6/paste/deploy/loadwsgi.py\", line 625, in create\n(nova): TRACE:     return self.object_type.invoke(self)\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.6/paste/deploy/loadwsgi.py\", line 108, in invoke\n(nova): TRACE:     **context.local_conf)\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.6/paste/deploy/util/fixtypeerror.py\", line 57, in fix_call\n(nova): TRACE:     val = callable(*args, **kw)\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.6/paste/urlmap.py\", line 25, in urlmap_factory\n(nova): TRACE:     app = loader.get_app(app_name, global_conf=global_conf)\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.6/paste/deploy/loadwsgi.py\", line 297, in get_app\n(nova): TRACE:     name=name, global_conf=global_conf).create()\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.6/paste/deploy/loadwsgi.py\", line 625, in create\n(nova): TRACE:     return self.object_type.invoke(self)\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.6/paste/deploy/loadwsgi.py\", line 168, in invoke\n(nova): TRACE:     app = filter(app)\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/wsgi.py\", line 212, in _factory\n(nova): TRACE:     return cls(app, **local_config)\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/api/ec2/__init__.py\", line 191, in __init__\n(nova): TRACE:     self.controller = utils.import_class(controller)()\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/api/ec2/cloud.py\", line 84, in __init__\n(nova): TRACE:     self.image_service = s3.S3ImageService()\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/image/s3.py\", line 50, in __init__\n(nova): TRACE:     service = utils.import_object(FLAGS.image_service)\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/utils.py\", line 75, in import_object\n(nova): TRACE:     return cls()\n...\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/image/s3.py\", line 50, in __init__\n(nova): TRACE:     service = utils.import_object(FLAGS.image_service)\n(nova): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/flags.py\", line 139, in __getattr__\n(nova): TRACE:     val = gflags.FlagValues.__getattr__(self, name)\n(nova): TRACE:   File \"/usr/lib/python2.6/dist-packages/gflags.py\", line 808, in __getattr__\n(nova): TRACE:     fl = self.FlagDict()\n(nova): TRACE: RuntimeError: maximum recursion depth exceeded", 
            "date_created": "2011-03-19 18:53:45.676070+00:00", 
            "author": "https://api.launchpad.net/1.0/~lorinh"
        }, 
        {
            "content": "The problem seems to be in the S3ImageService constructor. If the image_service flag points to the S3ImageService, then the constructor will create an S3ImageService object:\n\nclass S3ImageService(service.BaseImageService):\n    def __init__(self, service=None, *args, **kwargs):\n        if service == None:\n            service = utils.import_object(FLAGS.image_service)\n\n\nThe problem can be reproduced with the following Python code.\n\nfrom nova import flags\nflags.FLAGS.image_service = 'nova.image.s3.S3ImageService'\nimport nova.image.s3\ns3 = nova.image.s3.S3ImageService()", 
            "date_created": "2011-03-20 02:27:58.949307+00:00", 
            "author": "https://api.launchpad.net/1.0/~lorinh"
        }, 
        {
            "content": "The s3 image service isn't meant to be specified in the flag.  It wraps the other image services for use by the ec2 api.  The ec2 api will always use the s3 image service.  If you specify local image service using the flag it will wrap the local image service.  If you specify the glance image service, it will wrap glance.\nOn Mar 19, 2011, at 7:27 PM, Lorin Hochstein wrote:\n\n> The problem seems to be in the S3ImageService constructor. If the\n> image_service flag points to the S3ImageService, then the constructor\n> will create an S3ImageService object:\n> \n> class S3ImageService(service.BaseImageService):\n>    def __init__(self, service=None, *args, **kwargs):\n>        if service == None:\n>            service = utils.import_object(FLAGS.image_service)\n> \n> \n> The problem can be reproduced with the following Python code.\n> \n> from nova import flags\n> flags.FLAGS.image_service = 'nova.image.s3.S3ImageService'\n> import nova.image.s3\n> s3 = nova.image.s3.S3ImageService()\n> \n> -- \n> You received this bug notification because you are a member of Nova Bug\n> Team, which is subscribed to OpenStack Compute (nova).\n> https://bugs.launchpad.net/bugs/738371\n> \n> Title:\n>  nova-api throws an exception when using S3 image service\n> \n> Status in OpenStack Compute (Nova):\n>  New\n> \n> Bug description:\n>  Version: revision 834 (installed from packages on Lucid)\n> \n>  When configured to use S3 image service\n>  (--image_service=nova.image.s3.S3ImageService), nova-api throws an\n>  exception:\n> \n>  2011-03-19 11:43:24,044 CRITICAL nova [-] maximum recursion depth exceeded\n>  (nova): TRACE: Traceback (most recent call last):\n>  (nova): TRACE:   File \"/usr/bin/nova-api\", line 60, in <module>\n>  (nova): TRACE:     service = service.serve_wsgi(service.ApiService)\n>  (nova): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/service.py\", line 306, in serve_wsgi\n>  (nova): TRACE:     service.start()\n>  (nova): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/service.py\", line 240, in start\n>  (nova): TRACE:     self.wsgi_app = _run_wsgi(self.conf, self.apis)\n>  (nova): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/service.py\", line 321, in _run_wsgi\n>  (nova): TRACE:     app = wsgi.load_paste_app(paste_config_file, api)\n>  (nova): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/wsgi.py\", line 559, in load_paste_app\n>  (nova): TRACE:     app = deploy.loadapp(\"config:%s\" % filename, name=appname)\n>  (nova): TRACE:   File \"/usr/lib/pymodules/python2.6/paste/deploy/loadwsgi.py\", line 204, in loadapp\n>  (nova): TRACE:     return loadobj(APP, uri, name=name, **kw)\n>  (nova): TRACE:   File \"/usr/lib/pymodules/python2.6/paste/deploy/loadwsgi.py\", line 225, in loadobj\n>  (nova): TRACE:     return context.create()\n>  (nova): TRACE:   File \"/usr/lib/pymodules/python2.6/paste/deploy/loadwsgi.py\", line 625, in create\n>  (nova): TRACE:     return self.object_type.invoke(self)\n>  (nova): TRACE:   File \"/usr/lib/pymodules/python2.6/paste/deploy/loadwsgi.py\", line 108, in invoke\n>  (nova): TRACE:     **context.local_conf)\n>  (nova): TRACE:   File \"/usr/lib/pymodules/python2.6/paste/deploy/util/fixtypeerror.py\", line 57, in fix_call\n>  (nova): TRACE:     val = callable(*args, **kw)\n>  (nova): TRACE:   File \"/usr/lib/pymodules/python2.6/paste/urlmap.py\", line 25, in urlmap_factory\n>  (nova): TRACE:     app = loader.get_app(app_name, global_conf=global_conf)\n>  (nova): TRACE:   File \"/usr/lib/pymodules/python2.6/paste/deploy/loadwsgi.py\", line 297, in get_app\n>  (nova): TRACE:     name=name, global_conf=global_conf).create()\n>  (nova): TRACE:   File \"/usr/lib/pymodules/python2.6/paste/deploy/loadwsgi.py\", line 625, in create\n>  (nova): TRACE:     return self.object_type.invoke(self)\n>  (nova): TRACE:   File \"/usr/lib/pymodules/python2.6/paste/deploy/loadwsgi.py\", line 168, in invoke\n>  (nova): TRACE:     app = filter(app)\n>  (nova): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/wsgi.py\", line 212, in _factory\n>  (nova): TRACE:     return cls(app, **local_config)\n>  (nova): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/api/ec2/__init__.py\", line 191, in __init__\n>  (nova): TRACE:     self.controller = utils.import_class(controller)()\n>  (nova): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/api/ec2/cloud.py\", line 84, in __init__\n>  (nova): TRACE:     self.image_service = s3.S3ImageService()\n>  (nova): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/image/s3.py\", line 50, in __init__\n>  (nova): TRACE:     service = utils.import_object(FLAGS.image_service)\n>  (nova): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/utils.py\", line 75, in import_object\n>  (nova): TRACE:     return cls()\n>  ...\n>  (nova): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/image/s3.py\", line 50, in __init__\n>  (nova): TRACE:     service = utils.import_object(FLAGS.image_service)\n>  (nova): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/flags.py\", line 139, in __getattr__\n>  (nova): TRACE:     val = gflags.FlagValues.__getattr__(self, name)\n>  (nova): TRACE:   File \"/usr/lib/python2.6/dist-packages/gflags.py\", line 808, in __getattr__\n>  (nova): TRACE:     fl = self.FlagDict()\n>  (nova): TRACE: RuntimeError: maximum recursion depth exceeded\n\n", 
            "date_created": "2011-03-20 20:32:13+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "Is this a recent change or has it never been allowed? The docs say that the default for the image service flag is  'nova.image.s3.S3ImageService': http://docs.openstack.org/openstack-compute/admin/content/ch05s08.html", 
            "date_created": "2011-03-21 03:26:19.137501+00:00", 
            "author": "https://api.launchpad.net/1.0/~lorinh"
        }, 
        {
            "content": "This is a recent change.  Looks like the docs need to be updated.\n\nOn Mar 20, 2011, at 8:26 PM, Lorin Hochstein wrote:\n\n> compute/admin/content/ch05s08.html\n\n", 
            "date_created": "2011-03-21 04:12:45+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "Vish:\n\nQuick question to clarify: We have a setup where we have a head node that will run the nova-api service, a separate storage node where we would like to store images, and several compute nodes that will run the nova-compute service and will serve as hosts for the VMs. For this type of configuration, is the glance image service the only option that would allow the images to reside on a separate machine from the VM hosts  (excluding remote mounted filesystem solutions like NFS)?", 
            "date_created": "2011-03-21 15:32:28.187662+00:00", 
            "author": "https://api.launchpad.net/1.0/~lorinh"
        }, 
        {
            "content": "Yes that is correct. This is specifically what glance was made for. You can\nhave glance backend to local storage which will store the images on the\nstorage node or to swift which offers redundancy.\nOn Mar 21, 2011 8:41 AM, \"Lorin Hochstein\" <email address hidden>\nwrote:\n> Vish:\n>\n> Quick question to clarify: We have a setup where we have a head node\n> that will run the nova-api service, a separate storage node where we\n> would like to store images, and several compute nodes that will run the\n> nova-compute service and will serve as hosts for the VMs. For this type\n> of configuration, is the glance image service the only option that would\n> allow the images to reside on a separate machine from the VM hosts\n> (excluding remote mounted filesystem solutions like NFS)?\n>\n> --\n> You received this bug notification because you are a member of Nova Bug\n> Team, which is subscribed to OpenStack Compute (nova).\n> https://bugs.launchpad.net/bugs/738371\n>\n> Title:\n> nova-api throws an exception when using S3 image service\n>\n> Status in OpenStack Compute (Nova):\n> New\n>\n> Bug description:\n> Version: revision 834 (installed from packages on Lucid)\n>\n> When configured to use S3 image service\n> (--image_service=nova.image.s3.S3ImageService), nova-api throws an\n> exception:\n>\n> 2011-03-19 11:43:24,044 CRITICAL nova [-] maximum recursion depth exceeded\n> (nova): TRACE: Traceback (most recent call last):\n> (nova): TRACE: File \"/usr/bin/nova-api\", line 60, in <module>\n> (nova): TRACE: service = service.serve_wsgi(service.ApiService)\n> (nova): TRACE: File \"/usr/lib/pymodules/python2.6/nova/service.py\", line\n306, in serve_wsgi\n> (nova): TRACE: service.start()\n> (nova): TRACE: File \"/usr/lib/pymodules/python2.6/nova/service.py\", line\n240, in start\n> (nova): TRACE: self.wsgi_app = _run_wsgi(self.conf, self.apis)\n> (nova): TRACE: File \"/usr/lib/pymodules/python2.6/nova/service.py\", line\n321, in _run_wsgi\n> (nova): TRACE: app = wsgi.load_paste_app(paste_config_file, api)\n> (nova): TRACE: File \"/usr/lib/pymodules/python2.6/nova/wsgi.py\", line 559,\nin load_paste_app\n> (nova): TRACE: app = deploy.loadapp(\"config:%s\" % filename, name=appname)\n> (nova): TRACE: File\n\"/usr/lib/pymodules/python2.6/paste/deploy/loadwsgi.py\", line 204, in\nloadapp\n> (nova): TRACE: return loadobj(APP, uri, name=name, **kw)\n> (nova): TRACE: File\n\"/usr/lib/pymodules/python2.6/paste/deploy/loadwsgi.py\", line 225, in\nloadobj\n> (nova): TRACE: return context.create()\n> (nova): TRACE: File\n\"/usr/lib/pymodules/python2.6/paste/deploy/loadwsgi.py\", line 625, in create\n> (nova): TRACE: return self.object_type.invoke(self)\n> (nova): TRACE: File\n\"/usr/lib/pymodules/python2.6/paste/deploy/loadwsgi.py\", line 108, in invoke\n> (nova): TRACE: **context.local_conf)\n> (nova): TRACE: File\n\"/usr/lib/pymodules/python2.6/paste/deploy/util/fixtypeerror.py\", line 57,\nin fix_call\n> (nova): TRACE: val = callable(*args, **kw)\n> (nova): TRACE: File \"/usr/lib/pymodules/python2.6/paste/urlmap.py\", line\n25, in urlmap_factory\n> (nova): TRACE: app = loader.get_app(app_name, global_conf=global_conf)\n> (nova): TRACE: File\n\"/usr/lib/pymodules/python2.6/paste/deploy/loadwsgi.py\", line 297, in\nget_app\n> (nova): TRACE: name=name, global_conf=global_conf).create()\n> (nova): TRACE: File\n\"/usr/lib/pymodules/python2.6/paste/deploy/loadwsgi.py\", line 625, in create\n> (nova): TRACE: return self.object_type.invoke(self)\n> (nova): TRACE: File\n\"/usr/lib/pymodules/python2.6/paste/deploy/loadwsgi.py\", line 168, in invoke\n> (nova): TRACE: app = filter(app)\n> (nova): TRACE: File \"/usr/lib/pymodules/python2.6/nova/wsgi.py\", line 212,\nin _factory\n> (nova): TRACE: return cls(app, **local_config)\n> (nova): TRACE: File\n\"/usr/lib/pymodules/python2.6/nova/api/ec2/__init__.py\", line 191, in\n__init__\n> (nova): TRACE: self.controller = utils.import_class(controller)()\n> (nova): TRACE: File \"/usr/lib/pymodules/python2.6/nova/api/ec2/cloud.py\",\nline 84, in __init__\n> (nova): TRACE: self.image_service = s3.S3ImageService()\n> (nova): TRACE: File \"/usr/lib/pymodules/python2.6/nova/image/s3.py\", line\n50, in __init__\n> (nova): TRACE: service = utils.import_object(FLAGS.image_service)\n> (nova): TRACE: File \"/usr/lib/pymodules/python2.6/nova/utils.py\", line 75,\nin import_object\n> (nova): TRACE: return cls()\n> ...\n> (nova): TRACE: File \"/usr/lib/pymodules/python2.6/nova/image/s3.py\", line\n50, in __init__\n> (nova): TRACE: service = utils.import_object(FLAGS.image_service)\n> (nova): TRACE: File \"/usr/lib/pymodules/python2.6/nova/flags.py\", line\n139, in __getattr__\n> (nova): TRACE: val = gflags.FlagValues.__getattr__(self, name)\n> (nova): TRACE: File \"/usr/lib/python2.6/dist-packages/gflags.py\", line\n808, in __getattr__\n> (nova): TRACE: fl = self.FlagDict()\n> (nova): TRACE: RuntimeError: maximum recursion depth exceeded\n", 
            "date_created": "2011-03-21 16:35:21+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "OK, since this technically isn't a bug (just an implementation change), I've set the bug status to \"invalid\".", 
            "date_created": "2011-03-21 16:54:24.821346+00:00", 
            "author": "https://api.launchpad.net/1.0/~lorinh"
        }
    ], 
    "closed": "2011-03-21 16:53:46.205898+00:00"
}