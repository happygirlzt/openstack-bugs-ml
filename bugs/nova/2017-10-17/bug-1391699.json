{
    "status": "Expired", 
    "last_updated": "2016-07-05 09:54:50.871712+00:00", 
    "description": "Symptoms:\n -\u00a0a VM could not be started by nova after a nova-compute was restarted\n\nCause:\n\u00a0\u00a0There appears to be a logic flaw in nova/virt/libvirt.py in _plug_bridge_with_port where the logic for creating an OVS port is guarded behind the logic for creating a linux device, but nova can be interrupted (either by a restart, or OVS being transiently inaccesiblefor some reason) between these two steps, leading to a stale, invalidly configured device with no OVS port, and Nova won't recover from this situation without administrative intervention.\n\n\n# cat nova-compute.log\nTraceback (most recent call last):\n\u00a0\u00a0File \"/opt/stack/venvs/nova/local/lib/python2.7/site-packages/eventlet/hubs/hub.py\", line 455, in fire_timers\n\u00a0\u00a0\u00a0\u00a0timer()\n\u00a0\u00a0File \"/opt/stack/venvs/nova/local/lib/python2.7/site-packages/eventlet/hubs/timer.py\", line 58, in __call__\n\u00a0\u00a0\u00a0\u00a0cb(*args, **kw)\n\u00a0\u00a0File \"/opt/stack/venvs/nova/local/lib/python2.7/site-packages/eventlet/greenthread.py\", line 212, in main\n\u00a0\u00a0\u00a0\u00a0result = function(*args, **kwargs)\n\u00a0\u00a0File \"/opt/stack/venvs/nova/local/lib/python2.7/site-packages/nova/openstack/common/service.py\", line 490, in run_service\n\u00a0\u00a0\u00a0\u00a0service.start()\n\u00a0\u00a0File \"/opt/stack/venvs/nova/local/lib/python2.7/site-packages/nova/service.py\", line 164, in start\n\u00a0\u00a0\u00a0\u00a0self.manager.init_host()\n\u00a0\u00a0File \"/opt/stack/venvs/nova/local/lib/python2.7/site-packages/nova/compute/manager.py\", line 1059, in init_host\n\u00a0\u00a0\u00a0\u00a0self._init_instance(context, instance)\n\u00a0\u00a0File \"/opt/stack/venvs/nova/local/lib/python2.7/site-packages/nova/compute/manager.py\", line 918, in _init_instance\n\u00a0\u00a0\u00a0\u00a0self.driver.plug_vifs(instance, net_info)\n\u00a0\u00a0File \"/opt/stack/venvs/nova/local/lib/python2.7/site-packages/nova/virt/libvirt/driver.py\", line 820, in plug_vifs\n\u00a0\u00a0\u00a0\u00a0self.vif_driver.plug(instance, vif)\n\u00a0\u00a0File \"/opt/stack/venvs/nova/local/lib/python2.7/site-packages/nova/virt/libvirt/vif.py\", line 627, in plug\n\u00a0\u00a0\u00a0\u00a0self.plug_ovs(instance, vif)\n\u00a0\u00a0File \"/opt/stack/venvs/nova/local/lib/python2.7/site-packages/nova/virt/libvirt/vif.py\", line 492, in plug_ovs\n\u00a0\u00a0\u00a0\u00a0self.plug_ovs_hybrid(instance, vif)\n\u00a0\u00a0File \"/opt/stack/venvs/nova/local/lib/python2.7/site-packages/nova/virt/libvirt/vif.py\", line 488, in plug_ovs_hybrid\n\u00a0\u00a0\u00a0\u00a0instance['uuid'])\n\u00a0\u00a0File \"/opt/stack/venvs/nova/local/lib/python2.7/site-packages/nova/network/linux_net.py\", line 1320, in create_ovs_vif_port\n\u00a0\u00a0\u00a0\u00a0'external-ids:vm-uuid=%s' % instance_id])\n\u00a0\u00a0File \"/opt/stack/venvs/nova/local/lib/python2.7/site-packages/nova/network/linux_net.py\", line 1310, in _ovs_vsctl\n\u00a0\u00a0\u00a0\u00a0raise exception.AgentError(method=full_args)\nAgentError: Error during following call to agent: ['ovs-vsctl', '--timeout=120', '--', '--if-exists', 'del-port', u'qvo8670d393-d4', '--', 'add-port', u'br-int', u'qvo8670d393-d4', '--', 'set', 'Interface', u'qvo8670d393-d4', u'external-ids:iface-id=8670d393-d47e-41e1-b2b5-b94819266934', 'external-ids:iface-status=active', u'external-ids:attached-mac=fa:16:3e:b1:23:d1', 'external-ids:vm-uuid=26f03afc-e198-41d0-b7c4-77616f9bdfbe']", 
    "tags": [
        "libvirt", 
        "network"
    ], 
    "importance": "Undecided", 
    "heat": 8, 
    "link": "https://bugs.launchpad.net/nova/+bug/1391699", 
    "owner": "None", 
    "id": 1391699, 
    "index": 6534, 
    "openned": "2014-11-12 00:47:05.579842+00:00", 
    "created": "2014-11-12 00:47:05.579842+00:00", 
    "title": "libvirt vif plugging assumes device exists implies OVS port exists", 
    "comments": [
        {
            "content": "On a juno-2 TripleO based system, after performing a node upgrade via `nova rebuild`, we encountered an issue where some virtual machines were unreachable.  Upon further investigation, we found that the OVS VIF was missing, and the root cause was that the re-creation failed as seen in the log below.  The flow was never re-asserted as the logic in nova/virt/libvirt/vif.py function plug_ovs_hybrid only executes the steps that would result in the VIF being recreated if the interface did not already exist.  As the interface already existed upon attempting to restart, it appears to have never been re-asserted hence requiring the command to be manually executed to restore network connectivity for the virtual machine.\n\n# cat nova-compute.log\nTraceback (most recent call last):\n  File \"/opt/stack/venvs/nova/local/lib/python2.7/site-packages/eventlet/hubs/hub.py\", line 455, in fire_timers\n    timer()\n  File \"/opt/stack/venvs/nova/local/lib/python2.7/site-packages/eventlet/hubs/timer.py\", line 58, in __call__\n    cb(*args, **kw)\n  File \"/opt/stack/venvs/nova/local/lib/python2.7/site-packages/eventlet/greenthread.py\", line 212, in main\n    result = function(*args, **kwargs)\n  File \"/opt/stack/venvs/nova/local/lib/python2.7/site-packages/nova/openstack/common/service.py\", line 490, in run_service\n    service.start()\n  File \"/opt/stack/venvs/nova/local/lib/python2.7/site-packages/nova/service.py\", line 164, in start\n    self.manager.init_host()\n  File \"/opt/stack/venvs/nova/local/lib/python2.7/site-packages/nova/compute/manager.py\", line 1059, in init_host\n    self._init_instance(context, instance)\n  File \"/opt/stack/venvs/nova/local/lib/python2.7/site-packages/nova/compute/manager.py\", line 918, in _init_instance\n    self.driver.plug_vifs(instance, net_info)\n  File \"/opt/stack/venvs/nova/local/lib/python2.7/site-packages/nova/virt/libvirt/driver.py\", line 820, in plug_vifs\n    self.vif_driver.plug(instance, vif)\n  File \"/opt/stack/venvs/nova/local/lib/python2.7/site-packages/nova/virt/libvirt/vif.py\", line 627, in plug\n    self.plug_ovs(instance, vif)\n  File \"/opt/stack/venvs/nova/local/lib/python2.7/site-packages/nova/virt/libvirt/vif.py\", line 492, in plug_ovs\n    self.plug_ovs_hybrid(instance, vif)\n  File \"/opt/stack/venvs/nova/local/lib/python2.7/site-packages/nova/virt/libvirt/vif.py\", line 488, in plug_ovs_hybrid\n    instance['uuid'])\n  File \"/opt/stack/venvs/nova/local/lib/python2.7/site-packages/nova/network/linux_net.py\", line 1320, in create_ovs_vif_port\n    'external-ids:vm-uuid=%s' % instance_id])\n  File \"/opt/stack/venvs/nova/local/lib/python2.7/site-packages/nova/network/linux_net.py\", line 1310, in _ovs_vsctl\n    raise exception.AgentError(method=full_args)\nAgentError: Error during following call to agent: ['ovs-vsctl', '--timeout=120', '--', '--if-exists', 'del-port', u'qvo8670d393-d4', '--', 'add-port', u'br-int', u'qvo8670d393-d4', '--', 'set', 'Interface', u'qvo8670d393-d4', u'external-ids:iface-id=8670d393-d47e-41e1-b2b5-b94819266934', 'external-ids:iface-status=active', u'external-ids:attached-mac=fa:16:3e:b1:23:d1', 'external-ids:vm-uuid=26f03afc-e198-41d0-b7c4-77616f9bdfbe']", 
            "date_created": "2014-11-12 00:47:05.579842+00:00", 
            "author": "https://api.launchpad.net/1.0/~juliaashleykreger"
        }, 
        {
            "content": "So looking at this:\nhttp://git.openstack.org/cgit/openstack/nova/tree/nova/virt/libvirt/vif.py#n398\nhas a guard \n   if not linux_net.device_exists(v2_name):\n\nAnd won't execute if the device exists.\n\nIt then creates the device, and after that the OVS port:\n            linux_net._create_veth_pair(v1_name, v2_name)\n            utils.execute('ip', 'link', 'set', br_name, 'up', run_as_root=True)\n            utils.execute('brctl', 'addif', br_name, v1_name, run_as_root=True)\n            if port == 'ovs':\n                linux_net.create_ovs_vif_port(self.get_bridge_name(vif),\n                                              v2_name, iface_id,\n                                              vif['address'], instance['uuid'])\n\n\nSo the race is: if nova-compute is restarted after the create_veth pair before the completion of create_ovs_vif_port, then nova-compute will not bring the VM up properly on restart even if its poked with e.g. nova start $VM, because there is partial state.\n\nIts worth noting that the create_ovs_vif_port code has glue to handle being called if the port already exists. I suggest that either a more complex check is needed, or remove the check and run idempotently (if this is not called on live VM interfaces).", 
            "date_created": "2015-02-10 01:25:10.831331+00:00", 
            "author": "https://api.launchpad.net/1.0/~lifeless"
        }, 
        {
            "content": "\nThis is an automated cleanup. This bug report has been closed because it\nis older than 18 months and there is no open code change to fix this.\nAfter this time it is unlikely that the circumstances which lead to\nthe observed issue can be reproduced.\n\nIf you can reproduce the bug, please:\n* reopen the bug report (set to status \"New\")\n* AND add the detailed steps to reproduce the issue (if applicable)\n* AND leave a comment \"CONFIRMED FOR: <RELEASE_NAME>\"\n  Only still supported release names are valid (LIBERTY, MITAKA, OCATA, NEWTON).\n  Valid example: CONFIRMED FOR: LIBERTY\n", 
            "date_created": "2016-07-05 09:54:49.333782+00:00", 
            "author": "https://api.launchpad.net/1.0/~mzoeller"
        }
    ], 
    "closed": "2016-07-05 09:54:45.323108+00:00"
}