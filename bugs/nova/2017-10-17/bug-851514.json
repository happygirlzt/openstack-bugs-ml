{
    "status": "Fix Released", 
    "last_updated": "2012-04-05 09:32:32.166637+00:00", 
    "description": "exception.wrap_exception munges exceptions which aren't instances of Error or NovaException. This can lead to really confusing stack traces like:\n\n2011-09-15 12:37:02,599 ERROR nova.rpc [-] Exception during message handling\n(nova.rpc): TRACE: Traceback (most recent call last):\n(nova.rpc): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/rpc/impl_kombu.py\", line 620, in _process_data\n(nova.rpc): TRACE:     rval = node_func(context=ctxt, **node_args)\n(nova.rpc): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/exception.py\", line 129, in wrapped\n(nova.rpc): TRACE:     raise Error(str(e))\n(nova.rpc): TRACE: Error: list index out of range\n(nova.rpc): TRACE:\n\nGood luck finding that one!\n\nWe have code in place to capture the exception stack trace before utils.to_primative munges everything for notification. Looks like we only use this code if the original exception inherits from Error or NovaException. We should robustly log all exceptions!", 
    "tags": [], 
    "importance": "High", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/851514", 
    "owner": "https://api.launchpad.net/1.0/~dan-prince", 
    "id": 851514, 
    "index": 489, 
    "openned": "2011-09-16 02:46:07.181309+00:00", 
    "created": "2011-09-16 02:46:07.181309+00:00", 
    "title": "wrap_exception munges exceptions which aren't Error or NovaException ", 
    "comments": [
        {
            "content": "exception.wrap_exception munges exceptions which aren't instances of Error or NovaException. This can lead to really confusing stack traces like:\n\n2011-09-15 12:37:02,599 ERROR nova.rpc [-] Exception during message handling\n(nova.rpc): TRACE: Traceback (most recent call last):\n(nova.rpc): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/rpc/impl_kombu.py\", line 620, in _process_data\n(nova.rpc): TRACE:     rval = node_func(context=ctxt, **node_args)\n(nova.rpc): TRACE:   File \"/usr/lib/pymodules/python2.6/nova/exception.py\", line 129, in wrapped\n(nova.rpc): TRACE:     raise Error(str(e))\n(nova.rpc): TRACE: Error: list index out of range\n(nova.rpc): TRACE:\n\nGood luck finding that one!\n\nWe have code in place to capture the exception stack trace before utils.to_primative munges everything for notification. Looks like we only use this code if the original exception inherits from Error or NovaException. We should robustly log all exceptions!", 
            "date_created": "2011-09-16 02:46:07.181309+00:00", 
            "author": "https://api.launchpad.net/1.0/~dan-prince"
        }
    ], 
    "closed": "2011-11-17 09:53:55.832595+00:00"
}