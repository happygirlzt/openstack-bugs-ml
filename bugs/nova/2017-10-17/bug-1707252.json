{
    "status": "Fix Released", 
    "last_updated": "2017-08-11 12:27:03.079493+00:00", 
    "description": "This code in the scheduler report client is used by the scheduler when making allocation requests against a certain instance during a move operation:\n\nhttps://github.com/openstack/nova/blob/09f0795fe0f5d043593f5ae55a6ec5f6298ba5ba/nova/scheduler/client/report.py#L200\n\nThe idea is to retain the source node allocations in Placement when also adding allocations for the destination node.\n\nHowever, with the set difference code in there, it does not account for resizing an instance to the same host, where the compute node for the source and destination are the same.\n\nWe need to double the allocations for resize to same host for a case like resizing the instance and the VCPU/MEMORY_MB goes down but the DISK_GB goes up.", 
    "tags": [
        "pike-rc-potential", 
        "placement", 
        "scheduler"
    ], 
    "importance": "Medium", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1707252", 
    "owner": "https://api.launchpad.net/1.0/~mriedem", 
    "id": 1707252, 
    "index": 4880, 
    "openned": "2017-07-28 16:51:41.285949+00:00", 
    "created": "2017-07-28 16:51:41.285949+00:00", 
    "title": "Claims in the scheduler does not account for doubling allocations on resize to same host", 
    "comments": [
        {
            "content": "This code in the scheduler report client is used by the scheduler when making allocation requests against a certain instance during a move operation:\n\nhttps://github.com/openstack/nova/blob/09f0795fe0f5d043593f5ae55a6ec5f6298ba5ba/nova/scheduler/client/report.py#L200\n\nThe idea is to retain the source node allocations in Placement when also adding allocations for the destination node.\n\nHowever, with the set difference code in there, it does not account for resizing an instance to the same host, where the compute node for the source and destination are the same.\n\nWe need to double the allocations for resize to same host for a case like resizing the instance and the VCPU/MEMORY_MB goes down but the DISK_GB goes up.", 
            "date_created": "2017-07-28 16:51:41.285949+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Related fix proposed to branch: master\nReview: https://review.openstack.org/489973", 
            "date_created": "2017-08-02 11:13:39.702255+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/490085", 
            "date_created": "2017-08-02 16:50:59.911834+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/490159", 
            "date_created": "2017-08-02 19:06:45.990734+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Change abandoned by Matt Riedemann (<email address hidden>) on branch: master\nReview: https://review.openstack.org/490159\nReason: Part of this now:\n\nhttps://review.openstack.org/#/c/490085/", 
            "date_created": "2017-08-02 20:32:40.485987+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/489973\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=2e8ce056ca004244483c2b99ddbb31dd0400c9cd\nSubmitter: Jenkins\nBranch:    master\n\ncommit 2e8ce056ca004244483c2b99ddbb31dd0400c9cd\nAuthor: Balazs Gibizer <email address hidden>\nDate:   Wed Aug 2 13:07:35 2017 +0200\n\n    Test resize to same host with placement api\n    \n    Test cases for resize to same host with confirm and revert scenarios\n    have been added.\n    \n    The accounting of the current code is very incorrect at the moment, so this\n    asserts the existing (wrong) behavior, but marks the actual expected\n    values everywhere so that we can follow up with fixes to remove all of the\n    annotations.\n    \n    Related-Bug: #1707252\n    Change-Id: Ica83ce5f43c0e7b84fd4117852e81e4d2979dea3\n", 
            "date_created": "2017-08-03 02:16:16.113323+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/490085\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=79c376ec162a0049523f196b3fd10a1585cff1da\nSubmitter: Jenkins\nBranch:    master\n\ncommit 79c376ec162a0049523f196b3fd10a1585cff1da\nAuthor: Matt Riedemann <email address hidden>\nDate:   Wed Aug 2 12:48:01 2017 -0400\n\n    Sum allocations in the scheduler when resizing to the same host\n    \n    When we resize to the same host, with or without a shared provider,\n    the _move_operation_alloc_request code is currently removing the\n    compute node resource provider uuid from the new_rp_uuids\n    variable since the uuid is the same in both the cur_rp_uuids and\n    new_rp_uuids as it's the same compute node provider. So later when\n    processing the new destination allocation requests, since new_rp_uuids\n    is empty, the new destination allocations aren't part of the request.\n    \n    This change checks for this case and sums the resource allocation\n    amounts when we're resizing to the same compute node.\n    \n    Change-Id: I1c9442eed850a3eb7ac9871fafcb0ae93ba8117c\n    Closes-Bug: #1707252\n", 
            "date_created": "2017-08-03 20:50:16.593752+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/nova 16.0.0.0rc1 release candidate.", 
            "date_created": "2017-08-11 12:27:02.394511+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2017-08-03 20:50:14.281557+00:00"
}