{
    "status": "Confirmed", 
    "last_updated": "2016-07-14 11:28:17.626684+00:00", 
    "description": "When RPC between services fails, because of a bug in the RPC service, network faults etc., the server gets stuck in a task, and never exits it.\n\nFor example, when powering up a server, nova-api sets the task_state of the server to 'powering-on', and then sends nova-compute an RPC message to nova-compute. nova-compute is the one responsible for setting the task_state back to NULL after the server was powered-up, but if the RPC message fails to reach nova-compute, the server is forever stuck in 'powering-on'. This can prevent further API operations on the VM and leave a good VMs in non-operable state. The user can usually bypass this manually by running a 'reset-state'.\n\nTo reproduce:\n1. Make RPC messages hang\n2. Issue a 'server start' request\n3. After request, do a 'server show' - the server is stuck in 'powering-on' forever.\n\nThis issue was previously reported to the mailing list. Please see this:\nhttp://lists.openstack.org/pipermail/openstack-dev/2016-April/092239.html\nand this\nhttp://lists.openstack.org/pipermail/openstack-dev/2016-April/092240.html", 
    "tags": [], 
    "importance": "Wishlist", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1571175", 
    "owner": "None", 
    "id": 1571175, 
    "index": 3063, 
    "openned": "2016-04-16 11:36:38.127886+00:00", 
    "created": "2016-04-16 11:36:38.127886+00:00", 
    "title": "RPC failure makes server stuck in a task", 
    "comments": [
        {
            "content": "When RPC between services fails, because of a bug in the RPC service, network faults etc., the server gets stuck in a task, and never exits it.\n\nFor example, when powering up a server, nova-api sets the task_state of the server to 'powering-on', and then sends nova-compute an RPC message to nova-compute. nova-compute is the one responsible for setting the task_state back to NULL after the server was powered-up, but if the RPC message fails to reach nova-compute, the server is forever stuck in 'powering-on'. This can prevent further API operations on the VM and leave a good VMs in non-operable state. The user can usually bypass this manually by running a 'reset-state'.\n\nTo reproduce:\n1. Make RPC messages hang\n2. Issue a 'server start' request\n3. After request, do a 'server show' - the server is stuck in 'powering-on' forever.\n\nThis issue was previously reported to the mailing list. Please see this:\nhttp://lists.openstack.org/pipermail/openstack-dev/2016-April/092239.html\nand this\nhttp://lists.openstack.org/pipermail/openstack-dev/2016-April/092240.html", 
            "date_created": "2016-04-16 11:36:38.127886+00:00", 
            "author": "https://api.launchpad.net/1.0/~shoham-peller"
        }, 
        {
            "content": "Please see a previous bug on  a similar issue:\nhttps://bugs.launchpad.net/nova/+bug/1276214\n\nThere, the RPC message for a migrate is issued using a 'call', and not a 'cast', hence waiting for nova-conductor to acknowledge the message before it is delivered. So catching the RPC-timeout exception was enough.\nWe should either consider always using the RPC 'call' function, or, if we want to free the REST request as fast as possible, let's move the migrate RPC request to 'cast' as well.", 
            "date_created": "2016-04-16 11:47:02.765587+00:00", 
            "author": "https://api.launchpad.net/1.0/~shoham-peller"
        }, 
        {
            "content": "Can you please confirm \"vm state\" of an instance in the scenario you mentioned. If vm state is \"building\" then I believe after build timeout we move vm's to error state.", 
            "date_created": "2016-04-18 17:19:10.215580+00:00", 
            "author": "https://api.launchpad.net/1.0/~pushkar-umaranikar"
        }, 
        {
            "content": "When starting a VM, and RPC message is lost, the VM's status is not \"building\", but \"shutoff\". To reproduce, in file compute/rpcapi.py, in function start_instance, I've replaced the cctxt.cast() call by a \"pass\"\n\n(openstack) server show a\n+--------------------------------------+------------------------------------------------------------------------+\n| Field                                | Value                                                                  |\n+--------------------------------------+------------------------------------------------------------------------+\n| OS-DCF:diskConfig                    | MANUAL                                                                 |\n| OS-EXT-AZ:availability_zone          | nova                                                                   |\n| OS-EXT-STS:power_state               | 4                                                                      |\n| OS-EXT-STS:task_state                | powering-on                                                            |\n| OS-EXT-STS:vm_state                  | stopped                                                                |\n| OS-SRV-USG:launched_at               | 2016-04-18T17:43:48.000000                                             |\n| OS-SRV-USG:terminated_at             | None                                                                   |\n| accessIPv4                           |                                                                        |\n| accessIPv6                           |                                                                        |\n| addresses                            | private=10.0.0.3                                                       |\n| config_drive                         | True                                                                   |\n| created                              | 2016-04-18T17:43:42Z                                                   |\n| flavor                               | m1.tiny (1)                                                            |\n| hostId                               | 65821c34e6318b27333cd8df3c106507f119a0d474a8d05af3333646               |\n| id                                   | 0c06b0ac-fd48-47dc-b032-723191bc83a5                                   |\n| image                                | cirros-0.3.4-x86_64-uec-ramdisk (b8f076fb-f213-41ce-bd10-c3a7574fb9bd) |\n| key_name                             | None                                                                   |\n| name                                 | a                                                                      |\n| os-extended-volumes:volumes_attached | []                                                                     |\n| project_id                           | 5e2ff5f669c94b3aa24a260c6f572358                                       |\n| properties                           |                                                                        |\n| security_groups                      | [{u'name': u'default'}]                                                |\n| status                               | SHUTOFF                                                                |\n| updated                              | 2016-04-18T17:45:05Z                                                   |\n| user_id                              | ccc6e83814364e1badd37cd0b36db08d                                       |\n+--------------------------------------+------------------------------------------------------------------------+\n", 
            "date_created": "2016-04-18 17:47:10.739773+00:00", 
            "author": "https://api.launchpad.net/1.0/~shoham-peller"
        }, 
        {
            "content": "The proper fix for this is the proposed tasks framework mentioned here:\nhttp://specs.openstack.org/openstack/nova-specs/priorities/liberty-priorities.html#priorities-without-a-clear-plan\n\nCurrently, if you restart nova-compute it will largely trying and clean up the failed states you describe.\n\n", 
            "date_created": "2016-07-14 11:28:09.458325+00:00", 
            "author": "https://api.launchpad.net/1.0/~johngarbutt"
        }
    ]
}