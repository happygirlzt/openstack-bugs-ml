{
    "status": "Fix Released", 
    "last_updated": "2014-03-20 22:11:21.431190+00:00", 
    "description": "FAIL: nova.tests.test_quota.QuotaIntegrationTestCase.test_too_many_addresses\ntags: worker-5\n----------------------------------------------------------------------\nEmpty attachments:\n  stderr\n  stdout\n\npythonlogging:'': {{{\nLoading network driver 'nova.network.linux_net'\nStarting network node (version 2013.2)\nQuota exceeded for admin, tried to allocate floating IP\n}}}\n\nTraceback (most recent call last):\n  File \"/tmp/buildd/nova-2013.2.a1884.gb14f9cd/nova/tests/test_quota.py\", line 130, in test_too_many_addresses\n    db.floating_ip_destroy(context.get_admin_context(), address)\n  File \"/tmp/buildd/nova-2013.2.a1884.gb14f9cd/nova/db/api.py\", line 288, in floating_ip_destroy\n    return IMPL.floating_ip_destroy(context, address)\n  File \"/tmp/buildd/nova-2013.2.a1884.gb14f9cd/nova/db/sqlalchemy/api.py\", line 120, in wrapper\n    return f(*args, **kwargs)\n  File \"/tmp/buildd/nova-2013.2.a1884.gb14f9cd/nova/db/sqlalchemy/api.py\", line 790, in floating_ip_destroy\n    filter_by(address=address).\\\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/query.py\", line 1245, in filter_by\n    for key, value in kwargs.iteritems()]\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/sql/operators.py\", line 278, in __eq__\n    return self.operate(eq, other)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/attributes.py\", line 252, in operate\n    return op(self.comparator, *other, **kwargs)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/sql/operators.py\", line 278, in __eq__\n    return self.operate(eq, other)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/properties.py\", line 212, in operate\n    return op(self.__clause_element__(), *other, **kwargs)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/sql/util.py\", line 490, in __eq__\n    return self.__element.__class__.__eq__(self, other)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/sql/operators.py\", line 278, in __eq__\n    return self.operate(eq, other)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/sql/expression.py\", line 2300, in operate\n    return op(self.comparator, *other, **kwargs)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/util/langhelpers.py\", line 612, in __get__\n    obj.__dict__[self.__name__] = result = self.fget(obj)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/sql/expression.py\", line 2286, in comparator\n    return self.type.comparator_factory(self)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/types.py\", line 629, in comparator_factory\n    {})\nTypeError: Cannot create a consistent method resolution\norder (MRO) for bases TDComparator, Comparator", 
    "tags": [
        "db"
    ], 
    "importance": "High", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1200231", 
    "owner": "https://api.launchpad.net/1.0/~rpodolyaka", 
    "id": 1200231, 
    "index": 1158, 
    "openned": "2013-07-11 13:33:53.231505+00:00", 
    "created": "2013-07-11 13:33:53.231505+00:00", 
    "title": "Nova test suite breakage.", 
    "comments": [
        {
            "content": "FAIL: nova.tests.test_quota.QuotaIntegrationTestCase.test_too_many_addresses\ntags: worker-5\n----------------------------------------------------------------------\nEmpty attachments:\n  stderr\n  stdout\n\npythonlogging:'': {{{\nLoading network driver 'nova.network.linux_net'\nStarting network node (version 2013.2)\nQuota exceeded for admin, tried to allocate floating IP\n}}}\n\nTraceback (most recent call last):\n  File \"/tmp/buildd/nova-2013.2.a1884.gb14f9cd/nova/tests/test_quota.py\", line 130, in test_too_many_addresses\n    db.floating_ip_destroy(context.get_admin_context(), address)\n  File \"/tmp/buildd/nova-2013.2.a1884.gb14f9cd/nova/db/api.py\", line 288, in floating_ip_destroy\n    return IMPL.floating_ip_destroy(context, address)\n  File \"/tmp/buildd/nova-2013.2.a1884.gb14f9cd/nova/db/sqlalchemy/api.py\", line 120, in wrapper\n    return f(*args, **kwargs)\n  File \"/tmp/buildd/nova-2013.2.a1884.gb14f9cd/nova/db/sqlalchemy/api.py\", line 790, in floating_ip_destroy\n    filter_by(address=address).\\\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/query.py\", line 1245, in filter_by\n    for key, value in kwargs.iteritems()]\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/sql/operators.py\", line 278, in __eq__\n    return self.operate(eq, other)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/attributes.py\", line 252, in operate\n    return op(self.comparator, *other, **kwargs)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/sql/operators.py\", line 278, in __eq__\n    return self.operate(eq, other)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/properties.py\", line 212, in operate\n    return op(self.__clause_element__(), *other, **kwargs)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/sql/util.py\", line 490, in __eq__\n    return self.__element.__class__.__eq__(self, other)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/sql/operators.py\", line 278, in __eq__\n    return self.operate(eq, other)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/sql/expression.py\", line 2300, in operate\n    return op(self.comparator, *other, **kwargs)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/util/langhelpers.py\", line 612, in __get__\n    obj.__dict__[self.__name__] = result = self.fget(obj)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/sql/expression.py\", line 2286, in comparator\n    return self.type.comparator_factory(self)\n  File \"/usr/lib/python2.7/dist-packages/sqlalchemy/types.py\", line 629, in comparator_factory\n    {})\nTypeError: Cannot create a consistent method resolution\norder (MRO) for bases TDComparator, Comparator", 
            "date_created": "2013-07-11 13:33:53.231505+00:00", 
            "author": "https://api.launchpad.net/1.0/~zulcss"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/37060", 
            "date_created": "2013-07-15 14:16:30.131610+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/37060\nCommitted: http://github.com/openstack/nova/commit/cd382933eb5b6b09f34398cf2c963164bc5b6fc7\nSubmitter: Jenkins\nBranch:    master\n\ncommit cd382933eb5b6b09f34398cf2c963164bc5b6fc7\nAuthor: Roman Podolyaka <email address hidden>\nDate:   Mon Jul 15 16:47:14 2013 +0300\n\n    Fix IPAddress and CIDR type decorators\n    \n    Use load_dialect_impl() user hook instead of calling\n    with_variant() on a type implementation in IPAddress\n    and CIDR type decorators. This makes this code work\n    with SQLAlchemy 0.8.x versions.\n    \n    Fixes bug 1200231\n    \n    Change-Id: Ib0eb582f472116bda817d3e35e26888dc116ad58\n", 
            "date_created": "2013-07-18 22:21:31.605980+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: stable/grizzly\nReview: https://review.openstack.org/53167", 
            "date_created": "2013-10-22 16:55:09.150199+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "I've hit this issue with grizzly running in fedora 19 which has sqlalchemy 0.8.2. Without the fix the system is completely unusable as it is impossible to boot an instance.", 
            "date_created": "2013-10-22 17:26:15.681982+00:00", 
            "author": "https://api.launchpad.net/1.0/~xqueralt-deactivatedaccount"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/53167\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=21871a7b5278e999621374ec0cc86288b3994549\nSubmitter: Jenkins\nBranch:    stable/grizzly\n\ncommit 21871a7b5278e999621374ec0cc86288b3994549\nAuthor: Roman Podolyaka <email address hidden>\nDate:   Mon Jul 15 16:47:14 2013 +0300\n\n    Fix IPAddress and CIDR type decorators\n    \n    Use load_dialect_impl() user hook instead of calling\n    with_variant() on a type implementation in IPAddress\n    and CIDR type decorators. This makes this code work\n    with SQLAlchemy 0.8.x versions.\n    \n    Fixes bug 1200231\n    \n    Change-Id: Ib0eb582f472116bda817d3e35e26888dc116ad58\n    (cherry picked from commit cd382933eb5b6b09f34398cf2c963164bc5b6fc7)\n", 
            "date_created": "2014-02-28 10:59:14.566954+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2013-09-05 15:39:12.110697+00:00"
}