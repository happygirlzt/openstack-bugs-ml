{
    "status": "Fix Released", 
    "last_updated": "2011-02-07 14:00:09.007490+00:00", 
    "description": "The fix for 699654 which uses exception.args[0] breaks if args is empty and covers up the underlying exception.  For example:\n\nTraceback (most recent call last):\n File \"/usr/lib/pymodules/python2.6/eventlet/wsgi.py\", line 336, in handle_one_response\n   result = self.application(self.environ, start_response)\n File \"/usr/lib/pymodules/python2.6/paste/urlmap.py\", line 203, in __call__\n   return app(environ, start_response)\n File \"/usr/lib/pymodules/python2.6/webob/dec.py\", line 147, in __call__\n   resp = self.call_func(req, *args, **self.kwargs)\n File \"/usr/lib/pymodules/python2.6/webob/dec.py\", line 208, in call_func\n   return self.func(req, *args, **kwargs)\n File \"/usr/lib/pymodules/python2.6/nova/api/ec2/__init__.py\", line 59, in __call__\n   rv = req.get_response(self.application)\n File \"/usr/lib/pymodules/python2.6/webob/request.py\", line 919, in get_response\n   application, catch_exc_info=False)\n File \"/usr/lib/pymodules/python2.6/webob/request.py\", line 887, in call_application\n   app_iter = application(self.environ, start_response)\n File \"/usr/lib/pymodules/python2.6/webob/dec.py\", line 159, in __call__\n   return resp(environ, start_response)\n File \"/usr/lib/pymodules/python2.6/webob/dec.py\", line 159, in __call__\n   return resp(environ, start_response)\n File \"/usr/lib/pymodules/python2.6/webob/dec.py\", line 159, in __call__\n   return resp(environ, start_response)\n File \"/usr/lib/pymodules/python2.6/webob/dec.py\", line 147, in __call__\n   resp = self.call_func(req, *args, **self.kwargs)\n File \"/usr/lib/pymodules/python2.6/webob/dec.py\", line 208, in call_func\n   return self.func(req, *args, **kwargs)\n File \"/usr/lib/pymodules/python2.6/nova/api/ec2/__init__.py\", line 328, in __call__\n   LOG.exception(_('Unexpected error raised: %s'), ex.args[0],\nIndexError: tuple index out of range\n\nPerhaps we should coerce the exceptions to unicode instead?", 
    "tags": [], 
    "importance": "Medium", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/709510", 
    "owner": "https://api.launchpad.net/1.0/~tpatil", 
    "id": 709510, 
    "index": 2268, 
    "openned": "2011-01-28 21:20:22.794089+00:00", 
    "created": "2011-01-28 21:20:22.794089+00:00", 
    "title": "Fix for 699654 breaks exception handling if args is empty", 
    "comments": [
        {
            "content": "The fix for 699654 which uses exception.args[0] breaks if args is empty and covers up the underlying exception.  For example:\n\nTraceback (most recent call last):\n File \"/usr/lib/pymodules/python2.6/eventlet/wsgi.py\", line 336, in handle_one_response\n   result = self.application(self.environ, start_response)\n File \"/usr/lib/pymodules/python2.6/paste/urlmap.py\", line 203, in __call__\n   return app(environ, start_response)\n File \"/usr/lib/pymodules/python2.6/webob/dec.py\", line 147, in __call__\n   resp = self.call_func(req, *args, **self.kwargs)\n File \"/usr/lib/pymodules/python2.6/webob/dec.py\", line 208, in call_func\n   return self.func(req, *args, **kwargs)\n File \"/usr/lib/pymodules/python2.6/nova/api/ec2/__init__.py\", line 59, in __call__\n   rv = req.get_response(self.application)\n File \"/usr/lib/pymodules/python2.6/webob/request.py\", line 919, in get_response\n   application, catch_exc_info=False)\n File \"/usr/lib/pymodules/python2.6/webob/request.py\", line 887, in call_application\n   app_iter = application(self.environ, start_response)\n File \"/usr/lib/pymodules/python2.6/webob/dec.py\", line 159, in __call__\n   return resp(environ, start_response)\n File \"/usr/lib/pymodules/python2.6/webob/dec.py\", line 159, in __call__\n   return resp(environ, start_response)\n File \"/usr/lib/pymodules/python2.6/webob/dec.py\", line 159, in __call__\n   return resp(environ, start_response)\n File \"/usr/lib/pymodules/python2.6/webob/dec.py\", line 147, in __call__\n   resp = self.call_func(req, *args, **self.kwargs)\n File \"/usr/lib/pymodules/python2.6/webob/dec.py\", line 208, in call_func\n   return self.func(req, *args, **kwargs)\n File \"/usr/lib/pymodules/python2.6/nova/api/ec2/__init__.py\", line 328, in __call__\n   LOG.exception(_('Unexpected error raised: %s'), ex.args[0],\nIndexError: tuple index out of range\n\nPerhaps we should coerce the exceptions to unicode instead?", 
            "date_created": "2011-01-28 21:20:22.794089+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "Please test with the below patch. If see any problem in this patch please let me know. Thanks.\r\n\r\n=== modified file 'nova/api/ec2/__init__.py'\r\n--- nova/api/ec2/__init__.py\t2011-01-27 22:10:42 +0000\r\n+++ nova/api/ec2/__init__.py\t2011-01-29 00:03:03 +0000\r\n@@ -171,7 +171,7 @@\r\n                     req.path)\r\n         # Be explicit for what exceptions are 403, the rest bubble as 500\r\n         except (exception.NotFound, exception.NotAuthorized) as ex:\r\n-            LOG.audit(_(\"Authentication Failure: %s\"), ex.args[0])\r\n+            LOG.audit(_(\"Authentication Failure: %s\"), utils.utf8(ex))\r\n             raise webob.exc.HTTPForbidden()\r\n \r\n         # Authenticated!\r\n@@ -316,30 +316,31 @@\r\n         try:\r\n             result = api_request.invoke(context)\r\n         except exception.InstanceNotFound as ex:\r\n-            LOG.info(_('InstanceNotFound raised: %s'), ex.args[0],\r\n+            LOG.info(_('InstanceNotFound raised: %s'), utils.utf8(ex),\r\n                      context=context)\r\n             ec2_id = cloud.id_to_ec2_id(ex.instance_id)\r\n             message = _('Instance %s not found') % ec2_id\r\n             return self._error(req, context, type(ex).__name__, message)\r\n         except exception.VolumeNotFound as ex:\r\n-            LOG.info(_('VolumeNotFound raised: %s'), ex.args[0],\r\n+            LOG.info(_('VolumeNotFound raised: %s'), utils.utf8(ex),\r\n                      context=context)\r\n             ec2_id = cloud.id_to_ec2_id(ex.volume_id, 'vol-%08x')\r\n             message = _('Volume %s not found') % ec2_id\r\n             return self._error(req, context, type(ex).__name__, message)\r\n         except exception.NotFound as ex:\r\n-            LOG.info(_('NotFound raised: %s'), ex.args[0], context=context)\r\n-            return self._error(req, context, type(ex).__name__, ex.args[0])\r\n+            LOG.info(_('NotFound raised: %s'), utils.utf8(ex), context=context)\r\n+            return self._error(req, context, type(ex).__name__, utils.utf8(ex))\r\n         except exception.ApiError as ex:\r\n-            LOG.exception(_('ApiError raised: %s'), ex.args[0],\r\n+            LOG.exception(_('ApiError raised: %s'), utils.utf8(ex),\r\n                           context=context)\r\n             if ex.code:\r\n-                return self._error(req, context, ex.code, ex.args[0])\r\n+                return self._error(req, context, ex.code, utils.utf8(ex))\r\n             else:\r\n-                return self._error(req, context, type(ex).__name__, ex.args[0])\r\n+                return self._error(req, context, type(ex).__name_,\r\n+                                   utils.utf8(ex))\r\n         except Exception as ex:\r\n             extra = {'environment': req.environ}\r\n-            LOG.exception(_('Unexpected error raised: %s'), ex.args[0],\r\n+            LOG.exception(_('Unexpected error raised: %s'), utils.utf8(ex),\r\n                           extra=extra, context=context)\r\n             return self._error(req,\r\n                                context,\r\n\r\n=== modified file 'nova/utils.py'\r\n--- nova/utils.py\t2011-01-27 19:52:10 +0000\r\n+++ nova/utils.py\t2011-01-28 23:45:43 +0000\r\n@@ -405,6 +405,12 @@\r\n     \"\"\"\r\n     if isinstance(value, unicode):\r\n         return value.encode(\"utf-8\")\r\n+    if isinstance(value, Exception):\r\n+        if value.args:\r\n+            return value.args[0].encode(\"utf-8\")\r\n+        else:\r\n+            return \"\"\r\n+\r\n     assert isinstance(value, str)\r\n     return value", 
            "date_created": "2011-01-29 00:05:28.155326+00:00", 
            "author": "https://api.launchpad.net/1.0/~tpatil"
        }
    ], 
    "closed": "2011-02-07 14:00:07.103462+00:00"
}