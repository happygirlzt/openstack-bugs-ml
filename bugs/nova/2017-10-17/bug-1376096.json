{
    "status": "Fix Released", 
    "last_updated": "2015-10-15 08:55:40.704244+00:00", 
    "description": "I want to allow a user with a certain role to be able to do a nova show.\n\nI set the policy.json file to allow this by setting\n\n======================\n    \"context_is_admin\":  \"role:admin\",\n    \"admin_or_owner\":  \"is_admin:True or project_id:%(project_id)s\",\n    \"default\": \"rule:admin_or_owner\",\n    \"monitoring\": \"role:monitoring\",\n    \"monitoring_or_default\":  \"rule:default or role:monitoring\",\n\n...\n\n   \"compute:get\": \"rule:monitoring_or_default\",\n\n=====================\n\nI still get the following:\n\nERROR: No server with a name or ID of 'XXXXXXXXXXX' exists.", 
    "tags": [], 
    "importance": "Low", 
    "heat": 10, 
    "link": "https://bugs.launchpad.net/nova/+bug/1376096", 
    "owner": "https://api.launchpad.net/1.0/~lilly-spandanabarukula", 
    "id": 1376096, 
    "index": 1409, 
    "openned": "2014-10-01 05:04:41.618154+00:00", 
    "created": "2014-10-01 05:04:41.618154+00:00", 
    "title": "nova show policy doesn't work", 
    "comments": [
        {
            "content": "I want to allow a user with a certain role to be able to do a nova show.\n\nI set the policy.json file to allow this by setting\n\n======================\n    \"context_is_admin\":  \"role:admin\",\n    \"admin_or_owner\":  \"is_admin:True or project_id:%(project_id)s\",\n    \"default\": \"rule:admin_or_owner\",\n    \"monitoring\": \"role:monitoring\",\n    \"monitoring_or_default\":  \"rule:default or role:monitoring\",\n\n...\n\n   \"compute:get\": \"rule:monitoring_or_default\",\n\n=====================\n\nI still get the following:\n\nERROR: No server with a name or ID of 'XXXXXXXXXXX' exists.", 
            "date_created": "2014-10-01 05:04:41.618154+00:00", 
            "author": "https://api.launchpad.net/1.0/~sorrison"
        }, 
        {
            "content": "I'm not sure it's a Nova policy issue but rather an Oslo policy problem, no ?\n\nThat's indeed compute_api.get() which is mapped to nova show so your compute:get addition is correct as it will correctly call the policy on the compute.get() method.\n\nI'm just wondering if role:monitoring is correct as per Oslo policy rules.", 
            "date_created": "2014-10-02 09:30:48.200598+00:00", 
            "author": "https://api.launchpad.net/1.0/~sylvain-bauza"
        }, 
        {
            "content": "Hi Sylvain,\n\nSorry this isn't related to Oslo, the bug is due to nova, I haven't tracked it down fully but I'm pretty sure it's in the DB api. \n\nRole monitoring is a role we have defined in our keystone. \n\nCan you let me know how this is incomplete? ", 
            "date_created": "2014-10-02 10:02:28.819028+00:00", 
            "author": "https://api.launchpad.net/1.0/~sorrison"
        }, 
        {
            "content": "I think nova will raise 401 (not authrozied) if nova is not able to find it, if will check whether instance exist before policy check\n are you sure the instance is there?", 
            "date_created": "2014-11-20 05:41:26.385816+00:00", 
            "author": "https://api.launchpad.net/1.0/~jichenjc"
        }, 
        {
            "content": "Certain it's there, if it isn't there it returns a 404.\n\n", 
            "date_created": "2014-11-20 05:55:54.393632+00:00", 
            "author": "https://api.launchpad.net/1.0/~sorrison"
        }, 
        {
            "content": "I'd like to get more input (e.g the logs when doing the execution) etc\n\nsince I double check the code, if the policy don't allow, it should report \n\nPolicy doesn't allow %(action)s to be performed. instead of can't find instance \n\nthe 'compute:get' is correct, we use following to check the policy \ncheck_policy(context, 'get', instance)\n\ndef check_policy(context, action, target, scope='compute'):\n    _action = '%s:%s' % (scope, action)\n    nova.policy.enforce(context, _action, target)", 
            "date_created": "2014-12-22 02:45:22.146899+00:00", 
            "author": "https://api.launchpad.net/1.0/~jichenjc"
        }, 
        {
            "content": "Here are the logs from nova-api\n\n2015-01-06 12:15:37.801 27951 DEBUG keystoneclient.middleware.auth_token [-] Authenticating user token __call__ /usr/lib/python2.7/dist-packages/keystoneclient/middleware/auth_token.py:569\n2015-01-06 12:15:37.802 27951 DEBUG keystoneclient.middleware.auth_token [-] Removing headers from request environment: X-Identity-Status,X-Domain-Id,X-Domain-Name,X-Project-Id,X-Project-Name,X-Project-Domain-Id,X-Project-Domain-Name,X-User-Id,X-User-Name,X-User-Domain-Id,X-User-Domain-Name,X-Roles,X-Service-Catalog,X-User,X-Tenant-Id,X-Tenant-Name,X-Tenant,X-Role _remove_auth_headers /usr/lib/python2.7/dist-packages/keystoneclient/middleware/auth_token.py:628\n2015-01-06 12:15:37.825 27951 DEBUG keystoneclient.middleware.auth_token [-] Storing token in cache _cache_put /usr/lib/python2.7/dist-packages/keystoneclient/middleware/auth_token.py:1144\n2015-01-06 12:15:37.828 27951 DEBUG keystoneclient.middleware.auth_token [-] Received request from user: 25 with project_id : 23 and roles: DatabaseUser,monitoring,Member,PreProdUser,AllocationAdmin  _build_user_headers /usr/lib/python2.7/dist-packages/keystoneclient/middleware/auth_token.py:933\n2015-01-06 12:15:37.832 27951 DEBUG routes.middleware [-] Matched GET /23/servers/140f9e95-3907-431f-9046-1e57ae3f3168 __call__ /usr/lib/python2.7/dist-packages/routes/middleware.py:100\n2015-01-06 12:15:37.832 27951 DEBUG routes.middleware [-] Route path: '/{project_id}/servers/:(id)', defaults: {'action': u'show', 'controller': <nova.api.openstack.wsgi.Resource object at 0x7f859f052ed0>} __call__ /usr/lib/python2.7/dist-packages/routes/middleware.py:102\n2015-01-06 12:15:37.833 27951 DEBUG routes.middleware [-] Match dict: {'action': u'show', 'controller': <nova.api.openstack.wsgi.Resource object at 0x7f859f052ed0>, 'project_id': u'23', 'id': u'140f9e95-3907-431f-9046-1e57ae3f3168'} __call__ /usr/lib/python2.7/dist-packages/routes/middleware.py:103\n2015-01-06 12:15:37.834 27951 DEBUG nova.api.openstack.wsgi [req-55cf7945-4c44-4df3-94d1-6f7db1f47105 25 23] Calling method '<bound method Controller.show of <nova.api.openstack.compute.servers.Controller object at 0x7f859f340b90>>' (Content-type='None', Accept='application/json') _process_stack /usr/lib/python2.7/dist-packages/nova/api/openstack/wsgi.py:945\n2015-01-06 12:15:37.866 27951 INFO nova.api.openstack.wsgi [req-55cf7945-4c44-4df3-94d1-6f7db1f47105 25 23] HTTP exception thrown: Instance could not be found\n2015-01-06 12:15:37.867 27951 DEBUG nova.api.openstack.wsgi [req-55cf7945-4c44-4df3-94d1-6f7db1f47105 25 23] Returning 404 to user: Instance could not be found __call__ /usr/lib/python2.7/dist-packages/nova/api/openstack/wsgi.py:1215\n2015-01-06 12:15:37.868 27951 INFO nova.osapi_compute.wsgi.server [req-55cf7945-4c44-4df3-94d1-6f7db1f47105 25 23] 128.250.116.173 \"GET /v2/23/servers/140f9e95-3907-431f-9046-1e57ae3f3168 HTTP/1.1\" status: 404 len: 267 time: 0.0664909\n2015-01-06 12:15:37.873 27951 DEBUG keystoneclient.middleware.auth_token [-] Authenticating user token __call__ /usr/lib/python2.7/dist-packages/keystoneclient/middleware/auth_token.py:569\n2015-01-06 12:15:37.873 27951 DEBUG keystoneclient.middleware.auth_token [-] Removing headers from request environment: X-Identity-Status,X-Domain-Id,X-Domain-Name,X-Project-Id,X-Project-Name,X-Project-Domain-Id,X-Project-Domain-Name,X-User-Id,X-User-Name,X-User-Domain-Id,X-User-Domain-Name,X-Roles,X-Service-Catalog,X-User,X-Tenant-Id,X-Tenant-Name,X-Tenant,X-Role _remove_auth_headers /usr/lib/python2.7/dist-packages/keystoneclient/middleware/auth_token.py:628\n2015-01-06 12:15:37.875 27951 DEBUG keystoneclient.middleware.auth_token [-] Returning cached token _cache_get /usr/lib/python2.7/dist-packages/keystoneclient/middleware/auth_token.py:1034\n2015-01-06 12:15:37.875 27951 DEBUG keystoneclient.middleware.auth_token [-] Received request from user: 25 with project_id : 23 and roles: DatabaseUser,monitoring,Member,PreProdUser,AllocationAdmin  _build_user_headers /usr/lib/python2.7/dist-packages/keystoneclient/middleware/auth_token.py:933\n2015-01-06 12:15:37.876 27951 DEBUG routes.middleware [-] Matched GET /23/servers __call__ /usr/lib/python2.7/dist-packages/routes/middleware.py:100\n2015-01-06 12:15:37.877 27951 DEBUG routes.middleware [-] Route path: '/{project_id}/servers', defaults: {'action': u'index', 'controller': <nova.api.openstack.wsgi.Resource object at 0x7f859f052ed0>} __call__ /usr/lib/python2.7/dist-packages/routes/middleware.py:102\n2015-01-06 12:15:37.878 27951 DEBUG routes.middleware [-] Match dict: {'action': u'index', 'controller': <nova.api.openstack.wsgi.Resource object at 0x7f859f052ed0>, 'project_id': u'23'} __call__ /usr/lib/python2.7/dist-packages/routes/middleware.py:103\n2015-01-06 12:15:37.879 27951 DEBUG nova.api.openstack.wsgi [req-ff0a5e09-5324-489e-8208-11644432cb2d 25 23] Calling method '<bound method Controller.index of <nova.api.openstack.compute.servers.Controller object at 0x7f859f340b90>>' (Content-type='None', Accept='application/json') _process_stack /usr/lib/python2.7/dist-packages/nova/api/openstack/wsgi.py:945\n2015-01-06 12:15:37.880 27951 DEBUG nova.api.openstack.compute.servers [req-ff0a5e09-5324-489e-8208-11644432cb2d 25 23] Removing options '' from query remove_invalid_options /usr/lib/python2.7/dist-packages/nova/api/openstack/compute/servers.py:1514\n2015-01-06 12:15:37.881 27951 DEBUG nova.compute.api [req-ff0a5e09-5324-489e-8208-11644432cb2d 25 23] Searching by: {'deleted': False, 'project_id': u'23'} get_all /usr/lib/python2.7/dist-packages/nova/compute/api.py:1838\n2015-01-06 12:15:37.925 27951 INFO nova.osapi_compute.wsgi.server [req-ff0a5e09-5324-489e-8208-11644432cb2d 25 23] 128.250.116.173 \"GET /v2/23/servers HTTP/1.1\" status: 200 len: 748 time: 0.0524290\n2015-01-06 12:15:37.929 27951 DEBUG keystoneclient.middleware.auth_token [-] Authenticating user token __call__ /usr/lib/python2.7/dist-packages/keystoneclient/middleware/auth_token.py:569\n2015-01-06 12:15:37.929 27951 DEBUG keystoneclient.middleware.auth_token [-] Removing headers from request environment: X-Identity-Status,X-Domain-Id,X-Domain-Name,X-Project-Id,X-Project-Name,X-Project-Domain-Id,X-Project-Domain-Name,X-User-Id,X-User-Name,X-User-Domain-Id,X-User-Domain-Name,X-Roles,X-Service-Catalog,X-User,X-Tenant-Id,X-Tenant-Name,X-Tenant,X-Role _remove_auth_headers /usr/lib/python2.7/dist-packages/keystoneclient/middleware/auth_token.py:628\n2015-01-06 12:15:37.930 27951 DEBUG keystoneclient.middleware.auth_token [-] Returning cached token _cache_get /usr/lib/python2.7/dist-packages/keystoneclient/middleware/auth_token.py:1034\n2015-01-06 12:15:37.931 27951 DEBUG keystoneclient.middleware.auth_token [-] Received request from user: 25 with project_id : 23 and roles: DatabaseUser,monitoring,Member,PreProdUser,AllocationAdmin  _build_user_headers /usr/lib/python2.7/dist-packages/keystoneclient/middleware/auth_token.py:933\n2015-01-06 12:15:37.932 27951 DEBUG routes.middleware [-] Matched GET /23/servers __call__ /usr/lib/python2.7/dist-packages/routes/middleware.py:100\n2015-01-06 12:15:37.933 27951 DEBUG routes.middleware [-] Route path: '/{project_id}/servers', defaults: {'action': u'index', 'controller': <nova.api.openstack.wsgi.Resource object at 0x7f859f052ed0>} __call__ /usr/lib/python2.7/dist-packages/routes/middleware.py:102\n2015-01-06 12:15:37.933 27951 DEBUG routes.middleware [-] Match dict: {'action': u'index', 'controller': <nova.api.openstack.wsgi.Resource object at 0x7f859f052ed0>, 'project_id': u'23'} __call__ /usr/lib/python2.7/dist-packages/routes/middleware.py:103\n2015-01-06 12:15:37.934 27951 DEBUG nova.api.openstack.wsgi [req-c713d494-c588-43ec-b25e-a3d0d0d7720b 25 23] Calling method '<bound method Controller.index of <nova.api.openstack.compute.servers.Controller object at 0x7f859f340b90>>' (Content-type='None', Accept='application/json') _process_stack /usr/lib/python2.7/dist-packages/nova/api/openstack/wsgi.py:945\n2015-01-06 12:15:37.935 27951 DEBUG nova.api.openstack.compute.servers [req-c713d494-c588-43ec-b25e-a3d0d0d7720b 25 23] Removing options '' from query remove_invalid_options /usr/lib/python2.7/dist-packages/nova/api/openstack/compute/servers.py:1514\n2015-01-06 12:15:37.935 27951 DEBUG nova.compute.api [req-c713d494-c588-43ec-b25e-a3d0d0d7720b 25 23] Searching by: {'deleted': False, 'project_id': u'23'} get_all /usr/lib/python2.7/dist-packages/nova/compute/api.py:1838\n2015-01-06 12:15:37.974 27951 INFO nova.osapi_compute.wsgi.server [req-c713d494-c588-43ec-b25e-a3d0d0d7720b 25 23] 128.250.116.173 \"GET /v2/23/servers HTTP/1.1\" status: 200 len: 748 time: 0.0454679\n\n\n", 
            "date_created": "2015-01-06 01:16:47.902412+00:00", 
            "author": "https://api.launchpad.net/1.0/~sorrison"
        }, 
        {
            "content": "Hi Sam, I can think of a one of reason you might not be seeing the server even though you set up policy.json. In order to 'nova show' an instance in a tenant other than the tenant you're authed as, you can't use the instance name, you have to use the instance uuid. Are you specifying a server name or a server uuid?", 
            "date_created": "2015-01-12 23:31:23.186737+00:00", 
            "author": "https://api.launchpad.net/1.0/~melwitt"
        }, 
        {
            "content": "Yeah I'm using the UUID", 
            "date_created": "2015-01-12 23:45:50.674638+00:00", 
            "author": "https://api.launchpad.net/1.0/~sorrison"
        }, 
        {
            "content": "The issue is in the DB api level, it has a check to ensure the context is_admin which it's not", 
            "date_created": "2015-01-12 23:47:20.480736+00:00", 
            "author": "https://api.launchpad.net/1.0/~sorrison"
        }, 
        {
            "content": "I tested this bug against with the latest code (af84e3dea346e706b3361d296c41161cc70d8d9e), it is fixed. \n\nI believe that it is fixed by one of the PS in  https://blueprints.launchpad.net/nova/+spec/nova-api-policy-final-part, which removed the db level api.\n\nSo mark this bug as invalid.", 
            "date_created": "2015-07-15 02:51:26.559705+00:00", 
            "author": "https://api.launchpad.net/1.0/~jeffrey4l"
        }, 
        {
            "content": "May be marked as Fix Committed more reasonable. ", 
            "date_created": "2015-07-15 02:52:30.927846+00:00", 
            "author": "https://api.launchpad.net/1.0/~jeffrey4l"
        }
    ], 
    "closed": "2015-07-28 09:08:57.060251+00:00"
}