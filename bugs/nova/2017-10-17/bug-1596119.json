{
    "status": "Fix Released", 
    "last_updated": "2017-02-28 16:00:11.169528+00:00", 
    "description": "Using the RDO Kilo version of Nova (2015.1.0-3) with dedicated cpu pinning populates the numa_topology database field with data at \"nova_object.version\": \"1.1\". After upgrading to Liberty a new instance will be created with a 1.2 object version however already existing instances created under Kilo remain at 1.1. Attempting to do many actions on these instances (start, delete) will fail with the following error: RemoteError: Remote error: InvalidTargetVersion Invalid target version 1.2.\n\nUpdating from Kilo to Mitaka produces the same problem.", 
    "tags": [
        "in-stable-mitaka", 
        "in-stable-newton", 
        "mitaka-backport-potential", 
        "unified-objects", 
        "upgrades"
    ], 
    "importance": "High", 
    "heat": 18, 
    "link": "https://bugs.launchpad.net/nova/+bug/1596119", 
    "owner": "https://api.launchpad.net/1.0/~hanlind", 
    "id": 1596119, 
    "index": 1938, 
    "openned": "2016-06-25 00:35:05.214825+00:00", 
    "created": "2016-06-25 00:35:05.214825+00:00", 
    "title": "Can't delete instance with numa_topology after upgrading from kilo", 
    "comments": [
        {
            "content": "Using the RDO Kilo version of Nova (2015.1.0-3) with dedicated cpu pinning populates the numa_topology database field with data at \"nova_object.version\": \"1.1\". After upgrading to Liberty a new instance will be created with a 1.2 object version however already existing instances created under Kilo remain at 1.1. Attempting to do many actions on these instances (start, delete) will fail with the following error: RemoteError: Remote error: InvalidTargetVersion Invalid target version 1.2.\n\nUpdating from Kilo to Mitaka produces the same problem.", 
            "date_created": "2016-06-25 00:35:05.214825+00:00", 
            "author": "https://api.launchpad.net/1.0/~cstone-0"
        }, 
        {
            "content": "Attaching log info from nova compute during an attempted start of a stopped instance", 
            "date_created": "2016-06-25 00:37:00.866135+00:00", 
            "author": "https://api.launchpad.net/1.0/~cstone-0"
        }, 
        {
            "content": "The project \"oslo.versionedobjects\" introduced this check with commit [1] in the Liberty timeframe.\n\nReferences:\n[1] https://github.com/openstack/oslo.versionedobjects/commit/028aad5b44470a7f57e0f5c1a6fbf9594a9c6947", 
            "date_created": "2016-06-27 14:11:28.942252+00:00", 
            "author": "https://api.launchpad.net/1.0/~mzoeller"
        }, 
        {
            "content": "Can you give more detail about your service arrangement after the upgrade to Liberty? Are _all_ services upgraded at once (offline)? From your log snippet, it looks like maybe you upgraded the compute nodes but the conductor nodes are old?", 
            "date_created": "2016-06-27 14:16:33.304054+00:00", 
            "author": "https://api.launchpad.net/1.0/~danms"
        }, 
        {
            "content": "I believe the problem is how instance extras are stored in the db but never gets migrated during upgrades. In this case, when the instance is initially created in Kilo its numa_topology is stored in the db as a serialized NumaTopology object with version 1.1. After upgrading to Liberty, when the instance is fetched from db, the same serialized 1.1 object is returned but now the conductor don't know how to forward port it to the current/requested 1.2 version before returning it back to the caller, hence the raised exception.", 
            "date_created": "2016-06-28 10:57:35.413006+00:00", 
            "author": "https://api.launchpad.net/1.0/~hanlind"
        }, 
        {
            "content": "Hans, I don't understand how that could be the case. Why would the conductor need to forward port it? All the nodes that the object should be sent to (or loaded in) should be happy to see a 1.1 object if they support up to 1.2.\n\nOn the other hand, if conductors were older than other nodes, a new object could be stored in the database which would confuse the conductor when it went to deserialize it.\n\nIn short, there should be no problem storing older objects in the database as long as we can still support their major version. It should be identical to receiving that older object over RPC from an older node.", 
            "date_created": "2016-06-28 13:40:10.143677+00:00", 
            "author": "https://api.launchpad.net/1.0/~danms"
        }, 
        {
            "content": "If I read the logs correctly, when trying to lazy-load instance.numa_topology it ends up calling the remotable class method InstanceNUMATopology.get_by_instance_uuid and in conductor method object_class_action_versions it gets the 1.1 object. But then before returning to the client it tries to honor what the client is asking for. Here the version manifest has 1.2 and we blow up.", 
            "date_created": "2016-06-28 14:58:42.027219+00:00", 
            "author": "https://api.launchpad.net/1.0/~hanlind"
        }, 
        {
            "content": "Dan, in this case the conductors were definitely updated to the newer version prior to updating compute nodes, which were the last ones. Both nova-conductor and nova-compute are reporting the same --version across all hosts.", 
            "date_created": "2016-06-28 17:47:21.182740+00:00", 
            "author": "https://api.launchpad.net/1.0/~cstone-0"
        }, 
        {
            "content": "Ah, okay, makes sense Hans. Are you cooking up a patch for this?", 
            "date_created": "2016-06-29 00:35:03.616708+00:00", 
            "author": "https://api.launchpad.net/1.0/~danms"
        }, 
        {
            "content": "Ok, I'll look into it.", 
            "date_created": "2016-06-29 14:57:23.163289+00:00", 
            "author": "https://api.launchpad.net/1.0/~hanlind"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/335629", 
            "date_created": "2016-06-29 19:05:11.066366+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/335629\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=1e3e7309997f90fbd0291c05cc859dd9ac0ef161\nSubmitter: Jenkins\nBranch:    master\n\ncommit 1e3e7309997f90fbd0291c05cc859dd9ac0ef161\nAuthor: Hans Lindgren <email address hidden>\nDate:   Wed Jun 29 20:29:47 2016 +0200\n\n    Do not try to backport when db has older object version\n    \n    Instance extras are stored as serialized objects in the database and\n    because of this it is possible to get a version back that is older\n    than what the client requested. This is in itself not a problem, but\n    the way we do things right now in conductor we end up trying to\n    backport to a newer version, which raises InvalidTargetVersion.\n    \n    This change adds a check to make sure we skip backporting if the\n    requested version is newer than the actual db version as long as the\n    major version is the same.\n    \n    Change-Id: I34ac0abd016b72d585f83ae2ce34790751082180\n    Closes-Bug: #1596119\n", 
            "date_created": "2016-09-20 10:58:20.922029+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Can we get this patch back-ported to Mitaka as well?", 
            "date_created": "2016-09-23 11:12:39.409100+00:00", 
            "author": "https://api.launchpad.net/1.0/~eandersson"
        }, 
        {
            "content": "This is critical enough to get back ported into all possible releases", 
            "date_created": "2016-10-14 14:53:14.317865+00:00", 
            "author": "https://api.launchpad.net/1.0/~bjoern-teipel"
        }, 
        {
            "content": "Fix proposed to branch: stable/mitaka\nReview: https://review.openstack.org/387214", 
            "date_created": "2016-10-17 07:38:30.146675+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: stable/newton\nReview: https://review.openstack.org/387249", 
            "date_created": "2016-10-17 08:22:51.895129+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/387249\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=7b15ecc22fee0aa4d628a6e0d75850a3275bdaf6\nSubmitter: Jenkins\nBranch:    stable/newton\n\ncommit 7b15ecc22fee0aa4d628a6e0d75850a3275bdaf6\nAuthor: Hans Lindgren <email address hidden>\nDate:   Wed Jun 29 20:29:47 2016 +0200\n\n    Do not try to backport when db has older object version\n    \n    Instance extras are stored as serialized objects in the database and\n    because of this it is possible to get a version back that is older\n    than what the client requested. This is in itself not a problem, but\n    the way we do things right now in conductor we end up trying to\n    backport to a newer version, which raises InvalidTargetVersion.\n    \n    This change adds a check to make sure we skip backporting if the\n    requested version is newer than the actual db version as long as the\n    major version is the same.\n    \n    Change-Id: I34ac0abd016b72d585f83ae2ce34790751082180\n    Closes-Bug: #1596119\n    (cherry picked from commit 1e3e7309997f90fbd0291c05cc859dd9ac0ef161)\n", 
            "date_created": "2016-10-18 04:46:52.165890+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/387214\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=a54c4f51e753fda5c6aeb103181d815719a4b532\nSubmitter: Jenkins\nBranch:    stable/mitaka\n\ncommit a54c4f51e753fda5c6aeb103181d815719a4b532\nAuthor: Hans Lindgren <email address hidden>\nDate:   Wed Jun 29 20:29:47 2016 +0200\n\n    Do not try to backport when db has older object version\n    \n    Instance extras are stored as serialized objects in the database and\n    because of this it is possible to get a version back that is older\n    than what the client requested. This is in itself not a problem, but\n    the way we do things right now in conductor we end up trying to\n    backport to a newer version, which raises InvalidTargetVersion.\n    \n    This change adds a check to make sure we skip backporting if the\n    requested version is newer than the actual db version as long as the\n    major version is the same.\n    \n    Change-Id: I34ac0abd016b72d585f83ae2ce34790751082180\n    Closes-Bug: #1596119\n    (cherry picked from commit 1e3e7309997f90fbd0291c05cc859dd9ac0ef161)\n", 
            "date_created": "2016-10-18 09:53:16.824721+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/nova 14.0.2 release.", 
            "date_created": "2016-11-07 04:59:37.417846+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/nova 14.0.2 release.", 
            "date_created": "2016-11-10 02:34:03.958444+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/nova 15.0.0.0b1 development milestone.", 
            "date_created": "2016-11-17 13:14:53.861131+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/nova 14.0.2 release.", 
            "date_created": "2016-12-07 10:45:35.760059+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/nova 13.1.3 release.", 
            "date_created": "2017-02-28 16:00:10.337429+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2016-09-20 10:58:16.633106+00:00"
}