{
    "status": "Opinion", 
    "last_updated": "2014-09-17 15:28:52.829514+00:00", 
    "description": "Description of problem:\n\nIf we break the novnc connections into three parts as below:\n\n client browser (1) -----> novnc proxy (2)  ------> compute node (3)\n\nThen the present status is: connection from browser to proxy is encrypted, while the nonvnc proxy(on controller nodes) to compute nodes are NOT.\n\nWe would like the novnc traffic from controller node to compute nodes be encrypted as wel.", 
    "tags": [
        "console", 
        "libvirt"
    ], 
    "importance": "Wishlist", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1248742", 
    "owner": "None", 
    "id": 1248742, 
    "index": 2706, 
    "openned": "2013-11-06 22:02:09.443487+00:00", 
    "created": "2013-11-06 22:02:09.443487+00:00", 
    "title": "Encrypt VNC Traffic from Proxy Host to Compute Node", 
    "comments": [
        {
            "content": "Description of problem:\n\nIf we break the novnc connections into three parts as below:\n\n client browser (1) -----> novnc proxy (2)  ------> compute node (3)\n\nThen the present status is: connection from browser to proxy is encrypted, while the nonvnc proxy(on controller nodes) to compute nodes are NOT.\n\nWe would like the novnc traffic from controller node to compute nodes be encrypted as wel.", 
            "date_created": "2013-11-06 22:02:09.443487+00:00", 
            "author": "https://api.launchpad.net/1.0/~sross-7"
        }, 
        {
            "content": "I believe the free and open source versions of VNC servers do not natively support encryption of communication.  But the common setup is to tunnel VNC over an SSH connection.  So maybe paramiko could be used in some way.", 
            "date_created": "2014-01-13 14:40:14.326618+00:00", 
            "author": "https://api.launchpad.net/1.0/~ericwb"
        }, 
        {
            "content": "@ericwb: actually, that's not true.  Some (if not many) support various forms of encryption.  In fact, libvirt's built-in VNC server supports SASL, and I've actually implemented code for using Kerberos (via SASL) to encrypt the connection.  SPNEGO is used to obtain credentials from the user, and then s4u2 proxy is used by the novnc proxy to obtain a ticket, which is then used to perform encryption between the proxy and compute node.  It's around here somewhere...", 
            "date_created": "2014-01-22 22:41:38.304910+00:00", 
            "author": "https://api.launchpad.net/1.0/~sross-7"
        }, 
        {
            "content": "For some reason, the commit hook isn't working.  Here's the review: https://review.openstack.org/#/c/77266/", 
            "date_created": "2014-03-06 22:41:02.135852+00:00", 
            "author": "https://api.launchpad.net/1.0/~sross-7"
        }, 
        {
            "content": "This isn't really a bug, it is a major feature request, so it needs to go through the blueprint process, not bug process.", 
            "date_created": "2014-04-09 08:42:14.610522+00:00", 
            "author": "https://api.launchpad.net/1.0/~berrange"
        }, 
        {
            "content": "Put as opinion as it's not a bug", 
            "date_created": "2014-09-17 15:28:52.251755+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }
    ], 
    "closed": "2014-09-17 15:28:37.246427+00:00"
}