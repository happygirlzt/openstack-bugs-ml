{
    "status": "Fix Released", 
    "last_updated": "2013-04-04 11:03:51.772549+00:00", 
    "description": "Disassocating the same floating ip concurrently will cause a 500 error as shown here (stable/folsom):\n\n2012-12-21 00:59:13 8428 TRACE nova.openstack.common.rpc.amqp Traceback (most recent call last):\n2012-12-21 00:59:13 8428 TRACE nova.openstack.common.rpc.amqp File \"/usr/lib/python2.7/dist-packages/nova/openstack/common/rpc/amqp.py\", line 276, in _process_data\n2012-12-21 00:59:13 8428 TRACE nova.openstack.common.rpc.amqp rval = self.proxy.dispatch(ctxt, version, method, **args)\n2012-12-21 00:59:13 8428 TRACE nova.openstack.common.rpc.amqp File \"/usr/lib/python2.7/dist-packages/nova/openstack/common/rpc/dispatcher.py\", line 145, in dispatch\n2012-12-21 00:59:13 8428 TRACE nova.openstack.common.rpc.amqp return getattr(proxyobj, method)(ctxt, **kwargs)\n2012-12-21 00:59:13 8428 TRACE nova.openstack.common.rpc.amqp File \"/usr/lib/python2.7/dist-packages/nova/network/manager.py\", line 642, in _disassociate_floating_ip\n2012-12-21 00:59:13 8428 TRACE nova.openstack.common.rpc.amqp fixed_address = self.db.floating_ip_disassociate(context, address)\n2012-12-21 00:59:13 8428 TRACE nova.openstack.common.rpc.amqp File \"/usr/lib/python2.7/dist-packages/nova/db/api.py\", line 309, in floating_ip_disassociate\n2012-12-21 00:59:13 8428 TRACE nova.openstack.common.rpc.amqp return IMPL.floating_ip_disassociate(context, address)\n2012-12-21 00:59:13 8428 TRACE nova.openstack.common.rpc.amqp File \"/usr/lib/python2.7/dist-packages/nova/db/sqlalchemy/api.py\", line 129, in wrapper\n2012-12-21 00:59:13 8428 TRACE nova.openstack.common.rpc.amqp return f(*args, **kwargs)\n2012-12-21 00:59:13 8428 TRACE nova.openstack.common.rpc.amqp File \"/usr/lib/python2.7/dist-packages/nova/db/sqlalchemy/api.py\", line 851, in floating_ip_disassociate\n2012-12-21 00:59:13 8428 TRACE nova.openstack.common.rpc.amqp floating_ip_ref['fixed_ip_id'])\n2012-12-21 00:59:13 8428 TRACE nova.openstack.common.rpc.amqp File \"/usr/lib/python2.7/dist-packages/nova/db/sqlalchemy/api.py\", line 129, in wrapper\n2012-12-21 00:59:13 8428 TRACE nova.openstack.common.rpc.amqp return f(*args, **kwargs)\n2012-12-21 00:59:13 8428 TRACE nova.openstack.common.rpc.amqp File \"/usr/lib/python2.7/dist-packages/nova/db/sqlalchemy/api.py\", line 1171, in fixed_ip_get\n2012-12-21 00:59:13 8428 TRACE nova.openstack.common.rpc.amqp raise exception.FixedIpNotFound(id=id)\n2012-12-21 00:59:13 8428 TRACE nova.openstack.common.rpc.amqp FixedIpNotFound: No fixed IP associated with id None.\n2012-12-21 00:59:13 8428 TRACE nova.openstack.common.rpc.amqp\n\nIt should just ignore the remaining code if it cannot find the fixed ip.", 
    "tags": [], 
    "importance": "Medium", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1092761", 
    "owner": "https://api.launchpad.net/1.0/~vishvananda", 
    "id": 1092761, 
    "index": 3184, 
    "openned": "2012-12-21 02:15:44.538666+00:00", 
    "created": "2012-12-21 02:15:44.538666+00:00", 
    "title": "concurrent disassociate floating ip calls leads to 500 error", 
    "comments": [
        {
            "content": "Disassocating the same floating ip concurrently will cause a 500 error as shown here (stable/folsom):\n\n2012-12-21 00:59:13 8428 TRACE nova.openstack.common.rpc.amqp Traceback (most recent call last):\n2012-12-21 00:59:13 8428 TRACE nova.openstack.common.rpc.amqp File \"/usr/lib/python2.7/dist-packages/nova/openstack/common/rpc/amqp.py\", line 276, in _process_data\n2012-12-21 00:59:13 8428 TRACE nova.openstack.common.rpc.amqp rval = self.proxy.dispatch(ctxt, version, method, **args)\n2012-12-21 00:59:13 8428 TRACE nova.openstack.common.rpc.amqp File \"/usr/lib/python2.7/dist-packages/nova/openstack/common/rpc/dispatcher.py\", line 145, in dispatch\n2012-12-21 00:59:13 8428 TRACE nova.openstack.common.rpc.amqp return getattr(proxyobj, method)(ctxt, **kwargs)\n2012-12-21 00:59:13 8428 TRACE nova.openstack.common.rpc.amqp File \"/usr/lib/python2.7/dist-packages/nova/network/manager.py\", line 642, in _disassociate_floating_ip\n2012-12-21 00:59:13 8428 TRACE nova.openstack.common.rpc.amqp fixed_address = self.db.floating_ip_disassociate(context, address)\n2012-12-21 00:59:13 8428 TRACE nova.openstack.common.rpc.amqp File \"/usr/lib/python2.7/dist-packages/nova/db/api.py\", line 309, in floating_ip_disassociate\n2012-12-21 00:59:13 8428 TRACE nova.openstack.common.rpc.amqp return IMPL.floating_ip_disassociate(context, address)\n2012-12-21 00:59:13 8428 TRACE nova.openstack.common.rpc.amqp File \"/usr/lib/python2.7/dist-packages/nova/db/sqlalchemy/api.py\", line 129, in wrapper\n2012-12-21 00:59:13 8428 TRACE nova.openstack.common.rpc.amqp return f(*args, **kwargs)\n2012-12-21 00:59:13 8428 TRACE nova.openstack.common.rpc.amqp File \"/usr/lib/python2.7/dist-packages/nova/db/sqlalchemy/api.py\", line 851, in floating_ip_disassociate\n2012-12-21 00:59:13 8428 TRACE nova.openstack.common.rpc.amqp floating_ip_ref['fixed_ip_id'])\n2012-12-21 00:59:13 8428 TRACE nova.openstack.common.rpc.amqp File \"/usr/lib/python2.7/dist-packages/nova/db/sqlalchemy/api.py\", line 129, in wrapper\n2012-12-21 00:59:13 8428 TRACE nova.openstack.common.rpc.amqp return f(*args, **kwargs)\n2012-12-21 00:59:13 8428 TRACE nova.openstack.common.rpc.amqp File \"/usr/lib/python2.7/dist-packages/nova/db/sqlalchemy/api.py\", line 1171, in fixed_ip_get\n2012-12-21 00:59:13 8428 TRACE nova.openstack.common.rpc.amqp raise exception.FixedIpNotFound(id=id)\n2012-12-21 00:59:13 8428 TRACE nova.openstack.common.rpc.amqp FixedIpNotFound: No fixed IP associated with id None.\n2012-12-21 00:59:13 8428 TRACE nova.openstack.common.rpc.amqp\n\nIt should just ignore the remaining code if it cannot find the fixed ip.", 
            "date_created": "2012-12-21 02:15:44.538666+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "This was partially fixed in trunk by:\n    https://review.openstack.org/#/c/14928/", 
            "date_created": "2012-12-21 02:42:41.150518+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/18525", 
            "date_created": "2012-12-21 04:18:27.445115+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: stable/folsom\nReview: https://review.openstack.org/18526", 
            "date_created": "2012-12-21 04:42:59.496045+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/18525\nCommitted: http://github.com/openstack/nova/commit/881a93473c32a7c7e23a8e6dcede8394053408c6\nSubmitter: Jenkins\nBranch:    master\n\ncommit 881a93473c32a7c7e23a8e6dcede8394053408c6\nAuthor: Vishvananda Ishaya <email address hidden>\nDate:   Thu Dec 20 20:13:37 2012 -0800\n\n    Eliminate race conditions in floating association\n    \n    This makes associating and disassociating floating ips atomic and\n    idempotent. This means multiple concurrent messages will not leave\n    behind iptables rules and concurrent request will not cause odd\n    failures.\n    \n    Fixes bug 1092762 and bug 1092761.\n    \n    Change-Id: Idbcad6c1d2a3d4881cf7180b848ed3844fac4054\n", 
            "date_created": "2013-01-04 12:56:43.597767+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/18526\nCommitted: http://github.com/openstack/nova/commit/5a6681222999873f0df9816125fe9888498d91c2\nSubmitter: Jenkins\nBranch:    stable/folsom\n\ncommit 5a6681222999873f0df9816125fe9888498d91c2\nAuthor: Vishvananda Ishaya <email address hidden>\nDate:   Thu Dec 20 20:13:37 2012 -0800\n\n    Eliminate race conditions in floating association\n    \n    This makes associating and disassociating floating ips atomic and\n    idempotent. This means multiple concurrent messages will not leave\n    behind iptables rules and concurrent request will not cause odd\n    failures.\n    \n    Fixes bug 1092762 and bug 1092761.\n    \n    Change-Id: Idbcad6c1d2a3d4881cf7180b848ed3844fac4054\n    (cherry picked from commit 881a93473c32a7c7e23a8e6dcede8394053408c6)\n", 
            "date_created": "2013-01-25 12:48:50.761725+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2013-01-09 10:22:13.662538+00:00"
}