{
    "status": "Opinion", 
    "last_updated": "2013-03-20 19:18:29.266189+00:00", 
    "description": "In nova/__init__.py - gettext.install uses the 'unicode=1' parameter, meaning that whenever the gettext installed function is used, the result will be a unicode string.\n\nThis is great as it means all strings internal to nova will be in unicode format, and automatically outputted in locale.getpreferredencoding().\n\nHowever there are lots of places in nova where 'str()' is used; usually to get the message out of an exception. The str function assumes that the unicode string is encoded in 7-bit-ascii, so could raise an exception as shown here:\n\n>>> u = u'\\u507d\\u306eISCSI: %s'\n>>> str(u)\nTraceback (most recent call last):\n\u00a0\u00a0File \"<stdin>\", line 1, in <module>\nUnicodeEncodeError: 'ascii' codec can't encode characters in position 0-1: ordinal not in range(128)\n\n----\n\nThis bug proposes to enforce a policy that all human readable output messages be stored inside of openstack as unicode strings.\n\n * All wrappings of exception messages in str() should be changed to unicode()\n\nIf str() is truly needed:\n\n\u00a0* For writing to files, it should be changed to: some_unicode_string.decode(locale.getpreferredencoding())\n\u00a0* For outputting over the network, some_unicode_string.decode('utf-8'); should be used\n * For turning ints into string and the like, just leave it as is.\n\n(This bug is a re-write and fix of https://bugs.launchpad.net/nova/+bug/1152188 )", 
    "tags": [
        "i18n", 
        "unicode", 
        "utf-8"
    ], 
    "importance": "Wishlist", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1155280", 
    "owner": "None", 
    "id": 1155280, 
    "index": 2598, 
    "openned": "2013-03-14 18:51:43.965914+00:00", 
    "created": "2013-03-14 18:51:43.965914+00:00", 
    "title": "Use unicode() everywhere and not str()", 
    "comments": [
        {
            "content": "In nova/__init__.py - gettext.install uses the 'unicode=1' parameter, meaning that whenever the gettext installed function is used, the result will be a unicode string.\n\nThis is great as it means all strings internal to nova will be in unicode format, and automatically outputted in locale.getpreferredencoding().\n\nHowever there are lots of places in nova where 'str()' is used; usually to get the message out of an exception. The str function assumes that the unicode string is encoded in 7-bit-ascii, so could raise an exception as shown here:\n\n>>> u = u'\\u507d\\u306eISCSI: %s'\n>>> str(u)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nUnicodeEncodeError: 'ascii' codec can't encode characters in position 0-1: ordinal not in range(128)\n\n----\n\nThis bug proposes that all occurrences of 'str' be changed to 'unicode'. (This is mainly aimed at useages with getting the message out of exceptions).\n\nIf str() is truly needed:\n\n * For writing to files, it should be changed to: some_unicode_string.decode(locale.getpreferredencoding())\n * For outputting over the network, some_unicode_string.decode('utf-8'); should be used\n\n(This bug is a re-write and fix of https://bugs.launchpad.net/nova/+bug/1152188 )", 
            "date_created": "2013-03-14 18:51:43.965914+00:00", 
            "author": "https://api.launchpad.net/1.0/~msherborne+openstack"
        }, 
        {
            "content": "I think the importance will need to be higher, as it will basically make openstack useless for all non-latin alphabet openstack users, by causing caught exceptions to raise UnicodeError.\n\nRight now I'm guessing that's not many people but it may grow, in fact this bug may be a contributing factor to stopping uptake in non-latin based countries, eg. Russia, China, Japan, Japan, parts of India.", 
            "date_created": "2013-03-20 19:18:28.381666+00:00", 
            "author": "https://api.launchpad.net/1.0/~msherborne+openstack"
        }
    ], 
    "closed": "2013-03-18 01:28:06.260196+00:00"
}