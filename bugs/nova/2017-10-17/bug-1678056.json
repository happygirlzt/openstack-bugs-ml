{
    "status": "In Progress", 
    "last_updated": "2017-08-01 14:03:42.846350+00:00", 
    "description": "When an instance is created, Nova adds a record in the API DB 'request_specs' table by providing the user request. That's used by the scheduler for knowing the boot request, also when the instance is moved afterwards.\n\nThat said, when destroying the instance, we don't delete the related RequestSpec record.\nOf course, operators could run a script for deleting them by checking the instance UUIDs, but it would be better if when an instance is hard-deleted (ie. when operators don't use [DEFAULT]/reclaim_instance_interval for restoring deleted instances), we could then delete the RequestSpec too.", 
    "tags": [
        "scheduler"
    ], 
    "importance": "High", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1678056", 
    "owner": "https://api.launchpad.net/1.0/~sylvain-bauza", 
    "id": 1678056, 
    "index": 2057, 
    "openned": "2017-03-31 10:47:14.848277+00:00", 
    "created": "2017-03-31 10:47:14.848277+00:00", 
    "title": "RequestSpec records are never deleted when destroying an instance", 
    "comments": [
        {
            "content": "When an instance is created, Nova adds a record in the API DB 'request_specs' table by providing the user request. That's used by the scheduler for knowing the boot request, also when the instance is moved afterwards.\n\nThat said, when destroying the instance, we don't delete the related RequestSpec record.\nOf course, operators could run a script for deleting them by checking the instance UUIDs, but it would be better if when an instance is hard-deleted (ie. when operators don't use [DEFAULT]/reclaim_instance_interval for restoring deleted instances), we could then delete the RequestSpec too.", 
            "date_created": "2017-03-31 10:47:14.848277+00:00", 
            "author": "https://api.launchpad.net/1.0/~sylvain-bauza"
        }, 
        {
            "content": "\nThere are no currently open reviews on this bug, changing\nthe status back to the previous state and unassigning. If\nthere are active reviews related to this bug, please include\nlinks in comments.\n", 
            "date_created": "2017-06-23 12:55:23.891027+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "Seems like the gerrit hook didn't work https://review.openstack.org/391060", 
            "date_created": "2017-06-23 13:15:45.975845+00:00", 
            "author": "https://api.launchpad.net/1.0/~sylvain-bauza"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/484694", 
            "date_created": "2017-07-18 09:38:09.334033+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Last revision is https://review.openstack.org/391060", 
            "date_created": "2017-07-21 09:20:51.657897+00:00", 
            "author": "https://api.launchpad.net/1.0/~sylvain-bauza"
        }, 
        {
            "content": "This is not a pike-rc-potential bug in my opinion, it's a latent issue.", 
            "date_created": "2017-08-01 14:03:36.212297+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }
    ]
}