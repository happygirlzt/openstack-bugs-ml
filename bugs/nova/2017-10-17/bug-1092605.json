{
    "status": "Invalid", 
    "last_updated": "2014-09-03 12:47:16.028302+00:00", 
    "description": "In current implementation, a lot of optional arguments for nova-manage sub actions are required (aka non-optional).\n\nFor example:\n$nova-manage shell script -h\n usage: nova-manage shell script [-h] [--path <path>]\n                                [action_args [action_args ...]]\n\npositional arguments:\n  action_args\n\noptional arguments:\n  -h, --help     show this help message and exit\n  --path <path>  Script path\n\nWhat the help message says is, --path is optional, which means user can safely ignore this argument but in fact they can't.\n\n$nova-manage shell script\nRuns the script from the specifed path with flags set properly.\n        arguments: path\nAn argument is missing: path\n\nIt seems 'nova-manage' detect a missing argument but that's confusing and inconsistent.  Why the helpl message doesn't suggest so?\n\nLooking into the implementation, nova-manage relies on a cliutils module from oslo to do argument inspection.  This is kind of an indirect and inefficient way to do it.  The argparse module (used by oslo cfg module) is able to do argument checking when parsing arguments.  nova-manage failed to do this due to incorrect usage of @args decorator:\n\n-----------------\n@@ -202,7 +202,7 @@ class ShellCommands(object):\n                 readline.parse_and_bind(\"tab:complete\")\n             code.interact()\n \n-    @args('--path', dest='path', metavar='<path>', help='Script path')\n+    @args('--path', required=True, dest='path', metavar='<path>', help='Script path')\n     def script(self, path):\n\nSimply adding a 'required=True' to @args allows argparse module to detect incorrect input as well as generate consistent help message.  And cliutils module is _not_ needed any more.", 
    "tags": [], 
    "importance": "Undecided", 
    "heat": 8, 
    "link": "https://bugs.launchpad.net/nova/+bug/1092605", 
    "owner": "None", 
    "id": 1092605, 
    "index": 4550, 
    "openned": "2012-12-20 16:38:53.355335+00:00", 
    "created": "2012-12-20 16:38:53.355335+00:00", 
    "title": "Inconsistency between nova-manage help message and actual usage.", 
    "comments": [
        {
            "content": "In current implementation, a lot of optional arguments for nova-manage sub actions are required (aka non-optional).\n\nFor example:\n$nova-manage shell script -h\n usage: nova-manage shell script [-h] [--path <path>]\n                                [action_args [action_args ...]]\n\npositional arguments:\n  action_args\n\noptional arguments:\n  -h, --help     show this help message and exit\n  --path <path>  Script path\n\nWhat the help message says is, --path is optional, which means user can safely ignore this argument but in fact they can't.\n\n$nova-manage shell script\nRuns the script from the specifed path with flags set properly.\n        arguments: path\nAn argument is missing: path\n\nIt seems 'nova-manage' detect a missing argument but that's confusing and inconsistent.  Why the helpl message doesn't suggest so?\n\nLooking into the implementation, nova-manage relies on a cliutils module from oslo to do argument inspection.  This is kind of an indirect and inefficient way to do it.  The argparse module (used by oslo cfg module) is able to do argument checking when parsing arguments.  nova-manage failed to do this due to incorrect usage of @args decorator:\n\n-----------------\n@@ -202,7 +202,7 @@ class ShellCommands(object):\n                 readline.parse_and_bind(\"tab:complete\")\n             code.interact()\n \n-    @args('--path', dest='path', metavar='<path>', help='Script path')\n+    @args('--path', required=True, dest='path', metavar='<path>', help='Script path')\n     def script(self, path):\n\nSimply adding a 'required=True' to @args allows argparse module to detect incorrect input as well as generate consistent help message.  And cliutils module is _not_ needed any more.", 
            "date_created": "2012-12-20 16:38:53.355335+00:00", 
            "author": "https://api.launchpad.net/1.0/~zhiteng-huang"
        }, 
        {
            "content": "Huang,\n\nDo you mind creating a patch per the process documented here\nhttp://wiki.openstack.org/HowToContribute#If_you.27re_a_developer.2C_start_here:", 
            "date_created": "2012-12-28 17:09:20.888725+00:00", 
            "author": "https://api.launchpad.net/1.0/~dims-v"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/18878", 
            "date_created": "2013-01-03 15:29:24.405051+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/22942", 
            "date_created": "2013-02-26 03:10:54.199337+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/23908", 
            "date_created": "2013-03-08 11:06:07.294189+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/23912", 
            "date_created": "2013-03-08 11:06:45.321800+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "nova-manage is largely not used beyond db-sync at this point, marking as invalid because I think this is probably quite out of date.", 
            "date_created": "2014-09-03 12:47:15.216748+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }
    ], 
    "closed": "2014-09-03 12:46:43.032983+00:00"
}