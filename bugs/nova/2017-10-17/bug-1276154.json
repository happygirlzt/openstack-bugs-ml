{
    "status": "Opinion", 
    "last_updated": "2015-03-30 13:08:06.732393+00:00", 
    "description": "Is there a compelling reason why we don't support suspending a paused instance? At the moment we only allow 'active' and 'rescued' states to be suspended.\n\nIn compute/api:\n\n@check_instance_state(vm_state=[vm_states.ACTIVE, vm_states.RESCUED])\n\nTrying to suspend a paused instance results in:\n\nnova suspend b10f8175-1663-41b2-8533-0b0606f369ff\nERROR: Cannot 'suspend' while instance is in vm_state paused (HTTP 409) (Request-ID: req-7349d554-ff48-4155-a62b-967f0813c59c)\n\nI haven't tested with other hypervisors, but as far as libvirt/kvm is concerned it suspends (virsh managedsave) both states ('running', 'paused') and resumes (virsh start) a suspended instance to the pre-suspended state.\n\nA use-case for this is to be able to quickly pause a bunch of instances for security reasons and then suspend one of them conveniently using the API rather than virsh. Taking a suspicious vm to \u2018active\u2019 state so that it can be suspended doesn\u2019t seem like a good idea.", 
    "tags": [
        "compute", 
        "libvirt"
    ], 
    "importance": "Wishlist", 
    "heat": 10, 
    "link": "https://bugs.launchpad.net/nova/+bug/1276154", 
    "owner": "https://api.launchpad.net/1.0/~parthipan", 
    "id": 1276154, 
    "index": 2756, 
    "openned": "2014-02-04 13:38:21.245696+00:00", 
    "created": "2014-02-04 13:38:21.245696+00:00", 
    "title": "suspending a paused instance", 
    "comments": [
        {
            "content": "Is there a particular reason why we don't support suspending a paused instance? At the moment we only allow 'active' and 'rescued' states to be suspended.\n\nIn compute/api:\n\n@check_instance_state(vm_state=[vm_states.ACTIVE, vm_states.RESCUED])\n\nTrying to suspend a paused instance results in:\n\nnova suspend b10f8175-1663-41b2-8533-0b0606f369ff\nERROR: Cannot 'suspend' while instance is in vm_state paused (HTTP 409) (Request-ID: req-7349d554-ff48-4155-a62b-967f0813c59c)\n\nI haven't tested with other hypervisors, but as far as libvirt/kvm is concerned it resumes a suspended instance to the pre-suspended state.", 
            "date_created": "2014-02-04 13:38:21.245696+00:00", 
            "author": "https://api.launchpad.net/1.0/~parthipan"
        }, 
        {
            "content": "Seems like a reasonable relaxation of the state checking in the compute manager.\n\nIt would be good to see if this causes issues on other hypervisors, I guess not.", 
            "date_created": "2014-02-07 14:11:19.386659+00:00", 
            "author": "https://api.launchpad.net/1.0/~johngarbutt"
        }, 
        {
            "content": "Also as part of this we should make sure that on resume nova sets vm_state to the correct state based on the power_state. Right now it assumes a successful resume to result in ACTIVE. But if it was suspended from PAUSED, at least as far as libvirt/kvm is concerned it will come back to 'paused' instead of 'running'. So we might need to do something like\n\n+++ b/nova/compute/manager.py\n\n         instance.power_state = self._get_power_state(context, instance)\n-        instance.vm_state = vm_states.ACTIVE\n+\n+        if instance.power_state == power_state.PAUSED:\n+            instance.vm_state = vm_states.PAUSED\n+        else:\n+            instance.vm_state = vm_states.ACTIVE\n         instance.task_state = None\n", 
            "date_created": "2014-02-07 15:55:28.047520+00:00", 
            "author": "https://api.launchpad.net/1.0/~parthipan"
        }
    ], 
    "closed": "2015-03-30 13:08:04.212557+00:00"
}