{
    "status": "Won't Fix", 
    "last_updated": "2015-01-23 15:26:35.172394+00:00", 
    "description": "Using havana with CentOS packages from EPEL\n\nOn an instance launch, there is a qemu-kvm process that lingers after the instance is launched (in addition to the regular qemu process that the instance is running under).  This appears to be caused by file injection.\n\n\n2013-10-31 19:07:43.542 5275 DEBUG nova.virt.disk.api [req-f2aee8ed-e382-4487-8b75-b4d1eed76ae4 b82b8e94e4b64a2bb8b21eef98b1f5e8 51c36ca36a37475da1d1a2662576688f] Checking if we can resize image /var/lib/nova/instances/5f69468b-544c-4162-88ce-dfcc3a3e7568/disk. size=1073741824 can_resize_image /usr/lib/python2.6/site-packages/nova/virt/disk/api.py:157\n2013-10-31 19:07:43.659 5275 DEBUG nova.virt.disk.api [req-f2aee8ed-e382-4487-8b75-b4d1eed76ae4 b82b8e94e4b64a2bb8b21eef98b1f5e8 51c36ca36a37475da1d1a2662576688f] Checking if we can resize filesystem inside /var/lib/nova/instances/5f69468b-544c-4162-88ce-dfcc3a3e7568/disk. CoW=True is_image_partitionless /usr/lib/python2.6/site-packages/nova/virt/disk/api.py:171\n2013-10-31 19:07:43.661 5275 DEBUG nova.virt.disk.vfs.api [req-f2aee8ed-e382-4487-8b75-b4d1eed76ae4 b82b8e94e4b64a2bb8b21eef98b1f5e8 51c36ca36a37475da1d1a2662576688f] Instance for image imgfile=/var/lib/nova/instances/5f69468b-544c-4162-88ce-dfcc3a3e7568/disk imgfmt=qcow2 partition=None instance_for_image /usr/lib/python2.6/site-packages/nova/virt/disk/vfs/api.py:31\n2013-10-31 19:07:43.662 5275 DEBUG nova.virt.disk.vfs.api [req-f2aee8ed-e382-4487-8b75-b4d1eed76ae4 b82b8e94e4b64a2bb8b21eef98b1f5e8 51c36ca36a37475da1d1a2662576688f] Trying to import guestfs instance_for_image /usr/lib/python2.6/site-packages/nova/virt/disk/vfs/api.py:34\n2013-10-31 19:07:43.680 5275 DEBUG nova.virt.disk.vfs.api [req-f2aee8ed-e382-4487-8b75-b4d1eed76ae4 b82b8e94e4b64a2bb8b21eef98b1f5e8 51c36ca36a37475da1d1a2662576688f] Using primary VFSGuestFS instance_for_image /usr/lib/python2.6/site-packages/nova/virt/disk/vfs/api.py:41\n2013-10-31 19:07:43.685 5275 DEBUG nova.virt.disk.vfs.guestfs [req-f2aee8ed-e382-4487-8b75-b4d1eed76ae4 b82b8e94e4b64a2bb8b21eef98b1f5e8 51c36ca36a37475da1d1a2662576688f] Setting up appliance for /var/lib/nova/instances/5f69468b-544c-4162-88ce-dfcc3a3e7568/disk qcow2 setup /usr/lib/python2.6/site-packages/nova/virt/disk/vfs/guestfs.py:111\n2013-10-31 19:08:30.379 5275 DEBUG nova.virt.disk.vfs.guestfs [req-f2aee8ed-e382-4487-8b75-b4d1eed76ae4 b82b8e94e4b64a2bb8b21eef98b1f5e8 51c36ca36a37475da1d1a2662576688f] Mount guest OS image /var/lib/nova/instances/5f69468b-544c-4162-88ce-dfcc3a3e7568/disk partition None setup_os_static /usr/lib/python2.6/site-packages/nova/virt/disk/vfs/guestfs.py:57\n2013-10-31 19:08:30.644 5275 DEBUG nova.virt.disk.api [req-f2aee8ed-e382-4487-8b75-b4d1eed76ae4 b82b8e94e4b64a2bb8b21eef98b1f5e8 51c36ca36a37475da1d1a2662576688f] Unable to mount image /var/lib/nova/instances/5f69468b-544c-4162-88ce-dfcc3a3e7568/disk with error Error mounting /var/lib/nova/instances/5f69468b-544c-4162-88ce-dfcc3a3e7568/disk with libguestfs (mount_options: /dev/vda on / (options: ''): mount: you must specify the filesystem type). Cannot resize. is_image_partitionless /usr/lib/python2.6/site-packages/nova/virt/disk/api.py:183\n\nProcess list:\nnova      5403 30.6  6.8 1009036 271024 ?      S    19:07   1:44 /usr/libexec/qemu-kvm -global virtio-blk-pci.scsi=off -nodefconfig -nodefaults -nographic -drive file=/var/lib/nova/instances/5f69468b-544c-4162-88ce-dfcc3a3e7568/disk,cache=none,format=qcow2,if=virtio -nodefconfig -machine accel=kvm:tcg -m 500 -no-reboot -device virtio-serial -serial stdio -device sga -chardev socket,path=/tmp/libguestfsQqFC2I/guestfsd.sock,id=channel0 -device virtserialport,chardev=channel0,name=org.libguestfs.channel.0 -kernel /var/tmp/.guestfs-162/kernel.5275 -initrd /var/tmp/.guestfs-162/initrd.5275 -append panic=1 console=ttyS0 udevtimeout=300 no_timer_check acpi=off printk.time=1 cgroup_disable=memory selinux=0  TERM=screen  -drive file=/var/tmp/.guestfs-162/root.5275,snapshot=on,if=virtio,cache=unsafe\n\nqemu      5736 31.4  7.3 2056408 292336 ?      S    19:08   1:31 /usr/bin/qemu-system-x86_64 -name instance-00000025 -S -M rhel6.4.0 -cpu Opteron_G3,+nodeid_msr,+wdt,+skinit,+ibs,+osvw,+3dnowprefetch,+cr8legacy,+extapic,+cmp_legacy,+3dnow,+3dnowext,+pdpe1gb,+fxsr_opt,+mmxext,+ht,+vme -no-kvm -m 512 -smp 1,sockets=1,cores=1,threads=1 -uuid 5f69468b-544c-4162-88ce-dfcc3a3e7568 -smbios type=1,manufacturer=Red Hat Inc.,product=OpenStack Nova,version=2013.2-2.el6,serial=cef1de3d-e616-b2d2-95d8-5c8f36a149f1,uuid=5f69468b-544c-4162-88ce-dfcc3a3e7568 -nodefconfig -nodefaults -chardev socket,id=charmonitor,path=/var/lib/libvirt/qemu/instance-00000025.monitor,server,nowait -mon chardev=charmonitor,id=monitor,mode=control -rtc base=utc -no-shutdown -device piix3-usb-uhci,id=usb,bus=pci.0,addr=0x1.0x2 -drive file=/var/lib/nova/instances/5f69468b-544c-4162-88ce-dfcc3a3e7568/disk,if=none,id=drive-virtio-disk0,format=qcow2,cache=none -device virtio-blk-pci,scsi=off,bus=pci.0,addr=0x4,drive=drive-virtio-disk0,id=virtio-disk0,bootindex=1 -netdev tap,fd=23,id=hostnet0 -device rtl8139,netdev=hostnet0,id=net0,mac=fa:16:3e:1e:6d:10,bus=pci.0,addr=0x3 -chardev file,id=charserial0,path=/var/lib/nova/instances/5f69468b-544c-4162-88ce-dfcc3a3e7568/console.log -device isa-serial,chardev=charserial0,id=serial0 -chardev pty,id=charserial1 -device isa-serial,chardev=charserial1,id=serial1 -device usb-tablet,id=input0 -vnc 0.0.0.0:0 -k en-us -vga cirrus -device virtio-balloon-pci,id=balloon0,bus=pci.0,addr=0x5\n\n\n[root@breu-mini-centos-compute2 ~]# rpm -qa | grep guestfs\nlibguestfs-1.16.34-2.el6.x86_64\nlibguestfs-tools-1.16.34-2.el6.x86_64\npython-libguestfs-1.16.34-2.el6.x86_64\nlibguestfs-tools-c-1.16.34-2.el6.x86_64\n\n\nWe have set the following in nova.conf in an attempt to disable file injection altogether:\nlibvirt_inject_key=false\nlibvirt_inject_password=false\nlibvirt_inject_partition=-1\ninjected_network_template=\"\"\n\n\nHowever instance creation still appears to be using guestfs and failing.  The qemu-kvm process lingers after the instance is destroyed and is repeatable.", 
    "tags": [
        "libvirt", 
        "resize"
    ], 
    "importance": "Medium", 
    "heat": 54, 
    "link": "https://bugs.launchpad.net/nova/+bug/1246852", 
    "owner": "https://api.launchpad.net/1.0/~sahid-ferdjaoui", 
    "id": 1246852, 
    "index": 3687, 
    "openned": "2013-10-31 19:14:33.922009+00:00", 
    "created": "2013-10-31 19:14:33.922009+00:00", 
    "title": "havana on CentOS instance file injection problem", 
    "comments": [
        {
            "content": "Using havana with CentOS packages from EPEL\n\nOn an instance launch, there is a qemu-kvm process that lingers after the instance is launched (in addition to the regular qemu process that the instance is running under).  This appears to be caused by file injection.\n\n\n2013-10-31 19:07:43.542 5275 DEBUG nova.virt.disk.api [req-f2aee8ed-e382-4487-8b75-b4d1eed76ae4 b82b8e94e4b64a2bb8b21eef98b1f5e8 51c36ca36a37475da1d1a2662576688f] Checking if we can resize image /var/lib/nova/instances/5f69468b-544c-4162-88ce-dfcc3a3e7568/disk. size=1073741824 can_resize_image /usr/lib/python2.6/site-packages/nova/virt/disk/api.py:157\n2013-10-31 19:07:43.659 5275 DEBUG nova.virt.disk.api [req-f2aee8ed-e382-4487-8b75-b4d1eed76ae4 b82b8e94e4b64a2bb8b21eef98b1f5e8 51c36ca36a37475da1d1a2662576688f] Checking if we can resize filesystem inside /var/lib/nova/instances/5f69468b-544c-4162-88ce-dfcc3a3e7568/disk. CoW=True is_image_partitionless /usr/lib/python2.6/site-packages/nova/virt/disk/api.py:171\n2013-10-31 19:07:43.661 5275 DEBUG nova.virt.disk.vfs.api [req-f2aee8ed-e382-4487-8b75-b4d1eed76ae4 b82b8e94e4b64a2bb8b21eef98b1f5e8 51c36ca36a37475da1d1a2662576688f] Instance for image imgfile=/var/lib/nova/instances/5f69468b-544c-4162-88ce-dfcc3a3e7568/disk imgfmt=qcow2 partition=None instance_for_image /usr/lib/python2.6/site-packages/nova/virt/disk/vfs/api.py:31\n2013-10-31 19:07:43.662 5275 DEBUG nova.virt.disk.vfs.api [req-f2aee8ed-e382-4487-8b75-b4d1eed76ae4 b82b8e94e4b64a2bb8b21eef98b1f5e8 51c36ca36a37475da1d1a2662576688f] Trying to import guestfs instance_for_image /usr/lib/python2.6/site-packages/nova/virt/disk/vfs/api.py:34\n2013-10-31 19:07:43.680 5275 DEBUG nova.virt.disk.vfs.api [req-f2aee8ed-e382-4487-8b75-b4d1eed76ae4 b82b8e94e4b64a2bb8b21eef98b1f5e8 51c36ca36a37475da1d1a2662576688f] Using primary VFSGuestFS instance_for_image /usr/lib/python2.6/site-packages/nova/virt/disk/vfs/api.py:41\n2013-10-31 19:07:43.685 5275 DEBUG nova.virt.disk.vfs.guestfs [req-f2aee8ed-e382-4487-8b75-b4d1eed76ae4 b82b8e94e4b64a2bb8b21eef98b1f5e8 51c36ca36a37475da1d1a2662576688f] Setting up appliance for /var/lib/nova/instances/5f69468b-544c-4162-88ce-dfcc3a3e7568/disk qcow2 setup /usr/lib/python2.6/site-packages/nova/virt/disk/vfs/guestfs.py:111\n2013-10-31 19:08:30.379 5275 DEBUG nova.virt.disk.vfs.guestfs [req-f2aee8ed-e382-4487-8b75-b4d1eed76ae4 b82b8e94e4b64a2bb8b21eef98b1f5e8 51c36ca36a37475da1d1a2662576688f] Mount guest OS image /var/lib/nova/instances/5f69468b-544c-4162-88ce-dfcc3a3e7568/disk partition None setup_os_static /usr/lib/python2.6/site-packages/nova/virt/disk/vfs/guestfs.py:57\n2013-10-31 19:08:30.644 5275 DEBUG nova.virt.disk.api [req-f2aee8ed-e382-4487-8b75-b4d1eed76ae4 b82b8e94e4b64a2bb8b21eef98b1f5e8 51c36ca36a37475da1d1a2662576688f] Unable to mount image /var/lib/nova/instances/5f69468b-544c-4162-88ce-dfcc3a3e7568/disk with error Error mounting /var/lib/nova/instances/5f69468b-544c-4162-88ce-dfcc3a3e7568/disk with libguestfs (mount_options: /dev/vda on / (options: ''): mount: you must specify the filesystem type). Cannot resize. is_image_partitionless /usr/lib/python2.6/site-packages/nova/virt/disk/api.py:183\n\nProcess list:\nnova      5403 30.6  6.8 1009036 271024 ?      S    19:07   1:44 /usr/libexec/qemu-kvm -global virtio-blk-pci.scsi=off -nodefconfig -nodefaults -nographic -drive file=/var/lib/nova/instances/5f69468b-544c-4162-88ce-dfcc3a3e7568/disk,cache=none,format=qcow2,if=virtio -nodefconfig -machine accel=kvm:tcg -m 500 -no-reboot -device virtio-serial -serial stdio -device sga -chardev socket,path=/tmp/libguestfsQqFC2I/guestfsd.sock,id=channel0 -device virtserialport,chardev=channel0,name=org.libguestfs.channel.0 -kernel /var/tmp/.guestfs-162/kernel.5275 -initrd /var/tmp/.guestfs-162/initrd.5275 -append panic=1 console=ttyS0 udevtimeout=300 no_timer_check acpi=off printk.time=1 cgroup_disable=memory selinux=0  TERM=screen  -drive file=/var/tmp/.guestfs-162/root.5275,snapshot=on,if=virtio,cache=unsafe\n\nqemu      5736 31.4  7.3 2056408 292336 ?      S    19:08   1:31 /usr/bin/qemu-system-x86_64 -name instance-00000025 -S -M rhel6.4.0 -cpu Opteron_G3,+nodeid_msr,+wdt,+skinit,+ibs,+osvw,+3dnowprefetch,+cr8legacy,+extapic,+cmp_legacy,+3dnow,+3dnowext,+pdpe1gb,+fxsr_opt,+mmxext,+ht,+vme -no-kvm -m 512 -smp 1,sockets=1,cores=1,threads=1 -uuid 5f69468b-544c-4162-88ce-dfcc3a3e7568 -smbios type=1,manufacturer=Red Hat Inc.,product=OpenStack Nova,version=2013.2-2.el6,serial=cef1de3d-e616-b2d2-95d8-5c8f36a149f1,uuid=5f69468b-544c-4162-88ce-dfcc3a3e7568 -nodefconfig -nodefaults -chardev socket,id=charmonitor,path=/var/lib/libvirt/qemu/instance-00000025.monitor,server,nowait -mon chardev=charmonitor,id=monitor,mode=control -rtc base=utc -no-shutdown -device piix3-usb-uhci,id=usb,bus=pci.0,addr=0x1.0x2 -drive file=/var/lib/nova/instances/5f69468b-544c-4162-88ce-dfcc3a3e7568/disk,if=none,id=drive-virtio-disk0,format=qcow2,cache=none -device virtio-blk-pci,scsi=off,bus=pci.0,addr=0x4,drive=drive-virtio-disk0,id=virtio-disk0,bootindex=1 -netdev tap,fd=23,id=hostnet0 -device rtl8139,netdev=hostnet0,id=net0,mac=fa:16:3e:1e:6d:10,bus=pci.0,addr=0x3 -chardev file,id=charserial0,path=/var/lib/nova/instances/5f69468b-544c-4162-88ce-dfcc3a3e7568/console.log -device isa-serial,chardev=charserial0,id=serial0 -chardev pty,id=charserial1 -device isa-serial,chardev=charserial1,id=serial1 -device usb-tablet,id=input0 -vnc 0.0.0.0:0 -k en-us -vga cirrus -device virtio-balloon-pci,id=balloon0,bus=pci.0,addr=0x5\n\n\n[root@breu-mini-centos-compute2 ~]# rpm -qa | grep guestfs\nlibguestfs-1.16.34-2.el6.x86_64\nlibguestfs-tools-1.16.34-2.el6.x86_64\npython-libguestfs-1.16.34-2.el6.x86_64\nlibguestfs-tools-c-1.16.34-2.el6.x86_64\n\n\nWe have set the following in nova.conf in an attempt to disable file injection altogether:\nlibvirt_inject_key=false\nlibvirt_inject_password=false\nlibvirt_inject_partition=-1\ninjected_network_template=\"\"\n\n\nHowever instance creation still appears to be using guestfs and failing.  The qemu-kvm process lingers after the instance is destroyed and is repeatable.", 
            "date_created": "2013-10-31 19:14:33.922009+00:00", 
            "author": "https://api.launchpad.net/1.0/~breu"
        }, 
        {
            "content": "Bug 1241659 looks related.", 
            "date_created": "2013-11-18 03:16:29.822641+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "What do you have set for use_cow_images in nova.conf?\n\nWhat's the metadata on the image?", 
            "date_created": "2013-11-18 03:16:50.509421+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "We also got the same issue during stress test.\nOur configuration is CentOS 6.4(x86_64) and RDO havana (openstack-nova-compute-2013.2-2.el6.noarch).\n\nThis issue comes from insufficient error handling of nova regarding VM image setup using libguestfs.\n\nBy some reason, qemu processes created by libguestfs above stuck, and this is a kind of memory leak. That's why eventually we will see qemu process invocation failures because of insufficient memory.\n\nWe need to patch two files in order to resolve the above issue like the following:\n\nhttps://github.com/openstack/nova/blob/master/nova/virt/disk/api.py\nhttps://github.com/openstack/nova/blob/master/nova/virt/disk/vfs/guestfs.py\n\n * nova/virt/disk/api.py\n   1. is_image_partitionless() (filesystem resize use it)\n     1-1. move \"fs = vfs.VFS.instance_for_image(image, 'qcow2', None)\"\n          to top of 'try' statement.\n          (instance_for_image() is only used dynamic importing\n          (VFS implementing class), so it's OK.)\n     1-2. add 'finally' clause to 'try' statement, and move \n          'fs.teardown()' to in it.\n \n   2. inject_data()\n     2-1. same as 1-1, 1-2.\n\n * nova/virt/disk/vfs/guestfs.py\n   3. setup()\n     3-1. remove 'self.handle = None' in exception handling for\n          releasing resource in teardown().\n   4. teardown()\n     4-1. before releasing resource, check 'self.handle is not None'.\n          if self.handle is None, return right now.\n", 
            "date_created": "2013-11-18 08:25:26.372620+00:00", 
            "author": "https://api.launchpad.net/1.0/~sagaray"
        }, 
        {
            "content": "Hello,\nI'm also hitting the same problem with Fedora 19 + RDO.  \n\nThanks to Yukinori Sagara for providing the work around, I've attached a patch based on his directions if that is helpful to anyone.  \n\nIt appears to do the trick, if someone would like to check it however I'd be very grateful.\n\nRegards, Evan.", 
            "date_created": "2013-11-19 21:38:38.281777+00:00", 
            "author": "https://api.launchpad.net/1.0/~evanjfraser"
        }, 
        {
            "content": "Thanks evanjfraser, for submitting patche.\nI checked the patch, and found some point need to be fixed.\n\n * nova/virt/disk/api.py\n   1. is_image_partitionless()\n      The patch moves 'return False' into 'finally' clause.\n      i think we must call 'return True' at bottom of method, if guestfs's call exits successfully.\n      'return False' should be called at the bottom of 'except' clause,\n\n   2. inject_data()\n      ** addition **\n      I forgot to write one thing in the last post, sorry.\n\n      We should call 'fs.teardown()' everytime after 'fs.setup()' called,\n\n      We need to merge two try statement, and move 'return inject_data_into_fs()' to the bottom of try clause.\n      (move to the next line of 'fs.setup()')\n\n * nova/virt/disk/vfs/guestfs.py\n   3. setup()\n      'self.handle = None' remains in 'except Exception' clause.\n      it makes us disable to release self.handle's resources in teardown().\n\n   4. teardown()\n      Patch is almost OK, but I think patch's 'self.handle is None' check is in too deep.\n      It's better the next of 'LOG.debug()' or next of first 'try:'.\n      (second 'try:' is too deep for None check.)\n", 
            "date_created": "2013-11-21 06:08:30.670601+00:00", 
            "author": "https://api.launchpad.net/1.0/~sagaray"
        }, 
        {
            "content": "Hi Yukinori,\n\nRe: 2. inject_data()\n\nDo you mean to put the fs.teardown() in the try like:\n\n    try:\n        fs.setup()\n        fs.teardown()\n        return inject_data_into_fs(fs, key, net, metadata,\n\nOr to leave the fs.teardown() in the finally clause?\n\nRegards, Evan.", 
            "date_created": "2013-11-25 01:44:11.208584+00:00", 
            "author": "https://api.launchpad.net/1.0/~evanjfraser"
        }, 
        {
            "content": "Actually never mind, the finally clause would never get reached.  It will either return from the Try or the Except clauses.", 
            "date_created": "2013-11-25 01:45:36.103192+00:00", 
            "author": "https://api.launchpad.net/1.0/~evanjfraser"
        }, 
        {
            "content": "Hello again, I've submitted a revised patch.  Many thanks,\n\nEvan.", 
            "date_created": "2013-11-25 02:10:38.460995+00:00", 
            "author": "https://api.launchpad.net/1.0/~evanjfraser"
        }, 
        {
            "content": "Hi evanjfraser, thanks to reply repeatedly.\n\n> Re: 2. inject_data()\n\n> Or to leave the fs.teardown() in the finally clause?\n\nIt is correct. \nEverytime fs.teardown() should be called, whether exception\noccurs or not.\n\n> Actually never mind, the finally clause would never get reached. It will either \n> return from the Try or the Except clauses.\n\nJust to confirm, 'finally clause' is called in anytime when enter in\ntry statement once, if no exception occurs, even if 'return' is called\nin try clause.\n\nThe below is an example;\n\ndef is_image_partitionless():\n    ...\n    fs = vfs.VFS.instance_for_image()  ...(1)\n    try:\n        fs.setup()      ...(2)\n    except:\n        ...\n        return False    ...(3)\n    finally:\n        fs.teardown()   ...(4)\n\n    # other check (try - except - finally)\n\n    return True         ...(5)\n\n* is_image_partitionless() successfully exit pattern\n\n  (1) -> (2) -> (4) -> (5)\n\n* is_image_partitionless() abnormally exit pattern\n\n  (1) -> (2) -> (3) -> (4)\n\n> file_injection_v2.patch\n\nThanks patch revised.\n\n* line 33, indent is too deep.\n* line 36, 50-52 wrong. 'fs.teardown()' should called in finally clause.\n\nI think above is right. Please check it.\n\ndef inject_data(...)\n    ...\n    if use_cow:\n        fmt = \"qcow2\"\n    fs = vfs.VFS.instance_for_image...\n    try:\n        os.stat(image)  # added in current master\n        fs.setup()\n        return inject_data_into_fs(fs, ...) # 'fs' using here\n    except Exception as e:\n        ...\n        return False\n    finally:\n        fs.teardown()\n\n# try statement in inject_data() should not split for catch fs\n# exception surely in finally clause.\n", 
            "date_created": "2013-11-25 05:03:50.948448+00:00", 
            "author": "https://api.launchpad.net/1.0/~sagaray"
        }, 
        {
            "content": "Sorry , I missed.\n\n> I think above is right. Please check it.\nI think below is right. Please check it.", 
            "date_created": "2013-11-25 05:12:14.615100+00:00", 
            "author": "https://api.launchpad.net/1.0/~sagaray"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/59853", 
            "date_created": "2013-12-03 22:13:32.807777+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "I have verified that the patch works and am submitting upstream", 
            "date_created": "2013-12-03 22:13:34.325918+00:00", 
            "author": "https://api.launchpad.net/1.0/~breu"
        }, 
        {
            "content": "Fix proposed to branch: stable/havana\nReview: https://review.openstack.org/59854", 
            "date_created": "2013-12-03 22:14:53.539958+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Thanks rackerjoe.\nI checked both gerrit, but both patch isn't sufficient.\n\n* api.py\n    Daniel Berrange also pointed, fs.setup()'s exception is not handled.\n    * https://review.openstack.org/#/c/59853/1/nova/virt/disk/api.py\n      newer version, line 338\n    * https://review.openstack.org/#/c/59854/1/nova/virt/disk/api.py\n      newer version, line 326\n    \n    To move fs.teardown() into finally block, \n    'fs = vfs.VFS.instance_for_image' needs to move outside of try block.\n    \n    This is an example.\n    --------------------------------\n    fs = vfs.VFS.instance_for_image(...)\n    try:\n        os.stat(image)\n        fs.setup()\n        return inject_data_into_fs(...)\n    except Exception as e:\n        for inject in ....\n    ...\n    return False\n    finally:\n        fs.teardown()\n    --------------------------------\n\n* guestfs.py\n    guestfs.py remains old comment.\n\n    patch removes 'self.handle = None', so \n    '# dereference object and implicitly close()' comment also\n    should be removed.\n\n    * https://review.openstack.org/#/c/59853/1/nova/virt/disk/vfs/guestfs.py\n      newer version, line 121\n    * https://review.openstack.org/#/c/59854/1/nova/virt/disk/vfs/guestfs.py\n      newer version, line 125\n", 
            "date_created": "2013-12-05 05:29:50.879034+00:00", 
            "author": "https://api.launchpad.net/1.0/~sagaray"
        }, 
        {
            "content": "Example indent was broken. Below is correct.\n   \n    --------------------------------\n    fs = vfs.VFS.instance_for_image(...)\n    try:\n        os.stat(image)\n        fs.setup()\n        return inject_data_into_fs(...)\n    except Exception as e:\n        for inject in ....\n        ...\n        return False\n    finally:\n        fs.teardown()\n    --------------------------------\n", 
            "date_created": "2013-12-05 05:33:08.088496+00:00", 
            "author": "https://api.launchpad.net/1.0/~sagaray"
        }, 
        {
            "content": "I downloaded the files from gerrit, but found the patch isn't sufficient.\n\nIf the swap disk setting in the flavor is not zero, openstack will fail to start the instance.\nIf the swap disk setting in the flavor is zero, everything will be fine and the instance can be started successfully.\n\nSo it seemed that we forgot to consider the injected swap disk setting.", 
            "date_created": "2013-12-11 11:47:45.982975+00:00", 
            "author": "https://api.launchpad.net/1.0/~steven-fl2000"
        }, 
        {
            "content": "Found another problem related with the resize: The resize function work, but the new added disk space shown as a free space and didn't merge into the existing root file system as before.\n\nI started an instance with the flavor of \"8Cpu, 8G memory,100G disk\", after the instance started, I double checked the disk use the disk utility tool inside the instance and found there are 2 disk device: /dev/vda1 is 20G, /dev/vda (new added space) shown as a 80G free space.\n\nCompare with the instance from another openstack cloud (old havana version installed 2 month before), the resized (new added) 80G space will be merged into the /dev/vda1, not a new free space and a new device.\n\nI will try to use the old api.py and guestfs.py files from the old havana system to see whether it can works well as before.\n", 
            "date_created": "2013-12-12 03:14:43.065807+00:00", 
            "author": "https://api.launchpad.net/1.0/~steven-fl2000"
        }, 
        {
            "content": "Hello stevenguo.\n\nI think, you have encountered another problem.\n\nThe topic of this bug report is Qemu process leak problem.\nInstance boot is successful but if you continue to make a overload over a period of time, Qemu process leak occur.\n\nYour problem is, instance boot (with swap disk) always failure.\nThe part of code I patched, swap disk associated routine was not included.\nSo I think your booting problem may be another one.\n\nAbout resizing.\n\nResize behavior seems to be different, whether image file has a partition table, or not.\nYou could check your image file?\n", 
            "date_created": "2013-12-12 05:15:58.756131+00:00", 
            "author": "https://api.launchpad.net/1.0/~sagaray"
        }, 
        {
            "content": "Thank you very much, Yukinori!", 
            "date_created": "2013-12-14 11:26:55.141561+00:00", 
            "author": "https://api.launchpad.net/1.0/~steven-fl2000"
        }, 
        {
            "content": "Has the above been fixed in Icehouse ? because I    get the following error when launching an Ubuntu 12.4 image or fedora 19 (~ 2G size):\n\n2014-06-03 12:57:30.287 11842 DEBUG nova.virt.disk.api [req-6eae3328-28b8-41a4-957b-c3ffa22f8931 a4291f4775864bb982a1da28db202f96 fb7478566b4544578bc7ae15e7443b65] Unable to mount image /var/lib/nova/instances/58ffb7c4-0db2-4926-8004-54c2c5f6ea55/disk with error Error mounting /var/lib/nova/instances/58ffb7c4-0db2-4926-8004-54c2c5f6ea55/disk with libguestfs (mount_options: /dev/sda on / (options: ''): mount: you must specify the filesystem type). Cannot resize. is_image_partitionless /usr/lib/python2.6/site-packages/nova/virt/disk/api.py:211\n\nThe values in nova.conf are :\n\nlibvirt_inject_key=true\nlibvirt_inject_password=false\nlibvirt_inject_partition=-1  (or -2)\ninjected_network_template==$pybasedir/nova/virt/interfaces.template\n\nThe launch is stuck at 'spawn'  state \n\nThe Ubuntu  image has a swap partition\n\nSuch a launch  worked for me with Havana stable /RDO   !\n\nOn the other hand when I launch a cirros3.0 image (13M) I do not get the above  error  and the  instance becomes Active\nThe cirros image has only one entry in the partition table (fdisk -l)  -no swap\n\nIf a patch is needed where to take it from ?", 
            "date_created": "2014-06-05 16:47:49.426090+00:00", 
            "author": "https://api.launchpad.net/1.0/~dubi-il"
        }, 
        {
            "content": "it seems that the above error message should be a Warning (or better INFO) since it is printed in the  function: is_image_partitionless()  and indicates that the image has more than 1 partition and therefore returns False . The exception   that writes this error message is thrown by a code called from libguestfs  and should not be treated as error !\n\nAnyhow this leaves the problem of having a launch of partitioned image being stuck at nova 'spawn' state  -yet unsolved \n(at least in all-in-one deployment of Icehouse) \n", 
            "date_created": "2014-06-08 13:18:29.532886+00:00", 
            "author": "https://api.launchpad.net/1.0/~dubi-il"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/118677", 
            "date_created": "2014-09-03 16:10:45.303327+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "patch is WIP", 
            "date_created": "2014-09-26 19:14:04.518696+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "havana is now closed", 
            "date_created": "2014-12-10 22:25:31.892479+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "From the comment thread, which seems to refer to more than one issues, it is unclear whether the defect was ever resolved in Havana. I tried file injection with CentOS 6.5 image on Havana and it didn't work. It works fine with the cirros image. ", 
            "date_created": "2014-12-26 18:12:07.537417+00:00", 
            "author": "https://api.launchpad.net/1.0/~chowdhury-imtiaz"
        }, 
        {
            "content": "Change abandoned by Sean Dague (<email address hidden>) on branch: master\nReview: https://review.openstack.org/118677\nReason: This review is > 4 weeks without comment, and failed Jenkins the last time it was checked. We are abandoning this for now. Feel free to reactivate the review by pressing the restore button and leaving a 'recheck' comment to get fresh test results.", 
            "date_created": "2015-01-23 15:26:34.363042+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2014-12-10 22:25:17.491986+00:00"
}