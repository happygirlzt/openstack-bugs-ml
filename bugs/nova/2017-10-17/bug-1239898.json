{
    "status": "Fix Released", 
    "last_updated": "2014-04-17 08:47:43.090244+00:00", 
    "description": "One of following commits broke unittests. I am not quite sure how it's related, but they are broken ever since these changes were merged.\n\nhttps://github.com/openstack/nova/commit/f99641f09965b8f5036a976e9a5f5f28a542d800\nhttps://github.com/openstack/nova/commit/eaf5636544a9b2ae1e87f74d0cdb989f8a41b008\n\nrunning=OS_STDOUT_CAPTURE=${OS_STDOUT_CAPTURE:-1} \\\nOS_STDERR_CAPTURE=${OS_STDERR_CAPTURE:-1} \\\nOS_TEST_TIMEOUT=${OS_TEST_TIMEOUT:-60} \\\n${PYTHON:-python} -m subunit.run discover -t ./ ./nova/tests  \n======================================================================\nFAIL: nova.tests.virt.xenapi.test_xenapi.XenAPIVMTestCase.test_instance_snapshot_fails_with_no_primary_vdi\ntags: worker-0\n----------------------------------------------------------------------\nEmpty attachments:\n  stderr\n  stdout\n\npythonlogging:'': {{{\nLoading network driver 'nova.network.linux_net'\nLoading network driver 'nova.network.linux_net'\nLoading network driver 'nova.network.linux_net'\nglance.upload_vhd attempt 1/1\n}}}\n\nTraceback (most recent call last):\n  File \"nova/tests/virt/xenapi/test_xenapi.py\", line 522, in test_instance_snapshot_fails_with_no_primary_vdi\n    lambda *args, **kwargs: None)\n  File \"/home/jenkins/workspace/csi-nova-upstream/.tox/py26/lib/python2.6/site-packages/testtools/testcase.py\", line 394, in assertRaises\n    self.assertThat(our_callable, matcher)\n  File \"/home/jenkins/workspace/csi-nova-upstream/.tox/py26/lib/python2.6/site-packages/testtools/testcase.py\", line 417, in assertThat\n    raise MismatchError(matchee, matcher, mismatch, verbose)\nMismatchError: <bound method XenAPIDriver.snapshot of <nova.virt.xenapi.driver.XenAPIDriver object at 0x19e61490>> returned None\n======================================================================\nFAIL: nova.tests.virt.xenapi.test_xenapi.XenAPIVMTestCase.test_rescue_preserve_disk_on_failure\ntags: worker-0\n----------------------------------------------------------------------\nEmpty attachments:\n  stderr\n  stdout\n\npythonlogging:'': {{{\nLoading network driver 'nova.network.linux_net'\nLoading network driver 'nova.network.linux_net'\nLoading network driver 'nova.network.linux_net'\nglance.download_vhd attempt 1/1\nglance.download_vhd attempt 1/1\nFailed to spawn, rolling back\nTraceback (most recent call last):\n  File \"nova/virt/xenapi/vmops.py\", line 498, in _spawn\n    boot_instance_step(undo_mgr, vm_ref)\n  File \"nova/virt/xenapi/vmops.py\", line 152, in inner\n    rv = f(*args, **kwargs)\n  File \"nova/virt/xenapi/vmops.py\", line 461, in boot_instance_step\n    self._start(instance, vm_ref)\n  File \"nova/tests/virt/xenapi/test_xenapi.py\", line 1276, in fake_start\n    raise test.TestingException('Start Error')\nTestingException: Start Error\nVM already halted, skipping shutdown...\n['HANDLE_INVALID', 'VDI', '8c985bc1-998b-4dd2-b797-cbe86bf2abb2']\nTraceback (most recent call last):\n  File \"nova/virt/xenapi/vm_utils.py\", line 439, in destroy_vdi\n    session.call_xenapi('VDI.destroy', vdi_ref)\n  File \"nova/virt/xenapi/driver.py\", line 779, in call_xenapi\n    return session.xenapi_request(method, args)\n  File \"nova/virt/xenapi/fake.py\", line 756, in xenapi_request\n    return meth(*full_params)\n  File \"nova/virt/xenapi/fake.py\", line 801, in <lambda>\n    return lambda *params: self._destroy(name, params)\n  File \"nova/virt/xenapi/fake.py\", line 917, in _destroy\n    raise Failure(['HANDLE_INVALID', table, ref])\nFailure: ['HANDLE_INVALID', 'VDI', '8c985bc1-998b-4dd2-b797-cbe86bf2abb2']\nUnable to destroy VDI 8c985bc1-998b-4dd2-b797-cbe86bf2abb2\n}}}\n\nTraceback (most recent call last):\n  File \"nova/tests/virt/xenapi/test_xenapi.py\", line 1285, in test_rescue_preserve_disk_on_failure\n    self.assertEqual(vdi_ref, vdi_ref2)\n  File \"/home/jenkins/workspace/csi-nova-upstream/.tox/py26/lib/python2.6/site-packages/testtools/testcase.py\", line 322, in assertEqual\n    self.assertThat(observed, matcher, message)\n  File \"/home/jenkins/workspace/csi-nova-upstream/.tox/py26/lib/python2.6/site-packages/testtools/testcase.py\", line 417, in assertThat\n    raise MismatchError(matchee, matcher, mismatch, verbose)\nMismatchError: !=:\nreference = '62ba4799-a2bf-4a47-aef6-9341b70a2ad1'\nactual    = '8a4dcae5-7a8f-49db-92af-775f80f935fc'\n======================================================================\nFAIL: process-returncode\ntags: worker-0\n----------------------------------------------------------------------\nBinary content:\n  traceback (test/plain; charset=\"utf8\")\nRan 19145 tests in 2223.014s\nFAILED (id=0, failures=3, skips=12)\nerror: testr failed (1)\nERROR: InvocationError: '/home/jenkins/workspace/csi-nova-upstream/.tox/py26/bin/python setup.py test --slowest --testr-args='", 
    "tags": [
        "havana-backport-potential"
    ], 
    "importance": "High", 
    "heat": 14, 
    "link": "https://bugs.launchpad.net/nova/+bug/1239898", 
    "owner": "https://api.launchpad.net/1.0/~soren", 
    "id": 1239898, 
    "index": 1275, 
    "openned": "2013-10-15 01:47:07.438257+00:00", 
    "created": "2013-10-15 01:47:07.438257+00:00", 
    "title": "test_rescue_preserve_disk_on_failure unittest broken", 
    "comments": [
        {
            "content": "One of following commits broke unittests. I am not quite sure how it's related, but they are broken ever since these changes were merged.\n\nhttps://github.com/openstack/nova/commit/f99641f09965b8f5036a976e9a5f5f28a542d800\nhttps://github.com/openstack/nova/commit/eaf5636544a9b2ae1e87f74d0cdb989f8a41b008\n\nrunning=OS_STDOUT_CAPTURE=${OS_STDOUT_CAPTURE:-1} \\\nOS_STDERR_CAPTURE=${OS_STDERR_CAPTURE:-1} \\\nOS_TEST_TIMEOUT=${OS_TEST_TIMEOUT:-60} \\\n${PYTHON:-python} -m subunit.run discover -t ./ ./nova/tests  \n======================================================================\nFAIL: nova.tests.virt.xenapi.test_xenapi.XenAPIVMTestCase.test_instance_snapshot_fails_with_no_primary_vdi\ntags: worker-0\n----------------------------------------------------------------------\nEmpty attachments:\n  stderr\n  stdout\n\npythonlogging:'': {{{\nLoading network driver 'nova.network.linux_net'\nLoading network driver 'nova.network.linux_net'\nLoading network driver 'nova.network.linux_net'\nglance.upload_vhd attempt 1/1\n}}}\n\nTraceback (most recent call last):\n  File \"nova/tests/virt/xenapi/test_xenapi.py\", line 522, in test_instance_snapshot_fails_with_no_primary_vdi\n    lambda *args, **kwargs: None)\n  File \"/home/jenkins/workspace/csi-nova-upstream/.tox/py26/lib/python2.6/site-packages/testtools/testcase.py\", line 394, in assertRaises\n    self.assertThat(our_callable, matcher)\n  File \"/home/jenkins/workspace/csi-nova-upstream/.tox/py26/lib/python2.6/site-packages/testtools/testcase.py\", line 417, in assertThat\n    raise MismatchError(matchee, matcher, mismatch, verbose)\nMismatchError: <bound method XenAPIDriver.snapshot of <nova.virt.xenapi.driver.XenAPIDriver object at 0x19e61490>> returned None\n======================================================================\nFAIL: nova.tests.virt.xenapi.test_xenapi.XenAPIVMTestCase.test_rescue_preserve_disk_on_failure\ntags: worker-0\n----------------------------------------------------------------------\nEmpty attachments:\n  stderr\n  stdout\n\npythonlogging:'': {{{\nLoading network driver 'nova.network.linux_net'\nLoading network driver 'nova.network.linux_net'\nLoading network driver 'nova.network.linux_net'\nglance.download_vhd attempt 1/1\nglance.download_vhd attempt 1/1\nFailed to spawn, rolling back\nTraceback (most recent call last):\n  File \"nova/virt/xenapi/vmops.py\", line 498, in _spawn\n    boot_instance_step(undo_mgr, vm_ref)\n  File \"nova/virt/xenapi/vmops.py\", line 152, in inner\n    rv = f(*args, **kwargs)\n  File \"nova/virt/xenapi/vmops.py\", line 461, in boot_instance_step\n    self._start(instance, vm_ref)\n  File \"nova/tests/virt/xenapi/test_xenapi.py\", line 1276, in fake_start\n    raise test.TestingException('Start Error')\nTestingException: Start Error\nVM already halted, skipping shutdown...\n['HANDLE_INVALID', 'VDI', '8c985bc1-998b-4dd2-b797-cbe86bf2abb2']\nTraceback (most recent call last):\n  File \"nova/virt/xenapi/vm_utils.py\", line 439, in destroy_vdi\n    session.call_xenapi('VDI.destroy', vdi_ref)\n  File \"nova/virt/xenapi/driver.py\", line 779, in call_xenapi\n    return session.xenapi_request(method, args)\n  File \"nova/virt/xenapi/fake.py\", line 756, in xenapi_request\n    return meth(*full_params)\n  File \"nova/virt/xenapi/fake.py\", line 801, in <lambda>\n    return lambda *params: self._destroy(name, params)\n  File \"nova/virt/xenapi/fake.py\", line 917, in _destroy\n    raise Failure(['HANDLE_INVALID', table, ref])\nFailure: ['HANDLE_INVALID', 'VDI', '8c985bc1-998b-4dd2-b797-cbe86bf2abb2']\nUnable to destroy VDI 8c985bc1-998b-4dd2-b797-cbe86bf2abb2\n}}}\n\nTraceback (most recent call last):\n  File \"nova/tests/virt/xenapi/test_xenapi.py\", line 1285, in test_rescue_preserve_disk_on_failure\n    self.assertEqual(vdi_ref, vdi_ref2)\n  File \"/home/jenkins/workspace/csi-nova-upstream/.tox/py26/lib/python2.6/site-packages/testtools/testcase.py\", line 322, in assertEqual\n    self.assertThat(observed, matcher, message)\n  File \"/home/jenkins/workspace/csi-nova-upstream/.tox/py26/lib/python2.6/site-packages/testtools/testcase.py\", line 417, in assertThat\n    raise MismatchError(matchee, matcher, mismatch, verbose)\nMismatchError: !=:\nreference = '62ba4799-a2bf-4a47-aef6-9341b70a2ad1'\nactual    = '8a4dcae5-7a8f-49db-92af-775f80f935fc'\n======================================================================\nFAIL: process-returncode\ntags: worker-0\n----------------------------------------------------------------------\nBinary content:\n  traceback (test/plain; charset=\"utf8\")\nRan 19145 tests in 2223.014s\nFAILED (id=0, failures=3, skips=12)\nerror: testr failed (1)\nERROR: InvocationError: '/home/jenkins/workspace/csi-nova-upstream/.tox/py26/bin/python setup.py test --slowest --testr-args='", 
            "date_created": "2013-10-15 01:47:07.438257+00:00", 
            "author": "https://api.launchpad.net/1.0/~bhuvan"
        }, 
        {
            "content": "Change https://github.com/openstack/nova/commit/eaf5636544a9b2ae1e87f74d0cdb989f8a41b008 is broken (but the code before was broken too). There's bug 1239890 open for it with a fix.\n\nIt doesn't look likely that it's got anything to do with this failure unfortunately :(", 
            "date_created": "2013-10-15 16:45:57.812762+00:00", 
            "author": "https://api.launchpad.net/1.0/~stanislaw-pitucha"
        }, 
        {
            "content": "Stanislaw, yep. Commit https://github.com/openstack/nova/commit/eaf5636544a9b2ae1e87f74d0cdb989f8a41b008 doesn't cause this failure.\n\nThe failure is caused by this commit. https://github.com/openstack/nova/commit/f99641f09965b8f5036a976e9a5f5f28a542d800", 
            "date_created": "2013-10-15 20:03:36.341541+00:00", 
            "author": "https://api.launchpad.net/1.0/~bhuvan"
        }, 
        {
            "content": "I know why this happens, but I can't explain why it doesn't happen for everyone.\n\nThe problem is that we're maintaining two sets of stubs. One inside of mox and one outside of mock (self.mox + self.stubs in nova.test.TestCase).\n\nThe stub cleanup process is smart enough to unwind the stubs in the opposite order of how they were put in place, so if you stub out the same method twice, you get will end up with the correct method after the cleanup. However, this doesn't work when there are two separate sets of stubs, because the order in which each of the sets of stubs are cleaned up, might not be opposite of how they were put in place.\n\nI have a fix in the works that unites the two sets of stubs so this won't happen anymore.", 
            "date_created": "2013-10-16 07:58:18.894103+00:00", 
            "author": "https://api.launchpad.net/1.0/~soren"
        }, 
        {
            "content": "This problem happens consistently for me, occasionally in my Jenkins instance, and never on the OpenStack infrastructure, afaics. This means it's dependent on environmental factors. As such, if these factors were to change on the OpenStack infrastructure, it could get in the way of getting important security fixes out in a timely fashion. As such, I'm setting it to \"High\" importance.", 
            "date_created": "2013-10-16 08:48:20.921750+00:00", 
            "author": "https://api.launchpad.net/1.0/~soren"
        }, 
        {
            "content": "Proposed fix here (goes into oslo-incubator):\n\n    https://review.openstack.org/#/c/52037/", 
            "date_created": "2013-10-16 09:18:36.411136+00:00", 
            "author": "https://api.launchpad.net/1.0/~soren"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/52037\nCommitted: http://github.com/openstack/oslo-incubator/commit/f4a485530ebd123cdb80b8b8a378ff9847b2a5d7\nSubmitter: Jenkins\nBranch:    master\n\ncommit f4a485530ebd123cdb80b8b8a378ff9847b2a5d7\nAuthor: Soren Hansen <email address hidden>\nDate:   Wed Oct 16 08:35:03 2013 +0000\n\n    Consolidate the use of stubs\n    \n    We have two separate StubOutForTesting objects when running tests. One\n    that is instantiated directly in the moxstubout fixture and one that\n    mox has for itself.\n    \n    When a method is stubbed, the overridden method is kept in a cache in\n    the StubOutForTesting instance. When calling UnsetAll() on this\n    instance, the order of the cache is reversed and the original methods\n    are put back in place. This means if you have SomeObject with a method\n    called actual_method and you stub that out with\n    \n        stubs.Set(SomeObject, \"actual_method\", fake_method)\n    \n    you end up with a this tuple in the cache:\n    \n        (SomeObject, \"actual_method\", SomeObject.actual_method)\n    \n    If you stub it out again\n    \n        stubs.Set(SomeObject, \"actual_method\", fake_method2)\n    \n    this tuple is appended to the cache:\n    \n        (SomeObject, \"actual_method\", fake_method)\n    \n    When calling UnsetAll(), the cache is reversed and becomes:\n    \n        [(SomeObject, \"actual_method\", fake_method),\n         (SomeObject, \"actual_method\", SomeObject.actual_method)]\n    \n    So first, SomeObject.actual_method (which currently is fake_method2) is\n    set to fake_method, and then set to the original\n    SomeObject.actual_method medthod.\n    \n    If, however, you stub out the same method using both mox and our own\n    StubOutForTesting object, one of the caches will have\n    \n        (SomeObject, \"actual_method\", SomeObject.actual_method)\n    \n    and the other will have:\n    \n        (SomeObject, \"actual_method\", fake_method)\n    \n    At this point, restoring everything back to the original state depends\n    on these StubOutForTesting objects getting cleaned up in the correct\n    order. If it's done in the wrong order, SomeObject.actual_method\n    (currently set to fake_method2) will get reset to the original\n    SomeObject.actual_method and subsequently get \"reset\" to fake_method\n    which makes life miserable for subsequent tests that might rely on the\n    real implementation.\n    \n    This change stops us from having two separate StubOutForTesting objects\n    by simply using mox's all the time.\n    \n    Fixes bug #1239898\n    \n    Change-Id: I3a768eca3432e6df09c87bd86bffa9763aabfbed\n", 
            "date_created": "2013-10-16 11:54:15.609906+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/52094", 
            "date_created": "2013-10-16 12:41:57.100525+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This fix isn't quite right because it causes other tests to fail in nova/tests/network/test_manager.py.\n\n\nThe original code in Nova was carefully order to avoid these issues, but the Oslo code that added this fixture swapped the order of the cleanup calls, causing this issue to recur.\n\nThe test that a fix works in Nova is:\n\nnosetests nova/tests/network/test_manager.py nova/tests/virt/xenapi/test_xenapi.py\n\nI'm going to reintroduce the original (working) Nova code as the fix for Oslo.", 
            "date_created": "2013-10-16 17:24:56.841504+00:00", 
            "author": "https://api.launchpad.net/1.0/~rconradharris"
        }, 
        {
            "content": "For reference, the original nova commit to fix this is https://github.com/openstack/nova/commit/4e560d49d4a8d08341dae6df5e123e1be1b3c779", 
            "date_created": "2013-10-16 17:26:35.998692+00:00", 
            "author": "https://api.launchpad.net/1.0/~rconradharris"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/52174", 
            "date_created": "2013-10-16 17:50:47.338026+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/52094\nCommitted: http://github.com/openstack/nova/commit/0b513a7ea4518977f1b1ee9e30e0289f77db4130\nSubmitter: Jenkins\nBranch:    master\n\ncommit 0b513a7ea4518977f1b1ee9e30e0289f77db4130\nAuthor: Soren Hansen <email address hidden>\nDate:   Wed Oct 16 12:36:28 2013 +0000\n\n    Sync fixture module from oslo\n    \n    Changes pulled:\n    \n      [f4a4855] Consolidate the use of stubs\n      [6111131] Make openstack.common.fixture.config Py3 compliant\n    \n    Due to the changes to the stub use, a couple of tests (the ones in\n    test_shelve) needed to have some cleanups removed that depended on some\n    stubs still being in place and not others. The normal DB cleanup\n    procedure handles this correctly, so the cleanups were superfluous\n    anyway.\n    \n    The test in test_manager was split in two to avoid it resetting its\n    stubs halfway through. It was testing two separate scenarios anyway, so\n    it's the correct thing to do regardless.\n    \n    I'll submit a patch later to get rid of all the superfluous VerifyAll\n    and UnsetStubs calls across the entire test suite, but for now, let's\n    just get the gate working again, shall we?\n    \n    Fixes bug #1239898\n    \n    Change-Id: I3aa4dfc0261a861e5eaa570849329292d64236ed\n", 
            "date_created": "2013-10-17 11:46:56.879324+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2013-12-04 10:03:54.392407+00:00"
}