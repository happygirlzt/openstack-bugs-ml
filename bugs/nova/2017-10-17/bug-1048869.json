{
    "status": "Fix Released", 
    "last_updated": "2012-09-27 15:32:30.098420+00:00", 
    "description": "The os-networks extension allows a user to request a network and ip when booting, but it fails with a stack trace reporting AdminRequired. This is not an explicit check but a side-effect of an unused call in the validate_networks code.\n\nDEBUG (shell:534) User does not have admin privileges\nTraceback (most recent call last):\n\n  File \"/opt/stack/nova/nova/openstack/common/rpc/amqp.py\", line 275, in _process_data\n    rval = self.proxy.dispatch(ctxt, version, method, **args)\n\n  File \"/opt/stack/nova/nova/openstack/common/rpc/dispatcher.py\", line 145, in dispatch\n    return getattr(proxyobj, method)(ctxt, **kwargs)\n\n  File \"/opt/stack/nova/nova/network/manager.py\", line 262, in wrapped\n    return func(self, context, *args, **kwargs)\n\n  File \"/opt/stack/nova/nova/network/manager.py\", line 1684, in validate_networks\n    for network_uuid, address in networks:\n\n  File \"/opt/stack/nova/nova/network/manager.py\", line 1709, in _get_networks_by_uuids\n    @wrap_check_policy\n\n  File \"/opt/stack/nova/nova/db/api.py\", line 820, in network_get_all_by_uuids\n    return IMPL.network_get_all_by_uuids(context, network_uuids, project_id)\n\n  File \"/opt/stack/nova/nova/db/sqlalchemy/api.py\", line 112, in wrapper\n    raise exception.AdminRequired()\n\nAdminRequired: User does not have admin privileges\n (HTTP 403) (Request-ID: req-164604d1-32da-498b-ab8d-23d4ed7ef56f)\nTraceback (most recent call last):\n  File \"/opt/stack/python-novaclient/novaclient/shell.py\", line 531, in main\n    OpenStackComputeShell().main(sys.argv[1:])\n  File \"/opt/stack/python-novaclient/novaclient/shell.py\", line 467, in main\n    args.func(self.cs, args)\n  File \"/opt/stack/python-novaclient/novaclient/v1_1/shell.py\", line 227, in do_boot\n    server = cs.servers.create(*boot_args, **boot_kwargs)\n  File \"/opt/stack/python-novaclient/novaclient/v1_1/servers.py\", line 498, in create\n    **boot_kwargs)\n  File \"/opt/stack/python-novaclient/novaclient/v1_1/base.py\", line 159, in _boot\n    return_raw=return_raw, **kwargs)\n  File \"/opt/stack/python-novaclient/novaclient/base.py\", line 148, in _create\n    _resp, body = self.api.client.post(url, body=body)\n  File \"/opt/stack/python-novaclient/novaclient/client.py\", line 210, in post\n    return self._cs_request(url, 'POST', **kwargs)\n  File \"/opt/stack/python-novaclient/novaclient/client.py\", line 194, in _cs_request\n    **kwargs)\n  File \"/opt/stack/python-novaclient/novaclient/client.py\", line 176, in _time_request\n    resp, body = self.request(url, method, **kwargs)\n  File \"/opt/stack/python-novaclient/novaclient/client.py\", line 170, in request\n    raise exceptions.from_response(resp, body)\nForbidden: User does not have admin privileges", 
    "tags": [], 
    "importance": "High", 
    "heat": 16, 
    "link": "https://bugs.launchpad.net/nova/+bug/1048869", 
    "owner": "https://api.launchpad.net/1.0/~vishvananda", 
    "id": 1048869, 
    "index": 801, 
    "openned": "2012-09-10 23:56:23.840617+00:00", 
    "created": "2012-09-10 23:56:23.840617+00:00", 
    "title": "Regular user can't boot with requested ip", 
    "comments": [
        {
            "content": "The os-networks extension allows a user to request a network and ip when booting, but it fails with a stack trace reporting AdminRequired. This is not an explicit check but a side-effect of an unused call in the validate_networks code.\n\nDEBUG (shell:534) User does not have admin privileges\nTraceback (most recent call last):\n\n  File \"/opt/stack/nova/nova/openstack/common/rpc/amqp.py\", line 275, in _process_data\n    rval = self.proxy.dispatch(ctxt, version, method, **args)\n\n  File \"/opt/stack/nova/nova/openstack/common/rpc/dispatcher.py\", line 145, in dispatch\n    return getattr(proxyobj, method)(ctxt, **kwargs)\n\n  File \"/opt/stack/nova/nova/network/manager.py\", line 262, in wrapped\n    return func(self, context, *args, **kwargs)\n\n  File \"/opt/stack/nova/nova/network/manager.py\", line 1684, in validate_networks\n    for network_uuid, address in networks:\n\n  File \"/opt/stack/nova/nova/network/manager.py\", line 1709, in _get_networks_by_uuids\n    @wrap_check_policy\n\n  File \"/opt/stack/nova/nova/db/api.py\", line 820, in network_get_all_by_uuids\n    return IMPL.network_get_all_by_uuids(context, network_uuids, project_id)\n\n  File \"/opt/stack/nova/nova/db/sqlalchemy/api.py\", line 112, in wrapper\n    raise exception.AdminRequired()\n\nAdminRequired: User does not have admin privileges\n (HTTP 403) (Request-ID: req-164604d1-32da-498b-ab8d-23d4ed7ef56f)\nTraceback (most recent call last):\n  File \"/opt/stack/python-novaclient/novaclient/shell.py\", line 531, in main\n    OpenStackComputeShell().main(sys.argv[1:])\n  File \"/opt/stack/python-novaclient/novaclient/shell.py\", line 467, in main\n    args.func(self.cs, args)\n  File \"/opt/stack/python-novaclient/novaclient/v1_1/shell.py\", line 227, in do_boot\n    server = cs.servers.create(*boot_args, **boot_kwargs)\n  File \"/opt/stack/python-novaclient/novaclient/v1_1/servers.py\", line 498, in create\n    **boot_kwargs)\n  File \"/opt/stack/python-novaclient/novaclient/v1_1/base.py\", line 159, in _boot\n    return_raw=return_raw, **kwargs)\n  File \"/opt/stack/python-novaclient/novaclient/base.py\", line 148, in _create\n    _resp, body = self.api.client.post(url, body=body)\n  File \"/opt/stack/python-novaclient/novaclient/client.py\", line 210, in post\n    return self._cs_request(url, 'POST', **kwargs)\n  File \"/opt/stack/python-novaclient/novaclient/client.py\", line 194, in _cs_request\n    **kwargs)\n  File \"/opt/stack/python-novaclient/novaclient/client.py\", line 176, in _time_request\n    resp, body = self.request(url, method, **kwargs)\n  File \"/opt/stack/python-novaclient/novaclient/client.py\", line 170, in request\n    raise exceptions.from_response(resp, body)\nForbidden: User does not have admin privileges", 
            "date_created": "2012-09-10 23:56:23.840617+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "Note that you can lock down the ability for using this by setting a policy for validate_networks.", 
            "date_created": "2012-09-10 23:58:20.651071+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/12749", 
            "date_created": "2012-09-11 00:40:56.955027+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/12749\nCommitted: http://github.com/openstack/nova/commit/7937144fce54570b2da543663e6ee5e64b1c3cdb\nSubmitter: Jenkins\nBranch:    master\n\ncommit 7937144fce54570b2da543663e6ee5e64b1c3cdb\nAuthor: Vishvananda Ishaya <email address hidden>\nDate:   Fri Sep 14 00:21:03 2012 +0000\n\n    Clean up handling of project_only in network_get\n    \n    There was some funky logic for getting networks to work around\n    the project only decorator. This changes the code to match what\n    we actually want which is:\n    \n    In Flat and FlatDHCP mode non-admins should be able to access\n    networks that belong to their project or networks that have no\n    project_id assigned.\n    \n    In VlanManager, project_id=None projects should not be accessible\n    as this means the project hasn't been assigned yet. The assignment\n    is done with an elevated context.\n    \n    This patch adds some logic to model_query to allow None in the\n    project_only filter and makes network_get_all_by_uuids and\n    network_get use it.\n    \n    fixes bug 1048869\n    \n    Change-Id: I5377cea87dec8e9d0d9cec84e07128c5c6e8dca3\n", 
            "date_created": "2012-09-17 18:31:47.910804+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2012-09-19 06:35:22.437702+00:00"
}