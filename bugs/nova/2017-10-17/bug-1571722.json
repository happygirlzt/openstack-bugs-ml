{
    "status": "Fix Released", 
    "last_updated": "2016-09-02 01:16:30.393973+00:00", 
    "description": "We are seeing some bug reports coming in where users experience an \"Unexpected Exception\" error when neutronclient fails. This is not particularly helpful for anyone experiencing this issue and it would be nice to have something more specific to aid in troubleshooting.\n\nWe could arguably blanket wrap all connection failures from neutronclient in nova.network.neutronv2.api and raise those up as something more specific. See cinderclient usage in nova, for example.\n\nlike https://github.com/openstack/python-neutronclient/blob/master/neutronclient/common/exceptions.py#L204 or https://github.com/openstack/python-neutronclient/blob/master/neutronclient/common/exceptions.py#L109", 
    "tags": [
        "api", 
        "neutron"
    ], 
    "importance": "Medium", 
    "heat": 24, 
    "link": "https://bugs.launchpad.net/nova/+bug/1571722", 
    "owner": "https://api.launchpad.net/1.0/~sahid-ferdjaoui", 
    "id": 1571722, 
    "index": 4518, 
    "openned": "2016-04-18 16:03:09.307624+00:00", 
    "created": "2016-04-18 16:03:09.307624+00:00", 
    "title": "Neutronclient failures throw unhelpful 'Unexpected Exception'", 
    "comments": [
        {
            "content": "We are seeing some bug reports coming in where users experience an \"Unexpected Exception\" error when neutronclient fails. This is not particularly helpful for anyone experiencing this issue and it would be nice to have something more specific to aid in troubleshooting.\n\nWe could arguably blanket wrap all connection failures from neutronclient in nova.network.neutronv2.api and raise those up as something more specific. See cinderclient usage in nova, for example.\n\nlike https://github.com/openstack/python-neutronclient/blob/master/neutronclient/common/exceptions.py#L204 or https://github.com/openstack/python-neutronclient/blob/master/neutronclient/common/exceptions.py#L109", 
            "date_created": "2016-04-18 16:03:09.307624+00:00", 
            "author": "https://api.launchpad.net/1.0/~auggy"
        }, 
        {
            "content": "See this bug for an example of a reported issue - https://bugs.launchpad.net/nova/+bug/1563513", 
            "date_created": "2016-04-18 16:04:32.386721+00:00", 
            "author": "https://api.launchpad.net/1.0/~auggy"
        }, 
        {
            "content": "Yeah, we should wrap neutronclient calls and handle 401/403 type errors with the appropriate NovaException which are handled in the REST API so we don't spew 500s for misconfiguration or auth issues.", 
            "date_created": "2016-04-18 16:05:07.961680+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Bug 1567655 is also related to this.  It turns out that the neutron security group driver in nova is doing direct calls to the python-neutronclient rather than using our network API abstraction in nova.network.neutronv2.api.API.  The problem with this is if we added error handling to the neutron API wrapper that we have, the security group driver for neutron doesn't benefit from that.", 
            "date_created": "2016-04-22 14:56:26.910616+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "This gets a bit weird, at least for bug 1567655, because in that case the error comes from keystoneauth (the ConnectFailed exception) because the auth values in nova.conf for neutron are wrong, so the request connection fails.\n\npython-neutronclient doesn't handle that error from keystoneauth so nova would have to handle both, if it's going to handle both.", 
            "date_created": "2016-04-22 18:10:37.988990+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Related fix proposed to branch: master\nReview: https://review.openstack.org/309550", 
            "date_created": "2016-04-22 18:32:40.812131+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "sahid has a related change here: https://review.openstack.org/#/c/312014/", 
            "date_created": "2016-05-03 14:43:28.173527+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/312014\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=80d39a65062a424c9efe42257a38a09c6af2f3e9\nSubmitter: Jenkins\nBranch:    master\n\ncommit 80d39a65062a424c9efe42257a38a09c6af2f3e9\nAuthor: Sahid Orentino Ferdjaoui <email address hidden>\nDate:   Tue May 3 06:54:21 2016 -0400\n\n    network: handle unauthorized exception from neutron\n    \n    Neutron can raise an unauthorized exception for an expired or invalid\n    token. In case of admin context we log a message to inform operators\n    that the Neutron admin creadential are not well configured then return\n    a 500 to user. In case of user context we return 401.\n    \n    Change-Id: I87c8b86373967639eb55b4cc3b7d6cbd9780f3ac\n    Closes-Bug: #1571722\n", 
            "date_created": "2016-07-25 16:29:21.337416+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Change abandoned by Matt Riedemann (<email address hidden>) on branch: master\nReview: https://review.openstack.org/309550", 
            "date_created": "2016-07-27 17:39:06.617523+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/nova 14.0.0.0b3 development milestone.", 
            "date_created": "2016-09-02 01:16:29.643331+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2016-07-25 16:29:19.164206+00:00"
}