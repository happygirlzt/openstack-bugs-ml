{
    "status": "Fix Released", 
    "last_updated": "2014-10-16 08:28:44.317559+00:00", 
    "description": "It is possible to send two DELETE requests via api and in_use.floating_ips will be decreased by two. It can be changed even to value below zero:\n\nLogs:\n<182>Dec 19 17:52:08 node-2 nova-nova.osapi_compute.wsgi.server INFO: 172.16.0.2 \"DELETE /v2/46f4516b6fbd461eb30f17409\n36c2167/os-floating-ips/1 HTTP/1.1\" status: 202 len: 209 time: 0.0797279\n<182>Dec 19 17:52:08 node-2 nova-nova.osapi_compute.wsgi.server INFO: (19517) accepted ('172.16.0.2', 47613)\n<182>Dec 19 17:52:08 node-2 nova-nova.osapi_compute.wsgi.server INFO: 172.16.0.2 \"DELETE /v2/46f4516b6fbd461eb30f17409\n36c2167/os-floating-ips/1 HTTP/1.1\" status: 202 len: 209 time: 0.0804379\n<182>Dec 19 17:52:08 node-2 nova-nova.osapi_compute.wsgi.server INFO: (19517) accepted ('172.16.0.2', 47615)\n<0>Dec 19 17:52:08 node-2 <BF><180>nova-nova.db.sqlalchemy.api WARNING: Change will make usage less than 0 for the fol\nlowing resources: ['floating_ips']\n\nDatabase:\nmysql> select resource,in_use from quota_usages;\n+-----------------+--------+\n| resource | in_use |\n+-----------------+--------+\n| security_groups | 0 |\n| instances | 0 |\n| ram | 0 |\n| cores | 0 |\n| fixed_ips | 0 |\n| floating_ips | -1 |\n+-----------------+--------+\n6 rows in set (0.00 sec)", 
    "tags": [
        "api", 
        "havana-backport-potential", 
        "icehouse-backport-potential", 
        "network"
    ], 
    "importance": "Medium", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1268569", 
    "owner": "https://api.launchpad.net/1.0/~jichenjc", 
    "id": 1268569, 
    "index": 3765, 
    "openned": "2014-01-13 11:51:08.435977+00:00", 
    "created": "2014-01-13 11:51:08.435977+00:00", 
    "title": "Double removal of floating IP in nova-network", 
    "comments": [
        {
            "content": "It is possible to send two DELETE requests via api and in_use.floating_ips will be decreased by two. It can be changed even to value below zero:\n\nLogs:\n<182>Dec 19 17:52:08 node-2 nova-nova.osapi_compute.wsgi.server INFO: 172.16.0.2 \"DELETE /v2/46f4516b6fbd461eb30f17409\n36c2167/os-floating-ips/1 HTTP/1.1\" status: 202 len: 209 time: 0.0797279\n<182>Dec 19 17:52:08 node-2 nova-nova.osapi_compute.wsgi.server INFO: (19517) accepted ('172.16.0.2', 47613)\n<182>Dec 19 17:52:08 node-2 nova-nova.osapi_compute.wsgi.server INFO: 172.16.0.2 \"DELETE /v2/46f4516b6fbd461eb30f17409\n36c2167/os-floating-ips/1 HTTP/1.1\" status: 202 len: 209 time: 0.0804379\n<182>Dec 19 17:52:08 node-2 nova-nova.osapi_compute.wsgi.server INFO: (19517) accepted ('172.16.0.2', 47615)\n<0>Dec 19 17:52:08 node-2 <BF><180>nova-nova.db.sqlalchemy.api WARNING: Change will make usage less than 0 for the fol\nlowing resources: ['floating_ips']\n\nDatabase:\nmysql> select resource,in_use from quota_usages;\n+-----------------+--------+\n| resource | in_use |\n+-----------------+--------+\n| security_groups | 0 |\n| instances | 0 |\n| ram | 0 |\n| cores | 0 |\n| fixed_ips | 0 |\n| floating_ips | -1 |\n+-----------------+--------+\n6 rows in set (0.00 sec)", 
            "date_created": "2014-01-13 11:51:08.435977+00:00", 
            "author": "https://api.launchpad.net/1.0/~dpyzhov"
        }, 
        {
            "content": "sahid - are you still working on this?", 
            "date_created": "2014-02-24 05:58:15.800404+00:00", 
            "author": "https://api.launchpad.net/1.0/~cyeoh-0"
        }, 
        {
            "content": "Looks like we have a race here.", 
            "date_created": "2014-02-24 05:58:50.199697+00:00", 
            "author": "https://api.launchpad.net/1.0/~cyeoh-0"
        }, 
        {
            "content": "looks to me it can be a race condition like chris said\n\nfollowing are my guess because more log as context might help us a lot\nDmitry Pyzhov , do you have detailed log as reference? \n\nwe support bulk_delete floating ips and delete float ips \nso 2 API might be called simultaneously, is it possible? ", 
            "date_created": "2014-02-25 09:42:20.716242+00:00", 
            "author": "https://api.launchpad.net/1.0/~jichenjc"
        }, 
        {
            "content": "There was an error in our script and there were two identical delete requests via api at the same time. Sorry, but we did not saved log files. But issue was easily reproducible a month ago.", 
            "date_created": "2014-02-25 17:18:46.263212+00:00", 
            "author": "https://api.launchpad.net/1.0/~dpyzhov"
        }, 
        {
            "content": "ok, so my guess is not correct, another thing want to confirm is 2 delete means 2 delete instance operations or 2 delete floating ip(disassociate) operations? I will try to recreate it ", 
            "date_created": "2014-02-26 01:00:39.531693+00:00", 
            "author": "https://api.launchpad.net/1.0/~jichenjc"
        }, 
        {
            "content": "Delete of the same floating ip from the project, two times. In nova-network.", 
            "date_created": "2014-02-26 11:42:14.476620+00:00", 
            "author": "https://api.launchpad.net/1.0/~dpyzhov"
        }, 
        {
            "content": "According to this bug https://bugs.launchpad.net/nova/+bug/1268569\n\nI am wondering someone can help me in understanding the concurrent access prevention on api layer? \n\nif we have more than 1 nova-api server, let's say 2(thread A and thread B) ,so both of them should be able to handle request from user \nlet's say we delete same floating ip 2 times at almost same time, \nif thread A and B both pass the test in following logic (that's possible because they run concurrently)\n\napi/openstack/compute/contrib/floating_ips.py \ndef delete(self, req, id):\n..........\ntry:\n            floating_ip = self.network_api.get_floating_ip(context, id)\n        except (exception.NotFound, exception.InvalidID):\n            msg = _(\"Floating ip not found for id %s\") % id\n            raise webob.exc.HTTPNotFound(explanation=msg)\n..........\n\nthen both of them will call following function \nself.network_api.release_floating_ip(context, address)\n\nat last function deallocate_floating_ip in nova/network/float_ips.py will be called by both A and B ,this will not lead to logic error \nbecause db layer will not return error if it can't find the floating_ip \nbut quota will be reserve and commit 2 times, that lead to wrong quota error \n\nCould someone help to clarify my understanding or any help on what kind of concurrent access prevention we have ? ", 
            "date_created": "2014-03-03 07:35:10.046003+00:00", 
            "author": "https://api.launchpad.net/1.0/~jichenjc"
        }, 
        {
            "content": "my analysis above, posted to openstack-dev but no response until now ....\nwill see whether can find help through IRC", 
            "date_created": "2014-03-03 07:35:52.078081+00:00", 
            "author": "https://api.launchpad.net/1.0/~jichenjc"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/77829", 
            "date_created": "2014-03-04 09:23:04.868794+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/77829\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=cbbb9de51b52793f6d424c58199b22a422d39aed\nSubmitter: Jenkins\nBranch:    master\n\ncommit cbbb9de51b52793f6d424c58199b22a422d39aed\nAuthor: jichenjc <email address hidden>\nDate:   Fri Feb 28 04:55:46 2014 +0800\n\n    Add lock on API layer delete floating IP\n    \n    There are potential race condition when multiple nova-api\n    service is running. We need to prevent the concurrent access to\n    the same floating ip, though db layer function is ok for floating\n    ip, the quota will be released more than one time and it will\n    lead to potential problem later\n    \n    So the solution: check whether the db is *really* updated with the\n    value we want, which means the second operation will fail and\n    return None, so network api layer can handle it\n    \n    Change-Id: I028938a4c387d21a8880ae168b161a763e7361ff\n    Closes-Bug: #1268569\n", 
            "date_created": "2014-05-13 06:52:25.836419+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2014-06-11 13:43:30.312913+00:00"
}