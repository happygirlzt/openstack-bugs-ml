{
    "status": "Opinion", 
    "last_updated": "2014-09-18 20:53:40.680504+00:00", 
    "description": "The current code does this:\n\n1. Set task_state=image_snapshot\n2. Snapshot Instance\n3. Upload Image\n4. Set task_state=None\n\nThere are a couple of problems with this.\n\nFirst, there's a race condition between when the Upload-Image task completes and when the task_state is set to None. This means that if we're polling the image to see when it goes active and then take a snapshot immediately afterwards, it *may* fail.\n\nThe second issue is that snapshotting an instance is quick, but uploading is slow, so we're preventing more snapshots from being taken for an *unnecessarily* long period of time.\n\nReally, we should only forbid snapshots while the instance is snapshotting. Uploading the Image would be handled asynchronously.\n\nSo, the revised proposal is:\n\nCompute Manager:\n\n1. Set task_state=image_snapshot\n2. Snapshot Instance\n3. Queue Snapshot for Upload\n4. Set task_state=None\n\nImage-Upload Worker\n\n1. Dequeue Image Upload Job\n2. Upload to Glance", 
    "tags": [], 
    "importance": "Wishlist", 
    "heat": 8, 
    "link": "https://bugs.launchpad.net/nova/+bug/1028495", 
    "owner": "None", 
    "id": 1028495, 
    "index": 2537, 
    "openned": "2012-07-24 15:16:14.800007+00:00", 
    "created": "2012-07-24 15:16:14.800007+00:00", 
    "title": "Separate image_snapshot from image_uploading", 
    "comments": [
        {
            "content": "The current code does this:\n\n1. Set task_state=image_snapshot\n2. Snapshot Instance\n3. Upload Image\n4. Set task_state=None\n\nThere are a couple of problems with this.\n\nFirst, there's a race condition between when the Upload-Image task completes and when the task_state is set to None. This means that if we're polling the image to see when it goes active and then take a snapshot immediately afterwards, it *may* fail.\n\nThe second issue is that snapshotting an instance is quick, but uploading is slow, so we're preventing more snapshots from being taken for an *unecessarily* long period of time.\n\nReally, we should only forbid snapshots while the instance is snapshotting. Uploading the Image would be handled asynchronusly.\n\n\nSo, the revised proposal is:\n\nCompute Manager:\n\n1. Set task_state=image_snapshot\n2. Snapshot Instance\n3. Queue Snapshot for Upload\n4. Set task_state=None\n\nImage-Upload Worker\n\n1. Dequeue Image Upload Job\n2. Upload to Glance", 
            "date_created": "2012-07-24 15:16:14.800007+00:00", 
            "author": "https://api.launchpad.net/1.0/~rconradharris"
        }, 
        {
            "content": "One wrinkle in the proposed approach to the second issue is that the image upload logic is buried within nova.virt.driver.ComputeDriver.snapshot(), so making the upload asynchronous would involve either some unDRY additions to each driver, or else cracking open that driver API into two parts.\n\nHowever, just wondering if we can work-around the first issue:\n\n\"This means that if we're polling the image to see when it goes active and then take a snapshot immediately afterwards\"\n\ncould this race be avoided by simply polling the server state instead, and only attempting the next snapshot after the server OS-EXT-STS:task_state property transitions from \"image_snapshot\" to None.", 
            "date_created": "2012-07-27 13:39:49.757800+00:00", 
            "author": "https://api.launchpad.net/1.0/~eglynn"
        }, 
        {
            "content": "very old refactoring wishlist item", 
            "date_created": "2014-09-18 20:53:40.190381+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }
    ], 
    "closed": "2014-09-18 20:53:28.171752+00:00"
}