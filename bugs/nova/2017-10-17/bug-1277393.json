{
    "status": "Invalid", 
    "last_updated": "2014-03-14 14:46:28.317391+00:00", 
    "description": "Object Model considers the downgrade but some work in upgrade part are left, so it is  unable to transform an old object into a new one with changed types of fields.\nThis problem is related to https://review.openstack.org/#/c/67693/\n\nMetrics is a string field in computeNode before version 1.3. And we make it to be an object field. Then the problem is when the old node still sends a string-based set of metrics, it will throw a exception in obj_from_primitive due to the type changes.\n\nAUDIT [nova.service] Starting conductor node (version 2014.1)\n}}}\nTraceback (most recent call last):\n\u00a0\u00a0File \"nova/tests/objects/test_compute_node.py\", line 165, in test_metrics_compat_upgrade\n\u00a0\u00a0\u00a0\u00a0compute = base.NovaObject.obj_from_primitive(primitive)\n\u00a0\u00a0File \"nova/objects/base.py\", line 246, in obj_from_primitive\n\u00a0\u00a0\u00a0\u00a0objdata[name]))\n\u00a0\u00a0File \"nova/objects/fields.py\", line 183, in from_primitive\n\u00a0\u00a0\u00a0\u00a0return self._type.from_primitive(obj, attr, value)\n\u00a0\u00a0File \"nova/objects/fields.py\", line 374, in from_primitive\n\u00a0\u00a0\u00a0\u00a0return obj_base.NovaObject.obj_from_primitive(value, obj._context)\n\u00a0\u00a0File \"nova/objects/base.py\", line 230, in obj_from_primitive\n\u00a0\u00a0\u00a0\u00a0if primitive['nova_object.namespace'] != 'nova':\nTypeError: string indices must be integers, not str\n\nThe reason is in version 1.2, the primitive of metrics in compute node is str\n'[{\"timestamp\": \"2014-02-07T08:12:16Z\", \"name\": \"cpu.frequency\", \"value\": 1600.0, \"source\": \"libvirt.LibvirtDriver\"}]'\nBut it should be an object after version 1.3.\n\nThe easiest way to reappear the bug is downloading the patch  https://review.openstack.org/#/c/67693/ and run\npython -m unittest nova.tests.objects.test_compute_node.TestRemoteComputeNodeObject.test_metrics_compat_upgrade\n\nThe test case transforms a new compute_node object into an old one and then transforms it into a new one again.", 
    "tags": [
        "compute", 
        "unified-objects"
    ], 
    "importance": "Undecided", 
    "heat": 8, 
    "link": "https://bugs.launchpad.net/nova/+bug/1277393", 
    "owner": "None", 
    "id": 1277393, 
    "index": 5797, 
    "openned": "2014-02-07 08:43:35.710341+00:00", 
    "created": "2014-02-07 08:43:35.710341+00:00", 
    "title": "unable to transform an old object into a new one with changed types of fields", 
    "comments": [
        {
            "content": "Object Model only considers downgrade and missing some work in upgrade part, so it is  unable to transform an old object into a new one with changed types of fields.\nThis problem is related to https://review.openstack.org/#/c/67693/\n\nMetrics is a string field in computeNode before version 1.3. And we make it to be an object field. Then the problem is when\nthe old node still sends a string-based set of metrics, it will throw a exception in obj_from_primitive due to the type changes.\n\nAUDIT [nova.service] Starting conductor node (version 2014.1)\n}}}\nTraceback (most recent call last):\n  File \"nova/tests/objects/test_compute_node.py\", line 165, in test_metrics_compat_upgrade\n    compute = base.NovaObject.obj_from_primitive(primitive)\n  File \"nova/objects/base.py\", line 246, in obj_from_primitive\n    objdata[name]))\n  File \"nova/objects/fields.py\", line 183, in from_primitive\n    return self._type.from_primitive(obj, attr, value)\n  File \"nova/objects/fields.py\", line 374, in from_primitive\n    return obj_base.NovaObject.obj_from_primitive(value, obj._context)\n  File \"nova/objects/base.py\", line 230, in obj_from_primitive\n    if primitive['nova_object.namespace'] != 'nova':\nTypeError: string indices must be integers, not str\n\nThe reason is in version 1.2, the primitive of metrics in compute node is str\n'[{\"timestamp\": \"2014-02-07T08:12:16Z\", \"name\": \"cpu.frequency\", \"value\": 1600.0, \"source\": \"libvirt.LibvirtDriver\"}]'\nBut it should be an object after version 1.3.\n\nThe easiest way to reappear the bug is downloading the patch  https://review.openstack.org/#/c/67693/ and run  \npython -m unittest nova.tests.objects.test_compute_node.TestRemoteComputeNodeObject.test_metrics_compat_upgrade\n\nThe test case transforms a new compute_node object into an old one and then transforms it into a new one again.", 
            "date_created": "2014-02-07 08:43:35.710341+00:00", 
            "author": "https://api.launchpad.net/1.0/~tan-lin-good"
        }, 
        {
            "content": "I don't think upgrading an object makes any sense. Objects within the same major version need to be backwards compatible, so sending an object with a field format change to an older node (or a newer one that can't cope with it) is not reasonable.", 
            "date_created": "2014-03-14 14:46:24.425362+00:00", 
            "author": "https://api.launchpad.net/1.0/~danms"
        }
    ], 
    "closed": "2014-03-14 14:46:25.982175+00:00"
}