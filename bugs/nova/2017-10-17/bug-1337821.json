{
    "status": "Fix Released", 
    "last_updated": "2015-05-28 21:08:03.187394+00:00", 
    "description": "I have booted an instance from a volume, successfully booted,\nnow another volume, i try to attach to same instance, it is failing.\nsee the stack trace..\n\n2014-07-04 08:56:11.391 TRACE oslo.messaging.rpc.dispatcher     raise exception.InvalidDevicePath(path=root_device_name)\n2014-07-04 08:56:11.391 TRACE oslo.messaging.rpc.dispatcher InvalidDevicePath: The supplied device path (vda) is invalid.\n2014-07-04 08:56:11.391 TRACE oslo.messaging.rpc.dispatcher\n2014-07-04 08:56:11.396 ERROR oslo.messaging._drivers.common [req-648122d5-fd39-495b-a3a7-a96bd32091d6 admin admin] Returning exception The supplied device path (vda) is invalid. to caller\n2014-07-04 08:56:11.396 ERROR oslo.messaging._drivers.common [req-648122d5-fd39-495b-a3a7-a96bd32091d6 admin admin] ['Traceback (most recent call last):\\n', '  File \"/usr/local/lib/python2.7/dist-packages/oslo/messaging/rpc/dispatcher.py\", line 134, in _dispatch_and_reply\\n    incoming.message))\\n', '  File \"/usr/local/lib/python2.7/dist-packages/oslo/messaging/rpc/dispatcher.py\", line 177, in _dispatch\\n    return self._do_dispatch(endpoint, method, ctxt, args)\\n', '  File \"/usr/local/lib/python2.7/dist-packages/oslo/messaging/rpc/dispatcher.py\", line 123, in _do_dispatch\\n    result = getattr(endpoint, method)(ctxt, **new_args)\\n', '  File \"/opt/stack/nova/nova/compute/manager.py\", line 401, in decorated_function\\n    return function(self, context, *args, **kwargs)\\n', '  File \"/opt/stack/nova/nova/exception.py\", line 88, in wrapped\\n    payload)\\n', '  File \"/opt/stack/nova/nova/openstack/common/excutils.py\", line 82, in __exit__\\n    six.reraise(self.type_, self.value, self.tb)\\n', '  File \"/opt/stack/nova/nova/exception.py\", line 71, in wrapped\\n    return f(self, context, *args, **kw)\\n', '  File \"/opt/stack/nova/nova/compute/manager.py\", line 286, in decorated_function\\n    pass\\n', '  File \"/opt/stack/nova/nova/openstack/common/excutils.py\", line 82, in __exit__\\n    six.reraise(self.type_, self.value, self.tb)\\n', '  File \"/opt/stack/nova/nova/compute/manager.py\", line 272, in decorated_function\\n    return function(self, context, *args, **kwargs)\\n', '  File \"/opt/stack/nova/nova/compute/manager.py\", line 314, in decorated_function\\n    kwargs[\\'instance\\'], e, sys.exc_info())\\n', '  File \"/opt/stack/nova/nova/openstack/common/excutils.py\", line 82, in __exit__\\n    six.reraise(self.type_, self.value, self.tb)\\n', '  File \"/opt/stack/nova/nova/compute/manager.py\", line 302, in decorated_function\\n    return function(self, context, *args, **kwargs)\\n', '  File \"/opt/stack/nova/nova/compute/manager.py\", line 4201, in reserve_block_device_name\\n    return do_reserve()\\n', '  File \"/opt/stack/nova/nova/openstack/common/lockutils.py\", line 249, in inner\\n    return f(*args, **kwargs)\\n', '  File \"/opt/stack/nova/nova/compute/manager.py\", line 4188, in do_reserve\\n    context, instance, bdms, device)\\n', '  File \"/opt/stack/nova/nova/compute/utils.py\", line 106, in get_device_name_for_instance\\n    mappings[\\'root\\'], device)\\n', '  File \"/opt/stack/nova/nova/compute/utils.py\", line 155, in get_next_device_name\\n    raise exception.InvalidDevicePath(path=root_device_name)\\n', 'InvalidDevicePath: The supplied device path (vda) is invalid.\\n']\n\nThe reason behind this issue is: because of the root device_name being set 'vda' in the case of boot from volume, The future volume attaches to the VM fail saying \"The supplied device path (vda) is invalid\"", 
    "tags": [], 
    "importance": "Medium", 
    "heat": 12, 
    "link": "https://bugs.launchpad.net/nova/+bug/1337821", 
    "owner": "https://api.launchpad.net/1.0/~alaski", 
    "id": 1337821, 
    "index": 3946, 
    "openned": "2014-07-04 11:39:21.680532+00:00", 
    "created": "2014-07-04 11:39:21.680532+00:00", 
    "title": "VMDK Volume attach fails while attaching to an instance that is booted from VMDK volume", 
    "comments": [
        {
            "content": "I have booted an instance from a volume, successfully booted,\nnow another volume, i try to attach to same instance, it is failing.\nsee the stack trace..\n\n\n2014-07-04 08:56:11.391 TRACE oslo.messaging.rpc.dispatcher     raise exception.InvalidDevicePath(path=root_device_name)\n2014-07-04 08:56:11.391 TRACE oslo.messaging.rpc.dispatcher InvalidDevicePath: The supplied device path (vda) is invalid.\n2014-07-04 08:56:11.391 TRACE oslo.messaging.rpc.dispatcher\n2014-07-04 08:56:11.396 ERROR oslo.messaging._drivers.common [req-648122d5-fd39-495b-a3a7-a96bd32091d6 admin admin] Returning exception The supplied device path (vda) is invalid. to caller\n2014-07-04 08:56:11.396 ERROR oslo.messaging._drivers.common [req-648122d5-fd39-495b-a3a7-a96bd32091d6 admin admin] ['Traceback (most recent call last):\\n', '  File \"/usr/local/lib/python2.7/dist-packages/oslo/messaging/rpc/dispatcher.py\", line 134, in _dispatch_and_reply\\n    incoming.message))\\n', '  File \"/usr/local/lib/python2.7/dist-packages/oslo/messaging/rpc/dispatcher.py\", line 177, in _dispatch\\n    return self._do_dispatch(endpoint, method, ctxt, args)\\n', '  File \"/usr/local/lib/python2.7/dist-packages/oslo/messaging/rpc/dispatcher.py\", line 123, in _do_dispatch\\n    result = getattr(endpoint, method)(ctxt, **new_args)\\n', '  File \"/opt/stack/nova/nova/compute/manager.py\", line 401, in decorated_function\\n    return function(self, context, *args, **kwargs)\\n', '  File \"/opt/stack/nova/nova/exception.py\", line 88, in wrapped\\n    payload)\\n', '  File \"/opt/stack/nova/nova/openstack/common/excutils.py\", line 82, in __exit__\\n    six.reraise(self.type_, self.value, self.tb)\\n', '  File \"/opt/stack/nova/nova/exception.py\", line 71, in wrapped\\n    return f(self, context, *args, **kw)\\n', '  File \"/opt/stack/nova/nova/compute/manager.py\", line 286, in decorated_function\\n    pass\\n', '  File \"/opt/stack/nova/nova/openstack/common/excutils.py\", line 82, in __exit__\\n    six.reraise(self.type_, self.value, self.tb)\\n', '  File \"/opt/stack/nova/nova/compute/manager.py\", line 272, in decorated_function\\n    return function(self, context, *args, **kwargs)\\n', '  File \"/opt/stack/nova/nova/compute/manager.py\", line 314, in decorated_function\\n    kwargs[\\'instance\\'], e, sys.exc_info())\\n', '  File \"/opt/stack/nova/nova/openstack/common/excutils.py\", line 82, in __exit__\\n    six.reraise(self.type_, self.value, self.tb)\\n', '  File \"/opt/stack/nova/nova/compute/manager.py\", line 302, in decorated_function\\n    return function(self, context, *args, **kwargs)\\n', '  File \"/opt/stack/nova/nova/compute/manager.py\", line 4201, in reserve_block_device_name\\n    return do_reserve()\\n', '  File \"/opt/stack/nova/nova/openstack/common/lockutils.py\", line 249, in inner\\n    return f(*args, **kwargs)\\n', '  File \"/opt/stack/nova/nova/compute/manager.py\", line 4188, in do_reserve\\n    context, instance, bdms, device)\\n', '  File \"/opt/stack/nova/nova/compute/utils.py\", line 106, in get_device_name_for_instance\\n    mappings[\\'root\\'], device)\\n', '  File \"/opt/stack/nova/nova/compute/utils.py\", line 155, in get_next_device_name\\n    raise exception.InvalidDevicePath(path=root_device_name)\\n', 'InvalidDevicePath: The supplied device path (vda) is invalid.\\n']", 
            "date_created": "2014-07-04 11:39:21.680532+00:00", 
            "author": "https://api.launchpad.net/1.0/~akbajaj"
        }, 
        {
            "content": "Try using vdb, or auto - vda is taken by the boot device. No a bug.", 
            "date_created": "2014-07-07 11:43:06.757301+00:00", 
            "author": "https://api.launchpad.net/1.0/~duncan-thomas"
        }, 
        {
            "content": "It should belong to nova, so moved it to nova and moved to new.", 
            "date_created": "2014-07-07 11:56:08.543875+00:00", 
            "author": "https://api.launchpad.net/1.0/~akbajaj"
        }, 
        {
            "content": "i'm able to reproduce the issue when tried from horizon.  Since the boot volume gets mounted on 'vda' by default.  Future attaches to the VM fail.  If the same tried from CLI with the  passed (something like : nova boot --flavor 1 --block-device source=volume,id=1730ba2e-5b16-40ae-89d8-745ce6647520,device=/dev/vda,dest=volume,size=2,shutdown=REMOVE,bootindex=0 myvm), volume attaches seem to pass.\n\n", 
            "date_created": "2014-07-08 12:08:54.054901+00:00", 
            "author": "https://api.launchpad.net/1.0/~acbharadwaj"
        }, 
        {
            "content": "As per IRC conversation - this affects the vmware driver with Cinder vmdk driver.", 
            "date_created": "2014-07-08 13:39:36.592988+00:00", 
            "author": "https://api.launchpad.net/1.0/~ndipanov"
        }, 
        {
            "content": "FWIW - I was unable to reproduce this with latest devstack running libvirt.\n\n$ cinder create --image-id $CIRROS_ID --display-name boot-cirros 1\n$ cinder create --display-name testvol 1 \n$ nova boot --boot-volume $BOOT-CIRROS-ID --flavor 1 testvm\n$ # ssh into the instance all is fine\n$ nova volume-attach testvm $TESTVOL-ID\n$ # All good - the vm sees it as vdb\n", 
            "date_created": "2014-07-08 15:18:44.557860+00:00", 
            "author": "https://api.launchpad.net/1.0/~ndipanov"
        }, 
        {
            "content": "yes,  though the clients, there seems to be no problem. \nHere, in Horizon device_name is being initialized to \"vda\".\nhttps://github.com/openstack/horizon/blob/master/openstack_dashboard/dashboards/project/instances/workflows/create_insta\nnce.py#L117\n", 
            "date_created": "2014-07-08 15:43:41.777925+00:00", 
            "author": "https://api.launchpad.net/1.0/~acbharadwaj"
        }, 
        {
            "content": "Removing the VMWare tag as looking at  the code it seems to affect all drivers.\n\nAlso marking as invalid for Nova - Horizon should not be making assumptions about the device name for attach.", 
            "date_created": "2014-07-09 09:01:55.147545+00:00", 
            "author": "https://api.launchpad.net/1.0/~ndipanov"
        }, 
        {
            "content": "Isn't the mount point set by the user when attaching a volume or launching with a volume? If not I think this may be related to/a duplicate of bug 1280297.", 
            "date_created": "2014-07-09 11:46:44.670704+00:00", 
            "author": "https://api.launchpad.net/1.0/~jpichon"
        }, 
        {
            "content": "@jpichon: its not mandatory. and we don't have to force the user to add the device. ", 
            "date_created": "2014-07-09 12:05:39.275933+00:00", 
            "author": "https://api.launchpad.net/1.0/~acbharadwaj"
        }, 
        {
            "content": "Thanks for the comment Chinmaya, I filed bug 1339760 to track this in Horizon.", 
            "date_created": "2014-07-09 15:26:24.681384+00:00", 
            "author": "https://api.launchpad.net/1.0/~jpichon"
        }, 
        {
            "content": "not in progress if there is no one working on it", 
            "date_created": "2014-07-09 23:01:10.831570+00:00", 
            "author": "https://api.launchpad.net/1.0/~tjones-i"
        }, 
        {
            "content": "patch posted https://review.openstack.org/#/c/105687/", 
            "date_created": "2014-07-10 12:37:19.689659+00:00", 
            "author": "https://api.launchpad.net/1.0/~ndipanov"
        }, 
        {
            "content": "We should in addition to the fix above, probably make the compute_utils methods more resilient so that they don't fail for the instances/devices created before the already posted fix.", 
            "date_created": "2014-07-11 13:00:54.535094+00:00", 
            "author": "https://api.launchpad.net/1.0/~ndipanov"
        }, 
        {
            "content": "I have just run into this while testing the xenapi driver, glad to see there's a fix up :)\n\nI have a small patch to make the offending compute_util method more resilient which I can add a test to and push up.", 
            "date_created": "2014-08-08 16:16:44.058213+00:00", 
            "author": "https://api.launchpad.net/1.0/~alaski"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/112975", 
            "date_created": "2014-08-08 17:04:25.324293+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/105687\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=28b37c1a707f5e958221b4ee28c4832d081eb706\nSubmitter: Jenkins\nBranch:    master\n\ncommit 28b37c1a707f5e958221b4ee28c4832d081eb706\nAuthor: Nikola Dipanov <email address hidden>\nDate:   Wed Jul 9 11:59:15 2014 +0200\n\n    Prepend '/dev/' to supplied dev names in the API\n    \n    Make sure that all user input device names end up in the database with\n    the '/dev/' prefix. This will make things more consistent and avoid\n    issues when attempting to parse device names.\n    \n    This includes two main sources - block device mapping that can be passed\n    as part of a request or as image metadata, and root device name, passed\n    as image metadata.\n    \n    Closes-bug: #1337821\n    Change-Id: Ibda82f511be99f1a68f2f77c72601a1b006be7a0\n", 
            "date_created": "2014-08-08 20:15:24.212649+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/112975\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=426d394b77584bb0f9be89e4a11df937448a5087\nSubmitter: Jenkins\nBranch:    master\n\ncommit 426d394b77584bb0f9be89e4a11df937448a5087\nAuthor: Andrew Laski <email address hidden>\nDate:   Fri Aug 8 12:59:24 2014 -0400\n\n    Prepend /dev/ to root_device_name in get_next_device_name\n    \n    Because the API docs for booting an instance from a volume have shown to\n    use 'vda' for a long time, and it has worked, there may be instances\n    with root_device_name = 'vda'.  These instances will fail a check in\n    get_next_device_name when attempting to attach another volume, making\n    that impossible.  Another patch fixes new block_device_mappings by\n    prepending /dev/ when the root_device_name is populated, but this will\n    allow incorrectly populated instances to attach volumes.\n    \n    Change-Id: I709a195c7e3f559315a2c307de62cbae8b72ac46\n    Partial-Bug: #1337821\n", 
            "date_created": "2014-08-30 23:55:34.950736+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: stable/icehouse\nReview: https://review.openstack.org/130528", 
            "date_created": "2014-10-23 13:29:02.421510+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Change abandoned by Matt Riedemann (<email address hidden>) on branch: stable/icehouse\nReview: https://review.openstack.org/130528\nReason: There has been no response to Dave's -1 since last year so dropping this.", 
            "date_created": "2015-05-28 21:08:02.200387+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2014-09-05 09:52:59.484455+00:00"
}