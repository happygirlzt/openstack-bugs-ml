{
    "status": "Fix Released", 
    "last_updated": "2016-01-21 13:44:08.385815+00:00", 
    "description": "Nova from master.\n\nThe module doesn't print error message. If an error occurs in nova.cmd.baseproxy the method exit_with_error is executed that looks as follows:\n\ndef exit_with_error(msg, errno=-1):\n    print(msg) and sys.exit(errno)\n\nSo in python 2.7 this method terminates the application without printing anything (unable to flush on time) and in python 3.4 it does strange things because print() returns None.\n\nI noticed this bug when I was trying to run nova-novncproxy without novnc istalled. nova-novncproxy was being terminated without any prints. Then I debugged it and found out that it tries to send an error message but it fails.", 
    "tags": [], 
    "importance": "Low", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1506213", 
    "owner": "https://api.launchpad.net/1.0/~yuywz", 
    "id": 1506213, 
    "index": 1870, 
    "openned": "2015-10-14 20:48:35.607044+00:00", 
    "created": "2015-10-14 20:48:35.607044+00:00", 
    "title": "nova.cmd.baseproxy handles errors incorrectly", 
    "comments": [
        {
            "content": "Nova from master.\n\nThe module doesn't print error message. If an error occurs in nova.cmd.baseproxy the method exit_with_error is executed that looks as follows:\n\ndef exit_with_error(msg, errno=-1):\n    print(msg) and sys.exit(errno)\n\nSo in python 2.7 this method terminates the application without printing anything (unable to flush on time) and in python 3.4 it does strange things because print() returns None.\n\nI noticed this bug when I was trying to run nova-novncproxy without novnc istalled. nova-novncproxy was being terminated without any prints. Then I debugged it and found out that it tries to send an error message but it fails.", 
            "date_created": "2015-10-14 20:48:35.607044+00:00", 
            "author": "https://api.launchpad.net/1.0/~aleksiyantsa"
        }, 
        {
            "content": "Confirmed with this simple test with python2.7:\n\n    import sys\n\n    def exit_with_error(msg, errno=-1):\n        print(msg) and sys.exit(errno)\n\n    if __name__ == \"__main__\":\n        exit_with_error(\"print this message\")\n\nThe message doesn't get flushed.", 
            "date_created": "2015-10-20 09:32:02.447092+00:00", 
            "author": "https://api.launchpad.net/1.0/~mzoeller"
        }, 
        {
            "content": "@Wen Zhi Yu: Thanks for taking over the task to provide a fix for this bug. Please push a patch set within the next few weeks. \n\nA short reminder on the bug mgmt process: If you set yourself as assignee, please change the status of the bug to \"in progress\".", 
            "date_created": "2015-10-20 09:34:20.772487+00:00", 
            "author": "https://api.launchpad.net/1.0/~mzoeller"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/237886", 
            "date_created": "2015-10-21 05:49:37.768050+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/237886\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=cf7cd655a2aaa7f44b94dca0ad7a15073a774a48\nSubmitter: Jenkins\nBranch:    master\n\ncommit cf7cd655a2aaa7f44b94dca0ad7a15073a774a48\nAuthor: Wen Zhi Yu <email address hidden>\nDate:   Wed Oct 21 13:38:22 2015 +0800\n\n    Fix error handling in nova.cmd.baseproxy\n    \n    If an error occurs in nova.cmd.baseproxy the method exit_with_error\n    will be executed that looks as follows:\n    \n    def exit_with_error(msg, errno=-1):\n    \tprint(msg) and sys.exit(errno)\n    \n    However, in python2.7 this method terminates the application without\n    printing anything(unable to flush on time) and in Python3.4 it does\n    strange things because print() returns None.\n    \n    This commit modifies exit_with_error method to output error message\n    with stderr(which in unbuffered).\n    \n    Change-Id: I519b68f8c2bc62988de87bdd2847d5f3be7e532d\n    Closes-Bug: #1506213\n", 
            "date_created": "2015-12-04 23:24:22.321625+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "We changed the release management from a \"delayed-release\" to a \n\"direct-release\" model [1]. It seems that the fix for this bug merged\nin the timeframe where we made the transition to the new model and \ntherefore wasn't closed with \"Fix-Released\" at it should be. \n=> Manually closing this bug with \"Fix-Released\".\n\n[1] \"openstack-dev\" ML, 2015-11-23, Doug Hellmann,\n    \"[release] process change for closing bugs when patches merge\"\n    http://lists.openstack.org/pipermail/openstack-dev/2015-November/080288.html", 
            "date_created": "2015-12-09 09:35:29.581448+00:00", 
            "author": "https://api.launchpad.net/1.0/~mzoeller"
        }, 
        {
            "content": "This issue was fixed in the openstack/nova 13.0.0.0b2 development milestone.", 
            "date_created": "2016-01-21 13:44:07.721469+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }
    ], 
    "closed": "2015-12-09 09:35:23.722837+00:00"
}