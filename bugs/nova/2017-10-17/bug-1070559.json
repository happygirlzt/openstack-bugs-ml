{
    "status": "Fix Released", 
    "last_updated": "2013-04-04 10:52:08.638551+00:00", 
    "description": "Migration 091 swallows exceptions generated by SQLAlchemy-Migrate leaving the database in an inconsistent state, in particular, leaving a 'migration_tmp` table around that will cause future migrations to fail.\n\nThe failure seems to be:\n\n1. The script attempts to drop foreign-key constraints. The SQLAlchemy-Migrate SQLite driver raises a NotSupportedError since ALTER TABLE DROP CONSTRAINT is not supported directly by SQLite and SQLAlchemy-MIgrate doesn't have work-around code in place for this.\n\n  File \"/usr/local/lib/python2.7/dist-packages/migrate/changeset/databases/sqlite.py\", line 22, in _not_supported\n    \"%s; see http://www.sqlite.org/lang_altertable.html\" % op)\nNotSupportedError: SQLite does not support ALTER TABLE DROP CONSTRAINT; see http://www.sqlite.org/lang_altertable.html\n\nThe migration script simply ignores this error by swallowing the exception.\n\n2. After performing the data fix-up, the script attempts to re-create the new foreign-key constraints. The causes a different exception in SQLAlchemy-Migrate:\n\n  File \"/usr/local/lib/python2.7/dist-packages/sqlalchemy/sql/compiler.py\", line 1693, in quote\n    if self._requires_quotes(ident):\n  File \"/usr/local/lib/python2.7/dist-packages/sqlalchemy/sql/compiler.py\", line 1674, in _requires_quotes\n    lc_value = value.lower()\nAttributeError: 'int' object has no attribute 'lower'\n\nThis appears to be caused by us not having dropped the original constraint which happens to have the name 0 which is misinterpreted as an integer causing the `lower()` to fail.\n\nThis exception prevents the SQLAlchemy-Migrate code from emitting the ALTER TABLE RENAME or DROP TABLE for `migration_tmp` leaving it hanging around for the next migration to hit and fail (in this case 098 seems to be the next failure for me).\n\nPossible solutions:\n\n1. Switch to Alembic (and fix it's SQLite support in the process)\n2. Write a 091_sqlite_upgrade/downgrade script to paper over this issue (EASIEST)\n3. Fix SQLAlchemy-MIgrate to support DROP CONSTRAINT by using a tmp table as well as possibly fixing SQLAlchemy's cast code (BEST FOR UPSTREAM)", 
    "tags": [], 
    "importance": "High", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1070559", 
    "owner": "https://api.launchpad.net/1.0/~rconradharris", 
    "id": 1070559, 
    "index": 857, 
    "openned": "2012-10-23 21:20:37.995305+00:00", 
    "created": "2012-10-23 21:20:37.995305+00:00", 
    "title": "Migration 091 broken for SQLite", 
    "comments": [
        {
            "content": "Migration 091 swallows exceptions generated by SQLAlchemy-Migrate leaving the database in an inconsistent state, in particular, leaving a 'migration_tmp` table around that will cause future migrations to fail.\n\nThe failure seems to be:\n\n1. The script attempts to drop foreign-key constraints. The SQLAlchemy-Migrate SQLite driver raises a NotSupportedError since ALTER TABLE DROP CONSTRAINT is not supported directly by SQLite and SQLAlchemy-MIgrate doesn't have work-around code in place for this.\n\n  File \"/usr/local/lib/python2.7/dist-packages/migrate/changeset/databases/sqlite.py\", line 22, in _not_supported\n    \"%s; see http://www.sqlite.org/lang_altertable.html\" % op)\nNotSupportedError: SQLite does not support ALTER TABLE DROP CONSTRAINT; see http://www.sqlite.org/lang_altertable.html\n\nThe migration script simply ignores this error by swallowing the exception.\n\n2. After performing the data fix-up, the script attempts to re-create the new foreign-key constraints. The causes a different exception in SQLAlchemy-Migrate:\n\n  File \"/usr/local/lib/python2.7/dist-packages/sqlalchemy/sql/compiler.py\", line 1693, in quote\n    if self._requires_quotes(ident):\n  File \"/usr/local/lib/python2.7/dist-packages/sqlalchemy/sql/compiler.py\", line 1674, in _requires_quotes\n    lc_value = value.lower()\nAttributeError: 'int' object has no attribute 'lower'\n\nThis appears to be caused by us not having dropped the original constraint which happens to have the name 0 which is misinterpreted as an integer causing the `lower()` to fail.\n\nThis exception prevents the SQLAlchemy-Migrate code from emitting the ALTER TABLE RENAME or DROP TABLE for `migration_tmp` leaving it hanging around for the next migration to hit and fail (in this case 098 seems to be the next failure for me).\n\nPossible solutions:\n\n1. Switch to Alembic (and fix it's SQLite support in the process)\n2. Write a 091_sqlite_upgrade/downgrade script to paper over this issue (EASIEST)\n3. Fix SQLAlchemy-MIgrate to support DROP CONSTRAINT by using a tmp table as well as possibly fixing SQLAlchemy's cast code (BEST FOR UPSTREAM)", 
            "date_created": "2012-10-23 21:20:37.995305+00:00", 
            "author": "https://api.launchpad.net/1.0/~rconradharris"
        }, 
        {
            "content": "The problem turned out to be me using SQLAlchemy 0.7.2 instead of 0.7.8. Upgrading fixed the issue.\n\nThat said, the handling of exceptions in the script seem overly broad, so I'm going to propose a patch which clamps down on which exceptions are truly acceptable, since catching arbitrary exceptions just causes failures in future migrations due to DB inconsistency.", 
            "date_created": "2012-10-23 21:52:48.548883+00:00", 
            "author": "https://api.launchpad.net/1.0/~rconradharris"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/14714", 
            "date_created": "2012-10-23 22:02:45.878275+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/14714\nCommitted: http://github.com/openstack/nova/commit/5f3c2f9b8ea24b2a0e1909dbeac4dc47f2410d7a\nSubmitter: Jenkins\nBranch:    master\n\ncommit 5f3c2f9b8ea24b2a0e1909dbeac4dc47f2410d7a\nAuthor: Rick Harris <email address hidden>\nDate:   Tue Oct 23 21:55:59 2012 +0000\n\n    More specific exception handling in migration 091.\n    \n    The original code would catch and discard any exception generated when\n    trying to create or drop fkey constraints using the SQLite engine. This\n    has the side-effect of allowing the DB to become inconsistent (by\n    leaving a `migration_tmp` table around), causing future migrations to\n    fail and making bugs even hard to track down.\n    \n    Long term, we should fix the underlying cause of these exceptions,\n    either by switching to Alembic or by fixing SQLALchemy-Migrate to fully\n    support dropping of constraints via a temp table.\n    \n    For now though, tightening up the exception handling will at least make\n    any future bugs a bit easier to diagnose.\n    \n    Fixes bug 1070559\n    \n    Change-Id: If549d65afa758b6f8a0db6fc8478a5b0c9277e23\n", 
            "date_created": "2012-10-25 09:43:35.771320+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2012-11-21 09:43:33.388757+00:00"
}