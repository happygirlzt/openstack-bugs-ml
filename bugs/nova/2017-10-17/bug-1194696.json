{
    "status": "Fix Released", 
    "last_updated": "2014-03-30 22:28:12.184401+00:00", 
    "description": "When using shared storage and image cache cleanup I get the following error:\n\n2013-06-26 09:28:39.483 28612 ERROR nova.manager [-] Error during ComputeManager._run_image_cache_manager_pass: Extra data: line 1 column 51 - line 1 column 52 (char 51 - 52)\n2013-06-26 09:28:39.483 28612 TRACE nova.manager Traceback (most recent call last):\n2013-06-26 09:28:39.483 28612 TRACE nova.manager   File \"/usr/lib/python2.7/dist-packages/nova/manager.py\", line 241, in periodic_tasks\n2013-06-26 09:28:39.483 28612 TRACE nova.manager     task(self, context)\n2013-06-26 09:28:39.483 28612 TRACE nova.manager   File \"/usr/lib/python2.7/dist-packages/nova/compute/manager.py\", line 4042, in _run_image_cache_manager_pass\n2013-06-26 09:28:39.483 28612 TRACE nova.manager     storage_users.register_storage_use(CONF.instances_path, CONF.host)\n2013-06-26 09:28:39.483 28612 TRACE nova.manager   File \"/usr/lib/python2.7/dist-packages/nova/openstack/common/lockutils.py\", line 228, in inner\n2013-06-26 09:28:39.483 28612 TRACE nova.manager     retval = f(*args, **kwargs)\n2013-06-26 09:28:39.483 28612 TRACE nova.manager   File \"/usr/lib/python2.7/dist-packages/nova/virt/storage_users.py\", line 40, in register_storage_use\n2013-06-26 09:28:39.483 28612 TRACE nova.manager     d = json.loads(f.read())\n2013-06-26 09:28:39.483 28612 TRACE nova.manager   File \"/usr/lib/python2.7/json/__init__.py\", line 326, in loads\n2013-06-26 09:28:39.483 28612 TRACE nova.manager     return _default_decoder.decode(s)\n2013-06-26 09:28:39.483 28612 TRACE nova.manager   File \"/usr/lib/python2.7/json/decoder.py\", line 369, in decode\n2013-06-26 09:28:39.483 28612 TRACE nova.manager     raise ValueError(errmsg(\"Extra data\", s, end, len(s)))\n\n\n\nThe content of my compute_nodes file is:\n\n{\"cc1\": 1372201741.468479, \"cc2\": 1372201743.64854}}\n\nYou'll see it has an extra }", 
    "tags": [
        "compute"
    ], 
    "importance": "Medium", 
    "heat": 10, 
    "link": "https://bugs.launchpad.net/nova/+bug/1194696", 
    "owner": "https://api.launchpad.net/1.0/~mdrnstm", 
    "id": 1194696, 
    "index": 3463, 
    "openned": "2013-06-26 00:47:50.231996+00:00", 
    "created": "2013-06-26 00:47:50.231996+00:00", 
    "title": "register_storage_use JSON error", 
    "comments": [
        {
            "content": "When using shared storage and image cache cleanup I get the following error:\n\n2013-06-26 09:28:39.483 28612 ERROR nova.manager [-] Error during ComputeManager._run_image_cache_manager_pass: Extra data: line 1 column 51 - line 1 column 52 (char 51 - 52)\n2013-06-26 09:28:39.483 28612 TRACE nova.manager Traceback (most recent call last):\n2013-06-26 09:28:39.483 28612 TRACE nova.manager   File \"/usr/lib/python2.7/dist-packages/nova/manager.py\", line 241, in periodic_tasks\n2013-06-26 09:28:39.483 28612 TRACE nova.manager     task(self, context)\n2013-06-26 09:28:39.483 28612 TRACE nova.manager   File \"/usr/lib/python2.7/dist-packages/nova/compute/manager.py\", line 4042, in _run_image_cache_manager_pass\n2013-06-26 09:28:39.483 28612 TRACE nova.manager     storage_users.register_storage_use(CONF.instances_path, CONF.host)\n2013-06-26 09:28:39.483 28612 TRACE nova.manager   File \"/usr/lib/python2.7/dist-packages/nova/openstack/common/lockutils.py\", line 228, in inner\n2013-06-26 09:28:39.483 28612 TRACE nova.manager     retval = f(*args, **kwargs)\n2013-06-26 09:28:39.483 28612 TRACE nova.manager   File \"/usr/lib/python2.7/dist-packages/nova/virt/storage_users.py\", line 40, in register_storage_use\n2013-06-26 09:28:39.483 28612 TRACE nova.manager     d = json.loads(f.read())\n2013-06-26 09:28:39.483 28612 TRACE nova.manager   File \"/usr/lib/python2.7/json/__init__.py\", line 326, in loads\n2013-06-26 09:28:39.483 28612 TRACE nova.manager     return _default_decoder.decode(s)\n2013-06-26 09:28:39.483 28612 TRACE nova.manager   File \"/usr/lib/python2.7/json/decoder.py\", line 369, in decode\n2013-06-26 09:28:39.483 28612 TRACE nova.manager     raise ValueError(errmsg(\"Extra data\", s, end, len(s)))\n\n\n\nThe content of my compute_nodes file is:\n\n{\"cc1\": 1372201741.468479, \"cc2\": 1372201743.64854}}\n\nYou'll see it has an extra }", 
            "date_created": "2013-06-26 00:47:50.231996+00:00", 
            "author": "https://api.launchpad.net/1.0/~sorrison"
        }, 
        {
            "content": "Got:\n\n{\"cc1\": 1372208115.092, \"cc2\": 1372208111.789594}87}\n\nIn that file this time, sometime it works and sometimes it doesn't", 
            "date_created": "2013-06-26 00:56:36.467004+00:00", 
            "author": "https://api.launchpad.net/1.0/~sorrison"
        }, 
        {
            "content": "Seems like a synchronization issue on the compute_nodes file, though the @synchronized decorator is being used.", 
            "date_created": "2013-06-27 23:31:58.456870+00:00", 
            "author": "https://api.launchpad.net/1.0/~melwitt"
        }, 
        {
            "content": "This is caused because the decorator is not specifying the ``instances_path`` config option as ``lock_path`` argument to the synchronized decorator.  The bigger issue here is that in a world of racy-conditions it would theoretically be possible to cause loss of an -in-use-base-file due to this bug.\n\nScenario:\n2 Nodes\n\nNode 1 goes to register itself for use of the storage\nBefore Node 1 writes, Node 2 reads the file\nNode 1 writes the file with itself in it\nNode 2 writes the file with itself but not Node 1 in it\n\nImageCacheManager runs on Node 2.  The cleanup task,  Node 1's instances are not guaranteed to be considered as part of the \"in-use\" backing files.  Backing Files are cleaned up.\n\nThe more common event is a corrupted registration file.  But there is a non-zero chance of removing the backing file from another node.", 
            "date_created": "2013-09-24 00:01:25.767602+00:00", 
            "author": "https://api.launchpad.net/1.0/~mdrnstm"
        }, 
        {
            "content": "I think this code needs to go or be fixed somehow so it works. \nThe potential to lose instance data is just too high when using shared storage and image cache cleanup.", 
            "date_created": "2013-09-24 00:33:21.531329+00:00", 
            "author": "https://api.launchpad.net/1.0/~sorrison"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/47943", 
            "date_created": "2013-09-24 00:39:25.640645+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/47943\nCommitted: http://github.com/openstack/nova/commit/150af94d881482d3d2fe1ac7c2e71ff1179d16ca\nSubmitter: Jenkins\nBranch:    master\n\ncommit 150af94d881482d3d2fe1ac7c2e71ff1179d16ca\nAuthor: Morgan Fainberg <email address hidden>\nDate:   Mon Sep 23 17:24:46 2013 -0700\n\n    Correct lock path for storage-registry-lock\n    \n    This fixes the lock path for storage-registry-lock to prevent a\n    potential data loss due to a race-condition scenario.  Since the\n    storage-registry-lock is used to modify a json blob that is\n    authoritative as to which nodes are using the storage so that\n    we don't remove any \"in-use\" backing files on the shared storage\n    segment (if in use).\n    \n    The potential data-loss could occur in limited cases of the race\n    that the lock should prevent.  This can only occur if the image\n    cache cleanup is triggerd when a node has been eliminated from\n    the register_storage_use JSON incorrectly by this race condition.\n    \n    Most of the time the race simplyresults in a corrupted json blob.\n    \n    Fixes-bug: 1194696\n    Change-Id: Ib1a5785646e75dc90bdd2a7e69a697adc4fbb298\n", 
            "date_created": "2013-09-28 11:13:10.297227+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2013-10-03 07:51:39.309423+00:00"
}