{
    "status": "Confirmed", 
    "last_updated": "2017-07-14 15:34:12.904440+00:00", 
    "description": "This came up in discussion here:\n\nhttps://review.openstack.org/#/c/416521/58/nova/compute/api.py@1904\n\nThere is a flavor extra spec called \"hw_video:ram_max_mb\" which is used in the compute API code to count against a project's ram usage in addition to the memory_mb in the flavor being used to create the instance.\n\nThe hw_video:ram_max_mb flavor extra spec is only then used in the libvirt driver, but not anywhere else.\n\nThe issue is that when doing claims in the resource tracker and reporting allocations for the compute node resource provider to the placement service, we don't account for the hw_video:ram_max_mb value in addition to the flavor.memory_mb value, so we're really taking up more MEMORY_MB inventory capacity on the compute node than what's reported to Placement, which is a problem, probably. :)\n\nThis is a latent bug since that flavor extra spec was introduced.", 
    "tags": [], 
    "importance": "Low", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1704012", 
    "owner": "None", 
    "id": 1704012, 
    "index": 2206, 
    "openned": "2017-07-12 22:32:53.084340+00:00", 
    "created": "2017-07-12 22:32:53.084340+00:00", 
    "title": "hw_video:ram_max_mb is tracked for quota but not compute node resource provider allocations", 
    "comments": [
        {
            "content": "This came up in discussion here:\n\nhttps://review.openstack.org/#/c/416521/58/nova/compute/api.py@1904\n\nThere is a flavor extra spec called \"hw_video:ram_max_mb\" which is used in the compute API code to count against a project's ram usage in addition to the memory_mb in the flavor being used to create the instance.\n\nThe hw_video:ram_max_mb flavor extra spec is only then used in the libvirt driver, but not anywhere else.\n\nThe issue is that when doing claims in the resource tracker and reporting allocations for the compute node resource provider to the placement service, we don't account for the hw_video:ram_max_mb value in addition to the flavor.memory_mb value, so we're really taking up more MEMORY_MB inventory capacity on the compute node than what's reported to Placement, which is a problem, probably. :)\n\nThis is a latent bug since that flavor extra spec was introduced.", 
            "date_created": "2017-07-12 22:32:53.084340+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Related fix proposed to branch: master\nReview: https://review.openstack.org/483133", 
            "date_created": "2017-07-12 23:56:11.731970+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/483133\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=f9eea8869eabf12d3e1a078bd48fa96f0badb1ed\nSubmitter: Jenkins\nBranch:    master\n\ncommit f9eea8869eabf12d3e1a078bd48fa96f0badb1ed\nAuthor: Matt Riedemann <email address hidden>\nDate:   Wed Jul 12 19:44:34 2017 -0400\n\n    Stop counting hw_video:ram_max_mb against quota\n    \n    The hw_video:ram_max_mb flavor extra spec is only used by the\n    libvirt driver and was added back in Icehouse as part\n    of blueprint libvirt-video-driver-selection.\n    \n    For whatever reason, it was used to count against a project's\n    ram quota when an instance was created but failed to be\n    accounted for during an instance delete, at least until that\n    bug was fixed over 3 years later in Pike with commit f2d03bf92.\n    \n    This is the only flavor extra spec that is counted against\n    quota in the API and is only used by a single virt driver.\n    If something like this is going to actually be counted, it\n    should probably be as part of the overhead calculation that\n    happens in the compute service as part of the resource claim\n    on the host.\n    \n    Also note that this is not counted as part of the MEMORY_MB\n    allocation record for the instance with the Placement service,\n    which means it's not accounted for when scheduling and selecting\n    a destination host.\n    \n    With blueprint cells-count-resources-to-check-quota-in-api changing\n    how we count quota usage from the API, this special snowflake will\n    also cause problems as it's not tracked in the instances table\n    record like vcpus and memory_mb are tracked, so we'd have to slow\n    down the DB queries by doing extra joins for flavor extra specs\n    to account for this extra overhead that is probably rarely used\n    in most deployments, which is even more apparent given the\n    usage decrement issue wasn't fixed until over 3 years after the\n    feature was added.\n    \n    Therefore this change removes the counting of the hw_video:ram_max_mb\n    flavor extra spec value against the project quota in the API.\n    \n    Related-Bug: #1681989\n    Related-Bug: #1704012\n    \n    Related to blueprint cells-count-resources-to-check-quota-in-api\n    \n    Change-Id: Iad631f0f775df6263ea730cadca5b089ce859b9b\n", 
            "date_created": "2017-07-14 15:34:12.569900+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ]
}