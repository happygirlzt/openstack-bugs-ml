{
    "status": "Fix Released", 
    "last_updated": "2015-10-15 09:03:57.185288+00:00", 
    "description": "Scenario:\n\nIf the Compute service goes down just after destroying the instance and before recreating the domain on the hypervisor,\nthen the instance state task state remains rebooting and the instance remains in an inconsistent state after Compute gets back. \nAdmin has to recreate the instance on the hypervisor using the instance's xml.\n\nThis is another corner scenario with low probability, but could be managed by the code.", 
    "tags": [
        "libvirt", 
        "state-recovery"
    ], 
    "importance": "Medium", 
    "heat": 8, 
    "link": "https://bugs.launchpad.net/nova/+bug/1072751", 
    "owner": "https://api.launchpad.net/1.0/~mikal", 
    "id": 1072751, 
    "index": 3122, 
    "openned": "2012-10-29 14:32:46.448452+00:00", 
    "created": "2012-10-29 14:32:46.448452+00:00", 
    "title": "Instance recovery needed when Compute service goes down during Reboot", 
    "comments": [
        {
            "content": "Scenario:\n\nIf the Compute service goes down just after destroying the instance and before recreating the domain on the hypervisor,\nthen the instance state task state remains rebooting and the instance remains in an inconsistent state after Compute gets back. \nAdmin has to recreate the instance on the hypervisor using the instance's xml.\n\nThis is another corner scenario with low probability, but could be managed by the code.", 
            "date_created": "2012-10-29 14:32:46.448452+00:00", 
            "author": "https://api.launchpad.net/1.0/~rohitk"
        }, 
        {
            "content": "Require more information to fix the bug\n\nSo far the below mentioned scenario has been replicated:\nnova-compute service is stopped after destroying the instance and before\nrecreating the domain on the hypervisor, the task state remains rebooting.\nWhen the compute gets back, the instance gets in shutoff state. It has to be\nrestarted using instance's xml. \n\nCould you please elaborate on what should be the behavior when the compute\nservice is up and running again \u2013 should the instance's state be active and\nrunning instead of shutoff and shutdown?", 
            "date_created": "2014-06-23 07:49:03.880436+00:00", 
            "author": "https://api.launchpad.net/1.0/~kanchan-gupta1"
        }, 
        {
            "content": "Proceeding to un-assign since there is no response on the query posted.", 
            "date_created": "2014-07-25 12:28:08.058361+00:00", 
            "author": "https://api.launchpad.net/1.0/~jyotsna-priya1"
        }, 
        {
            "content": "I was able to reproduce the error by inserting ipdb in _soft_reboot in nova/virt/libvirt/driver.py and killing the service\n\nThere is code to fix states on startup (cc0be157d005c5588fe5db779fc30fefbf22b44d), but there is an error:\n\nTraceback (most recent call last):\n\n  File \"/opt/stack/nova/nova/conductor/manager.py\", line 420, in _object_dispatc\nh\n    return getattr(target, method)(*args, **kwargs)\n\n  File \"/opt/stack/nova/nova/objects/base.py\", line 163, in wrapper\n    result = fn(cls, context, *args, **kwargs)\n\n  File \"/opt/stack/nova/nova/objects/instance_action.py\", line 170, in event_sta\nrt\n    db_event = db.action_event_start(context, values)\n\n  File \"/opt/stack/nova/nova/db/api.py\", line 1850, in action_event_start\n    return IMPL.action_event_start(context, values)\n\n  File \"/opt/stack/nova/nova/db/sqlalchemy/api.py\", line 5622, in action_event_s\ntart\n    instance_uuid=values['instance_uuid'])\n\nInstanceActionNotFound: Action for request_id req-4bc0fd19-f392-421d-86c5-c2a519a2b8cc on instance b7a52ee9-7214-4133-bf80-bf94dc2c5af1 not found\n", 
            "date_created": "2015-04-02 13:16:40.039944+00:00", 
            "author": "https://api.launchpad.net/1.0/~xek"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/170123", 
            "date_created": "2015-04-02 13:38:01.677597+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Change abandoned by Michael Still (<email address hidden>) on branch: master\nReview: https://review.openstack.org/170123\nReason: This patch has been stalled for a long time, so I am abandoning it. Please feel free to restore it when the code is ready for review.", 
            "date_created": "2015-08-12 07:15:35.537611+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "I see a different error, but its been a while since this bug was looked at:\n\n2015-09-03 11:01:55.783 DEBUG nova.objects.instance [req-b5c49e6b-aa07-4ba2-a830-9bab570eb6be None None] Lazy-loading `metadata' on Instance uuid 25bfa30e-2aad-49f1-8cc1-32654916343a from (pid=32116) obj_load_attr /opt/stack/nova/nova/objects/instance.py:864\n2015-09-03 11:01:55.830 DEBUG nova.compute.manager [req-b5c49e6b-aa07-4ba2-a830-9bab570eb6be None None] [instance: 25bfa30e-2aad-49f1-8cc1-32654916343a] Checking state from (pid=32116) _get_power_state /opt/stack/nova/nova/compute/manager.py:1317\n2015-09-03 11:01:55.954 INFO nova.compute.manager [req-b5c49e6b-aa07-4ba2-a830-9bab570eb6be None None] Task possibly preempted: Conflict updating instance 25bfa30e-2aad-49f1-8cc1-32654916343a. Expected: {'task_state': [u'rebooting_hard', u'reboot_pending_hard', u'reboot_started_hard']}. Actual: {'task_state': u'reboot_started'}\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/dist-packages/eventlet/hubs/poll.py\", line 115, in wait\n    listener.cb(fileno)\n  File \"/usr/local/lib/python2.7/dist-packages/eventlet/greenthread.py\", line 214, in main\n    result = function(*args, **kwargs)   \n  File \"/usr/local/lib/python2.7/dist-packages/oslo_service/service.py\", line 645, in run_service\n    service.start()\n  File \"/opt/stack/nova/nova/service.py\", line 164, in start\n    self.manager.init_host()\n  File \"/opt/stack/nova/nova/compute/manager.py\", line 1297, in init_host\n    self._init_instance(context, instance)\n  File \"/opt/stack/nova/nova/compute/manager.py\", line 1048, in _init_instance\n    reboot_type=reboot_type)\n  File \"/opt/stack/nova/nova/exception.py\", line 89, in wrapped\n    payload)\n  File \"/usr/local/lib/python2.7/dist-packages/oslo_utils/excutils.py\", line 195, in __exit__\n    six.reraise(self.type_, self.value, self.tb)\n  File \"/opt/stack/nova/nova/exception.py\", line 72, in wrapped\n    return f(self, context, *args, **kw)\n  File \"/opt/stack/nova/nova/compute/manager.py\", line 329, in decorated_function\n    e.format_message())\n  File \"/usr/local/lib/python2.7/dist-packages/oslo_utils/excutils.py\", line 195, in __exit__\n    six.reraise(self.type_, self.value, self.tb)\n  File \"/opt/stack/nova/nova/compute/manager.py\", line 322, in decorated_function\n    return function(self, context, *args, **kwargs)\n  File \"/opt/stack/nova/nova/compute/manager.py\", line 401, in decorated_function\n    return function(self, context, *args, **kwargs)\n  File \"/opt/stack/nova/nova/compute/manager.py\", line 379, in decorated_function\n    kwargs['instance'], e, sys.exc_info())\n  File \"/usr/local/lib/python2.7/dist-packages/oslo_utils/excutils.py\", line 195, in __exit__\n    six.reraise(self.type_, self.value, self.tb)\n  File \"/opt/stack/nova/nova/compute/manager.py\", line 367, in decorated_function\n    return function(self, context, *args, **kwargs)\n  File \"/opt/stack/nova/nova/compute/manager.py\", line 2830, in reboot_instance\n    instance.save(expected_task_state=expected_states)\n  File \"/usr/local/lib/python2.7/dist-packages/oslo_versionedobjects/base.py\", line 197, in wrapper\n    ctxt, self, fn.__name__, args, kwargs)\n  File \"/opt/stack/nova/nova/conductor/rpcapi.py\", line 233, in object_action\n    objmethod=objmethod, args=args, kwargs=kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/oslo_messaging/rpc/client.py\", line 158, in call\n    retry=self.retry)\n  File \"/usr/local/lib/python2.7/dist-packages/oslo_messaging/transport.py\", line 90, in _send\n    timeout=timeout, retry=retry)\n  File \"/usr/local/lib/python2.7/dist-packages/oslo_messaging/_drivers/amqpdriver.py\", line 431, in send\n    retry=retry)\n  File \"/usr/local/lib/python2.7/dist-packages/oslo_messaging/_drivers/amqpdriver.py\", line 422, in _send\n    raise result\nUnexpectedTaskStateError_Remote: Conflict updating instance 25bfa30e-2aad-49f1-8cc1-32654916343a. Expected: {'task_state': [u'rebooting_hard', u'reboot_pending_hard', u'reboot_started_hard']}. Actual: {'task_state': u'reboot_started'}\nTraceback (most recent call last):\n\n  File \"/opt/stack/nova/nova/conductor/manager.py\", line 444, in _object_dispatch\n    return getattr(target, method)(*args, **kwargs)\n\n  File \"/usr/local/lib/python2.7/dist-packages/oslo_versionedobjects/base.py\", line 213, in wrapper\n    return fn(self, *args, **kwargs)\n\n  File \"/opt/stack/nova/nova/objects/instance.py\", line 728, in save\n    columns_to_join=_expected_cols(expected_attrs))\n\n  File \"/opt/stack/nova/nova/db/api.py\", line 764, in instance_update_and_get_original\n    expected=expected)\n\n  File \"/opt/stack/nova/nova/db/sqlalchemy/api.py\", line 216, in wrapper\n    return f(*args, **kwargs)\n\n  File \"/usr/local/lib/python2.7/dist-packages/oslo_db/api.py\", line 146, in wrapper\n    ectxt.value = e.inner_exc\n\n  File \"/usr/local/lib/python2.7/dist-packages/oslo_utils/excutils.py\", line 195, in __exit__\n    six.reraise(self.type_, self.value, self.tb)\n\n  File \"/usr/local/lib/python2.7/dist-packages/oslo_db/api.py\", line 136, in wrapper\n    return f(*args, **kwargs)\n\n  File \"/opt/stack/nova/nova/db/sqlalchemy/api.py\", line 2464, in instance_update_and_get_original\n    expected, original=instance_ref))\n\n  File \"/opt/stack/nova/nova/db/sqlalchemy/api.py\", line 2602, in _instance_update\n    raise exc(**exc_props)\n\nUnexpectedTaskStateError: Conflict updating instance 25bfa30e-2aad-49f1-8cc1-32654916343a. Expected: {'task_state': [u'rebooting_hard', u'reboot_pending_hard', u'reboot_started_hard']}. Actual: {'task_state': u'reboot_started'}\n", 
            "date_created": "2015-09-03 01:04:50.962057+00:00", 
            "author": "https://api.launchpad.net/1.0/~mikal"
        }, 
        {
            "content": "Change abandoned by Michael Still (<email address hidden>) on branch: master\nReview: https://review.openstack.org/170123\nReason: Actually, I want to rework this one, so re-abandon.", 
            "date_created": "2015-09-03 03:10:03.951131+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "So, if I add the soft reboot states to the list of expected states for a hard reboot the nova-compute does the right thing. We get this logged:\n\n2015-09-03 12:59:32.168 INFO nova.compute.manager [req-c5e2e629-5627-4bd3-8168-1a050a79d184 None None] [instance: e2b5d3cc-36a0-492b-8d35-e324c4fda4f4] Instance in transitional state (reboot_started) at start-up and power state is (4), triggering HARD reboot\n\nI think the key here is that we think that the instance power state is SHUTDOWN (4), which is allowed by a soft reboot. However, the nova.compute.utils.get_reboot_type code only expects that for a hard reboot.\n\nSo, I think in that case we just change the task state to a hard reboot pending and keep rolling.", 
            "date_created": "2015-09-03 03:23:15.464884+00:00", 
            "author": "https://api.launchpad.net/1.0/~mikal"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/219980", 
            "date_created": "2015-09-03 03:54:48.072112+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/219980\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=22d9e3d2ae7a36ef28ee3b539210e3362f486724\nSubmitter: Jenkins\nBranch:    master\n\ncommit 22d9e3d2ae7a36ef28ee3b539210e3362f486724\nAuthor: Michael Still <email address hidden>\nDate:   Thu Sep 3 13:41:10 2015 +1000\n\n    Handle nova-compute failure during a soft reboot\n    \n    A soft reboot is soft in the sense that we let the instance\n    respond to ACPI events before shutdown. We still shutdown the\n    libvirt domain however.\n    \n    Therefore, if nova-compute crashes having shutdown the instance\n    domain, but before starting it again, when nova-compute\n    restarts it will see an instance in a task_state indicating a\n    soft reboot, but with the power_state being shutdown. This was\n    unexpected and caused an instance.save() to crash out.\n    \n    In those cases, change the task_state to one corresponding to\n    a hard reboot, and continue on.\n    \n    Change-Id: Icdde0bc2e8c8c90ba20f48f010f230ae4d4dca54\n    Closes-Bug: #1072751\n", 
            "date_created": "2015-09-10 17:43:42.652396+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2015-09-24 07:01:48.152166+00:00"
}