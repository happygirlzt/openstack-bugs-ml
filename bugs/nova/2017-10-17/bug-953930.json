{
    "status": "Invalid", 
    "last_updated": "2012-03-14 16:08:27.266762+00:00", 
    "description": "When I try to assign a floating IP to an instance, I have to run the command several time before it actually manage to send the call to the network-node who actually has info about the instance. In my setup I currently have one controller and two compute notes. I'm running multi_host, so every compute-node is running nova-network and nova-api as well. As of now it's quite consistent that I have to run the command three times before it will succeed. The first time it's sent to the wrong node, and the log prints\n\nDEBUG nova.utils [-] Attempting to grab semaphore \"get_dhcp\" for method \"_get_dhcp_ip\"... from (pid=8991) inner /usr/lib/python2.7/dist-packages/nova/utils.py:675\n\nThe second time, it's sent to the right node, but I get the same log as above. Finally the third time, it works as it should.\n\nWhen it fail I must kill the command with ctrl+c and I get this traceback:\n\nnova add-floating-ip 142 192.168.10.132\n^CTraceback (most recent call last):\n  File \"/usr/bin/nova\", line 9, in <module>\n    load_entry_point('python-novaclient==2012.1', 'console_scripts', 'nova')()\n  File \"/usr/lib/python2.7/dist-packages/novaclient/shell.py\", line 353, in main\n    OpenStackComputeShell().main(sys.argv[1:])\n  File \"/usr/lib/python2.7/dist-packages/novaclient/shell.py\", line 304, in main\n    args.func(self.cs, args)\n  File \"/usr/lib/python2.7/dist-packages/novaclient/v1_1/shell.py\", line 974, in do_add_floating_ip\n    server.add_floating_ip(args.address)\n  File \"/usr/lib/python2.7/dist-packages/novaclient/v1_1/servers.py\", line 72, in add_floating_ip\n    self.manager.add_floating_ip(self, address)\n  File \"/usr/lib/python2.7/dist-packages/novaclient/v1_1/servers.py\", line 276, in add_floating_ip\n    self._action('addFloatingIp', server, {'address': address})\n  File \"/usr/lib/python2.7/dist-packages/novaclient/v1_1/servers.py\", line 538, in _action\n    return self.api.client.post(url, body={action: info})\n  File \"/usr/lib/python2.7/dist-packages/novaclient/client.py\", line 133, in post\n    return self._cs_request(url, 'POST', **kwargs)\n  File \"/usr/lib/python2.7/dist-packages/novaclient/client.py\", line 118, in _cs_request\n    **kwargs)\n  File \"/usr/lib/python2.7/dist-packages/novaclient/client.py\", line 88, in request\n    resp, body = super(HTTPClient, self).request(*args, **kwargs)\n  File \"/usr/lib/python2.7/dist-packages/httplib2/__init__.py\", line 1444, in request\n    (response, content) = self._request(conn, authority, uri, request_uri, method, body, headers, redirections, cachekey)\n  File \"/usr/lib/python2.7/dist-packages/httplib2/__init__.py\", line 1196, in _request\n    (response, content) = self._conn_request(conn, request_uri, method, body, headers)\n  File \"/usr/lib/python2.7/dist-packages/httplib2/__init__.py\", line 1166, in _conn_request\n    response = conn.getresponse()\n  File \"/usr/lib/python2.7/httplib.py\", line 1027, in getresponse\n    response.begin()\n  File \"/usr/lib/python2.7/httplib.py\", line 407, in begin\n    version, status, reason = self._read_status()\n  File \"/usr/lib/python2.7/httplib.py\", line 365, in _read_status\n    line = self.fp.readline()\n  File \"/usr/lib/python2.7/socket.py\", line 430, in readline\n    data = recv(1)", 
    "tags": [], 
    "importance": "Undecided", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/953930", 
    "owner": "None", 
    "id": 953930, 
    "index": 3953, 
    "openned": "2012-03-13 11:18:53.654485+00:00", 
    "created": "2012-03-13 11:18:53.654485+00:00", 
    "title": "nova client sends floating IP call to wrong node", 
    "comments": [
        {
            "content": "When I try to assign a floating IP to an instance, I have to run the command several time before it actually manage to send the call to the network-node who actually has info about the instance. In my setup I currently have one controller and two compute notes. I'm running multi_host, so every compute-node is running nova-network and nova-api as well. As of now it's quite consistent that I have to run the command three times before it will succeed. The first time it's sent to the wrong node, and the log prints\n\nDEBUG nova.utils [-] Attempting to grab semaphore \"get_dhcp\" for method \"_get_dhcp_ip\"... from (pid=8991) inner /usr/lib/python2.7/dist-packages/nova/utils.py:675\n\nThe second time, it's sent to the right node, but I get the same log as above. Finally the third time, it works as it should.\n\nWhen it fail I must kill the command with ctrl+c and I get this traceback:\n\nnova add-floating-ip 142 192.168.10.132\n^CTraceback (most recent call last):\n  File \"/usr/bin/nova\", line 9, in <module>\n    load_entry_point('python-novaclient==2012.1', 'console_scripts', 'nova')()\n  File \"/usr/lib/python2.7/dist-packages/novaclient/shell.py\", line 353, in main\n    OpenStackComputeShell().main(sys.argv[1:])\n  File \"/usr/lib/python2.7/dist-packages/novaclient/shell.py\", line 304, in main\n    args.func(self.cs, args)\n  File \"/usr/lib/python2.7/dist-packages/novaclient/v1_1/shell.py\", line 974, in do_add_floating_ip\n    server.add_floating_ip(args.address)\n  File \"/usr/lib/python2.7/dist-packages/novaclient/v1_1/servers.py\", line 72, in add_floating_ip\n    self.manager.add_floating_ip(self, address)\n  File \"/usr/lib/python2.7/dist-packages/novaclient/v1_1/servers.py\", line 276, in add_floating_ip\n    self._action('addFloatingIp', server, {'address': address})\n  File \"/usr/lib/python2.7/dist-packages/novaclient/v1_1/servers.py\", line 538, in _action\n    return self.api.client.post(url, body={action: info})\n  File \"/usr/lib/python2.7/dist-packages/novaclient/client.py\", line 133, in post\n    return self._cs_request(url, 'POST', **kwargs)\n  File \"/usr/lib/python2.7/dist-packages/novaclient/client.py\", line 118, in _cs_request\n    **kwargs)\n  File \"/usr/lib/python2.7/dist-packages/novaclient/client.py\", line 88, in request\n    resp, body = super(HTTPClient, self).request(*args, **kwargs)\n  File \"/usr/lib/python2.7/dist-packages/httplib2/__init__.py\", line 1444, in request\n    (response, content) = self._request(conn, authority, uri, request_uri, method, body, headers, redirections, cachekey)\n  File \"/usr/lib/python2.7/dist-packages/httplib2/__init__.py\", line 1196, in _request\n    (response, content) = self._conn_request(conn, request_uri, method, body, headers)\n  File \"/usr/lib/python2.7/dist-packages/httplib2/__init__.py\", line 1166, in _conn_request\n    response = conn.getresponse()\n  File \"/usr/lib/python2.7/httplib.py\", line 1027, in getresponse\n    response.begin()\n  File \"/usr/lib/python2.7/httplib.py\", line 407, in begin\n    version, status, reason = self._read_status()\n  File \"/usr/lib/python2.7/httplib.py\", line 365, in _read_status\n    line = self.fp.readline()\n  File \"/usr/lib/python2.7/socket.py\", line 430, in readline\n    data = recv(1)", 
            "date_created": "2012-03-13 11:18:53.654485+00:00", 
            "author": "https://api.launchpad.net/1.0/~pedersen-larserik"
        }, 
        {
            "content": "Are you sure that mult_host is true on the network?  This works correctly in essex. The code has moved, but I don't see anything that would cause this to occur in the diablo code unless multi_host isn't set.", 
            "date_created": "2012-03-13 21:08:56.657484+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "Yes, the --multi_host=True are set, so it can't be that causing this trouble.", 
            "date_created": "2012-03-13 22:37:33.371026+00:00", 
            "author": "https://api.launchpad.net/1.0/~pedersen-larserik"
        }, 
        {
            "content": "Marking invalid for Essex, opening an incomplete Diablo task", 
            "date_created": "2012-03-14 16:08:10.416071+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }
    ], 
    "closed": "2012-03-14 16:08:11.937762+00:00"
}