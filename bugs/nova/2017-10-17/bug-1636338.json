{
    "status": "In Progress", 
    "last_updated": "2017-06-27 15:54:05.071869+00:00", 
    "description": "This is related to this bug https://bugs.launchpad.net/nova/+bug/1596119\n\nAfter upgrading to Mitaka with the above patch, a new bug surfaced. The bug is related to InstanceNUMACell having cpu_policy set to None. This causes cpu_pinning_requested to always return False.\nhttps://github.com/openstack/nova/blob/master/nova/objects/instance_numa_topology.py#L112\n\nThis will then trick computes with old NUMA instances into thinking that nothing is pinned, causing new instances with cpu_policy set to CPUAllocationPolicy.DEDICATED to potentially get scheduled on the same NUMA zone.", 
    "tags": [
        "liberty-backport-potential", 
        "mitaka-backport-potential", 
        "newton-backport-potential", 
        "numa", 
        "openstack-version.mitaka", 
        "upgrades"
    ], 
    "importance": "Medium", 
    "heat": 20, 
    "link": "https://bugs.launchpad.net/nova/+bug/1636338", 
    "owner": "https://api.launchpad.net/1.0/~stephenfinucane", 
    "id": 1636338, 
    "index": 4662, 
    "openned": "2016-10-25 00:56:20.652310+00:00", 
    "created": "2016-10-25 00:56:20.652310+00:00", 
    "title": "Numa topology not calculated for instance with numa_topology after upgrading to Mitaka", 
    "comments": [
        {
            "content": "This is related to this bug https://bugs.launchpad.net/nova/+bug/1596119\n\nAfter upgrading to Mitaka with the above patch, a new bug surfaced. The bug is related to InstanceNUMACell having cpu_policy set to None. This causes cpu_pinning_requested to always return False.\nhttps://github.com/openstack/nova/blob/master/nova/objects/instance_numa_topology.py#L112\n\nThis will then trick computes with old NUMA instances into thinking that nothing is pinned, causing new instances with cpu_policy set to CPUAllocationPolicy.DEDICATED to potentially get scheduled on the same NUMA zone.", 
            "date_created": "2016-10-25 00:56:20.652310+00:00", 
            "author": "https://api.launchpad.net/1.0/~eandersson"
        }, 
        {
            "content": "It looks like [1] changed the way cpu_pinning_requested works without considering backwards compatibility for older instances (instances with InstanceNUMACell < 1.3 that don't store cpu_policy).\n\n     def cpu_pinning_requested(self):\n -        return self.cpu_pinning is not None\n +        return self.cpu_policy == obj_fields.CPUAllocationPolicy.DEDICATED\n\nMaybe introducing some fallback to the old check if InstanceNUMACell < 1.3 will do the trick.\n\n[1] https://github.com/openstack/nova/commit/dfe6545329e6d7e417615af44f6b5588948699db", 
            "date_created": "2016-11-02 13:33:22.622243+00:00", 
            "author": "https://api.launchpad.net/1.0/~hanlind"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/396184", 
            "date_created": "2016-11-10 13:05:40.993516+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Although the patch above fixes the issue.\n\nI still don't understand why cpu_pinning_requested returning False would make it schedule a VM with cpu_pinning_requested returning True on the same NUMA zone. Shouldn't a dedicated VM always have its own NUMA zone?\n", 
            "date_created": "2016-11-10 19:25:37.448383+00:00", 
            "author": "https://api.launchpad.net/1.0/~eandersson"
        }, 
        {
            "content": "On Thu, 2016-11-10 at 19:25 +0000, Erik Olof Gunnar Andersson wrote:\n> Although the patch above fixes the issue.\n> \n> I still don't understand why cpu_pinning_requested returning False\n> would\n> make it schedule a VM with cpu_pinning_requested returning True on\n> the\n> same NUMA zone. Shouldn't a dedicated VM always have its own NUMA\n> zone?\n\nNot really. If you want to isolate non-pinned instances from pinned\ninstances, you should use host aggregates. Non-pinned instances don't\nrespect the requirments of their pinned equivalents.\n\nStephen\n", 
            "date_created": "2016-11-11 09:24:42+00:00", 
            "author": "https://api.launchpad.net/1.0/~stephenfinucane"
        }, 
        {
            "content": "Automatically discovered version mitaka in description. If this is incorrect, please update the description to include 'nova version: ...'", 
            "date_created": "2017-06-27 15:54:03.661810+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }
    ]
}