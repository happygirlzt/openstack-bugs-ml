{
    "status": "Fix Released", 
    "last_updated": "2012-09-27 15:31:55.731266+00:00", 
    "description": "\n I'm trying to run the following command:\n$ euca-attach-volume vol-00000007 -i i-0000000b -d /dev/vdc\n\nIt fails and the nova-compute log is copied and pasted below.\nThe error message is : \n  \"InvalidDevicePath: The supplied device path (/dev/a) is invalid.\"\nThe device name given is \"/dev/vdc\", but it looks like that get_device_name_for_instance()\nchanges it to '/dev/a'.\nAnd it ends up the error of \"InvalidDevicePath\".\n\nI pulled the nova from github on August 29th.\nAnd the followings are configured in /etc/nova/nova.conf file.\n  use_cow_images=True\n  libvirt_type=lxc\n\n\n--------\n\nVish's reply\n\nThis looks like a recent bug. Lxc may not be setting root_device_path in the block device mapping table. It is now using root_device_path to set the path for the volumes. We may need to supply a fallback if it isn't set.", 
    "tags": [
        "lxc"
    ], 
    "importance": "High", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1046020", 
    "owner": "https://api.launchpad.net/1.0/~vishvananda", 
    "id": 1046020, 
    "index": 785, 
    "openned": "2012-09-04 20:23:02.983527+00:00", 
    "created": "2012-09-04 20:23:02.983527+00:00", 
    "title": "attach_volume fails for LXC due to wrong root_device_name and path", 
    "comments": [
        {
            "content": "\n I'm trying to run the following command:\n$ euca-attach-volume vol-00000007 -i i-0000000b -d /dev/vdc\n\nIt fails and the nova-compute log is copied and pasted below.\nThe error message is : \n  \"InvalidDevicePath: The supplied device path (/dev/a) is invalid.\"\nThe device name given is \"/dev/vdc\", but it looks like that get_device_name_for_instance()\nchanges it to '/dev/a'.\nAnd it ends up the error of \"InvalidDevicePath\".\n\nI pulled the nova from github on August 29th.\nAnd the followings are configured in /etc/nova/nova.conf file.\n  use_cow_images=True\n  libvirt_type=lxc\n\n\n--------\n\nVish's reply\n\nThis looks like a recent bug. Lxc may not be setting root_device_path in the block device mapping table. It is now using root_device_path to set the path for the volumes. We may need to supply a fallback if it isn't set.", 
            "date_created": "2012-09-04 20:23:02.983527+00:00", 
            "author": "https://api.launchpad.net/1.0/~dkang"
        }, 
        {
            "content": "------------- log of nova-compute ---------------\n\n2012-09-04 13:37:46 DEBUG nova.utils [req-79250a0b-6c11-4afc-a0a4-75736d3853c5 admin admin] Got semaphore \"f3fb4350-a72e-404f-a21f-10f333fe67e8\" for method \"do_reserve\"... from (pid=13108) inner /usr/local/nova/nova/utils.py:712\n2012-09-04 13:37:46 DEBUG nova.utils [req-79250a0b-6c11-4afc-a0a4-75736d3853c5 admin admin] Attempting to grab semaphore \"compute_resources\" for method \"update_load_stats_for_instance\"... from (pid=13108) inner /usr/local/nova/nova/utils.py:708\n2012-09-04 13:37:46 DEBUG nova.utils [req-79250a0b-6c11-4afc-a0a4-75736d3853c5 admin admin] Got semaphore \"compute_resources\" for method \"update_load_stats_for_instance\"... from (pid=13108) inner /usr/local/nova/nova/utils.py:712\n2012-09-04 13:37:46 ERROR nova.openstack.common.rpc.amqp [-] Exception during message handling\n2012-09-04 13:37:46 TRACE nova.openstack.common.rpc.amqp Traceback (most recent call last):\n2012-09-04 13:37:46 TRACE nova.openstack.common.rpc.amqp   File \"/usr/local/nova/nova/openstack/common/rpc/amqp.py\", line 275, in _process_data\n2012-09-04 13:37:46 TRACE nova.openstack.common.rpc.amqp     rval = self.proxy.dispatch(ctxt, version, method, **args)\n2012-09-04 13:37:46 TRACE nova.openstack.common.rpc.amqp   File \"/usr/local/nova/nova/openstack/common/rpc/dispatcher.py\", line 145, in dispatch\n2012-09-04 13:37:46 TRACE nova.openstack.common.rpc.amqp     return getattr(proxyobj, method)(ctxt, **kwargs)\n2012-09-04 13:37:46 TRACE nova.openstack.common.rpc.amqp   File \"/usr/local/nova/nova/exception.py\", line 117, in wrapped\n2012-09-04 13:37:46 TRACE nova.openstack.common.rpc.amqp     temp_level, payload)\n2012-09-04 13:37:46 TRACE nova.openstack.common.rpc.amqp   File \"/usr/lib64/python2.6/contextlib.py\", line 23, in __exit__\n2012-09-04 13:37:46 TRACE nova.openstack.common.rpc.amqp     self.gen.next()\n2012-09-04 13:37:46 TRACE nova.openstack.common.rpc.amqp   File \"/usr/local/nova/nova/exception.py\", line 92, in wrapped\n2012-09-04 13:37:46 TRACE nova.openstack.common.rpc.amqp     return f(*args, **kw)\n2012-09-04 13:37:46 TRACE nova.openstack.common.rpc.amqp   File \"/usr/local/nova/nova/compute/manager.py\", line 211, in decorated_function\n2012-09-04 13:37:46 TRACE nova.openstack.common.rpc.amqp     pass\n2012-09-04 13:37:46 TRACE nova.openstack.common.rpc.amqp   File \"/usr/lib64/python2.6/contextlib.py\", line 23, in __exit__\n2012-09-04 13:37:46 TRACE nova.openstack.common.rpc.amqp     self.gen.next()\n2012-09-04 13:37:46 TRACE nova.openstack.common.rpc.amqp   File \"/usr/local/nova/nova/compute/manager.py\", line 204, in decorated_function\n2012-09-04 13:37:46 TRACE nova.openstack.common.rpc.amqp     return function(self, context, *args, **kwargs)\n2012-09-04 13:37:46 TRACE nova.openstack.common.rpc.amqp   File \"/usr/local/nova/nova/compute/manager.py\", line 237, in decorated_function\n2012-09-04 13:37:46 TRACE nova.openstack.common.rpc.amqp     instance_uuid, e, sys.exc_info())\n2012-09-04 13:37:46 TRACE nova.openstack.common.rpc.amqp   File \"/usr/lib64/python2.6/contextlib.py\", line 23, in __exit__\n2012-09-04 13:37:46 TRACE nova.openstack.common.rpc.amqp     self.gen.next()\n2012-09-04 13:37:46 TRACE nova.openstack.common.rpc.amqp   File \"/usr/local/nova/nova/compute/manager.py\", line 226, in decorated_function\n2012-09-04 13:37:46 TRACE nova.openstack.common.rpc.amqp     return function(self, context, *args, **kwargs)\n2012-09-04 13:37:46 TRACE nova.openstack.common.rpc.amqp   File \"/usr/local/nova/nova/compute/manager.py\", line 2057, in reserve_block_device_name\n2012-09-04 13:37:46 TRACE nova.openstack.common.rpc.amqp     return do_reserve()\n2012-09-04 13:37:46 TRACE nova.openstack.common.rpc.amqp   File \"/usr/local/nova/nova/utils.py\", line 733, in inner\n2012-09-04 13:37:46 TRACE nova.openstack.common.rpc.amqp     retval = f(*args, **kwargs)\n2012-09-04 13:37:46 TRACE nova.openstack.common.rpc.amqp   File \"/usr/local/nova/nova/compute/manager.py\", line 2051, in do_reserve\n2012-09-04 13:37:46 TRACE nova.openstack.common.rpc.amqp     device)\n2012-09-04 13:37:46 TRACE nova.openstack.common.rpc.amqp   File \"/usr/local/nova/nova/compute/utils.py\", line 56, in get_device_name_for_instance\n2012-09-04 13:37:46 TRACE nova.openstack.common.rpc.amqp     raise exception.InvalidDevicePath(path=mappings['root'])\n2012-09-04 13:37:46 TRACE nova.openstack.common.rpc.amqp InvalidDevicePath: The supplied device path (/dev/a) is invalid.\n2012-09-04 13:37:46 TRACE nova.openstack.common.rpc.amqp\n2012-09-04 13:37:46 ERROR nova.openstack.common.rpc.common [-] Returning exception The supplied device path (/dev/a) is invalid. to caller\n2012-09-04 13:37:46 ERROR nova.openstack.common.rpc.common [-] ['Traceback (most recent call last):\\n', '  File \"/usr/local/nova/nova/openstack/common/rpc/amqp.py\", line 275, in _process_data\\n    rval = self.proxy.dispatch(ctxt, version, method, **args)\\n', '  File \"/usr/local/nova/nova/openstack/common/rpc/dispatcher.py\", line 145, in dispatch\\n    return getattr(proxyobj, method)(ctxt, **kwargs)\\n', '  File \"/usr/local/nova/nova/exception.py\", line 117, in wrapped\\n    temp_level, payload)\\n', '  File \"/usr/lib64/python2.6/contextlib.py\", line 23, in __exit__\\n    self.gen.next()\\n', '  File \"/usr/local/nova/nova/exception.py\", line 92, in wrapped\\n    return f(*args, **kw)\\n', '  File \"/usr/local/nova/nova/compute/manager.py\", line 211, in decorated_function\\n    pass\\n', '  File \"/usr/lib64/python2.6/contextlib.py\", line 23, in __exit__\\n    self.gen.next()\\n', '  File \"/usr/local/nova/nova/compute/manager.py\", line 204, in decorated_function\\n    return function(self, context, *args, **kwargs)\\n', '  File \"/usr/local/nova/nova/compute/manager.py\", line 237, in decorated_function\\n    instance_uuid, e, sys.exc_info())\\n', '  File \"/usr/lib64/python2.6/contextlib.py\", line 23, in __exit__\\n    self.gen.next()\\n', '  File \"/usr/local/nova/nova/compute/manager.py\", line 226, in decorated_function\\n    return function(self, context, *args, **kwargs)\\n', '  File \"/usr/local/nova/nova/compute/manager.py\", line 2057, in reserve_block_device_name\\n    return do_reserve()\\n', '  File \"/usr/local/nova/nova/utils.py\", line 733, in inner\\n    retval = f(*args, **kwargs)\\n', '  File \"/usr/local/nova/nova/compute/manager.py\", line 2051, in do_reserve\\n    device)\\n', '  File \"/usr/local/nova/nova/compute/utils.py\", line 56, in get_device_name_for_instance\\n    raise exception.InvalidDevicePath(path=mappings[\\'root\\'])\\n', 'InvalidDevicePath: The supplied device path (/dev/a) is invalid.\\n']", 
            "date_created": "2012-09-04 20:43:54.744711+00:00", 
            "author": "https://api.launchpad.net/1.0/~dkang"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/12384", 
            "date_created": "2012-09-04 22:29:06.597307+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/12384\nCommitted: http://github.com/openstack/nova/commit/07e0b779fda808211853242415087753ca186ac4\nSubmitter: Jenkins\nBranch:    master\n\ncommit 07e0b779fda808211853242415087753ca186ac4\nAuthor: Vishvananda Ishaya <email address hidden>\nDate:   Tue Sep 4 15:25:35 2012 -0700\n\n    Automatically convert device names\n    \n    In the past, users have been able to specify xvda or xvdb and it\n    has worked. We are now validating device names against the expected\n    name from the backend, and this causes confusion, especially for lxc\n    which expecting device names to be /dev/a /dev/b /dev/c etc.\n    \n    This patch addresses the issue by automatically converting between\n    different formats. The proper format for the backend will be returned\n    by the api. Includes tests to verify that the conversion works and\n    that the lxc values work as expected.\n    \n    Fixes bug 1046020\n    \n    Change-Id: Iffa552ba05f89f70b6fb93043edf8882c8412215\n", 
            "date_created": "2012-09-05 05:54:14.082869+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Now the problem is gone. This bug is fixed. Thank you.\n\nHowever, a volume cannot be attached to an LXC instance, yet.\nI've reported another bug.\n\nhttps://bugs.launchpad.net/nova/+bug/1046495/\n\n", 
            "date_created": "2012-09-05 21:40:41.619811+00:00", 
            "author": "https://api.launchpad.net/1.0/~dkang"
        }
    ], 
    "closed": "2012-09-19 06:34:45.584089+00:00"
}