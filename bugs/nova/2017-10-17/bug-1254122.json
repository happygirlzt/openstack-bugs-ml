{
    "status": "Fix Released", 
    "last_updated": "2014-04-17 09:05:06.563080+00:00", 
    "description": "If libvirt fails to power off a VM during the shutdown called from within do_terminate_instance() it raises exception.InstancePowerOffFailure.    However do_terminate_instance doesn\u2019t catch this, and so two (IMO bad) things  happen:\n\ni)\tThe instance doesn\u2019t go to an Error (Deleting) state\nii)\t@reverts_task_state  sets task_state to None \u2013 putting the instance into Active(None)\n\nThis makes the user think the system has just ignored their request, so the repeate the delete, and repeate the delete \u2026.\n\nProposed changes:\n-\tCatch  exception.InstancePowerOffFailure so that the instance goes to Error(Deleting)\n-\tRemove the reverts_task_state decorator from terminate_instance.      Delete is a non-reversible operation for the user, and many systems stop billing for instances once the user has indicated that they want to delete the instance (from that point on is the system\u2019s problem to complete the delete as soon as possible.  No failure during delete should set the instance back to Active(None)", 
    "tags": [], 
    "importance": "High", 
    "heat": 8, 
    "link": "https://bugs.launchpad.net/nova/+bug/1254122", 
    "owner": "https://api.launchpad.net/1.0/~philip-day", 
    "id": 1254122, 
    "index": 1327, 
    "openned": "2013-11-22 18:25:53.239507+00:00", 
    "created": "2013-11-22 18:25:53.239507+00:00", 
    "title": "Failure to power off a VM during delete leads to it going back to Active(None)", 
    "comments": [
        {
            "content": "If libvirt fails to power off a VM during the shutdown called from within do_terminate_instance() it raises exception.InstancePowerOffFailure.    However do_terminate_instance doesn\u2019t catch this, and so two (IMO bad) things  happen:\n\ni)\tThe instance doesn\u2019t go to an Error (Deleting) state\nii)\t@reverts_task_state  sets task_state to None \u2013 putting the instance into Active(None)\n\nThis makes the user think the system has just ignored their request, so the repeate the delete, and repeate the delete \u2026.\n\nProposed changes:\n-\tCatch  exception.InstancePowerOffFailure so that the instance goes to Error(Deleting)\n-\tRemove the reverts_task_state decorator from terminate_instance.      Delete is a non-reversible operation for the user, and many systems stop billing for instances once the user has indicated that they want to delete the instance (from that point on is the system\u2019s problem to complete the delete as soon as possible.  No failure during delete should set the instance back to Active(None)", 
            "date_created": "2013-11-22 18:25:53.239507+00:00", 
            "author": "https://api.launchpad.net/1.0/~philip-day"
        }, 
        {
            "content": "Sorry Aditi - I already have a fix proposed for this: https://review.openstack.org/#/c/58829/\n\nsomehow it didn't get linked back to the bug", 
            "date_created": "2013-12-04 10:45:28.869098+00:00", 
            "author": "https://api.launchpad.net/1.0/~philip-day"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/58829\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=63381a15ac3c2e36f5521f8a77108664f89bfab5\nSubmitter: Jenkins\nBranch:    master\n\ncommit 63381a15ac3c2e36f5521f8a77108664f89bfab5\nAuthor: Phil Day <email address hidden>\nDate:   Wed Nov 27 17:31:23 2013 +0000\n\n    Failure during termination should always leave state as Error(Deleting)\n    \n    Delete is a non-reversible operation for the user, and once the\n    user has indicated that they want to delete the instance from that\n    point on is the system's problem to complete the delete as soon as\n    possible.\n    \n    If anything fails during the delete that the system cannot recover\n    from then the instance should be left in an Error(Deleting) state.\n    Anything else, in particular reverting to an Active(None) state, makes\n    it look like the system has ignored the request.\n    \n    Currently InstanceTerminationFailure is explicitly caught, but the\n    exception does not propagate so the instance_fault wrapper does not\n    get a chance to log the failure.  Also terminate_instance is wrapped\n    by reverts_task_state which resets the state to Active(None)\n    \n    This change removes the revert_task_state wrapper and catches all\n    exceptions so that unhandled exceptions always leave the instance\n    in Error(Deleting)\n    \n    Change-Id: I5fb1bbd56035792f566a6e076edfe7a69df006ef\n    Closes-Bug: 1254122\n", 
            "date_created": "2014-01-31 02:08:26.378596+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2014-03-05 13:07:54.085999+00:00"
}