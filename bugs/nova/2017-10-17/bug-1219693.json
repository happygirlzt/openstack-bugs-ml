{
    "status": "Fix Released", 
    "last_updated": "2014-10-16 08:38:07.262389+00:00", 
    "description": "Create aggregate fails when input metadata \"availability_zone\" length >255(models.py value = Column(String(255), nullable=False)),Exception is raised but record in DB is not rolled back.", 
    "tags": [
        "db"
    ], 
    "importance": "Medium", 
    "heat": 12, 
    "link": "https://bugs.launchpad.net/nova/+bug/1219693", 
    "owner": "https://api.launchpad.net/1.0/~wingwj", 
    "id": 1219693, 
    "index": 3550, 
    "openned": "2013-09-02 08:43:13.045302+00:00", 
    "created": "2013-09-02 08:43:13.045302+00:00", 
    "title": "create aggregate", 
    "comments": [
        {
            "content": "Create aggregate fails when input metadata \"availability_zone\" length >255(models.py value = Column(String(255), nullable=False)),Exception is raised but record in DB is not rolled back.", 
            "date_created": "2013-09-02 08:43:13.045302+00:00", 
            "author": "https://api.launchpad.net/1.0/~idopra"
        }, 
        {
            "content": "Hi Frank, just did some test according to your test steps but did not reproduce this.\n\nFrom my test you can see that once the length of metadata value exceeds 255, then the value will be truncated to 255 without exception, this seems to be a design behavior for database behavior. \n\nPlease show your comments if any. Thanks!\n\n-- Jake\n\njake@jake1:~$ nova  aggregate-set-metadata 2 availability_zone=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd\n/usr/lib/python2.7/dist-packages/gobject/constants.py:24: Warning: g_boxed_type_register_static: assertion `g_type_from_name (name) == 0' failed\n  import gobject._gobject\nAggregate 2 has been successfully updated.\nn| Id | Name | Availability Zone                                                                                                                                                                                                                                               | Hosts | Metadata                                                                                                                                                                                                                                                                                   |\nn| 2  | agg1 | xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc | []    | {u'availability_zone': u'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc'} |\n
            "date_created": "2013-09-02 23:50:10.369086+00:00", 
            "author": "https://api.launchpad.net/1.0/~jake-liu"
        }, 
        {
            "content": "It depends on the DB and how it's configured.  PostgreSQL gives an error if you try to shove 256+ characters into a 255-character field.  MySQL truncates by default, but can be configured to give an error.\n\nWe should do the truncation in our code so the behavior is consistent across DBs.", 
            "date_created": "2013-09-11 16:24:17.673389+00:00", 
            "author": "https://api.launchpad.net/1.0/~dripton"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/53789", 
            "date_created": "2013-10-25 07:00:11.884734+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/79529", 
            "date_created": "2014-03-11 03:43:57.687051+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/79529\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=11b9305e3f0dcff7f5f92863cfd3679fd7b6a6a3\nSubmitter: Jenkins\nBranch:    master\n\ncommit 11b9305e3f0dcff7f5f92863cfd3679fd7b6a6a3\nAuthor: wingwj <email address hidden>\nDate:   Tue Mar 11 11:38:14 2014 +0800\n\n    Check the length of aggregate metadata\n    \n    PostgreSQL gives an error if you try to shove 256+ characters\n    into a 255-character field. So we need raise a HTTPBadRequest\n    explanation if the length of aggregate_metadata.keys or\n    aggregate_metadata.values is above 255.\n    \n    Change-Id: I2c778f2237ba5bd2aa8335a0eae80f3aad3e9157\n    Closes-Bug: #1219693\n", 
            "date_created": "2014-06-17 22:49:52.952240+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2014-07-23 14:54:50.536188+00:00"
}