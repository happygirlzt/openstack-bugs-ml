{
    "status": "In Progress", 
    "last_updated": "2017-10-12 18:55:20.810478+00:00", 
    "description": "When live migrating a BFV instance with a config disk, the API currently requires block migration to be specified due to the local storage requirement. This doesn't make sense on a number of levels.\n\nBefore calling migrateToURI3() in this case, the libvirt driver filters out all disks which it shouldn't migrate, which is both of them: the config drive because it's read-only and we already copied it with scp, and the root disk because it's a volume. It calls migrateToURI3() with an empty migrate_disks in params, and VIR_MIGRATE_NON_SHARED_INC in flags (because block-migration).\n\nThere's a quirk in the behaviour of the libvirt python bindings here: it doesn't distinguish between an empty migrate_disks list, and no migrate_disks list. Both use the default behaviour of \"block migrate all writable disks\". This will include the attached root volume. As the root volume is simultaneously attached to both ends of the migration, one of which is running guest, this a data corruptor.", 
    "tags": [
        "libvirt", 
        "volumes"
    ], 
    "importance": "High", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1719362", 
    "owner": "https://api.launchpad.net/1.0/~mbooth-9", 
    "id": 1719362, 
    "index": 2153, 
    "openned": "2017-09-25 16:31:32.141327+00:00", 
    "created": "2017-09-25 16:31:32.141327+00:00", 
    "title": "libvirt: Data corruptor live migrating BFV instance with config disk", 
    "comments": [
        {
            "content": "When live migrating a BFV instance with a config disk, the API currently requires block migration to be specified due to the local storage requirement. This doesn't make sense on a number of levels.\n\nBefore calling migrateToURI3() in this case, the libvirt driver filters out all disks which it shouldn't migrate, which is both of them: the config drive because it's read-only and we already copied it with scp, and the root disk because it's a volume. It calls migrateToURI3() with an empty migrate_disks in params, and VIR_MIGRATE_NON_SHARED_INC in flags (because block-migration).\n\nThere's a quirk in the behaviour of the libvirt python bindings here: it doesn't distinguish between an empty migrate_disks list, and no migrate_disks list. Both use the default behaviour of \"block migrate all writable disks\". This will include the attached root volume. As the root volume is simultaneously attached to both ends of the migration, one of which is running guest, this a data corruptor.", 
            "date_created": "2017-09-25 16:31:32.141327+00:00", 
            "author": "https://api.launchpad.net/1.0/~mbooth-9"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/507202", 
            "date_created": "2017-09-25 16:43:48.416917+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Should we target this to the upstream libvirt Python bindings too?", 
            "date_created": "2017-09-26 10:12:00.176823+00:00", 
            "author": "https://api.launchpad.net/1.0/~stephenfinucane"
        }, 
        {
            "content": "Good question. I asked Dan Berrang\u00e9 who was helping me debug this and he says not, as it can't be fixed. The correct behaviour here is not to pass the flag if we don't want to block migrate anything, which makes sense anyway.", 
            "date_created": "2017-09-26 10:44:29.161260+00:00", 
            "author": "https://api.launchpad.net/1.0/~mbooth-9"
        }
    ]
}