{
    "status": "Fix Released", 
    "last_updated": "2016-07-14 19:30:26.384874+00:00", 
    "description": "On nova instance delete, the virtual interface records associated with the instance are not getting marked as deleted on instance delete.  This leads to a DBDuplicateEntry traceback in n-cond.log when the port is attempted to be used on another instance.\n\nSteps to reproduce:\n1. Boot up an instance with a network port.\n2. Update the port with \"device_id\" blank.\n3. Delete the nova instance.\n4. Attempt to boot a new instance with the port.\n\nLog entry of traceback:\nn-cond.log:2016-07-07 20:19:24.587 TRACE nova.db.sqlalchemy.api DBDuplicateEntry: (pymysql.err.IntegrityError) (1062, u\"Duplicate entry 'fa:16:3e:45:4c:1a/44aa08c2-85e5-4d70-878d-7723d96484d1-0' for key 'uniq_virtual_interfaces0address0deleted'\") [SQL: u'INSERT INTO virtual_interfaces (created_at, updated_at, deleted_at, deleted, address, network_id, instance_uuid, uuid, tag) VALUES (%(created_at)s, %(updated_at)s, %(deleted_at)s, %(deleted)s, %(address)s, %(network_id)s, %(instance_uuid)s, %(uuid)s, %(tag)s)'] [parameters: {'instance_uuid': '34ca6eea-8921-4c1e-8c52-c1873e15898d', 'uuid': '44aa08c2-85e5-4d70-878d-7723d96484d1', 'network_id': None, 'created_at': datetime.datetime(2016, 7, 7, 20, 19, 24, 586359), 'updated_at': None, 'deleted': 0, 'tag': None, 'address': u'fa:16:3e:45:4c:1a/44aa08c2-85e5-4d70-878d-7723d96484d1', 'deleted_at': None}]", 
    "tags": [
        "neutron"
    ], 
    "importance": "High", 
    "heat": 8, 
    "link": "https://bugs.launchpad.net/nova/+bug/1602357", 
    "owner": "https://api.launchpad.net/1.0/~mriedem", 
    "id": 1602357, 
    "index": 1947, 
    "openned": "2016-07-12 17:15:30.094369+00:00", 
    "created": "2016-07-12 17:15:30.094369+00:00", 
    "title": "Nova is not marking virtual interfaces as deleted in db on instance delete", 
    "comments": [
        {
            "content": "On nova instance delete, the virtual interface records associated with the instance are not getting marked as deleted on instance delete.  This leads to a DBDuplicateEntry traceback in n-cond.log when the port is attempted to be used on another instance.\n\nSteps to reproduce:\n1. Boot up an instance with a network port.\n2. Update the port with \"device_id\" blank.\n3. Delete the nova instance.\n4. Attempt to boot a new instance with the port.\n\nLog entry of traceback:\nn-cond.log:2016-07-07 20:19:24.587 TRACE nova.db.sqlalchemy.api DBDuplicateEntry: (pymysql.err.IntegrityError) (1062, u\"Duplicate entry 'fa:16:3e:45:4c:1a/44aa08c2-85e5-4d70-878d-7723d96484d1-0' for key 'uniq_virtual_interfaces0address0deleted'\") [SQL: u'INSERT INTO virtual_interfaces (created_at, updated_at, deleted_at, deleted, address, network_id, instance_uuid, uuid, tag) VALUES (%(created_at)s, %(updated_at)s, %(deleted_at)s, %(deleted)s, %(address)s, %(network_id)s, %(instance_uuid)s, %(uuid)s, %(tag)s)'] [parameters: {'instance_uuid': '34ca6eea-8921-4c1e-8c52-c1873e15898d', 'uuid': '44aa08c2-85e5-4d70-878d-7723d96484d1', 'network_id': None, 'created_at': datetime.datetime(2016, 7, 7, 20, 19, 24, 586359), 'updated_at': None, 'deleted': 0, 'tag': None, 'address': u'fa:16:3e:45:4c:1a/44aa08c2-85e5-4d70-878d-7723d96484d1', 'deleted_at': None}]", 
            "date_created": "2016-07-12 17:15:30.094369+00:00", 
            "author": "https://api.launchpad.net/1.0/~johnsom"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/341102", 
            "date_created": "2016-07-12 17:21:28.288325+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "We should also have a Tempest test added for this, I'll work on that also.", 
            "date_created": "2016-07-12 21:02:11.441034+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Tempest test started for this here: https://review.openstack.org/#/c/341191/", 
            "date_created": "2016-07-12 21:13:32.795189+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Related fix proposed to branch: master\nReview: https://review.openstack.org/341197", 
            "date_created": "2016-07-12 21:38:20.093021+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/341197\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=ae9c58792c7a34f129794fa3f1928199bb859b70\nSubmitter: Jenkins\nBranch:    master\n\ncommit ae9c58792c7a34f129794fa3f1928199bb859b70\nAuthor: Dan Smith <email address hidden>\nDate:   Tue Jul 12 14:39:30 2016 -0700\n\n    Add VirtualInterface.destroy()\n    \n    This adds a destroy() method for VirtualInterface which has not been\n    required before but is now.\n    \n    Change-Id: Ie00f52153a816049f8efcc9aa8071371ce0b7e5a\n    Related-Bug: #1602357\n", 
            "date_created": "2016-07-13 16:00:59.312415+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/341102\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=92a388a1e34559b2ce69d31fdef996ff029495a6\nSubmitter: Jenkins\nBranch:    master\n\ncommit 92a388a1e34559b2ce69d31fdef996ff029495a6\nAuthor: Matt Riedemann <email address hidden>\nDate:   Tue Jul 12 13:17:34 2016 -0400\n\n    neutron: delete VIFs when deallocating networking\n    \n    In e2eb6659a426bae05a54b93ebf31ff3247125258 we started creating\n    VirtualInterface objects for instances/ports when allocating\n    networking in the neutronv2 API code. This is used to support\n    virtual device tagging.\n    \n    We need to delete the VIFs when deallocating the networking for\n    the instance though otherwise we can hit unique constraint failures\n    when trying to re-use an existing port from one instance to another\n    since the VIF has a unique constraint on the address which is the\n    port's MAC and uuid when using neutron.\n    \n    Change-Id: I2254bad0df3ccc00cd5c9438fa2684e705442e2d\n    Closes-Bug: #1602357\n", 
            "date_created": "2016-07-14 03:32:26.343882+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/nova 14.0.0.0b2 development milestone.", 
            "date_created": "2016-07-14 13:00:16.801971+00:00", 
            "author": "https://api.launchpad.net/1.0/~doug-hellmann"
        }, 
        {
            "content": "We still have a potential bug here. We create the vif object here:\n\nhttps://github.com/openstack/nova/blob/92a388a1e34559b2ce69d31fdef996ff029495a6/nova/network/neutronv2/api.py#L838\n\nbut if updating the port's dns name fails, we aren't deleting the vif objects here:\n\nhttps://github.com/openstack/nova/blob/92a388a1e34559b2ce69d31fdef996ff029495a6/nova/network/neutronv2/api.py#L847\n\nBefore re-raising the exception, or really if any port update fails in that loop because we could do something like:\n\n1. create/update port1, create vif1, ok\n2. create/update port2, fails - we deallocate port1 and port2 but not vif1", 
            "date_created": "2016-07-14 19:30:25.522778+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }
    ], 
    "closed": "2016-07-14 03:32:23.632664+00:00"
}