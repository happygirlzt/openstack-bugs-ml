{
    "status": "Expired", 
    "last_updated": "2017-10-07 04:17:37.021567+00:00", 
    "description": "I had following settings when I want to enable inject feature in nova.\n[libvirt]\ninject_partition = -1\ninject_key = True\n\nBut nova-compute service will raise following exception\n2015-10-20 07:12:57.318 ERROR nova.virt.libvirt.driver [req-777e2fe1-a4f0-4c16-bb71-ee34e59aa2ba admin admin] [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb] Error injecting data into image 865c98b5-ffd7-4f32-b1af-07b273fcc07d (libguestfs installed but not usable (/usr/bin/supermin-helper exited with error status 1.\nTo see full error messages you may need to enable debugging.\nSee http://libguestfs.org/guestfs-faq.1.html#debugging-libguestfs))\n2015-10-20 07:12:57.319 ERROR nova.compute.manager [req-777e2fe1-a4f0-4c16-bb71-ee34e59aa2ba admin admin] [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb] Instance failed to spawn\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb] Traceback (most recent call last):\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb]   File \"/opt/stack/nova/nova/compute/manager.py\", line 2172, in _build_resources\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb]     yield resources\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb]   File \"/opt/stack/nova/nova/compute/manager.py\", line 2019, in _build_and_run_instance\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb]     block_device_info=block_device_info)\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb]   File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 2437, in spawn\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb]     admin_pass=admin_password)\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb]   File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 2969, in _create_image\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb]     instance, network_info, admin_pass, files, suffix)\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb]   File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 2778, in _inject_data\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb]     instance=instance)\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb]   File \"/usr/local/lib/python2.7/dist-packages/oslo_utils/excutils.py\", line 195, in __exit__\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb]     six.reraise(self.type_, self.value, self.tb)\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb]   File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 2772, in _inject_data\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb]     mandatory=('files',))\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb]   File \"/opt/stack/nova/nova/virt/disk/api.py\", line 414, in inject_data\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb]     fs = vfs.VFS.instance_for_image(image, partition)\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb]   File \"/opt/stack/nova/nova/virt/disk/vfs/api.py\", line 62, in instance_for_image\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb]     vfs.inspect_capabilities()\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb]   File \"/opt/stack/nova/nova/virt/disk/vfs/guestfs.py\", line 89, in inspect_capabilities\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb]     _(\"libguestfs installed but not usable (%s)\") % e)\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb] NovaException: libguestfs installed but not usable (/usr/bin/supermin-helper exited with error status 1.\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb] To see full error messages you may need to enable debugging.\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb] See http://libguestfs.org/guestfs-faq.1.html#debugging-libguestfs)\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb] \n2015-10-20 07:12:57.322 INFO nova.compute.manager [req-777e2fe1-a4f0-4c16-bb71-ee34e59aa2ba admin admin] [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb] Terminating instance\n\nWhy guestfs will inspect capabilities fail?\nBecause of host's kernel only allow root user had read/write permission.\nIf compute-service didn't had read permission then it will launch image fail.\nIn libguestfs offical FAQ site had point out this issue, following is the link\nhttp://libguestfs.org/guestfs-faq.1.html#binaries\nIt had suggested users to change host's kernel permission.\n\nYou can also check result by guestfish command:\n> export LIBGUESTFS_DEBUG=1\n> export LIBGUESTFS_TRACE=1\n> guestfish -a /dev/null\n<fs> launch\n...\n...\n/usr/bin/supermin-helper: open: /boot/vmlinuz-3.13.0-55-generic: Permission denied\nlibguestfs: error: /usr/bin/supermin-helper exited with error status 1, see debug messages above\n...\n...\n\nWe can have three way to resolve this problem.\n1. Open service in root permission\n2. Change kernel's permission in compute-service\n3. Check whether service had permission to read kernel. Suggest users to modify permission instead directly modify permission. Then users need to manually change kernel's permission.\n\nWe shouldn't open service in root permission, therefore first way shouldn't been accepted.\nIt will probably have security issue if service can directly change file's permission.\nAt last, I prefer third way.\nBecause of this issue will only happen in ubuntu os and previous reasons.\n\nlibguestfs-tools                 1:1.24.5-1", 
    "tags": [
        "in-stable-newton", 
        "in-stable-ocata"
    ], 
    "importance": "Undecided", 
    "heat": 12, 
    "link": "https://bugs.launchpad.net/nova/+bug/1507915", 
    "owner": "None", 
    "id": 1507915, 
    "index": 7081, 
    "openned": "2015-10-20 07:57:42.739029+00:00", 
    "created": "2015-10-20 07:57:42.739029+00:00", 
    "title": "libguestfs launch image failed in ubuntu", 
    "comments": [
        {
            "content": "I had following settings when I want to enable inject feature in nova.\n[libvirt]\ninject_partition = -1\ninject_key = True\n\nBut nova-compute service will raise following exception\n2015-10-20 07:12:57.318 ERROR nova.virt.libvirt.driver [req-777e2fe1-a4f0-4c16-bb71-ee34e59aa2ba admin admin] [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb] Error injecting data into image 865c98b5-ffd7-4f32-b1af-07b273fcc07d (libguestfs installed but not usable (/usr/bin/supermin-helper exited with error status 1.\nTo see full error messages you may need to enable debugging.\nSee http://libguestfs.org/guestfs-faq.1.html#debugging-libguestfs))\n2015-10-20 07:12:57.319 ERROR nova.compute.manager [req-777e2fe1-a4f0-4c16-bb71-ee34e59aa2ba admin admin] [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb] Instance failed to spawn\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb] Traceback (most recent call last):\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb]   File \"/opt/stack/nova/nova/compute/manager.py\", line 2172, in _build_resources\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb]     yield resources\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb]   File \"/opt/stack/nova/nova/compute/manager.py\", line 2019, in _build_and_run_instance\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb]     block_device_info=block_device_info)\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb]   File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 2437, in spawn\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb]     admin_pass=admin_password)\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb]   File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 2969, in _create_image\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb]     instance, network_info, admin_pass, files, suffix)\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb]   File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 2778, in _inject_data\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb]     instance=instance)\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb]   File \"/usr/local/lib/python2.7/dist-packages/oslo_utils/excutils.py\", line 195, in __exit__\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb]     six.reraise(self.type_, self.value, self.tb)\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb]   File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 2772, in _inject_data\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb]     mandatory=('files',))\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb]   File \"/opt/stack/nova/nova/virt/disk/api.py\", line 414, in inject_data\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb]     fs = vfs.VFS.instance_for_image(image, partition)\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb]   File \"/opt/stack/nova/nova/virt/disk/vfs/api.py\", line 62, in instance_for_image\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb]     vfs.inspect_capabilities()\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb]   File \"/opt/stack/nova/nova/virt/disk/vfs/guestfs.py\", line 89, in inspect_capabilities\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb]     _(\"libguestfs installed but not usable (%s)\") % e)\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb] NovaException: libguestfs installed but not usable (/usr/bin/supermin-helper exited with error status 1.\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb] To see full error messages you may need to enable debugging.\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb] See http://libguestfs.org/guestfs-faq.1.html#debugging-libguestfs)\n2015-10-20 07:12:57.319 TRACE nova.compute.manager [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb] \n2015-10-20 07:12:57.322 INFO nova.compute.manager [req-777e2fe1-a4f0-4c16-bb71-ee34e59aa2ba admin admin] [instance: b2d39549-96d5-42c6-bdab-a0cee10b24bb] Terminating instance\n\nWhy guestfs will inspect capabilities fail?\nBecause of host's kernel only allow root user had read/write permission.\nIf compute-service didn't had read permission then it will launch image fail.\nIn libguestfs offical FAQ site had point out this issue, following is the link\nhttp://libguestfs.org/guestfs-faq.1.html#binaries\nIt had suggested users to change host's kernel permission.\n\nYou can also check result by guestfish command:\n> export LIBGUESTFS_DEBUG=1\n> export LIBGUESTFS_TRACE=1\n> guestfish -a /dev/null\n<fs> launch\n...\n...\n/usr/bin/supermin-helper: open: /boot/vmlinuz-3.13.0-55-generic: Permission denied\nlibguestfs: error: /usr/bin/supermin-helper exited with error status 1, see debug messages above\n...\n...\n\nWe can have three way to resolve this problem.\n1. Open service in root permission\n2. Change kernel's permission in compute-service\n3. Check whether service had permission to read kernel. Suggest users to modify permission instead directly modify permission. Then users need to manually change kernel's permission.\n\nWe shouldn't open service in root permission, therefore first way shouldn't been accepted.\nIt will probably have security issue if service can directly change file's permission.\nAt last, I prefer third way.\nBecause of this issue will only happen in ubuntu os and previous reasons.\n\nlibguestfs-tools                 1:1.24.5-1", 
            "date_created": "2015-10-20 07:57:42.739029+00:00", 
            "author": "https://api.launchpad.net/1.0/~lyanchih"
        }, 
        {
            "content": "@lyanchih: \n\nI tend to believe that this is a duplicate to bug 1413142 so I close this bug as duplicate so that the effort to solve this issue is solely focues on bug 1413142.", 
            "date_created": "2015-10-20 09:17:20.242389+00:00", 
            "author": "https://api.launchpad.net/1.0/~mzoeller"
        }, 
        {
            "content": "Ubuntu has broken kernel permissions.  See https://bugs.launchpad.net/ubuntu/+source/linux/+bug/759725", 
            "date_created": "2015-10-21 11:34:28.533384+00:00", 
            "author": "https://api.launchpad.net/1.0/~rjones-redhat"
        }, 
        {
            "content": "I think the duplicate status is wrong. @markus_z / @mzoeller: I think bug 1413142 is about Nova _failing to report_ when libguestfs could not read the kernel (which may have been fixed). This bug is about the broader problem: the Nova features which rely on libguestfs do not work out of the box when Nova is installed on the most widely used distro(?) for OpenStack.\n\nOne thing that fails is having libvirt inspect which partition an SSH key or admin password should be injected into (\"inject_partition = -1\" in the \"libvirt\" section of nova.conf).\n\nIt sounds like the Ubuntu maintainers are unlikely to change their default file permissions on compressed kernels, so is it possible for Nova to compensate for this, perhaps by modifying the rootwrap so that guestfs or /usr/bin/supermin is run with root privileges? Would that be reasonable?\n\nOtherwise, it seems that everyone who deploys Nova (including projects like OpenStack-Ansible and Fuel) will continue to trip over this. Maybe we'll implement workarounds (like modifying Nova's rootwrap ourselves or just making the kernel readable to unprivileged users), but it'd be really nice to fix this in Nova.", 
            "date_created": "2017-03-18 02:45:49.856113+00:00", 
            "author": "https://api.launchpad.net/1.0/~6-chris-z"
        }, 
        {
            "content": "After digging deeper I'm now unsure if rootwrap is a practical solution. Apparently \"nova.utils.execute(run_as_root=True)\" is used to request a command to be passed through rootwrap -- but the code running the commands (python-guestfs) is actually a system-level Python package which imports a C library. Nova just imports the guestfs Python package and uses its API. It doesn't appear that Nova has the opportunity to execute anything using rootwrap -- the guestfs code itself would need to be modified.\n\nIn OpenStack-Ansible I have proposed the workaround of just modifying file permissions on the kernel:\nhttps://review.openstack.org/#/c/451971/\n\nThis all works once the kernel is made readable to the nova user.", 
            "date_created": "2017-03-30 20:39:20.743846+00:00", 
            "author": "https://api.launchpad.net/1.0/~6-chris-z"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/451971\nCommitted: https://git.openstack.org/cgit/openstack/openstack-ansible-os_nova/commit/?id=2bd15db0364f225b5af39e2b98e1c12cb75e52d4\nSubmitter: Jenkins\nBranch:    master\n\ncommit 2bd15db0364f225b5af39e2b98e1c12cb75e52d4\nAuthor: cmart <email address hidden>\nDate:   Thu Mar 30 11:00:55 2017 -0700\n\n    nova user can read kernel for libguestfs on Ubuntu\n    \n    Problem: libvirt password/key injection uses libguestfs to mount the\n    guest filesystem. libguestfs uses a supermin appliance, and in order to\n    create this appliance, libguestfs (running as nova user) must read the\n    host's kernel. Unfortunately, Ubuntu sets file permissions which make\n    compressed kernels non-readable to non-root users, and this breaks\n    libvirt password/key injection on compute hosts running Ubuntu.\n    \n    Solution: When compute hosts are running Ubuntu AND the deployer has\n    enabled libvirt password or SSH key injection, do the following:\n    - Run `dpkg-statoverride` to set file permissions on compressed\n      kernel (/boot/vmlinuz-*), readable to group 'nova'\n    - Install a script which does same for each new kernel installed via\n      system updates in the future\n    \n    Related-Bug: #1507915\n    Change-Id: Ic96b69bb80ce11001b2ee5d63324a12b0f68456d\n", 
            "date_created": "2017-04-04 17:03:38.777148+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Related fix proposed to branch: stable/ocata\nReview: https://review.openstack.org/454269", 
            "date_created": "2017-04-06 17:47:00.994072+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Related fix proposed to branch: stable/newton\nReview: https://review.openstack.org/454270", 
            "date_created": "2017-04-06 17:48:53.590556+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/454269\nCommitted: https://git.openstack.org/cgit/openstack/openstack-ansible-os_nova/commit/?id=b715834259ea435839ac6f72cdf92b732e928726\nSubmitter: Jenkins\nBranch:    stable/ocata\n\ncommit b715834259ea435839ac6f72cdf92b732e928726\nAuthor: cmart <email address hidden>\nDate:   Thu Mar 30 11:00:55 2017 -0700\n\n    nova user can read kernel for libguestfs on Ubuntu\n    \n    Problem: libvirt password/key injection uses libguestfs to mount the\n    guest filesystem. libguestfs uses a supermin appliance, and in order to\n    create this appliance, libguestfs (running as nova user) must read the\n    host's kernel. Unfortunately, Ubuntu sets file permissions which make\n    compressed kernels non-readable to non-root users, and this breaks\n    libvirt password/key injection on compute hosts running Ubuntu.\n    \n    Solution: When compute hosts are running Ubuntu AND the deployer has\n    enabled libvirt password or SSH key injection, do the following:\n    - Run `dpkg-statoverride` to set file permissions on compressed\n      kernel (/boot/vmlinuz-*), readable to group 'nova'\n    - Install a script which does same for each new kernel installed via\n      system updates in the future\n    \n    Related-Bug: #1507915\n    Change-Id: Ic96b69bb80ce11001b2ee5d63324a12b0f68456d\n    (cherry picked from commit 2bd15db0364f225b5af39e2b98e1c12cb75e52d4)\n", 
            "date_created": "2017-04-07 16:43:22.256352+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/454270\nCommitted: https://git.openstack.org/cgit/openstack/openstack-ansible-os_nova/commit/?id=c15d491020d857dfb8d8cf819e59a2effa42b2a5\nSubmitter: Jenkins\nBranch:    stable/newton\n\ncommit c15d491020d857dfb8d8cf819e59a2effa42b2a5\nAuthor: cmart <email address hidden>\nDate:   Thu Mar 30 11:00:55 2017 -0700\n\n    nova user can read kernel for libguestfs on Ubuntu\n    \n    Problem: libvirt password/key injection uses libguestfs to mount the\n    guest filesystem. libguestfs uses a supermin appliance, and in order to\n    create this appliance, libguestfs (running as nova user) must read the\n    host's kernel. Unfortunately, Ubuntu sets file permissions which make\n    compressed kernels non-readable to non-root users, and this breaks\n    libvirt password/key injection on compute hosts running Ubuntu.\n    \n    Solution: When compute hosts are running Ubuntu AND the deployer has\n    enabled libvirt password or SSH key injection, do the following:\n    - Run `dpkg-statoverride` to set file permissions on compressed\n      kernel (/boot/vmlinuz-*), readable to group 'nova'\n    - Install a script which does same for each new kernel installed via\n      system updates in the future\n    \n    Related-Bug: #1507915\n    Change-Id: Ic96b69bb80ce11001b2ee5d63324a12b0f68456d\n    (cherry picked from commit 2bd15db0364f225b5af39e2b98e1c12cb75e52d4)\n", 
            "date_created": "2017-04-10 19:52:22.952755+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "I think this is basically an upstream Ubuntu bug, and nova force doing this is probably bad form. It's fine for installers to change ubuntu defaults to work around it.", 
            "date_created": "2017-06-28 15:07:55.580174+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "[Expired for openstack-ansible because there has been no activity for 60 days.]", 
            "date_created": "2017-10-07 04:17:31.246128+00:00", 
            "author": "https://api.launchpad.net/1.0/~janitor"
        }, 
        {
            "content": "[Expired for OpenStack Compute (nova) because there has been no activity for 60 days.]", 
            "date_created": "2017-10-07 04:17:34.638903+00:00", 
            "author": "https://api.launchpad.net/1.0/~janitor"
        }
    ], 
    "closed": "2017-10-07 04:17:35.143120+00:00"
}