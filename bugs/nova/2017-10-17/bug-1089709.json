{
    "status": "Invalid", 
    "last_updated": "2013-03-19 00:12:27.282316+00:00", 
    "description": "nova-network specific: [unknown if effects quantum] \nFolsom: [looks to effect Grizzly as well]\n\nWhen creating floating IP pools, an interface is able to be specified. However, when associating the floating IP to an instance it doesn't get assigned to the correct interface. Due to the logic in the code, nova will decide to associate the floating IP the interface that is set as the FLAG public_interface over the interface that is specified when the pool is created.\n\nIt would make more sense to switch the order of operations from \"FLAG or database setting\" to \"database setting or FLAG\" considering the database setting is more specific.", 
    "tags": [
        "floatingip", 
        "folsom"
    ], 
    "importance": "Undecided", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1089709", 
    "owner": "None", 
    "id": 1089709, 
    "index": 4531, 
    "openned": "2012-12-13 00:23:52.918010+00:00", 
    "created": "2012-12-13 00:23:52.918010+00:00", 
    "title": "floating ip association doesn't correctly assigned to interface specified", 
    "comments": [
        {
            "content": "nova-network specific: [unknown if effects quantum] \nFolsom: [looks to effect Grizzly as well]\n\nWhen creating floating IP pools, an interface is able to be specified. However, when associating the floating IP to an instance it doesn't get assigned to the correct interface. Due to the logic in the code, nova will decide to associate the floating IP the interface that is set as the FLAG public_interface over the interface that is specified when the pool is created.\n\nIt would make more sense to switch the order of operations from \"FLAG or database setting\" to \"database setting or FLAG\" considering the database setting is more specific.", 
            "date_created": "2012-12-13 00:23:52.918010+00:00", 
            "author": "https://api.launchpad.net/1.0/~ryan-richard"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/17993", 
            "date_created": "2012-12-13 00:29:48.241019+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Folsom Fix:\n\ninterface = floating_ip['interface'] or FLAGS.public_interface", 
            "date_created": "2012-12-13 00:31:39.464788+00:00", 
            "author": "https://api.launchpad.net/1.0/~ryan-richard"
        }, 
        {
            "content": "Looking to get discussion on this to see if my request makes sense.\r\n\r\nThe fix I propose seems fix the IP association but still breaks floating IPs since the public interface is still used for outbound connectivity.\r\n\r\nThoughts?", 
            "date_created": "2012-12-13 20:52:34.466074+00:00", 
            "author": "https://api.launchpad.net/1.0/~ryan-richard"
        }, 
        {
            "content": "The code is correct. The flag is used as an override so that one can have heterogeneous nodes where the public_interface is different across nodes.  For example:\n\nNode 1:\n  public_interface=eth0\n\nNode 2:\n  public_interface=eth1\n\nIf you want to use the interface from the database do not set public_interface. That is why it defaults to None.", 
            "date_created": "2013-03-01 01:51:29.153748+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "It doesn't make sense to me that I would have to disable a flag to get something more specific to work. If I pass an interface to the floating pool,  I expect that to take effect regardless of what I have set in public_interface. It's also confusing that I can specify an interface, the database will show that interface but when I assign the floating IP it doesn't apply it to the interface I want.\n\nRemoving the public_interface flag causes the default iptables SNAT rules to watch eth0 which for some installations will be an issue. Specifically, let's say eth0 is my management newtork and eth1 is my default gateway and fixed network interface,  I have to have the public_interface flag set to eth1 for instances to be able to reach external networks.\n\nThe reason why this hasn't really come up before is that traffic flow and routing will be an issue if you want floating IP traffic to go out a different interface than the default gatway. Very few deployments would ever need to design something different but it does come up. This would be more common for the VLAN manager where you may want to have a floating pool for each vlan.\n\nThis may not be a huge problem since Quantum is here but it's come up for a few deployments.", 
            "date_created": "2013-03-14 21:03:33.344725+00:00", 
            "author": "https://api.launchpad.net/1.0/~ryan-richard"
        }, 
        {
            "content": "I understand that it is confusing, but the current implementation is necessary to support heterogeneous nodes as I stated above. I agree that It would be less confusing if the public_interface were set to None by default. In fact, I thought this was already the case, but I see that it isn't. Unfortunately it is probably to late in the cycle to change default values so it will just have to be noted that you need to explicitly set public_interface= to use multiple floating pools.", 
            "date_created": "2013-03-19 00:12:26.557956+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }
    ], 
    "closed": "2013-03-01 01:51:35.523018+00:00"
}