{
    "status": "Fix Released", 
    "last_updated": "2014-10-16 08:47:00.244942+00:00", 
    "description": "We've found that while with Icehouse we were able to specify extra_specs values as ints or floats, in Juno the command fails unless we make these values strings by quoting them. This breaks backward compatibility.\n\ncompare Icehouse:\n\ncurl -k -i -X POST http://127.0.0.1:8774/v2/982607a6a1134514abac252fc25384ad/flavors/1/os-extra_specs -H \"X-Auth-Token: *****\" -H \"Accept: application/json\" -H \"Content-Type: application/json\" -d '{\"extra_specs\":{\"powervm:proc_units\":\"0.2\",\"powervm:processor_compatibility\":\"default\",\"powervm:min_proc_units\":\"0.1\",\"powervm:max_proc_units\":\"0.5\",\"powervm:min_vcpu\":1,\"powervm:max_vcpu\":5,\"powervm:min_mem\":1024,\"powervm:max_mem\":4096,\"powervm:availability_priority\":127,\"powervm:dedicated_proc\":\"false\",\"powervm:uncapped\":\"true\",\"powervm:shared_weight\":128}}'; echo\nHTTP/1.1 200 OK\nContent-Type: application/json\nContent-Length: 385\nX-Compute-Request-Id: req-9132922d-c703-4573-9822-9ca7a6bf7b0d\nDate: Thu, 14 Aug 2014 18:25:02 GMT\n\n{\"extra_specs\": {\"powervm:processor_compatibility\": \"default\", \"powervm:max_proc_units\": \"0.5\", \"powervm:shared_weight\": 128, \"powervm:min_mem\": 1024, \"powervm:max_mem\": 4096, \"powervm:uncapped\": \"true\", \"powervm:proc_units\": \"0.2\", \"powervm:dedicated_proc\": \"false\", \"powervm:max_vcpu\": 5, \"powervm:availability_priority\": 127, \"powervm:min_proc_units\": \"0.1\", \"powervm:min_vcpu\": 1}}\n\n\nto Juno:\n\ncurl -k -i -X POST http://127.0.0.1:8774/v2/be2ffade1e0b4bed83619e00482317d1/flavors/1/os-extra_specs -H \"X-Auth-Token: *****\" -H \"Accept: application/json\" -H \"Content-Type: application/json\" -d '{\"extra_specs\":{\"powervm:proc_units\":\"0.2\",\"powervm:processor_compatibility\":\"default\",\"powervm:min_proc_units\":\"0.1\",\"powervm:max_proc_units\":\"0.5\",\"powervm:min_vcpu\":1,\"powervm:max_vcpu\":5,\"powervm:min_mem\":1024,\"powervm:max_mem\":4096,\"powervm:availability_priority\":127,\"powervm:dedicated_proc\":\"false\",\"powervm:uncapped\":\"true\",\"powervm:shared_weight\":128}}'; echo\nHTTP/1.1 400 Bad Request\nContent-Length: 88\nContent-Type: application/json; charset=UTF-8\nDate: Thu, 14 Aug 2014 18:25:46 GMT\n\n{\"badRequest\": {\"message\": \"extra_specs value is not a string or unicode\", \"code\": 400}}\n\n\nif I modify the data sent so that everything is a string, it will work for Juno:\n\ncurl -k -i -X POST http://127.0.0.1:8774/v2/be2ffade1e0b4bed83619e00482317d1/flavors/1/os-extra_specs -H \"X-Auth-Token: *****\" -H \"Accept: application/json\" -H \"Content-Type: application/json\" -d '{\"extra_specs\":{\"powervm:proc_units\":\"0.2\",\"powervm:processor_compatibility\":\"default\",\"powervm:min_proc_units\":\"0.1\",\"powervm:max_proc_units\":\"0.5\",\"powervm:min_vcpu\":\"1\",\"powervm:max_vcpu\":\"5\",\"powervm:min_mem\":\"1024\",\"powervm:max_mem\":\"4096\",\"powervm:availability_priority\":\"127\",\"powervm:dedicated_proc\":\"false\",\"powervm:uncapped\":\"true\",\"powervm:shared_weight\":\"128\"}}'; echo\nHTTP/1.1 200 OK\nContent-Type: application/json\nContent-Length: 397\nDate: Thu, 14 Aug 2014 18:26:27 GMT\n\n{\"extra_specs\": {\"powervm:processor_compatibility\": \"default\", \"powervm:max_proc_units\": \"0.5\", \"powervm:shared_weight\": \"128\", \"powervm:min_mem\": \"1024\", \"powervm:max_mem\": \"4096\", \"powervm:uncapped\": \"true\", \"powervm:proc_units\": \"0.2\", \"powervm:dedicated_proc\": \"false\", \"powervm:max_vcpu\": \"5\", \"powervm:availability_priority\": \"127\", \"powervm:min_proc_units\": \"0.1\", \"powervm:min_vcpu\": \"1\"}}\n\n\nThe API change guidelines (https://wiki.openstack.org/wiki/APIChangeGuidelines) describe as \"generally not acceptable\": \"A change such that a request which was successful before now results in an error response (unless the success reported previously was hiding an existing error condition)\". That is exactly what this is.", 
    "tags": [
        "api"
    ], 
    "importance": "High", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1358818", 
    "owner": "https://api.launchpad.net/1.0/~dims-v", 
    "id": 1358818, 
    "index": 1573, 
    "openned": "2014-08-19 16:07:44.023296+00:00", 
    "created": "2014-08-19 16:07:44.023296+00:00", 
    "title": "extra_specs string check breaks backward compatibility", 
    "comments": [
        {
            "content": "We've found that while with Icehouse we were able to specify extra_specs values as ints or floats, in Juno the command fails unless we make these values strings by quoting them. This breaks backward compatibility.\n\ncompare Icehouse:\n\ncurl -k -i -X POST http://127.0.0.1:8774/v2/982607a6a1134514abac252fc25384ad/flavors/1/os-extra_specs -H \"X-Auth-Token: *****\" -H \"Accept: application/json\" -H \"Content-Type: application/json\" -d '{\"extra_specs\":{\"powervm:proc_units\":\"0.2\",\"powervm:processor_compatibility\":\"default\",\"powervm:min_proc_units\":\"0.1\",\"powervm:max_proc_units\":\"0.5\",\"powervm:min_vcpu\":1,\"powervm:max_vcpu\":5,\"powervm:min_mem\":1024,\"powervm:max_mem\":4096,\"powervm:availability_priority\":127,\"powervm:dedicated_proc\":\"false\",\"powervm:uncapped\":\"true\",\"powervm:shared_weight\":128}}'; echo\nHTTP/1.1 200 OK\nContent-Type: application/json\nContent-Length: 385\nX-Compute-Request-Id: req-9132922d-c703-4573-9822-9ca7a6bf7b0d\nDate: Thu, 14 Aug 2014 18:25:02 GMT\n\n{\"extra_specs\": {\"powervm:processor_compatibility\": \"default\", \"powervm:max_proc_units\": \"0.5\", \"powervm:shared_weight\": 128, \"powervm:min_mem\": 1024, \"powervm:max_mem\": 4096, \"powervm:uncapped\": \"true\", \"powervm:proc_units\": \"0.2\", \"powervm:dedicated_proc\": \"false\", \"powervm:max_vcpu\": 5, \"powervm:availability_priority\": 127, \"powervm:min_proc_units\": \"0.1\", \"powervm:min_vcpu\": 1}}\n\n\nto Juno:\n\ncurl -k -i -X POST http://127.0.0.1:8774/v2/be2ffade1e0b4bed83619e00482317d1/flavors/1/os-extra_specs -H \"X-Auth-Token: *****\" -H \"Accept: application/json\" -H \"Content-Type: application/json\" -d '{\"extra_specs\":{\"powervm:proc_units\":\"0.2\",\"powervm:processor_compatibility\":\"default\",\"powervm:min_proc_units\":\"0.1\",\"powervm:max_proc_units\":\"0.5\",\"powervm:min_vcpu\":1,\"powervm:max_vcpu\":5,\"powervm:min_mem\":1024,\"powervm:max_mem\":4096,\"powervm:availability_priority\":127,\"powervm:dedicated_proc\":\"false\",\"powervm:uncapped\":\"true\",\"powervm:shared_weight\":128}}'; echo\nHTTP/1.1 400 Bad Request\nContent-Length: 88\nContent-Type: application/json; charset=UTF-8\nDate: Thu, 14 Aug 2014 18:25:46 GMT\n\n{\"badRequest\": {\"message\": \"extra_specs value is not a string or unicode\", \"code\": 400}}\n\n\nif I modify the data sent so that everything is a string, it will work for Juno:\n\ncurl -k -i -X POST http://127.0.0.1:8774/v2/be2ffade1e0b4bed83619e00482317d1/flavors/1/os-extra_specs -H \"X-Auth-Token: *****\" -H \"Accept: application/json\" -H \"Content-Type: application/json\" -d '{\"extra_specs\":{\"powervm:proc_units\":\"0.2\",\"powervm:processor_compatibility\":\"default\",\"powervm:min_proc_units\":\"0.1\",\"powervm:max_proc_units\":\"0.5\",\"powervm:min_vcpu\":\"1\",\"powervm:max_vcpu\":\"5\",\"powervm:min_mem\":\"1024\",\"powervm:max_mem\":\"4096\",\"powervm:availability_priority\":\"127\",\"powervm:dedicated_proc\":\"false\",\"powervm:uncapped\":\"true\",\"powervm:shared_weight\":\"128\"}}'; echo\nHTTP/1.1 200 OK\nContent-Type: application/json\nContent-Length: 397\nDate: Thu, 14 Aug 2014 18:26:27 GMT\n\n{\"extra_specs\": {\"powervm:processor_compatibility\": \"default\", \"powervm:max_proc_units\": \"0.5\", \"powervm:shared_weight\": \"128\", \"powervm:min_mem\": \"1024\", \"powervm:max_mem\": \"4096\", \"powervm:uncapped\": \"true\", \"powervm:proc_units\": \"0.2\", \"powervm:dedicated_proc\": \"false\", \"powervm:max_vcpu\": \"5\", \"powervm:availability_priority\": \"127\", \"powervm:min_proc_units\": \"0.1\", \"powervm:min_vcpu\": \"1\"}}\n\n\nThe API change guidelines (https://wiki.openstack.org/wiki/APIChangeGuidelines) describe as \"generally not acceptable\": \"A change such that a request which was successful before now results in an error response (unless the success reported previously was hiding an existing error condition)\". That is exactly what this is.", 
            "date_created": "2014-08-19 16:07:44.023296+00:00", 
            "author": "https://api.launchpad.net/1.0/~edmondsw"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/115660", 
            "date_created": "2014-08-20 14:31:21.205770+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/115660\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=e9a5463bf71cb2f2e7185dea3ed8ee8b973a3208\nSubmitter: Jenkins\nBranch:    master\n\ncommit e9a5463bf71cb2f2e7185dea3ed8ee8b973a3208\nAuthor: Davanum Srinivas <email address hidden>\nDate:   Wed Aug 20 10:27:56 2014 -0400\n\n    Restore backward compat for int/float in extra_specs\n    \n    In icehouse, we were able to store ints, floats in\n    extra_specs, with I195bd5d45a896e9b26dd81dab1e49c9f939b4805 we\n    forced the value(s) to be just strings. Let's loosen up\n    this restriction and still enforce a length check.\n    \n    Closes-Bug: #1358818\n    Change-Id: I7687d0214e44d4af1b595c6c6c7ce685d4083556\n", 
            "date_created": "2014-08-22 07:19:33.415949+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2014-09-05 09:49:51.195977+00:00"
}