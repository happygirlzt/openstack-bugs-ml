{
    "status": "Fix Released", 
    "last_updated": "2013-10-17 09:44:45.188232+00:00", 
    "description": "I set a simple bash script that boots a VM, waits a couple of minutes (doing nova list) then deletes the VM, waits a bit and continues.\n\nI ran this last night, and one of the VMs has not been deleted. Log is showing that the delete was seen and processed without error by the API node but in compute log there is timeout while deallocating network for an instance.\n\nERROR nova.openstack.common.rpc.common [-] Timed out waiting for RPC response: timed out\nTRACE nova.openstack.common.rpc.common Traceback (most recent call last):\nTRACE nova.openstack.common.rpc.common File \"/usr/lib/python2.7/dist-packages/nova/openstack/common/rpc/impl_kombu.py\", line 513, in ensure\nTRACE nova.openstack.common.rpc.common return method(*args, **kwargs)\nTRACE nova.openstack.common.rpc.common File \"/usr/lib/python2.7/dist-packages/nova/openstack/common/rpc/impl_kombu.py\", line 590, in _consume\nTRACE nova.openstack.common.rpc.common return self.connection.drain_events(timeout=timeout)\nTRACE nova.openstack.common.rpc.common File \"/usr/lib/python2.7/dist-packages/kombu/connection.py\", line 175, in drain_events\nTRACE nova.openstack.common.rpc.common return self.transport.drain_events(self.connection, **kwargs)\nTRACE nova.openstack.common.rpc.common File \"/usr/lib/python2.7/dist-packages/kombu/transport/pyamqplib.py\", line 238, in drain_events\nTRACE nova.openstack.common.rpc.common return connection.drain_events(**kwargs)\nTRACE nova.openstack.common.rpc.common File \"/usr/lib/python2.7/dist-packages/kombu/transport/pyamqplib.py\", line 57, in drain_events\nTRACE nova.openstack.common.rpc.common return self.wait_multi(self.channels.values(), timeout=timeout)\nTRACE nova.openstack.common.rpc.common File \"/usr/lib/python2.7/dist-packages/kombu/transport/pyamqplib.py\", line 63, in wait_multi\nTRACE nova.openstack.common.rpc.common chanmap.keys(), allowed_methods, timeout=timeout)\nTRACE nova.openstack.common.rpc.common File \"/usr/lib/python2.7/dist-packages/kombu/transport/pyamqplib.py\", line 120, in _wait_multiple\nTRACE nova.openstack.common.rpc.common channel, method_sig, args, content = read_timeout(timeout)\nTRACE nova.openstack.common.rpc.common File \"/usr/lib/python2.7/dist-packages/kombu/transport/pyamqplib.py\", line 94, in read_timeout\nTRACE nova.openstack.common.rpc.common return self.method_reader.read_method()\nTRACE nova.openstack.common.rpc.common File \"/usr/lib/python2.7/dist-packages/amqplib/client_0_8/method_framing.py\", line 221, in read_method\nTRACE nova.openstack.common.rpc.common raise m\nTRACE nova.openstack.common.rpc.common timeout: timed out\nTRACE nova.openstack.common.rpc.common\n\nWhen timeout exception is raised during network deallocation then instances stuck in Active(deleting)  but as nova list displays only vm_state, VM will get displayed as ACTIVE and there is no periodic task which cleans-up instances stuck in Active(deleting) on service restart..", 
    "tags": [], 
    "importance": "High", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1110221", 
    "owner": "https://api.launchpad.net/1.0/~russellb", 
    "id": 1110221, 
    "index": 947, 
    "openned": "2013-01-30 09:39:27.876060+00:00", 
    "created": "2013-01-30 09:39:27.876060+00:00", 
    "title": "Instance stuck in ACTIVE/deleting when network deallocation fails", 
    "comments": [
        {
            "content": "I set a simple bash script that boots a VM, waits a couple of minutes (doing nova list) then deletes the VM, waits a bit and continues.\n\nI ran this last night, and one of the VMs has not been deleted. Log is showing that the delete was seen and processed without error by the API node but in compute log there is timeout while deallocating network for an instance.\n\nERROR nova.openstack.common.rpc.common [-] Timed out waiting for RPC response: timed out\nTRACE nova.openstack.common.rpc.common Traceback (most recent call last):\nTRACE nova.openstack.common.rpc.common File \"/usr/lib/python2.7/dist-packages/nova/openstack/common/rpc/impl_kombu.py\", line 513, in ensure\nTRACE nova.openstack.common.rpc.common return method(*args, **kwargs)\nTRACE nova.openstack.common.rpc.common File \"/usr/lib/python2.7/dist-packages/nova/openstack/common/rpc/impl_kombu.py\", line 590, in _consume\nTRACE nova.openstack.common.rpc.common return self.connection.drain_events(timeout=timeout)\nTRACE nova.openstack.common.rpc.common File \"/usr/lib/python2.7/dist-packages/kombu/connection.py\", line 175, in drain_events\nTRACE nova.openstack.common.rpc.common return self.transport.drain_events(self.connection, **kwargs)\nTRACE nova.openstack.common.rpc.common File \"/usr/lib/python2.7/dist-packages/kombu/transport/pyamqplib.py\", line 238, in drain_events\nTRACE nova.openstack.common.rpc.common return connection.drain_events(**kwargs)\nTRACE nova.openstack.common.rpc.common File \"/usr/lib/python2.7/dist-packages/kombu/transport/pyamqplib.py\", line 57, in drain_events\nTRACE nova.openstack.common.rpc.common return self.wait_multi(self.channels.values(), timeout=timeout)\nTRACE nova.openstack.common.rpc.common File \"/usr/lib/python2.7/dist-packages/kombu/transport/pyamqplib.py\", line 63, in wait_multi\nTRACE nova.openstack.common.rpc.common chanmap.keys(), allowed_methods, timeout=timeout)\nTRACE nova.openstack.common.rpc.common File \"/usr/lib/python2.7/dist-packages/kombu/transport/pyamqplib.py\", line 120, in _wait_multiple\nTRACE nova.openstack.common.rpc.common channel, method_sig, args, content = read_timeout(timeout)\nTRACE nova.openstack.common.rpc.common File \"/usr/lib/python2.7/dist-packages/kombu/transport/pyamqplib.py\", line 94, in read_timeout\nTRACE nova.openstack.common.rpc.common return self.method_reader.read_method()\nTRACE nova.openstack.common.rpc.common File \"/usr/lib/python2.7/dist-packages/amqplib/client_0_8/method_framing.py\", line 221, in read_method\nTRACE nova.openstack.common.rpc.common raise m\nTRACE nova.openstack.common.rpc.common timeout: timed out\nTRACE nova.openstack.common.rpc.common\n\nWhen timeout exception is raised during network deallocation then instances stuck in Active(deleting)  but as nova list displays only vm_state, VM will get displayed as ACTIVE and there is no periodic task which cleans-up instances stuck in Active(deleting) on service restart..", 
            "date_created": "2013-01-30 09:39:27.876060+00:00", 
            "author": "https://api.launchpad.net/1.0/~sirisha-devineni"
        }, 
        {
            "content": "Experienced the same thing and fixed it in the following way:\n\nUse virsh at the compute nodes to see if there are any VMs running which are not registered with OpenStack anymore:\nvirsh list --all\n\nDestoy them all:\nvirsh destroy <vm id>\nvirsh undefine <vm id>\n\nCheck in /var/lib/nova/instances and remove instance's folder\n\nP.S.\nTo get \"OpenStack instance - to KVM virtual machine\" binding, look for \"OS-EXT-SRV-ATTR:instance_name\" property in the database or using \"nova show <instance id>\"", 
            "date_created": "2013-02-13 15:23:15.442051+00:00", 
            "author": "https://api.launchpad.net/1.0/~juris-a"
        }, 
        {
            "content": "The instance should probably go to error if network deallocation failed. This should be verified against grizzly and folsom.", 
            "date_created": "2013-02-26 23:19:30.796546+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/23328", 
            "date_created": "2013-03-01 23:24:10.076701+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/23328\nCommitted: http://github.com/openstack/nova/commit/fbeb552175c9f9d6d444ac5cc0606a5dceb39ef7\nSubmitter: Jenkins\nBranch:    master\n\ncommit fbeb552175c9f9d6d444ac5cc0606a5dceb39ef7\nAuthor: Russell Bryant <email address hidden>\nDate:   Fri Mar 1 18:10:16 2013 -0500\n\n    Set vm_state to ERROR on net deallocate failure.\n    \n    If deallocate_network_for_instance from network.api fails while trying\n    to terminate an instance, set the vm_state to ERROR.  Previously it\n    still completely failed at this point, but the instance vm_state was\n    still ACTIVE but the task_state was stuck in deleting.  Now it will be\n    ERROR/deleting.\n    \n    Fix bug 1110221.\n    \n    Change-Id: I181a11c8de667fa462e1a2cb75b2c8ae41410273\n", 
            "date_created": "2013-03-03 00:23:39.743524+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Hi, \n\nSorry but the problem still exist on Openstack grizzly - I have instance in ERROR state and I am not able delete (even after resetting it's state with --active).", 
            "date_created": "2013-08-07 15:01:59.615102+00:00", 
            "author": "https://api.launchpad.net/1.0/~blagoycho"
        }, 
        {
            "content": "I have encountered the same problem.\nnova list command shows the instance in ERROR state while dashboard shows task as 'deleting'\n\nrunning virsh destroy <vm id> & virsh undefine <vm id> reports a message\n error: Domain not found: no domain with matching name <id>\n\nNot able to delete the VM.", 
            "date_created": "2013-10-17 09:44:44.321758+00:00", 
            "author": "https://api.launchpad.net/1.0/~sngirame"
        }
    ], 
    "closed": "2013-03-20 16:05:25.281689+00:00"
}