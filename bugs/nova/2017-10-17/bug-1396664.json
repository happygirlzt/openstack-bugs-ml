{
    "status": "Expired", 
    "last_updated": "2015-04-13 04:22:43.612558+00:00", 
    "description": "I tried to boot server from volume using API. The following 'block_device_mapping_v2' argument\n{\n\u00a0\u00a0\"boot_index\": \"0\",\n\u00a0\u00a0\"uuid\": image_obj,\n\u00a0\u00a0\"source_type\": \"image\",\n\u00a0\u00a0\"volume_size\": flavor_obj.disk,\n\u00a0\u00a0\"destination_type\": \"volume\",\n\u00a0\u00a0\"delete_on_termination\": False\n}\n\nNova raised InvalidBDMBootSequence exception. I checked  nova sources and found that _subsequent_list returns None,\nwhen I use boot index 0:\n\n\"\"\"\n\u00a0\u00a0\u00a0\u00a0def _validate_bdm(self, context, instance, instance_type, all_mappings):\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0def _subsequent_list(l):\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return all(el + 1 == l[i + 1] for i, el in enumerate(l[:-1]))\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0# Make sure that the boot indexes make sense\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0boot_indexes = sorted([bdm['boot_index']\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0for bdm in all_mappings\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if bdm.get('boot_index') is not None\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0and bdm.get('boot_index') >= 0])\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if 0 not in boot_indexes or not _subsequent_list(boot_indexes):\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0raise exception.InvalidBDMBootSequence()\n\"\"\"\n\nMaybe I don't know use case, but when I use boot_index 1, server boots, but two block devices attached instead of one: /dev/vda and /dev/vdb. Both point to the same device.\n\n\nP.S. I use OpenStack Juno and cinder with LVM.", 
    "tags": [
        "volumes"
    ], 
    "importance": "Undecided", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1396664", 
    "owner": "None", 
    "id": 1396664, 
    "index": 6561, 
    "openned": "2014-11-26 16:04:42.119916+00:00", 
    "created": "2014-11-26 16:04:42.119916+00:00", 
    "title": "nova raises InvalidBDMBootSequence when boot index 0", 
    "comments": [
        {
            "content": "I tried to boot server with using API. The following 'block_device_mapping_v2' argument\n{\n  \"boot_index\": \"0\",\n  \"uuid\": image_obj,\n  \"source_type\": \"image\",\n  \"volume_size\": flavor_obj.disk,\n  \"destination_type\": \"volume\",\n  \"delete_on_termination\": False\n}\n\nNova raised InvalidBDMBootSequence exception. I checked  nova sources and found that _subsequent_list returns None,\nwhen I use boot index 0:\n\n\"\"\"\n    def _validate_bdm(self, context, instance, instance_type, all_mappings):\n        def _subsequent_list(l):\n            return all(el + 1 == l[i + 1] for i, el in enumerate(l[:-1]))\n        \n        # Make sure that the boot indexes make sense\n        boot_indexes = sorted([bdm['boot_index']\n                               for bdm in all_mappings\n                               if bdm.get('boot_index') is not None\n                               and bdm.get('boot_index') >= 0])\n            \n        if 0 not in boot_indexes or not _subsequent_list(boot_indexes):\n            raise exception.InvalidBDMBootSequence()\n\"\"\"\n\nMaybe I don't know use case, but when I use boot_index 1, server boots, but two block devices attached instead of one: /dev/vda and /dev/vdb. Both point to the same device.", 
            "date_created": "2014-11-26 16:04:42.119916+00:00", 
            "author": "https://api.launchpad.net/1.0/~vb-d"
        }, 
        {
            "content": "Also when I try to boot from volume and attach volume at the same time:\n\n            block_device_mapping_v2 = [{\n                \"boot_index\": \"1\",\n                \"uuid\": image_found.id,\n                \"source_type\": \"image\",\n                \"volume_size\": flavor_found.disk,\n                \"destination_type\": \"volume\",\n                \"delete_on_termination\": False\n            },\n            {\n                    \"boot_index\": \"2\",\n                    \"uuid\": volume_found.id,\n                    \"source_type\": \"volume\",\n                    \"volume_size\": volume_found.size,\n                    \"destination_type\": \"volume\",\n                    \"delete_on_termination\": False\n                 }]\n\nlibvirt.xml contains the following devices:\n\n\n    <disk type=\"file\" device=\"disk\">\n      <driver name=\"qemu\" type=\"qcow2\" cache=\"none\"/>\n      <source file=\"/home/vb/var/lib/nova/instances/7e0476cf-bca8-4618-96f5-828ac89cc775/disk\"/>\n      <target bus=\"virtio\" dev=\"vda\"/>\n    </disk>\n    <disk type=\"block\" device=\"disk\">\n      <driver name=\"qemu\" type=\"raw\" cache=\"none\"/>\n      <source dev=\"/dev/disk/by-path/ip-127.0.0.1:3260-iscsi-iqn.2010-10.org.openstack:volume-121eb3ca-c00f-4b17-9ab9-7da77b811a3b-lun-1\"/>\n      <target bus=\"virtio\" dev=\"vdb\"/>\n      <serial>121eb3ca-c00f-4b17-9ab9-7da77b811a3b</serial>\n    </disk>\n    <disk type=\"block\" device=\"disk\">\n      <driver name=\"qemu\" type=\"raw\" cache=\"none\"/>\n      <source dev=\"/dev/disk/by-path/ip-127.0.0.1:3260-iscsi-iqn.2010-10.org.openstack:volume-0ec39d68-51bd-484b-94ad-d5b8305d5686-lun-1\"/>\n      <target bus=\"virtio\" dev=\"vdc\"/>\n      <serial>0ec39d68-51bd-484b-94ad-d5b8305d5686</serial>\n    </disk>\n\n`cinder list` shows two volumes.\n\nI expected only two devices, but /dev/vda, /dev/vdb and /dev/vdc were attached.\n\n/dev/vdc points to the same device as /dev/vda\n", 
            "date_created": "2014-11-27 11:05:33.715912+00:00", 
            "author": "https://api.launchpad.net/1.0/~vb-d"
        }, 
        {
            "content": "I was not able to reproduce this bug, how did you invoke the API? I tried with curl and specifing bootindex=0 created an instance without error. I am using Cinder with LVM and Devstack Kilo", 
            "date_created": "2014-12-16 12:54:59.402993+00:00", 
            "author": "https://api.launchpad.net/1.0/~pasquale-porreca"
        }, 
        {
            "content": "I use python-novaclient from github. I never used devstack.", 
            "date_created": "2014-12-16 13:30:37.567646+00:00", 
            "author": "https://api.launchpad.net/1.0/~vb-d"
        }, 
        {
            "content": "hello vitalii,\n\nI tried different cases, but the errors are not reproducible. I am using openstack juno (cinder with lvm) and able to launch instances successfully by using \"boot_index\" as \"0\" and \"1\". \n\nAs the nova documentation specifies that \"boot_index\" is zero for image backed instances. And \"bootindex\" specifies the order of boot disks.\n\nWhen we tried to boot VM with two --block-device like\n\nnova boot --flavor <flavor_id> --block-device <...,bootindex=0> ---block-device <...,bootindex=1> <vm_name>\n\nvirtual machine launched successfully. And as we gave two block devices to be attached in the command, two block volumes are attached to the VM.\n\nIf we use nova boot to launch a VM with one block device having bootindex is 1 (primary boot index missing), then an error is expected stating \"InvalidBDMBootSequence\".\n\nAs mentioned in the description, we did not find two block devices if we boot server with boot_index 1 alone.\nPlease let us know if we are missing anything.\n", 
            "date_created": "2014-12-19 15:15:54.548798+00:00", 
            "author": "https://api.launchpad.net/1.0/~inakoti-satish"
        }, 
        {
            "content": "hello vitalii,\n\nI tried different cases, but the errors are not reproducible. I am using openstack juno (cinder with lvm) and able to launch instances successfully by using \"boot_index\" as \"0\" and \"1\". \n\nAs the nova documentation specifies that \"boot_index\" is zero for image backed instances. And \"bootindex\" specifies the order of boot disks.\n\nWhen we tried to boot VM with two --block-device like\n\nnova boot --flavor <flavor_id> --block-device <...,bootindex=0> ---block-device <...,bootindex=1> <vm_name>\n\nvirtual machine launched successfully. And as we gave two block devices to be attached in the command, two block volumes are attached to the VM.\n\nIf we use nova boot to launch a VM with one block device having bootindex is 1 (primary boot index missing), then an error is expected stating \"InvalidBDMBootSequence\".\n\nAs mentioned in the description, we did not find two block devices if we boot server with boot_index 1 alone.\nPlease let us know if we are missing anything.\n", 
            "date_created": "2014-12-19 15:19:19.996204+00:00", 
            "author": "https://api.launchpad.net/1.0/~gundarapu-reddy"
        }, 
        {
            "content": "I clearly stated that I used API ( novaclient  ).\n\nThis is third bug report, that you guys cannot reproduce. You are not being helpful.\n\nI used code from Github and as I can see there were contributions to repository, since the last time I checked it out.\nIt could be issue was fixed, along with tons of other that were introduced in Juno, but I don't have free environment to test atm.\n\n", 
            "date_created": "2014-12-19 16:05:14.079676+00:00", 
            "author": "https://api.launchpad.net/1.0/~vb-d"
        }, 
        {
            "content": "If anyone can reproduce this, please submit logs and details.", 
            "date_created": "2015-02-01 02:18:28.634750+00:00", 
            "author": "https://api.launchpad.net/1.0/~dims-v"
        }, 
        {
            "content": "Vitali, can you post e.g. a python script or bash script that triggers the problem? Folk understand that you're using python-novaclient, but they don't know exactly how you're invoking it.", 
            "date_created": "2015-02-11 23:17:13.843834+00:00", 
            "author": "https://api.launchpad.net/1.0/~lifeless"
        }, 
        {
            "content": "[Expired for OpenStack Compute (nova) because there has been no activity for 60 days.]", 
            "date_created": "2015-04-13 04:22:39.264702+00:00", 
            "author": "https://api.launchpad.net/1.0/~janitor"
        }
    ], 
    "closed": "2015-04-13 04:22:39.781231+00:00"
}