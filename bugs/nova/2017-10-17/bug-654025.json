{
    "status": "Fix Released", 
    "last_updated": "2011-02-07 14:03:13.001585+00:00", 
    "description": "If a project does not have a network assigned, nova-manage project zip fails like this:\n\nTraceback (most recent call last):\n  File \"/home/emellor/openstack/nova/xenapi/bin/nova-manage\", line 463, in <module>\n    main()\n  File \"/home/emellor/openstack/nova/xenapi/bin/nova-manage\", line 454, in main\n    fn(*argv)\n  File \"/home/emellor/openstack/nova/xenapi/bin/nova-manage\", line 347, in zipfile\n    zip_file = self.manager.get_credentials(user_id, project_id)\n  File \"/home/emellor/openstack/nova/xenapi/nova/auth/manager.py\", line 662, in get_credentials\n    (vpn_ip, vpn_port) = self.get_project_vpn_data(project)\n  File \"/home/emellor/openstack/nova/xenapi/nova/auth/manager.py\", line 558, in get_project_vpn_data\n    Project.safe_id(project))\n  File \"/home/emellor/openstack/nova/xenapi/nova/db/api.py\", line 440, in project_get_network\n    return IMPL.project_get_network(context, project_id)\n  File \"/home/emellor/openstack/nova/xenapi/nova/db/sqlalchemy/api.py\", line 103, in wrapper\n    return f(*args, **kwargs)\n  File \"/home/emellor/openstack/nova/xenapi/nova/db/sqlalchemy/api.py\", line 980, in project_get_network\n    raise exception.NotFound('No network for project: %s' % project_id)\nnova.exception.NotFound: No network for project: ewan\n\nThe code in auth.manager used to cope with this situation, but it looks like the DB layer semantics have changed so that it raises exception.NotFound now rather than returning None.\n\nA similar problem affects nova-manage vpn list.\n", 
    "tags": [], 
    "importance": "Undecided", 
    "heat": 10, 
    "link": "https://bugs.launchpad.net/nova/+bug/654025", 
    "owner": "https://api.launchpad.net/1.0/~ewanmellor", 
    "id": 654025, 
    "index": 3205, 
    "openned": "2010-10-03 11:45:03.449971+00:00", 
    "created": "2010-10-03 11:45:03.449971+00:00", 
    "title": "nova-manage project zip and nova-manage vpn list broken by change in DB semantics when networks are missing", 
    "comments": [
        {
            "content": "If a project does not have a network assigned, nova-manage project zip fails like this:\n\nTraceback (most recent call last):\n  File \"/home/emellor/openstack/nova/xenapi/bin/nova-manage\", line 463, in <module>\n    main()\n  File \"/home/emellor/openstack/nova/xenapi/bin/nova-manage\", line 454, in main\n    fn(*argv)\n  File \"/home/emellor/openstack/nova/xenapi/bin/nova-manage\", line 347, in zipfile\n    zip_file = self.manager.get_credentials(user_id, project_id)\n  File \"/home/emellor/openstack/nova/xenapi/nova/auth/manager.py\", line 662, in get_credentials\n    (vpn_ip, vpn_port) = self.get_project_vpn_data(project)\n  File \"/home/emellor/openstack/nova/xenapi/nova/auth/manager.py\", line 558, in get_project_vpn_data\n    Project.safe_id(project))\n  File \"/home/emellor/openstack/nova/xenapi/nova/db/api.py\", line 440, in project_get_network\n    return IMPL.project_get_network(context, project_id)\n  File \"/home/emellor/openstack/nova/xenapi/nova/db/sqlalchemy/api.py\", line 103, in wrapper\n    return f(*args, **kwargs)\n  File \"/home/emellor/openstack/nova/xenapi/nova/db/sqlalchemy/api.py\", line 980, in project_get_network\n    raise exception.NotFound('No network for project: %s' % project_id)\nnova.exception.NotFound: No network for project: ewan\n\nThe code in auth.manager used to cope with this situation, but it looks like the DB layer semantics have changed so that it raises exception.NotFound now rather than returning None.", 
            "date_created": "2010-10-03 11:45:03.449971+00:00", 
            "author": "https://api.launchpad.net/1.0/~ewanmellor"
        }, 
        {
            "content": "On 03-10-2010 13:45, Ewan Mellor wrote:\n> The code in auth.manager used to cope with this situation, but it looks\n> like the DB layer semantics have changed so that it raises\n> exception.NotFound now rather than returning None.\n> \n> A similar problem affects nova-manage vpn list.\n\nI'm not completely convinced that this is a nova-manage problem. Auth\nmanager unconditionally creates a network for a project, so I think the\n/real/ problem here is that we have gotten into a situation where\nprojects added before this change was made still don't have a network\nassigned, so it's more a schema change that hasn't been handled gracefully.\n\nPerhaps we should add a \"nova-manage upgrade\" command that can handle\nthis sort of thing?\n\n  status incomplete\n\n-- \nSoren Hansen\nUbuntu Developer    http://www.ubuntu.com/\nOpenStack Developer http://www.openstack.org/\n\n", 
            "date_created": "2010-10-04 06:45:39+00:00", 
            "author": "https://api.launchpad.net/1.0/~soren"
        }, 
        {
            "content": "Whether or not we _should_ be in this situation, debugging it is a lot easier\nif your tools don't blow up in your face.\n\nSome form of schema upgrade tool is likely to be necessary, but my experience\nis that the best you can hope for is if those are kept up-to-date from\nrelease to release.  Within a given development period, however, the schema\nwill be in rapid flux, and no-one will be able to keep the tool perfectly\nup-to-date with all possible \"before\" and \"after\" schemas.  We will need\ndevelopers to be able to dig themselves out of a hole, and that means tools\nthat cope when values are missing.\n\nEwan.\n\nOn Mon, Oct 04, 2010 at 07:45:39AM +0100, Soren Hansen wrote:\n\n> On 03-10-2010 13:45, Ewan Mellor wrote:\n> > The code in auth.manager used to cope with this situation, but it looks\n> > like the DB layer semantics have changed so that it raises\n> > exception.NotFound now rather than returning None.\n> > \n> > A similar problem affects nova-manage vpn list.\n> \n> I'm not completely convinced that this is a nova-manage problem. Auth\n> manager unconditionally creates a network for a project, so I think the\n> /real/ problem here is that we have gotten into a situation where\n> projects added before this change was made still don't have a network\n> assigned, so it's more a schema change that hasn't been handled gracefully.\n> \n> Perhaps we should add a \"nova-manage upgrade\" command that can handle\n> this sort of thing?\n> \n>   status incomplete\n> \n> -- \n> Soren Hansen\n> Ubuntu Developer    http://www.ubuntu.com/\n> OpenStack Developer http://www.openstack.org/\n> \n> \n> ** Changed in: nova\n>        Status: Fix Committed => Incomplete\n> \n> -- \n> nova-manage project zip and nova-manage vpn list broken by change in DB semantics when networks are missing\n> https://bugs.launchpad.net/bugs/654025\n> You received this bug notification because you are a direct subscriber\n> of the bug.\n> \n> Status in OpenStack Compute (Nova): Incomplete\n> \n> Bug description:\n> If a project does not have a network assigned, nova-manage project zip fails like this:\n> \n> Traceback (most recent call last):\n>   File \"/home/emellor/openstack/nova/xenapi/bin/nova-manage\", line 463, in <module>\n>     main()\n>   File \"/home/emellor/openstack/nova/xenapi/bin/nova-manage\", line 454, in main\n>     fn(*argv)\n>   File \"/home/emellor/openstack/nova/xenapi/bin/nova-manage\", line 347, in zipfile\n>     zip_file = self.manager.get_credentials(user_id, project_id)\n>   File \"/home/emellor/openstack/nova/xenapi/nova/auth/manager.py\", line 662, in get_credentials\n>     (vpn_ip, vpn_port) = self.get_project_vpn_data(project)\n>   File \"/home/emellor/openstack/nova/xenapi/nova/auth/manager.py\", line 558, in get_project_vpn_data\n>     Project.safe_id(project))\n>   File \"/home/emellor/openstack/nova/xenapi/nova/db/api.py\", line 440, in project_get_network\n>     return IMPL.project_get_network(context, project_id)\n>   File \"/home/emellor/openstack/nova/xenapi/nova/db/sqlalchemy/api.py\", line 103, in wrapper\n>     return f(*args, **kwargs)\n>   File \"/home/emellor/openstack/nova/xenapi/nova/db/sqlalchemy/api.py\", line 980, in project_get_network\n>     raise exception.NotFound('No network for project: %s' % project_id)\n> nova.exception.NotFound: No network for project: ewan\n> \n> The code in auth.manager used to cope with this situation, but it looks like the DB layer semantics have changed so that it raises exception.NotFound now rather than returning None.\n> \n> A similar problem affects nova-manage vpn list.\n> \n> \n> To unsubscribe from this bug, go to:\n> https://bugs.launchpad.net/nova/+bug/654025/+subscribe", 
            "date_created": "2010-10-04 08:04:27+00:00", 
            "author": "https://api.launchpad.net/1.0/~ewanmellor"
        }, 
        {
            "content": "If you change nova-manage to simply ignore it when it comes across data the violates our currently expected data model, you're just delaying the catastrophe until another part of the code comes across and tries to handle this data. nova-manage is the only UI nova has, so it's the best place imaginable to be notified about these things.", 
            "date_created": "2010-10-04 18:11:26.514986+00:00", 
            "author": "https://api.launchpad.net/1.0/~soren"
        }, 
        {
            "content": "I agree we should have an 'upgrade' command or some other schema update tool to properly fix this, but until this is ready, I think we should accept the proposed patch as a temporary fix. We might want to have the patch add in an annoying \"network model is missing\" message and give instructions on how to upgrade, but I don't think we should just blow up as it does now.", 
            "date_created": "2010-10-04 18:29:35.065607+00:00", 
            "author": "https://api.launchpad.net/1.0/~eday"
        }, 
        {
            "content": "I just did a quick grep through the source code for project_get_network. I stopped counting when I had found 10 uses of it that would fail if it got back None or an execption (and only 1 that handled it gracefully).\n\nWhat about those?", 
            "date_created": "2010-10-04 18:44:15.219171+00:00", 
            "author": "https://api.launchpad.net/1.0/~soren"
        }, 
        {
            "content": "Ahh, ok. If this is not an isolated case, then yes, I agree we should probably force an upgrade. I just don't like tools that force you to upgrade something when all you wanted to do was make a simple change (I still do the upgrade, but after some change that may be time critical).", 
            "date_created": "2010-10-04 19:15:46.789760+00:00", 
            "author": "https://api.launchpad.net/1.0/~eday"
        }, 
        {
            "content": "My proposed branch here\nhttps://code.launchpad.net/~vishvananda/nova/remove-network-index/+merge/36921\naddresses this issue.\nIt changes networks to be created through nova-manage, and only allocates a network to a user when an instance is launched.  In the meantime, it simply warns that there is no vpn data and skips generating the part that needs the vpn credentials.\n \nOn Oct 4, 2010, at 12:15 PM, Eric Day wrote:\n\n> Ahh, ok. If this is not an isolated case, then yes, I agree we should\n> probably force an upgrade. I just don't like tools that force you to\n> upgrade something when all you wanted to do was make a simple change (I\n> still do the upgrade, but after some change that may be time critical).\n> \n> -- \n> nova-manage project zip and nova-manage vpn list broken by change in DB semantics when networks are missing\n> https://bugs.launchpad.net/bugs/654025\n> You received this bug notification because you are a member of Nova\n> Bugs, which is subscribed to OpenStack Compute (nova).\n> \n> Status in OpenStack Compute (Nova): Incomplete\n> \n> Bug description:\n> If a project does not have a network assigned, nova-manage project zip fails like this:\n> \n> Traceback (most recent call last):\n>  File \"/home/emellor/openstack/nova/xenapi/bin/nova-manage\", line 463, in <module>\n>    main()\n>  File \"/home/emellor/openstack/nova/xenapi/bin/nova-manage\", line 454, in main\n>    fn(*argv)\n>  File \"/home/emellor/openstack/nova/xenapi/bin/nova-manage\", line 347, in zipfile\n>    zip_file = self.manager.get_credentials(user_id, project_id)\n>  File \"/home/emellor/openstack/nova/xenapi/nova/auth/manager.py\", line 662, in get_credentials\n>    (vpn_ip, vpn_port) = self.get_project_vpn_data(project)\n>  File \"/home/emellor/openstack/nova/xenapi/nova/auth/manager.py\", line 558, in get_project_vpn_data\n>    Project.safe_id(project))\n>  File \"/home/emellor/openstack/nova/xenapi/nova/db/api.py\", line 440, in project_get_network\n>    return IMPL.project_get_network(context, project_id)\n>  File \"/home/emellor/openstack/nova/xenapi/nova/db/sqlalchemy/api.py\", line 103, in wrapper\n>    return f(*args, **kwargs)\n>  File \"/home/emellor/openstack/nova/xenapi/nova/db/sqlalchemy/api.py\", line 980, in project_get_network\n>    raise exception.NotFound('No network for project: %s' % project_id)\n> nova.exception.NotFound: No network for project: ewan\n> \n> The code in auth.manager used to cope with this situation, but it looks like the DB layer semantics have changed so that it raises exception.NotFound now rather than returning None.\n> \n> A similar problem affects nova-manage vpn list.\n> \n> \n> \n\n", 
            "date_created": "2010-10-05 01:47:55+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "On Mon, Oct 04, 2010 at 07:11:26PM +0100, Soren Hansen wrote:\n\n> If you change nova-manage to simply ignore it when it comes across data\n> the violates our currently expected data model, you're just delaying the\n> catastrophe until another part of the code comes across and tries to\n> handle this data. nova-manage is the only UI nova has, so it's the best\n> place imaginable to be notified about these things.\n\nI didn't change nova-manage to \"simply ignore it\" -- it prints None.  I'm\nquite happy to print \"Warning warning danger danger\" if you want, if you\nthink that this really does violate the expected datamodel.  Exploding\nisn't acceptable though -- debugging is a lot harder if the tools just throw\na backtrace instead of diagnosing the problem for you.  I agree that you\nshould be notified about this problem by nova-manage.  I don't agree that\na backtrace is an acceptable way to do that.", 
            "date_created": "2010-10-05 16:53:20+00:00", 
            "author": "https://api.launchpad.net/1.0/~ewanmellor"
        }, 
        {
            "content": "On Mon, Oct 04, 2010 at 07:44:15PM +0100, Soren Hansen wrote:\n\n> I just did a quick grep through the source code for project_get_network.\n> I stopped counting when I had found 10 uses of it that would fail if it\n> got back None or an execption (and only 1 that handled it gracefully).\n> \n> What about those?\n\nWhat to do about other calls to project_get_network is a question for those\ncall-sites.  It might well be perfectly reasonable for the NotFound\nexception to propagate up to a higher layer in those cases.  I'm not\nadvocating catching exceptions at every call-site -- that's not what exceptions\nare for.\n\nMy patch catches one exception at the very top level (nova-manage), and one at\na call-site that was already set up to gracefully handle missing VPN\ninformation.", 
            "date_created": "2010-10-05 16:58:06+00:00", 
            "author": "https://api.launchpad.net/1.0/~ewanmellor"
        }, 
        {
            "content": "On 05-10-2010 18:53, Ewan Mellor wrote:\n> On Mon, Oct 04, 2010 at 07:11:26PM +0100, Soren Hansen wrote:\n>> If you change nova-manage to simply ignore it when it comes across data\n>> the violates our currently expected data model, you're just delaying the\n>> catastrophe until another part of the code comes across and tries to\n>> handle this data. nova-manage is the only UI nova has, so it's the best\n>> place imaginable to be notified about these things.\n> I didn't change nova-manage to \"simply ignore it\" -- it prints None.  I'm\n> quite happy to print \"Warning warning danger danger\" if you want, if you\n> think that this really does violate the expected datamodel.  Exploding\n> isn't acceptable though -- debugging is a lot harder if the tools just throw\n> a backtrace instead of diagnosing the problem for you.  I agree that you\n> should be notified about this problem by nova-manage.  I don't agree that\n> a backtrace is an acceptable way to do that.\n\nI never said the output should be a backtrace. I'm saying that masking\nan *actual* error in the UI, completely ignoring it and covering it up,\nis not ok. However, that's exactly what you're doing by making the UI\njust say \"None\" when it really means \"None (which is not valid, so do\nnot expect this project to be able to do anything at all and expect to\nhave to do all sort of manual cleanup when the backend fails in\nspectacular ways when trying to deal with this project)\".\n\nReally, it's not that hard. Either we merge Vishy's branch that creates\nthe network on the fly if it doesn't exist once it's requested (by far\nthe preferred approach), or we change nova-manage to fix it when it\nencounters this problem (as a last resport.. well, second to last\nresort. Masking the error should be last resort and we're not quite in\nlast resort territory yet).\n\nOnce Vishy's branch is merged, nova-manage should probably say \"Not\nassigned yet\" rather than \"None\", though, but that's a slightly\ndifferent story.\n\n-- \nSoren Hansen\nUbuntu Developer    http://www.ubuntu.com/\nOpenStack Developer http://www.openstack.org/", 
            "date_created": "2010-10-06 05:30:49+00:00", 
            "author": "https://api.launchpad.net/1.0/~soren"
        }, 
        {
            "content": "On 05-10-2010 18:58, Ewan Mellor wrote:\n>> I just did a quick grep through the source code for project_get_network.\n>> I stopped counting when I had found 10 uses of it that would fail if it\n>> got back None or an execption (and only 1 that handled it gracefully).\n>>\n>> What about those?\n> What to do about other calls to project_get_network is a question for those\n> call-sites.\n\nIt's not that simple. If we /know/ that there are dozens of places where\nthis discrepancy in the data model will cause problems, the worst we can\npossibly do is cover it up in (I realise I keep repeating this, but I\nbelieve it is key) the only UI we've got.\n\n-- \nSoren Hansen\nUbuntu Developer    http://www.ubuntu.com/\nOpenStack Developer http://www.openstack.org/\n\n", 
            "date_created": "2010-10-06 05:31:08+00:00", 
            "author": "https://api.launchpad.net/1.0/~soren"
        }, 
        {
            "content": "@Ewan: Trying to refresh status here... Was this fixed by the merge of your branch ?", 
            "date_created": "2010-12-17 16:35:06.340617+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "@Ewan: any chance you could update the status of this bug ?", 
            "date_created": "2011-01-19 13:12:43.977670+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "I'm happy to close this one.  There is a small amount of agreeing-to-disagree, but nothing I can't live with, and I'm happy with what's in trunk.\r\n", 
            "date_created": "2011-01-19 20:39:31.957704+00:00", 
            "author": "https://api.launchpad.net/1.0/~ewanmellor"
        }
    ], 
    "closed": "2011-02-07 14:03:11.751898+00:00"
}