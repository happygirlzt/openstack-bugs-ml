{
    "status": "Opinion", 
    "last_updated": "2013-09-23 22:47:58.658749+00:00", 
    "description": "This is preventing all Tempest changes from going through...\n\n21:38:21  ======================================================================\n21:38:21  FAIL: Filter the detailed list of servers by flavor\n21:38:21  ----------------------------------------------------------------------\n21:38:21  Traceback (most recent call last):\n21:38:21    File \"/opt/stack/tempest/tempest/tests/compute/test_list_server_filters.py\", line 163, in test_list_servers_detailed_filter_by_flavor\n21:38:21      self.assertTrue(self.s3 in servers)\n21:38:21  AssertionError: False is not True\n21:38:21      'False is not True' = self._formatMessage('False is not True', \"%s is not True\" % safe_repr(False))\n21:38:21  >>  raise self.failureException('False is not True')\n21:38:21      \n21:38:21  \n21:38:21  ======================================================================\n21:38:21  FAIL: Filter the detailed list of servers by server name\n21:38:21  ----------------------------------------------------------------------\n21:38:21  Traceback (most recent call last):\n21:38:21    File \"/opt/stack/tempest/tempest/tests/compute/test_list_server_filters.py\", line 172, in test_list_servers_detailed_filter_by_server_name\n21:38:21      self.assertTrue(self.s1 in servers)\n21:38:21  AssertionError: False is not True\n21:38:21      'False is not True' = self._formatMessage('False is not True', \"%s is not True\" % safe_repr(False))\n21:38:21  >>  raise self.failureException('False is not True')\n21:38:21      \n21:38:21  \n21:38:21  ======================================================================\n21:38:21  FAIL: Filter the detailed list of servers by server status\n21:38:21  ----------------------------------------------------------------------\n21:38:21  Traceback (most recent call last):\n21:38:21    File \"/opt/stack/tempest/tempest/tests/compute/test_list_server_filters.py\", line 183, in test_list_servers_detailed_filter_by_server_status\n21:38:21      self.assertTrue(self.s1 in servers)\n21:38:21  AssertionError: False is not True\n21:38:21      'False is not True' = self._formatMessage('False is not True', \"%s is not True\" % safe_repr(False))\n21:38:21  >>  raise self.failureException('False is not True')\n\nCould be a change in nova that broke Tempest.", 
    "tags": [], 
    "importance": "Medium", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1028465", 
    "owner": "https://api.launchpad.net/1.0/~jaypipes", 
    "id": 1028465, 
    "index": 2978, 
    "openned": "2012-07-24 15:48:37.908974+00:00", 
    "created": "2012-07-24 14:27:43.079116+00:00", 
    "title": "Instances filters for server name, flavor and status no longer work", 
    "comments": [
        {
            "content": "This is preventing all Tempest changes from going through...\n\n21:38:21  ======================================================================\n21:38:21  FAIL: Filter the detailed list of servers by flavor\n21:38:21  ----------------------------------------------------------------------\n21:38:21  Traceback (most recent call last):\n21:38:21    File \"/opt/stack/tempest/tempest/tests/compute/test_list_server_filters.py\", line 163, in test_list_servers_detailed_filter_by_flavor\n21:38:21      self.assertTrue(self.s3 in servers)\n21:38:21  AssertionError: False is not True\n21:38:21      'False is not True' = self._formatMessage('False is not True', \"%s is not True\" % safe_repr(False))\n21:38:21  >>  raise self.failureException('False is not True')\n21:38:21      \n21:38:21  \n21:38:21  ======================================================================\n21:38:21  FAIL: Filter the detailed list of servers by server name\n21:38:21  ----------------------------------------------------------------------\n21:38:21  Traceback (most recent call last):\n21:38:21    File \"/opt/stack/tempest/tempest/tests/compute/test_list_server_filters.py\", line 172, in test_list_servers_detailed_filter_by_server_name\n21:38:21      self.assertTrue(self.s1 in servers)\n21:38:21  AssertionError: False is not True\n21:38:21      'False is not True' = self._formatMessage('False is not True', \"%s is not True\" % safe_repr(False))\n21:38:21  >>  raise self.failureException('False is not True')\n21:38:21      \n21:38:21  \n21:38:21  ======================================================================\n21:38:21  FAIL: Filter the detailed list of servers by server status\n21:38:21  ----------------------------------------------------------------------\n21:38:21  Traceback (most recent call last):\n21:38:21    File \"/opt/stack/tempest/tempest/tests/compute/test_list_server_filters.py\", line 183, in test_list_servers_detailed_filter_by_server_status\n21:38:21      self.assertTrue(self.s1 in servers)\n21:38:21  AssertionError: False is not True\n21:38:21      'False is not True' = self._formatMessage('False is not True', \"%s is not True\" % safe_repr(False))\n21:38:21  >>  raise self.failureException('False is not True')\n\nCould be a change in nova that broke Tempest.", 
            "date_created": "2012-07-24 14:27:43.079116+00:00", 
            "author": "https://api.launchpad.net/1.0/~jaypipes"
        }, 
        {
            "content": "Confirmed in local testing.", 
            "date_created": "2012-07-24 14:40:40.121022+00:00", 
            "author": "https://api.launchpad.net/1.0/~jaypipes"
        }, 
        {
            "content": "So, it turns out that name search parameters are not passed to exact match column filters any more, but instead are passed to Regex filters :( And it is this that is incorrectly filtering the wrong instances from the output. I added some debug output into nova-api in order to identify the problem...\n\n2012-07-24 11:46:28 DEBUG nova.db.sqlalchemy.api [req-7ecfafb0-3619-49ef-b9f8-dc55eea647d1 ListServerFiltersTest-user ListServerFiltersTest-tenant] *** BEFORE REGEX *** [{'vm_state': u'active', 'availability_zone': None, 'terminated_at': None, 'ramdisk_id': u'a529e5e8-451f-4049-bad1-2d884111d712', 'instance_type_id': 2L, 'updated_at': datetime.datetime(2012, 7, 24, 15, 46, 26), 'vm_mode': None, 'deleted_at': None, 'reservation_id': u'r-tt0b5sbj', 'id': 13L, 'disable_terminate': False, 'root_device_name': u'/dev/vda', 'user_id': u'c04b37baeb164a9689e8f0a0195a2e32', 'uuid': u'4576e6d3-d257-4e28-b68b-30e3efe50d52', 'server_name': None, 'default_swap_device': None, 'hostname': u'server63679872311', 'launched_on': u'uberbox', 'display_description': u'server63679872311', 'key_data': None, 'kernel_id': u'00c2b5f2-75ce-46f2-81d9-775ea5a8682b', 'power_state': 1L, 'default_ephemeral_device': None, 'progress': 0L, 'project_id': u'ea7414d9efe0467f96a8bbf29d0bcd60', 'launched_at': datetime.datetime(2012, 7, 24, 15, 46, 26), 'scheduled_at': datetime.datetime(2012, 7, 24, 15, 46), 'ephemeral_gb': 0L, 'access_ip_v6': None, 'access_ip_v4': None, 'deleted': False, 'key_name': None, 'user_data': u'', 'host': u'uberbox', 'display_name': u'server63679872311', 'task_state': None, 'shutdown_terminate': False, 'root_gb': 0L, 'locked': False, 'created_at': datetime.datetime(2012, 7, 24, 15, 46), 'launch_index': 0L, 'memory_mb': 512L, 'vcpus': 1L, 'image_ref': u'7f697b5a-65a2-4130-a891-a9d6d4c856ed', 'architecture': None, 'auto_disk_config': None, 'os_type': None, 'config_drive': u''}, {'vm_state': u'active', 'availability_zone': None, 'terminated_at': None, 'ramdisk_id': u'a529e5e8-451f-4049-bad1-2d884111d712', 'instance_type_id': 2L, 'updated_at': datetime.datetime(2012, 7, 24, 15, 46, 24), 'vm_mode': None, 'deleted_at': None, 'reservation_id': u'r-bpytbf2j', 'id': 14L, 'disable_terminate': False, 'root_device_name': u'/dev/vda', 'user_id': u'c04b37baeb164a9689e8f0a0195a2e32', 'uuid': u'd14f038b-d258-4391-858d-e4bf300e7a99', 'server_name': None, 'default_swap_device': None, 'hostname': u'server952716972', 'launched_on': u'uberbox', 'display_description': u'server952716972', 'key_data': None, 'kernel_id': u'00c2b5f2-75ce-46f2-81d9-775ea5a8682b', 'power_state': 1L, 'default_ephemeral_device': None, 'progress': 0L, 'project_id': u'ea7414d9efe0467f96a8bbf29d0bcd60', 'launched_at': datetime.datetime(2012, 7, 24, 15, 46, 24), 'scheduled_at': datetime.datetime(2012, 7, 24, 15, 46), 'ephemeral_gb': 0L, 'access_ip_v6': None, 'access_ip_v4': None, 'deleted': False, 'key_name': None, 'user_data': u'', 'host': u'uberbox', 'display_name': u'server952716972', 'task_state': None, 'shutdown_terminate': False, 'root_gb': 0L, 'locked': False, 'created_at': datetime.datetime(2012, 7, 24, 15, 46), 'launch_index': 0L, 'memory_mb': 512L, 'vcpus': 1L, 'image_ref': u'7f697b5a-65a2-4130-a891-a9d6d4c856ed', 'architecture': None, 'auto_disk_config': None, 'os_type': None, 'config_drive': u''}, {'vm_state': u'active', 'availability_zone': None, 'terminated_at': None, 'ramdisk_id': u'a529e5e8-451f-4049-bad1-2d884111d712', 'instance_type_id': 5L, 'updated_at': datetime.datetime(2012, 7, 24, 15, 46, 26), 'vm_mode': None, 'deleted_at': None, 'reservation_id': u'r-vgfb4i5l', 'id': 15L, 'disable_terminate': False, 'root_device_name': u'/dev/vda', 'user_id': u'c04b37baeb164a9689e8f0a0195a2e32', 'uuid': u'3819a879-4a1c-48a2-ad1c-975fb0dfb34b', 'server_name': None, 'default_swap_device': None, 'hostname': u'server34066490098', 'launched_on': u'uberbox', 'display_description': u'server34066490098', 'key_data': None, 'kernel_id': u'00c2b5f2-75ce-46f2-81d9-775ea5a8682b', 'power_state': 1L, 'default_ephemeral_device': None, 'progress': 0L, 'project_id': u'ea7414d9efe0467f96a8bbf29d0bcd60', 'launched_at': datetime.datetime(2012, 7, 24, 15, 46, 26), 'scheduled_at': datetime.datetime(2012, 7, 24, 15, 46, 1), 'ephemeral_gb': 0L, 'access_ip_v6': None, 'access_ip_v4': None, 'deleted': False, 'key_name': None, 'user_data': u'', 'host': u'uberbox', 'display_name': u'server34066490098', 'task_state': None, 'shutdown_terminate': False, 'root_gb': 20L, 'locked': False, 'created_at': datetime.datetime(2012, 7, 24, 15, 46), 'launch_index': 0L, 'memory_mb': 2048L, 'vcpus': 1L, 'image_ref': u'7f697b5a-65a2-4130-a891-a9d6d4c856ed', 'architecture': None, 'auto_disk_config': None, 'os_type': None, 'config_drive': u''}] from (pid=15971) instance_get_all_by_filters /opt/stack/nova/nova/db/sqlalchemy/api.py:1565\n2012-07-24 11:46:28 DEBUG nova.db.sqlalchemy.api [req-7ecfafb0-3619-49ef-b9f8-dc55eea647d1 ListServerFiltersTest-user ListServerFiltersTest-tenant] *** AFTER REGEX *** [{'vm_state': u'active', 'availability_zone': None, 'terminated_at': None, 'ramdisk_id': u'a529e5e8-451f-4049-bad1-2d884111d712', 'instance_type_id': 2L, 'updated_at': datetime.datetime(2012, 7, 24, 15, 46, 26), 'vm_mode': None, 'deleted_at': None, 'reservation_id': u'r-tt0b5sbj', 'id': 13L, 'disable_terminate': False, 'root_device_name': u'/dev/vda', 'user_id': u'c04b37baeb164a9689e8f0a0195a2e32', 'uuid': u'4576e6d3-d257-4e28-b68b-30e3efe50d52', 'server_name': None, 'default_swap_device': None, 'hostname': u'server63679872311', 'launched_on': u'uberbox', 'display_description': u'server63679872311', 'key_data': None, 'kernel_id': u'00c2b5f2-75ce-46f2-81d9-775ea5a8682b', 'power_state': 1L, 'default_ephemeral_device': None, 'progress': 0L, 'project_id': u'ea7414d9efe0467f96a8bbf29d0bcd60', 'launched_at': datetime.datetime(2012, 7, 24, 15, 46, 26), 'scheduled_at': datetime.datetime(2012, 7, 24, 15, 46), 'ephemeral_gb': 0L, 'access_ip_v6': None, 'access_ip_v4': None, 'deleted': False, 'key_name': None, 'user_data': u'', 'host': u'uberbox', 'display_name': u'server63679872311', 'task_state': None, 'shutdown_terminate': False, 'root_gb': 0L, 'locked': False, 'created_at': datetime.datetime(2012, 7, 24, 15, 46), 'launch_index': 0L, 'memory_mb': 512L, 'vcpus': 1L, 'image_ref': u'7f697b5a-65a2-4130-a891-a9d6d4c856ed', 'architecture': None, 'auto_disk_config': None, 'os_type': None, 'config_drive': u''}] from (pid=15971) instance_get_all_by_filters /opt/stack/nova/nova/db/sqlalchemy/api.py:1585\n", 
            "date_created": "2012-07-24 15:48:26.458060+00:00", 
            "author": "https://api.launchpad.net/1.0/~jaypipes"
        }, 
        {
            "content": "From examining the returned dicts, it seems like some column names were changed (display_name -> server_name). Investigating further...", 
            "date_created": "2012-07-24 15:51:28.864184+00:00", 
            "author": "https://api.launchpad.net/1.0/~jaypipes"
        }, 
        {
            "content": "FINALLY figured out what is going on here...\n\nTurns out that the instance dict returned from POST /servers recently changed. The key_name key was added to this return.\n\nHowever, the instance dicts returned in a call to GET /servers DO NOT contain this key_name key. This is what caused the line:\n\nself.assertTrue(self.s1 in servers)\n\nto fail, because the dicts were not equal, as shown in this Python shell output:\n\n>>> print sorted(d.keys())\n[u'OS-DCF:diskConfig', u'OS-EXT-STS:power_state', u'OS-EXT-STS:task_state', u'OS-EXT-STS:vm_state', u'accessIPv4', u'accessIPv6', u'addresses', u'config_drive', u'created', u'flavor', u'hostId', u'id', u'image', u'key_name', u'links', u'metadata', u'name', u'progress', u'status', u'tenant_id', u'updated', u'user_id']\n>>> print sorted(i1[0].keys())\n[u'OS-DCF:diskConfig', u'OS-EXT-STS:power_state', u'OS-EXT-STS:task_state', u'OS-EXT-STS:vm_state', u'accessIPv4', u'accessIPv6', u'addresses', u'config_drive', u'created', u'flavor', u'hostId', u'id', u'image', u'links', u'metadata', u'name', u'progress', u'status', u'tenant_id', u'updated', u'user_id']\n\nThe top dict is what is returned from POST /servers and the bottom dict is what is returned from GET /servers.\n\nBottom line solution is really to fix the fragile test in Tempest. That said, however, it is a good warning when API results change in Nova! :)", 
            "date_created": "2012-07-24 19:25:01.596184+00:00", 
            "author": "https://api.launchpad.net/1.0/~jaypipes"
        }, 
        {
            "content": "Hmm. In the etherpad http://etherpad.openstack.org/Hn8rKP7XgB I said:\n\nGenerally considered OK:\n\n1. The change is the only way to fix a security bug\n2. Adding a new response header or value in a returned dictionary.\n3. Change obviously buggy error behavior to a reasonable success result\n4. Adding an optional keyword argument, if the existing API was coded to \nignore unexpected\n     keywords.\n\n*NOTE*: Should (4) be allowed? It would not break programs but has the \nproblem that there is no way for the user of an API to know which \narguments are supported.\n\nThis was an example of (2). I still think we should allow it but perhaps \nthere should be an asterisk around this one.\n\nBTW, how do I change the name of the etherpad to something meaningful? \nSearched for how but didn't find it.\n\n  -David\n\n\n\n\n\nOn 7/24/2012 3:25 PM, Jay Pipes wrote:\n> FINALLY figured out what is going on here...\n>\n> Turns out that the instance dict returned from POST /servers recently\n> changed. The key_name key was added to this return.\n>\n> However, the instance dicts returned in a call to GET /servers DO NOT\n> contain this key_name key. This is what caused the line:\n>\n> self.assertTrue(self.s1 in servers)\n>\n> to fail, because the dicts were not equal, as shown in this Python shell\n> output:\n>\n>>>> print sorted(d.keys())\n> [u'OS-DCF:diskConfig', u'OS-EXT-STS:power_state', u'OS-EXT-STS:task_state', u'OS-EXT-STS:vm_state', u'accessIPv4', u'accessIPv6', u'addresses', u'config_drive', u'created', u'flavor', u'hostId', u'id', u'image', u'key_name', u'links', u'metadata', u'name', u'progress', u'status', u'tenant_id', u'updated', u'user_id']\n>>>> print sorted(i1[0].keys())\n> [u'OS-DCF:diskConfig', u'OS-EXT-STS:power_state', u'OS-EXT-STS:task_state', u'OS-EXT-STS:vm_state', u'accessIPv4', u'accessIPv6', u'addresses', u'config_drive', u'created', u'flavor', u'hostId', u'id', u'image', u'links', u'metadata', u'name', u'progress', u'status', u'tenant_id', u'updated', u'user_id']\n>\n> The top dict is what is returned from POST /servers and the bottom dict\n> is what is returned from GET /servers.\n>\n> Bottom line solution is really to fix the fragile test in Tempest. That\n> said, however, it is a good warning when API results change in Nova! :)\n>\n> ** Changed in: tempest\n>         Status: Confirmed =>  Triaged\n>\n> ** Changed in: nova\n>         Status: In Progress =>  Opinion\n>\n\n", 
            "date_created": "2012-07-24 19:48:23+00:00", 
            "author": "https://api.launchpad.net/1.0/~david-kranz"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/10249", 
            "date_created": "2012-07-24 21:00:54.309259+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/10251", 
            "date_created": "2012-07-24 21:38:00.287267+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/10255", 
            "date_created": "2012-07-24 23:41:41.463649+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/10255\nCommitted: http://github.com/openstack/tempest/commit/a6aa5f21074b78f1bf3f44111c9f6fc7d740f2de\nSubmitter: Jenkins\nBranch:    master\n\ncommit a6aa5f21074b78f1bf3f44111c9f6fc7d740f2de\nAuthor: Jay Pipes <email address hidden>\nDate:   Tue Jul 24 19:40:29 2012 -0400\n\n    Fix checks in server listing only lok for an ID\n    \n    The list server filter details checks were checking\n    entire mappings against the list of mappings returned\n    from a call to GET /servers/detail. Unfortunately, the\n    mappings returned by the GET /servers/detail and the\n    mapping returned by POST /servers are slightly different,\n    resulting in the comparison failing. We really only are\n    checking that the server instance we expect to be in the\n    returned list of instances is there, so checking for the\n    server ID in the returned list is fine.\n    \n    Change-Id: If9680f56a1ea06ffe93393d06b23bd231ccddd01\n    Fixes: LP Bug 1028465pep8 build for tempest.\n", 
            "date_created": "2012-07-25 00:08:01.188750+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2012-07-24 19:25:15.623231+00:00"
}