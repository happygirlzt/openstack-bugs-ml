{
    "status": "Fix Released", 
    "last_updated": "2013-04-04 10:59:03.524541+00:00", 
    "description": "Tempest has a number of negative test cases that check for failure codes from the API calls. But some of these are treated as errors with tracebacks in the log. Here are two examples from the floating ip tests. I have been struggling with this general issue while stress testing nova.  There needs to be some way to scan a log file, or use publish_errors,  and understand if the system is misbehaving. Use of the ERROR log level would be a good way to do that but there are too many places where log.error or log.exception is called that should really be DEBUG or INFO. I think this is as a huge problem for testing.\n\n\n\n/var/log/nova/nova-network.log:2012-04-09 15:06:32 ERROR nova.rpc.amqp [req-90cca942-5980-4ebe-8139-282a6567e6f9 5b963fedd517476f899bd73a7fad4d06 18cdc649708644a68030088165282e05] Exception during message handling\n/var/log/nova/nova-network.log:2012-04-09 15:06:32 ERROR nova.rpc.amqp [req-90cca942-5980-4ebe-8139-282a6567e6f9 5b963fedd517476f899bd73a7fad4d06 18cdc649708644a68030088165282e05] Returning exception Floating ip not found for id 99923926838806. to caller\n/var/log/nova/nova-network.log:2012-04-09 15:06:32 ERROR nova.rpc.amqp [req-90cca942-5980-4ebe-8139-282a6567e6f9 5b963fedd517476f899bd73a7fad4d06 18cdc649708644a68030088165282e05] ['Traceback (most recent call last):\\n', '  File \"/usr/lib/python2.7/dist-packages/nova/rpc/amqp.py\", line 252, in _process_data\\n    rval = node_func(context=ctxt, **node_args)\\n', '  File \"/usr/lib/python2.7/dist-packages/nova/network/manager.py\", line 258, in wrapped\\n    return func(self, context, *args, **kwargs)\\n', '  File \"/usr/lib/python2.7/dist-packages/nova/network/manager.py\", line 555, in get_floating_ip\\n    return dict(self.db.floating_ip_get(context, id).iteritems())\\n', '  File \"/usr/lib/python2.7/dist-packages/nova/db/api.py\", line 232, in floating_ip_get\\n    return IMPL.floating_ip_get(context, id)\\n', '  File \"/usr/lib/python2.7/dist-packages/nova/db/sqlalchemy/api.py\", line 120, in wrapper\\n    return f(*args, **kwargs)\\n', '  File \"/usr/lib/python2.7/dist-packages/nova/db/sqlalchemy/api.py\", line 613, in floating_ip_get\\n    raise exception.FloatingIpNotFound(id=id)\\n', 'FloatingIpNotFound: Floating ip not found for id 99923926838806.\\n']\n\n\n/var/log/nova/nova-network.log:2012-04-09 15:06:32 ERROR nova.rpc.amqp [req-a9345519-8aab-4591-8c1b-532416b0e2ac 5b963fedd517476f899bd73a7fad4d06 18cdc649708644a68030088165282e05] Exception during message handling\n/var/log/nova/nova-network.log:2012-04-09 15:06:32 ERROR nova.rpc.amqp [req-a9345519-8aab-4591-8c1b-532416b0e2ac 5b963fedd517476f899bd73a7fad4d06 18cdc649708644a68030088165282e05] Returning exception Floating ip not found for address 0.0.0.0. to caller\n/var/log/nova/nova-network.log:2012-04-09 15:06:32 ERROR nova.rpc.amqp [req-a9345519-8aab-4591-8c1b-532416b0e2ac 5b963fedd517476f899bd73a7fad4d06 18cdc649708644a68030088165282e05] ['Traceback (most recent call last):\\n', '  File \"/usr/lib/python2.7/dist-packages/nova/rpc/amqp.py\", line 252, in _process_data\\n    rval = node_func(context=ctxt, **node_args)\\n', '  File \"/usr/lib/python2.7/dist-packages/nova/network/manager.py\", line 258, in wrapped\\n    return func(self, context, *args, **kwargs)\\n', '  File \"/usr/lib/python2.7/dist-packages/nova/network/manager.py\", line 567, in get_floating_ip_by_address\\n    address).iteritems())\\n', '  File \"/usr/lib/python2.7/dist-packages/nova/db/api.py\", line 304, in floating_ip_get_by_address\\n    return IMPL.floating_ip_get_by_address(context, address)\\n', '  File \"/usr/lib/python2.7/dist-packages/nova/db/sqlalchemy/api.py\", line 120, in wrapper\\n    return f(*args, **kwargs)\\n', '  File \"/usr/lib/python2.7/dist-packages/nova/db/sqlalchemy/api.py\", line 774, in floating_ip_get_by_address\\n    raise exception.FloatingIpNotFoundForAddress(address=address)\\n', 'FloatingIpNotFoundForAddress: Floating ip not found for address 0.0.0.0.\\n']\n/", 
    "tags": [], 
    "importance": "Low", 
    "heat": 12, 
    "link": "https://bugs.launchpad.net/nova/+bug/977536", 
    "owner": "https://api.launchpad.net/1.0/~sulochan-acharya", 
    "id": 977536, 
    "index": 526, 
    "openned": "2012-04-09 20:48:28.322852+00:00", 
    "created": "2012-04-09 20:48:28.322852+00:00", 
    "title": "API attempt to get non-existing floating shows error in log", 
    "comments": [
        {
            "content": "Tempest has a number of negative test cases that check for failure codes from the API calls. But some of these are treated as errors with tracebacks in the log. Here are two examples from the floating ip tests. I have been struggling with this general issue while stress testing nova.  There needs to be some way to scan a log file, or use publish_errors,  and understand if the system is misbehaving. Use of the ERROR log level would be a good way to do that but there are too many places where log.error or log.exception is called that should really be DEBUG or INFO. I think this is as a huge problem for testing.\n\n\n\n/var/log/nova/nova-network.log:2012-04-09 15:06:32 ERROR nova.rpc.amqp [req-90cca942-5980-4ebe-8139-282a6567e6f9 5b963fedd517476f899bd73a7fad4d06 18cdc649708644a68030088165282e05] Exception during message handling\n/var/log/nova/nova-network.log:2012-04-09 15:06:32 ERROR nova.rpc.amqp [req-90cca942-5980-4ebe-8139-282a6567e6f9 5b963fedd517476f899bd73a7fad4d06 18cdc649708644a68030088165282e05] Returning exception Floating ip not found for id 99923926838806. to caller\n/var/log/nova/nova-network.log:2012-04-09 15:06:32 ERROR nova.rpc.amqp [req-90cca942-5980-4ebe-8139-282a6567e6f9 5b963fedd517476f899bd73a7fad4d06 18cdc649708644a68030088165282e05] ['Traceback (most recent call last):\\n', '  File \"/usr/lib/python2.7/dist-packages/nova/rpc/amqp.py\", line 252, in _process_data\\n    rval = node_func(context=ctxt, **node_args)\\n', '  File \"/usr/lib/python2.7/dist-packages/nova/network/manager.py\", line 258, in wrapped\\n    return func(self, context, *args, **kwargs)\\n', '  File \"/usr/lib/python2.7/dist-packages/nova/network/manager.py\", line 555, in get_floating_ip\\n    return dict(self.db.floating_ip_get(context, id).iteritems())\\n', '  File \"/usr/lib/python2.7/dist-packages/nova/db/api.py\", line 232, in floating_ip_get\\n    return IMPL.floating_ip_get(context, id)\\n', '  File \"/usr/lib/python2.7/dist-packages/nova/db/sqlalchemy/api.py\", line 120, in wrapper\\n    return f(*args, **kwargs)\\n', '  File \"/usr/lib/python2.7/dist-packages/nova/db/sqlalchemy/api.py\", line 613, in floating_ip_get\\n    raise exception.FloatingIpNotFound(id=id)\\n', 'FloatingIpNotFound: Floating ip not found for id 99923926838806.\\n']\n\n\n/var/log/nova/nova-network.log:2012-04-09 15:06:32 ERROR nova.rpc.amqp [req-a9345519-8aab-4591-8c1b-532416b0e2ac 5b963fedd517476f899bd73a7fad4d06 18cdc649708644a68030088165282e05] Exception during message handling\n/var/log/nova/nova-network.log:2012-04-09 15:06:32 ERROR nova.rpc.amqp [req-a9345519-8aab-4591-8c1b-532416b0e2ac 5b963fedd517476f899bd73a7fad4d06 18cdc649708644a68030088165282e05] Returning exception Floating ip not found for address 0.0.0.0. to caller\n/var/log/nova/nova-network.log:2012-04-09 15:06:32 ERROR nova.rpc.amqp [req-a9345519-8aab-4591-8c1b-532416b0e2ac 5b963fedd517476f899bd73a7fad4d06 18cdc649708644a68030088165282e05] ['Traceback (most recent call last):\\n', '  File \"/usr/lib/python2.7/dist-packages/nova/rpc/amqp.py\", line 252, in _process_data\\n    rval = node_func(context=ctxt, **node_args)\\n', '  File \"/usr/lib/python2.7/dist-packages/nova/network/manager.py\", line 258, in wrapped\\n    return func(self, context, *args, **kwargs)\\n', '  File \"/usr/lib/python2.7/dist-packages/nova/network/manager.py\", line 567, in get_floating_ip_by_address\\n    address).iteritems())\\n', '  File \"/usr/lib/python2.7/dist-packages/nova/db/api.py\", line 304, in floating_ip_get_by_address\\n    return IMPL.floating_ip_get_by_address(context, address)\\n', '  File \"/usr/lib/python2.7/dist-packages/nova/db/sqlalchemy/api.py\", line 120, in wrapper\\n    return f(*args, **kwargs)\\n', '  File \"/usr/lib/python2.7/dist-packages/nova/db/sqlalchemy/api.py\", line 774, in floating_ip_get_by_address\\n    raise exception.FloatingIpNotFoundForAddress(address=address)\\n', 'FloatingIpNotFoundForAddress: Floating ip not found for address 0.0.0.0.\\n']\n/", 
            "date_created": "2012-04-09 20:48:28.322852+00:00", 
            "author": "https://api.launchpad.net/1.0/~david-kranz"
        }, 
        {
            "content": "Or maybe CRITICAL should be used for internal errors.", 
            "date_created": "2012-04-09 20:49:33.570010+00:00", 
            "author": "https://api.launchpad.net/1.0/~david-kranz"
        }, 
        {
            "content": "Things that can be triggered from black box testing shouldn't trigger ERRORs. I think the right way to fix that is to catch all abusive ERRORs and turn them into \"normal\" cases.\r\n\r\nThis bug should be turned into a list of specific actions, or replaced by a set of bugs.", 
            "date_created": "2012-06-07 09:58:58.994015+00:00", 
            "author": "https://api.launchpad.net/1.0/~ttx"
        }, 
        {
            "content": "Agreed. I changed the title of this bug to be for this specific case.", 
            "date_created": "2012-06-07 13:11:41.145206+00:00", 
            "author": "https://api.launchpad.net/1.0/~david-kranz"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/13132", 
            "date_created": "2012-09-17 16:51:27.837852+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/13132\nCommitted: http://github.com/openstack/nova/commit/9a303f2cc231f5d43257ebced5b1167c08d32648\nSubmitter: Jenkins\nBranch:    master\n\ncommit 9a303f2cc231f5d43257ebced5b1167c08d32648\nAuthor: Sulochan Acharya <email address hidden>\nDate:   Mon Sep 17 11:42:07 2012 -0500\n\n    Catch NotFound exception in FloatingIP add/remove\n    \n    Catch the FloatingIPNotFoundForAddress exception for add/remove\n    operations in floating ip extension for non existing floating ips.\n    \n    Fixes bug 977536\n    \n    Change-Id: Ied450aa56ef7a52a015c6d78a099d445ab6258b6\n", 
            "date_created": "2012-10-01 21:54:43.150837+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2012-11-21 09:59:53.303592+00:00"
}