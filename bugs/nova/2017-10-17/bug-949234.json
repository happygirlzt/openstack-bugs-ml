{
    "status": "Won't Fix", 
    "last_updated": "2014-06-06 07:05:35.517013+00:00", 
    "description": "All networks which belongs to default tenant have broken dhcp configuration generation. IP addresses allocated from such networks are not returned by get_dhcp_hosts_text function from quantum/manager.py file. To fix this we need to change line #665 from:\n\nips = self.ipam.get_allocated_ips(context, subnet_id, project_id)\n\nto:\n\nips = self.ipam.get_allocated_ips(context, subnet_id, None)\n\n\nSo the functions will return all allocated ips in this network as we have single dhcp server for all tenants in particular network.\n\nEventual we can modify call to get_dhcp_hosts_text in functions enable_dhcp,update_dhcp to   set project_id as None.", 
    "tags": [
        "quantum-manager"
    ], 
    "importance": "Medium", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/949234", 
    "owner": "None", 
    "id": 949234, 
    "index": 2792, 
    "openned": "2012-03-07 18:59:46.791237+00:00", 
    "created": "2012-03-07 17:55:35.535333+00:00", 
    "title": "Quantum + Melange: DHCP generation for networks owned by default tenant is broken", 
    "comments": [
        {
            "content": "All networks which belongs to default tenant have broken dhcp configuration generation. IP addresses allocated from such networks are no returned by get_dhcp_hosts_text function from quantum/manager.py file. To fix this we need to change line #665 from:\n\nips = self.ipam.get_allocated_ips(context, subnet_id, project_id)\n\nto:\n\nips = self.ipam.get_allocated_ips(context, subnet_id, None)\n\n\nSo the functions will return all allocated ips in this network.", 
            "date_created": "2012-03-07 17:55:35.535333+00:00", 
            "author": "https://api.launchpad.net/1.0/~ss7pro"
        }, 
        {
            "content": "Thanks for reporting this Tomasz!\n\nLooking at the code, this does look like a bug.  \n\nI do not believe the change suggested above is correct though, as it would only work if all networks were assigned to the default tenant.  Rather, the project_id  passed to get_allocated_ips should be the project_id of the network, not the project_id of the VM.  This means it will correctly be None for networks belonging to the default tenant, but set for networks belonging to a particular tenant.  Hence, I think we should grab the project_id from the networks object within the for-loop in enable dhcp, and pass that in, instead of the existing code that always passing in the VM's project id: \n\n\ndiff --git a/nova/network/quantum/manager.py b/nova/network/quantum/manager.py\nindex 16e782f..96418ae 100644\n--- a/nova/network/quantum/manager.py\n+++ b/nova/network/quantum/manager.py\n@@ -452,7 +452,7 @@ class QuantumManager(manager.FloatingIP, manager.FlatManager):\n                         quantum_net_id, interface_id)\n \n             hosts = self.get_dhcp_hosts_text(context,\n-                subnet['network_id'], project_id)\n+                subnet['network_id'], network_ref['project_id'])\n             self.driver.update_dhcp_hostfile_with_text(interface_id, hosts)\n             self.driver.restart_dhcp(context, interface_id, network_ref)\n\nTomasz, are you able to test out this patch and confirm? ", 
            "date_created": "2012-03-07 18:58:21.806160+00:00", 
            "author": "https://api.launchpad.net/1.0/~danwent"
        }, 
        {
            "content": "Hi,\n\nPatch works but please remember that update_dhcp is also calling\nget_dhcp_hosts_text.\n\nRegarding your comments I don't catch the idea why dhcp config\ngeneration needs to be aware of tenant_id. IMHO network_id is enough\nto fetch hosts which are placed in a given subnet.\n\n\nOn Wed, Mar 7, 2012 at 7:58 PM, dan wendlandt <email address hidden> wrote:\n> Thanks for reporting this Tomasz!\n>\n> Looking at the code, this does look like a bug.\n>\n> I do not believe the change suggested above is correct though, as it\n> would only work if all networks were assigned to the default tenant.\n> Rather, the project_id \u00a0passed to get_allocated_ips should be the\n> project_id of the network, not the project_id of the VM. \u00a0This means it\n> will correctly be None for networks belonging to the default tenant, but\n> set for networks belonging to a particular tenant. \u00a0Hence, I think we\n> should grab the project_id from the networks object within the for-loop\n> in enable dhcp, and pass that in, instead of the existing code that\n> always passing in the VM's project id:\n>\n>\n> diff --git a/nova/network/quantum/manager.py b/nova/network/quantum/manager.py\n> index 16e782f..96418ae 100644\n> --- a/nova/network/quantum/manager.py\n> +++ b/nova/network/quantum/manager.py\n> @@ -452,7 +452,7 @@ class QuantumManager(manager.FloatingIP, manager.FlatManager):\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 quantum_net_id, interface_id)\n>\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 hosts = self.get_dhcp_hosts_text(context,\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0subnet['network_id'], project_id)\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0subnet['network_id'], network_ref['project_id'])\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 self.driver.update_dhcp_hostfile_with_text(interface_id, hosts)\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 self.driver.restart_dhcp(context, interface_id, network_ref)\n>\n> Tomasz, are you able to test out this patch and confirm?\n>\n> ** Also affects: nova\n> \u00a0 Importance: Undecided\n> \u00a0 \u00a0 \u00a0 Status: New\n>\n> --\n> You received this bug notification because you are subscribed to the bug\n> report.\n> https://bugs.launchpad.net/bugs/949234\n>\n> Title:\n> \u00a0Quantum DHCP generation for networks owned by default tenant is broken\n>\n> Status in OpenStack Compute (Nova):\n> \u00a0New\n> Status in OpenStack Quantum (virtual network service):\n> \u00a0Confirmed\n>\n> Bug description:\n> \u00a0All networks which belongs to default tenant have broken dhcp\n> \u00a0configuration generation. IP addresses allocated from such networks\n> \u00a0are not returned by get_dhcp_hosts_text function from\n> \u00a0quantum/manager.py file. To fix this we need to change line #665 from:\n>\n> \u00a0ips = self.ipam.get_allocated_ips(context, subnet_id, project_id)\n>\n> \u00a0to:\n>\n> \u00a0ips = self.ipam.get_allocated_ips(context, subnet_id, None)\n>\n>\n> \u00a0So the functions will return all allocated ips in this network as we have single dhcp server for all tenants in particular network.\n>\n> \u00a0Eventual we can modify call to get_dhcp_hosts_text in functions\n> \u00a0enable_dhcp,update_dhcp to \u00a0 set project_id as None.\n>\n> To manage notifications about this bug go to:\n> https://bugs.launchpad.net/nova/+bug/949234/+subscriptions\n\n\n\n-- \nTomasz Paszkowski\nSS7, Asterisk, SAN, Datacenter, Cloud Computing\n+48500166299\n", 
            "date_created": "2012-03-07 20:27:01+00:00", 
            "author": "https://api.launchpad.net/1.0/~ss7pro"
        }, 
        {
            "content": "Hi Tomasz,\n\nI haven't had a chance to look at this in detail, just enough to know that\nalways setting the project_id to None wasn't the right approach.\n\nI agree, update_dhcp seems to have the same issue.  Same fix of getting the\nproject_id from the net instead should fix it.\n\nIn terms of why project_id is passed in, are you using Melange?  If so, the\nproject_id is needed to make any call to melange.  If you are using the\ndefault nova IPAM lib, I don't believe project_id is used at all, and thus\nwould be surprised if you saw this issue at all (though again, I still need\nto look at the code in more detail).\n\n\nOn Wed, Mar 7, 2012 at 12:27 PM, Tomasz Paszkowski <\n<email address hidden>> wrote:\n\n> Hi,\n>\n> Patch works but please remember that update_dhcp is also calling\n> get_dhcp_hosts_text.\n>\n> Regarding your comments I don't catch the idea why dhcp config\n> generation needs to be aware of tenant_id. IMHO network_id is enough\n> to fetch hosts which are placed in a given subnet.\n>\n>\n> On Wed, Mar 7, 2012 at 7:58 PM, dan wendlandt <email address hidden>\n> wrote:\n> > Thanks for reporting this Tomasz!\n> >\n> > Looking at the code, this does look like a bug.\n> >\n> > I do not believe the change suggested above is correct though, as it\n> > would only work if all networks were assigned to the default tenant.\n> > Rather, the project_id  passed to get_allocated_ips should be the\n> > project_id of the network, not the project_id of the VM.  This means it\n> > will correctly be None for networks belonging to the default tenant, but\n> > set for networks belonging to a particular tenant.  Hence, I think we\n> > should grab the project_id from the networks object within the for-loop\n> > in enable dhcp, and pass that in, instead of the existing code that\n> > always passing in the VM's project id:\n> >\n> >\n> > diff --git a/nova/network/quantum/manager.py\n> b/nova/network/quantum/manager.py\n> > index 16e782f..96418ae 100644\n> > --- a/nova/network/quantum/manager.py\n> > +++ b/nova/network/quantum/manager.py\n> > @@ -452,7 +452,7 @@ class QuantumManager(manager.FloatingIP,\n> manager.FlatManager):\n> >                         quantum_net_id, interface_id)\n> >\n> >             hosts = self.get_dhcp_hosts_text(context,\n> > -                subnet['network_id'], project_id)\n> > +                subnet['network_id'], network_ref['project_id'])\n> >             self.driver.update_dhcp_hostfile_with_text(interface_id,\n> hosts)\n> >             self.driver.restart_dhcp(context, interface_id, network_ref)\n> >\n> > Tomasz, are you able to test out this patch and confirm?\n> >\n> > ** Also affects: nova\n> >   Importance: Undecided\n> >       Status: New\n> >\n> > --\n> > You received this bug notification because you are subscribed to the bug\n> > report.\n> > https://bugs.launchpad.net/bugs/949234\n> >\n> > Title:\n> >  Quantum DHCP generation for networks owned by default tenant is broken\n> >\n> > Status in OpenStack Compute (Nova):\n> >  New\n> > Status in OpenStack Quantum (virtual network service):\n> >  Confirmed\n> >\n> > Bug description:\n> >  All networks which belongs to default tenant have broken dhcp\n> >  configuration generation. IP addresses allocated from such networks\n> >  are not returned by get_dhcp_hosts_text function from\n> >  quantum/manager.py file. To fix this we need to change line #665 from:\n> >\n> >  ips = self.ipam.get_allocated_ips(context, subnet_id, project_id)\n> >\n> >  to:\n> >\n> >  ips = self.ipam.get_allocated_ips(context, subnet_id, None)\n> >\n> >\n> >  So the functions will return all allocated ips in this network as we\n> have single dhcp server for all tenants in particular network.\n> >\n> >  Eventual we can modify call to get_dhcp_hosts_text in functions\n> >  enable_dhcp,update_dhcp to   set project_id as None.\n> >\n> > To manage notifications about this bug go to:\n> > https://bugs.launchpad.net/nova/+bug/949234/+subscriptions\n>\n>\n> --\n> Tomasz Paszkowski\n> SS7, Asterisk, SAN, Datacenter, Cloud Computing\n> +48500166299\n>\n> --\n> You received this bug notification because you are a member of Netstack\n> Core Developers, which is subscribed to quantum.\n> https://bugs.launchpad.net/bugs/949234\n>\n> Title:\n>  Quantum DHCP generation for networks owned by default tenant is broken\n>\n> Status in OpenStack Compute (Nova):\n>  New\n> Status in OpenStack Quantum (virtual network service):\n>  Confirmed\n>\n> Bug description:\n>  All networks which belongs to default tenant have broken dhcp\n>  configuration generation. IP addresses allocated from such networks\n>  are not returned by get_dhcp_hosts_text function from\n>  quantum/manager.py file. To fix this we need to change line #665 from:\n>\n>  ips = self.ipam.get_allocated_ips(context, subnet_id, project_id)\n>\n>  to:\n>\n>  ips = self.ipam.get_allocated_ips(context, subnet_id, None)\n>\n>\n>  So the functions will return all allocated ips in this network as we have\n> single dhcp server for all tenants in particular network.\n>\n>  Eventual we can modify call to get_dhcp_hosts_text in functions\n>  enable_dhcp,update_dhcp to   set project_id as None.\n>\n> To manage notifications about this bug go to:\n> https://bugs.launchpad.net/nova/+bug/949234/+subscriptions\n>\n\n\n\n-- \n~~~~~~~~~~~~~~~~~~~~~~~~~~~\nDan Wendlandt\nNicira Networks: www.nicira.com\ntwitter: danwendlandt\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n", 
            "date_created": "2012-03-07 20:45:34+00:00", 
            "author": "https://api.launchpad.net/1.0/~danwent"
        }, 
        {
            "content": "Hi\n\nI have double checked the code of quantum and melange. The\nproject/tenant id is ofcourse used but it's optional for getting the\nlist of allocated_ips and it using this var dosen't bring any\nadditional value. I may be wrong but I'am just curious why someone\nimplemented it this way :-)))\n\n\n\nDnia 07-03-2012 o godz. 21:55 dan wendlandt\n<email address hidden> napisa\u0142(a):\n\n> Hi Tomasz,\n>\n> I haven't had a chance to look at this in detail, just enough to know that\n> always setting the project_id to None wasn't the right approach.\n>\n> I agree, update_dhcp seems to have the same issue.  Same fix of getting the\n> project_id from the net instead should fix it.\n>\n> In terms of why project_id is passed in, are you using Melange?  If so, the\n> project_id is needed to make any call to melange.  If you are using the\n> default nova IPAM lib, I don't believe project_id is used at all, and thus\n> would be surprised if you saw this issue at all (though again, I still need\n> to look at the code in more detail).\n>\n>\n> On Wed, Mar 7, 2012 at 12:27 PM, Tomasz Paszkowski <\n> <email address hidden>> wrote:\n>\n>> Hi,\n>>\n>> Patch works but please remember that update_dhcp is also calling\n>> get_dhcp_hosts_text.\n>>\n>> Regarding your comments I don't catch the idea why dhcp config\n>> generation needs to be aware of tenant_id. IMHO network_id is enough\n>> to fetch hosts which are placed in a given subnet.\n>>\n>>\n>> On Wed, Mar 7, 2012 at 7:58 PM, dan wendlandt <email address hidden>\n>> wrote:\n>>> Thanks for reporting this Tomasz!\n>>>\n>>> Looking at the code, this does look like a bug.\n>>>\n>>> I do not believe the change suggested above is correct though, as it\n>>> would only work if all networks were assigned to the default tenant.\n>>> Rather, the project_id  passed to get_allocated_ips should be the\n>>> project_id of the network, not the project_id of the VM.  This means it\n>>> will correctly be None for networks belonging to the default tenant, but\n>>> set for networks belonging to a particular tenant.  Hence, I think we\n>>> should grab the project_id from the networks object within the for-loop\n>>> in enable dhcp, and pass that in, instead of the existing code that\n>>> always passing in the VM's project id:\n>>>\n>>>\n>>> diff --git a/nova/network/quantum/manager.py\n>> b/nova/network/quantum/manager.py\n>>> index 16e782f..96418ae 100644\n>>> --- a/nova/network/quantum/manager.py\n>>> +++ b/nova/network/quantum/manager.py\n>>> @@ -452,7 +452,7 @@ class QuantumManager(manager.FloatingIP,\n>> manager.FlatManager):\n>>>                        quantum_net_id, interface_id)\n>>>\n>>>            hosts = self.get_dhcp_hosts_text(context,\n>>> -                subnet['network_id'], project_id)\n>>> +                subnet['network_id'], network_ref['project_id'])\n>>>            self.driver.update_dhcp_hostfile_with_text(interface_id,\n>> hosts)\n>>>            self.driver.restart_dhcp(context, interface_id, network_ref)\n>>>\n>>> Tomasz, are you able to test out this patch and confirm?\n>>>\n>>> ** Also affects: nova\n>>>  Importance: Undecided\n>>>      Status: New\n>>>\n>>> --\n>>> You received this bug notification because you are subscribed to the bug\n>>> report.\n>>> https://bugs.launchpad.net/bugs/949234\n>>>\n>>> Title:\n>>> Quantum DHCP generation for networks owned by default tenant is broken\n>>>\n>>> Status in OpenStack Compute (Nova):\n>>> New\n>>> Status in OpenStack Quantum (virtual network service):\n>>> Confirmed\n>>>\n>>> Bug description:\n>>> All networks which belongs to default tenant have broken dhcp\n>>> configuration generation. IP addresses allocated from such networks\n>>> are not returned by get_dhcp_hosts_text function from\n>>> quantum/manager.py file. To fix this we need to change line #665 from:\n>>>\n>>> ips = self.ipam.get_allocated_ips(context, subnet_id, project_id)\n>>>\n>>> to:\n>>>\n>>> ips = self.ipam.get_allocated_ips(context, subnet_id, None)\n>>>\n>>>\n>>> So the functions will return all allocated ips in this network as we\n>> have single dhcp server for all tenants in particular network.\n>>>\n>>> Eventual we can modify call to get_dhcp_hosts_text in functions\n>>> enable_dhcp,update_dhcp to   set project_id as None.\n>>>\n>>> To manage notifications about this bug go to:\n>>> https://bugs.launchpad.net/nova/+bug/949234/+subscriptions\n>>\n>>\n>> --\n>> Tomasz Paszkowski\n>> SS7, Asterisk, SAN, Datacenter, Cloud Computing\n>> +48500166299\n>>\n>> --\n>> You received this bug notification because you are a member of Netstack\n>> Core Developers, which is subscribed to quantum.\n>> https://bugs.launchpad.net/bugs/949234\n>>\n>> Title:\n>> Quantum DHCP generation for networks owned by default tenant is broken\n>>\n>> Status in OpenStack Compute (Nova):\n>> New\n>> Status in OpenStack Quantum (virtual network service):\n>> Confirmed\n>>\n>> Bug description:\n>> All networks which belongs to default tenant have broken dhcp\n>> configuration generation. IP addresses allocated from such networks\n>> are not returned by get_dhcp_hosts_text function from\n>> quantum/manager.py file. To fix this we need to change line #665 from:\n>>\n>> ips = self.ipam.get_allocated_ips(context, subnet_id, project_id)\n>>\n>> to:\n>>\n>> ips = self.ipam.get_allocated_ips(context, subnet_id, None)\n>>\n>>\n>> So the functions will return all allocated ips in this network as we have\n>> single dhcp server for all tenants in particular network.\n>>\n>> Eventual we can modify call to get_dhcp_hosts_text in functions\n>> enable_dhcp,update_dhcp to   set project_id as None.\n>>\n>> To manage notifications about this bug go to:\n>> https://bugs.launchpad.net/nova/+bug/949234/+subscriptions\n>>\n>\n>\n> --\n> ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n> Dan Wendlandt\n> Nicira Networks: www.nicira.com\n> twitter: danwendlandt\n> ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n>\n> --\n> You received this bug notification because you are subscribed to the bug\n> report.\n> https://bugs.launchpad.net/bugs/949234\n>\n> Title:\n>  Quantum DHCP generation for networks owned by default tenant is broken\n>\n> Status in OpenStack Compute (Nova):\n>  New\n> Status in OpenStack Quantum (virtual network service):\n>  Confirmed\n>\n> Bug description:\n>  All networks which belongs to default tenant have broken dhcp\n>  configuration generation. IP addresses allocated from such networks\n>  are not returned by get_dhcp_hosts_text function from\n>  quantum/manager.py file. To fix this we need to change line #665 from:\n>\n>  ips = self.ipam.get_allocated_ips(context, subnet_id, project_id)\n>\n>  to:\n>\n>  ips = self.ipam.get_allocated_ips(context, subnet_id, None)\n>\n>\n>  So the functions will return all allocated ips in this network as we have single dhcp server for all tenants in particular network.\n>\n>  Eventual we can modify call to get_dhcp_hosts_text in functions\n>  enable_dhcp,update_dhcp to   set project_id as None.\n>\n> To manage notifications about this bug go to:\n> https://bugs.launchpad.net/nova/+bug/949234/+subscriptions\n", 
            "date_created": "2012-03-07 22:28:56+00:00", 
            "author": "https://api.launchpad.net/1.0/~ss7pro"
        }, 
        {
            "content": "On Wed, Mar 7, 2012 at 2:28 PM, Tomasz Paszkowski <<email address hidden>\n> wrote:\n\n> Hi\n>\n> I have double checked the code of quantum and melange. The\n> project/tenant id is ofcourse used but it's optional for getting the\n> list of allocated_ips and it using this var dosen't bring any\n> additional value. I may be wrong but I'am just curious why someone\n> implemented it this way :-)))\n>\n\nIts not actually optional given how the code currently works.  It must be\nset for the code to work correctly if Melange is in use.  If you didn't\npass it into melange, we would always query IP addresses using the\n\"default\" tenant ID, which would be incorrect for any tenant-specific\nnetwork.\n\nIs it correct that you are using Melange?  I'm trying to confirm this, as\nif you are not using Melange, I would need to explore this more, as it\nseems like this is only a problem with Melange.\n\nDan\n\n\n\n>\n>\n> Dnia 07-03-2012 o godz. 21:55 dan wendlandt\n> <email address hidden> napisa\u0142(a):\n>\n> > Hi Tomasz,\n> >\n> > I haven't had a chance to look at this in detail, just enough to know\n> that\n> > always setting the project_id to None wasn't the right approach.\n> >\n> > I agree, update_dhcp seems to have the same issue.  Same fix of getting\n> the\n> > project_id from the net instead should fix it.\n> >\n> > In terms of why project_id is passed in, are you using Melange?  If so,\n> the\n> > project_id is needed to make any call to melange.  If you are using the\n> > default nova IPAM lib, I don't believe project_id is used at all, and\n> thus\n> > would be surprised if you saw this issue at all (though again, I still\n> need\n> > to look at the code in more detail).\n> >\n> >\n> > On Wed, Mar 7, 2012 at 12:27 PM, Tomasz Paszkowski <\n> > <email address hidden>> wrote:\n> >\n> >> Hi,\n> >>\n> >> Patch works but please remember that update_dhcp is also calling\n> >> get_dhcp_hosts_text.\n> >>\n> >> Regarding your comments I don't catch the idea why dhcp config\n> >> generation needs to be aware of tenant_id. IMHO network_id is enough\n> >> to fetch hosts which are placed in a given subnet.\n> >>\n> >>\n> >> On Wed, Mar 7, 2012 at 7:58 PM, dan wendlandt <\n> <email address hidden>>\n> >> wrote:\n> >>> Thanks for reporting this Tomasz!\n> >>>\n> >>> Looking at the code, this does look like a bug.\n> >>>\n> >>> I do not believe the change suggested above is correct though, as it\n> >>> would only work if all networks were assigned to the default tenant.\n> >>> Rather, the project_id  passed to get_allocated_ips should be the\n> >>> project_id of the network, not the project_id of the VM.  This means it\n> >>> will correctly be None for networks belonging to the default tenant,\n> but\n> >>> set for networks belonging to a particular tenant.  Hence, I think we\n> >>> should grab the project_id from the networks object within the for-loop\n> >>> in enable dhcp, and pass that in, instead of the existing code that\n> >>> always passing in the VM's project id:\n> >>>\n> >>>\n> >>> diff --git a/nova/network/quantum/manager.py\n> >> b/nova/network/quantum/manager.py\n> >>> index 16e782f..96418ae 100644\n> >>> --- a/nova/network/quantum/manager.py\n> >>> +++ b/nova/network/quantum/manager.py\n> >>> @@ -452,7 +452,7 @@ class QuantumManager(manager.FloatingIP,\n> >> manager.FlatManager):\n> >>>                        quantum_net_id, interface_id)\n> >>>\n> >>>            hosts = self.get_dhcp_hosts_text(context,\n> >>> -                subnet['network_id'], project_id)\n> >>> +                subnet['network_id'], network_ref['project_id'])\n> >>>            self.driver.update_dhcp_hostfile_with_text(interface_id,\n> >> hosts)\n> >>>            self.driver.restart_dhcp(context, interface_id, network_ref)\n> >>>\n> >>> Tomasz, are you able to test out this patch and confirm?\n> >>>\n> >>> ** Also affects: nova\n> >>>  Importance: Undecided\n> >>>      Status: New\n> >>>\n> >>> --\n> >>> You received this bug notification because you are subscribed to the\n> bug\n> >>> report.\n> >>> https://bugs.launchpad.net/bugs/949234\n> >>>\n> >>> Title:\n> >>> Quantum DHCP generation for networks owned by default tenant is broken\n> >>>\n> >>> Status in OpenStack Compute (Nova):\n> >>> New\n> >>> Status in OpenStack Quantum (virtual network service):\n> >>> Confirmed\n> >>>\n> >>> Bug description:\n> >>> All networks which belongs to default tenant have broken dhcp\n> >>> configuration generation. IP addresses allocated from such networks\n> >>> are not returned by get_dhcp_hosts_text function from\n> >>> quantum/manager.py file. To fix this we need to change line #665 from:\n> >>>\n> >>> ips = self.ipam.get_allocated_ips(context, subnet_id, project_id)\n> >>>\n> >>> to:\n> >>>\n> >>> ips = self.ipam.get_allocated_ips(context, subnet_id, None)\n> >>>\n> >>>\n> >>> So the functions will return all allocated ips in this network as we\n> >> have single dhcp server for all tenants in particular network.\n> >>>\n> >>> Eventual we can modify call to get_dhcp_hosts_text in functions\n> >>> enable_dhcp,update_dhcp to   set project_id as None.\n> >>>\n> >>> To manage notifications about this bug go to:\n> >>> https://bugs.launchpad.net/nova/+bug/949234/+subscriptions\n> >>\n> >>\n> >> --\n> >> Tomasz Paszkowski\n> >> SS7, Asterisk, SAN, Datacenter, Cloud Computing\n> >> +48500166299\n> >>\n> >> --\n> >> You received this bug notification because you are a member of Netstack\n> >> Core Developers, which is subscribed to quantum.\n> >> https://bugs.launchpad.net/bugs/949234\n> >>\n> >> Title:\n> >> Quantum DHCP generation for networks owned by default tenant is broken\n> >>\n> >> Status in OpenStack Compute (Nova):\n> >> New\n> >> Status in OpenStack Quantum (virtual network service):\n> >> Confirmed\n> >>\n> >> Bug description:\n> >> All networks which belongs to default tenant have broken dhcp\n> >> configuration generation. IP addresses allocated from such networks\n> >> are not returned by get_dhcp_hosts_text function from\n> >> quantum/manager.py file. To fix this we need to change line #665 from:\n> >>\n> >> ips = self.ipam.get_allocated_ips(context, subnet_id, project_id)\n> >>\n> >> to:\n> >>\n> >> ips = self.ipam.get_allocated_ips(context, subnet_id, None)\n> >>\n> >>\n> >> So the functions will return all allocated ips in this network as we\n> have\n> >> single dhcp server for all tenants in particular network.\n> >>\n> >> Eventual we can modify call to get_dhcp_hosts_text in functions\n> >> enable_dhcp,update_dhcp to   set project_id as None.\n> >>\n> >> To manage notifications about this bug go to:\n> >> https://bugs.launchpad.net/nova/+bug/949234/+subscriptions\n> >>\n> >\n> >\n> > --\n> > ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n> > Dan Wendlandt\n> > Nicira Networks: www.nicira.com\n> > twitter: danwendlandt\n> > ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n> >\n> > --\n> > You received this bug notification because you are subscribed to the bug\n> > report.\n> > https://bugs.launchpad.net/bugs/949234\n> >\n> > Title:\n> >  Quantum DHCP generation for networks owned by default tenant is broken\n> >\n> > Status in OpenStack Compute (Nova):\n> >  New\n> > Status in OpenStack Quantum (virtual network service):\n> >  Confirmed\n> >\n> > Bug description:\n> >  All networks which belongs to default tenant have broken dhcp\n> >  configuration generation. IP addresses allocated from such networks\n> >  are not returned by get_dhcp_hosts_text function from\n> >  quantum/manager.py file. To fix this we need to change line #665 from:\n> >\n> >  ips = self.ipam.get_allocated_ips(context, subnet_id, project_id)\n> >\n> >  to:\n> >\n> >  ips = self.ipam.get_allocated_ips(context, subnet_id, None)\n> >\n> >\n> >  So the functions will return all allocated ips in this network as we\n> have single dhcp server for all tenants in particular network.\n> >\n> >  Eventual we can modify call to get_dhcp_hosts_text in functions\n> >  enable_dhcp,update_dhcp to   set project_id as None.\n> >\n> > To manage notifications about this bug go to:\n> > https://bugs.launchpad.net/nova/+bug/949234/+subscriptions\n>\n> --\n> You received this bug notification because you are a member of Netstack\n> Core Developers, which is subscribed to quantum.\n> https://bugs.launchpad.net/bugs/949234\n>\n> Title:\n>  Quantum DHCP generation for networks owned by default tenant is broken\n>\n> Status in OpenStack Compute (Nova):\n>  New\n> Status in OpenStack Quantum (virtual network service):\n>  Confirmed\n>\n> Bug description:\n>  All networks which belongs to default tenant have broken dhcp\n>  configuration generation. IP addresses allocated from such networks\n>  are not returned by get_dhcp_hosts_text function from\n>  quantum/manager.py file. To fix this we need to change line #665 from:\n>\n>  ips = self.ipam.get_allocated_ips(context, subnet_id, project_id)\n>\n>  to:\n>\n>  ips = self.ipam.get_allocated_ips(context, subnet_id, None)\n>\n>\n>  So the functions will return all allocated ips in this network as we have\n> single dhcp server for all tenants in particular network.\n>\n>  Eventual we can modify call to get_dhcp_hosts_text in functions\n>  enable_dhcp,update_dhcp to   set project_id as None.\n>\n> To manage notifications about this bug go to:\n> https://bugs.launchpad.net/nova/+bug/949234/+subscriptions\n>\n\n\n\n-- \n~~~~~~~~~~~~~~~~~~~~~~~~~~~\nDan Wendlandt\nNicira Networks: www.nicira.com\ntwitter: danwendlandt\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n", 
            "date_created": "2012-03-07 22:57:02+00:00", 
            "author": "https://api.launchpad.net/1.0/~danwent"
        }, 
        {
            "content": "Bumping down to high, as this seems to only affect Melange, which is a non-default, but still supported, config. ", 
            "date_created": "2012-03-08 00:41:12.844540+00:00", 
            "author": "https://api.launchpad.net/1.0/~danwent"
        }, 
        {
            "content": "Yes I'am using melange. Sorry for taking your time but now I see that\nproject_id is needed to get allocations only for a particular network\n! Many thanks for your time.\n\n\n\n\nOn Wed, Mar 7, 2012 at 11:57 PM, dan wendlandt\n<email address hidden> wrote:\n> On Wed, Mar 7, 2012 at 2:28 PM, Tomasz Paszkowski <<email address hidden>\n>> wrote:\n>\n>> Hi\n>>\n>> I have double checked the code of quantum and melange. The\n>> project/tenant id is ofcourse used but it's optional for getting the\n>> list of allocated_ips and it using this var dosen't bring any\n>> additional value. I may be wrong but I'am just curious why someone\n>> implemented it this way :-)))\n>>\n>\n> Its not actually optional given how the code currently works. \u00a0It must be\n> set for the code to work correctly if Melange is in use. \u00a0If you didn't\n> pass it into melange, we would always query IP addresses using the\n> \"default\" tenant ID, which would be incorrect for any tenant-specific\n> network.\n>\n> Is it correct that you are using Melange? \u00a0I'm trying to confirm this, as\n> if you are not using Melange, I would need to explore this more, as it\n> seems like this is only a problem with Melange.\n>\n> Dan\n>\n>\n>>\n>>\n>> Dnia 07-03-2012 o godz. 21:55 dan wendlandt\n>> <email address hidden> napisa\u0142(a):\n>>\n>> > Hi Tomasz,\n>> >\n>> > I haven't had a chance to look at this in detail, just enough to know\n>> that\n>> > always setting the project_id to None wasn't the right approach.\n>> >\n>> > I agree, update_dhcp seems to have the same issue. \u00a0Same fix of getting\n>> the\n>> > project_id from the net instead should fix it.\n>> >\n>> > In terms of why project_id is passed in, are you using Melange? \u00a0If so,\n>> the\n>> > project_id is needed to make any call to melange. \u00a0If you are using the\n>> > default nova IPAM lib, I don't believe project_id is used at all, and\n>> thus\n>> > would be surprised if you saw this issue at all (though again, I still\n>> need\n>> > to look at the code in more detail).\n>> >\n>> >\n>> > On Wed, Mar 7, 2012 at 12:27 PM, Tomasz Paszkowski <\n>> > <email address hidden>> wrote:\n>> >\n>> >> Hi,\n>> >>\n>> >> Patch works but please remember that update_dhcp is also calling\n>> >> get_dhcp_hosts_text.\n>> >>\n>> >> Regarding your comments I don't catch the idea why dhcp config\n>> >> generation needs to be aware of tenant_id. IMHO network_id is enough\n>> >> to fetch hosts which are placed in a given subnet.\n>> >>\n>> >>\n>> >> On Wed, Mar 7, 2012 at 7:58 PM, dan wendlandt <\n>> <email address hidden>>\n>> >> wrote:\n>> >>> Thanks for reporting this Tomasz!\n>> >>>\n>> >>> Looking at the code, this does look like a bug.\n>> >>>\n>> >>> I do not believe the change suggested above is correct though, as it\n>> >>> would only work if all networks were assigned to the default tenant.\n>> >>> Rather, the project_id \u00a0passed to get_allocated_ips should be the\n>> >>> project_id of the network, not the project_id of the VM. \u00a0This means it\n>> >>> will correctly be None for networks belonging to the default tenant,\n>> but\n>> >>> set for networks belonging to a particular tenant. \u00a0Hence, I think we\n>> >>> should grab the project_id from the networks object within the for-loop\n>> >>> in enable dhcp, and pass that in, instead of the existing code that\n>> >>> always passing in the VM's project id:\n>> >>>\n>> >>>\n>> >>> diff --git a/nova/network/quantum/manager.py\n>> >> b/nova/network/quantum/manager.py\n>> >>> index 16e782f..96418ae 100644\n>> >>> --- a/nova/network/quantum/manager.py\n>> >>> +++ b/nova/network/quantum/manager.py\n>> >>> @@ -452,7 +452,7 @@ class QuantumManager(manager.FloatingIP,\n>> >> manager.FlatManager):\n>> >>> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0quantum_net_id, interface_id)\n>> >>>\n>> >>> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0hosts = self.get_dhcp_hosts_text(context,\n>> >>> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0subnet['network_id'], project_id)\n>> >>> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0subnet['network_id'], network_ref['project_id'])\n>> >>> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0self.driver.update_dhcp_hostfile_with_text(interface_id,\n>> >> hosts)\n>> >>> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0self.driver.restart_dhcp(context, interface_id, network_ref)\n>> >>>\n>> >>> Tomasz, are you able to test out this patch and confirm?\n>> >>>\n>> >>> ** Also affects: nova\n>> >>> \u00a0Importance: Undecided\n>> >>> \u00a0 \u00a0 \u00a0Status: New\n>> >>>\n>> >>> --\n>> >>> You received this bug notification because you are subscribed to the\n>> bug\n>> >>> report.\n>> >>> https://bugs.launchpad.net/bugs/949234\n>> >>>\n>> >>> Title:\n>> >>> Quantum DHCP generation for networks owned by default tenant is broken\n>> >>>\n>> >>> Status in OpenStack Compute (Nova):\n>> >>> New\n>> >>> Status in OpenStack Quantum (virtual network service):\n>> >>> Confirmed\n>> >>>\n>> >>> Bug description:\n>> >>> All networks which belongs to default tenant have broken dhcp\n>> >>> configuration generation. IP addresses allocated from such networks\n>> >>> are not returned by get_dhcp_hosts_text function from\n>> >>> quantum/manager.py file. To fix this we need to change line #665 from:\n>> >>>\n>> >>> ips = self.ipam.get_allocated_ips(context, subnet_id, project_id)\n>> >>>\n>> >>> to:\n>> >>>\n>> >>> ips = self.ipam.get_allocated_ips(context, subnet_id, None)\n>> >>>\n>> >>>\n>> >>> So the functions will return all allocated ips in this network as we\n>> >> have single dhcp server for all tenants in particular network.\n>> >>>\n>> >>> Eventual we can modify call to get_dhcp_hosts_text in functions\n>> >>> enable_dhcp,update_dhcp to \u00a0 set project_id as None.\n>> >>>\n>> >>> To manage notifications about this bug go to:\n>> >>> https://bugs.launchpad.net/nova/+bug/949234/+subscriptions\n>> >>\n>> >>\n>> >> --\n>> >> Tomasz Paszkowski\n>> >> SS7, Asterisk, SAN, Datacenter, Cloud Computing\n>> >> +48500166299\n>> >>\n>> >> --\n>> >> You received this bug notification because you are a member of Netstack\n>> >> Core Developers, which is subscribed to quantum.\n>> >> https://bugs.launchpad.net/bugs/949234\n>> >>\n>> >> Title:\n>> >> Quantum DHCP generation for networks owned by default tenant is broken\n>> >>\n>> >> Status in OpenStack Compute (Nova):\n>> >> New\n>> >> Status in OpenStack Quantum (virtual network service):\n>> >> Confirmed\n>> >>\n>> >> Bug description:\n>> >> All networks which belongs to default tenant have broken dhcp\n>> >> configuration generation. IP addresses allocated from such networks\n>> >> are not returned by get_dhcp_hosts_text function from\n>> >> quantum/manager.py file. To fix this we need to change line #665 from:\n>> >>\n>> >> ips = self.ipam.get_allocated_ips(context, subnet_id, project_id)\n>> >>\n>> >> to:\n>> >>\n>> >> ips = self.ipam.get_allocated_ips(context, subnet_id, None)\n>> >>\n>> >>\n>> >> So the functions will return all allocated ips in this network as we\n>> have\n>> >> single dhcp server for all tenants in particular network.\n>> >>\n>> >> Eventual we can modify call to get_dhcp_hosts_text in functions\n>> >> enable_dhcp,update_dhcp to \u00a0 set project_id as None.\n>> >>\n>> >> To manage notifications about this bug go to:\n>> >> https://bugs.launchpad.net/nova/+bug/949234/+subscriptions\n>> >>\n>> >\n>> >\n>> > --\n>> > ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n>> > Dan Wendlandt\n>> > Nicira Networks: www.nicira.com\n>> > twitter: danwendlandt\n>> > ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n>> >\n>> > --\n>> > You received this bug notification because you are subscribed to the bug\n>> > report.\n>> > https://bugs.launchpad.net/bugs/949234\n>> >\n>> > Title:\n>> > \u00a0Quantum DHCP generation for networks owned by default tenant is broken\n>> >\n>> > Status in OpenStack Compute (Nova):\n>> > \u00a0New\n>> > Status in OpenStack Quantum (virtual network service):\n>> > \u00a0Confirmed\n>> >\n>> > Bug description:\n>> > \u00a0All networks which belongs to default tenant have broken dhcp\n>> > \u00a0configuration generation. IP addresses allocated from such networks\n>> > \u00a0are not returned by get_dhcp_hosts_text function from\n>> > \u00a0quantum/manager.py file. To fix this we need to change line #665 from:\n>> >\n>> > \u00a0ips = self.ipam.get_allocated_ips(context, subnet_id, project_id)\n>> >\n>> > \u00a0to:\n>> >\n>> > \u00a0ips = self.ipam.get_allocated_ips(context, subnet_id, None)\n>> >\n>> >\n>> > \u00a0So the functions will return all allocated ips in this network as we\n>> have single dhcp server for all tenants in particular network.\n>> >\n>> > \u00a0Eventual we can modify call to get_dhcp_hosts_text in functions\n>> > \u00a0enable_dhcp,update_dhcp to \u00a0 set project_id as None.\n>> >\n>> > To manage notifications about this bug go to:\n>> > https://bugs.launchpad.net/nova/+bug/949234/+subscriptions\n>>\n>> --\n>> You received this bug notification because you are a member of Netstack\n>> Core Developers, which is subscribed to quantum.\n>> https://bugs.launchpad.net/bugs/949234\n>>\n>> Title:\n>> \u00a0Quantum DHCP generation for networks owned by default tenant is broken\n>>\n>> Status in OpenStack Compute (Nova):\n>> \u00a0New\n>> Status in OpenStack Quantum (virtual network service):\n>> \u00a0Confirmed\n>>\n>> Bug description:\n>> \u00a0All networks which belongs to default tenant have broken dhcp\n>> \u00a0configuration generation. IP addresses allocated from such networks\n>> \u00a0are not returned by get_dhcp_hosts_text function from\n>> \u00a0quantum/manager.py file. To fix this we need to change line #665 from:\n>>\n>> \u00a0ips = self.ipam.get_allocated_ips(context, subnet_id, project_id)\n>>\n>> \u00a0to:\n>>\n>> \u00a0ips = self.ipam.get_allocated_ips(context, subnet_id, None)\n>>\n>>\n>> \u00a0So the functions will return all allocated ips in this network as we have\n>> single dhcp server for all tenants in particular network.\n>>\n>> \u00a0Eventual we can modify call to get_dhcp_hosts_text in functions\n>> \u00a0enable_dhcp,update_dhcp to \u00a0 set project_id as None.\n>>\n>> To manage notifications about this bug go to:\n>> https://bugs.launchpad.net/nova/+bug/949234/+subscriptions\n>>\n>\n>\n> --\n> ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n> Dan Wendlandt\n> Nicira Networks: www.nicira.com\n> twitter: danwendlandt\n> ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n>\n> --\n> You received this bug notification because you are subscribed to the bug\n> report.\n> https://bugs.launchpad.net/bugs/949234\n>\n> Title:\n> \u00a0Quantum DHCP generation for networks owned by default tenant is broken\n>\n> Status in OpenStack Compute (Nova):\n> \u00a0New\n> Status in OpenStack Quantum (virtual network service):\n> \u00a0Confirmed\n>\n> Bug description:\n> \u00a0All networks which belongs to default tenant have broken dhcp\n> \u00a0configuration generation. IP addresses allocated from such networks\n> \u00a0are not returned by get_dhcp_hosts_text function from\n> \u00a0quantum/manager.py file. To fix this we need to change line #665 from:\n>\n> \u00a0ips = self.ipam.get_allocated_ips(context, subnet_id, project_id)\n>\n> \u00a0to:\n>\n> \u00a0ips = self.ipam.get_allocated_ips(context, subnet_id, None)\n>\n>\n> \u00a0So the functions will return all allocated ips in this network as we have single dhcp server for all tenants in particular network.\n>\n> \u00a0Eventual we can modify call to get_dhcp_hosts_text in functions\n> \u00a0enable_dhcp,update_dhcp to \u00a0 set project_id as None.\n>\n> To manage notifications about this bug go to:\n> https://bugs.launchpad.net/nova/+bug/949234/+subscriptions\n\n\n\n-- \nTomasz Paszkowski\nSS7, Asterisk, SAN, Datacenter, Cloud Computing\n+48500166299\n", 
            "date_created": "2012-03-08 09:24:25+00:00", 
            "author": "https://api.launchpad.net/1.0/~ss7pro"
        }, 
        {
            "content": "Ok, I just need to find time to test the patch this morning, then I will\npush the change (unless you want to push the change yourself, in which\ncase, go ahead).\n\nDan\n\nOn Thu, Mar 8, 2012 at 1:24 AM, Tomasz Paszkowski <<email address hidden>\n> wrote:\n\n> Yes I'am using melange. Sorry for taking your time but now I see that\n> project_id is needed to get allocations only for a particular network\n> ! Many thanks for your time.\n>\n>\n>\n> On Wed, Mar 7, 2012 at 11:57 PM, dan wendlandt\n> <email address hidden> wrote:\n> > On Wed, Mar 7, 2012 at 2:28 PM, Tomasz Paszkowski <\n> <email address hidden>\n> >> wrote:\n> >\n> >> Hi\n> >>\n> >> I have double checked the code of quantum and melange. The\n> >> project/tenant id is ofcourse used but it's optional for getting the\n> >> list of allocated_ips and it using this var dosen't bring any\n> >> additional value. I may be wrong but I'am just curious why someone\n> >> implemented it this way :-)))\n> >>\n> >\n> > Its not actually optional given how the code currently works.  It must be\n> > set for the code to work correctly if Melange is in use.  If you didn't\n> > pass it into melange, we would always query IP addresses using the\n> > \"default\" tenant ID, which would be incorrect for any tenant-specific\n> > network.\n> >\n> > Is it correct that you are using Melange?  I'm trying to confirm this, as\n> > if you are not using Melange, I would need to explore this more, as it\n> > seems like this is only a problem with Melange.\n> >\n> > Dan\n> >\n> >\n> >>\n> >>\n> >> Dnia 07-03-2012 o godz. 21:55 dan wendlandt\n> >> <email address hidden> napisa\u0142(a):\n> >>\n> >> > Hi Tomasz,\n> >> >\n> >> > I haven't had a chance to look at this in detail, just enough to know\n> >> that\n> >> > always setting the project_id to None wasn't the right approach.\n> >> >\n> >> > I agree, update_dhcp seems to have the same issue.  Same fix of\n> getting\n> >> the\n> >> > project_id from the net instead should fix it.\n> >> >\n> >> > In terms of why project_id is passed in, are you using Melange?  If\n> so,\n> >> the\n> >> > project_id is needed to make any call to melange.  If you are using\n> the\n> >> > default nova IPAM lib, I don't believe project_id is used at all, and\n> >> thus\n> >> > would be surprised if you saw this issue at all (though again, I still\n> >> need\n> >> > to look at the code in more detail).\n> >> >\n> >> >\n> >> > On Wed, Mar 7, 2012 at 12:27 PM, Tomasz Paszkowski <\n> >> > <email address hidden>> wrote:\n> >> >\n> >> >> Hi,\n> >> >>\n> >> >> Patch works but please remember that update_dhcp is also calling\n> >> >> get_dhcp_hosts_text.\n> >> >>\n> >> >> Regarding your comments I don't catch the idea why dhcp config\n> >> >> generation needs to be aware of tenant_id. IMHO network_id is enough\n> >> >> to fetch hosts which are placed in a given subnet.\n> >> >>\n> >> >>\n> >> >> On Wed, Mar 7, 2012 at 7:58 PM, dan wendlandt <\n> >> <email address hidden>>\n> >> >> wrote:\n> >> >>> Thanks for reporting this Tomasz!\n> >> >>>\n> >> >>> Looking at the code, this does look like a bug.\n> >> >>>\n> >> >>> I do not believe the change suggested above is correct though, as it\n> >> >>> would only work if all networks were assigned to the default tenant.\n> >> >>> Rather, the project_id  passed to get_allocated_ips should be the\n> >> >>> project_id of the network, not the project_id of the VM.  This\n> means it\n> >> >>> will correctly be None for networks belonging to the default tenant,\n> >> but\n> >> >>> set for networks belonging to a particular tenant.  Hence, I think\n> we\n> >> >>> should grab the project_id from the networks object within the\n> for-loop\n> >> >>> in enable dhcp, and pass that in, instead of the existing code that\n> >> >>> always passing in the VM's project id:\n> >> >>>\n> >> >>>\n> >> >>> diff --git a/nova/network/quantum/manager.py\n> >> >> b/nova/network/quantum/manager.py\n> >> >>> index 16e782f..96418ae 100644\n> >> >>> --- a/nova/network/quantum/manager.py\n> >> >>> +++ b/nova/network/quantum/manager.py\n> >> >>> @@ -452,7 +452,7 @@ class QuantumManager(manager.FloatingIP,\n> >> >> manager.FlatManager):\n> >> >>>                        quantum_net_id, interface_id)\n> >> >>>\n> >> >>>            hosts = self.get_dhcp_hosts_text(context,\n> >> >>> -                subnet['network_id'], project_id)\n> >> >>> +                subnet['network_id'], network_ref['project_id'])\n> >> >>>            self.driver.update_dhcp_hostfile_with_text(interface_id,\n> >> >> hosts)\n> >> >>>            self.driver.restart_dhcp(context, interface_id,\n> network_ref)\n> >> >>>\n> >> >>> Tomasz, are you able to test out this patch and confirm?\n> >> >>>\n> >> >>> ** Also affects: nova\n> >> >>>  Importance: Undecided\n> >> >>>      Status: New\n> >> >>>\n> >> >>> --\n> >> >>> You received this bug notification because you are subscribed to the\n> >> bug\n> >> >>> report.\n> >> >>> https://bugs.launchpad.net/bugs/949234\n> >> >>>\n> >> >>> Title:\n> >> >>> Quantum DHCP generation for networks owned by default tenant is\n> broken\n> >> >>>\n> >> >>> Status in OpenStack Compute (Nova):\n> >> >>> New\n> >> >>> Status in OpenStack Quantum (virtual network service):\n> >> >>> Confirmed\n> >> >>>\n> >> >>> Bug description:\n> >> >>> All networks which belongs to default tenant have broken dhcp\n> >> >>> configuration generation. IP addresses allocated from such networks\n> >> >>> are not returned by get_dhcp_hosts_text function from\n> >> >>> quantum/manager.py file. To fix this we need to change line #665\n> from:\n> >> >>>\n> >> >>> ips = self.ipam.get_allocated_ips(context, subnet_id, project_id)\n> >> >>>\n> >> >>> to:\n> >> >>>\n> >> >>> ips = self.ipam.get_allocated_ips(context, subnet_id, None)\n> >> >>>\n> >> >>>\n> >> >>> So the functions will return all allocated ips in this network as we\n> >> >> have single dhcp server for all tenants in particular network.\n> >> >>>\n> >> >>> Eventual we can modify call to get_dhcp_hosts_text in functions\n> >> >>> enable_dhcp,update_dhcp to   set project_id as None.\n> >> >>>\n> >> >>> To manage notifications about this bug go to:\n> >> >>> https://bugs.launchpad.net/nova/+bug/949234/+subscriptions\n> >> >>\n> >> >>\n> >> >> --\n> >> >> Tomasz Paszkowski\n> >> >> SS7, Asterisk, SAN, Datacenter, Cloud Computing\n> >> >> +48500166299\n> >> >>\n> >> >> --\n> >> >> You received this bug notification because you are a member of\n> Netstack\n> >> >> Core Developers, which is subscribed to quantum.\n> >> >> https://bugs.launchpad.net/bugs/949234\n> >> >>\n> >> >> Title:\n> >> >> Quantum DHCP generation for networks owned by default tenant is\n> broken\n> >> >>\n> >> >> Status in OpenStack Compute (Nova):\n> >> >> New\n> >> >> Status in OpenStack Quantum (virtual network service):\n> >> >> Confirmed\n> >> >>\n> >> >> Bug description:\n> >> >> All networks which belongs to default tenant have broken dhcp\n> >> >> configuration generation. IP addresses allocated from such networks\n> >> >> are not returned by get_dhcp_hosts_text function from\n> >> >> quantum/manager.py file. To fix this we need to change line #665\n> from:\n> >> >>\n> >> >> ips = self.ipam.get_allocated_ips(context, subnet_id, project_id)\n> >> >>\n> >> >> to:\n> >> >>\n> >> >> ips = self.ipam.get_allocated_ips(context, subnet_id, None)\n> >> >>\n> >> >>\n> >> >> So the functions will return all allocated ips in this network as we\n> >> have\n> >> >> single dhcp server for all tenants in particular network.\n> >> >>\n> >> >> Eventual we can modify call to get_dhcp_hosts_text in functions\n> >> >> enable_dhcp,update_dhcp to   set project_id as None.\n> >> >>\n> >> >> To manage notifications about this bug go to:\n> >> >> https://bugs.launchpad.net/nova/+bug/949234/+subscriptions\n> >> >>\n> >> >\n> >> >\n> >> > --\n> >> > ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n> >> > Dan Wendlandt\n> >> > Nicira Networks: www.nicira.com\n> >> > twitter: danwendlandt\n> >> > ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n> >> >\n> >> > --\n> >> > You received this bug notification because you are subscribed to the\n> bug\n> >> > report.\n> >> > https://bugs.launchpad.net/bugs/949234\n> >> >\n> >> > Title:\n> >> >  Quantum DHCP generation for networks owned by default tenant is\n> broken\n> >> >\n> >> > Status in OpenStack Compute (Nova):\n> >> >  New\n> >> > Status in OpenStack Quantum (virtual network service):\n> >> >  Confirmed\n> >> >\n> >> > Bug description:\n> >> >  All networks which belongs to default tenant have broken dhcp\n> >> >  configuration generation. IP addresses allocated from such networks\n> >> >  are not returned by get_dhcp_hosts_text function from\n> >> >  quantum/manager.py file. To fix this we need to change line #665\n> from:\n> >> >\n> >> >  ips = self.ipam.get_allocated_ips(context, subnet_id, project_id)\n> >> >\n> >> >  to:\n> >> >\n> >> >  ips = self.ipam.get_allocated_ips(context, subnet_id, None)\n> >> >\n> >> >\n> >> >  So the functions will return all allocated ips in this network as we\n> >> have single dhcp server for all tenants in particular network.\n> >> >\n> >> >  Eventual we can modify call to get_dhcp_hosts_text in functions\n> >> >  enable_dhcp,update_dhcp to   set project_id as None.\n> >> >\n> >> > To manage notifications about this bug go to:\n> >> > https://bugs.launchpad.net/nova/+bug/949234/+subscriptions\n> >>\n> >> --\n> >> You received this bug notification because you are a member of Netstack\n> >> Core Developers, which is subscribed to quantum.\n> >> https://bugs.launchpad.net/bugs/949234\n> >>\n> >> Title:\n> >>  Quantum DHCP generation for networks owned by default tenant is broken\n> >>\n> >> Status in OpenStack Compute (Nova):\n> >>  New\n> >> Status in OpenStack Quantum (virtual network service):\n> >>  Confirmed\n> >>\n> >> Bug description:\n> >>  All networks which belongs to default tenant have broken dhcp\n> >>  configuration generation. IP addresses allocated from such networks\n> >>  are not returned by get_dhcp_hosts_text function from\n> >>  quantum/manager.py file. To fix this we need to change line #665 from:\n> >>\n> >>  ips = self.ipam.get_allocated_ips(context, subnet_id, project_id)\n> >>\n> >>  to:\n> >>\n> >>  ips = self.ipam.get_allocated_ips(context, subnet_id, None)\n> >>\n> >>\n> >>  So the functions will return all allocated ips in this network as we\n> have\n> >> single dhcp server for all tenants in particular network.\n> >>\n> >>  Eventual we can modify call to get_dhcp_hosts_text in functions\n> >>  enable_dhcp,update_dhcp to   set project_id as None.\n> >>\n> >> To manage notifications about this bug go to:\n> >> https://bugs.launchpad.net/nova/+bug/949234/+subscriptions\n> >>\n> >\n> >\n> > --\n> > ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n> > Dan Wendlandt\n> > Nicira Networks: www.nicira.com\n> > twitter: danwendlandt\n> > ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n> >\n> > --\n> > You received this bug notification because you are subscribed to the bug\n> > report.\n> > https://bugs.launchpad.net/bugs/949234\n> >\n> > Title:\n> >  Quantum DHCP generation for networks owned by default tenant is broken\n> >\n> > Status in OpenStack Compute (Nova):\n> >  New\n> > Status in OpenStack Quantum (virtual network service):\n> >  Confirmed\n> >\n> > Bug description:\n> >  All networks which belongs to default tenant have broken dhcp\n> >  configuration generation. IP addresses allocated from such networks\n> >  are not returned by get_dhcp_hosts_text function from\n> >  quantum/manager.py file. To fix this we need to change line #665 from:\n> >\n> >  ips = self.ipam.get_allocated_ips(context, subnet_id, project_id)\n> >\n> >  to:\n> >\n> >  ips = self.ipam.get_allocated_ips(context, subnet_id, None)\n> >\n> >\n> >  So the functions will return all allocated ips in this network as we\n> have single dhcp server for all tenants in particular network.\n> >\n> >  Eventual we can modify call to get_dhcp_hosts_text in functions\n> >  enable_dhcp,update_dhcp to   set project_id as None.\n> >\n> > To manage notifications about this bug go to:\n> > https://bugs.launchpad.net/nova/+bug/949234/+subscriptions\n>\n>\n> --\n> Tomasz Paszkowski\n> SS7, Asterisk, SAN, Datacenter, Cloud Computing\n> +48500166299\n>\n> --\n> You received this bug notification because you are a member of Netstack\n> Core Developers, which is subscribed to quantum.\n> https://bugs.launchpad.net/bugs/949234\n>\n> Title:\n>  Quantum DHCP generation for networks owned by default tenant is broken\n>\n> Status in OpenStack Compute (Nova):\n>  New\n> Status in OpenStack Quantum (virtual network service):\n>  Confirmed\n>\n> Bug description:\n>  All networks which belongs to default tenant have broken dhcp\n>  configuration generation. IP addresses allocated from such networks\n>  are not returned by get_dhcp_hosts_text function from\n>  quantum/manager.py file. To fix this we need to change line #665 from:\n>\n>  ips = self.ipam.get_allocated_ips(context, subnet_id, project_id)\n>\n>  to:\n>\n>  ips = self.ipam.get_allocated_ips(context, subnet_id, None)\n>\n>\n>  So the functions will return all allocated ips in this network as we have\n> single dhcp server for all tenants in particular network.\n>\n>  Eventual we can modify call to get_dhcp_hosts_text in functions\n>  enable_dhcp,update_dhcp to   set project_id as None.\n>\n> To manage notifications about this bug go to:\n> https://bugs.launchpad.net/nova/+bug/949234/+subscriptions\n>\n\n\n\n-- \n~~~~~~~~~~~~~~~~~~~~~~~~~~~\nDan Wendlandt\nNicira Networks: www.nicira.com\ntwitter: danwendlandt\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n", 
            "date_created": "2012-03-08 16:32:45+00:00", 
            "author": "https://api.launchpad.net/1.0/~danwent"
        }, 
        {
            "content": "Hi,\n\n\nBad news, network_ref['project_id'] is still not working for a default\ntenant. From those what i see here\nwe shoud ask melange to provide us with all addresses from given\nsubnet_id. Now code is using wrong API call which is valid only in\nsingle tenant subnets (non default). The valid one is:\n/ipam/tenants/{tenant_id}/ip_blocks/{ip_block_id}/ip_addresses (but\nthis call is currently broken in recent melange code). I have created\nbug report for this in melange:\nhttps://bugs.launchpad.net/melange/+bug/951499\n\nBelow relevant code:\n\n\n-- manager.py line #661 --\n    def get_dhcp_hosts_text(self, context, subnet_id, project_id=None):\n        ips = self.ipam.get_allocated_ips(context, subnet_id, project_id)\n        hosts_text = \"\"\n\n-- melange_ipam_lib.py line #243 --\n   def get_allocated_ips(self, context, subnet_id, project_id):\n        ips = self.m_conn.get_allocated_ips_for_network(subnet_id, project_id)\n        return [(ip['address'], ip['interface_id']) for ip in ips]\n\n-- melange_connection.py line #166 --\n    def get_allocated_ips_for_network(self, network_id, project_id=None):\n        tenant_scope = \"/tenants/%s\" % project_id if project_id else \"\"\n        url = (\"ipam%(tenant_scope)s/allocated_ip_addresses\" % locals())\n        # TODO(bgh): This request fails if you add the \".json\" to the end so\n        # it has to call do_request itself.  Melange bug?\n        response = self.do_request(\"GET\", url, content_type=\"\")\n        return json.loads(response)['ip_addresses']\n\n-- melange/melange/ipam/service.py line # 684 --\n    def _allocated_ips_mapper(self, mapper):\n        allocated_ips_res = AllocatedIpAddressesController().create_resource()\n        _connect(mapper,\n                      \"/ipam/allocated_ip_addresses\",\n                      controller=allocated_ips_res,\n                      action=\"index\",\n                      conditions=dict(method=['GET']))\n        _connect(mapper,\n                      \"/ipam/tenants/{tenant_id}/allocated_ip_addresses\",\n                      controller=allocated_ips_res,\n                      action=\"index\",\n                      conditions=dict(method=['GET']))\n\n-- melange/melange/ipam/service.py line # 177 --\nclass AllocatedIpAddressesController(BaseController):\n\n    def index(self, request, tenant_id=None):\n        filter_conditions = utils.filter_dict(request.params, 'used_by_device')\n        if tenant_id:\n            filter_conditions['used_by_tenant'] = tenant_id\n        ips = models.IpAddress.find_all_allocated_ips(**filter_conditions)\n        return self._paginated_response('ip_addresses', ips, request)\n\n-- melange/melange/ipam/models.py line # 588 --\n    def find_all_allocated_ips(cls, **conditions):\n        LOG.debug(\"Retrieving all allocated IPs.\")\n        return db.db_query.find_all_allocated_ips(cls, **conditions)\n\n-- melange/melange/db/sqlalchemy/api.py\ndef find_all_allocated_ips(model, used_by_device=None, used_by_tenant=None,\n                           **conditions):\n    query = _query_by(ipam.models.IpAddress, **conditions).\\\n            filter(or_(ipam.models.IpAddress.marked_for_deallocation == None,\n                       ipam.models.IpAddress.marked_for_deallocation == False))\n\n    if used_by_device or used_by_tenant:\n        query = query.join(ipam.models.Interface)\n    if used_by_device:\n        query = query.filter(ipam.models.Interface.device_id == used_by_device)\n    if used_by_tenant:\n        query = query.filter(ipam.models.Interface.tenant_id == used_by_tenant)\n\n    return query\n\n\n\n\n\n\n\n\n\n\n\n\nOn Thu, Mar 8, 2012 at 5:32 PM, dan wendlandt <email address hidden> wrote:\n> Ok, I just need to find time to test the patch this morning, then I will\n> push the change (unless you want to push the change yourself, in which\n> case, go ahead).\n>\n> Dan\n>\n> On Thu, Mar 8, 2012 at 1:24 AM, Tomasz Paszkowski <<email address hidden>\n>> wrote:\n>\n>> Yes I'am using melange. Sorry for taking your time but now I see that\n>> project_id is needed to get allocations only for a particular network\n>> ! Many thanks for your time.\n>>\n>>\n>>\n>> On Wed, Mar 7, 2012 at 11:57 PM, dan wendlandt\n>> <email address hidden> wrote:\n>> > On Wed, Mar 7, 2012 at 2:28 PM, Tomasz Paszkowski <\n>> <email address hidden>\n>> >> wrote:\n>> >\n>> >> Hi\n>> >>\n>> >> I have double checked the code of quantum and melange. The\n>> >> project/tenant id is ofcourse used but it's optional for getting the\n>> >> list of allocated_ips and it using this var dosen't bring any\n>> >> additional value. I may be wrong but I'am just curious why someone\n>> >> implemented it this way :-)))\n>> >>\n>> >\n>> > Its not actually optional given how the code currently works. \u00a0It must be\n>> > set for the code to work correctly if Melange is in use. \u00a0If you didn't\n>> > pass it into melange, we would always query IP addresses using the\n>> > \"default\" tenant ID, which would be incorrect for any tenant-specific\n>> > network.\n>> >\n>> > Is it correct that you are using Melange? \u00a0I'm trying to confirm this, as\n>> > if you are not using Melange, I would need to explore this more, as it\n>> > seems like this is only a problem with Melange.\n>> >\n>> > Dan\n>> >\n>> >\n>> >>\n>> >>\n>> >> Dnia 07-03-2012 o godz. 21:55 dan wendlandt\n>> >> <email address hidden> napisa\u0142(a):\n>> >>\n>> >> > Hi Tomasz,\n>> >> >\n>> >> > I haven't had a chance to look at this in detail, just enough to know\n>> >> that\n>> >> > always setting the project_id to None wasn't the right approach.\n>> >> >\n>> >> > I agree, update_dhcp seems to have the same issue. \u00a0Same fix of\n>> getting\n>> >> the\n>> >> > project_id from the net instead should fix it.\n>> >> >\n>> >> > In terms of why project_id is passed in, are you using Melange? \u00a0If\n>> so,\n>> >> the\n>> >> > project_id is needed to make any call to melange. \u00a0If you are using\n>> the\n>> >> > default nova IPAM lib, I don't believe project_id is used at all, and\n>> >> thus\n>> >> > would be surprised if you saw this issue at all (though again, I still\n>> >> need\n>> >> > to look at the code in more detail).\n>> >> >\n>> >> >\n>> >> > On Wed, Mar 7, 2012 at 12:27 PM, Tomasz Paszkowski <\n>> >> > <email address hidden>> wrote:\n>> >> >\n>> >> >> Hi,\n>> >> >>\n>> >> >> Patch works but please remember that update_dhcp is also calling\n>> >> >> get_dhcp_hosts_text.\n>> >> >>\n>> >> >> Regarding your comments I don't catch the idea why dhcp config\n>> >> >> generation needs to be aware of tenant_id. IMHO network_id is enough\n>> >> >> to fetch hosts which are placed in a given subnet.\n>> >> >>\n>> >> >>\n>> >> >> On Wed, Mar 7, 2012 at 7:58 PM, dan wendlandt <\n>> >> <email address hidden>>\n>> >> >> wrote:\n>> >> >>> Thanks for reporting this Tomasz!\n>> >> >>>\n>> >> >>> Looking at the code, this does look like a bug.\n>> >> >>>\n>> >> >>> I do not believe the change suggested above is correct though, as it\n>> >> >>> would only work if all networks were assigned to the default tenant.\n>> >> >>> Rather, the project_id \u00a0passed to get_allocated_ips should be the\n>> >> >>> project_id of the network, not the project_id of the VM. \u00a0This\n>> means it\n>> >> >>> will correctly be None for networks belonging to the default tenant,\n>> >> but\n>> >> >>> set for networks belonging to a particular tenant. \u00a0Hence, I think\n>> we\n>> >> >>> should grab the project_id from the networks object within the\n>> for-loop\n>> >> >>> in enable dhcp, and pass that in, instead of the existing code that\n>> >> >>> always passing in the VM's project id:\n>> >> >>>\n>> >> >>>\n>> >> >>> diff --git a/nova/network/quantum/manager.py\n>> >> >> b/nova/network/quantum/manager.py\n>> >> >>> index 16e782f..96418ae 100644\n>> >> >>> --- a/nova/network/quantum/manager.py\n>> >> >>> +++ b/nova/network/quantum/manager.py\n>> >> >>> @@ -452,7 +452,7 @@ class QuantumManager(manager.FloatingIP,\n>> >> >> manager.FlatManager):\n>> >> >>> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0quantum_net_id, interface_id)\n>> >> >>>\n>> >> >>> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0hosts = self.get_dhcp_hosts_text(context,\n>> >> >>> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0subnet['network_id'], project_id)\n>> >> >>> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0subnet['network_id'], network_ref['project_id'])\n>> >> >>> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0self.driver.update_dhcp_hostfile_with_text(interface_id,\n>> >> >> hosts)\n>> >> >>> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0self.driver.restart_dhcp(context, interface_id,\n>> network_ref)\n>> >> >>>\n>> >> >>> Tomasz, are you able to test out this patch and confirm?\n>> >> >>>\n>> >> >>> ** Also affects: nova\n>> >> >>> \u00a0Importance: Undecided\n>> >> >>> \u00a0 \u00a0 \u00a0Status: New\n>> >> >>>\n>> >> >>> --\n>> >> >>> You received this bug notification because you are subscribed to the\n>> >> bug\n>> >> >>> report.\n>> >> >>> https://bugs.launchpad.net/bugs/949234\n>> >> >>>\n>> >> >>> Title:\n>> >> >>> Quantum DHCP generation for networks owned by default tenant is\n>> broken\n>> >> >>>\n>> >> >>> Status in OpenStack Compute (Nova):\n>> >> >>> New\n>> >> >>> Status in OpenStack Quantum (virtual network service):\n>> >> >>> Confirmed\n>> >> >>>\n>> >> >>> Bug description:\n>> >> >>> All networks which belongs to default tenant have broken dhcp\n>> >> >>> configuration generation. IP addresses allocated from such networks\n>> >> >>> are not returned by get_dhcp_hosts_text function from\n>> >> >>> quantum/manager.py file. To fix this we need to change line #665\n>> from:\n>> >> >>>\n>> >> >>> ips = self.ipam.get_allocated_ips(context, subnet_id, project_id)\n>> >> >>>\n>> >> >>> to:\n>> >> >>>\n>> >> >>> ips = self.ipam.get_allocated_ips(context, subnet_id, None)\n>> >> >>>\n>> >> >>>\n>> >> >>> So the functions will return all allocated ips in this network as we\n>> >> >> have single dhcp server for all tenants in particular network.\n>> >> >>>\n>> >> >>> Eventual we can modify call to get_dhcp_hosts_text in functions\n>> >> >>> enable_dhcp,update_dhcp to \u00a0 set project_id as None.\n>> >> >>>\n>> >> >>> To manage notifications about this bug go to:\n>> >> >>> https://bugs.launchpad.net/nova/+bug/949234/+subscriptions\n>> >> >>\n>> >> >>\n>> >> >> --\n>> >> >> Tomasz Paszkowski\n>> >> >> SS7, Asterisk, SAN, Datacenter, Cloud Computing\n>> >> >> +48500166299\n>> >> >>\n>> >> >> --\n>> >> >> You received this bug notification because you are a member of\n>> Netstack\n>> >> >> Core Developers, which is subscribed to quantum.\n>> >> >> https://bugs.launchpad.net/bugs/949234\n>> >> >>\n>> >> >> Title:\n>> >> >> Quantum DHCP generation for networks owned by default tenant is\n>> broken\n>> >> >>\n>> >> >> Status in OpenStack Compute (Nova):\n>> >> >> New\n>> >> >> Status in OpenStack Quantum (virtual network service):\n>> >> >> Confirmed\n>> >> >>\n>> >> >> Bug description:\n>> >> >> All networks which belongs to default tenant have broken dhcp\n>> >> >> configuration generation. IP addresses allocated from such networks\n>> >> >> are not returned by get_dhcp_hosts_text function from\n>> >> >> quantum/manager.py file. To fix this we need to change line #665\n>> from:\n>> >> >>\n>> >> >> ips = self.ipam.get_allocated_ips(context, subnet_id, project_id)\n>> >> >>\n>> >> >> to:\n>> >> >>\n>> >> >> ips = self.ipam.get_allocated_ips(context, subnet_id, None)\n>> >> >>\n>> >> >>\n>> >> >> So the functions will return all allocated ips in this network as we\n>> >> have\n>> >> >> single dhcp server for all tenants in particular network.\n>> >> >>\n>> >> >> Eventual we can modify call to get_dhcp_hosts_text in functions\n>> >> >> enable_dhcp,update_dhcp to \u00a0 set project_id as None.\n>> >> >>\n>> >> >> To manage notifications about this bug go to:\n>> >> >> https://bugs.launchpad.net/nova/+bug/949234/+subscriptions\n>> >> >>\n>> >> >\n>> >> >\n>> >> > --\n>> >> > ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n>> >> > Dan Wendlandt\n>> >> > Nicira Networks: www.nicira.com\n>> >> > twitter: danwendlandt\n>> >> > ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n>> >> >\n>> >> > --\n>> >> > You received this bug notification because you are subscribed to the\n>> bug\n>> >> > report.\n>> >> > https://bugs.launchpad.net/bugs/949234\n>> >> >\n>> >> > Title:\n>> >> > \u00a0Quantum DHCP generation for networks owned by default tenant is\n>> broken\n>> >> >\n>> >> > Status in OpenStack Compute (Nova):\n>> >> > \u00a0New\n>> >> > Status in OpenStack Quantum (virtual network service):\n>> >> > \u00a0Confirmed\n>> >> >\n>> >> > Bug description:\n>> >> > \u00a0All networks which belongs to default tenant have broken dhcp\n>> >> > \u00a0configuration generation. IP addresses allocated from such networks\n>> >> > \u00a0are not returned by get_dhcp_hosts_text function from\n>> >> > \u00a0quantum/manager.py file. To fix this we need to change line #665\n>> from:\n>> >> >\n>> >> > \u00a0ips = self.ipam.get_allocated_ips(context, subnet_id, project_id)\n>> >> >\n>> >> > \u00a0to:\n>> >> >\n>> >> > \u00a0ips = self.ipam.get_allocated_ips(context, subnet_id, None)\n>> >> >\n>> >> >\n>> >> > \u00a0So the functions will return all allocated ips in this network as we\n>> >> have single dhcp server for all tenants in particular network.\n>> >> >\n>> >> > \u00a0Eventual we can modify call to get_dhcp_hosts_text in functions\n>> >> > \u00a0enable_dhcp,update_dhcp to \u00a0 set project_id as None.\n>> >> >\n>> >> > To manage notifications about this bug go to:\n>> >> > https://bugs.launchpad.net/nova/+bug/949234/+subscriptions\n>> >>\n>> >> --\n>> >> You received this bug notification because you are a member of Netstack\n>> >> Core Developers, which is subscribed to quantum.\n>> >> https://bugs.launchpad.net/bugs/949234\n>> >>\n>> >> Title:\n>> >> \u00a0Quantum DHCP generation for networks owned by default tenant is broken\n>> >>\n>> >> Status in OpenStack Compute (Nova):\n>> >> \u00a0New\n>> >> Status in OpenStack Quantum (virtual network service):\n>> >> \u00a0Confirmed\n>> >>\n>> >> Bug description:\n>> >> \u00a0All networks which belongs to default tenant have broken dhcp\n>> >> \u00a0configuration generation. IP addresses allocated from such networks\n>> >> \u00a0are not returned by get_dhcp_hosts_text function from\n>> >> \u00a0quantum/manager.py file. To fix this we need to change line #665 from:\n>> >>\n>> >> \u00a0ips = self.ipam.get_allocated_ips(context, subnet_id, project_id)\n>> >>\n>> >> \u00a0to:\n>> >>\n>> >> \u00a0ips = self.ipam.get_allocated_ips(context, subnet_id, None)\n>> >>\n>> >>\n>> >> \u00a0So the functions will return all allocated ips in this network as we\n>> have\n>> >> single dhcp server for all tenants in particular network.\n>> >>\n>> >> \u00a0Eventual we can modify call to get_dhcp_hosts_text in functions\n>> >> \u00a0enable_dhcp,update_dhcp to \u00a0 set project_id as None.\n>> >>\n>> >> To manage notifications about this bug go to:\n>> >> https://bugs.launchpad.net/nova/+bug/949234/+subscriptions\n>> >>\n>> >\n>> >\n>> > --\n>> > ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n>> > Dan Wendlandt\n>> > Nicira Networks: www.nicira.com\n>> > twitter: danwendlandt\n>> > ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n>> >\n>> > --\n>> > You received this bug notification because you are subscribed to the bug\n>> > report.\n>> > https://bugs.launchpad.net/bugs/949234\n>> >\n>> > Title:\n>> > \u00a0Quantum DHCP generation for networks owned by default tenant is broken\n>> >\n>> > Status in OpenStack Compute (Nova):\n>> > \u00a0New\n>> > Status in OpenStack Quantum (virtual network service):\n>> > \u00a0Confirmed\n>> >\n>> > Bug description:\n>> > \u00a0All networks which belongs to default tenant have broken dhcp\n>> > \u00a0configuration generation. IP addresses allocated from such networks\n>> > \u00a0are not returned by get_dhcp_hosts_text function from\n>> > \u00a0quantum/manager.py file. To fix this we need to change line #665 from:\n>> >\n>> > \u00a0ips = self.ipam.get_allocated_ips(context, subnet_id, project_id)\n>> >\n>> > \u00a0to:\n>> >\n>> > \u00a0ips = self.ipam.get_allocated_ips(context, subnet_id, None)\n>> >\n>> >\n>> > \u00a0So the functions will return all allocated ips in this network as we\n>> have single dhcp server for all tenants in particular network.\n>> >\n>> > \u00a0Eventual we can modify call to get_dhcp_hosts_text in functions\n>> > \u00a0enable_dhcp,update_dhcp to \u00a0 set project_id as None.\n>> >\n>> > To manage notifications about this bug go to:\n>> > https://bugs.launchpad.net/nova/+bug/949234/+subscriptions\n>>\n>>\n>> --\n>> Tomasz Paszkowski\n>> SS7, Asterisk, SAN, Datacenter, Cloud Computing\n>> +48500166299\n>>\n>> --\n>> You received this bug notification because you are a member of Netstack\n>> Core Developers, which is subscribed to quantum.\n>> https://bugs.launchpad.net/bugs/949234\n>>\n>> Title:\n>> \u00a0Quantum DHCP generation for networks owned by default tenant is broken\n>>\n>> Status in OpenStack Compute (Nova):\n>> \u00a0New\n>> Status in OpenStack Quantum (virtual network service):\n>> \u00a0Confirmed\n>>\n>> Bug description:\n>> \u00a0All networks which belongs to default tenant have broken dhcp\n>> \u00a0configuration generation. IP addresses allocated from such networks\n>> \u00a0are not returned by get_dhcp_hosts_text function from\n>> \u00a0quantum/manager.py file. To fix this we need to change line #665 from:\n>>\n>> \u00a0ips = self.ipam.get_allocated_ips(context, subnet_id, project_id)\n>>\n>> \u00a0to:\n>>\n>> \u00a0ips = self.ipam.get_allocated_ips(context, subnet_id, None)\n>>\n>>\n>> \u00a0So the functions will return all allocated ips in this network as we have\n>> single dhcp server for all tenants in particular network.\n>>\n>> \u00a0Eventual we can modify call to get_dhcp_hosts_text in functions\n>> \u00a0enable_dhcp,update_dhcp to \u00a0 set project_id as None.\n>>\n>> To manage notifications about this bug go to:\n>> https://bugs.launchpad.net/nova/+bug/949234/+subscriptions\n>>\n>\n>\n> --\n> ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n> Dan Wendlandt\n> Nicira Networks: www.nicira.com\n> twitter: danwendlandt\n> ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n>\n> --\n> You received this bug notification because you are subscribed to the bug\n> report.\n> https://bugs.launchpad.net/bugs/949234\n>\n> Title:\n> \u00a0Quantum DHCP generation for networks owned by default tenant is broken\n>\n> Status in OpenStack Compute (Nova):\n> \u00a0New\n> Status in OpenStack Quantum (virtual network service):\n> \u00a0Confirmed\n>\n> Bug description:\n> \u00a0All networks which belongs to default tenant have broken dhcp\n> \u00a0configuration generation. IP addresses allocated from such networks\n> \u00a0are not returned by get_dhcp_hosts_text function from\n> \u00a0quantum/manager.py file. To fix this we need to change line #665 from:\n>\n> \u00a0ips = self.ipam.get_allocated_ips(context, subnet_id, project_id)\n>\n> \u00a0to:\n>\n> \u00a0ips = self.ipam.get_allocated_ips(context, subnet_id, None)\n>\n>\n> \u00a0So the functions will return all allocated ips in this network as we have single dhcp server for all tenants in particular network.\n>\n> \u00a0Eventual we can modify call to get_dhcp_hosts_text in functions\n> \u00a0enable_dhcp,update_dhcp to \u00a0 set project_id as None.\n>\n> To manage notifications about this bug go to:\n> https://bugs.launchpad.net/nova/+bug/949234/+subscriptions\n\n\n\n-- \nTomasz Paszkowski\nSS7, Asterisk, SAN, Datacenter, Cloud Computing\n+48500166299\n", 
            "date_created": "2012-03-10 12:46:30+00:00", 
            "author": "https://api.launchpad.net/1.0/~ss7pro"
        }, 
        {
            "content": "Any progress here?  Otherwise, I'm probably going to have to untarget this as a quantum bug for RC1 (the change required is in nova anyway, but its useful to track in Quantum). ", 
            "date_created": "2012-03-13 21:03:19.638385+00:00", 
            "author": "https://api.launchpad.net/1.0/~danwent"
        }, 
        {
            "content": "We declared using melange IPAM with Quantum \"experimental\" in essex, as almost all testing was done with the built-in Nova IPAM.  \n\nMelange and Nova IPAM will go away in Folsom, so fixing this issue isn't a high priority.   ", 
            "date_created": "2012-06-07 14:59:02.342513+00:00", 
            "author": "https://api.launchpad.net/1.0/~danwent"
        }, 
        {
            "content": "marking as won't fix in nova, this is very old", 
            "date_created": "2014-06-06 07:05:26.525272+00:00", 
            "author": "https://api.launchpad.net/1.0/~jogo"
        }
    ], 
    "closed": "2014-06-06 07:05:33.164154+00:00"
}