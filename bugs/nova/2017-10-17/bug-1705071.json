{
    "status": "Fix Released", 
    "last_updated": "2017-07-28 07:40:10.960084+00:00", 
    "description": "When attempting to perform a GET /allocation_candidates request for only resources that are shared, a KeyError is produced:\n\nhttp://paste.openstack.org/show/615753/\n\nThe problem is that the _get_usages_by_provider_and_rc() method returns a dict with only the sharing resource provider usage information but the _get_all_with_shared() returns a list of resource provider IDs including both the *sharing* resource provider *and* the shared-with providers.\n\nWhen the code attempts to cross-reference provider summaries (which are constructed by looping over the usage dicts) with each provider ID in the result from _get_all_with_shared(), we hit a KeyError on the shared-with provider IDs because there was no usage record (because the usage query filters on resource class ID and we requested only a resource class ID that was shared)", 
    "tags": [
        "placement"
    ], 
    "importance": "High", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1705071", 
    "owner": "https://api.launchpad.net/1.0/~cdent", 
    "id": 1705071, 
    "index": 2104, 
    "openned": "2017-07-18 16:49:53.631740+00:00", 
    "created": "2017-07-18 16:49:53.631740+00:00", 
    "title": "[placement] Attempting to find allocation candidates for shared-only resources results in KeyError", 
    "comments": [
        {
            "content": "When attempting to perform a GET /allocation_candidates request for only resources that are shared, a KeyError is produced:\n\nhttp://paste.openstack.org/show/615753/\n\nThe problem is that the _get_usages_by_provider_and_rc() method returns a dict with only the sharing resource provider usage information but the _get_all_with_shared() returns a list of resource provider IDs including both the *sharing* resource provider *and* the shared-with providers.\n\nWhen the code attempts to cross-reference provider summaries (which are constructed by looping over the usage dicts) with each provider ID in the result from _get_all_with_shared(), we hit a KeyError on the shared-with provider IDs because there was no usage record (because the usage query filters on resource class ID and we requested only a resource class ID that was shared)", 
            "date_created": "2017-07-18 16:49:53.631740+00:00", 
            "author": "https://api.launchpad.net/1.0/~jaypipes"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/484900", 
            "date_created": "2017-07-18 18:09:41.477998+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/484900\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=d67d3459afd5271f09cc6bbeb0359ad419a4ec7a\nSubmitter: Jenkins\nBranch:    master\n\ncommit d67d3459afd5271f09cc6bbeb0359ad419a4ec7a\nAuthor: Jay Pipes <email address hidden>\nDate:   Tue Jul 18 14:03:53 2017 -0400\n\n    placement: alloc candidates only shared resources\n    \n    When attempting to perform a GET /allocation_candidates request for\n    only resources that are shared, a KeyError was being produced:\n    \n    http://paste.openstack.org/show/615753/\n    \n    The problem is that the _get_usages_by_provider_and_rc() method returns\n    a dict with only the sharing resource provider usage information but\n    the _get_all_with_shared() returns a list of resource provider IDs\n    including both the *sharing* resource provider *and* the shared-with\n    providers.\n    \n    When the code attempts to cross-reference provider summaries (which are\n    constructed by looping over the usage dicts) with each provider ID in\n    the result from _get_all_with_shared(), we hit a KeyError on the\n    shared-with provider IDs because there was no usage record (because the\n    usage query filters on resource class ID and we requested only a\n    resource class ID that was shared)\n    \n    This patch fixes the problem with a KeyError being produced for those\n    providers that do not provide any resources (i.e. they are only\n    included in the returned results because they have requested resource\n    shared *with* them) by returning both the internal integer ID and the\n    UUID of providers from the _get_all_shared_with() function and then in\n    the loop to create allocation requests, simply ignoring any resource provider\n    that doesn't exist in the provider_summaries dict.\n    \n    Closes-Bug: #1705071\n    \n    Change-Id: I742fd093a8b33ff88244b2990021784e4b65f51f\n", 
            "date_created": "2017-07-20 15:27:34.763765+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/nova 16.0.0.0b3 development milestone.", 
            "date_created": "2017-07-28 07:40:09.825775+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2017-07-20 15:27:33.081606+00:00"
}