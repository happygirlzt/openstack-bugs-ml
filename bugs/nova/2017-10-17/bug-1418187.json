{
    "status": "Fix Released", 
    "last_updated": "2016-10-05 19:39:46.479688+00:00", 
    "description": "numa cells are not guaranteed to have memory.\nlibvirt capabilities represent that correctly.\nnova's _get_host_numa_topology assumes that it can convert cell's memory to\nkilobytes via: \n   memory=cell.memory / units.Ki.\n\nbut cell.memory ends up being None. for some LibvirtConfigCapsNUMACell.\n\nstack trace is like this:\n[-] unsupported operand type(s) for /: 'NoneType' and 'int'\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/dist-packages/nova/openstack/common/threadgroup.py\", line 145, in wait\n    x.wait()\n  File \"/usr/lib/python2.7/dist-packages/nova/openstack/common/threadgroup.py\", line 47, in wait\n    return self.thread.wait()\n  File \"/usr/lib/python2.7/dist-packages/eventlet/greenthread.py\", line 173, in wait\n    return self._exit_event.wait()\n  File \"/usr/lib/python2.7/dist-packages/eventlet/event.py\", line 121, in wait\n    return hubs.get_hub().switch()\n  File \"/usr/lib/python2.7/dist-packages/eventlet/hubs/hub.py\", line 293, in switch\n    return self.greenlet.switch()\n  File \"/usr/lib/python2.7/dist-packages/eventlet/greenthread.py\", line 212, in main\n    result = function(*args, **kwargs)\n  File \"/usr/lib/python2.7/dist-packages/nova/openstack/common/service.py\", line 492, in run_service\n    service.start()\n  File \"/usr/lib/python2.7/dist-packages/nova/service.py\", line 181, in start\n    self.manager.pre_start_hook()\n  File \"/usr/lib/python2.7/dist-packages/nova/compute/manager.py\", line 1188, in pre_start_hook\n    self.update_available_resource(nova.context.get_admin_context())\n  File \"/usr/lib/python2.7/dist-packages/nova/compute/manager.py\", line 6047, in update_available_resource\n    rt.update_available_resource(context)\n  File \"/usr/lib/python2.7/dist-packages/nova/compute/resource_tracker.py\", line 313, in update_available_resource\n    resources = self.driver.get_available_resource(self.nodename)\n  File \"/usr/lib/python2.7/dist-packages/nova/virt/libvirt/driver.py\", line 4825, in get_available_resource\n    numa_topology = self._get_host_numa_topology()\n  File \"/usr/lib/python2.7/dist-packages/nova/virt/libvirt/driver.py\", line 4703, in _get_host_numa_topology\n    for cell in topology.cells])\nTypeError: unsupported operand type(s) for /: 'NoneType' and 'int'", 
    "tags": [
        "openstack", 
        "patch", 
        "uosci"
    ], 
    "importance": "Medium", 
    "heat": 8, 
    "link": "https://bugs.launchpad.net/nova/+bug/1418187", 
    "owner": "https://api.launchpad.net/1.0/~sahid-ferdjaoui", 
    "id": 1418187, 
    "index": 4146, 
    "openned": "2015-02-05 16:52:13.543945+00:00", 
    "created": "2015-02-04 19:28:25.143570+00:00", 
    "title": "_get_host_numa_topology assumes numa cell has memory", 
    "comments": [
        {
            "content": "numa cells are not guaranteed to have memory.\nlibvirt capabilities represent that correctly.\nnova's _get_host_numa_topology assumes that it can convert cell's memory to\nkilobytes via: \n   memory=cell.memory / units.Ki.\n\nbut cell.memory ends up being None. for some LibvirtConfigCapsNUMACell.\n\nstack trace is like this:\n[-] unsupported operand type(s) for /: 'NoneType' and 'int'\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/dist-packages/nova/openstack/common/threadgroup.py\", line 145, in wait\n    x.wait()\n  File \"/usr/lib/python2.7/dist-packages/nova/openstack/common/threadgroup.py\", line 47, in wait\n    return self.thread.wait()\n  File \"/usr/lib/python2.7/dist-packages/eventlet/greenthread.py\", line 173, in wait\n    return self._exit_event.wait()\n  File \"/usr/lib/python2.7/dist-packages/eventlet/event.py\", line 121, in wait\n    return hubs.get_hub().switch()\n  File \"/usr/lib/python2.7/dist-packages/eventlet/hubs/hub.py\", line 293, in switch\n    return self.greenlet.switch()\n  File \"/usr/lib/python2.7/dist-packages/eventlet/greenthread.py\", line 212, in main\n    result = function(*args, **kwargs)\n  File \"/usr/lib/python2.7/dist-packages/nova/openstack/common/service.py\", line 492, in run_service\n    service.start()\n  File \"/usr/lib/python2.7/dist-packages/nova/service.py\", line 181, in start\n    self.manager.pre_start_hook()\n  File \"/usr/lib/python2.7/dist-packages/nova/compute/manager.py\", line 1188, in pre_start_hook\n    self.update_available_resource(nova.context.get_admin_context())\n  File \"/usr/lib/python2.7/dist-packages/nova/compute/manager.py\", line 6047, in update_available_resource\n    rt.update_available_resource(context)\n  File \"/usr/lib/python2.7/dist-packages/nova/compute/resource_tracker.py\", line 313, in update_available_resource\n    resources = self.driver.get_available_resource(self.nodename)\n  File \"/usr/lib/python2.7/dist-packages/nova/virt/libvirt/driver.py\", line 4825, in get_available_resource\n    numa_topology = self._get_host_numa_topology()\n  File \"/usr/lib/python2.7/dist-packages/nova/virt/libvirt/driver.py\", line 4703, in _get_host_numa_topology\n    for cell in topology.cells])\nTypeError: unsupported operand type(s) for /: 'NoneType' and 'int'", 
            "date_created": "2015-02-04 19:28:25.143570+00:00", 
            "author": "https://api.launchpad.net/1.0/~smoser"
        }, 
        {
            "content": "attachign virsh capabilities output.", 
            "date_created": "2015-02-04 19:30:58.099339+00:00", 
            "author": "https://api.launchpad.net/1.0/~smoser"
        }, 
        {
            "content": "attaching workaround patch\n", 
            "date_created": "2015-02-05 16:57:52.332742+00:00", 
            "author": "https://api.launchpad.net/1.0/~smoser"
        }, 
        {
            "content": "revised patch. \n\n--- driver.py.org\t2015-02-05 03:07:39.396827122 +0000\n+++ driver.py\t2015-02-06 14:41:25.331949566 +0000\n@@ -4682,11 +4687,16 @@\n         if topology is None or not topology.cells:\n             return\n \n+        if len([cell for cell in topology.cells if cell.memory is None]):\n+            LOG.warn(\"odd, some of your numa cells have None memory. %s\",\n+                     [{id: cell.id, cpuset: set(cpu.id for cpu in cell.cpus),\n+                       memory: cell.memory} for cell in topology.cells])\n+\n         topology = objects.NUMATopology(\n                 cells=[objects.NUMACell(\n                     id=cell.id,\n                     cpuset=set(cpu.id for cpu in cell.cpus),\n-                    memory=cell.memory / units.Ki,\n+                    memory=(cell.memory if cell.memory else 0)/ units.Ki,\n                     cpu_usage=0, memory_usage=0,\n                     mempages=[\n                         objects.NUMAPagesTopology(\n", 
            "date_created": "2015-02-09 16:08:32.794099+00:00", 
            "author": "https://api.launchpad.net/1.0/~smoser"
        }, 
        {
            "content": "I asked Daniel if his review in progress fixes this bug or we'll need to file another after that lands\n\nhttps://review.openstack.org/#/c/159106/", 
            "date_created": "2015-02-27 16:11:06.928573+00:00", 
            "author": "https://api.launchpad.net/1.0/~dims-v"
        }, 
        {
            "content": "If we look to your attachment we can see that: cell ids 1 and 17 do not provide any memory element. We need to figure out how it is possible and then we can fix it correctly.", 
            "date_created": "2015-03-02 09:44:45.335009+00:00", 
            "author": "https://api.launchpad.net/1.0/~sahid-ferdjaoui"
        }, 
        {
            "content": "FYI, having _get_host_numa_topology() not generate an exception on reporting is the least of our worries here. The scheduling placement code for NUMA guests assumes that all NUMA cells have both memory & cpus. So with the proposed patch you will have silenced the exception, but Nova will still be broken in practice, because it'll never schedule guests on 1/2 of the CPUs in this host - ie the ones without local memory will never get used. Fixing this is a far more invasive problem.", 
            "date_created": "2015-03-02 10:47:18.801326+00:00", 
            "author": "https://api.launchpad.net/1.0/~berrange"
        }, 
        {
            "content": "Related fix proposed to branch: master\nReview: https://review.openstack.org/160904", 
            "date_created": "2015-03-03 17:18:06.718026+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Related fix proposed to branch: master\nReview: https://review.openstack.org/160905", 
            "date_created": "2015-03-03 17:18:16.016760+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Related fix proposed to branch: master\nReview: https://review.openstack.org/160906", 
            "date_created": "2015-03-03 17:18:24.951851+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/160904\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=291c1a1db1ab3ceccfac7a3c8312b6fdce3aaa84\nSubmitter: Jenkins\nBranch:    master\n\ncommit 291c1a1db1ab3ceccfac7a3c8312b6fdce3aaa84\nAuthor: Sahid Orentino Ferdjaoui <email address hidden>\nDate:   Tue Mar 3 05:00:40 2015 -0500\n\n    libvirt: make default value of numa cell memory to 0 when not defined\n    \n    Some arch can have cells without memory or cpus defined and libvirt\n    will return an XML without these elements. Our object defintion of the\n    fields cpus and memory cannot let us to make them to None when not\n    defined but currently the config representation of a NUMA make it to\n    None.\n    \n    This patch fix the default value of config memory to 0 when libvirt\n    does not return memory element for a cell.\n    \n    Also this cannot be considered come a fix for bug 1418187 since we\n    have to handle these cases (cpus or memory not defined) during\n    scheduling. thse case can be addressed when using distances which will\n    be addressed in a next serie of patches.\n    \n    Related-Bug: #1418187\n    Change-Id: Iac08d1221341a86c081d5e905c704fb1c9dca276\n", 
            "date_created": "2015-03-19 12:40:33.915428+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "We hit the same thing with powerkvm testing in juno have basically the same patch out of tree, I can't remember exactly why it didn't get upstream now, but I think there was at least a bug reported, I'm trying to dig that up for reference.", 
            "date_created": "2015-03-19 18:47:06.090926+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "The other bug was bug 1376307.", 
            "date_created": "2015-03-19 18:48:48.663265+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Related fix proposed to branch: stable/juno\nReview: https://review.openstack.org/166004", 
            "date_created": "2015-03-19 20:51:38.282769+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Complete fix will likely not be backportable so this bug will not get Juno task in Launchpad!", 
            "date_created": "2015-03-23 11:19:00.944643+00:00", 
            "author": "https://api.launchpad.net/1.0/~apevec"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/166004\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=34f029e68d607c7154adcb6d6616da8da0db3650\nSubmitter: Jenkins\nBranch:    stable/juno\n\ncommit 34f029e68d607c7154adcb6d6616da8da0db3650\nAuthor: Sahid Orentino Ferdjaoui <email address hidden>\nDate:   Tue Mar 3 05:00:40 2015 -0500\n\n    libvirt: make default value of numa cell memory to 0 when not defined\n    \n    Some arch can have cells without memory or cpus defined and libvirt\n    will return an XML without these elements. Our object defintion of the\n    fields cpus and memory cannot let us to make them to None when not\n    defined but currently the config representation of a NUMA make it to\n    None.\n    \n    This patch fix the default value of config memory to 0 when libvirt\n    does not return memory element for a cell.\n    \n    Also this cannot be considered come a fix for bug 1418187 since we\n    have to handle these cases (cpus or memory not defined) during\n    scheduling. thse case can be addressed when using distances which will\n    be addressed in a next serie of patches.\n    \n    Conflicts:\n            nova/tests/unit/virt/libvirt/test_config.py\n            nova/virt/libvirt/config.py\n    \n    NOTE(mriedem): The conflict in config.py is due to the mempages\n    code added on master with commit 3283e2a42 that's not in juno.\n    The test conflict was due to moving the tests in kilo.\n    \n    Related-Bug: #1418187\n    Change-Id: Iac08d1221341a86c081d5e905c704fb1c9dca276\n    (cherry picked from commit 291c1a1db1ab3ceccfac7a3c8312b6fdce3aaa84)\n", 
            "date_created": "2015-03-24 19:18:40.033426+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Change abandoned by Michael Still (<email address hidden>) on branch: master\nReview: https://review.openstack.org/160905\nReason: This patch as been WIP'ed for a very long time, so I am going to abandon it to keep the review queue sane. Please restore the change when its ready for review.", 
            "date_created": "2015-08-12 05:38:35.593611+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Change abandoned by Michael Still (<email address hidden>) on branch: master\nReview: https://review.openstack.org/160906\nReason: This patch as been WIP'ed for a very long time, so I am going to abandon it to keep the review queue sane. Please restore the change when its ready for review.", 
            "date_created": "2015-08-12 05:39:30.932373+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This bug was marked Incomplete but it is unclear what further information is needed before it can be Confirmed. What further information is needed for this to be triaged in Nova?", 
            "date_created": "2016-06-16 15:39:01.578350+00:00", 
            "author": "https://api.launchpad.net/1.0/~auggy"
        }, 
        {
            "content": "This issue has been addressed by:\n\n https://review.openstack.org/gitweb?p=openstack/nova.git;a=commitdiff;h=8df48025c36c8bc595f346f0b76ee010ae86737d\n\nThe scheduling part should have been addressed by Nikola during one of his serie to let the kernel decides the placement when nothing has been requested by users. ", 
            "date_created": "2016-06-29 09:41:03.895886+00:00", 
            "author": "https://api.launchpad.net/1.0/~sahid-ferdjaoui"
        }, 
        {
            "content": "Since the Mitaka cycle we use the direct release model, so change 'Fix Committed' status to 'Fix Released'.", 
            "date_created": "2016-07-05 08:35:41.590421+00:00", 
            "author": "https://api.launchpad.net/1.0/~natsume-takashi"
        }
    ], 
    "closed": "2016-07-05 08:35:54.529865+00:00"
}