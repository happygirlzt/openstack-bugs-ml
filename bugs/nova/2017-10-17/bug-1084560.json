{
    "status": "Opinion", 
    "last_updated": "2013-02-26 01:54:51.033753+00:00", 
    "description": "Hi everybody,\n\nI'm running Openstack Folsom with quantum.\n\nI have found this problem: \n\nwhen I run the command: \n\nnova --debug show <instance-id> \n\nI think that the JSON message that the system returns is not correct because it does not correspond to a fixed schema:\n\n{\"server\": {\n\t\"status\": \"ACTIVE\", \n\t\"updated\": \"2012-11-28T16:41:07Z\", \n\t\"hostId\": \"0d1236ea4d50a064150eba3961c468073b771a524d02f2c1f28c2b32\", \n\t\"OS-EXT-SRV-ATTR:host\": \"hostA\", \n\t\"addresses\": {\n\t\t\"private\": [{\"version\": 4, \"addr\": \"10.1.1.6\"}], \n\t\t\"public\": [{\"version\": 4, \"addr\": \"192.168.0.134\"}], \n\t\t\"lan02\": [{\"version\": 4, \"addr\": \"10.1.22.3\"}], \n\t\t\"lan01\": [{\"version\": 4, \"addr\": \"10.1.11.3\"}]\n\t }, \n\t \"links\": [{\"href\": \"http://hostA.example.com:8774/v2/bcb940507f644777849d1b3c47c6d6c0/servers/be283a48-6379-40c5-b499-f09f165354ab\", \"rel\": \"self\"}, \n\t \t\t\t{\"href\": \"http://hostA.example.com:8774/bcb940507f644777849d1b3c47c6d6c0/servers/be283a48-6379-40c5-b499-f09f165354ab\", \"rel\": \"bookmark\"}], \n\t \"key_name\": \"mazinger\", \n\t \"image\": {\"id\": \"21e2e055-53be-4cf0-a025-5564db5bd901\", \n\t \"links\": [{\"href\": \"http://hostA.example.com:8774/bcb940507f644777849d1b3c47c6d6c0/images/21e2e055-53be-4cf0-a025-5564db5bd901\", \"rel\": \"bookmark\"}]}, \n\t \"OS-EXT-STS:task_state\": null, \n\t \"OS-EXT-STS:vm_state\": \"active\", \n\t \"OS-EXT-SRV-ATTR:instance_name\": \"instance-0000001b\", \n\t \"OS-EXT-SRV-ATTR:hypervisor_hostname\": \"hostA\", \n\t \"flavor\": {\n\t \t\"id\": \"2\", \n\t \t\"links\": [{\"href\": \"http://hostA.example.com:8774/bcb940507f644777849d1b3c47c6d6c0/flavors/2\", \"rel\": \"bookmark\"}]\n\t  }, \n\t  \"id\": \"be283a48-6379-40c5-b499-f09f165354ab\", \n\t  \"security_groups\": [{\"name\": \"default\"}],\n\t  \"user_id\": \"c4e9a7544f764840899b194e2fa10b42\", \n\t  \"name\": \"fenix03\", \"created\": \"2012-11-28T16:40:47Z\", \n\t  \"tenant_id\": \"bcb940507f644777849d1b3c47c6d6c0\", \n\t  \"OS-DCF:diskConfig\": \"MANUAL\", \n\t  \"accessIPv4\": \"\", \n\t  \"accessIPv6\": \"\", \n\t  \"progress\": 0, \n\t  \"OS-EXT-STS:power_state\": 1, \n\t  \"config_drive\": \"\", \"metadata\": {}\n\t  }\n}\n\n We can see that in the value field related to the \"addresses\" key there is an entry for each network at which the server is connected. Each one, has different Key value. So each time the network configuration changes, the schema of the message also changes, making the message unmanageable.\n\nI think it should be something like this:\n\n{\"server\": {\n\t\"status\": \"ACTIVE\", \n\t\"updated\": \"2012-11-28T16:41:07Z\", \n\t\"hostId\": \"0d1236ea4d50a064150eba3961c468073b771a524d02f2c1f28c2b32\", \n\t\"OS-EXT-SRV-ATTR:host\": \"hostA\", \n\n\t\"addresses\": [\n\t\t{\"name\" : \"private\", [{\"version\": 4, \"addr\": \"10.1.1.6\"}]},\n\t\t{\"name\" : \"public\", [{\"version\": 4, \"addr\": \"192.168.0.134\"}]},\n\t\t{\"name\" : \"lan02\",[{\"version\": 4, \"addr\": \"10.1.22.3\"}]},\n\t\t{\"name\" : \"lan01\" ,[{\"version\": 4, \"addr\": \"10.1.11.3\"}]}\n\t],\n\t\n\t\"links\": [{\"href\": \"http://hostA.example.com:8774/v2/bcb940507f644777849d1b3c47c6d6c0/servers/be283a48-6379-40c5-b499-f09f165354ab\", \"rel\": \"self\"}, \n\t \t\t\t{\"href\": \"http://hostA.example.com:8774/bcb940507f644777849d1b3c47c6d6c0/servers/be283a48-6379-40c5-b499-f09f165354ab\", \"rel\": \"bookmark\"}], \n\t \"key_name\": \"mazinger\", \n\t \"image\": {\"id\": \"21e2e055-53be-4cf0-a025-5564db5bd901\", \n\t\t.\n\t\t.\n\t\t.\n\t\t.\n\t  }\n}\n\nWhat I'm trying to say is that I think the construct should be as in my second snippet. I believe this because, as it is now, the fragment of the JSON response under \"addresses\" doesn't conform to a fixed schema. I found this problem while trying to parse this message programatically. As it is structured now, I can't build an object able to represent the \"addresses\" element, since every network inside it is parsed as an element of a different type, with the name of the network used as the type.\n\nWithout Quantum there's no problem with this, since there will be always 2 networks: \"private\" and \"public\". However, with the custom network support that Quantum offers I think that's no longer the case.\n\nThat's why I suggested a different construct (putting the name of the network inside a \"name\"). I believe this is a bug. I'm sorry if this doesn't come very clear. I'm trying to explain it as best as I can; it's a subtle difference. But important for me, since I'm developing a client for Nova.\n\nThanks for the attention.\n\nBest regards!", 
    "tags": [
        "v2-api-audit"
    ], 
    "importance": "Wishlist", 
    "heat": 16, 
    "link": "https://bugs.launchpad.net/nova/+bug/1084560", 
    "owner": "None", 
    "id": 1084560, 
    "index": 2575, 
    "openned": "2012-11-29 15:19:01.425896+00:00", 
    "created": "2012-11-29 15:19:01.425896+00:00", 
    "title": "Format change in JSON response after nova show command", 
    "comments": [
        {
            "content": "Hi everybody,\n\nI'm running Openstack Folsom with quantum.\n\nI have found this problem: \n\nwhen I run the command: \n\nnova --debug show <instance-id> \n\nI think that the JSON message that the system returns is not correct because it does not correspond to a fixed schema:\n\n{\"server\": {\n\t\"status\": \"ACTIVE\", \n\t\"updated\": \"2012-11-28T16:41:07Z\", \n\t\"hostId\": \"0d1236ea4d50a064150eba3961c468073b771a524d02f2c1f28c2b32\", \n\t\"OS-EXT-SRV-ATTR:host\": \"hostA\", \n\t\"addresses\": {\n\t\t\"private\": [{\"version\": 4, \"addr\": \"10.1.1.6\"}], \n\t\t\"public\": [{\"version\": 4, \"addr\": \"192.168.0.134\"}], \n\t\t\"lan02\": [{\"version\": 4, \"addr\": \"10.1.22.3\"}], \n\t\t\"lan01\": [{\"version\": 4, \"addr\": \"10.1.11.3\"}]\n\t }, \n\t \"links\": [{\"href\": \"http://hostA.example.com:8774/v2/bcb940507f644777849d1b3c47c6d6c0/servers/be283a48-6379-40c5-b499-f09f165354ab\", \"rel\": \"self\"}, \n\t \t\t\t{\"href\": \"http://hostA.example.com:8774/bcb940507f644777849d1b3c47c6d6c0/servers/be283a48-6379-40c5-b499-f09f165354ab\", \"rel\": \"bookmark\"}], \n\t \"key_name\": \"mazinger\", \n\t \"image\": {\"id\": \"21e2e055-53be-4cf0-a025-5564db5bd901\", \n\t \"links\": [{\"href\": \"http://hostA.example.com:8774/bcb940507f644777849d1b3c47c6d6c0/images/21e2e055-53be-4cf0-a025-5564db5bd901\", \"rel\": \"bookmark\"}]}, \n\t \"OS-EXT-STS:task_state\": null, \n\t \"OS-EXT-STS:vm_state\": \"active\", \n\t \"OS-EXT-SRV-ATTR:instance_name\": \"instance-0000001b\", \n\t \"OS-EXT-SRV-ATTR:hypervisor_hostname\": \"hostA\", \n\t \"flavor\": {\n\t \t\"id\": \"2\", \n\t \t\"links\": [{\"href\": \"http://hostA.example.com:8774/bcb940507f644777849d1b3c47c6d6c0/flavors/2\", \"rel\": \"bookmark\"}]\n\t  }, \n\t  \"id\": \"be283a48-6379-40c5-b499-f09f165354ab\", \n\t  \"security_groups\": [{\"name\": \"default\"}],\n\t  \"user_id\": \"c4e9a7544f764840899b194e2fa10b42\", \n\t  \"name\": \"fenix03\", \"created\": \"2012-11-28T16:40:47Z\", \n\t  \"tenant_id\": \"bcb940507f644777849d1b3c47c6d6c0\", \n\t  \"OS-DCF:diskConfig\": \"MANUAL\", \n\t  \"accessIPv4\": \"\", \n\t  \"accessIPv6\": \"\", \n\t  \"progress\": 0, \n\t  \"OS-EXT-STS:power_state\": 1, \n\t  \"config_drive\": \"\", \"metadata\": {}\n\t  }\n}\n\n We can see that in the value field related to the \"addresses\" key there is an entry for each network at which the server is connected. Each one, has different Key value. So each time the network configuration changes, the schema of the message also changes, making the message unmanageable.\n\nI think it should be something like this:\n\n{\"server\": {\n\t\"status\": \"ACTIVE\", \n\t\"updated\": \"2012-11-28T16:41:07Z\", \n\t\"hostId\": \"0d1236ea4d50a064150eba3961c468073b771a524d02f2c1f28c2b32\", \n\t\"OS-EXT-SRV-ATTR:host\": \"hostA\", \n\n\t\"addresses\": [\n\t\t{\"name\" : \"private\", [{\"version\": 4, \"addr\": \"10.1.1.6\"}]},\n\t\t{\"name\" : \"public\", [{\"version\": 4, \"addr\": \"192.168.0.134\"}]},\n\t\t{\"name\" : \"lan02\",[{\"version\": 4, \"addr\": \"10.1.22.3\"}]},\n\t\t{\"name\" : \"lan01\" ,[{\"version\": 4, \"addr\": \"10.1.11.3\"}]}\n\t],\n\t\n\t\"links\": [{\"href\": \"http://hostA.example.com:8774/v2/bcb940507f644777849d1b3c47c6d6c0/servers/be283a48-6379-40c5-b499-f09f165354ab\", \"rel\": \"self\"}, \n\t \t\t\t{\"href\": \"http://hostA.example.com:8774/bcb940507f644777849d1b3c47c6d6c0/servers/be283a48-6379-40c5-b499-f09f165354ab\", \"rel\": \"bookmark\"}], \n\t \"key_name\": \"mazinger\", \n\t \"image\": {\"id\": \"21e2e055-53be-4cf0-a025-5564db5bd901\", \n\t\t.\n\t\t.\n\t\t.\n\t\t.\n\t  }\n}\n\nWhat I'm trying to say is that I think the construct should be as in my second snippet. I believe this because, as it is now, the fragment of the JSON response under \"addresses\" doesn't conform to a fixed schema. I found this problem while trying to parse this message programatically. As it is structured now, I can't build an object able to represent the \"addresses\" element, since every network inside it is parsed as an element of a different type, with the name of the network used as the type.\n\nWithout Quantum there's no problem with this, since there will be always 2 networks: \"private\" and \"public\". However, with the custom network support that Quantum offers I think that's no longer the case.\n\nThat's why I suggested a different construct (putting the name of the network inside a \"name\"). I believe this is a bug. I'm sorry if this doesn't come very clear. I'm trying to explain it as best as I can; it's a subtle difference. But important for me, since I'm developing a client for Nova.\n\nThanks for the attention.\n\nBest regards!", 
            "date_created": "2012-11-29 15:19:01.425896+00:00", 
            "author": "https://api.launchpad.net/1.0/~mattiapei88"
        }, 
        {
            "content": "  {\"name\" : \"private\", [{\"version\": 4, \"addr\": \"10.1.1.6\"}]}\n\n>>> json.loads('{\"name\" : \"private\", [{\"version\": 4, \"addr\": \"10.1.1.6\"}]}')\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/lib64/python2.7/json/__init__.py\", line 326, in loads\n    return _default_decoder.decode(s)\n  File \"/usr/lib64/python2.7/json/decoder.py\", line 366, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"/usr/lib64/python2.7/json/decoder.py\", line 382, in raw_decode\n    obj, end = self.scan_once(s, idx)\nValueError: Expecting property name: line 1 column 21 (char 21)\n\nYour suggestion isn't valid JSON.\n\nI also don't understand what you mean by \"fixed schema\".\n\nAre you saying that nova should never use a JSON object with a dynamic key?", 
            "date_created": "2012-11-29 15:43:51.250723+00:00", 
            "author": "https://api.launchpad.net/1.0/~johannes.erdfelt"
        }, 
        {
            "content": "Johannes,\n\nsome more context about this. there was a question asked by Mattia - https://answers.launchpad.net/nova/+question/215534\n\n", 
            "date_created": "2012-11-29 22:55:40.771198+00:00", 
            "author": "https://api.launchpad.net/1.0/~dims-v"
        }, 
        {
            "content": "Oh, you are right. I'm sorry. I spent more time on it and I think this could be a good example. \n\nYes, I think that the key must be fixed. It seems that in all other messages of the API the key is fixed and this is the first case of dynamic keys (I may be wrong).\n\nAn example of a possible solution:\n\n{\n  \"addresses\": {\n    \"network\": [\n      {\n        \"name\": \"private\",\n        \"version\": \"4\",\n        \"addr\": \"10.1.1.6\"\n      },\n      {\n        \"name\": \"public\",\n        \"version\": \"4\",\n        \"addr\": \"192.168.0.134\"\n      },\n      {\n        \"name\": \"lan02\",\n        \"version\": \"4\",\n        \"addr\": \"10.1.22.3\"\n      },\n      {\n        \"name\": \"lan01\",\n        \"version\": \"4\",\n        \"addr\": \"10.1.11.3\"\n      }\n    ]\n  }\n}\n\n\nMy suggestion is: don't use network names as key, but specify it as a value. This improvement will ease a lot the programmatical interaction between nova and an external client.\n\nI hope I have clarified the point, but if I'm missing something, I would appreciate if you could indicate where I'm falling.\n\nBest regards.", 
            "date_created": "2012-12-03 15:04:57.834451+00:00", 
            "author": "https://api.launchpad.net/1.0/~mattiapei88"
        }, 
        {
            "content": "This doesn't seem like a bug, but a request for the next version of the nova API.  We can't change it in the current version.  I have marked the bug as Opinion/Wishlist (how we mark feature requests).", 
            "date_created": "2013-02-26 01:54:49.048535+00:00", 
            "author": "https://api.launchpad.net/1.0/~russellb"
        }
    ], 
    "closed": "2013-02-26 01:54:03.876745+00:00"
}