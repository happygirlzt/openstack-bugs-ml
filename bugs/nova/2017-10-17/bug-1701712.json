{
    "status": "Fix Released", 
    "last_updated": "2017-07-28 07:40:35.769792+00:00", 
    "description": "In the report generated by Bandit that scans against Nova code, there are two security issues estimated as high severity as shown below. We believe that these two issues are false positives. Therefore, the line of Nova codes that trigger such Bandit issues should be marked with something like # nosec so that any results associated with it will not be reported by Bandit.\n\n--------------------------------------------------\n>> Issue: [B701:jinja2_autoescape_false] By default, jinja2 sets autoescape to False. Consider using autoescape=True to mitigate XSS vulnerabilities.\n\u00a0\u00a0\u00a0Severity: High   Confidence: High\n\u00a0\u00a0\u00a0Location: nova/console/xvp.py:113\n112\t        tmpl_path, tmpl_file = os.path.split(CONF.injected_network_template)\n113\t        env = jinja2.Environment(loader=jinja2.FileSystemLoader(tmpl_path))\n114\t        env.filters['pass_encode'] = self.fix_console_password\n\n--------------------------------------------------\n>> Issue: [B701:jinja2_autoescape_false] By default, jinja2 sets autoescape to False. Consider using autoescape=True to mitigate XSS vulnerabilities.\n\u00a0\u00a0\u00a0Severity: High   Confidence: High\n\u00a0\u00a0\u00a0Location: nova/virt/netutils.py:174\n173\t    tmpl_path, tmpl_file = os.path.split(template)\n174\t    env = jinja2.Environment(loader=jinja2.FileSystemLoader(tmpl_path),\n175\t                             trim_blocks=True)\n176\t    template = env.get_template(tmpl_file)\n\nThe reasons that we think the above issue is false positive are:\n\"When autoescaping is enabled, Jinja2 will filter input strings to escape any HTML content submitted via template variables. Without escaping HTML input the application becomes vulnerable to Cross Site Scripting (XSS) attacks.\"[1] However, the \"injected_network_template\" configured in nova.conf is a template with text format with different rules, and is not intended to be executable. An example template is https://github.com/openstack/nova/blob/stable/ocata/nova/virt/interfaces.template\n\nThis bug exists in multiple releases of Nova, including master branch, Ocata, Newton etc.\n\nReferences:\n[1] https://docs.openstack.org/developer/bandit/plugins/jinja2_autoescape_false.html", 
    "tags": [
        "bandit"
    ], 
    "importance": "Undecided", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1701712", 
    "owner": "https://api.launchpad.net/1.0/~zqinit", 
    "id": 1701712, 
    "index": 8195, 
    "openned": "2017-06-30 18:17:36.057484+00:00", 
    "created": "2017-06-30 18:17:36.057484+00:00", 
    "title": "Bandit scanning on Nova generates false positives of high severity issue 'jinja2_autoescape_false'", 
    "comments": [
        {
            "content": "In the report generated by Bandit that scans against Nova code, there are two security issues estimated as high severity as shown below. We believe that these two issues are false positives. Therefore, the line of Nova codes that trigger such Bandit issues should be marked with something like # nosec so that any results associated with it will not be reported by Bandit.\n\n--------------------------------------------------\n>> Issue: [B701:jinja2_autoescape_false] By default, jinja2 sets autoescape to False. Consider using autoescape=True to mitigate XSS vulnerabilities.\n   Severity: High   Confidence: High\n   Location: nova/console/xvp.py:113\n112\t        tmpl_path, tmpl_file = os.path.split(CONF.injected_network_template)\n113\t        env = jinja2.Environment(loader=jinja2.FileSystemLoader(tmpl_path))\n114\t        env.filters['pass_encode'] = self.fix_console_password\n\n--------------------------------------------------\n>> Issue: [B701:jinja2_autoescape_false] By default, jinja2 sets autoescape to False. Consider using autoescape=True to mitigate XSS vulnerabilities.\n   Severity: High   Confidence: High\n   Location: nova/virt/netutils.py:174\n173\t    tmpl_path, tmpl_file = os.path.split(template)\n174\t    env = jinja2.Environment(loader=jinja2.FileSystemLoader(tmpl_path),\n175\t                             trim_blocks=True)\n176\t    template = env.get_template(tmpl_file)\n\nThe reasons that we think the above issue is false positive are:\n\"When autoescaping is enabled, Jinja2 will filter input strings to escape any HTML content submitted via template variables. Without escaping HTML input the application becomes vulnerable to Cross Site Scripting (XSS) attacks.\"[1] However, the \"injected_network_template\" configured in nova.conf is a template with text format with different rules, and intended to be executable. An example template is https://github.com/openstack/nova/blob/stable/ocata/nova/virt/interfaces.template\n\nThis bug exists in multiple releases of Nova, including master branch, Ocata, Newton etc.  \n\nReferences:\n[1] https://docs.openstack.org/developer/bandit/plugins/jinja2_autoescape_false.html", 
            "date_created": "2017-06-30 18:17:36.057484+00:00", 
            "author": "https://api.launchpad.net/1.0/~zqinit"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/479437", 
            "date_created": "2017-06-30 22:21:30.804208+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/479437\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=398d24de68c79f77f0cfc0148f8d914bc09908b9\nSubmitter: Jenkins\nBranch:    master\n\ncommit 398d24de68c79f77f0cfc0148f8d914bc09908b9\nAuthor: Zhen Qin <email address hidden>\nDate:   Fri Jun 30 15:29:10 2017 -0400\n\n    Avoid false positives of Jinja2 in Bandit scan\n    \n    When Bandit scans nova/console/xvp.py and nova/virt/netutils.py, the\n    high severity issue (\"B701:jinja2_autoescape_false\") are triggered. By\n    adding #nosec to above code, this alarm will be surpressed.\n    \n    \"When autoescaping is enabled, Jinja2 will filter input strings to\n    escape any HTML content submitted via template variables. Without\n    escaping HTML input the application becomes vulnerable to Cross Site\n    Scripting (XSS) attacks.\"[1] However, the \"injected_network_template\" is\n    a template with text format and different rules, and is not intended to\n    be executable. Hence, the security concern is not applicable here.\n    \n    [1] https://docs.openstack.org/developer/bandit/plugins/jinja2_autoescape_false.html\n    \n    Closes-Bug: #1701712\n    Change-Id: Ie819d90492af1e5c3b3d64403495d7355dc2cd91\n", 
            "date_created": "2017-07-19 20:15:42.970201+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This issue was fixed in the openstack/nova 16.0.0.0b3 development milestone.", 
            "date_created": "2017-07-28 07:40:34.250761+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2017-07-19 20:15:40.070971+00:00"
}