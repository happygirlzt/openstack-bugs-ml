{
    "status": "Fix Released", 
    "last_updated": "2015-12-03 21:33:04.706280+00:00", 
    "description": "When boot from block/volume was started for libvirt-lxc, a check was added to _create_domain_setup_lxc that uses disk_info to determine whether or not the instance was booted from block. While the spawn call provides disk_info via a kwarg to _create_domain_and_network, many other operations leave that information off. These calls now need to provide disk_info to _create_domain_and_network so that it is available to determine whether or not the instance was booted from block/volume. Without that data, the check will erroneously determine that the instance was booted from a volume.\n\nSteps to reproduce:\n1) Create devstack with local.conf: https://gist.github.com/ramielrowe/520b0b86a5adf385b45d\n2) Boot instance from image\n3) Stop the instance\n4) Start the instance\n5) Observe exception in nova-compute logs: https://gist.github.com/ramielrowe/5cc2cb372fd019ee8331\n\nIn the stack trace you can see Nova has attempted to set up the instance as if it was booted from volume.", 
    "tags": [
        "libvirt", 
        "lxc"
    ], 
    "importance": "High", 
    "heat": 26, 
    "link": "https://bugs.launchpad.net/nova/+bug/1370590", 
    "owner": "https://api.launchpad.net/1.0/~andrew-melton", 
    "id": 1370590, 
    "index": 1617, 
    "openned": "2014-09-17 16:08:00.130094+00:00", 
    "created": "2014-09-17 16:08:00.130094+00:00", 
    "title": "Libvirt _create_domain_and_network calls missing disk_info", 
    "comments": [
        {
            "content": "When boot from block/volume was started for libvirt-lxc, a check was added to _create_domain_setup_lxc that uses disk_info to determine whether or not the instance was booted from block. While the spawn call provides disk_info via a kwarg to _create_domain_and_network, many other operations leave that information off. These calls now need to provide disk_info to _create_domain_and_network so that it is available to determine whether or not the instance was booted from block/volume. Without that data, the check will erroneously determine that the instance was booted from a volume.\n\nSteps to reproduce:\n1) Create devstack with local.conf: https://gist.github.com/ramielrowe/520b0b86a5adf385b45d\n2) Boot instance from image\n3) Stop the instance\n4) Start the instance\n5) Observe exception in nova-compute logs: https://gist.github.com/ramielrowe/5cc2cb372fd019ee8331\n\nIn the stack trace you can see Nova has attempted to set up the instance as if it was booted from volume.", 
            "date_created": "2014-09-17 16:08:00.130094+00:00", 
            "author": "https://api.launchpad.net/1.0/~andrew-melton"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/123552", 
            "date_created": "2014-09-23 19:21:37.230858+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/123553", 
            "date_created": "2014-09-23 19:21:46.211562+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/138901", 
            "date_created": "2014-12-03 23:29:41.870304+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/138901\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=de62c0d8361bf9dae16a8ff1672229fee1c15e5e\nSubmitter: Jenkins\nBranch:    master\n\ncommit de62c0d8361bf9dae16a8ff1672229fee1c15e5e\nAuthor: Rick Harris <email address hidden>\nDate:   Wed Dec 3 17:25:41 2014 -0600\n\n    libvirt: Fix domain creation for LXC\n    \n    A condition was introduced during domain creation that needs\n    disk_info to determine whether or not an instance was booted from\n    volume. Many calls to _create_domain_and_network were not providing\n    disk_info and thus the condition was always evaluating to True.\n    This change adds disk_info to each call that was missing it.\n    \n    Closes-bug: #1370590\n    \n    Co-Authored-By: Andrew Melton <email address hidden>\n    \n    Change-Id: I23e7e013d3a51b8040dd37e5facfe75b480e1721\n", 
            "date_created": "2014-12-04 12:07:44.476638+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Change abandoned by Andrew Melton (<email address hidden>) on branch: master\nReview: https://review.openstack.org/123552\nReason: Alternate fix went in.", 
            "date_created": "2014-12-04 14:07:04.251384+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Change abandoned by Andrew Melton (<email address hidden>) on branch: master\nReview: https://review.openstack.org/123553\nReason: Alternate fix went in.", 
            "date_created": "2014-12-04 14:07:12.656091+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "I fear we may have regressed back to having this bug:\n\nNow when I try to start a stopped Libvirt/LXC instance, I receive this traceback again.\n\nHere's what I found after digging in a bit:\n\nThis commit introduced a re-assignment of the 'disk_info' variable, which gets passed to self._create_domain_and_network(...), where it then gets passed to self._create_domain_setup_lxc(...). It then proceeds to cause a failure in this method due to the check for whether the instance was booted from a volume returning True and thusly it attempting to access connection details that don't exist. The original assignment of this variable is here: https://github.com/openstack/nova/blob/a7a0b4e542a65b3ba3650db2b7560eb587b9606c/nova/virt/libvirt/driver.py#L2066-L2069, and then it gets re-assigned here: https://github.com/openstack/nova/blob/a7a0b4e542a65b3ba3650db2b7560eb587b9606c/nova/virt/libvirt/driver.py#L2082-L2083. In our LXC case, this gets re-assigned to an empty list.\n\nPreviously, this empty list would get assigned to disk_info_json, which would then cause the self._create_images_and_backing(...) to only execute the last line: https://github.com/openstack/nova/blob/a7a0b4e542a65b3ba3650db2b7560eb587b9606c/nova/virt/libvirt/driver.py#L5936-L5937, then it went on its way - the booted_from_volume check would return False, and it'd execute the expected block here: https://github.com/openstack/nova/blob/a7a0b4e542a65b3ba3650db2b7560eb587b9606c/nova/virt/libvirt/driver.py#L4234-L4236.", 
            "date_created": "2015-08-06 17:18:51.096536+00:00", 
            "author": "https://api.launchpad.net/1.0/~thomas-maddox"
        }, 
        {
            "content": "Would probably help if I linked the commit I was talking about: https://github.com/openstack/nova/commit/a7a0b4e542a65b3ba3650db2b7560eb587b9606c.", 
            "date_created": "2015-08-06 17:20:38.350535+00:00", 
            "author": "https://api.launchpad.net/1.0/~thomas-maddox"
        }, 
        {
            "content": "Sounds like this bug has come back.", 
            "date_created": "2015-08-12 21:36:18.905466+00:00", 
            "author": "https://api.launchpad.net/1.0/~mikal"
        }, 
        {
            "content": "Apparently https://review.openstack.org/#/c/177437/ broke live migration, which was fixed in https://review.openstack.org/#/c/190110/.\n\nTrying to follow comment 7, the problem is that the bool checks in:\n\nhttps://github.com/openstack/nova/blob/a7a0b4e542a65b3ba3650db2b7560eb587b9606c/nova/virt/libvirt/driver.py#L5893-L5894\n\nChanged because [] evaluates differently than '[]' which was the previously json-ified version of [] from _get_instance_disk_info for lxc.\n\nStill, wouldn't that just then break this for loop since it'd be iterating the json string rather than a real list?\n\nhttps://github.com/openstack/nova/blob/a7a0b4e542a65b3ba3650db2b7560eb587b9606c/nova/virt/libvirt/driver.py#L5896", 
            "date_created": "2015-08-19 21:04:05.698428+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Hi Matt,\n\nI'd been doing some digging as well and have come across what appears to be an issue caused by https://review.openstack.org/#/c/177437/  as well. Here's what I found:\n\nIn hard reboot we have (https://github.com/openstack/nova/blob/fe4189411d6f1832785a3c8a53962446289abc37/nova/virt/libvirt/driver.py#L2177-L2178):\ndisk_info = self._get_instance_disk_info(instance.name, xml,\n                                                 block_device_info)\n\nIt was originally\njson_disk_info = self._get_instance_disk_info(instance.name, xml,\n                                                 block_device_info)\n\nAs it turns out the actual data returned from _get_instance_disk_info is completely different from what's returned from blockinfo.get_disk_info. So, _create_images_and_backing needs the result from _get_instance_disk_info, and _create_domain_and_network needs the result from blockinfo.get_disk_info.\n\nLet me get this branch cleaned up, and I'll push up a review that fixes this.", 
            "date_created": "2015-08-19 21:19:38.698046+00:00", 
            "author": "https://api.launchpad.net/1.0/~andrew-melton"
        }, 
        {
            "content": "Unless I'm missing something, disk_info here should be a list:\n\nhttps://github.com/openstack/nova/blob/master/nova/virt/libvirt/driver.py#L4429\n\nBut the code there is treating it as though it expects it to be a dict, like what comes back from nova.virt.libvirt.blockinfo.get_disk_info - but if you look at the call chain from _create_domain_and_network it's not going to be, at least in the _hard_reboot case.", 
            "date_created": "2015-08-19 21:47:56.905658+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Related fix proposed to branch: master\nReview: https://review.openstack.org/214814", 
            "date_created": "2015-08-19 21:53:03.331867+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "That's the issue, the original disk_info from blockinfo.get_disk_info gets overwritten with the result from _get_instance_disk_info. Before the refactoring the result from _get_instance_disk_info was written to 'disk_info_json' and simply passed to create_images_and_backing.\n\nHere's what the two results from those functions look like http://paste.openstack.org/show/422209/", 
            "date_created": "2015-08-19 22:00:17.863157+00:00", 
            "author": "https://api.launchpad.net/1.0/~andrew-melton"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/214816", 
            "date_created": "2015-08-19 22:02:25.945408+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/214925", 
            "date_created": "2015-08-20 02:09:19.815489+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Related fix proposed to branch: master\nReview: https://review.openstack.org/214927", 
            "date_created": "2015-08-20 02:27:01.853626+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "I just recreated, here is the stacktrace:\n\n2015-08-21 15:18:02.904 ERROR oslo_messaging.rpc.dispatcher [req-d11a73e6-6a83-423e-b92e-eb8004412665 demo demo] Exception during message handling: 'NoneType' object has no attribute '__getitem__'\n2015-08-21 15:18:02.904 TRACE oslo_messaging.rpc.dispatcher Traceback (most recent call last):\n2015-08-21 15:18:02.904 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/local/lib/python2.7/dist-packages/oslo_messaging/rpc/dispatcher.py\", line 142, in _dispatch_and_reply\n2015-08-21 15:18:02.904 TRACE oslo_messaging.rpc.dispatcher     executor_callback))\n2015-08-21 15:18:02.904 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/local/lib/python2.7/dist-packages/oslo_messaging/rpc/dispatcher.py\", line 186, in _dispatch\n2015-08-21 15:18:02.904 TRACE oslo_messaging.rpc.dispatcher     executor_callback)\n2015-08-21 15:18:02.904 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/local/lib/python2.7/dist-packages/oslo_messaging/rpc/dispatcher.py\", line 129, in _do_dispatch\n2015-08-21 15:18:02.904 TRACE oslo_messaging.rpc.dispatcher     result = func(ctxt, **new_args)\n2015-08-21 15:18:02.904 TRACE oslo_messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/exception.py\", line 89, in wrapped\n2015-08-21 15:18:02.904 TRACE oslo_messaging.rpc.dispatcher     payload)\n2015-08-21 15:18:02.904 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/local/lib/python2.7/dist-packages/oslo_utils/excutils.py\", line 119, in __exit__\n2015-08-21 15:18:02.904 TRACE oslo_messaging.rpc.dispatcher     six.reraise(self.type_, self.value, self.tb)\n2015-08-21 15:18:02.904 TRACE oslo_messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/exception.py\", line 72, in wrapped\n2015-08-21 15:18:02.904 TRACE oslo_messaging.rpc.dispatcher     return f(self, context, *args, **kw)\n2015-08-21 15:18:02.904 TRACE oslo_messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/compute/manager.py\", line 345, in decorated_function\n2015-08-21 15:18:02.904 TRACE oslo_messaging.rpc.dispatcher     LOG.warning(msg, e, instance_uuid=instance_uuid)\n2015-08-21 15:18:02.904 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/local/lib/python2.7/dist-packages/oslo_utils/excutils.py\", line 119, in __exit__\n2015-08-21 15:18:02.904 TRACE oslo_messaging.rpc.dispatcher     six.reraise(self.type_, self.value, self.tb)\n2015-08-21 15:18:02.904 TRACE oslo_messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/compute/manager.py\", line 316, in decorated_function\n2015-08-21 15:18:02.904 TRACE oslo_messaging.rpc.dispatcher     return function(self, context, *args, **kwargs)\n2015-08-21 15:18:02.904 TRACE oslo_messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/compute/manager.py\", line 395, in decorated_function\n2015-08-21 15:18:02.904 TRACE oslo_messaging.rpc.dispatcher     return function(self, context, *args, **kwargs)\n2015-08-21 15:18:02.904 TRACE oslo_messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/compute/manager.py\", line 373, in decorated_function\n2015-08-21 15:18:02.904 TRACE oslo_messaging.rpc.dispatcher     kwargs['instance'], e, sys.exc_info())\n2015-08-21 15:18:02.904 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/local/lib/python2.7/dist-packages/oslo_utils/excutils.py\", line 119, in __exit__\n2015-08-21 15:18:02.904 TRACE oslo_messaging.rpc.dispatcher     six.reraise(self.type_, self.value, self.tb)\n2015-08-21 15:18:02.904 TRACE oslo_messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/compute/manager.py\", line 361, in decorated_function\n2015-08-21 15:18:02.904 TRACE oslo_messaging.rpc.dispatcher     return function(self, context, *args, **kwargs)\n2015-08-21 15:18:02.904 TRACE oslo_messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/compute/manager.py\", line 2471, in start_instance\n2015-08-21 15:18:02.904 TRACE oslo_messaging.rpc.dispatcher     self._power_on(context, instance)\n2015-08-21 15:18:02.904 TRACE oslo_messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/compute/manager.py\", line 2444, in _power_on\n2015-08-21 15:18:02.904 TRACE oslo_messaging.rpc.dispatcher     block_device_info)\n2015-08-21 15:18:02.904 TRACE oslo_messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 2320, in power_on\n2015-08-21 15:18:02.904 TRACE oslo_messaging.rpc.dispatcher     self._hard_reboot(context, instance, network_info, block_device_info)\n2015-08-21 15:18:02.904 TRACE oslo_messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 2194, in _hard_reboot\n2015-08-21 15:18:02.904 TRACE oslo_messaging.rpc.dispatcher     vifs_already_plugged=True)\n2015-08-21 15:18:02.904 TRACE oslo_messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 4590, in _create_domain_and_network\n2015-08-21 15:18:02.904 TRACE oslo_messaging.rpc.dispatcher     block_device_info, disk_info):\n2015-08-21 15:18:02.904 TRACE oslo_messaging.rpc.dispatcher   File \"/usr/lib/python2.7/contextlib.py\", line 17, in __enter__\n2015-08-21 15:18:02.904 TRACE oslo_messaging.rpc.dispatcher     return self.gen.next()\n2015-08-21 15:18:02.904 TRACE oslo_messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 4498, in _lxc_disk_handler\n2015-08-21 15:18:02.904 TRACE oslo_messaging.rpc.dispatcher     block_device_info, disk_info)\n2015-08-21 15:18:02.904 TRACE oslo_messaging.rpc.dispatcher   File \"/opt/stack/nova/nova/virt/libvirt/driver.py\", line 4438, in _create_domain_setup_lxc\n2015-08-21 15:18:02.904 TRACE oslo_messaging.rpc.dispatcher     disk_path = root_disk['connection_info']['data']['device_path']\n2015-08-21 15:18:02.904 TRACE oslo_messaging.rpc.dispatcher TypeError: 'NoneType' object has no attribute '__getitem__'\n2015-08-21 15:18:02.904 TRACE oslo_messaging.rpc.dispatcher\n", 
            "date_created": "2015-08-21 15:19:02.720277+00:00", 
            "author": "https://api.launchpad.net/1.0/~mriedem"
        }, 
        {
            "content": "Change abandoned by Matt Riedemann (<email address hidden>) on branch: master\nReview: https://review.openstack.org/214925\nReason: apmelton had basically the same fix up a few hours before me:\n\nhttps://review.openstack.org/#/c/214816/", 
            "date_created": "2015-08-21 16:05:25.585639+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/214816\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=5c955831b48be849986cec2983e06fa15eb869f9\nSubmitter: Jenkins\nBranch:    master\n\ncommit 5c955831b48be849986cec2983e06fa15eb869f9\nAuthor: Andrew Melton <email address hidden>\nDate:   Wed Aug 19 14:54:35 2015 -0700\n\n    libvirt: use proper disk_info in _hard_reboot\n    \n    Previous commmit:\n      commit a7a0b4e542a65b3ba3650db2b7560eb587b9606c\n      Author: Joel Coffman <email address hidden>\n      Date:   Fri Apr 24 16:14:25 2015 -0400\n        libvirt: Remove unnecessary JSON conversions\n    \n    Renamed the result from _get_instance_disk_info from disk_info_json\n    to disk_info. This over shadowed a previous disk_info and thus\n    overwrote the proper data used to call _create_domain_and_network.\n    This patch uses a different variable, backing_disk_info, for the\n    disk info used to call _creat_images_and_backing.\n    \n    Co-Authored-By: Matt Riedemann <email address hidden>\n    \n    Change-Id: Ia0ca86bd5c89e8d5c5ece0438ed45af314f21748\n    Closes-bug: #1370590\n", 
            "date_created": "2015-08-22 10:01:53.094441+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/214814\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=0efeefe88f0399ac3e46dcf1e6ef6331b6955853\nSubmitter: Jenkins\nBranch:    master\n\ncommit 0efeefe88f0399ac3e46dcf1e6ef6331b6955853\nAuthor: Matt Riedemann <email address hidden>\nDate:   Wed Aug 19 14:52:33 2015 -0700\n\n    libvirt: add docstring for _get_instance_disk_info\n    \n    While trying to read through bug 1370590 and the call chain for lxc\n    there, it gets confusing trying to keep track of just what disk_info is\n    here - is it a dict, a json string, a list?  This is especially\n    confusing when you have things like\n    nova.virt.libvirt.blockinfo.get_disk_info used around the same code\n    paths and that returns a dict.\n    \n    So add some docstrings in this specific method to help keep track of\n    what's going on here.  Long-term we should probably create some typed\n    objects for these things.\n    \n    Related-Bug: #1370590\n    \n    Change-Id: I337a8907fabfa6b0e899d45beb736a569c3067c4\n", 
            "date_created": "2015-08-24 16:04:26.777519+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/214927\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=85791527452517ef9a4ccc3ed3263c4c81895c68\nSubmitter: Jenkins\nBranch:    master\n\ncommit 85791527452517ef9a4ccc3ed3263c4c81895c68\nAuthor: Matt Riedemann <email address hidden>\nDate:   Wed Aug 19 19:24:27 2015 -0700\n\n    libvirt: _create_domain_setup_lxc needs to default disk mapping as a dict\n    \n    The disk_info passed to _create_domain_setup_lxc should be a dict and\n    should be the result of calling blockinfo.get_disk_info higher up the\n    call chain.\n    \n    When getting the 'mapping' value from disk_info, it should default to an\n    empty dict, not a list, since that's what the 'mapping' value is in\n    disk_info from blockinfo.get_disk_info - plus it doesn't make sense to\n    pass disk_mapping as a list to _is_booted_from_volume based on how it's\n    used.\n    \n    The unit test that covered _create_domain_setup_lxc was mocking out the\n    call to _is_booted_from_volume and didn't assert the call args so this\n    went unnoticed until now.  The test is updated to assert the call args.\n    \n    Related-Bug: #1370590\n    \n    Change-Id: I2474c2b31887daa40e8af039a93c48a57dda5c32\n", 
            "date_created": "2015-08-24 16:58:04.116252+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2015-12-03 21:33:03.039977+00:00"
}