{
    "status": "Confirmed", 
    "last_updated": "2017-07-24 15:39:01.649500+00:00", 
    "description": "The nova/virt/libvirt/imagebackend.py file contains code for pre-allocating image files, so that sufficient space is guaranteed available for the VM's full disk size. As well as preventing accidental out-of-space conditions, this is important for maximising performance.\n\nIt currently just calls 'qemu-img info' to get the virtual image size, and then calls 'fallocate' to allocate file system blocks to match this size. This is fine for raw files, but is significantly flawed for qcow2 files.\n\n - QCow2 files have extra space overhead beyond the logical image size. There is header metadata, cluster lookup tables and so forth. As a result Nova is not allocating sufficient space for qcow2 files.\n\n - The qcow2 internal metadata is not being pre-allocated. Since the allocation was done as the FS level, qcow2 file doesn't know it has all this space pre-allocated, so its internal metadata still setup to assume it is a (mostly) empty file. This will have a runtime performance overhead on guest writes, since further internal metadata will have to be updated.\n\n - The file will suffer from fragmentation. Again since the internal metadat does not know the FS has full pre-allocated its size, as the guest writes blocks, they will be allocated in the internal metadata on a first-come-first-served basis. This will caused the layout of the virtual disk blocks to be random inside the qcow2 file. This causes significant fragmentation which will be bad for performance.\n\nThe solution to all these problems is to use qemu-img to do the preallocation, so the qcow2 file internals are fully in sync with the filesystem size.", 
    "tags": [
        "libvirt"
    ], 
    "importance": "Low", 
    "heat": 12, 
    "link": "https://bugs.launchpad.net/nova/+bug/1510328", 
    "owner": "None", 
    "id": 1510328, 
    "index": 1878, 
    "openned": "2015-10-27 00:43:44.320296+00:00", 
    "created": "2015-10-27 00:43:44.320296+00:00", 
    "title": "Nova pre-allocation of qcow2 is flawed", 
    "comments": [
        {
            "content": "The nova/virt/libvirt/imagebackend.py file contains code for pre-allocating image files, so that sufficient space is guaranteed available for the VM's full disk size. As well as preventing accidental out-of-space conditions, this is important for maximising performance.\n\nIt currently just calls 'qemu-img info' to get the virtual image size, and then calls 'fallocate' to allocate file system blocks to match this size. This is fine for raw files, but is significantly flawed for qcow2 files.\n\n - QCow2 files have extra space overhead beyond the logical image size. There is header metadata, cluster lookup tables and so forth. As a result Nova is not allocating sufficient space for qcow2 files.\n\n - The qcow2 internal metadata is not being pre-allocated. Since the allocation was done as the FS level, qcow2 file doesn't know it has all this space pre-allocated, so its internal metadata still setup to assume it is a (mostly) empty file. This will have a runtime performance overhead on guest writes, since further internal metadata will have to be updated.\n\n - The file will suffer from fragmentation. Again since the internal metadat does not know the FS has full pre-allocated its size, as the guest writes blocks, they will be allocated in the internal metadata on a first-come-first-served basis. This will caused the layout of the virtual disk blocks to be random inside the qcow2 file. This causes significant fragmentation which will be bad for performance.\n\nThe solution to all these problems is to use qemu-img to do the preallocation, so the qcow2 file internals are fully in sync with the filesystem size.", 
            "date_created": "2015-10-27 00:43:44.320296+00:00", 
            "author": "https://api.launchpad.net/1.0/~berrange"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/241401", 
            "date_created": "2015-11-03 22:59:32.023911+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Change abandoned by Mark Doffman (<email address hidden>) on branch: master\nReview: https://review.openstack.org/241401\nReason: After discussion with Daniel found that this patch is fatally broken as the preallocate=metadata apparently will not work with backing files.", 
            "date_created": "2016-02-25 21:09:24.978252+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Can you please mention the version which you found this error?", 
            "date_created": "2016-03-18 06:21:07.633426+00:00", 
            "author": "https://api.launchpad.net/1.0/~anseela-m00"
        }, 
        {
            "content": "hi\n\nPlease let me know how to reproduce this  bug.", 
            "date_created": "2016-03-22 10:51:35.455191+00:00", 
            "author": "https://api.launchpad.net/1.0/~anseela-m00"
        }, 
        {
            "content": "There are no currently open reviews on this bug, changing the status back to the previous state and unassigning. If there are active reviews related to this bug, please include links in comments. ", 
            "date_created": "2017-07-24 15:38:59.214715+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }
    ]
}