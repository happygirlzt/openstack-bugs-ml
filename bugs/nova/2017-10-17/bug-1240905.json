{
    "status": "Fix Released", 
    "last_updated": "2014-09-22 22:21:53.400247+00:00", 
    "description": "libvirt driver's get_connection() is not thread safe in the\npresence of a libvirtd restart during concurrent incoming\nrequests.\n\nWith existing code, each request will in turn call get_connection,\nfind the connection is broken, try to create new one, block\nfor a while and yield to the next thread to do the same.\nYou get as many connections as there are incoming requests\nand only the last one is used finally. If enough are incoming\nthese connections can exhaust the client pool configured\nfor libvirtd.\n\nOne fix is to hold a lock while creating the connection.\nNote that has_min_version calls _conn which calls get_connection\nso the lock may not be held over the call to has_min_version()", 
    "tags": [
        "havana-backport-potential", 
        "in-stable-havana"
    ], 
    "importance": "Medium", 
    "heat": 10, 
    "link": "https://bugs.launchpad.net/nova/+bug/1240905", 
    "owner": "None", 
    "id": 1240905, 
    "index": 3659, 
    "openned": "2013-10-17 10:10:55.825294+00:00", 
    "created": "2013-10-17 10:10:55.825294+00:00", 
    "title": "libvirtd restart can sometimes cause multiple nova-compute connections", 
    "comments": [
        {
            "content": "libvirt driver's get_connection() is not thread safe in the\npresence of a libvirtd restart during concurrent incoming\nrequests.\n\nWith existing code, each request will in turn call get_connection,\nfind the connection is broken, try to create new one, block\nfor a while and yield to the next thread to do the same.\nYou get as many connections as there are incoming requests\nand only the last one is used finally. If enough are incoming\nthese connections can exhaust the client pool configured\nfor libvirtd.\n\nOne fix is to hold a lock while creating the connection.\nNote that has_min_version calls _conn which calls get_connection\nso the lock may not be held over the call to has_min_version()", 
            "date_created": "2013-10-17 10:10:55.825294+00:00", 
            "author": "https://api.launchpad.net/1.0/~tom-hancock"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/52401\nCommitted: http://github.com/openstack/nova/commit/b2e64e379835f57128e66f507438130eda716814\nSubmitter: Jenkins\nBranch:    master\n\ncommit b2e64e379835f57128e66f507438130eda716814\nAuthor: Tom Hancock <email address hidden>\nDate:   Thu Oct 17 09:48:54 2013 +0000\n\n    make libvirt driver get_connection thread-safe\n    \n    libvirt driver's get_connection is not thread safe in the\n    presence of a libvirtd restart during concurrent incoming\n    requests.\n    \n    With existing code each will in turn call get_connection,\n    find the connection is broken, try to create new one, block\n    for a while and yield to the next thread to do the same.\n    You get as many connections as there are incoming requests\n    and only the last one is used finally. If enough are incoming\n    these connections can exhaust the client pool configured\n    for libvirtd.\n    One fix is to hold a lock while creating the connection.\n    Note that has_min_version calls _conn which calls get_connection\n    and thus the direct call to _has_min_version()\n    \n    Also added the exception text if it fails to register an event\n    handler for lifecycle events.\n    \n    Change-Id: I090765802bfe443440f16722bc7c43b6280fe56a\n    Fixes: bug #1240905\n", 
            "date_created": "2013-10-24 20:02:38.400029+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: stable/havana\nReview: https://review.openstack.org/54595", 
            "date_created": "2013-10-30 17:40:38.186351+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/54595\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=98ab49bbb29890730ce544b785f1babff3e694e1\nSubmitter: Jenkins\nBranch:    stable/havana\n\ncommit 98ab49bbb29890730ce544b785f1babff3e694e1\nAuthor: Tom Hancock <email address hidden>\nDate:   Thu Oct 17 09:48:54 2013 +0000\n\n    make libvirt driver get_connection thread-safe\n    \n    libvirt driver's get_connection is not thread safe in the\n    presence of a libvirtd restart during concurrent incoming\n    requests.\n    \n    With existing code each will in turn call get_connection,\n    find the connection is broken, try to create new one, block\n    for a while and yield to the next thread to do the same.\n    You get as many connections as there are incoming requests\n    and only the last one is used finally. If enough are incoming\n    these connections can exhaust the client pool configured\n    for libvirtd.\n    One fix is to hold a lock while creating the connection.\n    Note that has_min_version calls _conn which calls get_connection\n    and thus the direct call to _has_min_version()\n    \n    Also added the exception text if it fails to register an event\n    handler for lifecycle events.\n    \n    Change-Id: I090765802bfe443440f16722bc7c43b6280fe56a\n    Fixes: bug #1240905\n    (cherry picked from commit b2e64e379835f57128e66f507438130eda716814)\n", 
            "date_created": "2014-08-15 03:35:13.612800+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2013-12-04 10:30:47.201175+00:00"
}