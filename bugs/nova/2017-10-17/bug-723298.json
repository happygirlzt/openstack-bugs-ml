{
    "status": "Fix Released", 
    "last_updated": "2011-04-15 08:37:29.697815+00:00", 
    "description": "The init_host method in the abstract Network manager class invokes driver.init_host(). \nThis causes linux_net.init_host() to be invoked even for the Flat Network manager. \nlinux_net.init_host() configures IP tables for floating IP forwarding. However floating IPs will not work in flat mode because the source natting will not work.\n\nThis configure is therefore probably unnecessary. The __init__ method in FlatManager might be overriden in order to not call super.__init__, and floating IP commands should raise NotImplemented() for now.\n\nThis bug report follows a discussion in question #144979 (https://answers.launchpad.net/nova/+question/144979)", 
    "tags": [], 
    "importance": "Low", 
    "heat": 10, 
    "link": "https://bugs.launchpad.net/nova/+bug/723298", 
    "owner": "https://api.launchpad.net/1.0/~salvatore-orlando", 
    "id": 723298, 
    "index": 106, 
    "openned": "2011-02-22 18:08:11.309821+00:00", 
    "created": "2011-02-22 18:08:11.309821+00:00", 
    "title": "FlatManager should not call driver.init_host()", 
    "comments": [
        {
            "content": "The init_host method in the abstract Network manager class invokes driver.init_host(). \nThis causes linux_net.init_host() to be invoked even for the Flat Network manager. \nlinux_net.init_host() configures IP tables for floating IP forwarding. However floating IPs will not work in flat mode because the source natting will not work.\n\nThis configure is therefore probably unnecessary. The __init__ method in FlatManager might be overriden in order to not call super.__init__, and floating IP commands should raise NotImplemented() for now.\n\nThis bug report follows a discussion in question #144979 (https://answers.launchpad.net/nova/+question/144979)", 
            "date_created": "2011-02-22 18:08:11.309821+00:00", 
            "author": "https://api.launchpad.net/1.0/~salvatore-orlando"
        }
    ], 
    "closed": "2011-04-15 08:37:28.332855+00:00"
}