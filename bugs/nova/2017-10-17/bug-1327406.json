{
    "status": "Fix Released", 
    "last_updated": "2014-10-16 08:45:48.297900+00:00", 
    "description": "I am testing with the templates in https://review.openstack.org/#/c/97366/\n\nI can create a stack.  I can use `curl` to hit the webhooks to scale up and down the old-style group and to scale down the new-style group; those all work.  What fails is hitting the webhook to scale up the new-style group.  Here is a typescript showing the failure:\n\n$ curl -X POST 'http://10.10.0.125:8000/v1/signal/arn%3Aopenstack%3Aheat%3A%3A39675672862f4bd08505bfe1283773e0%3Astacks%2Ftest4%2F3cd6160b-d8c5-48f1-a527-4c7df9205fc3%2Fresources%2FNewScaleUpPolicy?Timestamp=2014-06-06T19%3A45%3A27Z&SignatureMethod=HmacSHA256&AWSAccessKeyId=35678396d987432f87cda8e4c6cdbfb5&SignatureVersion=2&Signature=W3aJQ6SR7O5lLOxLEQndbzNB%2FUhefr1W7qO9zNZ%2BHVs%3D'\n\n<ErrorResponse><Error><Message>The request processing has failed due to an internal error:Remote error: ResourceFailure Error: Nested stack UPDATE failed: Error: Resource CREATE failed: NotFound: No Network matching {'label': u'private'}. (HTTP 404)\n[u'Traceback (most recent call last):\\n', u'  File \"/opt/stack/heat/heat/engine/service.py\", line 61, in wrapped\\n    return func(self, ctx, *args, **kwargs)\\n', u'  File \"/opt/stack/heat/heat/engine/service.py\", line 911, in resource_signal\\n    stack[resource_name].signal(details)\\n', u'  File \"/opt/stack/heat/heat/engine/resource.py\", line 879, in signal\\n    raise failure\\n', u\"ResourceFailure: Error: Nested stack UPDATE failed: Error: Resource CREATE failed: NotFound: No Network matching {'label': u'private'}. (HTTP 404)\\n\"].</Message><Code>InternalFailure</Code><Type>Server</Type></Error></ErrorResponse>\n\nThe original sin looks like this in the heat engine log:\n\n2014-06-06 17:39:20.013 28692 DEBUG urllib3.connectionpool [req-2391a9ea-46d6-46f0-9a7b-cf999a8697e9 ] \"GET /v2/39675672862f4bd08505bfe1283773e0/os-networks HTTP/1.1\" 200 16 _make_request /usr/lib/python2.7/dist-packages/urllib3/connectionpool.py:415\n2014-06-06 17:39:20.014 28692 ERROR heat.engine.resource [req-2391a9ea-46d6-46f0-9a7b-cf999a8697e9 None] CREATE : Server \"my_instance\" Stack \"test1-new_style-qidqbd5nrk44-43e7l57kqf5w-4t3xdjrfrr7s\" [20523269-0ebb-45b8-ad59-75f55607f3bd]\n2014-06-06 17:39:20.014 28692 TRACE heat.engine.resource Traceback (most recent call last):\n2014-06-06 17:39:20.014 28692 TRACE heat.engine.resource   File \"/opt/stack/heat/heat/engine/resource.py\", line 383, in _do_action\n2014-06-06 17:39:20.014 28692 TRACE heat.engine.resource     handle())\n2014-06-06 17:39:20.014 28692 TRACE heat.engine.resource   File \"/opt/stack/heat/heat/engine/resources/server.py\", line 493, in handle_create\n2014-06-06 17:39:20.014 28692 TRACE heat.engine.resource     nics = self._build_nics(self.properties.get(self.NETWORKS))\n2014-06-06 17:39:20.014 28692 TRACE heat.engine.resource   File \"/opt/stack/heat/heat/engine/resources/server.py\", line 597, in _build_nics\n2014-06-06 17:39:20.014 28692 TRACE heat.engine.resource     network = self.nova().networks.find(label=label_or_uuid)\n2014-06-06 17:39:20.014 28692 TRACE heat.engine.resource   File \"/opt/stack/python-novaclient/novaclient/base.py\", line 194, in find\n2014-06-06 17:39:20.014 28692 TRACE heat.engine.resource     raise exceptions.NotFound(msg)\n2014-06-06 17:39:20.014 28692 TRACE heat.engine.resource NotFound: No Network matching {'label': u'private'}. (HTTP 404)\n\nPrivate debug logging reveals that in the scale-up case, the call to \"GET /v2/{tenant-id}/os-networks HTTP/1.1\" returns with response code 200 and an empty list of networks.  Comparing with the corresponding call when the stack is being created shows no difference in the calls --- because the normal logging omits the headers --- even though the results differ (when the stack is being created, the result contains the correct list of networks).  Turning on HTTP debug logging in the client reveals that the X-Auth-Token headers differ.", 
    "tags": [
        "in-stable-icehouse", 
        "network"
    ], 
    "importance": "High", 
    "heat": 14, 
    "link": "https://bugs.launchpad.net/nova/+bug/1327406", 
    "owner": "https://api.launchpad.net/1.0/~mike-spreitzer", 
    "id": 1327406, 
    "index": 1508, 
    "openned": "2014-06-10 13:03:57.887395+00:00", 
    "created": "2014-06-06 20:04:52.084961+00:00", 
    "title": "The One And Only network is variously visible", 
    "comments": [
        {
            "content": "I am testing with the templates in https://review.openstack.org/#/c/97366/\n\nI can create a stack.  I can use `curl` to hit the webhooks to scale up and down the old-style group and to scale down the new-style group; those all work.  What fails is hitting the webhook to scale up the new-style group.  Here is a typescript showing the failure:\n\n$ curl -X POST 'http://10.10.0.125:8000/v1/signal/arn%3Aopenstack%3Aheat%3A%3A39675672862f4bd08505bfe1283773e0%3Astacks%2Ftest4%2F3cd6160b-d8c5-48f1-a527-4c7df9205fc3%2Fresources%2FNewScaleUpPolicy?Timestamp=2014-06-06T19%3A45%3A27Z&SignatureMethod=HmacSHA256&AWSAccessKeyId=35678396d987432f87cda8e4c6cdbfb5&SignatureVersion=2&Signature=W3aJQ6SR7O5lLOxLEQndbzNB%2FUhefr1W7qO9zNZ%2BHVs%3D'\n\n<ErrorResponse><Error><Message>The request processing has failed due to an internal error:Remote error: ResourceFailure Error: Nested stack UPDATE failed: Error: Resource CREATE failed: NotFound: No Network matching {'label': u'private'}. (HTTP 404)\n[u'Traceback (most recent call last):\\n', u'  File \"/opt/stack/heat/heat/engine/service.py\", line 61, in wrapped\\n    return func(self, ctx, *args, **kwargs)\\n', u'  File \"/opt/stack/heat/heat/engine/service.py\", line 911, in resource_signal\\n    stack[resource_name].signal(details)\\n', u'  File \"/opt/stack/heat/heat/engine/resource.py\", line 879, in signal\\n    raise failure\\n', u\"ResourceFailure: Error: Nested stack UPDATE failed: Error: Resource CREATE failed: NotFound: No Network matching {'label': u'private'}. (HTTP 404)\\n\"].</Message><Code>InternalFailure</Code><Type>Server</Type></Error></ErrorResponse>\n\nThe original sin looks like this in the heat engine log:\n\n2014-06-06 17:39:20.013 28692 DEBUG urllib3.connectionpool [req-2391a9ea-46d6-46f0-9a7b-cf999a8697e9 ] \"GET /v2/39675672862f4bd08505bfe1283773e0/os-networks HTTP/1.1\" 200 16 _make_request /usr/lib/python2.7/dist-packages/urllib3/connectionpool.py:415\n2014-06-06 17:39:20.014 28692 ERROR heat.engine.resource [req-2391a9ea-46d6-46f0-9a7b-cf999a8697e9 None] CREATE : Server \"my_instance\" Stack \"test1-new_style-qidqbd5nrk44-43e7l57kqf5w-4t3xdjrfrr7s\" [20523269-0ebb-45b8-ad59-75f55607f3bd]\n2014-06-06 17:39:20.014 28692 TRACE heat.engine.resource Traceback (most recent call last):\n2014-06-06 17:39:20.014 28692 TRACE heat.engine.resource   File \"/opt/stack/heat/heat/engine/resource.py\", line 383, in _do_action\n2014-06-06 17:39:20.014 28692 TRACE heat.engine.resource     handle())\n2014-06-06 17:39:20.014 28692 TRACE heat.engine.resource   File \"/opt/stack/heat/heat/engine/resources/server.py\", line 493, in handle_create\n2014-06-06 17:39:20.014 28692 TRACE heat.engine.resource     nics = self._build_nics(self.properties.get(self.NETWORKS))\n2014-06-06 17:39:20.014 28692 TRACE heat.engine.resource   File \"/opt/stack/heat/heat/engine/resources/server.py\", line 597, in _build_nics\n2014-06-06 17:39:20.014 28692 TRACE heat.engine.resource     network = self.nova().networks.find(label=label_or_uuid)\n2014-06-06 17:39:20.014 28692 TRACE heat.engine.resource   File \"/opt/stack/python-novaclient/novaclient/base.py\", line 194, in find\n2014-06-06 17:39:20.014 28692 TRACE heat.engine.resource     raise exceptions.NotFound(msg)\n2014-06-06 17:39:20.014 28692 TRACE heat.engine.resource NotFound: No Network matching {'label': u'private'}. (HTTP 404)\n\nPrivate debug logging reveals that in the scale-up case, the call to \"GET /v2/{tenant-id}/os-networks HTTP/1.1\" returns with response code 200 and an empty list of networks.  Comparing with the corresponding call when the stack is being created shows no difference in the calls --- because the normal logging omits the headers --- even though the results differ (when the stack is being created, the result contains the correct list of networks).  Turning on HTTP debug logging in the client reveals that the X-Auth-Token headers differ.", 
            "date_created": "2014-06-06 20:04:52.084961+00:00", 
            "author": "https://api.launchpad.net/1.0/~mike-spreitzer"
        }, 
        {
            "content": "The token used to scale up is returned from this call:\n\n2014-06-06 19:46:16.688 16427 DEBUG keystoneclient.session [req-96acd957-0dad-47b4-b0dd-739e83e58933 ] REQ: curl -i -X POST http://10.10.0.125:5000/v3/auth/tokens -H \"Content-Type: application/json\" -H \"Accept: application/json\" -H \"User-Agent: python-keystoneclient\" -d '{\"auth\": {\"scope\": {\"OS-TRUST:trust\": {\"id\": \"f776872213bc4e63946e06db09c8f9fa\"}}, \"identity\": {\"password\": {\"user\": {\"domain\": {\"id\": \"default\"}, \"password\": \"<snip/>\", \"name\": \"heat\"}}, \"methods\": [\"password\"]}}}' request /opt/stack/python-keystoneclient/keystoneclient/session.py:252\n\n", 
            "date_created": "2014-06-06 20:11:15.381856+00:00", 
            "author": "https://api.launchpad.net/1.0/~mike-spreitzer"
        }, 
        {
            "content": "The headers of the response to that token convey the token and little else.  The body of the response is as follows.\n\n{\"token\": {\"OS-TRUST:trust\": {\"impersonation\": true, \"trustee_user\": {\"id\": \"647309399c7b42c3b88f8a78a5d1f38f\"}, \"id\": \"f776872213bc4e63946e06db09c8f9fa\", \"trustor_user\": {\"id\": \"ce6f7a9e2ba44728a651a688c8f61049\"}}, \"methods\": [\"password\"], \"roles\": [{\"id\": \"d00c466a45c24f4caedeb226e47d7574\", \"name\": \"heat_stack_owner\"}], \"expires_at\": \"2014-06-06T20:46:16.777062Z\", \"project\": {\"domain\": {\"id\": \"default\", \"name\": \"Default\"}, \"id\": \"39675672862f4bd08505bfe1283773e0\", \"name\": \"admin\"}, \"catalog\": [{\"endpoints\": [{\"url\": \"http://10.10.0.125:8000/v1\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"5505a74767ee4589a775b86ac3304903\"}, {\"url\": \"http://10.10.0.125:8000/v1\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"e0a506195dc74585b0fdec6fea5f3f50\"}, {\"url\": \"http://10.10.0.125:8000/v1\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"e304274856ce47bf98f063c2c0cbb61c\"}], \"type\": \"cloudformation\", \"id\": \"1dd2671af86f42febb3137cbf688537f\", \"name\": \"heat\"}, {\"endpoints\": [{\"url\": \"http://10.10.0.125:9292\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"027bc57c01594b0abe8bc3c1ce8f8a94\"}, {\"url\": \"http://10.10.0.125:9292\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"53015f6b829b4b6d9da099fcf0db0bf3\"}, {\"url\": \"http://10.10.0.125:9292\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"647bf22563ac4406a26e2f6cee087548\"}], \"type\": \"image\", \"id\": \"208219466706419f9d7452e65cdec204\", \"name\": \"glance\"}, {\"endpoints\": [{\"url\": \"http://10.10.0.125:3333\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"642d6c2483234637bbaf600249bad0a2\"}, {\"url\": \"http://10.10.0.125:3333\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"7e618d37a5054c4f9b108d3bf6cf2038\"}, {\"url\": \"http://10.10.0.125:3333\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"b389541a905e43e49aedc570c168be2d\"}], \"type\": \"s3\", \"id\": \"6d8ccc39e4da4673a9c18e7a80af0674\", \"name\": \"s3\"}, {\"endpoints\": [{\"url\": \"http://10.10.0.125:8777/\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"1564b8ff67fd4335b26d59ff76aad6e7\"}, {\"url\": \"http://10.10.0.125:8777/\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"96258685ea704e6c877a0b940a43798d\"}, {\"url\": \"http://10.10.0.125:8777/\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"97d13bccb76e44fe89036f40d0038e17\"}], \"type\": \"metering\", \"id\": \"a19399f0d76f433fb0b66cb83be0e4e3\", \"name\": \"ceilometer\"}, {\"endpoints\": [{\"url\": \"http://10.10.0.125:35357/v2.0\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"1d4861c564e3472c8d3bcc4fb079f72a\"}, {\"url\": \"http://10.10.0.125:5000/v2.0\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"5d3ff55db4a04b16b152a89a285f830b\"}, {\"url\": \"http://10.10.0.125:5000/v2.0\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"9e705cee479146188e53a6a6a2743bc0\"}], \"type\": \"identity\", \"id\": \"b5e280d77b1c4d658284f26bae7ad89f\", \"name\": \"keystone\"}, {\"endpoints\": [{\"url\": \"http://10.10.0.125:8774/v2/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"406c147497414d769b76e2a6abb01fad\"}, {\"url\": \"http://10.10.0.125:8774/v2/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"f3801eaddbb4450899d420b0b303b0df\"}, {\"url\": \"http://10.10.0.125:8774/v2/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"fd35f17a600749be92f750de8bcb48fa\"}], \"type\": \"compute\", \"id\": \"bcdcbdcaf2ef43999324a8b7c73bacda\", \"name\": \"nova\"}, {\"endpoints\": [{\"url\": \"http://10.10.0.125:8774/v3\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"4aa244a2f7a747b08111a7effece8e77\"}, {\"url\": \"http://10.10.0.125:8774/v3\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"acafb07702924edfb4201ba2a40b5773\"}, {\"url\": \"http://10.10.0.125:8774/v3\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"b600a294864f4ce281eb27159507ec59\"}], \"type\": \"computev3\", \"id\": \"c32c252c2ea449a89bacc8c61f1b2345\", \"name\": \"novav3\"}, {\"endpoints\": [{\"url\": \"http://10.10.0.125:8776/v1/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"4e7af2e8b017430eb4bb58c6a8527bdf\"}, {\"url\": \"http://10.10.0.125:8776/v1/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"cff3d9698cca4c83bbaa4c2c1ba78f5f\"}, {\"url\": \"http://10.10.0.125:8776/v1/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"fe1256ed15df422ea549969b16f4bab0\"}], \"type\": \"volume\", \"id\": \"dd41426b8e334337b0968b5234be47a6\", \"name\": \"cinder\"}, {\"endpoints\": [{\"url\": \"http://10.10.0.125:8004/v1/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"0bdcfb1e10b6445d8257168571dc0ec5\"}, {\"url\": \"http://10.10.0.125:8004/v1/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"c91eb49c88114936834f892423942849\"}, {\"url\": \"http://10.10.0.125:8004/v1/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"e96a554a75764c4bac880f639d105e8f\"}], \"type\": \"orchestration\", \"id\": \"df9cd2a277af49eea6bf822176b98902\", \"name\": \"heat\"}, {\"endpoints\": [{\"url\": \"http://10.10.0.125:8776/v2/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"3a0e02a3159d4fa9a03f0094cfed478b\"}, {\"url\": \"http://10.10.0.125:8776/v2/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"66a9dee603514d8086c200357bd864fe\"}, {\"url\": \"http://10.10.0.125:8776/v2/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"ad972985b3f54548aee4ae5526ccba35\"}], \"type\": \"volumev2\", \"id\": \"e753662fce16476e924373e08276e323\", \"name\": \"cinderv2\"}, {\"endpoints\": [{\"url\": \"http://10.10.0.125:8773/services/Cloud\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"bee35c618b2e4e00872d5b3a9cf8e609\"}, {\"url\": \"http://10.10.0.125:8773/services/Admin\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"c67e0bf59b7243f78b4591a6158f21fd\"}, {\"url\": \"http://10.10.0.125:8773/services/Cloud\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"d0b492095c504204923106f75cc2787d\"}], \"type\": \"ec2\", \"id\": \"fba7e1e60f604a40816f24c7c1fca28f\", \"name\": \"ec2\"}], \"extras\": {}, \"user\": {\"domain\": {\"id\": \"default\", \"name\": \"Default\"}, \"id\": \"ce6f7a9e2ba44728a651a688c8f61049\", \"name\": \"admin\"}, \"issued_at\": \"2014-06-06T19:46:16.777100Z\"}}\n\n(BTW, the token request/response are from a later run, that's why the times are later).", 
            "date_created": "2014-06-06 20:17:07.000149+00:00", 
            "author": "https://api.launchpad.net/1.0/~mike-spreitzer"
        }, 
        {
            "content": "Let me take it from the top.\n\nUse DevStack to install OpenStack.  Use nova networking, not Neutron.  Include the line\n\nIMAGE_URLS+=,http://cloud.fedoraproject.org/fedora-20.x86_64.qcow2\n\nin your localrc.\n\nThis will produce a system with one network; in the DB this network's \"label\" is \"private\" and its project_id is null.  There will be an image named fedora-20.x86_64.\n\nImport a key pair, and adjust the default security group to your liking.\n\nGit clone the heat-templates project, then `cd` into it.  Then\n\ncd hot\nexport OS_USERNAME=admin\nexport OS_PASSWORD=${your chosen admin password}\nexport HOST_IP=${IPv4 addr of host}\nexport OS_AUTH_URL=http://${HOST_IP}:5000/v2.0/\nexport OS_TENANT_NAME=admin\nheat stack-create -f asg_sampler.yaml -P key_name=${your kepair} ${some stack name}\n\nFor fun (and, possibly, relevant edification) you might compare the output of these three commands:\n\nnova network-show private\nnova net private\nnova net ${UUID of that network}\n\nI find that `nova network-show private` finds the network and prints a lot of information about it, while `nova net private` fails to find the network; when given the network's UUID, `nova net` find the network and prints just a little information about it.\n\nOnce the stack is created, look at its outputs.  You will find one named \"old_up_url\", whose value is a long URL.  Send a POST command to that.  E.g.,\n\ncurl -X POST \"${the value of old_up_url}\"\n\nYou will find that this succeeds.\n\nYou will find another stack output named \"new_up_url\".  POST to it.  E.g.,\n\ncurl -X POST \"${the value of new_up_url}\"\n\nCurl will report something like the following.\n\n<ErrorResponse><Error><Message>The request processing has failed due to an internal error:Remote error: ResourceFailure Error: Nested stack UPDATE failed: Error: Resource CREATE failed: NotFound: No Network matching {'label': u'private'}. (HTTP 404)\n[u'Traceback (most recent call last):\\n', u'  File \"/opt/stack/heat/heat/engine/service.py\", line 61, in wrapped\\n    return func(self, ctx, *args, **kwargs)\\n', u'  File \"/opt/stack/heat/heat/engine/service.py\", line 911, in resource_signal\\n    stack[resource_name].signal(details)\\n', u'  File \"/opt/stack/heat/heat/engine/resource.py\", line 879, in signal\\n    raise failure\\n', u\"ResourceFailure: Error: Nested stack UPDATE failed: Error: Resource CREATE failed: NotFound: No Network matching {'label': u'private'}. (HTTP 404)\\n\"].</Message><Code>InternalFailure</Code><Type>Server</Type></Error></ErrorResponse>\n\n", 
            "date_created": "2014-06-10 06:18:31.566552+00:00", 
            "author": "https://api.launchpad.net/1.0/~mike-spreitzer"
        }, 
        {
            "content": "Following is how it goes wrong.  I will work backwards.\n\nRemember that in the problematic case we have two levels of stack nesting: the ASG sampler is the\noutermost stack; nested in that is a new-style ASG; each member of that is a nested stack made\nfrom vm_with_cinder.yaml.  The problem comes when an innermost stack asks Nova to create\na new instance (via the OS::Nova::Server resource type).\n\nnova.db.sqlalchemy.api's model_query method interprets the project_only keyword argument ONLY IF nova.context.is_user_context(context).  If project_only=True, nova.context.is_user_context(context),\nand the context's project_id is not null\nthen the network is NOT found.  If nova.context.is_user_context(context) is false then the network IS found.\n\nIn the Nova API process, when scaling up the new-style ASG, the call to list all the networks gets a context\nwhose to_dict() returns\n\n{'project_name': u'admin', 'timestamp': '2014-06-10T07:48:34.689693', 'auth_token': '${ATZ}', 'remote_address': '10.10.0.125', 'is_admin': False, 'user': u'ce6f7a9e2ba44728a651a688c8f61049', 'service_catalog': [{u'endpoints': [{u'adminURL': u'http://10.10.0.125:8776/v1/39675672862f4bd08505bfe1283773e0', u'region': u'RegionOne', u'internalURL': u'http://10.10.0.125:8776/v1/39675672862f4bd08505bfe1283773e0', u'publicURL': u'http://10.10.0.125:8776/v1/39675672862f4bd08505bfe1283773e0'}], u'type': u'volume', u'name': u'cinder'}], 'read_deleted': 'no', 'user_id': u'ce6f7a9e2ba44728a651a688c8f61049', 'roles': [u'heat_stack_owner'], 'tenant': u'39675672862f4bd08505bfe1283773e0', 'request_id': 'req-50f06804-f24e-4916-9d63-cdf0834cd412', 'instance_lock_checked': False, 'project_id': u'39675672862f4bd08505bfe1283773e0', 'user_name': u'admin'}\n\nwhere user ce6f7a9e2ba44728a651a688c8f61049 is admin, and project 39675672862f4bd08505bfe1283773e0 is admin.  Note the \"'is_admin': False\" entry.  This causes nova.context.is_user_context(context) to be true.  Together with the non-nullity\nof the context's project_id this causes the network to not be found.\n\nThe auth token I called ${ATZ} was put in that network listing request by the heat engine.  The heat engine got ${ATZ} by asking Keystone to create an auth token from a trust.  Following is some debug logging from the heat engine.\n\n2014-06-10 07:48:33.149 16427 DEBUG keystoneclient.session [req-eebbc879-2667-49dc-b885-5f61f38fc179 ] REQ: curl -i -X POST http://10.10.0.125:5000/v3/auth/tokens -H \"Content-Type: application/json\" -H \"Accept: application/json\" -H \"User-Agent: python-keystoneclient\" -d '{\"auth\": {\"scope\": {\"OS-TRUST:trust\": {\"id\": \"044d71255a8c41258c7986f3c2ebc238\"}}, \"identity\": {\"password\": {\"user\": {\"domain\": {\"id\": \"default\"}, \"password\": \"${the password}\", \"name\": \"heat\"}}, \"methods\": [\"password\"]}}}' request /opt/stack/python-keystoneclient/keystoneclient/session.py:252\n\n2014-06-10 07:48:33.150 16427 INFO urllib3.connectionpool [req-eebbc879-2667-49dc-b885-5f61f38fc179 ] Starting new HTTP connection (1): 10.10.0.125\n\n2014-06-10 07:48:33.153 16427 DEBUG urllib3.connectionpool [req-eebbc879-2667-49dc-b885-5f61f38fc179 ] Setting read timeout to None _make_request /usr/lib/python2.7/dist-packages/urllib3/connectionpool.py:375\n\n2014-06-10 07:48:33.284 16427 DEBUG urllib3.connectionpool [req-eebbc879-2667-49dc-b885-5f61f38fc179 ] \"POST /v3/auth/tokens HTTP/1.1\" 201 6351 _make_request /usr/lib/python2.7/dist-packages/urllib3/connectionpool.py:415\n\n2014-06-10 07:48:33.285 16427 DEBUG keystoneclient.session [req-eebbc879-2667-49dc-b885-5f61f38fc179 ] RESP: [201] CaseInsensitiveDict({'x-subject-token': '${ATZ}', 'vary': 'X-Auth-Token', 'content-length': '6351', 'content-type': 'application/json', 'date': 'Tue, 10 Jun 2014 07:48:33 GMT'})\n\nRESP BODY: {\"token\": {\"OS-TRUST:trust\": {\"impersonation\": true, \"trustee_user\": {\"id\": \"647309399c7b42c3b88f8a78a5d1f38f\"}, \"id\": \"044d71255a8c41258c7986f3c2ebc238\", \"trustor_user\": {\"id\": \"ce6f7a9e2ba44728a651a688c8f61049\"}}, \"methods\": [\"password\"], \"roles\": [{\"id\": \"d00c466a45c24f4caedeb226e47d7574\", \"name\": \"heat_stack_owner\"}], \"expires_at\": \"2014-06-10T08:48:33.233101Z\", \"project\": {\"domain\": {\"id\": \"default\", \"name\": \"Default\"}, \"id\": \"39675672862f4bd08505bfe1283773e0\", \"name\": \"admin\"}, \"catalog\": [{\"endpoints\": [{\"url\": \"http://10.10.0.125:8000/v1\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"5505a74767ee4589a775b86ac3304903\"}, {\"url\": \"http://10.10.0.125:8000/v1\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"e0a506195dc74585b0fdec6fea5f3f50\"}, {\"url\": \"http://10.10.0.125:8000/v1\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"e304274856ce47bf98f063c2c0cbb61c\"}], \"type\": \"cloudformation\", \"id\": \"1dd2671af86f42febb3137cbf688537f\", \"name\": \"heat\"}, {\"endpoints\": [{\"url\": \"http://10.10.0.125:9292\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"027bc57c01594b0abe8bc3c1ce8f8a94\"}, {\"url\": \"http://10.10.0.125:9292\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"53015f6b829b4b6d9da099fcf0db0bf3\"}, {\"url\": \"http://10.10.0.125:9292\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"647bf22563ac4406a26e2f6cee087548\"}], \"type\": \"image\", \"id\": \"208219466706419f9d7452e65cdec204\", \"name\": \"glance\"}, {\"endpoints\": [{\"url\": \"http://10.10.0.125:3333\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"642d6c2483234637bbaf600249bad0a2\"}, {\"url\": \"http://10.10.0.125:3333\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"7e618d37a5054c4f9b108d3bf6cf2038\"}, {\"url\": \"http://10.10.0.125:3333\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"b389541a905e43e49aedc570c168be2d\"}], \"type\": \"s3\", \"id\": \"6d8ccc39e4da4673a9c18e7a80af0674\", \"name\": \"s3\"}, {\"endpoints\": [{\"url\": \"http://10.10.0.125:8777/\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"1564b8ff67fd4335b26d59ff76aad6e7\"}, {\"url\": \"http://10.10.0.125:8777/\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"96258685ea704e6c877a0b940a43798d\"}, {\"url\": \"http://10.10.0.125:8777/\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"97d13bccb76e44fe89036f40d0038e17\"}], \"type\": \"metering\", \"id\": \"a19399f0d76f433fb0b66cb83be0e4e3\", \"name\": \"ceilometer\"}, {\"endpoints\": [{\"url\": \"http://10.10.0.125:35357/v2.0\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"1d4861c564e3472c8d3bcc4fb079f72a\"}, {\"url\": \"http://10.10.0.125:5000/v2.0\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"5d3ff55db4a04b16b152a89a285f830b\"}, {\"url\": \"http://10.10.0.125:5000/v2.0\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"9e705cee479146188e53a6a6a2743bc0\"}], \"type\": \"identity\", \"id\": \"b5e280d77b1c4d658284f26bae7ad89f\", \"name\": \"keystone\"}, {\"endpoints\": [{\"url\": \"http://10.10.0.125:8774/v2/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"406c147497414d769b76e2a6abb01fad\"}, {\"url\": \"http://10.10.0.125:8774/v2/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"f3801eaddbb4450899d420b0b303b0df\"}, {\"url\": \"http://10.10.0.125:8774/v2/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"fd35f17a600749be92f750de8bcb48fa\"}], \"type\": \"compute\", \"id\": \"bcdcbdcaf2ef43999324a8b7c73bacda\", \"name\": \"nova\"}, {\"endpoints\": [{\"url\": \"http://10.10.0.125:8774/v3\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"4aa244a2f7a747b08111a7effece8e77\"}, {\"url\": \"http://10.10.0.125:8774/v3\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"acafb07702924edfb4201ba2a40b5773\"}, {\"url\": \"http://10.10.0.125:8774/v3\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"b600a294864f4ce281eb27159507ec59\"}], \"type\": \"computev3\", \"id\": \"c32c252c2ea449a89bacc8c61f1b2345\", \"name\": \"novav3\"}, {\"endpoints\": [{\"url\": \"http://10.10.0.125:8776/v1/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"4e7af2e8b017430eb4bb58c6a8527bdf\"}, {\"url\": \"http://10.10.0.125:8776/v1/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"cff3d9698cca4c83bbaa4c2c1ba78f5f\"}, {\"url\": \"http://10.10.0.125:8776/v1/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"fe1256ed15df422ea549969b16f4bab0\"}], \"type\": \"volume\", \"id\": \"dd41426b8e334337b0968b5234be47a6\", \"name\": \"cinder\"}, {\"endpoints\": [{\"url\": \"http://10.10.0.125:8004/v1/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"0bdcfb1e10b6445d8257168571dc0ec5\"}, {\"url\": \"http://10.10.0.125:8004/v1/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"c91eb49c88114936834f892423942849\"}, {\"url\": \"http://10.10.0.125:8004/v1/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"e96a554a75764c4bac880f639d105e8f\"}], \"type\": \"orchestration\", \"id\": \"df9cd2a277af49eea6bf822176b98902\", \"name\": \"heat\"}, {\"endpoints\": [{\"url\": \"http://10.10.0.125:8776/v2/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"3a0e02a3159d4fa9a03f0094cfed478b\"}, {\"url\": \"http://10.10.0.125:8776/v2/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"66a9dee603514d8086c200357bd864fe\"}, {\"url\": \"http://10.10.0.125:8776/v2/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"ad972985b3f54548aee4ae5526ccba35\"}], \"type\": \"volumev2\", \"id\": \"e753662fce16476e924373e08276e323\", \"name\": \"cinderv2\"}, {\"endpoints\": [{\"url\": \"http://10.10.0.125:8773/services/Cloud\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"bee35c618b2e4e00872d5b3a9cf8e609\"}, {\"url\": \"http://10.10.0.125:8773/services/Admin\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"c67e0bf59b7243f78b4591a6158f21fd\"}, {\"url\": \"http://10.10.0.125:8773/services/Cloud\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"d0b492095c504204923106f75cc2787d\"}], \"type\": \"ec2\", \"id\": \"fba7e1e60f604a40816f24c7c1fca28f\", \"name\": \"ec2\"}], \"extras\": {}, \"user\": {\"domain\": {\"id\": \"default\", \"name\": \"Default\"}, \"id\": \"ce6f7a9e2ba44728a651a688c8f61049\", \"name\": \"admin\"}, \"issued_at\": \"2014-06-10T07:48:33.233145Z\"}}\n _send_request /opt/stack/python-keystoneclient/keystoneclient/session.py:297\n\n2014-06-10 07:48:33.286 16427 DEBUG heat.common.keystoneclient [req-eebbc879-2667-49dc-b885-5f61f38fc179 None] Using stack domain d3605d71b866434eb24f5bdb579749de __init__ /opt/stack/heat/heat/common/heat_keystoneclient.py:103\n\nBTW, Keystone domain d3605d71b866434eb24f5bdb579749de is the one named \"heat\"; there is only one other domain, the default.\n\nThat trust was created during stack-create time.  Following is debug logging about that from the Heat engine.\n\n2014-06-10 07:45:54.186 16427 DEBUG keystoneclient.session [req-6d3e08be-d266-486e-aea1-c3ec3e1827e0 ] REQ: curl -i -X POST http://10.10.0.125:5000/v3/OS-TRUST/trusts -H \"User-Agent: python-keystoneclient\" -H \"Content-Type: application/json\" -H \"X-Auth-Token: ${ATY}\" -d '{\"trust\": {\"impersonation\": true, \"project_id\": \"39675672862f4bd08505bfe1283773e0\", \"trustor_user_id\": \"ce6f7a9e2ba44728a651a688c8f61049\", \"roles\": [{\"name\": \"heat_stack_owner\"}], \"trustee_user_id\": \"647309399c7b42c3b88f8a78a5d1f38f\"}}' request /opt/stack/python-keystoneclient/keystoneclient/session.py:252\n\n2014-06-10 07:45:54.188 16427 INFO urllib3.connectionpool [req-6d3e08be-d266-486e-aea1-c3ec3e1827e0 ] Starting new HTTP connection (1): 10.10.0.125\n\n2014-06-10 07:45:54.190 16427 DEBUG urllib3.connectionpool [req-6d3e08be-d266-486e-aea1-c3ec3e1827e0 ] Setting read timeout to None _make_request /usr/lib/python2.7/dist-packages/urllib3/connectionpool.py:375\n\n2014-06-10 07:45:54.246 16427 DEBUG urllib3.connectionpool [req-6d3e08be-d266-486e-aea1-c3ec3e1827e0 ] \"POST /v3/OS-TRUST/trusts HTTP/1.1\" 201 691 _make_request /usr/lib/python2.7/dist-packages/urllib3/connectionpool.py:415\n\n2014-06-10 07:45:54.247 16427 DEBUG keystoneclient.session [req-6d3e08be-d266-486e-aea1-c3ec3e1827e0 ] RESP: [201] CaseInsensitiveDict({'date': 'Tue, 10 Jun 2014 07:45:54 GMT', 'vary': 'X-Auth-Token', 'content-length': '691', 'content-type': 'application/json'})\n\nRESP BODY: {\"trust\": {\"impersonation\": true, \"roles_links\": {\"self\": \"http://10.10.0.125:5000/v3/OS-TRUST/trusts/044d71255a8c41258c7986f3c2ebc238/roles\", \"previous\": null, \"next\": null}, \"trustor_user_id\": \"ce6f7a9e2ba44728a651a688c8f61049\", \"links\": {\"self\": \"http://10.10.0.125:5000/v3/OS-TRUST/trusts/044d71255a8c41258c7986f3c2ebc238\"}, \"roles\": [{\"id\": \"d00c466a45c24f4caedeb226e47d7574\", \"links\": {\"self\": \"http://10.10.0.125:5000/v3/roles/d00c466a45c24f4caedeb226e47d7574\"}, \"name\": \"heat_stack_owner\"}], \"remaining_uses\": null, \"expires_at\": null, \"trustee_user_id\": \"647309399c7b42c3b88f8a78a5d1f38f\", \"project_id\": \"39675672862f4bd08505bfe1283773e0\", \"id\": \"044d71255a8c41258c7986f3c2ebc238\"}}\n _send_request /opt/stack/python-keystoneclient/keystoneclient/session.py:297\n\nwhere 647309399c7b42c3b88f8a78a5d1f38f is the UUID of the user named heat; recall also that ce6f7a9e2ba44728a651a688c8f61049 is the admin user.\n\nThat auth token that I called ${ATY} was also produced by the heat engine during stack-create.\nFollowing is engine debug log about that.\n\n2014-06-10 07:45:53.784 16427 DEBUG heat.common.keystoneclient [req-6d3e08be-d266-486e-aea1-c3ec3e1827e0 None] Using stack domain d3605d71b866434eb24f5bdb579749de __init__ /opt/stack/heat/heat/common/heat_keystoneclient.py:103\n\n2014-06-10 07:45:53.785 16427 DEBUG keystoneclient.session [req-6d3e08be-d266-486e-aea1-c3ec3e1827e0 ] REQ: curl -i -X POST http://10.10.0.125:5000/v3/auth/tokens -H \"User-Agent: python-keystoneclient\" -H \"Content-Type: application/json\" -H \"Accept: application/json\" -H \"X-Auth-Token: ${ATX}\" -d '{\"auth\": {\"scope\": {\"project\": {\"id\": \"39675672862f4bd08505bfe1283773e0\"}}, \"identity\": {\"token\": {\"id\": \"${ATX}\"}, \"methods\": [\"token\"]}}}' request /opt/stack/python-keystoneclient/keystoneclient/session.py:252\n\n2014-06-10 07:45:53.787 16427 INFO urllib3.connectionpool [req-6d3e08be-d266-486e-aea1-c3ec3e1827e0 ] Starting new HTTP connection (1): 10.10.0.125\n\n2014-06-10 07:45:53.787 16427 DEBUG urllib3.connectionpool [req-6d3e08be-d266-486e-aea1-c3ec3e1827e0 ] Setting read timeout to None _make_request /usr/lib/python2.7/dist-packages/urllib3/connectionpool.py:375\n\n2014-06-10 07:45:53.880 16427 DEBUG urllib3.connectionpool [req-6d3e08be-d266-486e-aea1-c3ec3e1827e0 ] \"POST /v3/auth/tokens HTTP/1.1\" 201 6268 _make_request /usr/lib/python2.7/dist-packages/urllib3/connectionpool.py:415\n\n2014-06-10 07:45:53.881 16427 DEBUG keystoneclient.session [req-6d3e08be-d266-486e-aea1-c3ec3e1827e0 ] RESP: [201] CaseInsensitiveDict({'x-subject-token': '${ATY}', 'vary': 'X-Auth-Token', 'content-length': '6268', 'content-type': 'application/json', 'date': 'Tue, 10 Jun 2014 07:45:53 GMT'})\n\nRESP BODY: {\"token\": {\"methods\": [\"token\"], \"roles\": [{\"id\": \"9fe2ff9ee4384b1894a90878d3e92bab\", \"name\": \"_member_\"}, {\"id\": \"0975e5421603487499af196f119e56fa\", \"name\": \"admin\"}, {\"id\": \"d00c466a45c24f4caedeb226e47d7574\", \"name\": \"heat_stack_owner\"}], \"expires_at\": \"2014-06-10T08:45:53.000000Z\", \"project\": {\"domain\": {\"id\": \"default\", \"name\": \"Default\"}, \"id\": \"39675672862f4bd08505bfe1283773e0\", \"name\": \"admin\"}, \"catalog\": [{\"endpoints\": [{\"url\": \"http://10.10.0.125:8000/v1\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"5505a74767ee4589a775b86ac3304903\"}, {\"url\": \"http://10.10.0.125:8000/v1\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"e0a506195dc74585b0fdec6fea5f3f50\"}, {\"url\": \"http://10.10.0.125:8000/v1\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"e304274856ce47bf98f063c2c0cbb61c\"}], \"type\": \"cloudformation\", \"id\": \"1dd2671af86f42febb3137cbf688537f\", \"name\": \"heat\"}, {\"endpoints\": [{\"url\": \"http://10.10.0.125:9292\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"027bc57c01594b0abe8bc3c1ce8f8a94\"}, {\"url\": \"http://10.10.0.125:9292\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"53015f6b829b4b6d9da099fcf0db0bf3\"}, {\"url\": \"http://10.10.0.125:9292\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"647bf22563ac4406a26e2f6cee087548\"}], \"type\": \"image\", \"id\": \"208219466706419f9d7452e65cdec204\", \"name\": \"glance\"}, {\"endpoints\": [{\"url\": \"http://10.10.0.125:3333\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"642d6c2483234637bbaf600249bad0a2\"}, {\"url\": \"http://10.10.0.125:3333\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"7e618d37a5054c4f9b108d3bf6cf2038\"}, {\"url\": \"http://10.10.0.125:3333\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"b389541a905e43e49aedc570c168be2d\"}], \"type\": \"s3\", \"id\": \"6d8ccc39e4da4673a9c18e7a80af0674\", \"name\": \"s3\"}, {\"endpoints\": [{\"url\": \"http://10.10.0.125:8777/\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"1564b8ff67fd4335b26d59ff76aad6e7\"}, {\"url\": \"http://10.10.0.125:8777/\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"96258685ea704e6c877a0b940a43798d\"}, {\"url\": \"http://10.10.0.125:8777/\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"97d13bccb76e44fe89036f40d0038e17\"}], \"type\": \"metering\", \"id\": \"a19399f0d76f433fb0b66cb83be0e4e3\", \"name\": \"ceilometer\"}, {\"endpoints\": [{\"url\": \"http://10.10.0.125:35357/v2.0\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"1d4861c564e3472c8d3bcc4fb079f72a\"}, {\"url\": \"http://10.10.0.125:5000/v2.0\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"5d3ff55db4a04b16b152a89a285f830b\"}, {\"url\": \"http://10.10.0.125:5000/v2.0\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"9e705cee479146188e53a6a6a2743bc0\"}], \"type\": \"identity\", \"id\": \"b5e280d77b1c4d658284f26bae7ad89f\", \"name\": \"keystone\"}, {\"endpoints\": [{\"url\": \"http://10.10.0.125:8774/v2/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"406c147497414d769b76e2a6abb01fad\"}, {\"url\": \"http://10.10.0.125:8774/v2/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"f3801eaddbb4450899d420b0b303b0df\"}, {\"url\": \"http://10.10.0.125:8774/v2/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"fd35f17a600749be92f750de8bcb48fa\"}], \"type\": \"compute\", \"id\": \"bcdcbdcaf2ef43999324a8b7c73bacda\", \"name\": \"nova\"}, {\"endpoints\": [{\"url\": \"http://10.10.0.125:8774/v3\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"4aa244a2f7a747b08111a7effece8e77\"}, {\"url\": \"http://10.10.0.125:8774/v3\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"acafb07702924edfb4201ba2a40b5773\"}, {\"url\": \"http://10.10.0.125:8774/v3\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"b600a294864f4ce281eb27159507ec59\"}], \"type\": \"computev3\", \"id\": \"c32c252c2ea449a89bacc8c61f1b2345\", \"name\": \"novav3\"}, {\"endpoints\": [{\"url\": \"http://10.10.0.125:8776/v1/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"4e7af2e8b017430eb4bb58c6a8527bdf\"}, {\"url\": \"http://10.10.0.125:8776/v1/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"cff3d9698cca4c83bbaa4c2c1ba78f5f\"}, {\"url\": \"http://10.10.0.125:8776/v1/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"fe1256ed15df422ea549969b16f4bab0\"}], \"type\": \"volume\", \"id\": \"dd41426b8e334337b0968b5234be47a6\", \"name\": \"cinder\"}, {\"endpoints\": [{\"url\": \"http://10.10.0.125:8004/v1/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"0bdcfb1e10b6445d8257168571dc0ec5\"}, {\"url\": \"http://10.10.0.125:8004/v1/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"c91eb49c88114936834f892423942849\"}, {\"url\": \"http://10.10.0.125:8004/v1/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"e96a554a75764c4bac880f639d105e8f\"}], \"type\": \"orchestration\", \"id\": \"df9cd2a277af49eea6bf822176b98902\", \"name\": \"heat\"}, {\"endpoints\": [{\"url\": \"http://10.10.0.125:8776/v2/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"3a0e02a3159d4fa9a03f0094cfed478b\"}, {\"url\": \"http://10.10.0.125:8776/v2/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"66a9dee603514d8086c200357bd864fe\"}, {\"url\": \"http://10.10.0.125:8776/v2/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"ad972985b3f54548aee4ae5526ccba35\"}], \"type\": \"volumev2\", \"id\": \"e753662fce16476e924373e08276e323\", \"name\": \"cinderv2\"}, {\"endpoints\": [{\"url\": \"http://10.10.0.125:8773/services/Cloud\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"bee35c618b2e4e00872d5b3a9cf8e609\"}, {\"url\": \"http://10.10.0.125:8773/services/Admin\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"c67e0bf59b7243f78b4591a6158f21fd\"}, {\"url\": \"http://10.10.0.125:8773/services/Cloud\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"d0b492095c504204923106f75cc2787d\"}], \"type\": \"ec2\", \"id\": \"fba7e1e60f604a40816f24c7c1fca28f\", \"name\": \"ec2\"}], \"extras\": {}, \"user\": {\"domain\": {\"id\": \"default\", \"name\": \"Default\"}, \"id\": \"ce6f7a9e2ba44728a651a688c8f61049\", \"name\": \"admin\"}, \"issued_at\": \"2014-06-10T07:45:53.842175Z\"}}\n _send_request /opt/stack/python-keystoneclient/keystoneclient/session.py:297\n\nThe auth token I called ${ATX} is the one that the Heat CLI created.\n", 
            "date_created": "2014-06-10 09:10:08.111723+00:00", 
            "author": "https://api.launchpad.net/1.0/~mike-spreitzer"
        }, 
        {
            "content": "For comparison purposes, following are some notes on how the old-style ASG is successfully scaled up.\n\nWhen the webhook is hit, the heat engine uses the same trust as in the failure case to get a token.\nFollowing is heat engine debug logging about that.\n\n2014-06-10 07:47:01.168 16427 DEBUG keystoneclient.session [req-240539df-e1d6-49a2-bd40-da4e37eeadd7 ] REQ: curl -i -X POST http://10.10.0.125:5000/v3/auth/tokens -H \"Content-Type: application/json\" -H \"Accept: application/json\" -H \"User-Agent: python-keystoneclient\" -d '{\"auth\": {\"scope\": {\"OS-TRUST:trust\": {\"id\": \"044d71255a8c41258c7986f3c2ebc238\"}}, \"identity\": {\"password\": {\"user\": {\"domain\": {\"id\": \"default\"}, \"password\": \"tempusFugitive\", \"name\": \"heat\"}}, \"methods\": [\"password\"]}}}' request /opt/stack/python-keystoneclient/keystoneclient/session.py:252\n2014-06-10 07:47:01.169 16427 INFO urllib3.connectionpool [req-240539df-e1d6-49a2-bd40-da4e37eeadd7 ] Starting new HTTP connection (1): 10.10.0.125\n2014-06-10 07:47:01.169 16427 DEBUG urllib3.connectionpool [req-240539df-e1d6-49a2-bd40-da4e37eeadd7 ] Setting read timeout to None _make_request /usr/lib/python2.7/dist-packages/urllib3/connectionpool.py:375\n2014-06-10 07:47:01.287 16427 DEBUG urllib3.connectionpool [req-240539df-e1d6-49a2-bd40-da4e37eeadd7 ] \"POST /v3/auth/tokens HTTP/1.1\" 201 6351 _make_request /usr/lib/python2.7/dist-packages/urllib3/connectionpool.py:415\n2014-06-10 07:47:01.287 16427 DEBUG keystoneclient.session [req-240539df-e1d6-49a2-bd40-da4e37eeadd7 ] RESP: [201] CaseInsensitiveDict({'x-subject-token': '${ATW}', 'vary': 'X-Auth-Token', 'content-length': '6351', 'content-type': 'application/json', 'date': 'Tue, 10 Jun 2014 07:47:01 GMT'})\nRESP BODY: {\"token\": {\"OS-TRUST:trust\": {\"impersonation\": true, \"trustee_user\": {\"id\": \"647309399c7b42c3b88f8a78a5d1f38f\"}, \"id\": \"044d71255a8c41258c7986f3c2ebc238\", \"trustor_user\": {\"id\": \"ce6f7a9e2ba44728a651a688c8f61049\"}}, \"methods\": [\"password\"], \"roles\": [{\"id\": \"d00c466a45c24f4caedeb226e47d7574\", \"name\": \"heat_stack_owner\"}], \"expires_at\": \"2014-06-10T08:47:01.256569Z\", \"project\": {\"domain\": {\"id\": \"default\", \"name\": \"Default\"}, \"id\": \"39675672862f4bd08505bfe1283773e0\", \"name\": \"admin\"}, \"catalog\": [{\"endpoints\": [{\"url\": \"http://10.10.0.125:8000/v1\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"5505a74767ee4589a775b86ac3304903\"}, {\"url\": \"http://10.10.0.125:8000/v1\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"e0a506195dc74585b0fdec6fea5f3f50\"}, {\"url\": \"http://10.10.0.125:8000/v1\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"e304274856ce47bf98f063c2c0cbb61c\"}], \"type\": \"cloudformation\", \"id\": \"1dd2671af86f42febb3137cbf688537f\", \"name\": \"heat\"}, {\"endpoints\": [{\"url\": \"http://10.10.0.125:9292\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"027bc57c01594b0abe8bc3c1ce8f8a94\"}, {\"url\": \"http://10.10.0.125:9292\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"53015f6b829b4b6d9da099fcf0db0bf3\"}, {\"url\": \"http://10.10.0.125:9292\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"647bf22563ac4406a26e2f6cee087548\"}], \"type\": \"image\", \"id\": \"208219466706419f9d7452e65cdec204\", \"name\": \"glance\"}, {\"endpoints\": [{\"url\": \"http://10.10.0.125:3333\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"642d6c2483234637bbaf600249bad0a2\"}, {\"url\": \"http://10.10.0.125:3333\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"7e618d37a5054c4f9b108d3bf6cf2038\"}, {\"url\": \"http://10.10.0.125:3333\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"b389541a905e43e49aedc570c168be2d\"}], \"type\": \"s3\", \"id\": \"6d8ccc39e4da4673a9c18e7a80af0674\", \"name\": \"s3\"}, {\"endpoints\": [{\"url\": \"http://10.10.0.125:8777/\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"1564b8ff67fd4335b26d59ff76aad6e7\"}, {\"url\": \"http://10.10.0.125:8777/\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"96258685ea704e6c877a0b940a43798d\"}, {\"url\": \"http://10.10.0.125:8777/\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"97d13bccb76e44fe89036f40d0038e17\"}], \"type\": \"metering\", \"id\": \"a19399f0d76f433fb0b66cb83be0e4e3\", \"name\": \"ceilometer\"}, {\"endpoints\": [{\"url\": \"http://10.10.0.125:35357/v2.0\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"1d4861c564e3472c8d3bcc4fb079f72a\"}, {\"url\": \"http://10.10.0.125:5000/v2.0\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"5d3ff55db4a04b16b152a89a285f830b\"}, {\"url\": \"http://10.10.0.125:5000/v2.0\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"9e705cee479146188e53a6a6a2743bc0\"}], \"type\": \"identity\", \"id\": \"b5e280d77b1c4d658284f26bae7ad89f\", \"name\": \"keystone\"}, {\"endpoints\": [{\"url\": \"http://10.10.0.125:8774/v2/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"406c147497414d769b76e2a6abb01fad\"}, {\"url\": \"http://10.10.0.125:8774/v2/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"f3801eaddbb4450899d420b0b303b0df\"}, {\"url\": \"http://10.10.0.125:8774/v2/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"fd35f17a600749be92f750de8bcb48fa\"}], \"type\": \"compute\", \"id\": \"bcdcbdcaf2ef43999324a8b7c73bacda\", \"name\": \"nova\"}, {\"endpoints\": [{\"url\": \"http://10.10.0.125:8774/v3\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"4aa244a2f7a747b08111a7effece8e77\"}, {\"url\": \"http://10.10.0.125:8774/v3\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"acafb07702924edfb4201ba2a40b5773\"}, {\"url\": \"http://10.10.0.125:8774/v3\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"b600a294864f4ce281eb27159507ec59\"}], \"type\": \"computev3\", \"id\": \"c32c252c2ea449a89bacc8c61f1b2345\", \"name\": \"novav3\"}, {\"endpoints\": [{\"url\": \"http://10.10.0.125:8776/v1/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"4e7af2e8b017430eb4bb58c6a8527bdf\"}, {\"url\": \"http://10.10.0.125:8776/v1/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"cff3d9698cca4c83bbaa4c2c1ba78f5f\"}, {\"url\": \"http://10.10.0.125:8776/v1/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"fe1256ed15df422ea549969b16f4bab0\"}], \"type\": \"volume\", \"id\": \"dd41426b8e334337b0968b5234be47a6\", \"name\": \"cinder\"}, {\"endpoints\": [{\"url\": \"http://10.10.0.125:8004/v1/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"0bdcfb1e10b6445d8257168571dc0ec5\"}, {\"url\": \"http://10.10.0.125:8004/v1/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"c91eb49c88114936834f892423942849\"}, {\"url\": \"http://10.10.0.125:8004/v1/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"e96a554a75764c4bac880f639d105e8f\"}], \"type\": \"orchestration\", \"id\": \"df9cd2a277af49eea6bf822176b98902\", \"name\": \"heat\"}, {\"endpoints\": [{\"url\": \"http://10.10.0.125:8776/v2/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"3a0e02a3159d4fa9a03f0094cfed478b\"}, {\"url\": \"http://10.10.0.125:8776/v2/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"66a9dee603514d8086c200357bd864fe\"}, {\"url\": \"http://10.10.0.125:8776/v2/39675672862f4bd08505bfe1283773e0\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"ad972985b3f54548aee4ae5526ccba35\"}], \"type\": \"volumev2\", \"id\": \"e753662fce16476e924373e08276e323\", \"name\": \"cinderv2\"}, {\"endpoints\": [{\"url\": \"http://10.10.0.125:8773/services/Cloud\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"bee35c618b2e4e00872d5b3a9cf8e609\"}, {\"url\": \"http://10.10.0.125:8773/services/Admin\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"c67e0bf59b7243f78b4591a6158f21fd\"}, {\"url\": \"http://10.10.0.125:8773/services/Cloud\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"d0b492095c504204923106f75cc2787d\"}], \"type\": \"ec2\", \"id\": \"fba7e1e60f604a40816f24c7c1fca28f\", \"name\": \"ec2\"}], \"extras\": {}, \"user\": {\"domain\": {\"id\": \"default\", \"name\": \"Default\"}, \"id\": \"ce6f7a9e2ba44728a651a688c8f61049\", \"name\": \"admin\"}, \"issued_at\": \"2014-06-10T07:47:01.256569Z\"}}\n _send_request /opt/stack/python-keystoneclient/keystoneclient/session.py:297\n2014-06-10 07:47:01.288 16427 DEBUG heat.common.keystoneclient [req-240539df-e1d6-49a2-bd40-da4e37eeadd7 None] Using stack domain d3605d71b866434eb24f5bdb579749de __init__ /opt/stack/heat/heat/common/heat_keystoneclient.py:103\n\nThe auth token that I called ${ATW} is then used by the Heat engine to call Nova to create the server; the heat engine does not ask Nova to look up a network in this case, Nova handles all the details directly (we are using the older resource types in this case).", 
            "date_created": "2014-06-10 09:18:03.891975+00:00", 
            "author": "https://api.launchpad.net/1.0/~mike-spreitzer"
        }, 
        {
            "content": "Assuming that when a nova network's project_id field in the database is null this means the network is public, I would think the bug is in Nova's nova/network/api.py, where class API has the following method:\n\nwrap_check_policy\n    def get_all(self, context):\n        \"\"\"Get all the networks.\n\n        If it is an admin user, api will return all the networks,\n        if it is a normal user, api will only return the networks which\n        belong to the user's project.\n        \"\"\"\n        try:\n            return self.db.network_get_all(context, project_only=True)\n        except exception.NoNetworksFound:\n            return\n\nThe call on network_get_all should pass project_only=\"allow_none\" instead of True.\n", 
            "date_created": "2014-06-10 13:06:08.052604+00:00", 
            "author": "https://api.launchpad.net/1.0/~mike-spreitzer"
        }, 
        {
            "content": "This filtering according to project was introduced in the fix to https://bugs.launchpad.net/nova/+bug/1186867 --- that is, https://review.openstack.org/#/c/31481/\n\nThe discussion in that bug does not consider the case of a network that should be visible to users in all projects.", 
            "date_created": "2014-06-10 14:05:11.208125+00:00", 
            "author": "https://api.launchpad.net/1.0/~mike-spreitzer"
        }, 
        {
            "content": "I submitted a fix for review, see https://review.openstack.org/#/c/99068/\n\nI do not know why a comment about that was not automatically added here.", 
            "date_created": "2014-06-10 14:15:54.516116+00:00", 
            "author": "https://api.launchpad.net/1.0/~mike-spreitzer"
        }, 
        {
            "content": "I suppose I am not sure where the problem really is.  \n\nLet's start with the intent for the installation done by DevStack.  Consider that one and only network created by DevStack for nova networking.  Is that network:\n\n(1) initially in a strange mode where it is intended for use only by admin users, awaiting dedication to some ordinary project,\n\nor\n\n(2) initially in a state where it is intended for use by every user?\n\nPut another way, this is a Nova question: when network's project_id is null in the database, does this mean the network is hiding or does it mean the network should be visible to all tenants?\n\nI guessed the answer is (2), for a number of reasons.  One is that the alternative means DevStack has created an installation that is not ready for use by any but administrative users, which seems bad.  Another reason is that (2) is supported by experiment.  When I set my OS_ envars to user and project being demo, `nova boot ... --nic net-id=${id of that network}` succeeds in creating a VM.  Also the `nova` commands to list and examine networks mostly expose that network; the one exception is `nova net private` (which is an exception even when authenticating as admin/admin).\n\nFinally, and transitionally, (1) would imply that there is a booby trap in DevStack+Heat.  Note that I could create both a new-style and an old-style autoscaling group, and can scale up and down the old-style one, and can scale down the new-style one.  In none of that did I get any hint that I had done something wrong.  But when I tried to scale up the new-style group, it failed.  Should that really be the behavior in the nova networking environment produced by DevStack?", 
            "date_created": "2014-06-12 05:52:27.206266+00:00", 
            "author": "https://api.launchpad.net/1.0/~mike-spreitzer"
        }, 
        {
            "content": "When authenticating as user=admin=tenant, I get inconsistent CLI behavior regarding the visibility of the one and only network created by DevStack:\n\nubuntu@mjs-dstk-531:~$ nova network-show private\n+---------------------+--------------------------------------+\n| Property            | Value                                |\n+---------------------+--------------------------------------+\n| bridge              | br100                                |\n| bridge_interface    | eth0                                 |\n| broadcast           | 10.11.63.255                         |\n| cidr                | 10.11.0.0/18                         |\n| cidr_v6             | -                                    |\n| created_at          | 2014-06-03T23:54:29.000000           |\n| deleted             | 0                                    |\n| deleted_at          | -                                    |\n| dhcp_start          | 10.11.0.2                            |\n| dns1                | 8.8.4.4                              |\n| dns2                | -                                    |\n| gateway             | 10.11.0.1                            |\n| gateway_v6          | -                                    |\n| host                | mjs-dstk-531                         |\n| id                  | a176a5fe-efb5-4ad4-bd8b-831e78d1b957 |\n| injected            | False                                |\n| label               | private                              |\n| multi_host          | False                                |\n| netmask             | 255.255.192.0                        |\n| netmask_v6          | -                                    |\n| priority            | -                                    |\n| project_id          | -                                    |\n| rxtx_base           | -                                    |\n| updated_at          | 2014-06-04T00:14:23.000000           |\n| vlan                | -                                    |\n| vpn_private_address | -                                    |\n| vpn_public_address  | -                                    |\n| vpn_public_port     | -                                    |\n+---------------------+--------------------------------------+\nubuntu@mjs-dstk-531:~$ nova net private\nERROR (NotFound): Network not found (HTTP 404) (Request-ID: req-97eef676-96e0-448f-8185-319b0cae7471)\nubuntu@mjs-dstk-531:~$ nova net a176a5fe-efb5-4ad4-bd8b-831e78d1b957\n+----------+--------------------------------------+\n| Property | Value                                |\n+----------+--------------------------------------+\n| cidr     | 10.11.0.0/18                         |\n| id       | a176a5fe-efb5-4ad4-bd8b-831e78d1b957 |\n| label    | private                              |\n+----------+--------------------------------------+\nubuntu@mjs-dstk-531:~$ \n\nNote also that `nova network-associate-project` is not available in this installation:\n\nubuntu@mjs-dstk-531:~$ nova network-associate-project a176a5fe-efb5-4ad4-bd8b-831e78d1b957\nERROR (HttpNotImplemented): VLAN support must be enabled (HTTP 501) (Request-ID: req-1a30a0cd-6e8f-4e7a-9836-40c8f027fc17)\n\nFYI, in the [DEFAULT] section of my /etc/nova/nova.conf I see\n\nnetwork_manager = nova.network.manager.FlatDHCPManager\n", 
            "date_created": "2014-06-13 05:53:58.459564+00:00", 
            "author": "https://api.launchpad.net/1.0/~mike-spreitzer"
        }, 
        {
            "content": "While using \"network_manager = nova.network.manager.FlatDHCPManager\", no network ever gets a non-null project_id.\n\nA network with a null project_id is not visible to non-admin users.\n\nFor example, consider the one and only network created by DevStack.  When you authenticate as admin/admin, the CLI shows you this network:\n\n$ nova net-list\n+--------------------------------------+---------+--------------+\n| ID                                   | Label   | CIDR         |\n+--------------------------------------+---------+--------------+\n| 3f539f5c-7cf4-4106-9115-4049fed6d7f4 | private | 10.11.0.0/18 |\n+--------------------------------------+---------+--------------+\n\nWhen you authenticate as demo/demo, the CLI does not show you this network:\n\n$ nova net-list\n+----+-------+------+\n| ID | Label | Cidr |\n+----+-------+------+\n+----+-------+------+\n\n(`nova network-list` produces the same result as `nova net-list`; I wonder why they both exist and where, if anywhere, the answer is documented?)", 
            "date_created": "2014-06-13 14:41:29.335006+00:00", 
            "author": "https://api.launchpad.net/1.0/~mike-spreitzer"
        }, 
        {
            "content": "https://bugs.launchpad.net/openstack-manuals/+bug/1152862 reports (accurately, as far as I can tell) that those nova CLI commands and the related API calls are not adequately documented (which could make \"fixing\" them debatable, but I hope the following is uncontroversial).\n\nThe fact that a non-admin user sees zero networks in the case of Nova networking without VLANs is clearly a bug.\n\nThe fact that scaling up an OS::Heat::AutoScalingGroup created by admin causes Nova to be invoked with a context that says \"'is_admin': False\" looks suspicious to me.\n\nBTW, I tested with the asg_of_servers.yaml template (which is simpler, only one level of nested template) in https://review.openstack.org/#/c/97366/ and found the same problem there.", 
            "date_created": "2014-06-14 04:59:16.707266+00:00", 
            "author": "https://api.launchpad.net/1.0/~mike-spreitzer"
        }, 
        {
            "content": "Here is a simple bad consequence for Heat of the Nova issue.  Use the flat DHCP variety of nova networking (e.g., use DevStack's default network config).  Consider the simple vm_with_cinder.yaml template of https://review.openstack.org/#/c/97366/ --- or an even simpler one that just has an OS::Nova::Server on a network.  You will find that when authenticating as an administrative user you can create a stack from this template --- but when authenticating as a non-administrative user you can NOT create a stack from that template (the stack-create will succeed but the stack will go into a failed state, with a complaint on the OS::Nova::Server about being unable to find the network).", 
            "date_created": "2014-06-17 05:37:05.240061+00:00", 
            "author": "https://api.launchpad.net/1.0/~mike-spreitzer"
        }, 
        {
            "content": "> The fact that scaling up an OS::Heat::AutoScalingGroup created by admin causes Nova to be invoked with a context that says \"'is_admin': False\" looks suspicious to me.\n\nThis is expected, as by default the trust heat creates doesn't delegate the admin role from the stack owner to the heat service user:\n\ntrusts_delegated_roles=heat_stack_owner\n\nThis is a list, and the \"heat_stack_owner\" is really a placeholder role, in real deployments I'd expect this to be some list of roles which enables access to the various services.  \n\nFor test environments it could even be \"Member\", we just need a role to delegate.  When we consume the trust (during the autoscaling action) heat impersonates the stack owner but *only* with the roles in the list (not all the roles of the stack owner, as you've discovered).\n\nYou can set that to trusts_delegated_roles=[heat_stack_owner, admin], but then everyone creating a heat stack would need to be admin.\n\nBasically, heat doesn't expect stack owners to need to be admin as it's a user-facing service - that's why we don't have e.g resources for creating keystone users/projects/domains - they'd be useless to everyone except admins and confusing because we don't yet have any mechanism to hide resources based on roles/policy.\n\nSo, the bug here appears to be that getting the network details from nova is admin-only AFAICT?  Is there some other way we can get that data without needing the admin role, or can the nova default policy be changed to allow non admin users to see the network?", 
            "date_created": "2014-06-19 07:53:46.926984+00:00", 
            "author": "https://api.launchpad.net/1.0/~shardy"
        }, 
        {
            "content": "Removed DevStack and Heat from the affected projects list based on Steve's affirmation that things outside Nova are working as expected.", 
            "date_created": "2014-06-19 21:28:16.262526+00:00", 
            "author": "https://api.launchpad.net/1.0/~mike-spreitzer"
        }, 
        {
            "content": "So unfortunately there isn't a right answer for all nova-network. Vlan mode should return:\n\nself.db.network_get_all(context, project_only=True)\n\nwhereas flatdhcp should return\n\nself.db.network_get_all(context, project_only=\"project_only\")\n\nso officially this should probably be an rpc call to nova-network. That solution isn't really\nbackportable so we might need a hacky check for the network manager setting in network api.\n\n", 
            "date_created": "2014-06-19 23:23:44.689363+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "officially flat dhcp should filter the vlan networks according to the implementation although I might argue that the filtering should be removed:\n\n[network for network in networks if not network.vlan]\n\nhttps://github.com/openstack/nova/blob/33c1a195c8feae141ed09d8a7e2a368c0aa351c8/nova/network/manager.py#L485\n\nI've been discussing ways of uniting the network managers and aside from the old cloudpipe handling vlan manager and flatdhcp manager only have two real differences:\n\n1) flatdhcp manager filters out vlan networks when giving the network options (which seems silly)\n2) vlan managers hide project_id=None networks and autoallocate them as needed.\n\nSeems like we could deprecate vlan manager pretty easily with an new config option or two.", 
            "date_created": "2014-06-19 23:31:13.599396+00:00", 
            "author": "https://api.launchpad.net/1.0/~vishvananda"
        }, 
        {
            "content": "For flat (DHCP or not) nova networking you mean that in nova/network/api.py's API class the get_all method should call\n\n            return self.db.network_get_all(context, project_only=\"allow_none\")\n\nrather than ... \"project_only\" ... right?\n\nFor the VLAN case, it is arguable that project_only=\"allow_none\" is also reasonable; the difference is that that includes networks that are \"available\" in the sense of \"could be assigned\".  The positive and negative examples in https://wiki.openstack.org/wiki/APIChangeGuidelines do not fit this question really well.", 
            "date_created": "2014-06-19 23:41:30.619312+00:00", 
            "author": "https://api.launchpad.net/1.0/~mike-spreitzer"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/101724", 
            "date_created": "2014-06-22 02:18:49.395057+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "@Vishy, I just drafted that hacky fix that depends on configuration.  Please have a look.\nI am going to abandon to unconditional fix in favor of this one.\n\nI have tested this only with flat DHCP nova neworking; I am not sure how to make DevStack give me a working setup with another kind of networking.  In fact, I am not even sure how to configure the floating IP range for flat DHCP nova networking (see http://lists.openstack.org/pipermail/openstack-dev/2014-June/038303.html).\n\nIn short, this needs testing in the other configurations.", 
            "date_created": "2014-06-22 02:22:54.437334+00:00", 
            "author": "https://api.launchpad.net/1.0/~mike-spreitzer"
        }, 
        {
            "content": "Change abandoned by Mike Spreitzer (<email address hidden>) on branch: master\nReview: https://review.openstack.org/99068\nReason: See https://review.openstack.org/#/c/101724/ for preferred approach.", 
            "date_created": "2014-06-22 02:24:42.659783+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "For those who only read the last comment, note that there is a fix in review: https://review.openstack.org/#/c/101724/\n", 
            "date_created": "2014-08-13 16:50:07.840112+00:00", 
            "author": "https://api.launchpad.net/1.0/~mike-spreitzer"
        }, 
        {
            "content": "Note also that there is a change in progress that adds a tempest test that exposes this bug: https://review.openstack.org/#/c/112944/\n", 
            "date_created": "2014-08-13 16:52:16.496379+00:00", 
            "author": "https://api.launchpad.net/1.0/~mike-spreitzer"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/101724\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=46e88320e6e6231550f3e2b40312c51f55e059f5\nSubmitter: Jenkins\nBranch:    master\n\ncommit 46e88320e6e6231550f3e2b40312c51f55e059f5\nAuthor: Mike Spreitzer <email address hidden>\nDate:   Sun Jun 22 02:09:17 2014 +0000\n\n    Made unassigned networks visible in flat networking\n    \n    This change fixes a bug in Nova's\n    GET /v2/{tenant_id}/os-networks\n    \n    The doc\n    http://docs.openstack.org/api/openstack-compute/2/content/GET_os-networks-v2_ListNetworks__v2__tenant_id__os-networks_ext-os-networks.html\n    says that \"Lists networks that are available to the tenant\".\n    \n    When invoked by a non-admin user it was returning only networks\n    assigned to the user's tenant.  But in flat and flat DHCP nova\n    networking, networks CAN NOT be assigned to tenants --- thus a\n    non-admin user would get zero networks from this operation.\n    \n    The fix was to make this operation conditionally use an option already\n    present in the lower-level code to \"allow_none\" when fetching the list\n    of networks, meaning to include networks whose project_id field in the\n    DB held \"none\" (meaning the network is not assigned to a tenant).  The\n    condition under which this is done is that the Nova configuration\n    option named network_manager contains the string\n    \"'nova.network.manager.Flat\" --- which is true for flat and flat DHCP\n    nova networking and false for VLAN nova networking.\n    \n    Change-Id: I64c5a3f31c912cca6b5b9987152ba7a9b3f5987d\n    Closes-Bug: #1327406\n", 
            "date_created": "2014-08-31 00:02:29.515867+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Fix proposed to branch: stable/icehouse\nReview: https://review.openstack.org/118748", 
            "date_created": "2014-09-03 19:10:21.626152+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/118748\nCommitted: https://git.openstack.org/cgit/openstack/nova/commit/?id=f93b8ee75ef457a2843ea6b551cd4c9dd27fbaa8\nSubmitter: Jenkins\nBranch:    stable/icehouse\n\ncommit f93b8ee75ef457a2843ea6b551cd4c9dd27fbaa8\nAuthor: Mike Spreitzer <email address hidden>\nDate:   Sun Jun 22 02:09:17 2014 +0000\n\n    Made unassigned networks visible in flat networking\n    \n    This change fixes a bug in Nova's\n    GET /v2/{tenant_id}/os-networks\n    \n    The doc\n    http://docs.openstack.org/api/openstack-compute/2/content/GET_os-networks-v2_ListNetworks__v2__tenant_id__os-networks_ext-os-networks.html\n    says that \"Lists networks that are available to the tenant\".\n    \n    When invoked by a non-admin user it was returning only networks\n    assigned to the user's tenant.  But in flat and flat DHCP nova\n    networking, networks CAN NOT be assigned to tenants --- thus a\n    non-admin user would get zero networks from this operation.\n    \n    The fix was to make this operation conditionally use an option already\n    present in the lower-level code to \"allow_none\" when fetching the list\n    of networks, meaning to include networks whose project_id field in the\n    DB held \"none\" (meaning the network is not assigned to a tenant).  The\n    condition under which this is done is that the Nova configuration\n    option named network_manager contains the string\n    \"'nova.network.manager.Flat\" --- which is true for flat and flat DHCP\n    nova networking and false for VLAN nova networking.\n    \n    Conflicts:\n            nova/network/api.py\n            nova/tests/network/test_api.py\n    \n    NOTE(mriedem): The conflicts are due to the objects conversion\n    in Juno. This cherry pick adds the related network_get_all unit\n    tests from Juno and makes them work with the DB API in Icehouse.\n    Also note the oslo.config import in test_api is removed since it\n    was erroneously merged into master and fixed with commit\n    0e88148907e1db5218b96e2fa54bf9fee1cba74f but rather than backport\n    that and squash it with this, I've just removed it.\n    \n    Change-Id: I64c5a3f31c912cca6b5b9987152ba7a9b3f5987d\n    Closes-Bug: #1327406\n    (cherry picked from commit 46e88320e6e6231550f3e2b40312c51f55e059f5)\n", 
            "date_created": "2014-09-26 04:55:03.340389+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2014-09-05 09:47:44.603963+00:00"
}