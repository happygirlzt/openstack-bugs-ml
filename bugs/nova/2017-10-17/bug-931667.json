{
    "status": "Fix Released", 
    "last_updated": "2012-04-05 11:06:49.727035+00:00", 
    "description": "Taking mtaylor's suggestion, I've been trying to create a user with the name 'm\u00e5\u0146\u0167\u00ff'.  It fails in various ways.  Horizon just says 'Error: Error creating user: Unhandled error.'  Nova-manage gives more info:\n\n$ nova-manage user create m\u00e5\u0146\u0167\u00ff\n2012-02-09 20:16:46,518 ERROR nova.exception [req-67983579-0a3a-4004-b702-3ba4ebec5eea None None] DB exception wrapped.\n(nova.exception): TRACE: Traceback (most recent call last):\n(nova.exception): TRACE:   File \"/opt/stack/nova/nova/exception.py\", line 104, in _wrap\n(nova.exception): TRACE:     return f(*args, **kwargs)\n(nova.exception): TRACE:   File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/session.py\", line 1400, in flush\n(nova.exception): TRACE:     self._flush(objects)\n(nova.exception): TRACE:   File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/session.py\", line 1481, in _flush\n(nova.exception): TRACE:     flush_context.execute()\n(nova.exception): TRACE:   File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/unitofwork.py\", line 302, in execute\n(nova.exception): TRACE:     rec.execute(self)\n(nova.exception): TRACE:   File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/unitofwork.py\", line 446, in execute\n(nova.exception): TRACE:     uow\n(nova.exception): TRACE:   File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/mapper.py\", line 1887, in _save_obj\n(nova.exception): TRACE:     execute(statement, params)\n(nova.exception): TRACE:   File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 1191, in execute\n(nova.exception): TRACE:     params)\n(nova.exception): TRACE:   File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 1271, in _execute_clauseelement\n(nova.exception): TRACE:     return self.__execute_context(context)\n(nova.exception): TRACE:   File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 1302, in __execute_context\n(nova.exception): TRACE:     context.parameters[0], context=context)\n(nova.exception): TRACE:   File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 1401, in _cursor_execute\n(nova.exception): TRACE:     context)\n(nova.exception): TRACE:   File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 1394, in _cursor_execute\n(nova.exception): TRACE:     context)\n(nova.exception): TRACE:   File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/default.py\", line 299, in do_execute\n(nova.exception): TRACE:     cursor.execute(statement, parameters)\n(nova.exception): TRACE: ProgrammingError: (ProgrammingError) You must not use 8-bit bytestrings unless you use a text_factory that can interpret 8-bit bytestrings (like text_factory = str). It is highly recommended that you instead just switch your application to Unicode strings. u'INSERT INTO users (created_at, updated_at, deleted_at, deleted, id, name, access_key, secret_key, is_admin) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)' ('2012-02-10 02:16:46.515383', None, None, 0, 'm\\xc3\\xa5\\xc5\\x86\\xc5\\xa7\\xc3\\xbf', None, '30d6e169-64be-40ef-8f00-872939918505', 'd943602e-1875-4938-ab62-70eba6ac9ebb', 0)\n(nova.exception): TRACE: \nCommand failed, please check log for more info\n2012-02-09 20:16:46,570 CRITICAL nova [-] User %(user)s already exists.", 
    "tags": [], 
    "importance": "Undecided", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/931667", 
    "owner": "https://api.launchpad.net/1.0/~andrewbogott", 
    "id": 931667, 
    "index": 3834, 
    "openned": "2012-02-20 23:30:38.431213+00:00", 
    "created": "2012-02-13 20:23:17.614872+00:00", 
    "title": "non-ascii usernames broken in nova", 
    "comments": [
        {
            "content": "Taking mtaylor's suggestion, I've been trying to create a user with the name 'm\u00e5\u0146\u0167\u00ff'.  It fails in various ways.  Horizon just says 'Error: Error creating user: Unhandled error.'  Nova-manage gives more info:\n\n$ nova-manage user create m\u00e5\u0146\u0167\u00ff\n2012-02-09 20:16:46,518 ERROR nova.exception [req-67983579-0a3a-4004-b702-3ba4ebec5eea None None] DB exception wrapped.\n(nova.exception): TRACE: Traceback (most recent call last):\n(nova.exception): TRACE:   File \"/opt/stack/nova/nova/exception.py\", line 104, in _wrap\n(nova.exception): TRACE:     return f(*args, **kwargs)\n(nova.exception): TRACE:   File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/session.py\", line 1400, in flush\n(nova.exception): TRACE:     self._flush(objects)\n(nova.exception): TRACE:   File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/session.py\", line 1481, in _flush\n(nova.exception): TRACE:     flush_context.execute()\n(nova.exception): TRACE:   File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/unitofwork.py\", line 302, in execute\n(nova.exception): TRACE:     rec.execute(self)\n(nova.exception): TRACE:   File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/unitofwork.py\", line 446, in execute\n(nova.exception): TRACE:     uow\n(nova.exception): TRACE:   File \"/usr/lib/python2.7/dist-packages/sqlalchemy/orm/mapper.py\", line 1887, in _save_obj\n(nova.exception): TRACE:     execute(statement, params)\n(nova.exception): TRACE:   File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 1191, in execute\n(nova.exception): TRACE:     params)\n(nova.exception): TRACE:   File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 1271, in _execute_clauseelement\n(nova.exception): TRACE:     return self.__execute_context(context)\n(nova.exception): TRACE:   File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 1302, in __execute_context\n(nova.exception): TRACE:     context.parameters[0], context=context)\n(nova.exception): TRACE:   File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 1401, in _cursor_execute\n(nova.exception): TRACE:     context)\n(nova.exception): TRACE:   File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 1394, in _cursor_execute\n(nova.exception): TRACE:     context)\n(nova.exception): TRACE:   File \"/usr/lib/python2.7/dist-packages/sqlalchemy/engine/default.py\", line 299, in do_execute\n(nova.exception): TRACE:     cursor.execute(statement, parameters)\n(nova.exception): TRACE: ProgrammingError: (ProgrammingError) You must not use 8-bit bytestrings unless you use a text_factory that can interpret 8-bit bytestrings (like text_factory = str). It is highly recommended that you instead just switch your application to Unicode strings. u'INSERT INTO users (created_at, updated_at, deleted_at, deleted, id, name, access_key, secret_key, is_admin) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)' ('2012-02-10 02:16:46.515383', None, None, 0, 'm\\xc3\\xa5\\xc5\\x86\\xc5\\xa7\\xc3\\xbf', None, '30d6e169-64be-40ef-8f00-872939918505', 'd943602e-1875-4938-ab62-70eba6ac9ebb', 0)\n(nova.exception): TRACE: \nCommand failed, please check log for more info\n2012-02-09 20:16:46,570 CRITICAL nova [-] User %(user)s already exists.", 
            "date_created": "2012-02-13 20:23:17.614872+00:00", 
            "author": "https://api.launchpad.net/1.0/~andrewbogott"
        }, 
        {
            "content": "Probably we just need to decode some args.  I'm inveestigating.", 
            "date_created": "2012-02-13 20:25:21.664921+00:00", 
            "author": "https://api.launchpad.net/1.0/~andrewbogott"
        }, 
        {
            "content": "It looks like we are generally fast and loose with encoding in nova.  I have a patch that fixes one particular case, but we need a general solution:\n\n1)  Adopt a standard for what encoding is used for all implicitly-encoded IO.  (I would propose that that standard be UTF8 rather than ASCII.)\n\n2)  At all points where strings enter Python (e.g. commandline args) immediately decode them into unicode (which can unambiguously contain all possible 8-bit encodings.)\n\n3) At all points where 'unicodes' exit Python (being written to stdout or a log file or a database) explicitly encode them as appropriate (generally UTF8, again, especially if we're ever going to read them back in.)\n", 
            "date_created": "2012-02-20 23:47:51.224555+00:00", 
            "author": "https://api.launchpad.net/1.0/~andrewbogott"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/4209\nCommitted: http://github.com/openstack/nova/commit/93cee6047f74e256c3695451b5dc51256208f76f\nSubmitter: Jenkins\nBranch:    master\n\ncommit 93cee6047f74e256c3695451b5dc51256208f76f\nAuthor: Andrew Bogott <email address hidden>\nDate:   Wed Feb 15 13:08:27 2012 -0600\n\n    Decode nova-manage args into unicode.\n    \n    This improves handling of non-ASCII args... it's not\n    exactly a comprehensive solution, though.\n    \n    Partial (demonstration) fix for bug 931667.\n    \n    Change-Id: Icc2aabe9c0c521732003f7013438630ebc8d2238\n", 
            "date_created": "2012-03-06 18:39:14.998182+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "I have tested and it seems user with name 'm\u00e5\u0146\u0167\u00ff' is successfully created with the change in nova\nshould this bug be considered fix in horizon as well?", 
            "date_created": "2012-03-07 07:08:15.263872+00:00", 
            "author": "https://api.launchpad.net/1.0/~andycjw"
        }, 
        {
            "content": "Yes, I believe it is fixed.", 
            "date_created": "2012-03-07 14:33:05.363893+00:00", 
            "author": "https://api.launchpad.net/1.0/~andrewbogott"
        }
    ], 
    "closed": "2012-03-20 08:48:37.725909+00:00"
}