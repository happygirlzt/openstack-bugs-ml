{
    "status": "Invalid", 
    "last_updated": "2014-11-19 19:07:36.352656+00:00", 
    "description": "version: essex\n\nIn nova/network/linux_net.py, there are six invocations of nova/utils.py's \"execute\" function with \"check_exit_code=False.\" Our experiences show that this pattern is problematic. Specifically, the process executing a given command may exit unexpectedly. \n\nAll examples below are related to nova/network/linux_net.py. \n\nExample 1:\nIn function \"ensure_bridge\" of class \"LinuxBridgeInterfaceDriver,\" a command \"brctl addif\" is executed without checking the exit code. The parent process calling \"_execute\" cannot know whether the execution of \"brctl addif\" succeeds. This can cause a bridge and a NIC to remain dissociated. \n\nExample 2:\nIn function \"_device_exists,\" if the execution of \"ip link show dev [device]\" fails unexpectedly, then neither stdout nor stderr contains any data. According to the logic in \"_device_exists,\" such a fault would lead the caller of \"_device_exists\" to think that the device in question exists, which may not be the case.\n\nExample 3:\nIn function \"restart_dhcp,\" if the execution of \"cat /proc/[pid]/cmdline\" fails unexpectedly, then there may be no data in the stdout, which in turn will cause the caller to believe that a dnsmasq instance has crashed and a new instance should be started, while in fact the existing dnsmasq instance works properly. \n\nThe rest occurrences of \"check_exit_code=False\" raises similar issues.", 
    "tags": [], 
    "importance": "Medium", 
    "heat": 6, 
    "link": "https://bugs.launchpad.net/nova/+bug/1153751", 
    "owner": "None", 
    "id": 1153751, 
    "index": 3273, 
    "openned": "2013-03-11 19:54:11.181859+00:00", 
    "created": "2013-03-11 19:54:11.181859+00:00", 
    "title": "invoking nova/utils.py's 'execute' with check_exit_code=False causes problem in nova-network", 
    "comments": [
        {
            "content": "version: essex\n\nIn nova/network/linux_net.py, there are six invocations of nova/utils.py's \"execute\" function with \"check_exit_code=False.\" Our experiences show that this pattern is problematic. Specifically, the process executing a given command may exit unexpectedly. \n\nAll examples below are related to nova/network/linux_net.py. \n\nExample 1:\nIn function \"ensure_bridge\" of class \"LinuxBridgeInterfaceDriver,\" a command \"brctl addif\" is executed without checking the exit code. The parent process calling \"_execute\" cannot know whether the execution of \"brctl addif\" succeeds. This can cause a bridge and a NIC to remain dissociated. \n\nExample 2:\nIn function \"_device_exists,\" if the execution of \"ip link show dev [device]\" fails unexpectedly, then neither stdout nor stderr contains any data. According to the logic in \"_device_exists,\" such a fault would lead the caller of \"_device_exists\" to think that the device in question exists, which may not be the case.\n\nExample 3:\nIn function \"restart_dhcp,\" if the execution of \"cat /proc/[pid]/cmdline\" fails unexpectedly, then there may be no data in the stdout, which in turn will cause the caller to believe that a dnsmasq instance has crashed and a new instance should be started, while in fact the existing dnsmasq instance works properly. \n\nThe rest occurrences of \"check_exit_code=False\" raises similar issues.", 
            "date_created": "2013-03-11 19:54:11.181859+00:00", 
            "author": "https://api.launchpad.net/1.0/~samuel-xj"
        }, 
        {
            "content": "This report says Essex, but I just checked the latest code (Grizzly) and the same comments apply there.", 
            "date_created": "2013-03-12 15:49:15.400785+00:00", 
            "author": "https://api.launchpad.net/1.0/~russellb"
        }, 
        {
            "content": "Is this actually true? utils.execute defaults to checking for a zero exit code, and will raise exception.ProcessExecutionError() if the exit code is anything other than that. Its up to the caller to catch the exception.", 
            "date_created": "2013-03-15 18:44:52.900812+00:00", 
            "author": "https://api.launchpad.net/1.0/~mikal"
        }, 
        {
            "content": "When the caller of \"utils.execute\" passes \"check_exit_code=False,\" the\ndefault \"[0]\" expected exit code list will not be used and the related\nexception will not be raised. It is the use of \"check_exit_code=False\" from\nthe caller side that we think may be problematic.\n\nOn Fri, Mar 15, 2013 at 2:44 PM, Michael Still <email address hidden> wrote:\n\n> Is this actually true? utils.execute defaults to checking for a zero\n> exit code, and will raise exception.ProcessExecutionError() if the exit\n> code is anything other than that. Its up to the caller to catch the\n> exception.\n>\n> --\n> You received this bug notification because you are subscribed to the bug\n> report.\n> https://bugs.launchpad.net/bugs/1153751\n>\n> Title:\n>   invoking nova/utils.py's \"execute\" with check_exit_code=False causes\n>   problem in nova-network\n>\n> To manage notifications about this bug go to:\n> https://bugs.launchpad.net/nova/+bug/1153751/+subscriptions\n>\n", 
            "date_created": "2013-03-19 14:03:47+00:00", 
            "author": "https://api.launchpad.net/1.0/~samuel-xj"
        }, 
        {
            "content": "This bug is very old and the code has changed significantly since this was filed. If this is still valid in Icehouse or later please reopen.", 
            "date_created": "2014-11-19 19:07:29.855266+00:00", 
            "author": "https://api.launchpad.net/1.0/~jogo"
        }
    ], 
    "closed": "2014-11-19 19:07:34.040286+00:00"
}