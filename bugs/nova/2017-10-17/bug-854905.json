{
    "status": "Fix Released", 
    "last_updated": "2012-04-05 10:10:23.412066+00:00", 
    "description": "When attempting to downgrade the Nova database using migrate's manage.py I get the following error:\n\nhttp://paste.openstack.org/show/2486/\n\n1) This error should be fixed\n2) Tests should be run to ensure the database can be migrated from 1 -> X and X -> 1 (see Glance' test_migrations for a good example).", 
    "tags": [], 
    "importance": "Medium", 
    "heat": 12, 
    "link": "https://bugs.launchpad.net/nova/+bug/854905", 
    "owner": "https://api.launchpad.net/1.0/~hudayou", 
    "id": 854905, 
    "index": 2572, 
    "openned": "2011-09-20 17:56:11.207946+00:00", 
    "created": "2011-09-20 17:56:11.207946+00:00", 
    "title": "Database downgrades do not work, no tests", 
    "comments": [
        {
            "content": "When attempting to downgrade the Nova database using migrate's manage.py I get the following error:\n\nhttp://paste.openstack.org/show/2486/\n\n1) This error should be fixed\n2) Tests should be run to ensure the database can be migrated from 1 -> X and X -> 1 (see Glance' test_migrations for a good example).", 
            "date_created": "2011-09-20 17:56:11.207946+00:00", 
            "author": "https://api.launchpad.net/1.0/~blamar"
        }, 
        {
            "content": "Fixing migration 031 is easy enough:\n\n\n+    # grab tables\n+    fixed_ips = Table('fixed_ips', meta, autoload=True)\n+    virtual_interfaces = Table('virtual_interfaces', meta, autoload=True)\n\n\nSee the attached patch too....\n\nHowever there are many other nova migrations which don't even attempt. Have a look at 030 (multi nic) which just throws an a data loss exception. I'm not sure there is always a good solution when performing the downgrades however I do agree that we should always attempt to do them.", 
            "date_created": "2011-09-20 18:13:57.891091+00:00", 
            "author": "https://api.launchpad.net/1.0/~dan-prince"
        }, 
        {
            "content": "Updating status and importance. We need upgrade/rewind to work for production clusters.", 
            "date_created": "2011-10-21 09:25:06.860378+00:00", 
            "author": "https://api.launchpad.net/1.0/~gavin-brebner-orange"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/3891", 
            "date_created": "2012-02-08 10:55:38.793676+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "Reviewed:  https://review.openstack.org/3891\nCommitted: http://github.com/openstack/nova/commit/8e825c4024f9feb18ca5e2416484ef4096c3bb06\nSubmitter: Jenkins\nBranch:    master\n\ncommit 8e825c4024f9feb18ca5e2416484ef4096c3bb06\nAuthor: Hengqing Hu <email address hidden>\nDate:   Wed Feb 8 00:02:54 2012 +0800\n\n    Make database downgrade works\n    \n    Fixes bug #854905\n    \n    Use sqlalchemy reflection whenever possible:\n        http://sqlalchemy-migrate.readthedocs.org/en/latest/versioning.html\n    \n    Work around sqlalchemy-migrate sqlite 'bool column not deletable' issue:\n        http://code.google.com/p/sqlalchemy-migrate/issues/detail?id=143\n        Add following sql scripts for sqlite:\n            002_sqlite_downgrade.sql\n            015_sqlite_downgrade.sql\n            033_sqlite_downgrade.sql\n            050_sqlite_downgrade.sql\n            068_sqlite_downgrade.sql\n    \n    Work around sqlalchemy-migrate sqlite 'table with foreign key column not\n    deletable' issue:\n        http://code.google.com/p/sqlalchemy-migrate/issues/detail?id=94\n        Add following sql scripts for sqlite:\n            003_sqlite_downgrade.sql\n            006_sqlite_downgrade.sql\n            007_sqlite_downgrade.sql\n            012_sqlite_upgrade.sql\n            013_sqlite_downgrade.sql\n            020_sqlite_downgrade.sql\n            030_sqlite_downgrade.sql\n            038_sqlite_downgrade.sql\n            042_sqlite_downgrade.sql\n            053_sqlite_downgrade.sql\n            067_sqlite_downgrade.sql\n    \n    Work around sqlalchemy-migrate 'migrate drops engine reference' issue:\n        http://code.google.com/p/sqlalchemy-migrate/issues/detail?id=72\n    \n    Add following sql scripts for long primary key to work with utf-8\n    mysql table:\n        072_mysql_upgrade.sql\n    \n    Add following sql scripts for postgresql:\n        002_postgresql_downgrade.sql\n    \n    Add snake walk test cases for database migration based on glance migration\n    test.\n    \n    Change-Id: Ib454ecb4662bbf47736c1b12d9a4f969f180ceb6\n", 
            "date_created": "2012-02-23 02:52:52.448601+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }
    ], 
    "closed": "2012-02-29 10:22:49.046361+00:00"
}