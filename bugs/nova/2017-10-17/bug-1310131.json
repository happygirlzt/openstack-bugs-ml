{
    "status": "Expired", 
    "last_updated": "2016-12-05 20:25:38.126363+00:00", 
    "description": "While performing checking Nova API actions that I expected to fail when testing with the Ironic driver, I noticed in some cases a positive response is returned, but the action fails within the compute process when the action is attempted to be executed. When working with other drivers, I expect to see some time of immediate response from the initial request stating that the action isn't possible. The actions I've specifically verified this with are:\n\n- Pause\n\n\t2014-04-19 21:47:30.940 ERROR oslo.messaging._drivers.common [req-10dedfe7-9fe2-4c0d-9a4e-a85abdd137df demo demo] ['Traceback (most recent call last):\\n', '  File \"/usr/local/lib/python2.7/dist-packages/oslo/messaging/rpc/dispatcher.py\", line 133, in _dispatch_and_reply\\n    incoming.message))\\n', '  File \"/usr/local/lib/python2.7/dist-packages/oslo/messaging/rpc/dispatcher.py\", line 176, in _dispatch\\n    return self._do_dispatch(endpoint, method, ctxt, args)\\n', '  File \"/usr/local/lib/python2.7/dist-packages/oslo/messaging/rpc/dispatcher.py\", line 122, in _do_dispatch\\n    result = getattr(endpoint, method)(ctxt, **new_args)\\n', '  File \"/opt/stack/nova/nova/exception.py\", line 88, in wrapped\\n    payload)\\n', '  File \"/opt/stack/nova/nova/openstack/common/excutils.py\", line 82, in __exit__\\n    six.reraise(self.type_, self.value, self.tb)\\n', '  File \"/opt/stack/nova/nova/exception.py\", line 71, in wrapped\\n    return f(self, context, *args, **kw)\\n', '  File \"/opt/stack/nova/nova/compute/manager.py\", line 276, in decorated_function\\n    pass\\n', '  File \"/opt/stack/nova/nova/openstack/common/excutils.py\", line 82, in __exit__\\n    six.reraise(self.type_, self.value, self.tb)\\n', '  File \"/opt/stack/nova/nova/compute/manager.py\", line 262, in decorated_function\\n\n\t    return function(self, context, *args, **kwargs)\\n', '  File \"/opt/stack/nova/nova/compute/manager.py\", line 329, in decorated_function\\n\n\t function(self, context, *args, **kwargs)\\n', '  File \"/opt/stack/nova/nova/compute/manager.py\", line 305, in decorated_function\\n    e, sys.exc_info())\\n', '  File \"/opt/stack/nova/nova/openstack/common/excutils.py\", line 82, in __exit__\\n    six.reraise(self.type_, self.value, self.tb)\\n', '  File \"/opt/stack/nova/nova/compute/manager.py\", line 292, in decorated_function\\n    return function(self, context, *args, **kwargs)\\n', '  File \"/opt/stack/nova/nova/compute/manager.py\", line 3659, in pause_instance\\n    self.driver.pause(instance)\\n', '  File \"/opt/stack/nova/nova/virt/driver.py\", line 521, in pause\\n    raise NotImplementedError()\\n', 'NotImplementedError\\n']\n\n- Rescue\n\n\tscreen-n-cpu.log:2014-04-19 21:56:29.518 DEBUG ironicclient.common.http [req-d3128aae-9558-4f4b-adc4-b75b092a3acb demo demo]\n\tscreen-n-cpu.log:2014-04-19 21:56:29.523 ERROR oslo.messaging.rpc.dispatcher [req-d3128aae-9558-4f4b-adc4-b75b092a3acb demo demo] Exception during message handling: Instance 5b43d631-91e1-4384-9b87-93283b3ae958 cannot be rescued: Driver Error:\n\tscreen-n-cpu.log:2014-04-19 21:56:29.524 ERROR oslo.messaging._drivers.common [req-d3128aae-9558-4f4b-adc4-b75b092a3acb demo demo] Returning exception Instance 5b43d631-91e1-4384-9b87-93283b3ae958 cannot be rescued: Driver Error:  to caller\n\tscreen-n-cpu.log:2014-04-19 21:56:29.524 ERROR oslo.messaging._drivers.common [req-d3128aae-9558-4f4b-adc4-b75b092a3acb demo demo] ['Traceback (most recent call last):\\n', '  File \"/usr/local/lib/python2.7/dist-packages/oslo/messaging/rpc/dispatcher.py\", line 133, in _dispatch_and_reply\\n    incoming.message))\\n', '  File \"/usr/local/lib/python2.7/dist-packages/oslo/messaging/rpc/dispatcher.py\", line 176, in _dispatch\\n    return self._do_dispatch(endpoint, method, ctxt, args)\\n', '  File \"/usr/local/lib/python2.7/dist-packages/oslo/messaging/rpc/dispatcher.py\", line 122, in _do_dispatch\\n    result = getattr(endpoint, method)(ctxt, **new_args)\\n', '  File \"/opt/stack/nova/nova/compute/manager.py\", line 395, in decorated_function\\n    return function(self, context, *args, **kwargs)\\n', '  File \"/opt/stack/nova/nova/exception.py\", line 88, in wrapped\\n    payload)\\n', '  File \"/opt/stack/nova/nova/openstack/common/excutils.py\", line 82, in __exit__\\n    six.reraise(self.type_, self.value, self.tb)\\n', '  File \"/opt/stack/nova/nova/exception.py\", line 71, in wrapped\\n    return f(self, context, *args, **kw)\\n', '  File \"/opt/stack/nova/nova/compute/manager.py\", line 276, in decorated_function\\n    pass\\n', '  File \"/opt/stack/nova/nova/openstack/common/excutils.py\", line 82, in __exit__\\n    six.reraise(self.type_, self.value, self.tb)\\n', '  File \"/opt/stack/nova/nova/compute/manager.py\", line 262, in decorated_function\\n    return function(self, context, *args, **kwargs)\\n', '  File \"/opt/stack/nova/nova/compute/manager.py\", line 329, in decorated_function\\n    function(self, context, *args, **kwargs)\\n', '  File \"/opt/stack/nova/nova/compute/manager.py\", line 2984, in rescue_instance\\n\n\t   reason=_(\"Driver Error: %s\") % unicode(e))\\n', 'InstanceNotRescuable: Instance 5b43d631-91e1-4384-9b87-93283b3ae958 cannot be rescued: Driver Error: \\n'])", 
    "tags": [
        "ironic", 
        "nova-driver"
    ], 
    "importance": "Undecided", 
    "heat": 10, 
    "link": "https://bugs.launchpad.net/nova/+bug/1310131", 
    "owner": "None", 
    "id": 1310131, 
    "index": 6052, 
    "openned": "2014-09-11 12:10:04.218560+00:00", 
    "created": "2014-04-19 23:51:52.841763+00:00", 
    "title": "Some non-supported actions in Ironic nova driver do not return errors to the user", 
    "comments": [
        {
            "content": "While performing checking Nova API actions that I expected to fail when testing with the Ironic driver, I noticed in some cases a positive response is returned, but the action fails within the compute process when the action is attempted to be executed. When working with other drivers, I expect to see some time of immediate response from the initial request stating that the action isn't possible. The actions I've specifically verified this with are:\n\n- Pause\n\n\t2014-04-19 21:47:30.940 ERROR oslo.messaging._drivers.common [req-10dedfe7-9fe2-4c0d-9a4e-a85abdd137df demo demo] ['Traceback (most recent call last):\\n', '  File \"/usr/local/lib/python2.7/dist-packages/oslo/messaging/rpc/dispatcher.py\", line 133, in _dispatch_and_reply\\n    incoming.message))\\n', '  File \"/usr/local/lib/python2.7/dist-packages/oslo/messaging/rpc/dispatcher.py\", line 176, in _dispatch\\n    return self._do_dispatch(endpoint, method, ctxt, args)\\n', '  File \"/usr/local/lib/python2.7/dist-packages/oslo/messaging/rpc/dispatcher.py\", line 122, in _do_dispatch\\n    result = getattr(endpoint, method)(ctxt, **new_args)\\n', '  File \"/opt/stack/nova/nova/exception.py\", line 88, in wrapped\\n    payload)\\n', '  File \"/opt/stack/nova/nova/openstack/common/excutils.py\", line 82, in __exit__\\n    six.reraise(self.type_, self.value, self.tb)\\n', '  File \"/opt/stack/nova/nova/exception.py\", line 71, in wrapped\\n    return f(self, context, *args, **kw)\\n', '  File \"/opt/stack/nova/nova/compute/manager.py\", line 276, in decorated_function\\n    pass\\n', '  File \"/opt/stack/nova/nova/openstack/common/excutils.py\", line 82, in __exit__\\n    six.reraise(self.type_, self.value, self.tb)\\n', '  File \"/opt/stack/nova/nova/compute/manager.py\", line 262, in decorated_function\\n\n\t    return function(self, context, *args, **kwargs)\\n', '  File \"/opt/stack/nova/nova/compute/manager.py\", line 329, in decorated_function\\n\n\t function(self, context, *args, **kwargs)\\n', '  File \"/opt/stack/nova/nova/compute/manager.py\", line 305, in decorated_function\\n    e, sys.exc_info())\\n', '  File \"/opt/stack/nova/nova/openstack/common/excutils.py\", line 82, in __exit__\\n    six.reraise(self.type_, self.value, self.tb)\\n', '  File \"/opt/stack/nova/nova/compute/manager.py\", line 292, in decorated_function\\n    return function(self, context, *args, **kwargs)\\n', '  File \"/opt/stack/nova/nova/compute/manager.py\", line 3659, in pause_instance\\n    self.driver.pause(instance)\\n', '  File \"/opt/stack/nova/nova/virt/driver.py\", line 521, in pause\\n    raise NotImplementedError()\\n', 'NotImplementedError\\n']\n\n- Rescue\n\n\tscreen-n-cpu.log:2014-04-19 21:56:29.518 DEBUG ironicclient.common.http [req-d3128aae-9558-4f4b-adc4-b75b092a3acb demo demo]\n\tscreen-n-cpu.log:2014-04-19 21:56:29.523 ERROR oslo.messaging.rpc.dispatcher [req-d3128aae-9558-4f4b-adc4-b75b092a3acb demo demo] Exception during message handling: Instance 5b43d631-91e1-4384-9b87-93283b3ae958 cannot be rescued: Driver Error:\n\tscreen-n-cpu.log:2014-04-19 21:56:29.524 ERROR oslo.messaging._drivers.common [req-d3128aae-9558-4f4b-adc4-b75b092a3acb demo demo] Returning exception Instance 5b43d631-91e1-4384-9b87-93283b3ae958 cannot be rescued: Driver Error:  to caller\n\tscreen-n-cpu.log:2014-04-19 21:56:29.524 ERROR oslo.messaging._drivers.common [req-d3128aae-9558-4f4b-adc4-b75b092a3acb demo demo] ['Traceback (most recent call last):\\n', '  File \"/usr/local/lib/python2.7/dist-packages/oslo/messaging/rpc/dispatcher.py\", line 133, in _dispatch_and_reply\\n    incoming.message))\\n', '  File \"/usr/local/lib/python2.7/dist-packages/oslo/messaging/rpc/dispatcher.py\", line 176, in _dispatch\\n    return self._do_dispatch(endpoint, method, ctxt, args)\\n', '  File \"/usr/local/lib/python2.7/dist-packages/oslo/messaging/rpc/dispatcher.py\", line 122, in _do_dispatch\\n    result = getattr(endpoint, method)(ctxt, **new_args)\\n', '  File \"/opt/stack/nova/nova/compute/manager.py\", line 395, in decorated_function\\n    return function(self, context, *args, **kwargs)\\n', '  File \"/opt/stack/nova/nova/exception.py\", line 88, in wrapped\\n    payload)\\n', '  File \"/opt/stack/nova/nova/openstack/common/excutils.py\", line 82, in __exit__\\n    six.reraise(self.type_, self.value, self.tb)\\n', '  File \"/opt/stack/nova/nova/exception.py\", line 71, in wrapped\\n    return f(self, context, *args, **kw)\\n', '  File \"/opt/stack/nova/nova/compute/manager.py\", line 276, in decorated_function\\n    pass\\n', '  File \"/opt/stack/nova/nova/openstack/common/excutils.py\", line 82, in __exit__\\n    six.reraise(self.type_, self.value, self.tb)\\n', '  File \"/opt/stack/nova/nova/compute/manager.py\", line 262, in decorated_function\\n    return function(self, context, *args, **kwargs)\\n', '  File \"/opt/stack/nova/nova/compute/manager.py\", line 329, in decorated_function\\n    function(self, context, *args, **kwargs)\\n', '  File \"/opt/stack/nova/nova/compute/manager.py\", line 2984, in rescue_instance\\n\n\t   reason=_(\"Driver Error: %s\") % unicode(e))\\n', 'InstanceNotRescuable: Instance 5b43d631-91e1-4384-9b87-93283b3ae958 cannot be rescued: Driver Error: \\n'])", 
            "date_created": "2014-04-19 23:51:52.841763+00:00", 
            "author": "https://api.launchpad.net/1.0/~dwalleck"
        }, 
        {
            "content": "I'm trying to understand what the expected behavior for this should be. So currently, we see a NotImplementedError exception being thrown whenever an unsupported action is attempted.\n\nI believe this is the proper way to handle such an exception. However, I'd suggest a message be included with the exception (ie: \"pause not supported by the Ironic nova driver\"). This is what vmware does for pause.\n\nOtherwise, are you suggesting that an error message be delivered to the client? For example, when using python-novaclient:\n\n~$ nova pause <instance-id>\nAction not supported by Ironic nova driver.\n\nIf so, this would probably require a patch in novaclient. Let me know your thoughts, thanks!", 
            "date_created": "2015-01-07 16:51:19.237291+00:00", 
            "author": "https://api.launchpad.net/1.0/~mjturek"
        }, 
        {
            "content": "I believe we should be issuing the error all the way back to the user in these cases. It's probably a 400 error with a json payload that explains that it's not supported. \n\nThe client could then translate it to a user friendly message.", 
            "date_created": "2015-01-07 20:57:52.941080+00:00", 
            "author": "https://api.launchpad.net/1.0/~sdague"
        }, 
        {
            "content": "Fix proposed to branch: master\nReview: https://review.openstack.org/243258", 
            "date_created": "2015-11-09 18:52:27.138135+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "This is related to https://bugs.launchpad.net/nova/+bug/1483639\n\nWe've talked about making capabilities discoverable for a given hypervisor or instance, and I think that's what we need here to be able to determine at the API level if a call is acceptable or not.", 
            "date_created": "2016-02-18 01:43:13.086953+00:00", 
            "author": "https://api.launchpad.net/1.0/~jim-rollenhagen"
        }, 
        {
            "content": "Change abandoned by Michael Still (<email address hidden>) on branch: master\nReview: https://review.openstack.org/243258\nReason: This patch has been idle for a long time, so I am abandoning it to keep the review clean sane. If you're interested in still working on this patch, then please unabandon it and upload a new patchset.", 
            "date_created": "2016-05-26 20:08:39.069769+00:00", 
            "author": "https://api.launchpad.net/1.0/~hudson-openstack"
        }, 
        {
            "content": "\nThis is an automated cleanup. This bug report has been closed because it\nis older than 18 months and there is no open code change to fix this.\nAfter this time it is unlikely that the circumstances which lead to\nthe observed issue can be reproduced.\n\nIf you can reproduce the bug, please:\n* reopen the bug report (set to status \"New\")\n* AND add the detailed steps to reproduce the issue (if applicable)\n* AND leave a comment \"CONFIRMED FOR: <RELEASE_NAME>\"\n  Only still supported release names are valid (LIBERTY, MITAKA, OCATA, NEWTON).\n  Valid example: CONFIRMED FOR: LIBERTY\n", 
            "date_created": "2016-07-05 09:52:37.377278+00:00", 
            "author": "https://api.launchpad.net/1.0/~mzoeller"
        }, 
        {
            "content": "Yes, this is still an issue, but it has to be fixed by a major feature update (capabilities) to Nova, so there's no Ironic action/code to fix. Therefore marking this invalid against Ironic.", 
            "date_created": "2016-12-05 20:25:37.582430+00:00", 
            "author": "https://api.launchpad.net/1.0/~jason-oldos"
        }
    ], 
    "closed": "2016-07-05 09:52:33.814202+00:00"
}